uint64_t sub_1834DA6A8(void (*a1)(uint64_t *))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;

  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = *((unsigned char *)v1 + 32);
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[9];
  v23 = *v1;
  v24 = v3;
  v25 = v4;
  v26 = v5;
  v27 = v6;
  v28 = v7;
  v29 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a1(&v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = (uint64_t *)(v9 + 16);
  swift_retain();
  result = swift_beginAccess();
  v12 = *(void *)(v9 + 16);
  v13 = *(void *)(v12 + 16);
  if (!v13) {
    return swift_release();
  }
  v14 = 0;
  v15 = 0;
  while (v15 < v13)
  {
    ++v15;
    v16 = v12 + v14;
    v17 = *(void *)(v16 + 72);
    v18 = *(void *)(v16 + 80);
    v19 = *(unsigned char *)(v16 + 64);
    v20 = *(void *)(v16 + 48);
    v21 = *(void *)(v16 + 56);
    v22 = *(void *)(v16 + 40);
    v23 = *(void *)(v16 + 32);
    v24 = v22;
    v25 = v20;
    v26 = v21;
    v27 = v19;
    v28 = v17;
    v29 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1(&v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v12 = *v10;
    v13 = *(void *)(*v10 + 16);
    v14 += 64;
    if (v15 == v13) {
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1834DA818()
{
  unint64_t v1 = *(void *)(v0 + 8);
  uint64_t v32 = *(void *)v0;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  unint64_t v5 = *(void *)(v0 + 40);
  unint64_t v6 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 56);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v29 = *(void *)(v0 + 72);
  uint64_t v46 = MEMORY[0x1E4FBC860];
  sub_18355A1FC(0x312E312F50545448, 0xE900000000000020);
  if (sub_1834BF534(v5, v6))
  {
    unint64_t v33 = v5;
    unint64_t v34 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_1834DB1E4((uint64_t *)&v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1835A3DE0(v5, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_18355A1FC(32, 0xE100000000000000);
  unint64_t v33 = v32;
  unint64_t v34 = v1;
  uint64_t v35 = v3;
  uint64_t v36 = v2;
  char v37 = v4;
  unint64_t v38 = v5;
  unint64_t v39 = v6;
  uint64_t v40 = v8;
  uint64_t v41 = v7;
  uint64_t v42 = v29;
  HTTPResponse.status.getter(&v43);
  unint64_t v10 = v44;
  unint64_t v9 = v45;
  if (sub_1834BF534(v44, v45))
  {
    unint64_t v33 = v10;
    unint64_t v34 = v9;
    swift_bridgeObjectRetain();
    sub_1834DB1E4((uint64_t *)&v33);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1835A3DE0(v10, v9);
  }
  swift_bridgeObjectRelease();
  sub_18355A1FC(2573, 0xE200000000000000);
  swift_retain();
  v30 = (uint64_t *)(v29 + 16);
  swift_beginAccess();
  uint64_t v11 = *(void *)(v29 + 16);
  unint64_t v12 = *(void *)(v11 + 16);
  if (!v12)
  {
LABEL_38:
    swift_release();
    sub_18355A1FC(2573, 0xE200000000000000);
    return v46;
  }
  unint64_t v13 = 0;
LABEL_11:
  if (v13 < v12)
  {
    v14 = (void *)(v11 + (v13 << 6));
    unint64_t v16 = v14[9];
    unint64_t v15 = v14[10];
    unint64_t v31 = v13 + 1;
    uint64_t v18 = v14[4];
    unint64_t v17 = v14[5];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_18355A1FC(v18, v17);
    sub_18355A1FC(8250, 0xE200000000000000);
    if ((v15 & 0x2000000000000000) != 0) {
      unint64_t v19 = HIBYTE(v15) & 0xF;
    }
    else {
      unint64_t v19 = v16 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v20 = (v16 >> 59) & 1;
    if ((v15 & 0x1000000000000000) == 0) {
      LOBYTE(v20) = 1;
    }
    uint64_t v21 = 4 << v20;
    unint64_t v22 = 15;
    while (1)
    {
      while (1)
      {
        if (4 * v19 == v22 >> 14)
        {
          unint64_t v43 = v16;
          unint64_t v44 = v15;
          swift_bridgeObjectRetain();
          sub_1834DB1E4((uint64_t *)&v43);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_10:
          swift_bridgeObjectRelease();
          unint64_t v13 = v31;
          sub_18355A1FC(2573, 0xE200000000000000);
          swift_beginAccess();
          uint64_t v11 = *v30;
          unint64_t v12 = *(void *)(*v30 + 16);
          if (v31 == v12) {
            goto LABEL_38;
          }
          goto LABEL_11;
        }
        unint64_t v23 = v22 & 0xC;
        unint64_t v24 = v22;
        if (v23 == v21) {
          unint64_t v24 = sub_183520284(v22, v16, v15);
        }
        unint64_t v25 = v24 >> 16;
        if (v24 >> 16 >= v19)
        {
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        if ((v15 & 0x1000000000000000) == 0) {
          break;
        }
        char v27 = sub_183D44CFC();
        if (v23 == v21) {
          goto LABEL_35;
        }
LABEL_30:
        if ((v15 & 0x1000000000000000) == 0) {
          goto LABEL_18;
        }
LABEL_31:
        if (v19 <= v22 >> 16) {
          goto LABEL_40;
        }
        unint64_t v22 = sub_183D44CBC();
        if (v27 < 0)
        {
LABEL_9:
          sub_1835A3DE0(v16, v15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
      }
      if ((v15 & 0x2000000000000000) != 0)
      {
        unint64_t v43 = v16;
        unint64_t v44 = v15 & 0xFFFFFFFFFFFFFFLL;
        char v27 = *((unsigned char *)&v43 + v25);
        if (v23 == v21) {
          goto LABEL_35;
        }
        goto LABEL_30;
      }
      uint64_t v26 = (v15 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((v16 & 0x1000000000000000) == 0) {
        uint64_t v26 = sub_183D4557C();
      }
      char v27 = *(unsigned char *)(v26 + v25);
      if (v23 != v21) {
        goto LABEL_30;
      }
LABEL_35:
      unint64_t v22 = sub_183520284(v22, v16, v15);
      if ((v15 & 0x1000000000000000) != 0) {
        goto LABEL_31;
      }
LABEL_18:
      unint64_t v22 = (v22 & 0xFFFFFFFFFFFF0000) + 65540;
      if (v27 < 0) {
        goto LABEL_9;
      }
    }
  }
LABEL_41:
  __break(1u);
  swift_bridgeObjectRelease();
  __break(1u);
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1834DACB0(void (*a1)(void *))
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 16;
  swift_retain();
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *(void *)(v3 + 16);
  unint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    return swift_release();
  }
  uint64_t v8 = 0;
  unint64_t v9 = 0;
  while (v9 < v7)
  {
    ++v9;
    uint64_t v10 = v6 + v8;
    uint64_t v11 = *(void *)(v10 + 72);
    uint64_t v12 = *(void *)(v10 + 80);
    char v13 = *(unsigned char *)(v10 + 64);
    uint64_t v14 = *(void *)(v10 + 48);
    uint64_t v15 = *(void *)(v10 + 56);
    uint64_t v16 = *(void *)(v10 + 40);
    v17[0] = *(void *)(v10 + 32);
    v17[1] = v16;
    v17[2] = v14;
    v17[3] = v15;
    char v18 = v13;
    uint64_t v19 = v11;
    uint64_t v20 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v6 = *(void *)v4;
    unint64_t v7 = *(void *)(*(void *)v4 + 16);
    v8 += 64;
    if (v9 == v7) {
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1834DADC4()
{
  uint64_t v1 = *v0;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  swift_retain();
  uint64_t v20 = (uint64_t *)(v1 + 16);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v2 + 16);
  if (!v3)
  {
LABEL_32:
    swift_release();
    sub_18355A1FC(2573, 0xE200000000000000);
    return v24;
  }
  unint64_t v4 = 0;
LABEL_5:
  if (v4 < v3)
  {
    unint64_t v5 = (void *)(v2 + (v4 << 6));
    unint64_t v7 = v5[9];
    unint64_t v6 = v5[10];
    unint64_t v21 = v4 + 1;
    uint64_t v9 = v5[4];
    unint64_t v8 = v5[5];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_18355A1FC(v9, v8);
    sub_18355A1FC(8250, 0xE200000000000000);
    if ((v6 & 0x2000000000000000) != 0) {
      unint64_t v10 = HIBYTE(v6) & 0xF;
    }
    else {
      unint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v11 = (v7 >> 59) & 1;
    if ((v6 & 0x1000000000000000) == 0) {
      LOBYTE(v11) = 1;
    }
    uint64_t v12 = 4 << v11;
    unint64_t v13 = 15;
    while (1)
    {
      while (1)
      {
        if (4 * v10 == v13 >> 14)
        {
          unint64_t v22 = v7;
          uint64_t v23 = v6;
          swift_bridgeObjectRetain();
          sub_1834DB1E4((uint64_t *)&v22);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_4:
          swift_bridgeObjectRelease();
          sub_18355A1FC(2573, 0xE200000000000000);
          swift_beginAccess();
          uint64_t v2 = *v20;
          unint64_t v3 = *(void *)(*v20 + 16);
          unint64_t v4 = v21;
          if (v21 == v3) {
            goto LABEL_32;
          }
          goto LABEL_5;
        }
        unint64_t v14 = v13 & 0xC;
        unint64_t v15 = v13;
        if (v14 == v12) {
          unint64_t v15 = sub_183520284(v13, v7, v6);
        }
        unint64_t v16 = v15 >> 16;
        if (v15 >> 16 >= v10)
        {
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        if ((v6 & 0x1000000000000000) == 0) {
          break;
        }
        char v18 = sub_183D44CFC();
        if (v14 == v12) {
          goto LABEL_29;
        }
LABEL_24:
        if ((v6 & 0x1000000000000000) == 0) {
          goto LABEL_12;
        }
LABEL_25:
        if (v10 <= v13 >> 16) {
          goto LABEL_34;
        }
        unint64_t v13 = sub_183D44CBC();
        if (v18 < 0)
        {
LABEL_3:
          sub_1835A3DE0(v7, v6);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
      }
      if ((v6 & 0x2000000000000000) != 0)
      {
        unint64_t v22 = v7;
        uint64_t v23 = v6 & 0xFFFFFFFFFFFFFFLL;
        char v18 = *((unsigned char *)&v22 + v16);
        if (v14 == v12) {
          goto LABEL_29;
        }
        goto LABEL_24;
      }
      uint64_t v17 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((v7 & 0x1000000000000000) == 0) {
        uint64_t v17 = sub_183D4557C();
      }
      char v18 = *(unsigned char *)(v17 + v16);
      if (v14 != v12) {
        goto LABEL_24;
      }
LABEL_29:
      unint64_t v13 = sub_183520284(v13, v7, v6);
      if ((v6 & 0x1000000000000000) != 0) {
        goto LABEL_25;
      }
LABEL_12:
      unint64_t v13 = (v13 & 0xFFFFFFFFFFFF0000) + 65540;
      if (v18 < 0) {
        goto LABEL_3;
      }
    }
  }
LABEL_35:
  __break(1u);
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1834DB0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1834DB0F8(a1, a2, a3, a4, (uint64_t)sub_1834DB29C);
}

uint64_t sub_1834DB0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1834DB0F8(a1, a2, a3, a4, (uint64_t)sub_1834DB294);
}

uint64_t sub_1834DB0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[2] = a1;
  v6[3] = a2;
  return (*(uint64_t (**)(uint64_t, void *))(a4 + 8))(a5, v6);
}

uint64_t sub_1834DB134(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  v8[0] = *(void *)(a1 + 16);
  v8[1] = v3;
  swift_bridgeObjectRetain();
  sub_183D44C8C();
  uint64_t v5 = v8[0];
  uint64_t v6 = sub_183D44C5C();
  LOBYTE(v8[0]) = v4;
  a2(v5, v3, v6, v8);

  return swift_bridgeObjectRelease();
}

char *sub_1834DB1E4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  if ((v2 & 0x1000000000000000) == 0)
  {
    if ((v2 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    char v4 = (char *)(HIBYTE(v2) & 0xF);
    v9[0] = v1;
    v9[1] = v2 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v3 = (char *)v9;
    return sub_183559FE4(v3, v4);
  }
  uint64_t v1 = sub_18359979C();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  *a1 = v1;
  a1[1] = v7;
  unint64_t v2 = v7;
  if ((v7 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v1 & 0x1000000000000000) != 0)
  {
    uint64_t v3 = (char *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    char v4 = (char *)(v1 & 0xFFFFFFFFFFFFLL);
  }
  else
  {
    uint64_t v3 = (char *)sub_183D4557C();
  }
  return sub_183559FE4(v3, v4);
}

uint64_t sub_1834DB294(uint64_t a1)
{
  return sub_1834DB134(a1, *(void (**)(uint64_t, uint64_t, uint64_t, void *))(v1 + 16));
}

uint64_t sub_1834DB29C(uint64_t a1)
{
  unint64_t v2 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *))(v1 + 16);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  char v8 = *(unsigned char *)(a1 + 32);
  return v2(v4, v3, v5, v6, &v8);
}

uint64_t sub_1834DB2E4(uint64_t a1)
{
  return sub_1834DCC68(a1, (uint64_t (*)(void))nw_protocol_copy_quic_definition, &qword_1E8F62E60);
}

uint64_t static NWProtocolQUIC.definition.getter()
{
  return sub_1830DC99C(&qword_1E8F62060);
}

BOOL sub_1834DB328(NSObject *a1)
{
  return nw_protocol_options_is_quic(a1);
}

uint64_t NWProtocolQUIC.Options.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = nw_quic_create_options();
  return v0;
}

uint64_t NWProtocolQUIC.Options.init()()
{
  *(void *)(v0 + 16) = nw_quic_create_options();
  return v0;
}

uint64_t sub_1834DB3A0(uint64_t a1)
{
  sub_1834DE004(a1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1834DB3D8()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC860];
  unint64_t v2 = (uint64_t *)(v1 + 16);
  uint64_t v3 = *(void **)(v0 + 16);
  v7[4] = sub_1834DE0A8;
  v7[5] = v1;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 1107296256;
  v7[2] = sub_1834DB5D4;
  v7[3] = &block_descriptor_2;
  uint64_t v4 = _Block_copy(v7);
  swift_retain();
  swift_release();
  nw_quic_iterate_tls_application_protocols(v3, v4);
  _Block_release(v4);
  swift_beginAccess();
  uint64_t v5 = *v2;
  swift_bridgeObjectRetain();
  swift_release();
  return v5;
}

uint64_t sub_1834DB4F0(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    unint64_t v2 = (void **)(a2 + 16);
    uint64_t v3 = sub_183D44C9C();
    uint64_t v5 = v4;
    swift_beginAccess();
    uint64_t v6 = *v2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *unint64_t v2 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v6 = sub_1834B423C(0, v6[2] + 1, 1, v6);
      *unint64_t v2 = v6;
    }
    unint64_t v9 = v6[2];
    unint64_t v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      uint64_t v6 = sub_1834B423C((void *)(v8 > 1), v9 + 1, 1, v6);
      *unint64_t v2 = v6;
    }
    v6[2] = v9 + 1;
    unint64_t v10 = &v6[2 * v9];
    v10[4] = v3;
    v10[5] = v5;
    swift_endAccess();
  }
  return 1;
}

uint64_t sub_1834DB5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  LOBYTE(a2) = v3(a2);
  swift_release();
  return a2 & 1;
}

void (*sub_1834DB624(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v5 = (uint64_t *)(v4 + 16);
  uint64_t v6 = *(void **)(v1 + 16);
  v3[7] = v6;
  v3[4] = sub_1834DE0A8;
  v3[5] = v4;
  *uint64_t v3 = MEMORY[0x1E4F143A8];
  v3[1] = 1107296256;
  v3[2] = sub_1834DB5D4;
  v3[3] = &block_descriptor_5;
  uint64_t v7 = _Block_copy(v3);
  swift_retain();
  swift_release();
  nw_quic_iterate_tls_application_protocols(v6, v7);
  _Block_release(v7);
  swift_beginAccess();
  uint64_t v8 = *v5;
  swift_bridgeObjectRetain();
  swift_release();
  v3[6] = v8;
  return sub_1834DB76C;
}

void sub_1834DB76C(uint64_t a1, char a2)
{
  unint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 48);
  uint64_t v4 = *(void **)(*(void *)a1 + 56);
  if (a2)
  {
    swift_bridgeObjectRetain();
    nw_quic_clear_tls_application_protocols(v4);
    uint64_t v5 = *(void *)(v3 + 16);
    if (v5)
    {
      uint64_t v6 = v3 + 40;
      do
      {
        uint64_t v7 = v2[7];
        uint64_t v8 = sub_183D44BAC();
        nw_quic_add_tls_application_protocol(v7, (const char *)(v8 + 32));
        swift_release();
        v6 += 16;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    nw_quic_clear_tls_application_protocols(*(void **)(*(void *)a1 + 56));
    uint64_t v9 = *(void *)(v3 + 16);
    if (v9)
    {
      uint64_t v10 = v3 + 40;
      do
      {
        uint64_t v11 = v2[7];
        uint64_t v12 = sub_183D44BAC();
        nw_quic_add_tls_application_protocol(v11, (const char *)(v12 + 32));
        swift_release();
        v10 += 16;
        --v9;
      }
      while (v9);
    }
  }
  swift_bridgeObjectRelease();

  free(v2);
}

BOOL static NWProtocolQUIC.Options.Direction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t NWProtocolQUIC.Options.Direction.hash(into:)()
{
  return sub_183D45B0C();
}

void sub_1834DB8C0(BOOL *a1)
{
  nw_quic_set_stream_is_unidirectional(*(nw_protocol_options_t *)(v1 + 16), *a1);
}

BOOL sub_1834DB8CC@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = nw_quic_get_stream_is_unidirectional(*(nw_protocol_options_t *)(v1 + 16));
  *a1 = result;
  return result;
}

void (*sub_1834DB8F8(uint64_t a1))(uint64_t a1)
{
  uint64_t v3 = *(NSObject **)(v1 + 16);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = nw_quic_get_stream_is_unidirectional(v3);
  return sub_1834DB944;
}

void sub_1834DB944(uint64_t a1)
{
}

void sub_1834DB954(char a1)
{
  nw_quic_set_stream_is_datagram(*(nw_protocol_options_t *)(v1 + 16), a1 & 1);
}

BOOL sub_1834DB964()
{
  return nw_quic_get_stream_is_datagram(*(nw_protocol_options_t *)(v0 + 16));
}

void (*sub_1834DB980(uint64_t a1))(uint64_t a1)
{
  uint64_t v3 = *(NSObject **)(v1 + 16);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = nw_quic_get_stream_is_datagram(v3);
  return sub_1834DB9CC;
}

void sub_1834DB9CC(uint64_t a1)
{
}

sec_protocol_options_t sub_1834DB9DC()
{
  return nw_quic_copy_sec_protocol_options(*(nw_protocol_options_t *)(v0 + 16));
}

void sub_1834DB9E4(uint64_t a1)
{
  uint64_t v2 = 0xFFFFFFFFLL;
  if (a1 < 0xFFFFFFFFLL) {
    uint64_t v2 = a1;
  }
  nw_quic_set_idle_timeout(*(nw_protocol_options_t *)(v1 + 16), v2 & ~(v2 >> 63));
}

uint64_t sub_1834DBA04()
{
  return nw_quic_get_idle_timeout(*(nw_protocol_options_t *)(v0 + 16));
}

void (*sub_1834DBA24(void *a1))(uint64_t a1)
{
  uint64_t v3 = *(NSObject **)(v1 + 16);
  a1[1] = v3;
  *a1 = nw_quic_get_idle_timeout(v3);
  return sub_1834DBA74;
}

void sub_1834DBA74(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  if (*(uint64_t *)a1 >= 0xFFFFFFFFLL) {
    uint64_t v1 = 0xFFFFFFFFLL;
  }
  nw_quic_set_idle_timeout(*(nw_protocol_options_t *)(a1 + 8), v1 & ~(v1 >> 63));
}

void sub_1834DBA94(uint64_t a1)
{
  uint64_t v2 = 0xFFFFLL;
  if (a1 < 0xFFFF) {
    uint64_t v2 = a1;
  }
  nw_quic_set_max_udp_payload_size(*(nw_protocol_options_t *)(v1 + 16), v2 & ~(unsigned __int16)(v2 >> 63));
}

uint64_t sub_1834DBAB4()
{
  return nw_quic_get_max_udp_payload_size(*(nw_protocol_options_t *)(v0 + 16));
}

void (*sub_1834DBAD4(void *a1))(uint64_t a1)
{
  uint64_t v3 = *(NSObject **)(v1 + 16);
  a1[1] = v3;
  *a1 = nw_quic_get_max_udp_payload_size(v3);
  return sub_1834DBB24;
}

void sub_1834DBB24(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  if (*(uint64_t *)a1 >= 0xFFFF) {
    uint64_t v1 = 0xFFFFLL;
  }
  nw_quic_set_max_udp_payload_size(*(nw_protocol_options_t *)(a1 + 8), v1 & ~(unsigned __int16)(v1 >> 63));
}

uint64_t sub_1834DBB44(uint64_t a1)
{
  return sub_1834DDC54(a1, (uint64_t (*)(uint64_t, uint64_t))nw_quic_set_initial_max_data);
}

uint64_t sub_1834DBB5C()
{
  return sub_1834DDC08((uint64_t (*)(void))nw_quic_get_initial_max_data);
}

uint64_t sub_1834DBB74(uint64_t *a1)
{
  uint64_t v3 = *(NSObject **)(v1 + 16);
  a1[1] = (uint64_t)v3;
  uint64_t result = nw_quic_get_initial_max_data(v3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *a1 = result;
    return (uint64_t)sub_1834DBBC8;
  }
  return result;
}

uint64_t sub_1834DBBC8(void *a1, uint64_t a2)
{
  return sub_1834DDB68(a1, a2, (uint64_t (*)(uint64_t))nw_quic_set_initial_max_data);
}

uint64_t sub_1834DBBE0(uint64_t a1)
{
  return sub_1834DDC54(a1, (uint64_t (*)(uint64_t, uint64_t))nw_quic_set_initial_max_stream_data_bidirectional_remote);
}

uint64_t sub_1834DBBF8()
{
  return sub_1834DDC08((uint64_t (*)(void))nw_quic_get_initial_max_stream_data_bidirectional_remote);
}

uint64_t sub_1834DBC10(uint64_t *a1)
{
  uint64_t v3 = *(NSObject **)(v1 + 16);
  a1[1] = (uint64_t)v3;
  uint64_t result = nw_quic_get_initial_max_stream_data_bidirectional_remote(v3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *a1 = result;
    return (uint64_t)sub_1834DBC64;
  }
  return result;
}

uint64_t sub_1834DBC64(void *a1, uint64_t a2)
{
  return sub_1834DDB68(a1, a2, (uint64_t (*)(uint64_t))nw_quic_set_initial_max_stream_data_bidirectional_remote);
}

uint64_t sub_1834DBC7C(uint64_t a1)
{
  return sub_1834DDC54(a1, (uint64_t (*)(uint64_t, uint64_t))nw_quic_set_initial_max_stream_data_bidirectional_local);
}

uint64_t sub_1834DBC94()
{
  return sub_1834DDC08((uint64_t (*)(void))nw_quic_get_initial_max_stream_data_bidirectional_local);
}

uint64_t sub_1834DBCAC(uint64_t *a1)
{
  uint64_t v3 = *(NSObject **)(v1 + 16);
  a1[1] = (uint64_t)v3;
  uint64_t result = nw_quic_get_initial_max_stream_data_bidirectional_local(v3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *a1 = result;
    return (uint64_t)sub_1834DBD00;
  }
  return result;
}

uint64_t sub_1834DBD00(void *a1, uint64_t a2)
{
  return sub_1834DDB68(a1, a2, (uint64_t (*)(uint64_t))nw_quic_set_initial_max_stream_data_bidirectional_local);
}

uint64_t sub_1834DBD18(uint64_t a1)
{
  return sub_1834DDC54(a1, (uint64_t (*)(uint64_t, uint64_t))nw_quic_set_initial_max_stream_data_unidirectional);
}

uint64_t sub_1834DBD30()
{
  return sub_1834DDC08((uint64_t (*)(void))nw_quic_get_initial_max_stream_data_unidirectional);
}

uint64_t sub_1834DBD48(uint64_t *a1)
{
  uint64_t v3 = *(NSObject **)(v1 + 16);
  a1[1] = (uint64_t)v3;
  uint64_t result = nw_quic_get_initial_max_stream_data_unidirectional(v3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *a1 = result;
    return (uint64_t)sub_1834DBD9C;
  }
  return result;
}

uint64_t sub_1834DBD9C(void *a1, uint64_t a2)
{
  return sub_1834DDB68(a1, a2, (uint64_t (*)(uint64_t))nw_quic_set_initial_max_stream_data_unidirectional);
}

uint64_t sub_1834DBDB4(uint64_t a1)
{
  return sub_1834DDC54(a1, (uint64_t (*)(uint64_t, uint64_t))nw_quic_set_initial_max_streams_bidirectional);
}

uint64_t sub_1834DBDCC()
{
  return sub_1834DDC08((uint64_t (*)(void))nw_quic_get_initial_max_streams_bidirectional);
}

uint64_t sub_1834DBDE4(uint64_t *a1)
{
  uint64_t v3 = *(NSObject **)(v1 + 16);
  a1[1] = (uint64_t)v3;
  uint64_t result = nw_quic_get_initial_max_streams_bidirectional(v3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *a1 = result;
    return (uint64_t)sub_1834DBE38;
  }
  return result;
}

uint64_t sub_1834DBE38(void *a1, uint64_t a2)
{
  return sub_1834DDB68(a1, a2, (uint64_t (*)(uint64_t))nw_quic_set_initial_max_streams_bidirectional);
}

uint64_t sub_1834DBE50(uint64_t a1)
{
  return sub_1834DDC54(a1, (uint64_t (*)(uint64_t, uint64_t))nw_quic_set_initial_max_streams_unidirectional);
}

uint64_t sub_1834DBE68()
{
  return sub_1834DDC08((uint64_t (*)(void))nw_quic_get_initial_max_streams_unidirectional);
}

uint64_t sub_1834DBE80(uint64_t *a1)
{
  uint64_t v3 = *(NSObject **)(v1 + 16);
  a1[1] = (uint64_t)v3;
  uint64_t result = nw_quic_get_initial_max_streams_unidirectional(v3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *a1 = result;
    return (uint64_t)sub_1834DBED4;
  }
  return result;
}

uint64_t sub_1834DBED4(void *a1, uint64_t a2)
{
  return sub_1834DDB68(a1, a2, (uint64_t (*)(uint64_t))nw_quic_set_initial_max_streams_unidirectional);
}

uint64_t sub_1834DBEEC(unint64_t a1)
{
  return sub_1834DC074(a1, (uint64_t (*)(uint64_t, uint64_t))nw_quic_set_max_datagram_frame_size);
}

uint64_t sub_1834DBF04()
{
  return nw_quic_get_max_datagram_frame_size(*(nw_protocol_options_t *)(v0 + 16));
}

uint64_t (*sub_1834DBF24(void *a1))(unint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(NSObject **)(v1 + 16);
  a1[1] = v3;
  *a1 = nw_quic_get_max_datagram_frame_size(v3);
  return sub_1834DBF74;
}

uint64_t sub_1834DBF74(unint64_t *a1, uint64_t a2)
{
  return sub_1834DC1CC(a1, a2, (uint64_t (*)(unint64_t, void))nw_quic_set_max_datagram_frame_size);
}

uint64_t sub_1834DBF8C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, void))
{
  unint64_t v5 = *a1;
  if ((*a1 & 0x8000000000000000) != 0 || v5 >= 0x10000)
  {
    uint64_t result = sub_183D456BC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(void *)(*(void *)a2 + 16);
    return a5(v6, (unsigned __int16)v5);
  }
  return result;
}

uint64_t sub_1834DC05C(unint64_t a1)
{
  return sub_1834DC074(a1, (uint64_t (*)(uint64_t, uint64_t))nw_quic_set_initial_packet_size);
}

uint64_t sub_1834DC074(unint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  if ((a1 & 0x8000000000000000) != 0 || a1 >= 0x10000)
  {
    uint64_t result = sub_183D456BC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = (unsigned __int16)a1;
    uint64_t v5 = *(void *)(v2 + 16);
    return a2(v5, v4);
  }
  return result;
}

uint64_t sub_1834DC144()
{
  return nw_quic_get_initial_packet_size(*(void **)(v0 + 16));
}

uint64_t (*sub_1834DC164(void *a1))(unint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(v1 + 16);
  a1[1] = v3;
  *a1 = nw_quic_get_initial_packet_size(v3);
  return sub_1834DC1B4;
}

uint64_t sub_1834DC1B4(unint64_t *a1, uint64_t a2)
{
  return sub_1834DC1CC(a1, a2, (uint64_t (*)(unint64_t, void))nw_quic_set_initial_packet_size);
}

uint64_t sub_1834DC1CC(unint64_t *a1, uint64_t a2, uint64_t (*a3)(unint64_t, void))
{
  unint64_t v3 = *a1;
  if ((*a1 & 0x8000000000000000) != 0 || v3 >= 0x10000)
  {
    uint64_t result = sub_183D456BC();
    __break(1u);
  }
  else
  {
    unint64_t v4 = a1[1];
    return a3(v4, (unsigned __int16)v3);
  }
  return result;
}

uint64_t NWProtocolQUIC.Options.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t NWProtocolQUIC.Options.__deallocating_deinit()
{
  return sub_1834DDF10();
}

uint64_t NWProtocolQUIC.ApplicationError.code.getter()
{
  return *(void *)v0;
}

uint64_t NWProtocolQUIC.ApplicationError.reason.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NWProtocolQUIC.ApplicationError.init(integerLiteral:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  a2[1] = 0;
  a2[2] = 0;
  *a2 = result;
  return result;
}

uint64_t NWProtocolQUIC.ApplicationError.init(code:reason:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t *sub_1834DC310@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *result;
  a2[1] = 0;
  a2[2] = 0;
  *a2 = v2;
  return result;
}

BOOL sub_1834DC320(NSObject *a1)
{
  return nw_protocol_metadata_is_quic(a1);
}

sec_protocol_metadata_t sub_1834DC338()
{
  return nw_quic_copy_sec_protocol_metadata(*(nw_protocol_metadata_t *)(v0 + 16));
}

uint64_t sub_1834DC340()
{
  uint64_t v1 = nw_quic_copy_sec_protocol_metadata(*(nw_protocol_metadata_t *)(v0 + 16));
  negotiated_protocol = sec_protocol_metadata_get_negotiated_protocol(v1);
  swift_unknownObjectRelease();
  if (negotiated_protocol) {
    return sub_183D44C9C();
  }
  else {
    return 0;
  }
}

uint64_t sub_1834DC390()
{
  return nw_quic_get_stream_id(*(nw_protocol_metadata_t *)(v0 + 16));
}

uint64_t sub_1834DC398()
{
  return sub_1834DDC08((uint64_t (*)(void))nw_quic_get_remote_idle_timeout);
}

uint64_t sub_1834DC3B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3 = *(NSObject **)(*(void *)a1 + 16);
  uint64_t application_error = nw_quic_get_application_error(v3);
  uint64_t result = (uint64_t)nw_quic_get_application_error_reason(v3);
  if (result) {
    uint64_t result = sub_183D44C9C();
  }
  else {
    unint64_t v6 = 0xE000000000000000;
  }
  *a2 = application_error;
  a2[1] = result;
  a2[2] = v6;
  return result;
}

uint64_t sub_1834DC40C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *(NSObject **)(*(void *)a2 + 16);
  if (a1[2]) {
    unint64_t v4 = (const char *)(sub_183D44BAC() + 32);
  }
  else {
    unint64_t v4 = 0;
  }
  swift_bridgeObjectRetain();
  nw_quic_set_application_error(v3, v2, v4);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_1834DC4A0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *(NSObject **)(v1 + 16);
  if (a1[2]) {
    unint64_t v4 = (const char *)(sub_183D44BAC() + 32);
  }
  else {
    unint64_t v4 = 0;
  }
  nw_quic_set_application_error(v3, v2, v4);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_1834DC524@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v3 = *(NSObject **)(v1 + 16);
  uint64_t application_error = nw_quic_get_application_error(v3);
  uint64_t result = (uint64_t)nw_quic_get_application_error_reason(v3);
  if (result) {
    uint64_t result = sub_183D44C9C();
  }
  else {
    unint64_t v6 = 0xE000000000000000;
  }
  *a1 = application_error;
  a1[1] = result;
  a1[2] = v6;
  return result;
}

uint64_t (*sub_1834DC57C(uint64_t *a1))(uint64_t a1, char a2)
{
  unint64_t v3 = *(NSObject **)(v1 + 16);
  a1[3] = (uint64_t)v3;
  uint64_t application_error = nw_quic_get_application_error(v3);
  uint64_t application_error_reason = (uint64_t)nw_quic_get_application_error_reason(v3);
  if (application_error_reason) {
    uint64_t application_error_reason = sub_183D44C9C();
  }
  else {
    unint64_t v6 = 0xE000000000000000;
  }
  *a1 = application_error;
  a1[1] = application_error_reason;
  a1[2] = v6;
  return sub_1834DC5F4;
}

uint64_t sub_1834DC5F4(uint64_t a1, char a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 16);
  if (a2)
  {
    if (v4) {
      uint64_t v5 = (const char *)(sub_183D44BAC() + 32);
    }
    else {
      uint64_t v5 = 0;
    }
    uint64_t v7 = *(NSObject **)(a1 + 24);
    swift_bridgeObjectRetain();
    nw_quic_set_application_error(v7, v3, v5);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v4) {
      unint64_t v6 = (const char *)(sub_183D44BAC() + 32);
    }
    else {
      unint64_t v6 = 0;
    }
    nw_quic_set_application_error(*(nw_protocol_metadata_t *)(a1 + 24), v3, v6);
    swift_unknownObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

void sub_1834DC6D0(uint64_t application_error)
{
  nw_quic_set_stream_application_error(*(nw_protocol_metadata_t *)(v1 + 16), application_error);
}

uint64_t sub_1834DC6DC()
{
  return nw_quic_get_stream_application_error(*(nw_protocol_metadata_t *)(v0 + 16));
}

void (*sub_1834DC6E4(uint64_t *a1))(uint64_t a1)
{
  uint64_t v3 = *(NSObject **)(v1 + 16);
  a1[1] = (uint64_t)v3;
  *a1 = nw_quic_get_stream_application_error(v3);
  return sub_1834DC730;
}

void sub_1834DC730(uint64_t a1)
{
}

uint64_t sub_1834DC73C(uint64_t a1)
{
  return sub_1834DDC54(a1, (uint64_t (*)(uint64_t, uint64_t))nw_quic_set_local_max_streams_unidirectional);
}

uint64_t sub_1834DC754()
{
  return sub_1834DDC08((uint64_t (*)(void))nw_quic_get_local_max_streams_unidirectional);
}

uint64_t sub_1834DC76C(uint64_t *a1)
{
  uint64_t v3 = *(NSObject **)(v1 + 16);
  a1[1] = (uint64_t)v3;
  uint64_t result = nw_quic_get_local_max_streams_unidirectional(v3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *a1 = result;
    return (uint64_t)sub_1834DC7C0;
  }
  return result;
}

uint64_t sub_1834DC7C0(void *a1, uint64_t a2)
{
  return sub_1834DDB68(a1, a2, (uint64_t (*)(uint64_t))nw_quic_set_local_max_streams_unidirectional);
}

uint64_t sub_1834DC7D8()
{
  return sub_1834DDC08((uint64_t (*)(void))nw_quic_get_remote_max_streams_unidirectional);
}

uint64_t sub_1834DC7F0(uint64_t a1)
{
  return sub_1834DDC54(a1, (uint64_t (*)(uint64_t, uint64_t))nw_quic_set_local_max_streams_bidirectional);
}

uint64_t sub_1834DC808()
{
  return sub_1834DDC08((uint64_t (*)(void))nw_quic_get_local_max_streams_bidirectional);
}

uint64_t sub_1834DC820(uint64_t *a1)
{
  uint64_t v3 = *(NSObject **)(v1 + 16);
  a1[1] = (uint64_t)v3;
  uint64_t result = nw_quic_get_local_max_streams_bidirectional(v3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *a1 = result;
    return (uint64_t)sub_1834DC874;
  }
  return result;
}

uint64_t sub_1834DC874(void *a1, uint64_t a2)
{
  return sub_1834DDB68(a1, a2, (uint64_t (*)(uint64_t))nw_quic_set_local_max_streams_bidirectional);
}

uint64_t sub_1834DC88C()
{
  return sub_1834DDC08((uint64_t (*)(void))nw_quic_get_remote_max_streams_bidirectional);
}

uint64_t sub_1834DC8A4()
{
  return nw_quic_get_stream_usable_datagram_frame_size(*(nw_protocol_metadata_t *)(v0 + 16));
}

uint64_t sub_1834DC8C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1834DDCF4((uint64_t (*)(void))nw_quic_get_keepalive_interval, a1);
}

uint64_t sub_1834DC8DC(uint64_t a1)
{
  return sub_1834DDD6C(a1, (uint64_t (*)(uint64_t, uint64_t))nw_quic_set_keepalive_interval);
}

uint64_t (*sub_1834DC8F4(uint64_t a1))(uint64_t *a1, uint64_t a2)
{
  *(void *)(a1 + 16) = v1;
  unsigned int keepalive_interval = nw_quic_get_keepalive_interval(*(nw_protocol_metadata_t *)(v1 + 16));
  uint64_t v4 = keepalive_interval;
  if (keepalive_interval)
  {
    char v5 = 0;
  }
  else
  {
    uint64_t v4 = 1;
    char v5 = 1;
  }
  if (keepalive_interval == 0xFFFF) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = v4;
  }
  if (keepalive_interval == 0xFFFF) {
    char v7 = 1;
  }
  else {
    char v7 = v5;
  }
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  return sub_1834DC96C;
}

uint64_t sub_1834DC96C(uint64_t *a1, uint64_t a2)
{
  return sub_1834DDEC4(a1, a2, (uint64_t (*)(uint64_t *))sub_1834DC8DC);
}

uint64_t NWProtocolQUIC.Metadata.__deallocating_deinit()
{
  return sub_1834DDF10();
}

uint64_t NWProtocolQUIC.deinit()
{
  return v0;
}

uint64_t NWProtocolQUIC.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1834DC9A4(uint64_t a1)
{
  return sub_1834DCC68(a1, (uint64_t (*)(void))nw_protocol_copy_quic_stream_definition, &qword_1E8F62E68);
}

uint64_t static NWProtocolQUICStream.definition.getter()
{
  return sub_1830DC99C(&qword_1E8F62068);
}

void sub_1834DC9EC(char *a1)
{
  char v2 = *a1;
  *(unsigned char *)(v1 + 24) = *a1;
  nw_quic_stream_set_is_unidirectional(*(void **)(v1 + 16), v2);
}

void sub_1834DC9FC(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

void (*sub_1834DCA08(uint64_t a1))(uint64_t *a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 24);
  return sub_1834DCA34;
}

void sub_1834DCA34(uint64_t *a1)
{
  uint64_t v1 = *a1;
  char v2 = *((unsigned char *)a1 + 8);
  *(unsigned char *)(v1 + 24) = v2;
  nw_quic_stream_set_is_unidirectional(*(void **)(v1 + 16), v2);
}

double sub_1834DCA48()
{
  id v1 = nw_quic_stream_copy_shared_connection_options(*(void **)(v0 + 16));
  type metadata accessor for NWProtocolQUICConnection.Options();
  uint64_t v2 = swift_allocObject();
  double result = 0.0;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(void *)(v2 + 16) = v1;
  return result;
}

double sub_1834DCA98(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  double result = 0.0;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(void *)(v2 + 16) = a1;
  return result;
}

BOOL sub_1834DCAE0(NSObject *a1)
{
  return sub_1834DD8E4(a1, (uint64_t (*)(void))nw_protocol_copy_quic_stream_definition);
}

uint64_t NWProtocolQUICStream.Options.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(unsigned char *)(v0 + 24) = 0;
  *(void *)(v0 + 16) = nw_quic_create_stream_options();
  return v0;
}

uint64_t NWProtocolQUICStream.Options.init()()
{
  *(unsigned char *)(v0 + 24) = 0;
  *(void *)(v0 + 16) = nw_quic_create_stream_options();
  return v0;
}

uint64_t sub_1834DCB5C(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 24) = 0;
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t NWProtocolQUICStream.Options.__deallocating_deinit()
{
  return sub_1834DDF10();
}

BOOL sub_1834DCB9C(void *a1)
{
  return nw_protocol_metadata_is_quic_stream(a1);
}

uint64_t sub_1834DCBB4()
{
  return sub_1834DDC08((uint64_t (*)(void))nw_quic_stream_get_id);
}

uint64_t sub_1834DCBCC()
{
  return nw_quic_stream_get_application_error(*(void **)(v0 + 16));
}

void sub_1834DCBD4(uint64_t a1)
{
  nw_quic_stream_set_application_error(*(void **)(v1 + 16), a1);
}

void (*sub_1834DCBE0(uint64_t *a1))(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  a1[1] = (uint64_t)v3;
  *a1 = nw_quic_stream_get_application_error(v3);
  return sub_1834DCC2C;
}

void sub_1834DCC2C(uint64_t a1)
{
}

uint64_t NWProtocolQUICStream.Metadata.__deallocating_deinit()
{
  return sub_1834DDF10();
}

uint64_t NWProtocolQUICStream.deinit()
{
  return v0;
}

uint64_t sub_1834DCC48(uint64_t a1)
{
  return sub_1834DCC68(a1, (uint64_t (*)(void))nw_protocol_copy_quic_connection_definition, &qword_1E8F62E70);
}

uint64_t sub_1834DCC68(uint64_t a1, uint64_t (*a2)(void), void *a3)
{
  uint64_t v4 = a2();
  type metadata accessor for NWProtocolDefinition();
  char v5 = (void *)swift_allocObject();
  v5[4] = v4;
  id v6 = objc_msgSend((id)swift_unknownObjectRetain(), sel_description);
  uint64_t v7 = sub_183D44AFC();
  uint64_t v9 = v8;

  uint64_t result = swift_unknownObjectRelease();
  v5[2] = v7;
  v5[3] = v9;
  *a3 = v5;
  return result;
}

uint64_t static NWProtocolQUICConnection.definition.getter()
{
  return sub_1830DC99C(&qword_1E8F62070);
}

id sub_1834DCD24()
{
  return nw_quic_connection_copy_sec_protocol_options(*(void **)(v0 + 16));
}

void sub_1834DCD2C(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  uint64_t v2 = 0xFFFFFFFFLL;
  if (a1 < 0xFFFFFFFFLL) {
    uint64_t v2 = a1;
  }
  nw_quic_connection_set_idle_timeout(*(void **)(v1 + 16), v2 & ~(v2 >> 63));
}

uint64_t sub_1834DCD50()
{
  return *(void *)(v0 + 24);
}

void (*sub_1834DCD58(void *a1))(uint64_t *a1)
{
  *a1 = *(void *)(v1 + 24);
  a1[1] = v1;
  return sub_1834DCD80;
}

void sub_1834DCD80(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  *(void *)(v1 + 24) = *a1;
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = 0xFFFFFFFFLL;
  if (v2 < 0xFFFFFFFFLL) {
    uint64_t v4 = v2;
  }
  nw_quic_connection_set_idle_timeout(v3, v4 & ~(v4 >> 63));
}

void sub_1834DCDA4(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  uint64_t v2 = 0xFFFFLL;
  if (a1 < 0xFFFF) {
    uint64_t v2 = a1;
  }
  nw_quic_connection_set_max_udp_payload_size(*(void **)(v1 + 16), v2 & ~(unsigned __int16)(v2 >> 63));
}

uint64_t sub_1834DCDC8()
{
  return *(void *)(v0 + 32);
}

void (*sub_1834DCDD0(void *a1))(uint64_t *a1)
{
  *a1 = *(void *)(v1 + 32);
  a1[1] = v1;
  return sub_1834DCDF8;
}

void sub_1834DCDF8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  *(void *)(v1 + 32) = *a1;
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = 0xFFFFLL;
  if (v2 < 0xFFFF) {
    uint64_t v4 = v2;
  }
  nw_quic_connection_set_max_udp_payload_size(v3, v4 & ~(unsigned __int16)(v4 >> 63));
}

void sub_1834DCE1C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  *(void *)(v4 + 40) = *a1;
  if (v3 < 0)
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    char v5 = *(void **)(v4 + 16);
    nw_quic_connection_set_initial_max_data(v5, v3);
  }
}

void sub_1834DCEA8(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  if (a1 < 0)
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v1 + 16);
    nw_quic_connection_set_initial_max_data(v3, a1);
  }
}

uint64_t sub_1834DCF2C()
{
  return *(void *)(v0 + 40);
}

void (*sub_1834DCF34(void *a1))(uint64_t *a1)
{
  *a1 = *(void *)(v1 + 40);
  a1[1] = v1;
  return sub_1834DCF5C;
}

void sub_1834DCF5C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  *(void *)(v2 + 40) = *a1;
  if (v1 < 0)
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v2 + 16);
    nw_quic_connection_set_initial_max_data(v3, v1);
  }
}

void sub_1834DCFE4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  *(void *)(v4 + 48) = *a1;
  if (v3 < 0)
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    char v5 = *(void **)(v4 + 16);
    nw_quic_connection_set_initial_max_stream_data_bidirectional_remote(v5, v3);
  }
}

void sub_1834DD070(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  if (a1 < 0)
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v1 + 16);
    nw_quic_connection_set_initial_max_stream_data_bidirectional_remote(v3, a1);
  }
}

uint64_t sub_1834DD0F4()
{
  return *(void *)(v0 + 48);
}

void (*sub_1834DD0FC(void *a1))(uint64_t *a1)
{
  *a1 = *(void *)(v1 + 48);
  a1[1] = v1;
  return sub_1834DD124;
}

void sub_1834DD124(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  *(void *)(v2 + 48) = *a1;
  if (v1 < 0)
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v2 + 16);
    nw_quic_connection_set_initial_max_stream_data_bidirectional_remote(v3, v1);
  }
}

void sub_1834DD1AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  *(void *)(v4 + 56) = *a1;
  if (v3 < 0)
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    char v5 = *(void **)(v4 + 16);
    nw_quic_connection_set_initial_max_stream_data_bidirectional_local(v5, v3);
  }
}

void sub_1834DD238(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  if (a1 < 0)
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v1 + 16);
    nw_quic_connection_set_initial_max_stream_data_bidirectional_local(v3, a1);
  }
}

uint64_t sub_1834DD2BC()
{
  return *(void *)(v0 + 56);
}

void (*sub_1834DD2C4(void *a1))(uint64_t *a1)
{
  *a1 = *(void *)(v1 + 56);
  a1[1] = v1;
  return sub_1834DD2EC;
}

void sub_1834DD2EC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  *(void *)(v2 + 56) = *a1;
  if (v1 < 0)
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v2 + 16);
    nw_quic_connection_set_initial_max_stream_data_bidirectional_local(v3, v1);
  }
}

void sub_1834DD374(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  *(void *)(v4 + 64) = *a1;
  if (v3 < 0)
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    char v5 = *(void **)(v4 + 16);
    nw_quic_connection_set_initial_max_stream_data_unidirectional(v5, v3);
  }
}

void sub_1834DD400(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  if (a1 < 0)
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v1 + 16);
    nw_quic_connection_set_initial_max_stream_data_unidirectional(v3, a1);
  }
}

uint64_t sub_1834DD484()
{
  return *(void *)(v0 + 64);
}

void (*sub_1834DD48C(void *a1))(uint64_t *a1)
{
  *a1 = *(void *)(v1 + 64);
  a1[1] = v1;
  return sub_1834DD4B4;
}

void sub_1834DD4B4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  *(void *)(v2 + 64) = *a1;
  if (v1 < 0)
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v2 + 16);
    nw_quic_connection_set_initial_max_stream_data_unidirectional(v3, v1);
  }
}

void sub_1834DD53C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  *(void *)(v4 + 72) = *a1;
  if (v3 < 0)
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    char v5 = *(void **)(v4 + 16);
    nw_quic_connection_set_initial_max_streams_bidirectional(v5, v3);
  }
}

void sub_1834DD5C8(uint64_t a1)
{
  *(void *)(v1 + 72) = a1;
  if (a1 < 0)
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v1 + 16);
    nw_quic_connection_set_initial_max_streams_bidirectional(v3, a1);
  }
}

uint64_t sub_1834DD64C()
{
  return *(void *)(v0 + 72);
}

void (*sub_1834DD654(void *a1))(uint64_t *a1)
{
  *a1 = *(void *)(v1 + 72);
  a1[1] = v1;
  return sub_1834DD67C;
}

void sub_1834DD67C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  *(void *)(v2 + 72) = *a1;
  if (v1 < 0)
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v2 + 16);
    nw_quic_connection_set_initial_max_streams_bidirectional(v3, v1);
  }
}

void sub_1834DD704(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  *(void *)(v4 + 80) = *a1;
  if (v3 < 0)
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    char v5 = *(void **)(v4 + 16);
    nw_quic_connection_set_initial_max_streams_unidirectional(v5, v3);
  }
}

void sub_1834DD790(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
  if (a1 < 0)
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v1 + 16);
    nw_quic_connection_set_initial_max_streams_unidirectional(v3, a1);
  }
}

uint64_t sub_1834DD814()
{
  return *(void *)(v0 + 80);
}

void (*sub_1834DD81C(void *a1))(uint64_t *a1)
{
  *a1 = *(void *)(v1 + 80);
  a1[1] = v1;
  return sub_1834DD844;
}

void sub_1834DD844(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  *(void *)(v2 + 80) = *a1;
  if (v1 < 0)
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v2 + 16);
    nw_quic_connection_set_initial_max_streams_unidirectional(v3, v1);
  }
}

BOOL sub_1834DD8CC(NSObject *a1)
{
  return sub_1834DD8E4(a1, (uint64_t (*)(void))nw_protocol_copy_quic_connection_definition);
}

BOOL sub_1834DD8E4(NSObject *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = nw_protocol_options_copy_definition(a1);
  uint64_t v4 = a2();
  BOOL is_equal = nw_protocol_definition_is_equal(v3, v4);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return is_equal;
}

uint64_t NWProtocolQUICConnection.Options.__deallocating_deinit()
{
  return sub_1834DDF10();
}

BOOL sub_1834DD94C(void *a1)
{
  return nw_protocol_metadata_is_quic_connection(a1);
}

uint64_t sub_1834DD964()
{
  uint64_t result = (uint64_t)nw_quic_connection_copy_stream_metadata(*(void **)(v0 + 16));
  if (result)
  {
    uint64_t v2 = result;
    type metadata accessor for NWProtocolQUICConnection.Metadata();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v2;
  }
  return result;
}

uint64_t sub_1834DD9A4()
{
  return sub_1834DDC08((uint64_t (*)(void))nw_quic_connection_get_max_streams_unidirectional);
}

uint64_t sub_1834DD9BC(uint64_t a1)
{
  return sub_1834DDC54(a1, (uint64_t (*)(uint64_t, uint64_t))nw_quic_connection_set_max_streams_unidirectional);
}

uint64_t sub_1834DD9D4(uint64_t *a1)
{
  a1[1] = *(void *)(v1 + 16);
  uint64_t result = nw_quic_connection_get_max_streams_unidirectional();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    *a1 = result;
    return (uint64_t)sub_1834DDA28;
  }
  return result;
}

uint64_t sub_1834DDA28(void *a1, uint64_t a2)
{
  return sub_1834DDB68(a1, a2, (uint64_t (*)(uint64_t))nw_quic_connection_set_max_streams_unidirectional);
}

uint64_t sub_1834DDA40(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  if ((*a1 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_183D456BC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(void *)(*(void *)a2 + 16);
    return a5(v5);
  }
  return result;
}

uint64_t sub_1834DDACC()
{
  return sub_1834DDC08((uint64_t (*)(void))nw_quic_connection_get_max_streams_bidirectional);
}

uint64_t sub_1834DDAE4(uint64_t a1)
{
  return sub_1834DDC54(a1, (uint64_t (*)(uint64_t, uint64_t))nw_quic_connection_set_max_streams_bidirectional);
}

uint64_t sub_1834DDAFC(uint64_t *a1)
{
  a1[1] = *(void *)(v1 + 16);
  uint64_t result = nw_quic_connection_get_max_streams_bidirectional();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    *a1 = result;
    return (uint64_t)sub_1834DDB50;
  }
  return result;
}

uint64_t sub_1834DDB50(void *a1, uint64_t a2)
{
  return sub_1834DDB68(a1, a2, (uint64_t (*)(uint64_t))nw_quic_connection_set_max_streams_bidirectional);
}

uint64_t sub_1834DDB68(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  if ((*a1 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_183D456BC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = a1[1];
    return a3(v3);
  }
  return result;
}

uint64_t sub_1834DDBF0()
{
  return sub_1834DDC08((uint64_t (*)(void))nw_quic_connection_get_peer_idle_timeout);
}

uint64_t sub_1834DDC08(uint64_t (*a1)(void))
{
  uint64_t result = a1(*(void *)(v1 + 16));
  if (result < 0) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1834DDC34()
{
  return nw_quic_connection_get_application_error(*(void **)(v0 + 16));
}

uint64_t sub_1834DDC3C(uint64_t a1)
{
  return sub_1834DDC54(a1, (uint64_t (*)(uint64_t, uint64_t))nw_quic_connection_close_with_error);
}

uint64_t sub_1834DDC54(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  if (a1 < 0)
  {
    uint64_t result = sub_183D456BC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 16);
    return a2(v5, a1);
  }
  return result;
}

uint64_t sub_1834DDCDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1834DDCF4((uint64_t (*)(void))nw_quic_connection_get_keepalive, a1);
}

uint64_t sub_1834DDCF4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = a1(*(void *)(v2 + 16));
  uint64_t v5 = result;
  if (result == 0xFFFF)
  {
    uint64_t v5 = 0;
    char v6 = 1;
  }
  else
  {
    char v6 = 0;
  }
  if (result)
  {
    char v7 = v6;
  }
  else
  {
    uint64_t v5 = 1;
    char v7 = 1;
  }
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v7;
  return result;
}

uint64_t sub_1834DDD54(uint64_t a1)
{
  return sub_1834DDD6C(a1, (uint64_t (*)(uint64_t, uint64_t))nw_quic_connection_set_keepalive);
}

uint64_t sub_1834DDD6C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)a1;
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    uint64_t v5 = *(void *)(v2 + 16);
    if (v4) {
      uint64_t v6 = 0;
    }
    else {
      uint64_t v6 = 0xFFFFLL;
    }
  }
  else if (v4 >= 0xFFFF)
  {
    uint64_t v5 = *(void *)(v2 + 16);
    uint64_t v6 = 65534;
  }
  else
  {
    if (v4 < 0)
    {
      uint64_t result = sub_183D456BC();
      __break(1u);
      return result;
    }
    uint64_t v5 = *(void *)(v2 + 16);
    uint64_t v6 = (unsigned __int16)v4;
  }

  return a2(v5, v6);
}

uint64_t (*sub_1834DDE34(uint64_t a1))(uint64_t *a1, uint64_t a2)
{
  *(void *)(a1 + 16) = v1;
  unsigned int keepalive = nw_quic_connection_get_keepalive(*(void **)(v1 + 16));
  uint64_t v4 = keepalive;
  if (keepalive)
  {
    char v5 = 0;
  }
  else
  {
    uint64_t v4 = 1;
    char v5 = 1;
  }
  if (keepalive == 0xFFFF) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = v4;
  }
  if (keepalive == 0xFFFF) {
    char v7 = 1;
  }
  else {
    char v7 = v5;
  }
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  return sub_1834DDEAC;
}

uint64_t sub_1834DDEAC(uint64_t *a1, uint64_t a2)
{
  return sub_1834DDEC4(a1, a2, (uint64_t (*)(uint64_t *))sub_1834DDD54);
}

uint64_t sub_1834DDEC4(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t *))
{
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *a1;
  char v6 = v3;
  return a3(&v5);
}

uint64_t NWProtocolQUICConnection.Metadata.__deallocating_deinit()
{
  return sub_1834DDF10();
}

uint64_t sub_1834DDF10()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t NWProtocolQUICConnection.deinit()
{
  return v0;
}

uint64_t _s7Network14NWProtocolQUICC7OptionsC4alpnAESaySSG_tcfC_0(uint64_t a1)
{
  type metadata accessor for NWProtocolQUIC.Options();
  uint64_t v2 = swift_allocObject();
  nw_protocol_options_t options = nw_quic_create_options();
  *(void *)(v2 + 16) = options;
  nw_quic_clear_tls_application_protocols(options);
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_retain();
    uint64_t v5 = a1 + 40;
    do
    {
      uint64_t v6 = sub_183D44BAC();
      nw_quic_add_tls_application_protocol(options, (const char *)(v6 + 32));
      swift_release();
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_release();
  }
  swift_bridgeObjectRelease();
  return v2;
}

void sub_1834DE004(uint64_t a1)
{
  char v3 = *(NSObject **)(v1 + 16);
  nw_quic_clear_tls_application_protocols(v3);
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = a1 + 40;
    do
    {
      uint64_t v6 = sub_183D44BAC();
      nw_quic_add_tls_application_protocol(v3, (const char *)(v6 + 32));
      swift_release();
      v5 += 16;
      --v4;
    }
    while (v4);
  }
}

uint64_t sub_1834DE070()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1834DE0A8(uint64_t a1)
{
  return sub_1834DB4F0(a1, v1);
}

uint64_t type metadata accessor for NWProtocolQUICConnection.Options()
{
  return self;
}

uint64_t type metadata accessor for NWProtocolQUICConnection.Metadata()
{
  return self;
}

unint64_t sub_1834DE0FC()
{
  unint64_t result = qword_1E8F62E78;
  if (!qword_1E8F62E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F62E78);
  }
  return result;
}

uint64_t sub_1834DE150()
{
  return MEMORY[0x1E4FBC590];
}

unint64_t sub_1834DE160()
{
  unint64_t result = qword_1E8F62E80;
  if (!qword_1E8F62E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F62E80);
  }
  return result;
}

uint64_t sub_1834DE1B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1834DB3D8();
  *a1 = result;
  return result;
}

uint64_t sub_1834DE1E0()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1834DE004(v0);

  return swift_bridgeObjectRelease();
}

BOOL sub_1834DE224@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = nw_quic_get_stream_is_unidirectional(*(nw_protocol_options_t *)(*(void *)a1 + 16));
  *a2 = result;
  return result;
}

void sub_1834DE254(BOOL *a1, uint64_t a2)
{
}

BOOL sub_1834DE268@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = nw_quic_get_stream_is_datagram(*(nw_protocol_options_t *)(*(void *)a1 + 16));
  *a2 = result;
  return result;
}

void sub_1834DE298(BOOL *a1, uint64_t a2)
{
}

uint64_t sub_1834DE2AC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = nw_quic_get_idle_timeout(*(nw_protocol_options_t *)(*(void *)a1 + 16));
  *a2 = result;
  return result;
}

void sub_1834DE2E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  if (*a1 >= 0xFFFFFFFFLL) {
    uint64_t v2 = 0xFFFFFFFFLL;
  }
  nw_quic_set_idle_timeout(*(nw_protocol_options_t *)(*(void *)a2 + 16), v2 & ~(v2 >> 63));
}

uint64_t sub_1834DE304@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = nw_quic_get_max_udp_payload_size(*(nw_protocol_options_t *)(*(void *)a1 + 16));
  *a2 = result;
  return result;
}

void sub_1834DE338(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  if (*a1 >= 0xFFFF) {
    uint64_t v2 = 0xFFFFLL;
  }
  nw_quic_set_max_udp_payload_size(*(nw_protocol_options_t *)(*(void *)a2 + 16), v2 & ~(unsigned __int16)(v2 >> 63));
}

uint64_t sub_1834DE35C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_32Tm(a1, (uint64_t (*)(void))nw_quic_get_initial_max_data, a2);
}

uint64_t sub_1834DE374(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1834DDA40(a1, a2, a3, a4, (uint64_t (*)(uint64_t))nw_quic_set_initial_max_data);
}

uint64_t sub_1834DE3A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_32Tm(a1, (uint64_t (*)(void))nw_quic_get_initial_max_stream_data_bidirectional_remote, a2);
}

uint64_t sub_1834DE3B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1834DDA40(a1, a2, a3, a4, (uint64_t (*)(uint64_t))nw_quic_set_initial_max_stream_data_bidirectional_remote);
}

uint64_t sub_1834DE3E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_32Tm(a1, (uint64_t (*)(void))nw_quic_get_initial_max_stream_data_bidirectional_local, a2);
}

uint64_t sub_1834DE3FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1834DDA40(a1, a2, a3, a4, (uint64_t (*)(uint64_t))nw_quic_set_initial_max_stream_data_bidirectional_local);
}

uint64_t sub_1834DE428@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_32Tm(a1, (uint64_t (*)(void))nw_quic_get_initial_max_stream_data_unidirectional, a2);
}

uint64_t sub_1834DE440(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1834DDA40(a1, a2, a3, a4, (uint64_t (*)(uint64_t))nw_quic_set_initial_max_stream_data_unidirectional);
}

uint64_t sub_1834DE46C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_32Tm(a1, (uint64_t (*)(void))nw_quic_get_initial_max_streams_bidirectional, a2);
}

uint64_t sub_1834DE484(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1834DDA40(a1, a2, a3, a4, (uint64_t (*)(uint64_t))nw_quic_set_initial_max_streams_bidirectional);
}

uint64_t sub_1834DE4B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_32Tm(a1, (uint64_t (*)(void))nw_quic_get_initial_max_streams_unidirectional, a2);
}

uint64_t sub_1834DE4C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1834DDA40(a1, a2, a3, a4, (uint64_t (*)(uint64_t))nw_quic_set_initial_max_streams_unidirectional);
}

uint64_t sub_1834DE4F4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = nw_quic_get_max_datagram_frame_size(*(nw_protocol_options_t *)(*(void *)a1 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_1834DE528(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1834DBF8C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, void))nw_quic_set_max_datagram_frame_size);
}

uint64_t sub_1834DE554@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = nw_quic_get_initial_packet_size(*(void **)(*(void *)a1 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_1834DE588(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1834DBF8C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, void))nw_quic_set_initial_packet_size);
}

uint64_t sub_1834DE5BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = nw_quic_get_stream_application_error(*(nw_protocol_metadata_t *)(*(void *)a1 + 16));
  *a2 = result;
  return result;
}

void sub_1834DE5EC(uint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1834DE600@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_32Tm(a1, (uint64_t (*)(void))nw_quic_get_local_max_streams_unidirectional, a2);
}

uint64_t sub_1834DE618(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1834DDA40(a1, a2, a3, a4, (uint64_t (*)(uint64_t))nw_quic_set_local_max_streams_unidirectional);
}

uint64_t sub_1834DE644@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_32Tm(a1, (uint64_t (*)(void))nw_quic_get_local_max_streams_bidirectional, a2);
}

uint64_t sub_1834DE65C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1834DDA40(a1, a2, a3, a4, (uint64_t (*)(uint64_t))nw_quic_set_local_max_streams_bidirectional);
}

uint64_t sub_1834DE688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_56Tm(a1, (uint64_t (*)(void))nw_quic_get_keepalive_interval, a2);
}

uint64_t sub_1834DE6A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_57Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t *))sub_1834DC8DC);
}

uint64_t sub_1834DE6B8@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*(void *)result + 24);
  return result;
}

void sub_1834DE6C8(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  *(unsigned char *)(v3 + 24) = *a1;
  nw_quic_stream_set_is_unidirectional(*(void **)(v3 + 16), v2);
}

uint64_t sub_1834DE6E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = nw_quic_stream_get_application_error(*(void **)(*(void *)a1 + 16));
  *a2 = result;
  return result;
}

void sub_1834DE710(uint64_t *a1, uint64_t a2)
{
}

uint64_t sub_1834DE724@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 24);
  return result;
}

void sub_1834DE734(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  *(void *)(*a2 + 24) = *a1;
  if (v2 >= 0xFFFFFFFFLL) {
    uint64_t v2 = 0xFFFFFFFFLL;
  }
  nw_quic_connection_set_idle_timeout(*(void **)(v3 + 16), v2 & ~(v2 >> 63));
}

uint64_t sub_1834DE75C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 32);
  return result;
}

void sub_1834DE76C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  *(void *)(*a2 + 32) = *a1;
  if (v2 >= 0xFFFF) {
    uint64_t v2 = 0xFFFFLL;
  }
  nw_quic_connection_set_max_udp_payload_size(*(void **)(v3 + 16), v2 & ~(unsigned __int16)(v2 >> 63));
}

uint64_t sub_1834DE794@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 40);
  return result;
}

uint64_t sub_1834DE7A8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 48);
  return result;
}

uint64_t sub_1834DE7BC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 56);
  return result;
}

uint64_t sub_1834DE7D0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 64);
  return result;
}

uint64_t sub_1834DE7E4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 72);
  return result;
}

uint64_t sub_1834DE7F8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 80);
  return result;
}

uint64_t sub_1834DE80C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_32Tm(a1, (uint64_t (*)(void))nw_quic_connection_get_max_streams_unidirectional, a2);
}

uint64_t sub_1834DE824(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1834DDA40(a1, a2, a3, a4, (uint64_t (*)(uint64_t))nw_quic_connection_set_max_streams_unidirectional);
}

uint64_t sub_1834DE850@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_32Tm(a1, (uint64_t (*)(void))nw_quic_connection_get_max_streams_bidirectional, a2);
}

uint64_t keypath_get_32Tm@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(*(void *)(*(void *)a1 + 16));
  if (result < 0) {
    __break(1u);
  }
  else {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1834DE8A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1834DDA40(a1, a2, a3, a4, (uint64_t (*)(uint64_t))nw_quic_connection_set_max_streams_bidirectional);
}

uint64_t sub_1834DE8D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_56Tm(a1, (uint64_t (*)(void))nw_quic_connection_get_keepalive, a2);
}

uint64_t keypath_get_56Tm@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t result = a2(*(void *)(*(void *)a1 + 16));
  if (result)
  {
    if (result == 0xFFFF)
    {
      uint64_t v5 = 0;
      char v6 = 1;
    }
    else
    {
      char v6 = 0;
      uint64_t v5 = result;
    }
  }
  else
  {
    uint64_t v5 = 1;
    char v6 = 1;
  }
  *(void *)a3 = v5;
  *(unsigned char *)(a3 + 8) = v6;
  return result;
}

uint64_t sub_1834DE950(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_57Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t *))sub_1834DDD54);
}

uint64_t keypath_set_57Tm(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *))
{
  char v5 = *((unsigned char *)a1 + 8);
  uint64_t v7 = *a1;
  char v8 = v5;
  return a5(&v7);
}

uint64_t type metadata accessor for NWProtocolQUIC()
{
  return self;
}

uint64_t type metadata accessor for NWProtocolQUIC.Options()
{
  return self;
}

uint64_t method lookup function for NWProtocolQUIC.Options(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWProtocolQUIC.Options);
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.alpn.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.alpn.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.alpn.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.direction.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.direction.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.direction.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.isDatagram.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.isDatagram.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.isDatagram.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.securityProtocolOptions.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.idleTimeout.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.idleTimeout.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.idleTimeout.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.maxUDPPayloadSize.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.maxUDPPayloadSize.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.maxUDPPayloadSize.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialMaxData.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialMaxData.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialMaxData.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialMaxStreamDataBidirectionalRemote.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialMaxStreamDataBidirectionalRemote.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialMaxStreamDataBidirectionalRemote.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialMaxStreamDataBidirectionalLocal.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialMaxStreamDataBidirectionalLocal.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialMaxStreamDataBidirectionalLocal.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialMaxStreamDataUnidirectional.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialMaxStreamDataUnidirectional.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialMaxStreamDataUnidirectional.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialMaxStreamsBidirectional.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialMaxStreamsBidirectional.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialMaxStreamsBidirectional.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialMaxStreamsUnidirectional.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialMaxStreamsUnidirectional.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialMaxStreamsUnidirectional.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.maxDatagramFrameSize.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.maxDatagramFrameSize.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.maxDatagramFrameSize.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialPacketSize.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialPacketSize.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Options.initialPacketSize.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

ValueMetadata *type metadata accessor for NWProtocolQUIC.Options.Direction()
{
  return &type metadata for NWProtocolQUIC.Options.Direction;
}

uint64_t initializeBufferWithCopyOfBuffer for NWProtocolQUIC.ApplicationError(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for NWProtocolQUIC.ApplicationError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for NWProtocolQUIC.ApplicationError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for NWProtocolQUIC.ApplicationError(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NWProtocolQUIC.ApplicationError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NWProtocolQUIC.ApplicationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NWProtocolQUIC.ApplicationError()
{
  return &type metadata for NWProtocolQUIC.ApplicationError;
}

uint64_t type metadata accessor for NWProtocolQUIC.Metadata()
{
  return self;
}

uint64_t method lookup function for NWProtocolQUIC.Metadata(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWProtocolQUIC.Metadata);
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.securityProtocolMetadata.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.negotiatedALPN.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.streamIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.remoteIdleTimeout.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.applicationError.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.applicationError.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.applicationError.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.streamApplicationErrorCode.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.streamApplicationErrorCode.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.streamApplicationErrorCode.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.localMaxStreamsUnidirectional.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.localMaxStreamsUnidirectional.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.localMaxStreamsUnidirectional.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.remoteMaxStreamsUnidirectional.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.localMaxStreamsBidirectional.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.localMaxStreamsBidirectional.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.localMaxStreamsBidirectional.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.remoteMaxStreamsBidirectional.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.usableDatagramFrameSize.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.keepAlive.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.keepAlive.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of NWProtocolQUIC.Metadata.keepAlive.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for NWProtocolQUIC.Metadata.KeepAliveBehavior(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NWProtocolQUIC.Metadata.KeepAliveBehavior(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1834DF5E0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1834DF5FC(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for NWProtocolQUIC.Metadata.KeepAliveBehavior()
{
  return &type metadata for NWProtocolQUIC.Metadata.KeepAliveBehavior;
}

uint64_t type metadata accessor for NWProtocolQUICStream()
{
  return self;
}

uint64_t type metadata accessor for NWProtocolQUICStream.Options()
{
  return self;
}

uint64_t method lookup function for NWProtocolQUICStream.Options(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWProtocolQUICStream.Options);
}

uint64_t dispatch thunk of NWProtocolQUICStream.Options.direction.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of NWProtocolQUICStream.Options.direction.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of NWProtocolQUICStream.Options.direction.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of NWProtocolQUICStream.Options.connectionOptions.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of NWProtocolQUICStream.Options.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

unsigned char *_s7Network14NWProtocolQUICC7OptionsC9DirectionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1834DF7FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NWProtocolQUICStream.Options.Direction()
{
  return &type metadata for NWProtocolQUICStream.Options.Direction;
}

uint64_t type metadata accessor for NWProtocolQUICStream.Metadata()
{
  return self;
}

uint64_t method lookup function for NWProtocolQUICStream.Metadata(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWProtocolQUICStream.Metadata);
}

uint64_t dispatch thunk of NWProtocolQUICStream.Metadata.streamIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of NWProtocolQUICStream.Metadata.applicationErrorCode.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of NWProtocolQUICStream.Metadata.applicationErrorCode.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of NWProtocolQUICStream.Metadata.applicationErrorCode.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t type metadata accessor for NWProtocolQUICConnection()
{
  return self;
}

uint64_t method lookup function for NWProtocolQUICConnection.Options(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWProtocolQUICConnection.Options);
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.securityProtocolOptions.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.idleTimeout.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.idleTimeout.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.idleTimeout.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.maxUDPPayloadSize.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.maxUDPPayloadSize.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.maxUDPPayloadSize.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.initialMaxData.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.initialMaxData.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.initialMaxData.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.initialMaxStreamDataBidirectionalRemote.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.initialMaxStreamDataBidirectionalRemote.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.initialMaxStreamDataBidirectionalRemote.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.initialMaxStreamDataBidirectionalLocal.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.initialMaxStreamDataBidirectionalLocal.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.initialMaxStreamDataBidirectionalLocal.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.initialMaxStreamDataUnidirectional.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.initialMaxStreamDataUnidirectional.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.initialMaxStreamDataUnidirectional.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.initialMaxStreamsBidirectional.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.initialMaxStreamsBidirectional.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.initialMaxStreamsBidirectional.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.initialMaxStreamsUnidirectional.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.initialMaxStreamsUnidirectional.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 544))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Options.initialMaxStreamsUnidirectional.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 552))();
}

uint64_t method lookup function for NWProtocolQUICConnection.Metadata(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWProtocolQUICConnection.Metadata);
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Metadata.securityProtocolMetadata.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Metadata.streamMetadata.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Metadata.maxStreamsUnidirectional.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Metadata.maxStreamsUnidirectional.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Metadata.maxStreamsUnidirectional.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Metadata.maxStreamsBidirectional.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Metadata.maxStreamsBidirectional.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Metadata.maxStreamsBidirectional.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Metadata.peerIdleTimeout.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Metadata.applicationErrorCode.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Metadata.closeWithError(error:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Metadata.keepalive.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Metadata.keepalive.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of NWProtocolQUICConnection.Metadata.keepalive.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

ValueMetadata *type metadata accessor for NWProtocolQUICConnection.Metadata.KeepaliveBehavior()
{
  return &type metadata for NWProtocolQUICConnection.Metadata.KeepaliveBehavior;
}

uint64_t sub_1834DFFCC()
{
  uint64_t v0 = sub_183D4498C();
  __swift_allocate_value_buffer(v0, qword_1E8F62E88);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E8F62E88);
  if (qword_1E8F621C0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1E8F7A940);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1834E0094()
{
  uint64_t v0 = sub_183D4498C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_183D4490C();
  __swift_allocate_value_buffer(v4, qword_1E8F62EA0);
  __swift_project_value_buffer(v4, (uint64_t)qword_1E8F62EA0);
  if (qword_1E8F62078 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)qword_1E8F62E88);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return sub_183D448EC();
}

uint64_t sub_1834E01D0()
{
  type metadata accessor for NWActorSystem();
  uint64_t v0 = swift_allocObject();
  uint64_t result = NWActorSystem.init()();
  qword_1E8F62EB8 = v0;
  return result;
}

uint64_t NWActorSystem.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  NWActorSystem.init()();
  return v0;
}

uint64_t static NWActorSystem.default.getter()
{
  return sub_1830DC99C(&qword_1E8F62088);
}

uint64_t NWActorSystem.disableCompression.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t NWActorSystem.disableCompression.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = a1;
  return result;
}

uint64_t (*NWActorSystem.disableCompression.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1834E0334(uint64_t a1)
{
  return sub_1834E03E8(a1, &qword_1E8F63050, &qword_1E8F62EC0);
}

uint64_t static NWActorSystem.$remoteCallActivity.getter()
{
  return sub_1830DC99C(&qword_1E8F62090);
}

uint64_t static NWActorSystem.remoteCallActivity.getter()
{
  if (qword_1E8F62090 != -1) {
    swift_once();
  }
  sub_183D45C6C();
  return v1;
}

uint64_t sub_1834E03D4(uint64_t a1)
{
  return sub_1834E03E8(a1, &qword_1E8F62FD0, &qword_1E8F62EC8);
}

uint64_t sub_1834E03E8(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  swift_allocObject();
  uint64_t result = sub_183D45C5C();
  *a3 = result;
  return result;
}

uint64_t NWActorSystem.init()()
{
  uint64_t v1 = sub_183D452EC();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_183D452DC();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_183D449EC();
  MEMORY[0x1F4188790](v6 - 8);
  *(unsigned char *)(v0 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61DC0);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 16) = 0;
  uint64_t v8 = MEMORY[0x1E4FBC868];
  *(void *)(v0 + 128) = v7;
  *(void *)(v0 + 136) = v8;
  *(void *)(v0 + 144) = v8;
  *(void *)(v0 + 152) = v8;
  *(void *)(v0 + 160) = 0;
  *(void *)(v0 + 168) = 0;
  *(unsigned char *)(v0 + 176) = 0;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 184) = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 192) = v8;
  *(void *)(v0 + 200) = v8;
  sub_1834B9584();
  sub_183D449DC();
  v11[1] = v9;
  sub_1834F2558(&qword_1E8F62ED8, 255, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F63D50);
  sub_1834E06D0();
  sub_183D453FC();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCC58], v1);
  *(void *)(v0 + 208) = sub_183D4531C();
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(void *)(v0 + 120) = 0;
  return v0;
}

unint64_t sub_1834E06D0()
{
  unint64_t result = qword_1E8F62EE0;
  if (!qword_1E8F62EE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E8F63D50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F62EE0);
  }
  return result;
}

uint64_t NWActorSystem.__allocating_init(service:parameters:)(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  NWActorSystem.init(service:parameters:)(a1, a2);
  return v4;
}

void *NWActorSystem.init(service:parameters:)(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = (void *)v2;
  uint64_t v61 = a2;
  uint64_t v5 = sub_183D452EC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_183D452DC();
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = sub_183D449EC();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v60 = *a1;
  uint64_t v11 = *((void *)a1 + 1);
  uint64_t v58 = *((void *)a1 + 2);
  uint64_t v59 = v11;
  uint64_t v12 = *((void *)a1 + 3);
  uint64_t v56 = *((void *)a1 + 4);
  uint64_t v57 = v12;
  uint64_t v13 = *((void *)a1 + 5);
  uint64_t v54 = *((void *)a1 + 6);
  uint64_t v55 = v13;
  uint64_t v14 = *((void *)a1 + 7);
  uint64_t v52 = *((void *)a1 + 8);
  uint64_t v53 = v14;
  uint64_t v15 = *((void *)a1 + 9);
  uint64_t v50 = *((void *)a1 + 10);
  uint64_t v51 = v15;
  uint64_t v49 = a1[88];
  uint64_t v48 = *(unsigned __int16 *)(a1 + 89);
  *(unsigned char *)(v2 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61DC0);
  uint64_t v16 = swift_allocObject();
  *(_DWORD *)(v16 + 16) = 0;
  uint64_t v17 = MEMORY[0x1E4FBC868];
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 136) = v17;
  *(void *)(v2 + 144) = v17;
  *(void *)(v2 + 152) = v17;
  *(void *)(v2 + 160) = 0;
  *(void *)(v2 + 168) = 0;
  *(unsigned char *)(v2 + 176) = 0;
  unint64_t v18 = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 184) = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 192) = v17;
  *(void *)(v2 + 200) = v17;
  sub_1834B9584();
  sub_183D449DC();
  unint64_t v62 = v18;
  sub_1834F2558(&qword_1E8F62ED8, 255, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F63D50);
  sub_1834E06D0();
  sub_183D453FC();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCC58], v5);
  *(void *)(v2 + 208) = sub_183D4531C();
  uint64_t v19 = *(os_unfair_lock_s **)(v61 + 16);
  uint64_t v20 = v19 + 4;
  unint64_t v21 = v19 + 6;
  os_unfair_lock_lock(v19 + 6);
  sub_1835ACA74(v20, (uint64_t *)&v62);
  os_unfair_lock_unlock(v21);
  unint64_t v22 = v62;
  if (qword_1E8F62150 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_1E8F7A908;
  type metadata accessor for NWProtocolFramer.Options();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = nw_framer_create_options(*(nw_protocol_definition_t *)(v23 + 32));
  unint64_t v25 = *(os_unfair_lock_s **)(v22 + 16);
  uint64_t v26 = v25 + 4;
  char v27 = v25 + 6;
  os_unfair_lock_lock(v25 + 6);
  sub_1834A471C(v26, (uint64_t *)&v62);
  os_unfair_lock_unlock(v27);
  uint64_t v28 = *(void *)(v62 + 16);
  uint64_t v29 = (NSObject **)(v28 + 16);
  v30 = (os_unfair_lock_s *)(v28 + 24);
  swift_retain();
  os_unfair_lock_lock(v30);
  sub_1835AA8A0(v29, &v62);
  os_unfair_lock_unlock(v30);
  if (v62 >> 62 && (swift_bridgeObjectRetain(), uint64_t v47 = sub_183D456DC(), swift_bridgeObjectRelease(), v47 < 0))
  {
    __break(1u);
  }
  else
  {
    uint64_t v31 = sub_1834EF540(0, 0, v24);
    unint64_t v32 = v62;
    MEMORY[0x1F4188790](v31);
    *(&v48 - 2) = v32;
    os_unfair_lock_lock(v30);
    sub_1834A47E4(v29);
    os_unfair_lock_unlock(v30);
    swift_release();
    swift_bridgeObjectRelease();
    if (qword_1E8F62078 == -1) {
      goto LABEL_5;
    }
  }
  swift_once();
LABEL_5:
  uint64_t v33 = sub_183D4498C();
  __swift_project_value_buffer(v33, (uint64_t)qword_1E8F62E88);
  unint64_t v34 = sub_183D4496C();
  os_log_type_t v35 = sub_183D4528C();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl(&dword_1830D4000, v34, v35, "Inserted Actor WireProtocol framer", v36, 2u);
    MEMORY[0x185318E50](v36, -1, -1);
    swift_release();
  }
  else
  {

    swift_release();
  }
  uint64_t v38 = v59;
  uint64_t v37 = v60;
  uint64_t v40 = v57;
  uint64_t v39 = v58;
  uint64_t v41 = v56;
  swift_release();
  v3[3] = v37;
  v3[4] = v38;
  uint64_t v42 = v49 | (v48 << 8);
  v3[5] = v39;
  v3[6] = v40;
  uint64_t v43 = v55;
  v3[7] = v41;
  v3[8] = v43;
  uint64_t v44 = v53;
  v3[9] = v54;
  v3[10] = v44;
  uint64_t v45 = v51;
  v3[11] = v52;
  v3[12] = v45;
  v3[13] = v50;
  v3[14] = v42;
  v3[15] = v22;
  return v3;
}

uint64_t NWActorSystem.publish<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x1F4188298](sub_1834E0D38, 0, 0);
}

uint64_t sub_1834E0D38()
{
  long long v11 = *(_OWORD *)(v0 + 32);
  *(void *)(v0 + 16) = v11;
  uint64_t v1 = *(void *)(v0 + 24);
  swift_getMetatypeMetadata();
  uint64_t v2 = sub_183D44B7C();
  uint64_t v4 = v3;
  *(void *)(v0 + 56) = v3;
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  *(_OWORD *)(v5 + 16) = v11;
  *(void *)(v5 + 32) = v1;
  sub_1834E1764();
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v7;
  v7[2] = sub_1834EFBEC;
  v7[3] = v5;
  v7[4] = v6;
  v7[5] = v2;
  void v7[6] = v4;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v8;
  void v8[2] = v2;
  v8[3] = v4;
  v8[4] = v6;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1834E0F1C;
  return MEMORY[0x1F4188148]();
}

uint64_t sub_1834E0F1C()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1834E10AC;
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_1834E1040;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1834E1040()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1834E10AC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1834E1128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v8 = (char *)a4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62F08) + 48);
  uint64_t v9 = *(void *)(a3 + 8);
  *a4 = a2;
  a4[1] = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v8, a1, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  type metadata accessor for NWActorSystem.ServerRole();
  swift_storeEnumTagMultiPayload();

  return swift_unknownObjectRetain();
}

uint64_t NWActorSystem.publishAndWaitForReady<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v4[7] = type metadata accessor for NWActorSystem.ServerRole();
  v4[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1834E12C0, 0, 0);
}

uint64_t sub_1834E12C0()
{
  v0[2] = v0[4];
  uint64_t v1 = (void *)v0[8];
  uint64_t v3 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v4 = v0[3];
  swift_getMetatypeMetadata();
  uint64_t v5 = sub_183D44B7C();
  uint64_t v7 = v6;
  uint64_t v8 = (char *)v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62F08) + 48);
  uint64_t v9 = *(void *)(v3 + 8);
  *uint64_t v1 = v4;
  v1[1] = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(os_unfair_lock_s **)(v2 + 128);
  uint64_t v12 = (void *)swift_task_alloc();
  v12[2] = v2;
  v12[3] = v5;
  v12[4] = v7;
  v12[5] = v1;
  uint64_t v13 = swift_task_alloc();
  *(void *)(v13 + 16) = sub_1834EFD24;
  *(void *)(v13 + 24) = v12;
  v11 += 4;
  swift_unknownObjectRetain();
  os_unfair_lock_lock(v11);
  sub_1834EFDD4();
  uint64_t v14 = v0[8];
  os_unfair_lock_unlock(v11);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1834F25A0(v14, (uint64_t (*)(void))type metadata accessor for NWActorSystem.ServerRole);
  swift_bridgeObjectRelease();
  sub_1834E1764();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[9] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_1834E1588;
  return MEMORY[0x1F4188160]();
}

uint64_t sub_1834E1588()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1834E1700;
  }
  else {
    uint64_t v2 = sub_1834E169C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1834E169C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1834E1700()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1834E1764()
{
  uint64_t v2 = v0;
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v0 + 128) + 16);
  os_unfair_lock_lock(v3);
  if (*(void *)(v2 + 168) || (uint64_t v5 = *(void *)(v2 + 56)) == 0)
  {
    uint64_t v4 = v3;
LABEL_3:
    os_unfair_lock_unlock(v4);
    return;
  }
  lock = v3;
  uint64_t v6 = *(void *)(v2 + 80);
  uint64_t v7 = *(void *)(v2 + 88);
  uint64_t v9 = *(void *)(v2 + 96);
  unint64_t v8 = *(void *)(v2 + 104);
  uint64_t v10 = *(void *)(v2 + 112);
  uint64_t v11 = *(void *)(v2 + 64);
  uint64_t v12 = *(void *)(v2 + 72);
  uint64_t v14 = *(void *)(v2 + 40);
  uint64_t v13 = *(void *)(v2 + 48);
  uint64_t v15 = *(void *)(v2 + 24);
  uint64_t v16 = *(void *)(v2 + 32);
  LOBYTE(v31[0]) = v15 & 1;
  v31[1] = v16;
  v31[2] = v14;
  v31[3] = v13;
  v31[4] = v5;
  v31[5] = v11;
  v31[6] = v12;
  v31[7] = v6;
  v31[8] = v7;
  v31[9] = v9;
  v31[10] = v8;
  char v32 = v10 & 1;
  __int16 v33 = v10 >> 8;
  sub_1834F2934(v15, v16, v14, v13, v5, v11, v12, v6, v7, v9, v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1834C4654(v6);
  uint64_t v29 = v9;
  unint64_t v30 = v8;
  sub_1834D7FF8(v9, v8);
  swift_retain();
  sub_1834F6DC0((unsigned __int8 *)v31);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1834C80D8(v6);
    sub_1832E669C(v9, v8);
    uint64_t v4 = lock;
    goto LABEL_3;
  }
  uint64_t v18 = v17;
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_18315ED5C((uint64_t)sub_1834F29CC);
  NWListener.newConnectionHandler.setter((uint64_t)sub_1834F29CC, v19);
  swift_release_n();
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_18315ED5C((uint64_t)sub_1834F29D4);
  NWListener.stateUpdateHandler.setter((uint64_t)sub_1834F29D4, v20);
  swift_release_n();
  *(void *)(v2 + 168) = v18;
  swift_retain();
  swift_release();
  NWListener.start(queue:)(*(NSObject **)(v2 + 208));
  if (qword_1E8F62078 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_183D4498C();
  __swift_project_value_buffer(v21, (uint64_t)qword_1E8F62E88);
  swift_retain_n();
  unint64_t v22 = sub_183D4496C();
  os_log_type_t v23 = sub_183D452BC();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v31[0] = v25;
    *(_DWORD *)uint64_t v24 = 136315138;
    uint64_t v34 = v18;
    type metadata accessor for NWListener();
    swift_retain();
    uint64_t v26 = sub_183D44B9C();
    uint64_t v34 = sub_1834EFE70(v26, v27, v31);
    sub_183D453AC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1830D4000, v22, v23, "Starting listener: %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v25, -1, -1);
    MEMORY[0x185318E50](v24, -1, -1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();

    sub_1834C80D8(v6);
    sub_1832E669C(v29, v30);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1834C80D8(v6);
    sub_1832E669C(v29, v30);

    swift_release_n();
    swift_release();
  }
  os_unfair_lock_unlock(lock);
}

uint64_t sub_1834E1C08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FA8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v15[-v8];
  uint64_t v10 = *(os_unfair_lock_s **)(a2 + 128);
  uint64_t v19 = a2;
  uint64_t v20 = a1;
  uint64_t v16 = sub_1834F2C10;
  uint64_t v17 = &v18;
  uint64_t v11 = v10 + 4;
  os_unfair_lock_lock(v10 + 4);
  sub_1834F2BDC();
  os_unfair_lock_unlock(v11);
  sub_183138900((uint64_t)v9, (uint64_t)v7, &qword_1E8F62FA8);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) == 1)
  {
    sub_183138A24((uint64_t)v9, &qword_1E8F62FA8);
    return sub_183138A24((uint64_t)v7, &qword_1E8F62FA8);
  }
  else
  {
    sub_183D44F4C();
    sub_183138A24((uint64_t)v9, &qword_1E8F62FA8);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v13 + 8))(v7, v12);
  }
}

void sub_1834E1DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(void *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1834F2664();
  os_unfair_lock_unlock(v3);
}

uint64_t NWActorSystem.publish<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return MEMORY[0x1F4188298](sub_1834E1EA4, 0, 0);
}

uint64_t sub_1834E1EA4()
{
  long long v11 = *(_OWORD *)(v0 + 40);
  *(void *)(v0 + 16) = v11;
  swift_getMetatypeMetadata();
  long long v10 = *(_OWORD *)(v0 + 24);
  uint64_t v1 = sub_183D44B7C();
  uint64_t v3 = v2;
  *(void *)(v0 + 64) = v2;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *(_OWORD *)(v4 + 16) = v11;
  *(_OWORD *)(v4 + 32) = v10;
  sub_1834E1764();
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v6;
  v6[2] = sub_1834EFE04;
  v6[3] = v4;
  void v6[4] = v5;
  v6[5] = v1;
  v6[6] = v3;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v7;
  v7[2] = v1;
  v7[3] = v3;
  v7[4] = v5;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1834E208C;
  return MEMORY[0x1F4188148]();
}

uint64_t sub_1834E208C()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1834E221C;
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_1834E21B0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1834E21B0()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1834E221C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1834E2298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (**a6)()@<X8>)
{
  uint64_t v12 = (char *)a6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62F28) + 48);
  uint64_t v13 = (uint64_t (*)())swift_allocObject();
  *((void *)v13 + 2) = a4;
  *((void *)v13 + 3) = a5;
  *((void *)v13 + 4) = a2;
  *((void *)v13 + 5) = a3;
  *a6 = sub_1834EFE48;
  a6[1] = v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v12, a1, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  type metadata accessor for NWActorSystem.ServerRole();
  swift_storeEnumTagMultiPayload();

  return swift_retain();
}

uint64_t NWActorSystem.publishAndWaitForReady<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  v5[8] = type metadata accessor for NWActorSystem.ServerRole();
  v5[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1834E246C, 0, 0);
}

uint64_t sub_1834E246C()
{
  long long v17 = *(_OWORD *)(v0 + 40);
  *(void *)(v0 + 16) = v17;
  uint64_t v1 = *(uint64_t (***)())(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  swift_getMetatypeMetadata();
  uint64_t v5 = sub_183D44B7C();
  uint64_t v7 = v6;
  uint64_t v8 = (char *)v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62F28) + 48);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = v17;
  *(void *)(v9 + 32) = v4;
  *(void *)(v9 + 40) = v3;
  *uint64_t v1 = sub_1834EFE48;
  v1[1] = (uint64_t (*)())v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  swift_storeEnumTagMultiPayload();
  long long v11 = *(os_unfair_lock_s **)(v2 + 128);
  uint64_t v12 = (void *)swift_task_alloc();
  v12[2] = v2;
  v12[3] = v5;
  v12[4] = v7;
  v12[5] = v1;
  uint64_t v13 = swift_task_alloc();
  *(void *)(v13 + 16) = sub_1834F2BC4;
  *(void *)(v13 + 24) = v12;
  v11 += 4;
  swift_retain();
  os_unfair_lock_lock(v11);
  sub_1834F2BDC();
  uint64_t v14 = *(void *)(v0 + 72);
  os_unfair_lock_unlock(v11);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1834F25A0(v14, (uint64_t (*)(void))type metadata accessor for NWActorSystem.ServerRole);
  swift_bridgeObjectRelease();
  sub_1834E1764();
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_1834E2768;
  return MEMORY[0x1F4188160]();
}

uint64_t sub_1834E2768()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1834E28E0;
  }
  else {
    uint64_t v2 = sub_1834E287C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1834E287C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1834E28E0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1834E2944(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FA8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v15[-v8];
  uint64_t v10 = *(os_unfair_lock_s **)(a2 + 128);
  uint64_t v19 = a2;
  uint64_t v20 = a1;
  uint64_t v16 = sub_1834F28D8;
  long long v17 = &v18;
  long long v11 = v10 + 4;
  os_unfair_lock_lock(v10 + 4);
  sub_1834F2BDC();
  os_unfair_lock_unlock(v11);
  sub_183138900((uint64_t)v9, (uint64_t)v7, &qword_1E8F62FA8);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) == 1)
  {
    sub_183138A24((uint64_t)v9, &qword_1E8F62FA8);
    return sub_183138A24((uint64_t)v7, &qword_1E8F62FA8);
  }
  else
  {
    sub_183D44F4C();
    sub_183138A24((uint64_t)v9, &qword_1E8F62FA8);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v13 + 8))(v7, v12);
  }
}

uint64_t sub_1834E2AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  if (*(unsigned char *)(a1 + 176) == 1)
  {
    v10(a3, a2, v6);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a3, 0, 1, v6);
  }
  else
  {
    v10((uint64_t)v9, a2, v6);
    uint64_t v12 = (unint64_t *)(a1 + 184);
    swift_beginAccess();
    unint64_t v13 = *(void *)(a1 + 184);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a1 + 184) = v13;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v13 = sub_1834B46B0(0, *(void *)(v13 + 16) + 1, 1, v13);
      *uint64_t v12 = v13;
    }
    unint64_t v16 = *(void *)(v13 + 16);
    unint64_t v15 = *(void *)(v13 + 24);
    if (v16 >= v15 >> 1)
    {
      unint64_t v13 = sub_1834B46B0(v15 > 1, v16 + 1, 1, v13);
      *uint64_t v12 = v13;
    }
    *(void *)(v13 + 16) = v16 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v13+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v16, v9, v6);
    swift_endAccess();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  }
}

uint64_t NWActorSystem.invalidateActor<A>(_:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NWActorID();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[1] = a1;
  sub_183D454AC();
  NWActorSystem.resignID(_:)((uint64_t)v4);
  return sub_1834F25A0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for NWActorID);
}

uint64_t NWActorSystem.resignID(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for NWActorID();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - v8;
  if (qword_1E8F62078 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_183D4498C();
  __swift_project_value_buffer(v10, (uint64_t)qword_1E8F62E88);
  sub_1834F2414(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for NWActorID);
  long long v11 = sub_183D4496C();
  os_log_type_t v12 = sub_183D452BC();
  if (os_log_type_enabled(v11, v12))
  {
    unint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v30 = v26;
    unint64_t v27 = v2;
    *(_DWORD *)unint64_t v13 = 136315138;
    uint64_t v24 = v13 + 4;
    uint64_t v25 = v13;
    sub_1834F2414((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for NWActorID);
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    sub_183D4547C();
    swift_bridgeObjectRelease();
    uint64_t v28 = 0x49726F746341574ELL;
    unint64_t v29 = 0xEA00000000002844;
    swift_bridgeObjectRetain();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    sub_183D44C8C();
    sub_183D445FC();
    sub_1834F2558((unint64_t *)&qword_1E8F62F30, 255, MEMORY[0x1E4F27990]);
    sub_183D4589C();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    sub_183D44C8C();
    uint64_t v14 = v28;
    unint64_t v15 = v29;
    sub_1834F25A0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for NWActorID);
    uint64_t v28 = sub_1834EFE70(v14, v15, &v30);
    uint64_t v2 = v27;
    sub_183D453AC();
    swift_bridgeObjectRelease();
    sub_1834F25A0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for NWActorID);
    unint64_t v16 = v25;
    _os_log_impl(&dword_1830D4000, v11, v12, "Resign actor: %s", v25, 0xCu);
    uint64_t v17 = v26;
    swift_arrayDestroy();
    MEMORY[0x185318E50](v17, -1, -1);
    MEMORY[0x185318E50](v16, -1, -1);
  }
  else
  {
    sub_1834F25A0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for NWActorID);
  }

  uint64_t v19 = MEMORY[0x1F4188790](v18);
  *(&v24 - 2) = v2;
  *(&v24 - 1) = (uint8_t *)a1;
  MEMORY[0x1F4188790](v19);
  *(&v24 - 2) = (uint8_t *)sub_1834EFE54;
  *(&v24 - 1) = v20;
  unint64_t v22 = v21 + 4;
  os_unfair_lock_lock(v21 + 4);
  sub_1834F0460(&v28);
  os_unfair_lock_unlock(v22);
  if (v28)
  {
    swift_retain();
    sub_18353AFF8();
    swift_release();
  }
  sub_1834E37C8(*(void *)a1, *(void *)(a1 + 8), 0);
  return swift_release();
}

uint64_t sub_1834E31FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  void v6[4] = a3;
  v6[5] = a4;
  void v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x1F4188298](sub_1834E3224, 0, 0);
}

uint64_t sub_1834E3224()
{
  uint64_t v1 = *(void *)(v0 + 56);
  long long v7 = *(_OWORD *)(v0 + 40);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 32) = v7;
  *(void *)(v2 + 48) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1834E3334;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188160](v4, 0, 0, 0xD000000000000027, 0x8000000183E24730, sub_1834F2924, v2, v5);
}

uint64_t sub_1834E3334()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1834E3470, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1834E3470()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1834E34D4(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for NWActorSystem.ServerRole();
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2(a1);
  uint64_t v14 = *(os_unfair_lock_s **)(a4 + 128);
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v24 = v13;
  uint64_t v18 = sub_1834F2BC4;
  uint64_t v19 = &v20;
  unint64_t v15 = v14 + 4;
  os_unfair_lock_lock(v14 + 4);
  sub_1834F2BDC();
  os_unfair_lock_unlock(v15);
  return sub_1834F25A0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NWActorSystem.ServerRole);
}

void sub_1834E3600(uint64_t a1, unint64_t a2)
{
  if (qword_1E8F62078 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_183D4498C();
  __swift_project_value_buffer(v4, (uint64_t)qword_1E8F62E88);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_183D4496C();
  os_log_type_t v6 = sub_183D452BC();
  if (os_log_type_enabled(v5, v6))
  {
    long long v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = v8;
    *(_DWORD *)long long v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_1834EFE70(a1, a2, &v9);
    sub_183D453AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1830D4000, v5, v6, "Publish task was canceled for %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v8, -1, -1);
    MEMORY[0x185318E50](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1834E37C8(a1, a2, 0);
}

void sub_1834E37C8(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v77 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
  uint64_t v73 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  v69 = (char *)&v66 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FA8);
  MEMORY[0x1F4188790](v12 - 8);
  v72 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FE8);
  MEMORY[0x1F4188790](v14 - 8);
  unint64_t v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for NWActorSystem.ServerRole();
  uint64_t v74 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v70 = (uint64_t)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v66 - v20;
  if (qword_1E8F62078 != -1) {
    swift_once();
  }
  v75 = v16;
  v71 = v21;
  uint64_t v22 = sub_183D4498C();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1E8F62E88);
  swift_bridgeObjectRetain_n();
  uint64_t v76 = v23;
  uint64_t v24 = sub_183D4496C();
  os_log_type_t v25 = sub_183D452BC();
  BOOL v26 = os_log_type_enabled(v24, v25);
  unint64_t v78 = a2;
  if (v26)
  {
    uint64_t v67 = v17;
    unint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v68 = v4;
    uint64_t v29 = v28;
    v80[0] = v28;
    *(_DWORD *)unint64_t v27 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v30 = v77;
    uint64_t v79 = sub_1834EFE70(v77, v78, v80);
    uint64_t v17 = v67;
    a2 = v78;
    sub_183D453AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1830D4000, v24, v25, "Cleaning up server for %s", v27, 0xCu);
    swift_arrayDestroy();
    uint64_t v31 = v29;
    uint64_t v4 = v68;
    MEMORY[0x185318E50](v31, -1, -1);
    MEMORY[0x185318E50](v27, -1, -1);
  }
  else
  {

    uint64_t v32 = swift_bridgeObjectRelease_n();
    uint64_t v30 = v77;
  }
  uint64_t v33 = MEMORY[0x1F4188790](v32);
  *(&v66 - 4) = v4;
  *(&v66 - 3) = v30;
  *(&v66 - 2) = a2;
  MEMORY[0x1F4188790](v33);
  *(&v66 - 2) = (uint64_t)sub_1834F2704;
  *(&v66 - 1) = v34;
  uint64_t v36 = v35 + 4;
  os_unfair_lock_lock(v35 + 4);
  uint64_t v37 = (uint64_t)v75;
  sub_1834EFDD4();
  os_unfair_lock_unlock(v36);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v37, 1, v17) != 1)
  {
    uint64_t v42 = (uint64_t)v71;
    sub_1834F2854(v37, (uint64_t)v71, (uint64_t (*)(void))type metadata accessor for NWActorSystem.ServerRole);
    uint64_t v43 = v70;
    sub_1834F2414(v42, v70, (uint64_t (*)(void))type metadata accessor for NWActorSystem.ServerRole);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
      uint64_t v44 = &qword_1E8F62F28;
    }
    else
    {
      swift_unknownObjectRelease();
      uint64_t v44 = &qword_1E8F62F08;
    }
    uint64_t v45 = (uint64_t)v72;
    uint64_t v46 = v77;
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(v44);
    sub_183138964(v43 + *(int *)(v47 + 48), v45, &qword_1E8F62FA8);
    sub_1834EEC60(v46, v78);
    int v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v45, 1, v7);
    if (a3)
    {
      if (!v48)
      {
        uint64_t v49 = v42;
        uint64_t v50 = v73;
        uint64_t v51 = v69;
        (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v69, v45, v7);
        v80[0] = (uint64_t)a3;
        id v52 = a3;
        sub_183D44F3C();
LABEL_19:
        (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v7);
        uint64_t v53 = v49;
        goto LABEL_20;
      }
    }
    else if (!v48)
    {
      uint64_t v49 = v42;
      uint64_t v50 = v73;
      uint64_t v51 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v69, v45, v7);
      sub_183D44F4C();
      goto LABEL_19;
    }
    uint64_t v53 = v42;
LABEL_20:
    sub_1834F25A0(v53, (uint64_t (*)(void))type metadata accessor for NWActorSystem.ServerRole);
    uint64_t v41 = sub_183138A24(v45, &qword_1E8F62FA8);
    goto LABEL_21;
  }
  sub_183138A24(v37, &qword_1E8F62FE8);
  uint64_t v38 = sub_183D4496C();
  os_log_type_t v39 = sub_183D4529C();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v40 = 0;
    _os_log_impl(&dword_1830D4000, v38, v39, "Attempting to clean up for untracked actor", v40, 2u);
    MEMORY[0x185318E50](v40, -1, -1);
  }

LABEL_21:
  MEMORY[0x1F4188790](v41);
  *(&v66 - 2) = (uint64_t)sub_1834F2724;
  *(&v66 - 1) = v4;
  os_unfair_lock_lock(v36);
  sub_1834F277C(v80);
  os_unfair_lock_unlock(v36);
  if (LOBYTE(v80[0]) == 1)
  {
    uint64_t v54 = sub_183D4496C();
    os_log_type_t v55 = sub_183D452BC();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v56 = 0;
      _os_log_impl(&dword_1830D4000, v54, v55, "No more actors published, canceling listener", v56, 2u);
      MEMORY[0x185318E50](v56, -1, -1);
    }

    MEMORY[0x1F4188790](v57);
    *(&v66 - 2) = (uint64_t)sub_1834F2798;
    *(&v66 - 1) = v4;
    os_unfair_lock_lock(v36);
    sub_1834F0460(v80);
    os_unfair_lock_unlock(v36);
    uint64_t v59 = v80[0];
    if (v80[0]) {
      nw_listener_cancel(*(nw_listener_t *)(v80[0] + 24));
    }
    MEMORY[0x1F4188790](v58);
    *(&v66 - 2) = (uint64_t)sub_1834F27AC;
    *(&v66 - 1) = v4;
    os_unfair_lock_lock(v36);
    sub_1834F0460(v80);
    os_unfair_lock_unlock(v36);
    uint64_t v60 = *(void *)(v80[0] + 16);
    if (v60)
    {
      uint64_t v77 = v80[0];
      unint64_t v78 = v59;
      uint64_t v61 = *(void (**)(char *, unint64_t, uint64_t))(v73 + 16);
      unint64_t v62 = v80[0] + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80));
      uint64_t v63 = *(void *)(v73 + 72);
      v64 = (void (**)(char *, uint64_t))(v73 + 8);
      v61(v10, v62, v7);
      while (1)
      {
        if (a3)
        {
          v80[0] = (uint64_t)a3;
          id v65 = a3;
          sub_183D44F3C();
        }
        else
        {
          sub_183D44F4C();
        }
        (*v64)(v10, v7);
        v62 += v63;
        if (!--v60) {
          break;
        }
        v61(v10, v62, v7);
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
}

void NWActorSystem.endpoint<A>(for:)(uint64_t a1@<X8>)
{
  uint64_t v4 = (os_unfair_lock_s *)(*(void *)(v1 + 128) + 16);
  os_unfair_lock_lock(v4);
  sub_1834F0460(&v7);
  if (v2)
  {
    os_unfair_lock_unlock(v4);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v4);
    if (v7)
    {
      uint64_t v5 = *(void *)(v7 + 16);
      swift_retain();
      swift_release();
      sub_1834F2414(v5 + OBJC_IVAR____TtC7Network13_NWConnection_endpoint, a1, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
      swift_release();
    }
    else
    {
      sub_1834F0498();
      swift_allocError();
      *(_OWORD *)uint64_t v6 = xmmword_183D55320;
      *(void *)(v6 + 16) = 0xB000000000000000;
      swift_willThrow();
    }
  }
}

uint64_t sub_1834E41DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for NWActorID();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (void *)((char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12[1] = a2;
  sub_183D454AC();
  swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 192) + 16) && (sub_18359A518(v8), (v9 & 1) != 0)) {
    uint64_t v10 = swift_retain();
  }
  else {
    uint64_t v10 = 0;
  }
  *a3 = v10;
  swift_endAccess();
  return sub_1834F25A0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for NWActorID);
}

void NWActorSystem.resolve<A>(id:as:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  uint64_t v37 = a4;
  uint64_t v9 = *v4;
  uint64_t v34 = a2;
  uint64_t v35 = v9;
  uint64_t v10 = type metadata accessor for NWActorID();
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v31 - v14;
  if (qword_1E8F62078 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_183D4498C();
  __swift_project_value_buffer(v16, (uint64_t)qword_1E8F62E88);
  uint64_t v36 = a1;
  sub_1834F2414(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for NWActorID);
  uint64_t v17 = sub_183D4496C();
  os_log_type_t v18 = sub_183D4528C();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v32 = a3;
    uint64_t v21 = v20;
    uint64_t v39 = v20;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v33 = v5;
    sub_1834F2414((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NWActorID);
    uint64_t v22 = sub_183D44B9C();
    uint64_t v38 = sub_1834EFE70(v22, v23, &v39);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    sub_1834F25A0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for NWActorID);
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v24 = sub_183D45C8C();
    uint64_t v38 = sub_1834EFE70(v24, v25, &v39);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1830D4000, v17, v18, "Resolving %s to %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    uint64_t v26 = v21;
    a3 = v32;
    MEMORY[0x185318E50](v26, -1, -1);
    MEMORY[0x185318E50](v19, -1, -1);
  }
  else
  {
    sub_1834F25A0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for NWActorID);
  }

  uint64_t v27 = v6[16];
  MEMORY[0x1F4188790](v28);
  uint64_t v29 = v37;
  *(&v31 - 6) = a3;
  *(&v31 - 5) = v29;
  uint64_t v30 = v36;
  *(&v31 - 4) = (uint64_t)v6;
  *(&v31 - 3) = v30;
  *(&v31 - 2) = v35;
  sub_183D4536C();
  sub_1834E1DC0((uint64_t)sub_1834F04EC, (uint64_t)(&v31 - 8), v27);
}

void sub_1834E467C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for NWActorID();
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v43 - v12;
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 136);
  if (*(void *)(v14 + 16) && (unint64_t v15 = sub_18359A518(a2), (v16 & 1) != 0))
  {
    uint64_t v17 = a4;
    uint64_t v18 = *(void *)(*(void *)(v14 + 56) + 8 * v15);
    swift_endAccess();
    uint64_t v19 = MEMORY[0x185318F80](v18 + 16);
    if (v19)
    {
      uint64_t v20 = *(void *)(v18 + 24);
      v48[0] = v19;
      v48[1] = v20;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63C80);
      if (swift_dynamicCast())
      {
        swift_release();
        *uint64_t v17 = v49;
        return;
      }
    }
    else
    {
      swift_retain();
    }
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63020);
    sub_1834F0498();
    swift_allocError();
    *uint64_t v42 = v41;
    v42[1] = a3;
    v42[2] = 0;
    swift_willThrow();
    swift_release();
  }
  else
  {
    swift_endAccess();
    if (qword_1E8F62098 != -1) {
      swift_once();
    }
    sub_183D45C6C();
    uint64_t v21 = v48[0];
    if (v48[0])
    {
      if (qword_1E8F62078 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_183D4498C();
      __swift_project_value_buffer(v22, (uint64_t)qword_1E8F62E88);
      sub_1834F2414((uint64_t)a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NWActorID);
      swift_retain_n();
      unint64_t v23 = sub_183D4496C();
      os_log_type_t v24 = sub_183D452BC();
      int v25 = v24;
      BOOL v26 = os_log_type_enabled(v23, v24);
      uint64_t v46 = a4;
      if (v26)
      {
        uint64_t v27 = swift_slowAlloc();
        int v45 = v25;
        uint64_t v28 = v27;
        uint64_t v44 = swift_slowAlloc();
        v48[0] = v44;
        *(_DWORD *)uint64_t v28 = 136315394;
        sub_1834F2414((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for NWActorID);
        uint64_t v29 = sub_183D44B9C();
        uint64_t v49 = sub_1834EFE70(v29, v30, v48);
        sub_183D453AC();
        swift_bridgeObjectRelease();
        sub_1834F25A0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NWActorID);
        *(_WORD *)(v28 + 12) = 2080;
        uint64_t v49 = v21;
        _s15ActorConnectionCMa(0);
        swift_retain();
        uint64_t v31 = sub_183D44B9C();
        uint64_t v49 = sub_1834EFE70(v31, v32, v48);
        sub_183D453AC();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1830D4000, v23, (os_log_type_t)v45, "Associating actor %s to %s", (uint8_t *)v28, 0x16u);
        uint64_t v33 = v44;
        swift_arrayDestroy();
        MEMORY[0x185318E50](v33, -1, -1);
        MEMORY[0x185318E50](v28, -1, -1);
      }
      else
      {
        sub_1834F25A0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NWActorID);

        uint64_t v34 = swift_release_n();
      }
      uint64_t v35 = MEMORY[0x1F4188790](v34);
      *(&v43 - 2) = v21;
      *(&v43 - 1) = (uint64_t)a2;
      MEMORY[0x1F4188790](v35);
      *(&v43 - 2) = (uint64_t)sub_1834F268C;
      *(&v43 - 1) = v36;
      uint64_t v38 = v37 + 4;
      os_unfair_lock_lock(v37 + 4);
      uint64_t v39 = v47;
      sub_1834F2BDC();
      os_unfair_lock_unlock(v38);
      if (v39)
      {
        __break(1u);
      }
      else
      {
        sub_1834F2414((uint64_t)a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for NWActorID);
        swift_beginAccess();
        swift_retain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v49 = *(void *)(a1 + 192);
        *(void *)(a1 + 192) = 0x8000000000000000;
        sub_18359E9F0(v21, v11, isUniquelyReferenced_nonNull_native);
        *(void *)(a1 + 192) = v49;
        swift_bridgeObjectRelease();
        sub_1834F25A0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for NWActorID);
        swift_endAccess();
        swift_release();
        *uint64_t v46 = 0;
      }
    }
    else
    {
      *a4 = 0;
    }
  }
}

uint64_t sub_1834E4C24()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62DD0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_183D445FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63018);
  swift_allocObject();
  uint64_t result = sub_183D45C5C();
  qword_1E8F62ED0 = result;
  return result;
}

uint64_t NWActorSystem.assignID<A>(_:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62DD0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_183D445FC();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v13 - v10;
  if (qword_1E8F620A0 != -1) {
    swift_once();
  }
  sub_183D45C6C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_183138A24((uint64_t)v4, &qword_1E8F62DD0);
    sub_183D445EC();
    return sub_183558358((uint64_t)v9, a1);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    sub_183558358((uint64_t)v9, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
}

void NWActorSystem.actorReady<A>(_:)()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 128) + 16);
  os_unfair_lock_lock(v1);
  sub_1834F2BDC();
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1834E4FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for NWActorID();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (void *)((char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13[1] = a2;
  sub_183D454AC();
  type metadata accessor for WeakDistributedActor();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v10 + 24) = a4;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = 0x8000000000000000;
  sub_18359E9FC(v10, v9, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + 136) = v14;
  swift_bridgeObjectRelease();
  sub_1834F25A0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for NWActorID);
  return swift_endAccess();
}

uint64_t sub_1834E50FC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FC8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NWActorID();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  sub_18359B0B4(a2);
  swift_endAccess();
  swift_release();
  sub_1834F2414((uint64_t)a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for NWActorID);
  uint64_t v12 = type metadata accessor for NWActorDiscoveryMechanism(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 1, 1, v12);
  swift_beginAccess();
  sub_1835340B0((uint64_t)v8, v11);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v13 = sub_18359B1CC(a2);
  swift_endAccess();
  sub_18313D870(v13);
  if (!*(void *)(*(void *)(a1 + 136) + 16))
  {
    if (*(void *)(a1 + 160))
    {
      swift_retain();
      sub_183518F9C();
      swift_release();
    }
    *(void *)(a1 + 160) = 0;
    swift_release();
  }
  swift_beginAccess();
  *a3 = sub_18359B094(a2);
  return swift_endAccess();
}

Network::NWActorSystemInvocationEncoder __swiftcall NWActorSystem.makeInvocationEncoder()()
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *uint64_t v0 = MEMORY[0x1E4FBC860];
  v0[1] = v1;
  return result;
}

uint64_t NWActorSystem.remoteCall<A, B, C>(on:target:invocation:throwing:returning:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[21] = v18;
  v9[22] = v8;
  v9[19] = v16;
  v9[20] = v17;
  v9[17] = a7;
  v9[18] = a8;
  v9[15] = a3;
  v9[16] = a4;
  v9[13] = a1;
  v9[14] = a2;
  v9[23] = swift_conformsToProtocol();
  v9[24] = swift_conformsToProtocol();
  uint64_t v10 = sub_183D4491C();
  v9[25] = v10;
  v9[26] = *(void *)(v10 - 8);
  v9[27] = swift_task_alloc();
  v9[28] = swift_task_alloc();
  v9[29] = swift_task_alloc();
  uint64_t v11 = sub_183D448DC();
  v9[30] = v11;
  v9[31] = *(void *)(v11 - 8);
  v9[32] = swift_task_alloc();
  v9[33] = swift_task_alloc();
  v9[34] = swift_task_alloc();
  v9[35] = swift_task_alloc();
  v9[36] = swift_task_alloc();
  v9[37] = type metadata accessor for NWActorID();
  v9[38] = swift_task_alloc();
  v9[39] = swift_task_alloc();
  uint64_t v12 = sub_183D4465C();
  v9[40] = v12;
  v9[41] = *(void *)(v12 - 8);
  v9[42] = swift_task_alloc();
  v9[43] = swift_task_alloc();
  v9[44] = swift_task_alloc();
  uint64_t v13 = sub_183D445FC();
  v9[45] = v13;
  v9[46] = *(void *)(v13 - 8);
  v9[47] = swift_task_alloc();
  v9[48] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1834E5620, 0, 0);
}

uint64_t sub_1834E5620()
{
  uint64_t v92 = v0;
  sub_183D445EC();
  if (qword_1E8F62078 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 376);
  uint64_t v2 = *(void *)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 360);
  uint64_t v4 = *(void *)(v0 + 368);
  uint64_t v5 = *(void *)(v0 + 352);
  uint64_t v88 = *(void *)(v0 + 344);
  uint64_t v7 = *(void *)(v0 + 320);
  uint64_t v6 = *(void *)(v0 + 328);
  uint64_t v8 = *(void *)(v0 + 120);
  uint64_t v9 = sub_183D4498C();
  __swift_project_value_buffer(v9, (uint64_t)qword_1E8F62E88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v10(v5, v8, v7);
  v86 = v10;
  v10(v88, v8, v7);
  swift_unknownObjectRetain_n();
  uint64_t v11 = sub_183D4496C();
  os_log_type_t v12 = sub_183D452BC();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v15 = *(void *)(v0 + 368);
  uint64_t v14 = *(void *)(v0 + 376);
  uint64_t v16 = *(void *)(v0 + 360);
  uint64_t v85 = *(void *)(v0 + 352);
  uint64_t v17 = *(void *)(v0 + 344);
  uint64_t v19 = *(void *)(v0 + 320);
  uint64_t v18 = *(void *)(v0 + 328);
  if (v13)
  {
    uint64_t v82 = *(void *)(v0 + 344);
    uint64_t v20 = *(void *)(v0 + 312);
    uint64_t v74 = *(void *)(v0 + 112);
    uint64_t v77 = *(void *)(v0 + 320);
    uint64_t v21 = swift_slowAlloc();
    uint64_t v84 = swift_slowAlloc();
    uint64_t v89 = v84;
    *(_DWORD *)uint64_t v21 = 136315906;
    sub_1834F2558((unint64_t *)&qword_1E8F62F30, 255, MEMORY[0x1E4F27990]);
    uint64_t v22 = sub_183D4589C();
    os_log_type_t type = v12;
    *(void *)(v0 + 64) = sub_1834EFE70(v22, v23, &v89);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    *(_WORD *)(v21 + 12) = 2080;
    *(void *)(v0 + 72) = v74;
    sub_183D454AC();
    swift_unknownObjectRelease();
    uint64_t v90 = 0;
    unint64_t v91 = 0xE000000000000000;
    sub_183D4547C();
    swift_bridgeObjectRelease();
    uint64_t v90 = 0x49726F746341574ELL;
    unint64_t v91 = 0xEA00000000002844;
    swift_bridgeObjectRetain();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    sub_183D44C8C();
    sub_183D4589C();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    sub_183D44C8C();
    uint64_t v25 = v90;
    unint64_t v24 = v91;
    sub_1834F25A0(v20, (uint64_t (*)(void))type metadata accessor for NWActorID);
    *(void *)(v0 + 80) = sub_1834EFE70(v25, v24, &v89);
    sub_183D453AC();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2080;
    sub_1834F2558(&qword_1E8F62F50, 255, MEMORY[0x1E4FBCCE8]);
    uint64_t v26 = sub_183D4589C();
    *(void *)(v0 + 88) = sub_1834EFE70(v26, v27, &v89);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v28(v85, v77);
    *(_WORD *)(v21 + 32) = 2080;
    uint64_t v29 = sub_183D4464C();
    *(void *)(v0 + 96) = sub_1834EFE70(v29, v30, &v89);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    v28(v82, v77);
    _os_log_impl(&dword_1830D4000, v11, type, "Call %s: %s, target: %s, target.identifier: %s", (uint8_t *)v21, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v84, -1, -1);
    MEMORY[0x185318E50](v21, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    swift_unknownObjectRelease();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v28(v85, v19);
    v28(v17, v19);
  }
  if (qword_1E8F62080 != -1) {
    swift_once();
  }
  uint64_t v31 = *(void *)(v0 + 336);
  uint64_t v32 = *(void *)(v0 + 320);
  uint64_t v33 = *(void *)(v0 + 120);
  uint64_t v34 = sub_183D4490C();
  *(void *)(v0 + 392) = __swift_project_value_buffer(v34, (uint64_t)qword_1E8F62EA0);
  sub_183D448FC();
  sub_183D448AC();
  v86(v31, v33, v32);
  swift_unknownObjectRetain_n();
  uint64_t v35 = sub_183D448FC();
  os_signpost_type_t v36 = sub_183D4533C();
  if (sub_183D4535C())
  {
    uint64_t v37 = *(void *)(v0 + 336);
    uint64_t v38 = *(void *)(v0 + 312);
    uint64_t v76 = *(void *)(v0 + 320);
    uint64_t v79 = *(void *)(v0 + 280);
    uint64_t v87 = *(void *)(v0 + 248);
    os_log_t log = *(os_log_t *)(v0 + 240);
    uint64_t v75 = *(void *)(v0 + 112);
    (*(void (**)(void))(v87 + 16))();
    uint64_t v39 = swift_slowAlloc();
    uint64_t typea = swift_slowAlloc();
    uint64_t v89 = typea;
    *(_DWORD *)uint64_t v39 = 136315394;
    uint64_t v40 = sub_183D4464C();
    os_signpost_type_t v78 = v36;
    *(void *)(v0 + 40) = sub_1834EFE70(v40, v41, &v89);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    v28(v37, v76);
    *(_WORD *)(v39 + 12) = 2080;
    *(void *)(v0 + 48) = v75;
    sub_183D454AC();
    swift_unknownObjectRelease();
    uint64_t v90 = 0;
    unint64_t v91 = 0xE000000000000000;
    sub_183D4547C();
    swift_bridgeObjectRelease();
    uint64_t v90 = 0x49726F746341574ELL;
    unint64_t v91 = 0xEA00000000002844;
    swift_bridgeObjectRetain();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    sub_183D44C8C();
    sub_1834F2558((unint64_t *)&qword_1E8F62F30, 255, MEMORY[0x1E4F27990]);
    sub_183D4589C();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    sub_183D44C8C();
    uint64_t v43 = v90;
    unint64_t v42 = v91;
    sub_1834F25A0(v38, (uint64_t (*)(void))type metadata accessor for NWActorID);
    *(void *)(v0 + 56) = sub_1834EFE70(v43, v42, &v89);
    sub_183D453AC();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    os_signpost_id_t v44 = sub_183D448BC();
    _os_signpost_emit_with_name_impl(&dword_1830D4000, v35, v78, v44, "remoteCall", "Call to %s, actor: %s", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x185318E50](typea, -1, -1);
    MEMORY[0x185318E50](v39, -1, -1);

    (*(void (**)(uint64_t, os_log_t))(v87 + 8))(v79, log);
  }
  else
  {
    uint64_t v45 = *(void *)(v0 + 336);
    uint64_t v46 = *(void *)(v0 + 320);

    swift_unknownObjectRelease();
    v28(v45, v46);
    swift_unknownObjectRelease();
  }
  uint64_t v48 = *(void *)(v0 + 280);
  uint64_t v47 = *(void *)(v0 + 288);
  uint64_t v49 = *(void *)(v0 + 240);
  uint64_t v50 = *(void *)(v0 + 248);
  uint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
  *(void *)(v0 + 400) = v51;
  *(void *)(v0 + 408) = (v50 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v51(v48, v47, v49);
  sub_183D4494C();
  swift_allocObject();
  *(void *)(v0 + 416) = sub_183D4493C();
  if (qword_1E8F62090 != -1) {
    swift_once();
  }
  uint64_t v52 = *(void *)(v0 + 304);
  uint64_t v53 = *(void *)(v0 + 176);
  uint64_t v54 = *(void *)(v0 + 112);
  sub_183D45C6C();
  uint64_t v55 = *(void *)(v0 + 16);
  _s18RemoteCallActivityCMa();
  swift_allocObject();
  uint64_t v56 = sub_183524D40(v55);
  *(void *)(v0 + 424) = v56;
  *(void *)(v0 + 24) = v54;
  sub_183D454AC();
  uint64_t v57 = *(os_unfair_lock_s **)(v53 + 128);
  uint64_t v58 = (void *)swift_task_alloc();
  v58[2] = v53;
  v58[3] = v52;
  v58[4] = v56;
  uint64_t v59 = swift_task_alloc();
  *(void *)(v59 + 16) = sub_1834F0530;
  *(void *)(v59 + 24) = v58;
  v57 += 4;
  os_unfair_lock_lock(v57);
  sub_1834F0460(&v90);
  uint64_t v60 = *(void *)(v0 + 304);
  os_unfair_lock_unlock(v57);
  uint64_t v61 = v90;
  *(void *)(v0 + 432) = v90;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1834F25A0(v60, (uint64_t (*)(void))type metadata accessor for NWActorID);
  if (qword_1E8F62098 != -1) {
    swift_once();
  }
  uint64_t v62 = *(void *)(v0 + 384);
  uint64_t v64 = *(void *)(v0 + 168);
  uint64_t v63 = *(void *)(v0 + 176);
  uint64_t v65 = *(void *)(v0 + 128);
  *(void *)(v0 + 32) = v61;
  uint64_t v66 = swift_task_alloc();
  *(void *)(v0 + 440) = v66;
  long long v67 = *(_OWORD *)(v0 + 152);
  long long v68 = *(_OWORD *)(v0 + 184);
  long long v69 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v66 + 16) = *(_OWORD *)(v0 + 136);
  *(_OWORD *)(v66 + 32) = v67;
  *(void *)(v66 + 48) = v64;
  *(_OWORD *)(v66 + 56) = v68;
  *(void *)(v66 + 72) = v61;
  *(void *)(v66 + 80) = v63;
  *(void *)(v66 + 88) = v62;
  *(_OWORD *)(v66 + 96) = v69;
  *(void *)(v66 + 112) = v65;
  *(void *)(v66 + 120) = v56;
  swift_retain();
  uint64_t v70 = (void *)swift_task_alloc();
  *(void *)(v0 + 448) = v70;
  *uint64_t v70 = v0;
  v70[1] = sub_1834E6514;
  uint64_t v71 = *(void *)(v0 + 152);
  uint64_t v72 = *(void *)(v0 + 104);
  uint64_t v94 = 298;
  uint64_t v95 = v71;
  return MEMORY[0x1F41881B8](v72, v0 + 32, &unk_1E8F62F48, v66, 0, 0, 0xD00000000000001BLL, 0x8000000183E242E0);
}

uint64_t sub_1834E6514()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1834E6934;
  }
  else {
    uint64_t v2 = sub_1834E663C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1834E663C()
{
  swift_release();
  swift_release();
  uint64_t v1 = sub_183D448FC();
  sub_183D4492C();
  os_signpost_type_t v2 = sub_183D4532C();
  if (sub_183D4535C())
  {
    uint64_t v3 = *(void *)(v0 + 224);
    uint64_t v5 = *(void *)(v0 + 200);
    uint64_t v4 = *(void *)(v0 + 208);
    swift_retain();
    sub_183D4495C();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 208) + 8))(*(void *)(v0 + 224), *(void *)(v0 + 200));
      uint64_t v6 = "";
    }
    uint64_t v7 = (uint64_t *)(v0 + 280);
    uint64_t v10 = *(void *)(v0 + 264);
    uint64_t v12 = *(void *)(v0 + 240);
    uint64_t v11 = *(void *)(v0 + 248);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 400))(*(void *)(v0 + 280), v10, v12);
    BOOL v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v13 = 0;
    os_signpost_id_t v14 = sub_183D448BC();
    _os_signpost_emit_with_name_impl(&dword_1830D4000, v1, v2, v14, "remoteCall", v6, v13, 2u);
    MEMORY[0x185318E50](v13, -1, -1);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v9(v10, v12);
  }
  else
  {
    uint64_t v7 = (uint64_t *)(v0 + 264);
    uint64_t v8 = *(void *)(v0 + 248);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  }
  uint64_t v15 = *v7;
  uint64_t v16 = *(void *)(v0 + 384);
  uint64_t v17 = *(void *)(v0 + 360);
  uint64_t v18 = *(void *)(v0 + 368);
  uint64_t v19 = *(void *)(v0 + 288);
  uint64_t v20 = *(void *)(v0 + 240);
  v9(v15, v20);
  swift_release();
  v9(v19, v20);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_1834E6934()
{
  swift_release();
  swift_release();
  uint64_t v1 = sub_183D448FC();
  sub_183D4492C();
  os_signpost_type_t v2 = sub_183D4532C();
  if (sub_183D4535C())
  {
    uint64_t v3 = *(void *)(v0 + 208);
    uint64_t v4 = *(void *)(v0 + 216);
    uint64_t v5 = *(void *)(v0 + 200);
    swift_retain();
    sub_183D4495C();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 88))(v4, v5) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 208) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 200));
      uint64_t v6 = "";
    }
    uint64_t v7 = (uint64_t *)(v0 + 280);
    uint64_t v10 = *(void *)(v0 + 248);
    uint64_t v11 = *(void *)(v0 + 256);
    uint64_t v12 = *(void *)(v0 + 240);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 400))(*(void *)(v0 + 280), v11, v12);
    BOOL v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v13 = 0;
    os_signpost_id_t v14 = sub_183D448BC();
    _os_signpost_emit_with_name_impl(&dword_1830D4000, v1, v2, v14, "remoteCall", v6, v13, 2u);
    MEMORY[0x185318E50](v13, -1, -1);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v9(v11, v12);
  }
  else
  {
    uint64_t v7 = (uint64_t *)(v0 + 256);
    uint64_t v8 = *(void *)(v0 + 248);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  }
  uint64_t v15 = *v7;
  uint64_t v16 = *(void *)(v0 + 384);
  uint64_t v17 = *(void *)(v0 + 360);
  uint64_t v18 = *(void *)(v0 + 368);
  uint64_t v19 = *(void *)(v0 + 288);
  uint64_t v20 = *(void *)(v0 + 240);
  v9(v15, v20);
  swift_release();
  v9(v19, v20);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_1834E6C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[16] = v14;
  v8[17] = v15;
  v8[14] = v12;
  v8[15] = v13;
  v8[12] = a8;
  v8[13] = v11;
  v8[10] = a6;
  v8[11] = a7;
  v8[8] = a4;
  v8[9] = a5;
  v8[6] = a2;
  v8[7] = a3;
  v8[5] = a1;
  type metadata accessor for NWActorID();
  v8[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1834E6CE8, 0, 0);
}

uint64_t sub_1834E6CE8()
{
  uint64_t v1 = *(uint64_t **)(v0 + 88);
  *(void *)(v0 + 32) = *(void *)(v0 + 72);
  sub_183D454AC();
  uint64_t v2 = *v1;
  *(void *)(v0 + 152) = *v1;
  uint64_t v3 = v1[1];
  *(void *)(v0 + 160) = v3;
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1834E6DFC;
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 96);
  uint64_t v8 = *(void *)(v0 + 80);
  uint64_t v9 = *(void *)(v0 + 56);
  uint64_t v10 = *(void *)(v0 + 64);
  uint64_t v11 = *(void *)(v0 + 40);
  return sub_18353B770(v11, v9, v10, v5, v8, (_OWORD *)(v0 + 16), v6, v7);
}

uint64_t sub_1834E6DFC()
{
  uint64_t v2 = *(void *)(*v1 + 144);
  uint64_t v3 = *v1;
  *(void *)(v3 + 176) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1834F25A0(v2, (uint64_t (*)(void))type metadata accessor for NWActorID);
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1834E6FB8, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
}

uint64_t sub_1834E6FB8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t NWActorSystem.remoteCallVoid<A, B>(on:target:invocation:throwing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[19] = a7;
  v8[20] = v7;
  v8[17] = a3;
  v8[18] = a5;
  v8[15] = a1;
  v8[16] = a2;
  uint64_t v9 = sub_183D4491C();
  v8[21] = v9;
  v8[22] = *(void *)(v9 - 8);
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  v8[25] = swift_task_alloc();
  uint64_t v10 = sub_183D448DC();
  v8[26] = v10;
  v8[27] = *(void *)(v10 - 8);
  v8[28] = swift_task_alloc();
  v8[29] = swift_task_alloc();
  v8[30] = swift_task_alloc();
  v8[31] = swift_task_alloc();
  v8[32] = swift_task_alloc();
  v8[33] = type metadata accessor for NWActorID();
  v8[34] = swift_task_alloc();
  v8[35] = swift_task_alloc();
  v8[36] = swift_task_alloc();
  uint64_t v11 = sub_183D4465C();
  v8[37] = v11;
  v8[38] = *(void *)(v11 - 8);
  v8[39] = swift_task_alloc();
  v8[40] = swift_task_alloc();
  v8[41] = swift_task_alloc();
  uint64_t v12 = sub_183D445FC();
  v8[42] = v12;
  v8[43] = *(void *)(v12 - 8);
  v8[44] = swift_task_alloc();
  v8[45] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1834E72C0, 0, 0);
}

uint64_t sub_1834E72C0()
{
  uint64_t v90 = v0;
  sub_183D445EC();
  if (qword_1E8F62078 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 352);
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 344);
  uint64_t v5 = *(void *)(v0 + 328);
  uint64_t v86 = *(void *)(v0 + 320);
  uint64_t v7 = *(void *)(v0 + 296);
  uint64_t v6 = *(void *)(v0 + 304);
  uint64_t v8 = *(void *)(v0 + 128);
  uint64_t v9 = sub_183D4498C();
  __swift_project_value_buffer(v9, (uint64_t)qword_1E8F62E88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v10(v5, v8, v7);
  uint64_t v84 = v10;
  v10(v86, v8, v7);
  swift_unknownObjectRetain_n();
  uint64_t v11 = sub_183D4496C();
  os_log_type_t v12 = sub_183D452BC();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v14 = *(void *)(v0 + 344);
  uint64_t v15 = *(void *)(v0 + 352);
  uint64_t v16 = *(void *)(v0 + 336);
  uint64_t v17 = *(void *)(v0 + 320);
  uint64_t v18 = *(void *)(v0 + 304);
  uint64_t v82 = *(void *)(v0 + 328);
  uint64_t v83 = *(void *)(v0 + 296);
  if (v13)
  {
    uint64_t v71 = *(void *)(v0 + 304);
    uint64_t v19 = *(void *)(v0 + 288);
    uint64_t v80 = *(void *)(v0 + 120);
    uint64_t v75 = *(void *)(v0 + 320);
    uint64_t v20 = swift_slowAlloc();
    uint64_t v78 = swift_slowAlloc();
    uint64_t v87 = v78;
    *(_DWORD *)uint64_t v20 = 136315906;
    os_log_type_t type = v12;
    sub_1834F2558((unint64_t *)&qword_1E8F62F30, 255, MEMORY[0x1E4F27990]);
    uint64_t v21 = sub_183D4589C();
    *(void *)(v0 + 80) = sub_1834EFE70(v21, v22, &v87);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v16);
    *(_WORD *)(v20 + 12) = 2080;
    *(void *)(v0 + 88) = v80;
    sub_183D454AC();
    swift_unknownObjectRelease();
    uint64_t v88 = 0;
    unint64_t v89 = 0xE000000000000000;
    sub_183D4547C();
    swift_bridgeObjectRelease();
    uint64_t v88 = 0x49726F746341574ELL;
    unint64_t v89 = 0xEA00000000002844;
    swift_bridgeObjectRetain();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    sub_183D44C8C();
    sub_183D4589C();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    sub_183D44C8C();
    uint64_t v24 = v88;
    unint64_t v23 = v89;
    sub_1834F25A0(v19, (uint64_t (*)(void))type metadata accessor for NWActorID);
    *(void *)(v0 + 96) = sub_1834EFE70(v24, v23, &v87);
    sub_183D453AC();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2080;
    sub_1834F2558(&qword_1E8F62F50, 255, MEMORY[0x1E4FBCCE8]);
    uint64_t v25 = sub_183D4589C();
    *(void *)(v0 + 104) = sub_1834EFE70(v25, v26, &v87);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
    v27(v82, v83);
    *(_WORD *)(v20 + 32) = 2080;
    uint64_t v28 = sub_183D4464C();
    *(void *)(v0 + 112) = sub_1834EFE70(v28, v29, &v87);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    v81 = v27;
    v27(v75, v83);
    _os_log_impl(&dword_1830D4000, v11, type, "Call %s: %s, target: %s, target.identifier: %s", (uint8_t *)v20, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v78, -1, -1);
    MEMORY[0x185318E50](v20, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v16);
    swift_unknownObjectRelease();
    unint64_t v30 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v30(v82, v83);
    v81 = v30;
    v30(v17, v83);
  }
  if (qword_1E8F62080 != -1) {
    swift_once();
  }
  uint64_t v31 = *(void *)(v0 + 312);
  uint64_t v32 = *(void *)(v0 + 296);
  uint64_t v33 = *(void *)(v0 + 128);
  uint64_t v34 = sub_183D4490C();
  *(void *)(v0 + 368) = __swift_project_value_buffer(v34, (uint64_t)qword_1E8F62EA0);
  sub_183D448FC();
  sub_183D448AC();
  v84(v31, v33, v32);
  swift_unknownObjectRetain_n();
  uint64_t v35 = sub_183D448FC();
  os_signpost_type_t v36 = sub_183D4533C();
  if (sub_183D4535C())
  {
    os_signpost_type_t typea = v36;
    uint64_t v37 = *(void *)(v0 + 312);
    uint64_t v38 = *(void *)(v0 + 288);
    os_log_t log = *(os_log_t *)(v0 + 248);
    uint64_t v85 = *(void *)(v0 + 216);
    uint64_t v79 = *(void *)(v0 + 208);
    uint64_t v72 = *(void *)(v0 + 296);
    uint64_t v39 = *(void *)(v0 + 120);
    (*(void (**)(void))(v85 + 16))();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v74 = swift_slowAlloc();
    uint64_t v87 = v74;
    *(_DWORD *)uint64_t v40 = 136315394;
    uint64_t v41 = sub_183D4464C();
    *(void *)(v0 + 56) = sub_1834EFE70(v41, v42, &v87);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    v81(v37, v72);
    *(_WORD *)(v40 + 12) = 2080;
    *(void *)(v0 + 64) = v39;
    sub_183D454AC();
    swift_unknownObjectRelease();
    uint64_t v88 = 0;
    unint64_t v89 = 0xE000000000000000;
    sub_183D4547C();
    swift_bridgeObjectRelease();
    uint64_t v88 = 0x49726F746341574ELL;
    unint64_t v89 = 0xEA00000000002844;
    swift_bridgeObjectRetain();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    sub_183D44C8C();
    sub_1834F2558((unint64_t *)&qword_1E8F62F30, 255, MEMORY[0x1E4F27990]);
    sub_183D4589C();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    sub_183D44C8C();
    uint64_t v43 = v88;
    unint64_t v44 = v89;
    sub_1834F25A0(v38, (uint64_t (*)(void))type metadata accessor for NWActorID);
    *(void *)(v0 + 72) = sub_1834EFE70(v43, v44, &v87);
    sub_183D453AC();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    os_signpost_id_t v45 = sub_183D448BC();
    _os_signpost_emit_with_name_impl(&dword_1830D4000, v35, typea, v45, "remoteCallVoid", "Call to %s, actor: %s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v74, -1, -1);
    MEMORY[0x185318E50](v40, -1, -1);

    (*(void (**)(os_log_t, uint64_t))(v85 + 8))(log, v79);
  }
  else
  {
    uint64_t v46 = *(void *)(v0 + 312);
    uint64_t v47 = *(void *)(v0 + 296);

    swift_unknownObjectRelease();
    v81(v46, v47);
    swift_unknownObjectRelease();
  }
  uint64_t v49 = *(void *)(v0 + 248);
  uint64_t v48 = *(void *)(v0 + 256);
  uint64_t v50 = *(void *)(v0 + 208);
  uint64_t v51 = *(void *)(v0 + 216);
  uint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16);
  *(void *)(v0 + 376) = v52;
  *(void *)(v0 + 384) = (v51 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v52(v49, v48, v50);
  sub_183D4494C();
  swift_allocObject();
  *(void *)(v0 + 392) = sub_183D4493C();
  if (qword_1E8F62090 != -1) {
    swift_once();
  }
  uint64_t v53 = *(void *)(v0 + 280);
  uint64_t v54 = *(void *)(v0 + 160);
  uint64_t v55 = *(void *)(v0 + 120);
  sub_183D45C6C();
  uint64_t v56 = *(void *)(v0 + 48);
  _s18RemoteCallActivityCMa();
  swift_allocObject();
  uint64_t v57 = sub_183524D40(v56);
  *(void *)(v0 + 400) = v57;
  *(void *)(v0 + 32) = v55;
  sub_183D454AC();
  uint64_t v58 = *(os_unfair_lock_s **)(v54 + 128);
  uint64_t v59 = (void *)swift_task_alloc();
  v59[2] = v54;
  v59[3] = v53;
  v59[4] = v57;
  uint64_t v60 = swift_task_alloc();
  *(void *)(v60 + 16) = sub_1834F2C2C;
  *(void *)(v60 + 24) = v59;
  os_unfair_lock_lock(v58 + 4);
  sub_1834F0460(&v88);
  uint64_t v61 = *(void *)(v0 + 280);
  uint64_t v62 = *(uint64_t **)(v0 + 136);
  uint64_t v63 = *(void *)(v0 + 120);
  os_unfair_lock_unlock(v58 + 4);
  *(void *)(v0 + 408) = v88;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1834F25A0(v61, (uint64_t (*)(void))type metadata accessor for NWActorID);
  *(void *)(v0 + 40) = v63;
  sub_183D454AC();
  uint64_t v64 = *v62;
  *(void *)(v0 + 416) = *v62;
  uint64_t v65 = v62[1];
  *(void *)(v0 + 424) = v65;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(v0 + 16) = v64;
  *(void *)(v0 + 24) = v65;
  uint64_t v66 = (void *)swift_task_alloc();
  *(void *)(v0 + 432) = v66;
  *uint64_t v66 = v0;
  v66[1] = sub_1834E8174;
  uint64_t v67 = *(void *)(v0 + 360);
  uint64_t v68 = *(void *)(v0 + 272);
  uint64_t v69 = *(void *)(v0 + 128);
  return sub_18353CFE8(v67, v68, v69, (_OWORD *)(v0 + 16), v57);
}

uint64_t sub_1834E8174(uint64_t a1, unint64_t a2)
{
  *(void *)(*(void *)v3 + 440) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v6 = sub_1834E85DC;
  }
  else
  {
    sub_1832E5E9C(a1, a2);
    uint64_t v6 = sub_1834E82A4;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1834E82A4()
{
  uint64_t v1 = (uint64_t *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 272);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1834F25A0(v2, (uint64_t (*)(void))type metadata accessor for NWActorID);
  swift_release();
  swift_release();
  uint64_t v3 = sub_183D448FC();
  sub_183D4492C();
  os_signpost_type_t v4 = sub_183D4532C();
  if (sub_183D4535C())
  {
    uint64_t v5 = *(void *)(v0 + 192);
    uint64_t v7 = *(void *)(v0 + 168);
    uint64_t v6 = *(void *)(v0 + 176);
    swift_retain();
    sub_183D4495C();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v6 + 88))(v5, v7) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 176) + 8))(*(void *)(v0 + 192), *(void *)(v0 + 168));
      uint64_t v8 = "";
    }
    uint64_t v1 = (uint64_t *)(v0 + 248);
    uint64_t v11 = *(void *)(v0 + 232);
    uint64_t v13 = *(void *)(v0 + 208);
    uint64_t v12 = *(void *)(v0 + 216);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 376))(*(void *)(v0 + 248), v11, v13);
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    os_signpost_id_t v15 = sub_183D448BC();
    _os_signpost_emit_with_name_impl(&dword_1830D4000, v3, v4, v15, "remoteCallVoid", v8, v14, 2u);
    MEMORY[0x185318E50](v14, -1, -1);

    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v10(v11, v13);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 216);

    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  }
  uint64_t v16 = *v1;
  uint64_t v17 = *(void *)(v0 + 360);
  uint64_t v18 = *(void *)(v0 + 336);
  uint64_t v19 = *(void *)(v0 + 344);
  uint64_t v20 = *(void *)(v0 + 256);
  uint64_t v21 = *(void *)(v0 + 208);
  v10(v16, v21);
  swift_release();
  v10(v20, v21);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_1834E85DC()
{
  uint64_t v1 = (uint64_t *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 272);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1834F25A0(v2, (uint64_t (*)(void))type metadata accessor for NWActorID);
  swift_release();
  swift_release();
  uint64_t v3 = sub_183D448FC();
  sub_183D4492C();
  os_signpost_type_t v4 = sub_183D4532C();
  if (sub_183D4535C())
  {
    uint64_t v5 = *(void *)(v0 + 176);
    uint64_t v6 = *(void *)(v0 + 184);
    uint64_t v7 = *(void *)(v0 + 168);
    swift_retain();
    sub_183D4495C();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v6, v7) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 176) + 8))(*(void *)(v0 + 184), *(void *)(v0 + 168));
      uint64_t v8 = "";
    }
    uint64_t v1 = (uint64_t *)(v0 + 248);
    uint64_t v11 = *(void *)(v0 + 216);
    uint64_t v12 = *(void *)(v0 + 224);
    uint64_t v13 = *(void *)(v0 + 208);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 376))(*(void *)(v0 + 248), v12, v13);
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    os_signpost_id_t v15 = sub_183D448BC();
    _os_signpost_emit_with_name_impl(&dword_1830D4000, v3, v4, v15, "remoteCallVoid", v8, v14, 2u);
    MEMORY[0x185318E50](v14, -1, -1);

    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v10(v12, v13);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 216);

    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  }
  uint64_t v16 = *v1;
  uint64_t v17 = *(void *)(v0 + 360);
  uint64_t v18 = *(void *)(v0 + 336);
  uint64_t v19 = *(void *)(v0 + 344);
  uint64_t v20 = *(void *)(v0 + 256);
  uint64_t v21 = *(void *)(v0 + 208);
  v10(v16, v21);
  swift_release();
  v10(v20, v21);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t NWActorSystem.deinit()
{
  sub_1834F06AC(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t NWActorSystem.__deallocating_deinit()
{
  NWActorSystem.deinit();

  return swift_deallocClassInstance();
}

uint64_t NWActorSystem.invokeHandlerOnReturn(handler:resultBuffer:metatype:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1834E8A0C, 0, 0);
}

uint64_t sub_1834E8A0C()
{
  uint64_t v1 = dynamic_cast_existential_2_unconditional(v0[4]);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[5] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1834E8ADC;
  uint64_t v8 = v0[2];
  uint64_t v7 = v0[3];
  return sub_1834E8BD0(v1, v7, v8, v1, v3, v5);
}

uint64_t sub_1834E8ADC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1834E8BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  void v6[4] = a3;
  v6[5] = a4;
  void v6[2] = a1;
  v6[3] = a2;
  v6[8] = *(void *)(a4 - 8);
  v6[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1834E8C8C, 0, 0);
}

uint64_t sub_1834E8C8C()
{
  sub_183D44DEC();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[10] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1834E8D40;
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[5];
  return NWActorSystemResultHandler.onReturn<A>(value:)(v2, v3);
}

uint64_t sub_1834E8D40()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1834E8ED4;
  }
  else {
    uint64_t v2 = sub_1834E8E54;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1834E8E54()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[5]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1834E8ED4()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[5]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_1834E8F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1834E8F78@<X0>(uint64_t *a1@<X8>)
{
  return NWActorSystem.assignID<A>(_:)(a1);
}

void sub_1834E8F90()
{
}

uint64_t sub_1834E8FB4(uint64_t a1)
{
  return NWActorSystem.resignID(_:)(a1);
}

void sub_1834E8FD8(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *a1 = MEMORY[0x1E4FBC860];
  a1[1] = v1;
}

uint64_t sub_1834E8FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  swift_conformsToProtocol();
  swift_conformsToProtocol();
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v16;
  *uint64_t v16 = v8;
  v16[1] = sub_1834B5EB0;
  return NWActorSystem.remoteCall<A, B, C>(on:target:invocation:throwing:returning:)(a1, a2, a3, a4, v14, v15, a7, a8);
}

uint64_t sub_1834E90FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v13;
  *uint64_t v13 = v7;
  v13[1] = sub_1834B96A4;
  return NWActorSystem.remoteCallVoid<A, B>(on:target:invocation:throwing:)(a1, a2, a3, v14, a5, v15, a7);
}

uint64_t sub_1834E91C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1834E8A0C, 0, 0);
}

uint64_t sub_1834E91EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FC8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for NWActorID();
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (uint64_t *)((char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (uint64_t *)((char *)&v24 - v17);
  sub_1834F2414(a2, (uint64_t)&v24 - v17, (uint64_t (*)(void))type metadata accessor for NWActorID);
  sub_1834F2414(a3, (uint64_t)v12, type metadata accessor for NWActorDiscoveryMechanism);
  uint64_t v19 = type metadata accessor for NWActorDiscoveryMechanism(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v12, 0, 1, v19);
  swift_beginAccess();
  sub_1835340B0((uint64_t)v12, v18);
  swift_endAccess();
  sub_1834F2414(a2, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for NWActorID);
  if (a4)
  {
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a4;
    *(void *)(v20 + 24) = a5;
    swift_beginAccess();
    sub_18315ED5C(a4);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *(void *)(a1 + 200);
    *(void *)(a1 + 200) = 0x8000000000000000;
    sub_18359EB94((uint64_t)sub_1834F21DC, v20, v16, isUniquelyReferenced_nonNull_native);
    *(void *)(a1 + 200) = v25;
    swift_bridgeObjectRelease();
    sub_1834F25A0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for NWActorID);
  }
  else
  {
    swift_beginAccess();
    sub_18315ED5C(0);
    uint64_t v22 = sub_18359B1CC(v16);
    sub_1834F25A0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for NWActorID);
    sub_18313D870(v22);
  }
  return swift_endAccess();
}

uint64_t sub_1834E94D0(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = sub_183D4491C();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = type metadata accessor for NWActorID();
  v3[13] = swift_task_alloc();
  uint64_t v5 = sub_183D448DC();
  v3[14] = v5;
  v3[15] = *(void *)(v5 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FF8);
  v3[20] = swift_task_alloc();
  v3[21] = type metadata accessor for RemoteCallEnvelope(0);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1834E96D4, 0, 0);
}

uint64_t sub_1834E96D4()
{
  uint64_t v56 = v0;
  uint64_t v1 = v0[12].i64[0];
  uint64_t v2 = v0[10].i64[1];
  sub_1834F2414(v0[2].i64[1], v1, type metadata accessor for RemoteCallEnvelope);
  uint64_t v3 = sub_1834EA524((uint64_t *)(v1 + *(int *)(v2 + 20)));
  uint64_t v52 = v4;
  v0[12].i64[1] = v3;
  uint64_t v5 = v0[12].i64[0];
  if (v3)
  {
    uint64_t v6 = v3;
    uint64_t v7 = v0[10].i64[0];
    if (*(unsigned char *)(v5 + *(int *)(v0[10].i64[1] + 36)))
    {
      sub_183D455EC();
      uint64_t v12 = sub_183D4560C();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 0, 1, v12);
    }
    else
    {
      uint64_t v8 = sub_183D4560C();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
    }
    uint64_t v51 = v2;
    if (qword_1E8F62080 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[11].i64[1];
    uint64_t v13 = v0[12].i64[0];
    uint64_t v15 = v0[11].i64[0];
    uint64_t v16 = sub_183D4490C();
    v0[13].i64[0] = __swift_project_value_buffer(v16, (uint64_t)qword_1E8F62EA0);
    sub_183D448FC();
    sub_183D448AC();
    sub_1834F2414(v13, v14, type metadata accessor for RemoteCallEnvelope);
    sub_1834F2414(v13, v15, type metadata accessor for RemoteCallEnvelope);
    uint64_t v17 = sub_183D448FC();
    os_signpost_type_t v18 = sub_183D4533C();
    char v19 = sub_183D4535C();
    uint64_t v21 = v0[11].i64[0];
    uint64_t v20 = v0[11].i64[1];
    if (v19)
    {
      os_log_t log = v17;
      uint64_t v22 = v0[10].i64[1];
      uint64_t v45 = v0[9].i64[0];
      uint64_t v48 = v0[7].i64[0];
      uint64_t v49 = v0[7].i64[1];
      uint64_t v50 = v6;
      uint64_t v23 = v0[6].i64[1];
      (*(void (**)(void))(v49 + 16))();
      os_signpost_type_t v44 = v18;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v53 = v46;
      *(_DWORD *)uint64_t v24 = 136315394;
      uint64_t v25 = (uint64_t *)(v20 + *(int *)(v22 + 24));
      uint64_t v27 = *v25;
      unint64_t v26 = v25[1];
      swift_bridgeObjectRetain();
      v0[1].i64[1] = sub_1834EFE70(v27, v26, &v53);
      sub_183D453AC();
      swift_bridgeObjectRelease();
      sub_1834F25A0(v20, type metadata accessor for RemoteCallEnvelope);
      *(_WORD *)(v24 + 12) = 2080;
      sub_1834F2414(v21 + *(int *)(v51 + 20), v23, (uint64_t (*)(void))type metadata accessor for NWActorID);
      uint64_t v54 = 0;
      unint64_t v55 = 0xE000000000000000;
      sub_183D4547C();
      swift_bridgeObjectRelease();
      uint64_t v54 = 0x49726F746341574ELL;
      unint64_t v55 = 0xEA00000000002844;
      swift_bridgeObjectRetain();
      sub_183D44C8C();
      swift_bridgeObjectRelease();
      sub_183D44C8C();
      sub_183D445FC();
      sub_1834F2558((unint64_t *)&qword_1E8F62F30, 255, MEMORY[0x1E4F27990]);
      sub_183D4589C();
      sub_183D44C8C();
      swift_bridgeObjectRelease();
      sub_183D44C8C();
      uint64_t v29 = v54;
      unint64_t v28 = v55;
      uint64_t v30 = v23;
      uint64_t v6 = v50;
      sub_1834F25A0(v30, (uint64_t (*)(void))type metadata accessor for NWActorID);
      v0[2].i64[0] = sub_1834EFE70(v29, v28, &v53);
      sub_183D453AC();
      swift_bridgeObjectRelease();
      sub_1834F25A0(v21, type metadata accessor for RemoteCallEnvelope);
      os_signpost_id_t v31 = sub_183D448BC();
      _os_signpost_emit_with_name_impl(&dword_1830D4000, log, v44, v31, "executeRemoteCall", "Executing %s on %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x185318E50](v46, -1, -1);
      MEMORY[0x185318E50](v24, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v45, v48);
    }
    else
    {

      sub_1834F25A0(v20, type metadata accessor for RemoteCallEnvelope);
      sub_1834F25A0(v21, type metadata accessor for RemoteCallEnvelope);
    }
    uint64_t v33 = v0[9].i64[0];
    uint64_t v32 = v0[9].i64[1];
    uint64_t v34 = v0[7].i64[0];
    uint64_t v35 = v0[7].i64[1];
    os_signpost_type_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
    v0[13].i64[1] = (uint64_t)v36;
    v0[14].i64[0] = (v35 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v36(v33, v32, v34);
    sub_183D4494C();
    swift_allocObject();
    v0[14].i64[1] = sub_183D4493C();
    if (qword_1E8F62098 != -1) {
      swift_once();
    }
    uint64_t v37 = v0[12].i64[0];
    uint64_t v38 = v0[10].i64[0];
    uint64_t v39 = v0[2].i64[1];
    uint64_t v40 = swift_task_alloc();
    int8x16_t v41 = vextq_s8(v0[3], v0[3], 8uLL);
    uint64_t v42 = v0[3].i64[0];
    v0[15].i64[0] = v40;
    v0[1].i64[0] = v42;
    *(void *)(v40 + 16) = v37;
    *(int8x16_t *)(v40 + 24) = v41;
    *(void *)(v40 + 40) = v39;
    *(void *)(v40 + 48) = v38;
    *(void *)(v40 + 56) = v6;
    *(void *)(v40 + 64) = v52;
    swift_retain();
    uint64_t v43 = (void *)swift_task_alloc();
    v0[15].i64[1] = (uint64_t)v43;
    *uint64_t v43 = v0;
    v43[1] = sub_1834E9E7C;
    uint64_t v58 = 347;
    uint64_t v59 = MEMORY[0x1E4FBC848] + 8;
    return MEMORY[0x1F41881B8](v43, &v0[1], &unk_1E8F63008, v40, 0, 0, 0xD00000000000001BLL, 0x8000000183E242E0);
  }
  else
  {
    sub_1834F0498();
    swift_allocError();
    *(_OWORD *)uint64_t v9 = xmmword_183D55330;
    *(void *)(v9 + 16) = 0xB000000000000000;
    swift_willThrow();
    sub_1834F25A0(v5, type metadata accessor for RemoteCallEnvelope);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0->i64[1];
    return v10();
  }
}

uint64_t sub_1834E9E7C()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1834EA268;
  }
  else {
    uint64_t v2 = sub_1834E9FA4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1834E9FA4()
{
  uint64_t v1 = (uint64_t *)(v0 + 136);
  uint64_t v2 = sub_183D448FC();
  sub_183D4492C();
  os_signpost_type_t v3 = sub_183D4532C();
  if (sub_183D4535C())
  {
    uint64_t v4 = *(void *)(v0 + 88);
    uint64_t v6 = *(void *)(v0 + 64);
    uint64_t v5 = *(void *)(v0 + 72);
    swift_retain();
    sub_183D4495C();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 72) + 8))(*(void *)(v0 + 88), *(void *)(v0 + 64));
      uint64_t v7 = "";
    }
    uint64_t v1 = (uint64_t *)(v0 + 144);
    uint64_t v10 = *(void *)(v0 + 136);
    uint64_t v12 = *(void *)(v0 + 112);
    uint64_t v11 = *(void *)(v0 + 120);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 216))(*(void *)(v0 + 144), v10, v12);
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    os_signpost_id_t v14 = sub_183D448BC();
    _os_signpost_emit_with_name_impl(&dword_1830D4000, v2, v3, v14, "executeRemoteCall", v7, v13, 2u);
    MEMORY[0x185318E50](v13, -1, -1);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v9(v10, v12);
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 120);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  }
  uint64_t v15 = *(void *)(v0 + 192);
  uint64_t v17 = *(void *)(v0 + 152);
  uint64_t v16 = *(void *)(v0 + 160);
  uint64_t v18 = *(void *)(v0 + 112);
  v9(*v1, v18);
  swift_unknownObjectRelease();
  swift_release();
  v9(v17, v18);
  sub_183138A24(v16, &qword_1E8F62FF8);
  sub_1834F25A0(v15, type metadata accessor for RemoteCallEnvelope);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_1834EA268()
{
  uint64_t v1 = (uint64_t *)(v0 + 128);
  uint64_t v2 = sub_183D448FC();
  sub_183D4492C();
  os_signpost_type_t v3 = sub_183D4532C();
  if (sub_183D4535C())
  {
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v5 = *(void *)(v0 + 80);
    uint64_t v6 = *(void *)(v0 + 64);
    swift_retain();
    sub_183D4495C();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v5, v6) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 72) + 8))(*(void *)(v0 + 80), *(void *)(v0 + 64));
      uint64_t v7 = "";
    }
    uint64_t v1 = (uint64_t *)(v0 + 144);
    uint64_t v10 = *(void *)(v0 + 120);
    uint64_t v11 = *(void *)(v0 + 128);
    uint64_t v12 = *(void *)(v0 + 112);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 216))(*(void *)(v0 + 144), v11, v12);
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    os_signpost_id_t v14 = sub_183D448BC();
    _os_signpost_emit_with_name_impl(&dword_1830D4000, v2, v3, v14, "executeRemoteCall", v7, v13, 2u);
    MEMORY[0x185318E50](v13, -1, -1);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v9(v11, v12);
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 120);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  }
  uint64_t v15 = *(void *)(v0 + 192);
  uint64_t v17 = *(void *)(v0 + 152);
  uint64_t v16 = *(void *)(v0 + 160);
  uint64_t v18 = *(void *)(v0 + 112);
  v9(*v1, v18);
  swift_unknownObjectRelease();
  swift_release();
  v9(v17, v18);
  sub_183138A24(v16, &qword_1E8F62FF8);
  sub_1834F25A0(v15, type metadata accessor for RemoteCallEnvelope);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_1834EA524(uint64_t *a1)
{
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62DD0);
  uint64_t v3 = MEMORY[0x1F4188790](v73);
  uint64_t v71 = (uint64_t)v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v72 = (char *)v64 - v5;
  uint64_t v74 = type metadata accessor for NWActorID();
  uint64_t v6 = MEMORY[0x1F4188790](v74);
  uint64_t v68 = (uint64_t)v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v69 = (uint64_t)v64 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FE8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NWActorSystem.ServerRole();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v75 = (void *)((char *)v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  uint64_t v76 = (uint64_t)v64 - v16;
  uint64_t v17 = *(os_unfair_lock_s **)(v1 + 128);
  uint64_t v79 = sub_1834F2328;
  uint64_t v80 = v1;
  uint64_t v18 = v17 + 4;
  os_unfair_lock_lock(v17 + 4);
  sub_1834F0460(&v81);
  os_unfair_lock_unlock(v18);
  uint64_t v19 = v81;
  uint64_t v77 = sub_1834F2340;
  uint64_t v78 = v1;
  uint64_t v70 = v1;
  os_unfair_lock_lock(v18);
  sub_1834F0460(&v81);
  os_unfair_lock_unlock(v18);
  uint64_t v20 = v81;
  uint64_t v21 = a1;
  if (*(void *)(v81 + 16) && (unint64_t v22 = sub_18359A518(a1), (v23 & 1) != 0))
  {
    uint64_t v24 = *(void *)(*(void *)(v20 + 56) + 8 * v22);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x185318F80](v24 + 16);
    swift_release();
  }
  else
  {
    if (*(void *)(v19 + 16))
    {
      uint64_t v26 = *a1;
      uint64_t v27 = a1[1];
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_18359A408(v26, v27);
      if (v29)
      {
        sub_1834F2414(*(void *)(v19 + 56) + *(void *)(v13 + 72) * v28, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for NWActorSystem.ServerRole);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    }
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      swift_bridgeObjectRelease();
      sub_183138A24((uint64_t)v11, &qword_1E8F62FE8);
      return 0;
    }
    else
    {
      uint64_t v30 = v76;
      sub_1834F2854((uint64_t)v11, v76, (uint64_t (*)(void))type metadata accessor for NWActorSystem.ServerRole);
      os_signpost_id_t v31 = v75;
      sub_1834F2414(v30, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for NWActorSystem.ServerRole);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v32 = (uint64_t (*)(uint64_t))*v31;
        uint64_t v33 = v31[1];
        uint64_t v34 = (uint64_t)v31 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62F28) + 48);
        if (*(void *)(v20 + 16) && (unint64_t v35 = sub_18359A518(a1), (v36 & 1) != 0))
        {
          uint64_t v37 = *(void *)(*(void *)(v20 + 56) + 8 * v35);
          swift_retain();
          swift_bridgeObjectRelease();
          uint64_t v25 = MEMORY[0x185318F80](v37 + 16);
          swift_release();
          swift_release();
        }
        else
        {
          swift_bridgeObjectRelease();
          if (qword_1E8F62078 != -1) {
            swift_once();
          }
          uint64_t v47 = sub_183D4498C();
          __swift_project_value_buffer(v47, (uint64_t)qword_1E8F62E88);
          uint64_t v48 = (uint64_t)a1;
          uint64_t v49 = v69;
          sub_1834F2414(v48, v69, (uint64_t (*)(void))type metadata accessor for NWActorID);
          uint64_t v50 = sub_183D4496C();
          os_log_type_t v51 = sub_183D452BC();
          BOOL v52 = os_log_type_enabled(v50, v51);
          uint64_t v67 = v32;
          if (v52)
          {
            uint64_t v53 = (uint8_t *)swift_slowAlloc();
            uint64_t v65 = swift_slowAlloc();
            v83[0] = v65;
            *(_DWORD *)uint64_t v53 = 136315138;
            v64[1] = v53 + 4;
            uint64_t v66 = v33;
            uint64_t v54 = v68;
            sub_1834F2414(v49, v68, (uint64_t (*)(void))type metadata accessor for NWActorID);
            uint64_t v81 = 0;
            unint64_t v82 = 0xE000000000000000;
            sub_183D4547C();
            swift_bridgeObjectRelease();
            uint64_t v81 = 0x49726F746341574ELL;
            unint64_t v82 = 0xEA00000000002844;
            uint64_t v75 = (uint64_t *)v34;
            swift_bridgeObjectRetain();
            sub_183D44C8C();
            swift_bridgeObjectRelease();
            sub_183D44C8C();
            sub_183D445FC();
            sub_1834F2558((unint64_t *)&qword_1E8F62F30, 255, MEMORY[0x1E4F27990]);
            sub_183D4589C();
            sub_183D44C8C();
            swift_bridgeObjectRelease();
            sub_183D44C8C();
            uint64_t v55 = v81;
            unint64_t v56 = v82;
            sub_1834F25A0(v54, (uint64_t (*)(void))type metadata accessor for NWActorID);
            uint64_t v81 = sub_1834EFE70(v55, v56, v83);
            uint64_t v30 = v76;
            sub_183D453AC();
            swift_bridgeObjectRelease();
            uint64_t v34 = (uint64_t)v75;
            sub_1834F25A0(v49, (uint64_t (*)(void))type metadata accessor for NWActorID);
            _os_log_impl(&dword_1830D4000, v50, v51, "Creating on demand actor for id %s", v53, 0xCu);
            uint64_t v57 = v65;
            swift_arrayDestroy();
            MEMORY[0x185318E50](v57, -1, -1);
            MEMORY[0x185318E50](v53, -1, -1);
          }
          else
          {
            sub_1834F25A0(v49, (uint64_t (*)(void))type metadata accessor for NWActorID);
          }

          if (qword_1E8F620A0 != -1) {
            swift_once();
          }
          uint64_t v59 = (char *)v21 + *(int *)(v74 + 20);
          uint64_t v60 = sub_183D445FC();
          uint64_t v61 = *(void *)(v60 - 8);
          uint64_t v62 = (uint64_t)v72;
          (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v72, v59, v60);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v62, 0, 1, v60);
          sub_183138900(v62, v71, &qword_1E8F62DD0);
          swift_task_localValuePush();
          uint64_t v25 = v67(v70);
          swift_task_localValuePop();
          swift_release();
          sub_183138A24(v62, &qword_1E8F62DD0);
        }
        sub_1834F25A0(v30, (uint64_t (*)(void))type metadata accessor for NWActorSystem.ServerRole);
        uint64_t v58 = v34;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v25 = *v31;
        unint64_t v38 = v31[1];
        if (qword_1E8F62078 != -1) {
          swift_once();
        }
        uint64_t v39 = sub_183D4498C();
        __swift_project_value_buffer(v39, (uint64_t)qword_1E8F62E88);
        swift_unknownObjectRetain_n();
        uint64_t v40 = sub_183D4496C();
        os_log_type_t v41 = sub_183D452BC();
        if (os_log_type_enabled(v40, v41))
        {
          uint64_t v42 = (uint8_t *)swift_slowAlloc();
          uint64_t v43 = swift_slowAlloc();
          unint64_t v82 = v38;
          v83[0] = v43;
          *(_DWORD *)uint64_t v42 = 136315138;
          uint64_t v81 = v25;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63C80);
          uint64_t v44 = sub_183D44B9C();
          uint64_t v81 = sub_1834EFE70(v44, v45, v83);
          sub_183D453AC();
          swift_unknownObjectRelease_n();
          os_signpost_id_t v31 = v75;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1830D4000, v40, v41, "Returning singleton: %s", v42, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x185318E50](v43, -1, -1);
          MEMORY[0x185318E50](v42, -1, -1);

          uint64_t v46 = v76;
        }
        else
        {
          swift_unknownObjectRelease_n();

          uint64_t v46 = v30;
        }
        sub_1834F25A0(v46, (uint64_t (*)(void))type metadata accessor for NWActorSystem.ServerRole);
        uint64_t v58 = (uint64_t)v31 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62F08) + 48);
      }
      sub_183138A24(v58, &qword_1E8F62FA8);
    }
  }
  return v25;
}

uint64_t sub_1834EB028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[13] = a7;
  v8[14] = a8;
  v8[11] = a5;
  v8[12] = a6;
  v8[9] = a3;
  v8[10] = a4;
  v8[8] = a2;
  v8[15] = type metadata accessor for NWActorSystemResultHandler();
  v8[16] = swift_task_alloc();
  v8[17] = type metadata accessor for NWFileSerializationContext(0);
  v8[18] = swift_task_alloc();
  v8[19] = type metadata accessor for RemoteCallEnvelope(0);
  v8[20] = swift_task_alloc();
  v8[21] = type metadata accessor for NWActorSystemInvocationDecoder();
  v8[22] = swift_task_alloc();
  v8[23] = swift_task_alloc();
  uint64_t v9 = sub_183D4465C();
  v8[24] = v9;
  v8[25] = *(void *)(v9 - 8);
  v8[26] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1834EB1C4, 0, 0);
}

uint64_t sub_1834EB1C4()
{
  uint64_t v1 = (uint64_t *)v0[22];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[19];
  char v23 = (int *)v0[21];
  uint64_t v24 = v0[18];
  uint64_t v25 = v0[17];
  uint64_t v30 = v0[16];
  uint64_t v31 = v0[23];
  uint64_t v4 = v0[11];
  uint64_t v32 = (int *)v0[15];
  uint64_t v33 = v0[12];
  uint64_t v5 = v0[10];
  uint64_t v26 = v0[9];
  uint64_t v6 = v0[8];
  swift_bridgeObjectRetain();
  sub_183D4466C();
  sub_1834F2414(v6, v2, type metadata accessor for RemoteCallEnvelope);
  uint64_t v28 = _s15ActorConnectionCMa(0);
  v0[5] = v28;
  v0[6] = &off_1ECF5B4A8;
  v0[2] = v5;
  uint64_t v29 = _s15ActorConnectionC20RemoteCallInvocationVMa(0);
  char v27 = *(unsigned char *)(v4 + *(int *)(v29 + 24));
  sub_1834F2414(v2, (uint64_t)v1 + v23[5], type metadata accessor for RemoteCallEnvelope);
  uint64_t v7 = (uint64_t *)((char *)v1 + v23[6]);
  *uint64_t v7 = *(void *)(v2 + *(int *)(v3 + 32));
  v7[1] = 0;
  sub_1834BDE24((uint64_t)(v0 + 2), v24);
  sub_1834F2414(v2 + *(int *)(v3 + 20), v24 + *(int *)(v25 + 20), (uint64_t (*)(void))type metadata accessor for NWActorID);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1834BE000(v26, v24);
  swift_release();
  __swift_destroy_boxed_opaque_existential_2((uint64_t)(v0 + 2));
  sub_1834F25A0(v2, type metadata accessor for RemoteCallEnvelope);
  sub_1834F25A0(v24, type metadata accessor for NWFileSerializationContext);
  *uint64_t v1 = v8;
  *((unsigned char *)v1 + v23[7]) = v27;
  sub_1834F2854((uint64_t)v1, v31, (uint64_t (*)(void))type metadata accessor for NWActorSystemInvocationDecoder);
  uint64_t v9 = sub_183D445FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v30, v6, v9);
  uint64_t v10 = (void *)(v30 + v32[5]);
  v10[3] = v28;
  v10[4] = &off_1ECF5E108;
  *uint64_t v10 = v5;
  sub_1834F2414(v6 + *(int *)(v3 + 20), v30 + v32[6], (uint64_t (*)(void))type metadata accessor for NWActorID);
  uint64_t v11 = (void *)(v30 + v32[7]);
  v11[3] = v28;
  v11[4] = &off_1ECF5B4A8;
  *uint64_t v11 = v5;
  sub_183138900(v33, v30 + v32[8], &qword_1E8F62FF8);
  *(unsigned char *)(v30 + v32[9]) = *(unsigned char *)(v4 + *(int *)(v29 + 20));
  uint64_t ObjectType = swift_getObjectType();
  v0[7] = v26;
  swift_retain_n();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[27] = v13;
  uint64_t v14 = type metadata accessor for NWActorSystem();
  uint64_t v16 = sub_1834F2558(&qword_1E8F63010, v15, (void (*)(uint64_t))type metadata accessor for NWActorSystem);
  *uint64_t v13 = v0;
  v13[1] = sub_1834EB5A4;
  uint64_t v17 = v0[26];
  uint64_t v18 = v0[23];
  uint64_t v19 = v0[16];
  uint64_t v20 = v0[13];
  uint64_t v21 = v0[14];
  return MEMORY[0x1F4187310](v20, v17, v18, v19, v14, ObjectType, v16, v21);
}

uint64_t sub_1834EB5A4()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1834EB7C4;
  }
  else {
    uint64_t v2 = sub_1834EB6B8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1834EB6B8()
{
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v4 = v0[23];
  uint64_t v3 = v0[24];
  sub_1834F25A0(v0[16], (uint64_t (*)(void))type metadata accessor for NWActorSystemResultHandler);
  sub_1834F25A0(v4, (uint64_t (*)(void))type metadata accessor for NWActorSystemInvocationDecoder);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1834EB7C4()
{
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v4 = v0[23];
  uint64_t v3 = v0[24];
  sub_1834F25A0(v0[16], (uint64_t (*)(void))type metadata accessor for NWActorSystemResultHandler);
  sub_1834F25A0(v4, (uint64_t (*)(void))type metadata accessor for NWActorSystemInvocationDecoder);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1834EB8D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FE8);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v28 = a1 + 144;
  swift_beginAccess();
  uint64_t v13 = *(void *)(a1 + 144);
  if (*(void *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_18359A408(a2, a3);
    if (v15)
    {
      uint64_t v16 = v14;
      uint64_t v17 = *(void *)(v13 + 56);
      uint64_t v18 = type metadata accessor for NWActorSystem.ServerRole();
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v26 = a2;
      uint64_t v20 = v19;
      sub_1834F2414(v17 + *(void *)(v19 + 72) * v16, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for NWActorSystem.ServerRole);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, v18);
      a2 = v26;
    }
    else
    {
      uint64_t v18 = type metadata accessor for NWActorSystem.ServerRole();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 1, 1, v18);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = type metadata accessor for NWActorSystem.ServerRole();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 1, 1, v18);
  }
  swift_endAccess();
  type metadata accessor for NWActorSystem.ServerRole();
  uint64_t v21 = *(void *)(v18 - 8);
  int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v12, 1, v18);
  sub_183138A24((uint64_t)v12, &qword_1E8F62FE8);
  if (v22 == 1)
  {
    sub_1834F2414(v27, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for NWActorSystem.ServerRole);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v10, 0, 1, v18);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_183534298((uint64_t)v10, a2, a3);
    return swift_endAccess();
  }
  else
  {
    sub_1834F0498();
    swift_allocError();
    *(_OWORD *)uint64_t v24 = xmmword_183D55340;
    *(void *)(v24 + 16) = 0xB000000000000000;
    return swift_willThrow();
  }
}

uint64_t sub_1834EBC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = type metadata accessor for NWActorID();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(os_unfair_lock_s **)(a1 + 80);
  uint64_t v28 = sub_1834F2390;
  uint64_t v29 = a1;
  uint64_t v10 = v9 + 4;
  os_unfair_lock_lock(v9 + 4);
  sub_1834F0460(&v30);
  os_unfair_lock_unlock(v10);
  uint64_t v11 = *(void *)(v30 + 16);
  if (v11)
  {
    uint64_t v12 = (os_unfair_lock_s *)(*(void *)(v3 + 128) + 16);
    uint64_t v13 = *(unsigned __int8 *)(v6 + 80);
    v25[1] = v30;
    uint64_t v14 = v30 + ((v13 + 32) & ~v13);
    uint64_t v27 = *(void *)(v6 + 72);
    do
    {
      uint64_t v21 = sub_1834F2414(v14, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for NWActorID);
      uint64_t v22 = MEMORY[0x1F4188790](v21);
      v25[-2] = v3;
      v25[-1] = v8;
      MEMORY[0x1F4188790](v22);
      v25[-2] = sub_1834F23AC;
      v25[-1] = v23;
      os_unfair_lock_lock(v12);
      sub_1834F23C8(&v30);
      os_unfair_lock_unlock(v12);
      uint64_t v18 = (uint64_t (*)(uint64_t))v30;
      if ((void)v30)
      {
        uint64_t v15 = *((void *)&v30 + 1);
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = v18;
        *(void *)(v16 + 24) = v15;
        *(void *)&long long v30 = v26;
        sub_18315ED5C((uint64_t)v18);
        swift_retain();
        v18((uint64_t)&v30);
        swift_release();
        uint64_t v17 = sub_18313D870((uint64_t)v18);
        uint64_t v18 = sub_1834F240C;
      }
      uint64_t v19 = MEMORY[0x1F4188790](v17);
      v25[-2] = v3;
      v25[-1] = v8;
      MEMORY[0x1F4188790](v19);
      v25[-2] = sub_1834F2BF8;
      v25[-1] = v20;
      os_unfair_lock_lock(v12);
      sub_1834F2BDC();
      os_unfair_lock_unlock(v12);
      sub_18313D870((uint64_t)v18);
      sub_1834F25A0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for NWActorID);
      v14 += v27;
      --v11;
    }
    while (v11);
  }
  return swift_bridgeObjectRelease();
}

__n128 sub_1834EBF48@<Q0>(uint64_t a1@<X0>, void *a2@<X1>, __n128 *a3@<X8>)
{
  uint64_t v5 = (uint64_t *)(a1 + 200);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_18359A518(a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  __n128 v13 = 0u;
  if (a2)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v5;
    uint64_t v14 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1835A0730();
      uint64_t v9 = v14;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for NWActorID();
    sub_1834F25A0(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, (uint64_t (*)(void))type metadata accessor for NWActorID);
    __n128 v13 = *(__n128 *)(*(void *)(v9 + 56) + 16 * v6);
    sub_1835500C8(v6, v9);
    *uint64_t v5 = v9;
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  __n128 result = v13;
  *a3 = v13;
  return result;
}

uint64_t sub_1834EC078(void *a1)
{
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = a1[3];
  a1[3] = &unk_1E8F62FE0;
  a1[4] = v4;
  sub_18313D870(v5);
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v6;
  uint64_t v9 = a1[5];
  a1[5] = sub_1834F2318;
  a1[6] = v8;
  sub_18313D870(v9);
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  uint64_t v11 = a1[7];
  a1[7] = sub_1834F2320;
  a1[8] = v10;
  return sub_18313D870(v11);
}

uint64_t sub_1834EC200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  return MEMORY[0x1F4188298](sub_1834EC224, 0, 0);
}

uint64_t sub_1834EC224()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[11] = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    swift_beginAccess();
    uint64_t v3 = swift_weakLoadStrong();
    v0[12] = v3;
    if (v3)
    {
      uint64_t v4 = (void *)swift_task_alloc();
      v0[13] = v4;
      *uint64_t v4 = v0;
      v4[1] = sub_1834EC35C;
      uint64_t v5 = v0[8];
      return sub_1834E94D0(v5, v2);
    }
    swift_release();
  }
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1834EC35C()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1834EC4DC;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1834EC478;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1834EC478()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1834EC4DC()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1834EC548(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_1834EBC4C(v3, a1);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1834EC5E8(uint64_t *a1)
{
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return 0;
  }
  uint64_t v2 = sub_1834EA524(a1);
  swift_release();
  return v2;
}

void sub_1834EC670(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v91 = a3;
  uint64_t v95 = a4;
  uint64_t v6 = type metadata accessor for NWActorDiscoveryMechanism.Target(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NWEndpoint();
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v90 = (uint64_t)v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v97 = (uint64_t)v84 - v12;
  uint64_t v92 = type metadata accessor for NWActorID();
  uint64_t v13 = MEMORY[0x1F4188790](v92);
  uint64_t v93 = (uint64_t)v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v94 = (void *)((char *)v84 - v16);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v84 - v17;
  uint64_t v19 = type metadata accessor for NWActorDiscoveryMechanism(0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v96 = (uint64_t)v84 - v24;
  uint64_t v89 = a1 + 192;
  swift_beginAccess();
  uint64_t v25 = *(void *)(a1 + 192);
  if (*(void *)(v25 + 16))
  {
    unint64_t v26 = sub_18359A518(a2);
    if (v27)
    {
      uint64_t v28 = *(void *)(*(void *)(v25 + 56) + 8 * v26);
      swift_endAccess();
      *uint64_t v95 = v28;
      swift_retain();
      return;
    }
  }
  v98 = a2;
  swift_endAccess();
  swift_beginAccess();
  uint64_t v29 = *(void *)(a1 + 152);
  if (!*(void *)(v29 + 16) || (unint64_t v30 = sub_18359A518(v98), (v31 & 1) == 0))
  {
    swift_endAccess();
    sub_1834F0498();
    swift_allocError();
    *uint64_t v44 = 0xD000000000000061;
    v44[1] = 0x8000000183E24470;
    v44[2] = 0x4000000000000000;
    swift_willThrow();
    return;
  }
  sub_1834F2414(*(void *)(v29 + 56) + *(void *)(v20 + 72) * v30, (uint64_t)v23, type metadata accessor for NWActorDiscoveryMechanism);
  uint64_t v32 = v96;
  sub_1834F2854((uint64_t)v23, v96, type metadata accessor for NWActorDiscoveryMechanism);
  swift_endAccess();
  if (qword_1E8F62078 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_183D4498C();
  uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1E8F62E88);
  sub_1834F2414((uint64_t)v98, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for NWActorID);
  unint64_t v35 = sub_183D4496C();
  os_log_type_t v36 = sub_183D452BC();
  LODWORD(v88) = v36;
  BOOL v37 = os_log_type_enabled(v35, v36);
  uint64_t v38 = (uint64_t)v94;
  if (v37)
  {
    os_log_t v87 = v35;
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    uint64_t v86 = swift_slowAlloc();
    uint64_t v100 = v86;
    uint64_t v85 = v39;
    *(_DWORD *)uint64_t v39 = 136315138;
    v84[1] = v39 + 12;
    v84[0] = v39 + 4;
    sub_1834F2414((uint64_t)v18, v38, (uint64_t (*)(void))type metadata accessor for NWActorID);
    unint64_t v102 = 0;
    unint64_t v103 = 0xE000000000000000;
    sub_183D4547C();
    swift_bridgeObjectRelease();
    unint64_t v102 = 0x49726F746341574ELL;
    unint64_t v103 = 0xEA00000000002844;
    swift_bridgeObjectRetain();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    sub_183D44C8C();
    sub_183D445FC();
    sub_1834F2558((unint64_t *)&qword_1E8F62F30, 255, MEMORY[0x1E4F27990]);
    sub_183D4589C();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    sub_183D44C8C();
    uint64_t v40 = v102;
    unint64_t v41 = v103;
    sub_1834F25A0(v38, (uint64_t (*)(void))type metadata accessor for NWActorID);
    unint64_t v102 = sub_1834EFE70(v40, v41, &v100);
    sub_183D453AC();
    uint64_t v32 = v96;
    swift_bridgeObjectRelease();
    sub_1834F25A0((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for NWActorID);
    unint64_t v35 = v87;
    uint64_t v42 = v85;
    _os_log_impl(&dword_1830D4000, v87, (os_log_type_t)v88, "Establishing connection for %s", v85, 0xCu);
    uint64_t v43 = v86;
    swift_arrayDestroy();
    MEMORY[0x185318E50](v43, -1, -1);
    MEMORY[0x185318E50](v42, -1, -1);
  }
  else
  {
    sub_1834F25A0((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for NWActorID);
  }

  sub_1834F2414(v32, (uint64_t)v8, type metadata accessor for NWActorDiscoveryMechanism.Target);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1834F25A0((uint64_t)v8, type metadata accessor for NWActorDiscoveryMechanism.Target);
    sub_1834F0498();
    swift_allocError();
    *unint64_t v82 = 0xD00000000000004CLL;
    v82[1] = 0x8000000183E244E0;
    v82[2] = 0x9000000000000000;
    swift_willThrow();
    sub_1834F25A0(v32, type metadata accessor for NWActorDiscoveryMechanism);
    return;
  }
  sub_1834F2854((uint64_t)v8, v97, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
  uint64_t v45 = *(void *)(*(void *)(v32 + *(int *)(v19 + 28)) + 16);
  uint64_t v46 = (void *)(v45 + 16);
  uint64_t v47 = (os_unfair_lock_s *)(v45 + 24);
  swift_retain();
  os_unfair_lock_lock(v47);
  uint64_t v48 = v99;
  sub_1835ACA74(v46, (uint64_t *)&v102);
  if (v48) {
    goto LABEL_26;
  }
  os_unfair_lock_unlock(v47);
  unint64_t v49 = v102;
  swift_release();
  if (qword_1E8F62150 != -1) {
    swift_once();
  }
  uint64_t v50 = qword_1E8F7A908;
  type metadata accessor for NWProtocolFramer.Options();
  os_log_type_t v51 = swift_allocObject();
  v51[2].isa = (Class)nw_framer_create_options(*(nw_protocol_definition_t *)(v50 + 32));
  uint64_t v88 = v34;
  BOOL v52 = sub_183D4496C();
  os_log_type_t v53 = sub_183D452BC();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v54 = 0;
    _os_log_impl(&dword_1830D4000, v52, v53, "Inserting Actor WireProtocol framer", v54, 2u);
    MEMORY[0x185318E50](v54, -1, -1);
  }

  uint64_t v55 = *(os_unfair_lock_s **)(v49 + 16);
  unint64_t v56 = v55 + 4;
  uint64_t v57 = v55 + 6;
  os_unfair_lock_lock(v55 + 6);
  sub_1834A471C(v56, (uint64_t *)&v102);
  os_unfair_lock_unlock(v57);
  uint64_t v58 = *(void *)(v102 + 16);
  uint64_t v59 = (NSObject **)(v58 + 16);
  uint64_t v60 = (os_unfair_lock_s *)(v58 + 24);
  swift_retain();
  os_unfair_lock_lock(v60);
  sub_1835AA8A0(v59, &v102);
  uint64_t v47 = 0;
  uint64_t v61 = v49;
  os_unfair_lock_unlock(v60);
  if (v102 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v83 = sub_183D456DC();
    swift_bridgeObjectRelease();
    if (v83 < 0)
    {
      __break(1u);
      os_unfair_lock_unlock(v60);
      __break(1u);
LABEL_26:
      os_unfair_lock_unlock(v47);
      __break(1u);
      return;
    }
  }
  os_log_t v87 = v51;
  uint64_t v62 = sub_1834EF540(0, 0, (uint64_t)v51);
  unint64_t v63 = v102;
  MEMORY[0x1F4188790](v62);
  v84[-2] = v63;
  os_unfair_lock_lock(v60);
  sub_1834F2C44(v59);
  uint64_t v99 = 0;
  os_unfair_lock_unlock(v60);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v64 = v90;
  sub_1834F2414(v97, v90, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
  type metadata accessor for NWConnection(0);
  swift_allocObject();
  swift_retain();
  sub_183576AC0(v64, v61);
  uint64_t v66 = v65;
  swift_release();
  swift_beginAccess();
  char v67 = *(unsigned char *)(a1 + 16);
  _s15ActorConnectionCMa(0);
  swift_allocObject();
  uint64_t v68 = swift_retain();
  uint64_t v69 = (void *)sub_18353CBD8(v68, v67);
  sub_1834EC078(v69);
  uint64_t v70 = v98;
  uint64_t v71 = v94;
  sub_1834F2414((uint64_t)v98, (uint64_t)v94, (uint64_t (*)(void))type metadata accessor for NWActorID);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v104 = *(void **)(a1 + 192);
  *(void *)(a1 + 192) = 0x8000000000000000;
  sub_18359E9F0((uint64_t)v69, v71, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + 192) = v104;
  swift_bridgeObjectRelease();
  sub_1834F25A0((uint64_t)v71, (uint64_t (*)(void))type metadata accessor for NWActorID);
  swift_endAccess();
  sub_18353BFF4((uint64_t)v70, v91);
  uint64_t v73 = v93;
  sub_1834F2414((uint64_t)v70, v93, (uint64_t (*)(void))type metadata accessor for NWActorID);
  swift_retain_n();
  uint64_t v74 = sub_183D4496C();
  os_log_type_t v75 = sub_183D452BC();
  int v76 = v75;
  if (os_log_type_enabled(v74, v75))
  {
    uint64_t v77 = swift_slowAlloc();
    v98 = (void *)swift_slowAlloc();
    v104 = v98;
    *(_DWORD *)uint64_t v77 = 136315394;
    uint64_t v90 = v77 + 4;
    sub_1834F2414(v73, (uint64_t)v71, (uint64_t (*)(void))type metadata accessor for NWActorID);
    uint64_t v100 = 0;
    unint64_t v101 = 0xE000000000000000;
    LODWORD(v91) = v76;
    sub_183D4547C();
    swift_bridgeObjectRelease();
    uint64_t v100 = 0x49726F746341574ELL;
    unint64_t v101 = 0xEA00000000002844;
    swift_bridgeObjectRetain();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    sub_183D44C8C();
    sub_183D445FC();
    sub_1834F2558((unint64_t *)&qword_1E8F62F30, 255, MEMORY[0x1E4F27990]);
    sub_183D4589C();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    sub_183D44C8C();
    uint64_t v78 = v100;
    unint64_t v79 = v101;
    sub_1834F25A0((uint64_t)v71, (uint64_t (*)(void))type metadata accessor for NWActorID);
    uint64_t v100 = sub_1834EFE70(v78, v79, (uint64_t *)&v104);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    sub_1834F25A0(v93, (uint64_t (*)(void))type metadata accessor for NWActorID);
    *(_WORD *)(v77 + 12) = 2048;
    uint64_t id = nw_connection_get_id(*(void **)(v66 + 16));
    swift_release();
    uint64_t v100 = id;
    sub_183D453AC();
    swift_release();
    _os_log_impl(&dword_1830D4000, v74, (os_log_type_t)v91, "Established connection for %s: C%llu", (uint8_t *)v77, 0x16u);
    uint64_t v81 = v98;
    swift_arrayDestroy();
    MEMORY[0x185318E50](v81, -1, -1);
    MEMORY[0x185318E50](v77, -1, -1);
  }
  else
  {
    swift_release_n();

    sub_1834F25A0(v73, (uint64_t (*)(void))type metadata accessor for NWActorID);
  }
  swift_release();
  swift_release();
  swift_release();
  sub_1834F25A0(v97, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
  sub_1834F25A0(v96, type metadata accessor for NWActorDiscoveryMechanism);
  *uint64_t v95 = v69;
}

uint64_t sub_1834ED4B0(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1834ED510(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1834ED510(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63038);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v21[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E8F62078 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_183D4498C();
  __swift_project_value_buffer(v7, (uint64_t)qword_1E8F62E88);
  swift_retain_n();
  uint64_t v8 = sub_183D4496C();
  os_log_type_t v9 = sub_183D452BC();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v20 = a1;
    v21[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    type metadata accessor for NWConnection(0);
    swift_retain();
    uint64_t v12 = sub_183D44B9C();
    uint64_t v20 = sub_1834EFE70(v12, v13, v21);
    sub_183D453AC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1830D4000, v8, v9, "Received connection: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v11, -1, -1);
    MEMORY[0x185318E50](v10, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  swift_beginAccess();
  char v14 = *(unsigned char *)(v2 + 16);
  _s15ActorConnectionCMa(0);
  swift_allocObject();
  uint64_t v15 = swift_retain();
  uint64_t v16 = (void *)sub_18353CBD8(v15, v14);
  sub_1834EC078(v16);
  uint64_t v17 = sub_183D44FAC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = v16;
  v18[5] = v2;
  swift_retain();
  sub_18353C19C((uint64_t)v6, (uint64_t)&unk_1E8F63048, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_1834ED800(unsigned int *a1)
{
  uint64_t v1 = *((unsigned __int8 *)a1 + 4);
  uint64_t v2 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    unsigned int v4 = v2;
    char v5 = (v2 | (unint64_t)(v1 << 32)) >> 32;
    sub_1834ED87C(&v4);
    return swift_release();
  }
  return result;
}

void sub_1834ED87C(unsigned int *a1)
{
  unint64_t v1 = *a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32);
  if (qword_1E8F62078 != -1) {
LABEL_40:
  }
    swift_once();
  uint64_t v2 = sub_183D4498C();
  __swift_project_value_buffer(v2, (uint64_t)qword_1E8F62E88);
  uint64_t v3 = sub_183D4496C();
  os_log_type_t v4 = sub_183D452BC();
  if (os_log_type_enabled(v3, v4))
  {
    char v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)char v5 = 136315138;
    uint64_t v42 = v6;
    uint64_t v7 = sub_183D44B9C();
    sub_1834EFE70(v7, v8, &v42);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1830D4000, v3, v4, "Listener state changed to %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v6, -1, -1);
    MEMORY[0x185318E50](v5, -1, -1);
  }

  if (!(v1 >> 38))
  {
    os_log_type_t v36 = sub_183D4496C();
    os_log_type_t v37 = sub_183D4529C();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v42 = v39;
      *(_DWORD *)uint64_t v38 = 136315138;
      uint64_t v40 = sub_183D44B9C();
      sub_1834EFE70(v40, v41, &v42);
      sub_183D453AC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1830D4000, v36, v37, "Listener moved to waiting state with error: %s", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x185318E50](v39, -1, -1);
      MEMORY[0x185318E50](v38, -1, -1);
    }

    return;
  }
  if (v1 >> 38 != 1)
  {
    if (v1 == 0x8000000001) {
      sub_1834EDE58();
    }
    return;
  }
  int v9 = v1;
  unint64_t v1 = HIDWORD(v1) & 0x3F;
  uint64_t v10 = sub_183D4496C();
  os_log_type_t v11 = sub_183D4529C();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v42 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v14 = sub_183D44B9C();
    sub_1834EFE70(v14, v15, &v42);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1830D4000, v10, v11, "Listener moved to failed state with error: %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v13, -1, -1);
    MEMORY[0x185318E50](v12, -1, -1);
  }

  MEMORY[0x1F4188790](v16);
  uint64_t v18 = v17 + 4;
  os_unfair_lock_lock(v17 + 4);
  sub_1834F0460(&v42);
  os_unfair_lock_unlock(v18);
  uint64_t v19 = v42;
  uint64_t v20 = v42 + 64;
  uint64_t v21 = 1 << *(unsigned char *)(v42 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & *(void *)(v42 + 64);
  int64_t v24 = (unint64_t)(v21 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v25 = 0;
  while (1)
  {
    if (v23)
    {
      unint64_t v26 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      unint64_t v27 = v26 | (v25 << 6);
      goto LABEL_12;
    }
    int64_t v33 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v33 >= v24) {
      goto LABEL_37;
    }
    unint64_t v34 = *(void *)(v20 + 8 * v33);
    ++v25;
    if (!v34)
    {
      int64_t v25 = v33 + 1;
      if (v33 + 1 >= v24) {
        goto LABEL_37;
      }
      unint64_t v34 = *(void *)(v20 + 8 * v25);
      if (!v34)
      {
        int64_t v25 = v33 + 2;
        if (v33 + 2 >= v24) {
          goto LABEL_37;
        }
        unint64_t v34 = *(void *)(v20 + 8 * v25);
        if (!v34)
        {
          int64_t v25 = v33 + 3;
          if (v33 + 3 >= v24) {
            goto LABEL_37;
          }
          unint64_t v34 = *(void *)(v20 + 8 * v25);
          if (!v34)
          {
            int64_t v25 = v33 + 4;
            if (v33 + 4 >= v24) {
              goto LABEL_37;
            }
            unint64_t v34 = *(void *)(v20 + 8 * v25);
            if (!v34) {
              break;
            }
          }
        }
      }
    }
LABEL_31:
    unint64_t v23 = (v34 - 1) & v34;
    unint64_t v27 = __clz(__rbit64(v34)) + (v25 << 6);
LABEL_12:
    uint64_t v28 = (uint64_t *)(*(void *)(v19 + 48) + 16 * v27);
    uint64_t v29 = *v28;
    unint64_t v30 = v28[1];
    sub_1834AC424();
    char v31 = (void *)swift_allocError();
    *(_DWORD *)uint64_t v32 = v9;
    *(unsigned char *)(v32 + 4) = v1;
    swift_bridgeObjectRetain();
    sub_1834E37C8(v29, v30, v31);

    swift_bridgeObjectRelease();
  }
  int64_t v35 = v33 + 5;
  if (v35 >= v24)
  {
LABEL_37:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v34 = *(void *)(v20 + 8 * v35);
  if (v34)
  {
    int64_t v25 = v35;
    goto LABEL_31;
  }
  while (1)
  {
    int64_t v25 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v25 >= v24) {
      goto LABEL_37;
    }
    unint64_t v34 = *(void *)(v20 + 8 * v25);
    ++v35;
    if (v34) {
      goto LABEL_31;
    }
  }
  __break(1u);
}

uint64_t sub_1834EDE58()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  os_log_type_t v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v5 = *(os_unfair_lock_s **)(v0 + 128);
  unint64_t v15 = sub_1834F2A2C;
  uint64_t v16 = v0;
  uint64_t v6 = v5 + 4;
  os_unfair_lock_lock(v5 + 4);
  sub_1834F0460(&v17);
  os_unfair_lock_unlock(v6);
  uint64_t v7 = *(void *)(v17 + 16);
  if (v7)
  {
    uint64_t v10 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v2 + 16);
    uint64_t v8 = v2 + 16;
    int v9 = v10;
    uint64_t v11 = v17 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
    uint64_t v12 = *(void *)(v8 + 56);
    do
    {
      v9(v4, v11, v1);
      sub_183D44F4C();
      (*(void (**)(unsigned char *, uint64_t))(v8 - 8))(v4, v1);
      v11 += v12;
      --v7;
    }
    while (v7);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1834EDFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[7] = type metadata accessor for NWActorID();
  v5[8] = swift_task_alloc();
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1834EE07C, 0, 0);
}

uint64_t sub_1834EE07C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1834EE150;
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[5];
  return MEMORY[0x1F4188160](v2, 0, 0, 0xD00000000000001FLL, 0x8000000183E24760, sub_1834F2B94, v4, v3);
}

uint64_t sub_1834EE150()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1834EE6C4;
  }
  else {
    uint64_t v2 = sub_1834EE264;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1834EE264()
{
  uint64_t v29 = v0;
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[6];
  char v5 = *(os_unfair_lock_s **)(v4 + 128);
  uint64_t v6 = (void *)swift_task_alloc();
  void v6[2] = v4;
  v6[3] = v3;
  void v6[4] = v1;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v7 + 16) = sub_1834F2B9C;
  *(void *)(v7 + 24) = v6;
  os_unfair_lock_lock(v5 + 4);
  sub_1834F0460(&v27);
  os_unfair_lock_unlock(v5 + 4);
  if (v2)
  {
    return swift_task_dealloc();
  }
  else
  {
    uint64_t v9 = v27;
    swift_task_dealloc();
    swift_task_dealloc();
    if (v9)
    {
      uint64_t v10 = qword_1E8F62078;
      swift_retain();
      if (v10 != -1) {
        swift_once();
      }
      uint64_t v12 = v0[9];
      uint64_t v11 = v0[10];
      uint64_t v13 = sub_183D4498C();
      __swift_project_value_buffer(v13, (uint64_t)qword_1E8F62E88);
      sub_1834F2414(v11, v12, (uint64_t (*)(void))type metadata accessor for NWActorID);
      uint64_t v14 = sub_183D4496C();
      os_log_type_t v15 = sub_183D4529C();
      BOOL v16 = os_log_type_enabled(v14, v15);
      uint64_t v17 = v0[9];
      if (v16)
      {
        uint64_t v18 = v0[8];
        os_log_type_t type = v15;
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        uint64_t v26 = v24;
        *(_DWORD *)uint64_t v19 = 136315138;
        buf = v19;
        sub_1834F2414(v17, v18, (uint64_t (*)(void))type metadata accessor for NWActorID);
        uint64_t v27 = 0;
        unint64_t v28 = 0xE000000000000000;
        sub_183D4547C();
        swift_bridgeObjectRelease();
        uint64_t v27 = 0x49726F746341574ELL;
        unint64_t v28 = 0xEA00000000002844;
        swift_bridgeObjectRetain();
        sub_183D44C8C();
        swift_bridgeObjectRelease();
        sub_183D44C8C();
        sub_183D445FC();
        sub_1834F2558((unint64_t *)&qword_1E8F62F30, 255, MEMORY[0x1E4F27990]);
        sub_183D4589C();
        sub_183D44C8C();
        swift_bridgeObjectRelease();
        sub_183D44C8C();
        uint64_t v20 = v27;
        unint64_t v21 = v28;
        sub_1834F25A0(v18, (uint64_t (*)(void))type metadata accessor for NWActorID);
        v0[4] = sub_1834EFE70(v20, v21, &v26);
        sub_183D453AC();
        swift_bridgeObjectRelease();
        sub_1834F25A0(v17, (uint64_t (*)(void))type metadata accessor for NWActorID);
        _os_log_impl(&dword_1830D4000, v14, type, "Unexpectedly received another connection for %s, invalidating old connection", buf, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x185318E50](v24, -1, -1);
        MEMORY[0x185318E50](buf, -1, -1);
      }
      else
      {
        sub_1834F25A0(v0[9], (uint64_t (*)(void))type metadata accessor for NWActorID);
      }

      sub_18353AFF8();
      swift_release_n();
    }
    sub_1834F25A0(v0[10], (uint64_t (*)(void))type metadata accessor for NWActorID);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
}

uint64_t sub_1834EE6C4()
{
  uint64_t v17 = v0;
  if (qword_1E8F62078 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = sub_183D4498C();
  __swift_project_value_buffer(v2, (uint64_t)qword_1E8F62E88);
  id v3 = v1;
  id v4 = v1;
  char v5 = sub_183D4496C();
  os_log_type_t v6 = sub_183D4529C();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[12];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    v0[2] = v8;
    id v11 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63CE0);
    uint64_t v12 = sub_183D44B9C();
    v0[3] = sub_1834EFE70(v12, v13, &v16);
    sub_183D453AC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1830D4000, v5, v6, "Failed to retrieve actorID for incoming connection: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v10, -1, -1);
    MEMORY[0x185318E50](v9, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1834EE908@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for NWActorID();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v11 = (uint64_t *)(a1 + 192);
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 192);
  if (*(void *)(v12 + 16) && (unint64_t v13 = sub_18359A518(a2), (v14 & 1) != 0))
  {
    uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
    swift_retain();
  }
  else
  {
    uint64_t v15 = 0;
  }
  swift_endAccess();
  sub_1834F2414((uint64_t)a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for NWActorID);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v11;
  *id v11 = 0x8000000000000000;
  sub_18359E9F0(a3, v10, isUniquelyReferenced_nonNull_native);
  *id v11 = v18;
  swift_bridgeObjectRelease();
  sub_1834F25A0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for NWActorID);
  uint64_t result = swift_endAccess();
  *a4 = v15;
  return result;
}

uint64_t sub_1834EEA90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  BOOL v7 = (uint64_t *)(a1 + 144);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_18359A408(a2, a3);
  LOBYTE(a3) = v9;
  swift_bridgeObjectRelease();
  if (a3)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v7;
    uint64_t v17 = *v7;
    *BOOL v7 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1835A0CCC();
      uint64_t v11 = v17;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for NWActorSystem.ServerRole();
    uint64_t v14 = *(void *)(v13 - 8);
    sub_1834F2854(v12 + *(void *)(v14 + 72) * v8, a4, (uint64_t (*)(void))type metadata accessor for NWActorSystem.ServerRole);
    sub_18355079C(v8, v11);
    *BOOL v7 = v11;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a4, 0, 1, v13);
  }
  else
  {
    uint64_t v15 = type metadata accessor for NWActorSystem.ServerRole();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a4, 1, 1, v15);
  }
  return swift_endAccess();
}

void sub_1834EEC60(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for NWActorID();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v8 = (uint64_t *)((char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63028);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v63 = (char *)&v47 - v13;
  uint64_t v14 = *(os_unfair_lock_s **)(v2 + 128);
  char v67 = sub_1834F2804;
  uint64_t v68 = v2;
  uint64_t v61 = v2;
  uint64_t v15 = v14 + 4;
  os_unfair_lock_lock(v14 + 4);
  sub_1834F0460(v71);
  uint64_t v65 = 0;
  os_unfair_lock_t v59 = v15;
  os_unfair_lock_unlock(v15);
  unint64_t v17 = 0;
  uint64_t v18 = *(void *)(v71[0] + 64);
  uint64_t v51 = v71[0] + 64;
  uint64_t v19 = 1 << *(unsigned char *)(v71[0] + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  unint64_t v22 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v54 = &v70;
  unint64_t v48 = v22 - 1;
  int64_t v56 = v22;
  unint64_t v49 = v22 - 5;
  uint64_t v62 = v71[0];
  uint64_t v50 = v71[0] + 104;
  *(void *)&long long v16 = 136315394;
  long long v53 = v16;
  uint64_t v52 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v60 = v12;
  uint64_t v55 = v6;
  uint64_t v57 = a1;
  uint64_t v58 = v8;
  if (!v21) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v66 = (v21 - 1) & v21;
  unint64_t v28 = __clz(__rbit64(v21)) | (v17 << 6);
  uint64_t v29 = (uint64_t)v63;
LABEL_8:
  uint64_t v30 = v62;
  sub_1834F2414(*(void *)(v62 + 48) + *(void *)(v6 + 72) * v28, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for NWActorID);
  uint64_t v31 = *(void *)(v30 + 56);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63030);
  *(void *)&v12[*(int *)(v32 + 48)] = *(void *)(v31 + 8 * v28);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v12, 0, 1, v32);
  swift_retain();
  while (1)
  {
    sub_183138964((uint64_t)v12, v29, &qword_1E8F63028);
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63030);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v29, 1, v36) == 1)
    {
      swift_release();
      return;
    }
    if ((uint64_t v37 = *(void *)(v29 + *(int *)(v36 + 48)),
          sub_1834F2854(v29, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for NWActorID),
          *v8 == a1)
      && v8[1] == a2
      || (sub_183D4592C() & 1) != 0)
    {
      if (qword_1E8F62078 != -1) {
        swift_once();
      }
      uint64_t v38 = sub_183D4498C();
      __swift_project_value_buffer(v38, (uint64_t)qword_1E8F62E88);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v39 = sub_183D4496C();
      os_log_type_t v40 = sub_183D452BC();
      BOOL v41 = os_log_type_enabled(v39, v40);
      unint64_t v64 = v17;
      if (v41)
      {
        uint64_t v42 = swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        v71[0] = v43;
        *(_DWORD *)uint64_t v42 = v53;
        uint64_t v69 = v37;
        _s15ActorConnectionCMa(0);
        swift_retain();
        uint64_t v44 = sub_183D44B9C();
        uint64_t v69 = sub_1834EFE70(v44, v45, v71);
        sub_183D453AC();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v42 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v69 = sub_1834EFE70(v57, a2, v71);
        sub_183D453AC();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1830D4000, v39, v40, "Canceling connection %s associated with %s", (uint8_t *)v42, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x185318E50](v43, -1, -1);
        uint64_t v46 = v42;
        a1 = v57;
        uint64_t v6 = v55;
        MEMORY[0x185318E50](v46, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_release_n();
      }
      unint64_t v8 = v58;
      uint64_t v23 = sub_18353AFF8();
      uint64_t v24 = MEMORY[0x1F4188790](v23);
      *(&v47 - 2) = v61;
      *(&v47 - 1) = (uint64_t)v8;
      MEMORY[0x1F4188790](v24);
      *(&v47 - 2) = (uint64_t)sub_1834F28BC;
      *(&v47 - 1) = v25;
      uint64_t v26 = v59;
      os_unfair_lock_lock(v59);
      uint64_t v27 = v65;
      sub_1834F2BDC();
      uint64_t v65 = v27;
      os_unfair_lock_unlock(v26);
      swift_release();
      sub_1834F25A0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for NWActorID);
      uint64_t v12 = v60;
      unint64_t v17 = v64;
      unint64_t v21 = v66;
      if (v66) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_1834F25A0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for NWActorID);
      swift_release();
      unint64_t v21 = v66;
      if (v66) {
        goto LABEL_7;
      }
    }
LABEL_9:
    int64_t v33 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v33 >= v56)
    {
      uint64_t v29 = (uint64_t)v63;
    }
    else
    {
      unint64_t v34 = *(void *)(v51 + 8 * v33);
      uint64_t v29 = (uint64_t)v63;
      if (v34) {
        goto LABEL_12;
      }
      if ((uint64_t)(v17 + 2) >= v56)
      {
        ++v17;
      }
      else
      {
        unint64_t v34 = *(void *)(v51 + 8 * (v17 + 2));
        if (v34)
        {
          int64_t v33 = v17 + 2;
LABEL_12:
          uint64_t v66 = (v34 - 1) & v34;
          unint64_t v28 = __clz(__rbit64(v34)) + (v33 << 6);
          unint64_t v17 = v33;
          goto LABEL_8;
        }
        if ((uint64_t)(v17 + 3) >= v56)
        {
          v17 += 2;
        }
        else
        {
          unint64_t v34 = *(void *)(v51 + 8 * (v17 + 3));
          if (v34)
          {
            int64_t v33 = v17 + 3;
            goto LABEL_12;
          }
          int64_t v33 = v17 + 4;
          if ((uint64_t)(v17 + 4) >= v56)
          {
            v17 += 3;
          }
          else
          {
            unint64_t v34 = *(void *)(v51 + 8 * v33);
            if (v34) {
              goto LABEL_12;
            }
            while (v49 != v17)
            {
              unint64_t v34 = *(void *)(v50 + 8 * v17++);
              if (v34)
              {
                int64_t v33 = v17 + 4;
                goto LABEL_12;
              }
            }
            unint64_t v17 = v48;
          }
        }
      }
    }
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63030);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v12, 1, 1, v35);
    uint64_t v66 = 0;
  }
  __break(1u);
}

uint64_t sub_1834EF41C(uint64_t a1, void *a2)
{
  id v3 = (uint64_t *)(a1 + 192);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_18359A518(a2);
  LOBYTE(a2) = v5;
  swift_bridgeObjectRelease();
  if (a2)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v7 = *v3;
    uint64_t v11 = *v3;
    *id v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1835A04A4();
      uint64_t v7 = v11;
    }
    uint64_t v8 = *(void *)(v7 + 48);
    uint64_t v9 = type metadata accessor for NWActorID();
    sub_1834F25A0(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, (uint64_t (*)(void))type metadata accessor for NWActorID);
    sub_18354FD80(v4, v7);
    *id v3 = v7;
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1834EF540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    unint64_t v7 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_183D456DC();
  swift_bridgeObjectRelease();
  if (v23 < v5) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v9 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_183D456DC();
    swift_bridgeObjectRelease();
    uint64_t v11 = v10 + v8;
    if (!__OFADD__(v10, v8)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_183D456DC();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v7 = *v4;
  if (*v4 >> 62) {
    goto LABEL_36;
  }
  uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 + v8;
  if (__OFADD__(v10, v8)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v7 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v4 = v7;
  uint64_t v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v10 = 1;
  }
  if (v7 >> 62) {
    goto LABEL_39;
  }
  uint64_t v14 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11) {
    uint64_t v14 = v11;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = MEMORY[0x1853148C0](v10, v14, 1, v7);
  swift_bridgeObjectRelease();
  *unint64_t v4 = v7;
  uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v15 = (void *)(v13 + 32 + 8 * v6);
  type metadata accessor for NWProtocolOptions();
  swift_arrayDestroy();
  if (v8)
  {
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_183D456DC();
      swift_bridgeObjectRelease();
      uint64_t v17 = v24 - v5;
      if (!__OFSUB__(v24, v5))
      {
LABEL_21:
        if (v17 < 0)
        {
LABEL_46:
          uint64_t result = sub_183D4571C();
          __break(1u);
          return result;
        }
        uint64_t v18 = (char *)(v15 + 1);
        uint64_t v19 = (char *)(v13 + 32 + 8 * v5);
        if (v15 + 1 != (void *)v19 || v18 >= &v19[8 * v17]) {
          memmove(v18, v19, 8 * v17);
        }
        if (!(v7 >> 62))
        {
          uint64_t v20 = *(void *)(v13 + 16);
          uint64_t v21 = v20 + v8;
          if (!__OFADD__(v20, v8))
          {
LABEL_27:
            *(void *)(v13 + 16) = v21;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_183D456DC();
        swift_bridgeObjectRelease();
        uint64_t v21 = v25 + v8;
        if (!__OFADD__(v25, v8)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v16 = *(void *)(v13 + 16);
      uint64_t v17 = v16 - v5;
      if (!__OFSUB__(v16, v5)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  *uint64_t v15 = v3;

  return sub_183D44E6C();
}

uint64_t sub_1834EF82C(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_1832FFC34(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *uint64_t v3 = v5;
  }
  uint64_t v14 = *(void *)(type metadata accessor for NWEndpoint() - 8);
  unint64_t v15 = v5 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v16 = *(void *)(v14 + 72);
  uint64_t v17 = v15 + v16 * a1;
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v5 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_33;
  }
  if (v19 < 0)
  {
LABEL_35:
    uint64_t result = sub_183D4571C();
    __break(1u);
    return result;
  }
  unint64_t v20 = v17 + v16;
  unint64_t v21 = v15 + v16 * a2;
  if (v17 + v16 < v21 || v20 >= v21 + v19 * v16)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v20 != v21)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v23 = *(void *)(v5 + 16);
  BOOL v24 = __OFADD__(v23, v9);
  uint64_t v25 = v23 + v9;
  if (v24)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(void *)(v5 + 16) = v25;
LABEL_25:
  if (v16 >= 1) {
    sub_1834F2414(a3, v17, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
  }
  return sub_183138A24(a3, &qword_1E8F62FC0);
}

char *sub_1834EFA4C(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_1834B5168(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  uint64_t v14 = (uint64_t)&v5[7 * a1 + 4];
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v16 = v5[2];
  BOOL v17 = __OFSUB__(v16, a2);
  uint64_t v18 = v16 - a2;
  if (v17) {
    goto LABEL_26;
  }
  if ((v18 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v14 + 56);
    uint64_t v19 = (char *)&v5[7 * a2 + 4];
    if ((char *)(v14 + 56) != v19 || result >= &v19[56 * v18]) {
      uint64_t result = (char *)memmove(result, v19, 56 * v18);
    }
    uint64_t v20 = v5[2];
    BOOL v17 = __OFADD__(v20, v9);
    uint64_t v21 = v20 + v9;
    if (!v17)
    {
      v5[2] = v21;
LABEL_20:
      long long v22 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)a3;
      *(_OWORD *)(v14 + 16) = v22;
      *(_OWORD *)(v14 + 32) = *(_OWORD *)(a3 + 32);
      *(void *)(v14 + 48) = *(void *)(a3 + 48);
      *(void *)uint64_t v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_183D4571C();
  __break(1u);
  return result;
}

uint64_t sub_1834EFBEC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1834E1128(a1, *(void *)(v2 + 32), *(void *)(v2 + 24), a2);
}

uint64_t sub_1834EFBF8(uint64_t a1)
{
  long long v8 = *(_OWORD *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_1834B96A4;
  *(void *)(v5 + 56) = v4;
  *(_OWORD *)(v5 + 40) = v8;
  *(_OWORD *)(v5 + 24) = v6;
  *(void *)(v5 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1834E3224, 0, 0);
}

void sub_1834EFCCC()
{
  sub_1834E3600(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t type metadata accessor for NWActorSystem.ServerRole()
{
  uint64_t result = qword_1E8F62FB0;
  if (!qword_1E8F62FB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1834EFD24()
{
  return sub_1834EB8D0(v0[2], v0[3], v0[4], v0[5]);
}

void *sub_1834EFD44(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61ED0);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1834EFDAC(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1834EFDD4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1834EFDFC(uint64_t a1)
{
  return sub_1834E1C08(a1, v1);
}

uint64_t sub_1834EFE04@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  return sub_1834E2298(a1, v2[4], v2[5], v2[2], v2[3], a2);
}

uint64_t sub_1834EFE10()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1834EFE4C(uint64_t a1)
{
  return sub_1834E2944(a1, v1);
}

uint64_t sub_1834EFE54@<X0>(uint64_t *a1@<X8>)
{
  return sub_1834E50FC(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_1834EFE70(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1834EFF44(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1834F26A8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1834F26A8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_2((uint64_t)v12);
  return v7;
}

uint64_t sub_1834EFF44(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_183D453BC();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1834F0100(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_183D4557C();
  if (!v8)
  {
    sub_183D456BC();
    __break(1u);
LABEL_17:
    uint64_t result = sub_183D4571C();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1834F0100(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1834F0198(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1834F0310(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1834F0310(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1834F0198(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1834EFD44(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_183D4548C();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_183D456BC();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_183D44CAC();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_183D4571C();
    __break(1u);
LABEL_14:
    uint64_t result = sub_183D456BC();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1834F0310(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61ED0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  int64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_183D4571C();
  __break(1u);
  return result;
}

void *sub_1834F0460@<X0>(void *a1@<X8>)
{
  return sub_1834F0668(a1);
}

uint64_t sub_1834F0478@<X0>(uint64_t *a1@<X8>)
{
  return sub_1834E41DC(*(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

unint64_t sub_1834F0498()
{
  unint64_t result = qword_1E8F63C50;
  if (!qword_1E8F63C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63C50);
  }
  return result;
}

void sub_1834F04EC(uint64_t *a1@<X8>)
{
  sub_1834E467C(*(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 16), a1);
}

uint64_t sub_1834F0510()
{
  return sub_1834E4FA4(v0[4], v0[5], v0[2], v0[3]);
}

void sub_1834F0530(void *a1@<X8>)
{
  sub_1834EC670(*(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_1834F0550(uint64_t a1)
{
  uint64_t v4 = v1[9];
  uint64_t v5 = v1[10];
  uint64_t v6 = v1[11];
  uint64_t v7 = v1[12];
  uint64_t v8 = v1[13];
  uint64_t v10 = v1[14];
  uint64_t v9 = v1[15];
  size_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *size_t v11 = v2;
  v11[1] = sub_1834B5EB0;
  return sub_1834E6C30(a1, v4, v5, v6, v7, v8, v10, v9);
}

void *sub_1834F0668@<X0>(void *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1834F06AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11)
{
  if (a5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1834C80D8(a8);
    sub_1832E669C(a10, a11);
    return swift_release();
  }
  return result;
}

uint64_t dynamic_cast_existential_2_unconditional(uint64_t a1)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    uint64_t result = swift_conformsToProtocol2();
    if (result) {
      return a1;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1834F07C0()
{
  return sub_1834F2558(&qword_1E8F62F70, 255, (void (*)(uint64_t))type metadata accessor for NWActorID);
}

uint64_t sub_1834F080C()
{
  return sub_1834F2558(&qword_1E8F62F78, 255, (void (*)(uint64_t))type metadata accessor for NWActorSystemInvocationDecoder);
}

unint64_t sub_1834F085C()
{
  unint64_t result = qword_1E8F62F80;
  if (!qword_1E8F62F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F62F80);
  }
  return result;
}

uint64_t sub_1834F08B0()
{
  return sub_1834F2558(qword_1E8F62F88, 255, (void (*)(uint64_t))type metadata accessor for NWActorSystemResultHandler);
}

uint64_t type metadata accessor for NWActorSystem()
{
  return self;
}

uint64_t method lookup function for NWActorSystem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWActorSystem);
}

uint64_t dispatch thunk of NWActorSystem.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of NWActorSystem.__allocating_init(service:parameters:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

unint64_t destroy for NWActorSystem.Role(void *a1)
{
  unint64_t result = a1[4];
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[7])
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    unint64_t v3 = a1[10];
    if (v3 >> 60 != 15) {
      sub_1832E5E9C(a1[9], v3);
    }
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for NWActorSystem.Role(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 32);
  if (v4 < 0xFFFFFFFF)
  {
    long long v10 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v10;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    long long v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    long long v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v4;
    uint64_t v6 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v6;
    uint64_t v8 = (_OWORD *)(a2 + 56);
    uint64_t v7 = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v7)
    {
      uint64_t v9 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v7;
      *(void *)(a1 + 64) = v9;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 56) = *v8;
    }
    uint64_t v13 = (uint64_t *)(a2 + 72);
    unint64_t v14 = *(void *)(a2 + 80);
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 72) = *(_OWORD *)v13;
    }
    else
    {
      uint64_t v15 = *v13;
      sub_1832E5D6C(*v13, *(void *)(a2 + 80));
      *(void *)(a1 + 72) = v15;
      *(void *)(a1 + 80) = v14;
    }
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    *(_WORD *)(a1 + 89) = *(_WORD *)(a2 + 89);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_retain();
  }
  return a1;
}

uint64_t assignWithCopy for NWActorSystem.Role(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 4);
  if (*(void *)(a1 + 32) >= 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v5 = *((void *)a2 + 7);
      if (*(void *)(a1 + 56))
      {
        if (v5)
        {
          *(void *)(a1 + 56) = v5;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 64) = *((void *)a2 + 8);
          swift_unknownObjectRetain();
          swift_unknownObjectRelease();
          goto LABEL_24;
        }
        sub_1834C9554(a1 + 56);
      }
      else if (v5)
      {
        *(void *)(a1 + 56) = v5;
        *(void *)(a1 + 64) = *((void *)a2 + 8);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_24;
      }
      *(_OWORD *)(a1 + 56) = *(long long *)((char *)a2 + 56);
LABEL_24:
      BOOL v17 = (uint64_t *)a2 + 9;
      unint64_t v18 = *((void *)a2 + 10);
      if (*(void *)(a1 + 80) >> 60 == 15)
      {
        if (v18 >> 60 != 15)
        {
          uint64_t v19 = *v17;
          sub_1832E5D6C(*v17, *((void *)a2 + 10));
          *(void *)(a1 + 72) = v19;
          *(void *)(a1 + 80) = v18;
LABEL_31:
          *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
          *(_WORD *)(a1 + 89) = *(_WORD *)((char *)a2 + 89);
          *(void *)(a1 + 96) = *((void *)a2 + 12);
          swift_retain();
          swift_release();
          return a1;
        }
      }
      else
      {
        if (v18 >> 60 != 15)
        {
          uint64_t v20 = *v17;
          sub_1832E5D6C(*v17, *((void *)a2 + 10));
          uint64_t v21 = *(void *)(a1 + 72);
          unint64_t v22 = *(void *)(a1 + 80);
          *(void *)(a1 + 72) = v20;
          *(void *)(a1 + 80) = v18;
          sub_1832E5E9C(v21, v22);
          goto LABEL_31;
        }
        sub_1834F0E54(a1 + 72);
      }
      *(_OWORD *)(a1 + 72) = *(_OWORD *)v17;
      goto LABEL_31;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 56))
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    unint64_t v8 = *(void *)(a1 + 80);
    if (v8 >> 60 != 15) {
      sub_1832E5E9C(*(void *)(a1 + 72), v8);
    }
    swift_release();
    goto LABEL_14;
  }
  if (v4 < 0xFFFFFFFF)
  {
LABEL_14:
    long long v9 = *a2;
    long long v10 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)a1 = v9;
    long long v11 = a2[3];
    long long v12 = a2[4];
    long long v13 = a2[5];
    *(void *)(a1 + 96) = *((void *)a2 + 12);
    *(_OWORD *)(a1 + 64) = v12;
    *(_OWORD *)(a1 + 80) = v13;
    *(_OWORD *)(a1 + 48) = v11;
    return a1;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  uint64_t v7 = (long long *)((char *)a2 + 56);
  uint64_t v6 = *((void *)a2 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(void *)(a1 + 56) = v6;
    *(void *)(a1 + 64) = *((void *)a2 + 8);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *v7;
  }
  unint64_t v14 = (uint64_t *)a2 + 9;
  unint64_t v15 = *((void *)a2 + 10);
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v14;
  }
  else
  {
    uint64_t v16 = *v14;
    sub_1832E5D6C(*v14, *((void *)a2 + 10));
    *(void *)(a1 + 72) = v16;
    *(void *)(a1 + 80) = v15;
  }
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(_WORD *)(a1 + 89) = *(_WORD *)((char *)a2 + 89);
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  swift_retain();
  return a1;
}

uint64_t sub_1834F0E54(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for NWActorSystem.Role(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 32) >= 0xFFFFFFFFuLL)
  {
    unint64_t v4 = *(void *)(a2 + 32);
    if (v4 >= 0xFFFFFFFF)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v5 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = v5;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v4;
      swift_bridgeObjectRelease();
      uint64_t v6 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 56);
      if (*(void *)(a1 + 56))
      {
        if (v7)
        {
          *(void *)(a1 + 56) = v7;
          swift_bridgeObjectRelease();
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          swift_unknownObjectRelease();
          goto LABEL_14;
        }
        sub_1834C9554(a1 + 56);
      }
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_14:
      long long v12 = (void *)(a2 + 72);
      unint64_t v13 = *(void *)(a1 + 80);
      if (v13 >> 60 != 15)
      {
        unint64_t v14 = *(void *)(a2 + 80);
        if (v14 >> 60 != 15)
        {
          uint64_t v15 = *(void *)(a1 + 72);
          *(void *)(a1 + 72) = *v12;
          *(void *)(a1 + 80) = v14;
          sub_1832E5E9C(v15, v13);
          goto LABEL_19;
        }
        sub_1834F0E54(a1 + 72);
      }
      *(_OWORD *)(a1 + 72) = *(_OWORD *)v12;
LABEL_19:
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(_WORD *)(a1 + 89) = *(_WORD *)(a2 + 89);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_release();
      return a1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 56))
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    unint64_t v8 = *(void *)(a1 + 80);
    if (v8 >> 60 != 15) {
      sub_1832E5E9C(*(void *)(a1 + 72), v8);
    }
    swift_release();
  }
  long long v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v9;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  long long v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v11;
  return a1;
}

uint64_t getEnumTagSinglePayload for NWActorSystem.Role(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 104)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NWActorSystem.Role(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 96) = 0;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 104) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

uint64_t sub_1834F1134(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 32);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_1834F114C(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 32) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for NWActorSystem.Role()
{
  return &type metadata for NWActorSystem.Role;
}

uint64_t *sub_1834F1198(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = a2[1];
      *a1 = v7;
      a1[1] = v8;
      swift_retain();
      uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62F28) + 48);
      long long v10 = (char *)a1 + v9;
      long long v11 = (char *)a2 + v9;
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v15 = a2[1];
      *a1 = v7;
      a1[1] = v15;
      swift_unknownObjectRetain();
      uint64_t v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62F08) + 48);
      long long v10 = (char *)a1 + v16;
      long long v11 = (char *)a2 + v16;
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
LABEL_7:
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FA8);
        memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
LABEL_9:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    goto LABEL_9;
  }
  uint64_t v14 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_1834F144C(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    long long v2 = &qword_1E8F62F28;
  }
  else
  {
    swift_unknownObjectRelease();
    long long v2 = &qword_1E8F62F08;
  }
  uint64_t v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v2) + 48);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
  uint64_t v7 = *(void *)(v4 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v3, 1, v4);
  if (!result)
  {
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
    return v6(v3, v4);
  }
  return result;
}

void *sub_1834F1548(void *a1, uint64_t *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = *a2;
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v13 = a2[1];
    *a1 = v5;
    a1[1] = v13;
    swift_unknownObjectRetain();
    uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62F08) + 48);
    uint64_t v8 = (char *)a1 + v14;
    uint64_t v9 = (char *)a2 + v14;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      goto LABEL_3;
    }
LABEL_5:
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    goto LABEL_6;
  }
  uint64_t v6 = a2[1];
  *a1 = v5;
  a1[1] = v6;
  swift_retain();
  uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62F28) + 48);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FA8);
  memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_6:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_1834F17AC(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_1834F25A0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for NWActorSystem.ServerRole);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = a2[1];
      *a1 = v5;
      a1[1] = v6;
      swift_retain();
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62F28) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
LABEL_4:
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FA8);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_7:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      uint64_t v13 = a2[1];
      *a1 = v5;
      a1[1] = v13;
      swift_unknownObjectRetain();
      uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62F08) + 48);
      uint64_t v8 = (char *)a1 + v14;
      uint64_t v9 = (char *)a2 + v14;
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
        goto LABEL_4;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    goto LABEL_7;
  }
  return a1;
}

void *sub_1834F1A34(void *a1, uint64_t *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = *a2;
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v13 = a2[1];
    *a1 = v5;
    a1[1] = v13;
    uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62F08) + 48);
    uint64_t v8 = (char *)a1 + v14;
    uint64_t v9 = (char *)a2 + v14;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      goto LABEL_3;
    }
LABEL_5:
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    goto LABEL_6;
  }
  uint64_t v6 = a2[1];
  *a1 = v5;
  a1[1] = v6;
  uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62F28) + 48);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FA8);
  memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_6:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_1834F1C88(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_1834F25A0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for NWActorSystem.ServerRole);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = a2[1];
      *a1 = v5;
      a1[1] = v6;
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62F28) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
LABEL_4:
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FA8);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_7:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      uint64_t v13 = a2[1];
      *a1 = v5;
      a1[1] = v13;
      uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62F08) + 48);
      uint64_t v8 = (char *)a1 + v14;
      uint64_t v9 = (char *)a2 + v14;
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
        goto LABEL_4;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    goto LABEL_7;
  }
  return a1;
}

void sub_1834F1F00()
{
  sub_1834F1FC8();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v3 = &v2;
    swift_getTupleTypeLayout2();
    uint64_t v4 = &v1;
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_1834F1FC8()
{
  if (!qword_1E8F61A58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E8F61A50);
    unint64_t v0 = sub_183D4536C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E8F61A58);
    }
  }
}

uint64_t sub_1834F2028(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_1834B412C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = a1 << 6;
  uint64_t v13 = (char *)&v4[8 * a1 + 4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61F48);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v15 = v4[2];
  BOOL v16 = __OFSUB__(v15, a2);
  uint64_t v17 = v15 - a2;
  if (v16) {
    goto LABEL_26;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    unint64_t v18 = (char *)&v4[8 * a2 + 4];
    size_t v19 = v17 << 6;
    if (v12 != a2 << 6 || v13 >= &v18[v19]) {
      uint64_t result = (uint64_t)memmove(v13, v18, v19);
    }
    uint64_t v20 = v4[2];
    BOOL v16 = __OFADD__(v20, v8);
    uint64_t v21 = v20 - v7;
    if (!v16)
    {
      v4[2] = v21;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_183D4571C();
  __break(1u);
  return result;
}

uint64_t sub_1834F21A4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1834F21DC(void *a1)
{
  return sub_18353BFC8(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1834F21E4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1834F2220(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_1834B96A4;
  *(_OWORD *)(v4 + 72) = v5;
  *(void *)(v4 + 64) = a1;
  return MEMORY[0x1F4188298](sub_1834EC224, 0, 0);
}

uint64_t objectdestroy_50Tm()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1834F2318(uint64_t a1)
{
  return sub_1834EC548(a1);
}

uint64_t sub_1834F2320(uint64_t *a1)
{
  return sub_1834EC5E8(a1);
}

uint64_t sub_1834F2328@<X0>(void *a1@<X8>)
{
  return sub_1834F29DC(a1);
}

uint64_t sub_1834F2340@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  *a1 = *(void *)(v1 + 136);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1834F2390@<X0>(void *a1@<X8>)
{
  return sub_18353C6D4(v1, a1);
}

double sub_1834F23AC@<D0>(__n128 *a1@<X8>)
{
  *(void *)&double result = sub_1834EBF48(*(void *)(v1 + 16), (void *)*(void *)(v1 + 24), a1).n128_u64[0];
  return result;
}

double sub_1834F23C8@<D0>(_OWORD *a1@<X8>)
{
  (*(void (**)(long long *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
  {
    double result = *(double *)&v5;
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1834F240C(uint64_t a1)
{
  return sub_1834F43CC(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1834F2414(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1834F247C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  int64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *int64_t v11 = v2;
  v11[1] = sub_1834B96A4;
  return sub_1834EB028(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1834F2558(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1834F25A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1834F2664()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_1834F268C()
{
  return sub_18353F3EC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1834F26A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1834F2704@<X0>(uint64_t a1@<X8>)
{
  return sub_1834EEA90(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1834F2724@<X0>(BOOL *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(void *)(*(void *)(v1 + 144) + 16) == 0;
  return result;
}

void *sub_1834F277C@<X0>(unsigned char *a1@<X8>)
{
  return sub_183551434(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

void sub_1834F2798(void *a1@<X8>)
{
  *(unsigned char *)(v1 + 176) = 0;
  uint64_t v2 = *(void *)(v1 + 168);
  *(void *)(v1 + 168) = 0;
  *a1 = v2;
}

uint64_t sub_1834F27AC@<X0>(void *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 184);
  *(void *)(v1 + 184) = MEMORY[0x1E4FBC860];
  *a1 = v4;
  return result;
}

uint64_t sub_1834F2804@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  *a1 = *(void *)(v1 + 192);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1834F2854(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1834F28BC()
{
  return sub_1834EF41C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1834F28D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1834E2AFC(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1834F28F4()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1834F2924(uint64_t a1)
{
  return sub_1834E34D4(a1, *(void (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1834F2934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11)
{
  if (a5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1834C4654(a8);
    sub_1834D7FF8(a10, a11);
    return swift_retain();
  }
  return result;
}

uint64_t sub_1834F29CC(uint64_t a1)
{
  return sub_1834ED4B0(a1);
}

uint64_t sub_1834F29D4(unsigned int *a1)
{
  return sub_1834ED800(a1);
}

uint64_t sub_1834F29DC@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  *a1 = *(void *)(v1 + 144);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1834F2A2C@<X0>(void *a1@<X8>)
{
  *(unsigned char *)(v1 + 176) = 1;
  uint64_t result = swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 184);
  *(void *)(v1 + 184) = MEMORY[0x1E4FBC860];
  *a1 = v4;
  return result;
}

uint64_t sub_1834F2A8C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1834F2AD4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1834B5EB0;
  return sub_1834EDFCC(a1, v4, v5, v7, v6);
}

void sub_1834F2B94(uint64_t a1)
{
  sub_18353CD1C(a1, v1);
}

uint64_t sub_1834F2B9C@<X0>(void *a1@<X8>)
{
  return sub_1834EE908(*(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_1834F2BC4()
{
  return sub_1834EFD24();
}

uint64_t sub_1834F2BDC()
{
  return sub_1834EFDD4();
}

uint64_t sub_1834F2BF8()
{
  return sub_1834F28BC();
}

uint64_t sub_1834F2C10@<X0>(uint64_t a1@<X8>)
{
  return sub_1834F28D8(a1);
}

void sub_1834F2C2C(void *a1@<X8>)
{
}

uint64_t sub_1834F2C44(nw_protocol_stack_t *a1)
{
  return sub_1834A47E4(a1);
}

uint64_t NWError.init(_:)@<X0>(NSObject *a1@<X0>, uint64_t a2@<X8>)
{
  nw_error_domain_t error_domain = nw_error_get_error_domain(a1);
  switch(error_domain)
  {
    case nw_error_domain_tls:
      LODWORD(v5) = nw_error_get_error_code(a1);
      uint64_t result = swift_unknownObjectRelease();
      char v7 = 2;
      break;
    case nw_error_domain_dns:
      LODWORD(v5) = nw_error_get_error_code(a1);
      uint64_t result = swift_unknownObjectRelease();
      char v7 = 1;
      break;
    case nw_error_domain_posix:
      nw_error_get_error_code(a1);
      uint64_t v5 = sub_183D449AC();
      uint64_t result = swift_unknownObjectRelease();
      char v7 = 0;
      if ((v5 & 0x100000000) != 0) {
        LODWORD(v5) = 22;
      }
      break;
    default:
      uint64_t result = swift_unknownObjectRelease();
      char v7 = 0;
      LODWORD(v5) = 22;
      break;
  }
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v7;
  return result;
}

uint64_t sub_1834F2D24()
{
  if (!*(unsigned char *)(v0 + 4))
  {
    uint64_t v4 = (char *)swift_slowAlloc();
    int v5 = sub_183D449BC();
    if (strerror_r(v5, v4, 0x80uLL)) {
      uint64_t v3 = 0x6E776F6E6B6E55;
    }
    else {
      uint64_t v3 = sub_183D44C9C();
    }
    MEMORY[0x185318E50](v4, -1, -1);
    return v3;
  }
  OSStatus v1 = *(_DWORD *)v0;
  if (*(unsigned char *)(v0 + 4) != 1)
  {
    CFStringRef v6 = SecCopyErrorMessageString(v1, 0);
    if (!v6) {
      return 0x6E776F6E6B6E55;
    }
    char v7 = (__CFString *)v6;
    uint64_t v3 = sub_183D44AFC();

    return v3;
  }
  uint64_t result = (uint64_t)nwlog_get_string_for_dns_service_error(v1);
  if (result) {
    return sub_183D44C9C();
  }
  __break(1u);
  return result;
}

uint64_t NWError.debugDescription.getter()
{
  if (*(unsigned char *)(v0 + 4))
  {
    uint64_t v2 = sub_183D4589C();
  }
  else
  {
    uint64_t v2 = 0;
    sub_183D4566C();
  }
  sub_183D44C8C();
  sub_1834F2D24();
  sub_183D44C8C();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1834F2F3C(uint64_t a1)
{
  unint64_t v2 = sub_1834F319C();

  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1834F2F78(uint64_t a1)
{
  unint64_t v2 = sub_1834F319C();

  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t NWError.errorCode.getter()
{
  LODWORD(result) = *(_DWORD *)v0;
  if (!*(unsigned char *)(v0 + 4)) {
    LODWORD(result) = sub_183D449BC();
  }
  return (int)result;
}

unint64_t NWError.errorUserInfo.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61D38);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_183D53660;
  unint64_t result = *MEMORY[0x1E4F1D140];
  if (*MEMORY[0x1E4F1D140])
  {
    *(void *)(inited + 32) = sub_183D44AFC();
    *(void *)(inited + 40) = v2;
    uint64_t v3 = sub_1834F2D24();
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = v3;
    *(void *)(inited + 56) = v4;
    return sub_18359645C(inited);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t NWError._domain.getter()
{
  return sub_183D44AFC();
}

uint64_t sub_1834F309C()
{
  LODWORD(result) = *(_DWORD *)v0;
  if (!*(unsigned char *)(v0 + 4)) {
    LODWORD(result) = sub_183D449BC();
  }
  return (int)result;
}

BOOL _s7Network7NWErrorO2eeoiySbAC_ACtFZ_0(int *a1, int *a2)
{
  int v3 = *a1;
  int v4 = *((unsigned __int8 *)a1 + 4);
  int v5 = *a2;
  int v6 = *((unsigned __int8 *)a2 + 4);
  if (v4)
  {
    BOOL v8 = v6 == 1 && v3 == v5;
    BOOL v10 = v6 == 2 && v3 == v5;
    if (v4 == 1) {
      return v8;
    }
    else {
      return v10;
    }
  }
  else if (*((unsigned char *)a2 + 4))
  {
    return 0;
  }
  else
  {
    int v12 = sub_183D449BC();
    return v12 == sub_183D449BC();
  }
}

uint64_t storeEnumTagSinglePayload for NWError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1834F318C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 4);
}

uint64_t sub_1834F3194(uint64_t result, char a2)
{
  *(unsigned char *)(result + 4) = a2;
  return result;
}

unint64_t sub_1834F319C()
{
  unint64_t result = qword_1E8F61D48;
  if (!qword_1E8F61D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F61D48);
  }
  return result;
}

void NWListener.__allocating_init(service:using:)(unsigned __int8 *a1)
{
}

Swift::Void __swiftcall NWListener.cancel()()
{
  nw_listener_cancel(*(nw_listener_t *)(v0 + 24));
}

uint64_t NWListener.debugDescription.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 24), sel_description);
  uint64_t v2 = sub_183D44AFC();

  return v2;
}

uint64_t NWListener.nw.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t NWListener.Service.Invitation.debugDescription.getter()
{
  BYTE8(v2) = 0;
  *(void *)&long long v2 = *v0;
  sub_183D4566C();
  sub_183D44C8C();
  sub_183D4566C();
  return *(void *)((char *)&v2 + 1);
}

Network::NWListener::Service::Invitation::Route_optional __swiftcall NWListener.Service.Invitation.Route.init(rawValue:)(Swift::String rawValue)
{
  return (Network::NWListener::Service::Invitation::Route_optional)sub_1834F35B8(v1);
}

uint64_t NWListener.Service.Invitation.Route.rawValue.getter()
{
  uint64_t v1 = 0x646F70656D6F68;
  if (*v0 != 1) {
    uint64_t v1 = 0x72656B61657073;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 7496035;
  }
}

uint64_t sub_1834F3374(char *a1, unsigned __int8 *a2)
{
  return sub_1835C1138(*a1, *a2);
}

uint64_t sub_1834F3380()
{
  return sub_183D45B4C();
}

uint64_t sub_1834F341C()
{
  sub_183D44C4C();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1834F34A4()
{
  return sub_183D45B4C();
}

Network::NWListener::Service::Invitation::Route_optional sub_1834F353C(Swift::String *a1)
{
  return NWListener.Service.Invitation.Route.init(rawValue:)(*a1);
}

void sub_1834F3548(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = 0x646F70656D6F68;
  if (v2 != 1) {
    uint64_t v4 = 0x72656B61657073;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 7496035;
  }
  if (!v5) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

void NWListener.Service.Invitation.route.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

Network::NWListener::Service::Invitation::Scope_optional __swiftcall NWListener.Service.Invitation.Scope.init(rawValue:)(Swift::String rawValue)
{
  return (Network::NWListener::Service::Invitation::Scope_optional)sub_1834F35B8(v1);
}

uint64_t sub_1834F35B8@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_183D4575C();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t NWListener.Service.Invitation.Scope.rawValue.getter()
{
  uint64_t v1 = 0x73646E65697266;
  if (*v0 != 1) {
    uint64_t v1 = 0x656E6F7972657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x74696D69786F7270;
  }
}

Network::NWListener::Service::Invitation::Scope_optional sub_1834F3670(Swift::String *a1)
{
  return NWListener.Service.Invitation.Scope.init(rawValue:)(*a1);
}

void NWListener.Service.Invitation.scope.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *static NWListener.Service.Invitation.wrangler(route:scope:)@<X0>(unsigned char *result@<X0>, char *a2@<X1>, unsigned char *a3@<X8>)
{
  char v3 = *a2;
  *a3 = *result;
  a3[1] = v3;
  return result;
}

uint64_t sub_1834F36A0()
{
  BYTE8(v2) = 0;
  *(void *)&long long v2 = *v0;
  sub_183D4566C();
  sub_183D44C8C();
  sub_183D4566C();
  return *(void *)((char *)&v2 + 1);
}

uint64_t NWListener.Service.txtRecordObject.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 64);
  *a1 = v2;
  a1[1] = v3;
  return sub_1834C4654(v2);
}

void NWListener.Service.invitation.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 89);
}

uint64_t NWListener.Service.debugDescription.getter()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 72);
  unint64_t v4 = *(void *)(v0 + 80);
  __int16 v5 = *(_WORD *)(v0 + 89);
  if (*(void *)(v0 + 16))
  {
    uint64_t v9 = *(void *)(v0 + 8);
    swift_bridgeObjectRetain();
    sub_183D44C8C();
  }
  else
  {
    uint64_t v9 = 11818;
  }
  swift_bridgeObjectRetain();
  sub_183D44C8C();
  swift_bridgeObjectRelease();
  if (v2) {
    sub_183D44C8C();
  }
  sub_183D44C8C();
  uint64_t v6 = v9;
  if (v4 >> 60 == 15) {
    goto LABEL_17;
  }
  unint64_t v7 = v4 >> 62;
  switch(v4 >> 62)
  {
    case 1uLL:
      if ((int)v3 != v3 >> 32) {
        goto LABEL_11;
      }
      goto LABEL_17;
    case 2uLL:
      if (*(void *)(v3 + 16) == *(void *)(v3 + 24)) {
        goto LABEL_17;
      }
LABEL_11:
      sub_1832E5D6C(v3, v4);
      goto LABEL_12;
    case 3uLL:
      goto LABEL_9;
    default:
      if ((v4 & 0xFF000000000000) != 0)
      {
LABEL_12:
        sub_183D4547C();
        swift_bridgeObjectRelease();
        sub_183D44C8C();
        if (!v7) {
          goto LABEL_21;
        }
        if (v7 == 1)
        {
          if (!__OFSUB__(HIDWORD(v3), v3)) {
            goto LABEL_21;
          }
          __break(1u);
        }
        else if (!__OFSUB__(*(void *)(v3 + 24), *(void *)(v3 + 16)))
        {
LABEL_21:
          sub_183D4589C();
          sub_183D44C8C();
          swift_bridgeObjectRelease();
          sub_183D44C8C();
          sub_1832E669C(v3, v4);
          goto LABEL_22;
        }
        __break(1u);
        JUMPOUT(0x1834F3A88);
      }
LABEL_9:
      sub_1832E669C(v3, v4);
LABEL_17:
      if (!v1) {
        goto LABEL_23;
      }
      uint64_t v9 = 0;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      sub_183D44C8C();
      swift_bridgeObjectRelease();
      sub_183D44C8C();
      sub_183D4566C();
      sub_1834C80D8(v1);
LABEL_22:
      uint64_t v6 = v9;
LABEL_23:
      if (v5 != 3)
      {
        sub_183D44C8C();
        swift_bridgeObjectRelease();
        sub_183D44C8C();
        sub_183D4566C();
        return 0;
      }
      return v6;
  }
}

uint64_t NWListener.Service.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NWListener.Service.type.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NWListener.Service.domain.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NWListener.Service.txtRecordObject.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1834C80D8(*(void *)(v1 + 56));
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = v3;
  return result;
}

uint64_t (*NWListener.Service.txtRecordObject.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v4 = *(void *)(v1 + 64);
  *a1 = v3;
  a1[1] = v4;
  sub_1834C4654(v3);
  return sub_1834F3BA8;
}

uint64_t sub_1834F3BA8(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(v3 + 56);
  if (a2)
  {
    sub_1834C4654(*a1);
    sub_1834C80D8(v5);
    *(void *)(v3 + 56) = v4;
    *(void *)(v3 + 64) = v2;
    return sub_1834C80D8(v4);
  }
  else
  {
    uint64_t result = sub_1834C80D8(*(void *)(v3 + 56));
    *(void *)(v3 + 56) = v4;
    *(void *)(v3 + 64) = v2;
  }
  return result;
}

uint64_t NWListener.Service.txtRecord.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  sub_1834D7FF8(v1, *(void *)(v0 + 80));
  return v1;
}

uint64_t NWListener.Service.noAutoRename.getter()
{
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t NWListener.Service.noAutoRename.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 88) = result;
  return result;
}

unsigned char *(*NWListener.Service.noAutoRename.modify(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 88);
  return sub_1834F3CAC;
}

unsigned char *sub_1834F3CAC(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 88) = result[8];
  return result;
}

_WORD *NWListener.Service.invitation.setter(_WORD *result)
{
  *(_WORD *)(v1 + 89) = *result;
  return result;
}

_WORD *(*NWListener.Service.invitation.modify(uint64_t a1))(_WORD *result)
{
  *(void *)a1 = v1;
  *(_WORD *)(a1 + 8) = *(_WORD *)(v1 + 89);
  return sub_1834F3CF4;
}

_WORD *sub_1834F3CF4(_WORD *result)
{
  *(_WORD *)(*(void *)result + 89) = result[4];
  return result;
}

uint64_t NWListener.Service.init(name:type:domain:txtRecord:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(unsigned char *)(a9 + 88) = 0;
  *(void *)(a9 + 8) = result;
  *(void *)(a9 + 16) = a2;
  *(void *)(a9 + 24) = a3;
  *(void *)(a9 + 32) = a4;
  *(void *)(a9 + 40) = a5;
  *(void *)(a9 + 48) = a6;
  *(void *)(a9 + 72) = a7;
  *(void *)(a9 + 80) = a8;
  *(unsigned char *)a9 = 0;
  *(void *)(a9 + 56) = 0;
  *(void *)(a9 + 64) = 0;
  *(_WORD *)(a9 + 89) = 3;
  return result;
}

__n128 NWListener.Service.init(name:type:domain:txtRecord:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X6>, uint64_t a8@<X8>)
{
  *(unsigned char *)(a8 + 88) = 0;
  *(void *)(a8 + 8) = a1;
  *(void *)(a8 + 16) = a2;
  *(void *)(a8 + 24) = a3;
  *(void *)(a8 + 32) = a4;
  *(void *)(a8 + 40) = a5;
  *(void *)(a8 + 48) = a6;
  *(_OWORD *)(a8 + 72) = xmmword_183D54870;
  __n128 result = *a7;
  *(__n128 *)(a8 + 56) = *a7;
  *(unsigned char *)a8 = 0;
  *(_WORD *)(a8 + 89) = 3;
  return result;
}

double NWListener.Service.init(applicationService:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + 88) = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = a1;
  *(void *)(a3 + 32) = a2;
  *(void *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(a3 + 72) = xmmword_183D54870;
  *(void *)(a3 + 56) = 0;
  *(void *)(a3 + 64) = 0;
  *(unsigned char *)a3 = 1;
  *(_WORD *)(a3 + 89) = 3;
  return result;
}

double NWListener.Service.init(applicationService:invitation:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X2>, uint64_t a4@<X8>)
{
  *(unsigned char *)(a4 + 88) = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = a1;
  *(void *)(a4 + 32) = a2;
  *(void *)(a4 + 40) = 0;
  *(void *)(a4 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(a4 + 72) = xmmword_183D54870;
  *(void *)(a4 + 56) = 0;
  *(void *)(a4 + 64) = 0;
  *(unsigned char *)a4 = 1;
  *(_WORD *)(a4 + 89) = *a3;
  return result;
}

NSObject *sub_1834F3DC8()
{
  v18[3] = *MEMORY[0x1E4F143B8];
  if (*(unsigned char *)v0 != 1)
  {
    uint64_t v4 = *(void *)(v0 + 48);
    uint64_t v5 = *(void *)(v0 + 56);
    txt_record = *(NSObject **)(v0 + 64);
    uint64_t v6 = *(void *)(v0 + 72);
    unint64_t v7 = *(void *)(v0 + 80);
    int v17 = *(unsigned __int8 *)(v0 + 88);
    if (*(void *)(v0 + 16)) {
      BOOL v8 = (const char *)(sub_183D44BAC() + 32);
    }
    else {
      BOOL v8 = 0;
    }
    uint64_t v9 = (const char *)(sub_183D44BAC() + 32);
    if (v4) {
      BOOL v10 = (const char *)(sub_183D44BAC() + 32);
    }
    else {
      BOOL v10 = 0;
    }
    bonjour_service = nw_advertise_descriptor_create_bonjour_service(v8, v9, v10);
    swift_unknownObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    if (v7 >> 60 == 15)
    {
      if (v5)
      {
        if (!bonjour_service)
        {
LABEL_32:
          __break(1u);
LABEL_33:
          sub_1832E669C(v6, v7);
          sub_1832E669C(v6, v7);
          __break(1u);
LABEL_34:
          sub_1832E669C(v6, v7);
          sub_1832E669C(v6, v7);
          __break(1u);
          swift_unknownObjectRelease();
          sub_1832E669C(v6, v7);
          swift_release();
          swift_release();
          __break(1u);
          swift_unknownObjectRelease();
          sub_1832E669C(v6, v7);
          __break(1u);
          JUMPOUT(0x1834F41FCLL);
        }
        nw_advertise_descriptor_set_txt_record_object(bonjour_service, txt_record);
      }
      if (v17) {
        goto LABEL_15;
      }
    }
    else
    {
      switch(v7 >> 62)
      {
        case 1uLL:
          if (v6 >> 32 < (int)v6) {
            __break(1u);
          }
          sub_1834D7FF8(v6, v7);
          swift_unknownObjectRetain();
          sub_1834D7FF8(v6, v7);
          swift_unknownObjectRetain();
          sub_1834D7FF8(v6, v7);
          sub_1834F65E8((int)v6, v6 >> 32, v7 & 0x3FFFFFFFFFFFFFFFLL, bonjour_service, v6, v7);
          goto LABEL_26;
        case 2uLL:
          uint64_t v13 = *(void *)(v6 + 16);
          uint64_t v14 = *(void *)(v6 + 24);
          sub_1834D7FF8(v6, v7);
          swift_unknownObjectRetain();
          sub_1834D7FF8(v6, v7);
          swift_unknownObjectRetain();
          sub_1834D7FF8(v6, v7);
          swift_retain();
          swift_retain();
          sub_1834F65E8(v13, v14, v7 & 0x3FFFFFFFFFFFFFFFLL, bonjour_service, v6, v7);
          swift_release();
          swift_release();
          goto LABEL_26;
        case 3uLL:
          memset(v18, 0, 14);
          if (!bonjour_service) {
            goto LABEL_34;
          }
          int64_t v11 = swift_unknownObjectRetain_n();
          size_t v12 = 0;
          break;
        default:
          v18[0] = v6;
          LOWORD(v18[1]) = v7;
          BYTE2(v18[1]) = BYTE2(v7);
          BYTE3(v18[1]) = BYTE3(v7);
          BYTE4(v18[1]) = BYTE4(v7);
          BYTE5(v18[1]) = BYTE5(v7);
          if (!bonjour_service) {
            goto LABEL_33;
          }
          int64_t v11 = swift_unknownObjectRetain_n();
          size_t v12 = BYTE6(v7);
          break;
      }
      nw_advertise_descriptor_set_txt_record(v11, v18, v12);
      sub_1832E669C(v6, v7);
      swift_unknownObjectRelease();
LABEL_26:
      sub_1832E669C(v6, v7);
      swift_unknownObjectRelease();
      sub_1832E669C(v6, v7);
      if (v17)
      {
LABEL_15:
        if (bonjour_service)
        {
          nw_advertise_descriptor_set_no_auto_rename(bonjour_service, 1);
          return bonjour_service;
        }
        __break(1u);
        goto LABEL_31;
      }
    }
    if (bonjour_service) {
      return bonjour_service;
    }
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  unsigned int v1 = *(unsigned __int16 *)(v0 + 89);
  uint64_t v2 = sub_183D44BAC();
  bonjour_service = nw_advertise_descriptor_create_application_service((const char *)(v2 + 32));
  swift_release();
  if (v1 != 3) {
    nw_advertise_descriptor_set_invitation(bonjour_service, (v1 >> 8) + 1, v1 + 1);
  }
  return bonjour_service;
}

uint64_t (*NWListener.newConnectionHandler.getter())(uint64_t a1)
{
  unsigned int v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 48;
  os_unfair_lock_lock(v1 + 48);
  sub_1834F4404(v2, &v6);
  os_unfair_lock_unlock(v3);
  if (!(void)v6) {
    return 0;
  }
  long long v5 = v6;
  *(_OWORD *)(swift_allocObject() + 16) = v5;
  return sub_1834F7058;
}

double sub_1834F42D0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a1 + 16);
  uint64_t v4 = (uint64_t *)&v3[4];
  long long v5 = v3 + 48;
  os_unfair_lock_lock(v3 + 48);
  sub_1834F4404(v4, &v7);
  os_unfair_lock_unlock(v5);
  double result = *(double *)&v7;
  *a2 = v7;
  return result;
}

void sub_1834F433C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = sub_1834F9A10;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  sub_18315ED5C(v1);
  NWListener.newConnectionHandler.setter((uint64_t)v4, v3);
}

uint64_t sub_1834F43CC(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3 = a1;
  return a2(&v3);
}

uint64_t sub_1834F4404@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    long long v6 = sub_1834F99C0;
  }
  else
  {
    long long v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_18315ED5C(v3);
}

uint64_t (*NWListener.newConnectionHandler.modify(uint64_t (**a1)(uint64_t)))(uint64_t *a1, char a2)
{
  a1[2] = (uint64_t (*)(uint64_t))v1;
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v4 = (uint64_t *)&v3[4];
  uint64_t v5 = v3 + 48;
  os_unfair_lock_lock(v3 + 48);
  sub_1834F4404(v4, &v10);
  os_unfair_lock_unlock(v5);
  if ((void)v10)
  {
    long long v9 = v10;
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = v9;
    long long v7 = sub_1834F9A10;
  }
  else
  {
    long long v7 = 0;
    uint64_t v6 = 0;
  }
  *a1 = v7;
  a1[1] = (uint64_t (*)(uint64_t))v6;
  return sub_1834F454C;
}

uint64_t sub_1834F454C(uint64_t *a1, char a2)
{
  return sub_1834F5E90(a1, a2, (uint64_t (*)(uint64_t, uint64_t))NWListener.newConnectionHandler.setter, (void (*)(uint64_t, uint64_t))sub_1834CCAF0, sub_1834CCAEC);
}

uint64_t (*NWListener.newConnectionGroupHandler.getter())(uint64_t)
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 48;
  os_unfair_lock_lock(v1 + 48);
  sub_1834F4928(v2, &v6);
  os_unfair_lock_unlock(v3);
  if (!(void)v6) {
    return 0;
  }
  long long v5 = v6;
  *(_OWORD *)(swift_allocObject() + 16) = v5;
  return sub_1834F9A10;
}

double sub_1834F4638@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a1 + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  long long v5 = v3 + 48;
  os_unfair_lock_lock(v3 + 48);
  sub_1834F4928(v4, &v7);
  os_unfair_lock_unlock(v5);
  double result = *(double *)&v7;
  *a2 = v7;
  return result;
}

void sub_1834F46A4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = sub_1834F9A10;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  sub_18315ED5C(v1);
  NWListener.newConnectionGroupHandler.setter((uint64_t)v4, v3);
}

void NWListener.newConnectionGroupHandler.setter(uint64_t a1, uint64_t a2)
{
  long long v5 = *(os_unfair_lock_s **)(v2 + 16);
  uint64_t v6 = (uint64_t)&v5[4];
  long long v7 = v5 + 48;
  os_unfair_lock_lock(v5 + 48);
  sub_1834F7090(v6);
  os_unfair_lock_unlock(v7);
  if (a1)
  {
    BOOL v8 = *(NSObject **)(v2 + 24);
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a1;
    *(void *)(v9 + 24) = a2;
    aBlock[4] = sub_1834F70EC;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1832E6CC4;
    aBlock[3] = &block_descriptor_26;
    long long v10 = _Block_copy(aBlock);
    sub_18315ED5C(a1);
    sub_18315ED5C(a1);
    swift_unknownObjectRetain();
    swift_release();
    nw_listener_set_new_connection_group_handler(v8, v10);
    sub_18313D870(a1);
    _Block_release(v10);
    swift_unknownObjectRelease();
    sub_18313D870(a1);
  }
  else
  {
    nw_listener_set_new_connection_handler(*(nw_listener_t *)(v2 + 24), 0);
  }
}

uint64_t sub_1834F4898(uint64_t a1, void (*a2)(void))
{
  type metadata accessor for NWConnectionGroup();
  swift_allocObject();
  uint64_t v3 = swift_unknownObjectRetain();
  uint64_t result = sub_1835828F0(v3);
  if (result)
  {
    a2();
    return swift_release();
  }
  return result;
}

uint64_t sub_1834F4928@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1834F9994;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_18315ED5C(v3);
}

uint64_t (*NWListener.newConnectionGroupHandler.modify(uint64_t (**a1)(uint64_t)))(uint64_t *a1, char a2)
{
  a1[2] = (uint64_t (*)(uint64_t))v1;
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 48;
  os_unfair_lock_lock(v3 + 48);
  sub_1834F4928(v4, &v10);
  os_unfair_lock_unlock(v5);
  if ((void)v10)
  {
    long long v9 = v10;
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = v9;
    long long v7 = sub_1834F9A10;
  }
  else
  {
    long long v7 = 0;
    uint64_t v6 = 0;
  }
  *a1 = v7;
  a1[1] = (uint64_t (*)(uint64_t))v6;
  return sub_1834F4A70;
}

uint64_t sub_1834F4A70(uint64_t *a1, char a2)
{
  return sub_1834F5E90(a1, a2, (uint64_t (*)(uint64_t, uint64_t))NWListener.newConnectionGroupHandler.setter, (void (*)(uint64_t, uint64_t))sub_1834CCAF0, sub_1834CCAEC);
}

void NWListener.state.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 48;
  os_unfair_lock_lock(v3 + 48);
  sub_1834F4B1C(v4, a1);

  os_unfair_lock_unlock(v5);
}

uint64_t sub_1834F4B1C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int v2 = *(_DWORD *)(result + 168);
  *(unsigned char *)(a2 + 4) = *(unsigned char *)(result + 172);
  *(_DWORD *)a2 = v2;
  return result;
}

uint64_t (*NWListener.stateUpdateHandler.getter())()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 48;
  os_unfair_lock_lock(v1 + 48);
  sub_1834A538C(v2, (uint64_t (**)())&v6);
  os_unfair_lock_unlock(v3);
  if (!(void)v6) {
    return 0;
  }
  long long v5 = v6;
  *(_OWORD *)(swift_allocObject() + 16) = v5;
  return sub_1834CCB54;
}

double sub_1834F4BDC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a1 + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  long long v5 = v3 + 48;
  os_unfair_lock_lock(v3 + 48);
  sub_1834A538C(v4, (uint64_t (**)())&v7);
  os_unfair_lock_unlock(v5);
  double result = *(double *)&v7;
  *a2 = v7;
  return result;
}

uint64_t sub_1834F4C48(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = sub_1834CCB54;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  sub_18315ED5C(v1);
  return NWListener.stateUpdateHandler.setter((uint64_t)v4, v3);
}

uint64_t (*NWListener.stateUpdateHandler.modify(uint64_t (**a1)()))(uint64_t *a1, char a2)
{
  a1[2] = (uint64_t (*)())v1;
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  long long v5 = v3 + 48;
  os_unfair_lock_lock(v3 + 48);
  sub_1834A538C(v4, v10);
  os_unfair_lock_unlock(v5);
  if (v10[0])
  {
    long long v9 = *(_OWORD *)v10;
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = v9;
    long long v7 = sub_1834CCB54;
  }
  else
  {
    long long v7 = 0;
    uint64_t v6 = 0;
  }
  *a1 = v7;
  a1[1] = (uint64_t (*)())v6;
  return sub_1834F4DA4;
}

uint64_t sub_1834F4DA4(uint64_t *a1, char a2)
{
  return sub_1834F5E90(a1, a2, NWListener.stateUpdateHandler.setter, (void (*)(uint64_t, uint64_t))sub_18315ED5C, sub_1834CCAEC);
}

uint64_t NWListener.parameters.getter()
{
  return swift_retain();
}

void NWListener.service.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  long long v5 = v3 + 48;
  os_unfair_lock_lock(v3 + 48);
  sub_1834F5018(v4, a1);

  os_unfair_lock_unlock(v5);
}

double sub_1834F4E58@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a1 + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  long long v5 = v3 + 48;
  os_unfair_lock_lock(v3 + 48);
  sub_1834F5018(v4, (uint64_t)v12);
  os_unfair_lock_unlock(v5);
  uint64_t v6 = v14;
  __int16 v7 = v15;
  char v8 = v16;
  long long v9 = v12[1];
  *(_OWORD *)a2 = v12[0];
  *(_OWORD *)(a2 + 16) = v9;
  long long v10 = v12[3];
  *(_OWORD *)(a2 + 32) = v12[2];
  *(_OWORD *)(a2 + 48) = v10;
  double result = *(double *)&v13;
  *(_OWORD *)(a2 + 64) = v13;
  *(void *)(a2 + 80) = v6;
  *(unsigned char *)(a2 + 90) = v8;
  *(_WORD *)(a2 + 88) = v7;
  return result;
}

uint64_t sub_1834F4EEC(uint64_t a1, uint64_t a2)
{
  sub_1834F70F4(a1, (uint64_t)v7);
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a2 + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  long long v5 = v3 + 48;
  sub_1834F71FC((uint64_t)v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, int))sub_1834F7268);
  os_unfair_lock_lock(v5);
  sub_1834F9A1C(v4);
  os_unfair_lock_unlock(v5);
  return sub_1834F71FC((uint64_t)v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, int))sub_1834F7178);
}

uint64_t NWListener.service.setter(uint64_t a1)
{
  sub_1834F70F4(a1, (uint64_t)v6);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 48;
  os_unfair_lock_lock(v2 + 48);
  sub_1834F715C(v3);
  os_unfair_lock_unlock(v4);
  return sub_1834F71FC((uint64_t)v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, int))sub_1834F7178);
}

void sub_1834F5018(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 80);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 96);
  uint64_t v7 = *(void *)(a1 + 104);
  uint64_t v8 = *(void *)(a1 + 112);
  uint64_t v9 = *(void *)(a1 + 120);
  uint64_t v10 = *(void *)(a1 + 128);
  uint64_t v11 = *(void *)(a1 + 136);
  unint64_t v12 = *(void *)(a1 + 144);
  char v13 = *(unsigned char *)(a1 + 154);
  __int16 v14 = *(_WORD *)(a1 + 152);
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v8;
  *(void *)(a2 + 56) = v9;
  *(void *)(a2 + 64) = v10;
  *(void *)(a2 + 72) = v11;
  *(void *)(a2 + 80) = v12;
  *(unsigned char *)(a2 + 90) = v13;
  *(_WORD *)(a2 + 88) = v14;
  sub_1834F7268(v3, v2, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

void sub_1834F509C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v6 = *(void *)(a1 + 80);
  uint64_t v7 = *(void *)(a1 + 88);
  uint64_t v8 = *(void *)(a1 + 96);
  uint64_t v9 = *(void *)(a1 + 104);
  uint64_t v15 = *(void *)(a1 + 112);
  uint64_t v14 = *(void *)(a1 + 120);
  long long v13 = *(_OWORD *)(a1 + 128);
  unint64_t v10 = *(void *)(a1 + 144);
  sub_1834F70F4(a2, a1 + 64);
  sub_1834F71FC(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, int))sub_1834F7268);
  sub_1834F7178(v4, v5, v6, v7, v8, v9, v15, v14, v13, *((uint64_t *)&v13 + 1), v10);
  sub_1834F70F4(a2, (uint64_t)&v17);
  if ((void)v18)
  {
    uint64_t v11 = *(NSObject **)(a3 + 24);
    sub_1834F71FC(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, int))sub_1834F7268);
    swift_unknownObjectRetain();
    unint64_t v12 = sub_1834F3DC8();
    nw_listener_set_advertise_descriptor(v11, v12);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_1834F71FC(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, int))sub_1834F7178);
  }
  else
  {
    nw_listener_set_advertise_descriptor(*(nw_listener_t *)(a3 + 24), 0);
  }
}

void (*NWListener.service.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x138uLL);
  *a1 = v3;
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + 16);
  v3[36] = v1;
  v3[37] = v4;
  uint64_t v5 = (uint64_t)&v4[4];
  uint64_t v6 = v4 + 48;
  os_unfair_lock_lock(v4 + 48);
  sub_1834F5018(v5, (uint64_t)(v3 + 24));
  v3[38] = 0;
  os_unfair_lock_unlock(v6);
  return sub_1834F52DC;
}

void sub_1834F52DC(void **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (uint64_t)(*a1 + 24);
  uint64_t v4 = (os_unfair_lock_s *)v2[37];
  uint64_t v5 = v2[38];
  uint64_t v6 = v4 + 48;
  uint64_t v7 = (uint64_t)&v4[4];
  if ((a2 & 1) == 0)
  {
    uint64_t v10 = sub_1834F70F4(v3, (uint64_t)(v2 + 12));
    MEMORY[0x1F4188790](v10);
    os_unfair_lock_lock(v6);
    sub_1834F9A1C(v7);
    os_unfair_lock_unlock(v6);
    sub_1834F71FC((uint64_t)(v2 + 12), (void (*)(void, void, void, void, void, void, void, void, void, void, void, int))sub_1834F7178);
    goto LABEL_5;
  }
  uint64_t v8 = sub_1834F70F4(v3, (uint64_t)v2);
  MEMORY[0x1F4188790](v8);
  sub_1834F71FC((uint64_t)v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, int))sub_1834F7268);
  os_unfair_lock_lock(v6);
  sub_1834F9A1C(v7);
  uint64_t v9 = (os_unfair_lock_s *)(v2[37] + 192);
  if (!v5)
  {
    os_unfair_lock_unlock(v9);
    sub_1834F71FC((uint64_t)v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, int))sub_1834F7178);
    sub_1834F7178(v2[24], v2[25], v2[26], v2[27], v2[28], v2[29], v2[30], v2[31], v2[32], v2[33], v2[34]);
LABEL_5:
    free(v2);
    return;
  }
  os_unfair_lock_unlock(v9);
  __break(1u);
}

uint64_t static NWListener.InfiniteConnectionLimit.getter()
{
  return 0xFFFFFFFFLL;
}

uint64_t NWListener.newConnectionLimit.getter()
{
  return nw_listener_get_new_connection_limit(*(nw_listener_t *)(v0 + 24));
}

void sub_1834F54A8(unint64_t *a1, uint64_t a2)
{
  unint64_t v3 = *a1;
  if ((*a1 & 0x8000000000000000) != 0 || HIDWORD(v3))
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(NSObject **)(*(void *)a2 + 24);
    nw_listener_set_new_connection_limit(v4, v3);
  }
}

void NWListener.newConnectionLimit.setter(unint64_t new_connection_limit)
{
  if ((new_connection_limit & 0x8000000000000000) != 0 || (uint32_t v2 = new_connection_limit, HIDWORD(new_connection_limit)))
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    unint64_t v3 = *(NSObject **)(v1 + 24);
    nw_listener_set_new_connection_limit(v3, v2);
  }
}

void (*NWListener.newConnectionLimit.modify(void *a1))(unint64_t *a1)
{
  unint64_t v3 = *(NSObject **)(v1 + 24);
  a1[1] = v3;
  *a1 = nw_listener_get_new_connection_limit(v3);
  return sub_1834F5688;
}

void sub_1834F5688(unint64_t *a1)
{
  unint64_t v1 = *a1;
  if ((*a1 & 0x8000000000000000) != 0 || HIDWORD(v1))
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    uint32_t v2 = a1[1];
    nw_listener_set_new_connection_limit(v2, v1);
  }
}

uint64_t NWListener.port.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = nw_listener_get_port(*(nw_listener_t *)(v1 + 24));
  *(_WORD *)a1 = result;
  *(unsigned char *)(a1 + 2) = 0;
  return result;
}

uint64_t (*NWListener.serviceRegistrationUpdateHandler.getter())()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  unint64_t v3 = v1 + 48;
  os_unfair_lock_lock(v1 + 48);
  sub_1834F5D08(v2, (uint64_t (**)())&v6);
  os_unfair_lock_unlock(v3);
  if (!(void)v6) {
    return 0;
  }
  long long v5 = v6;
  *(_OWORD *)(swift_allocObject() + 16) = v5;
  return sub_18313D738;
}

double sub_1834F582C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  unint64_t v3 = *(os_unfair_lock_s **)(*(void *)a1 + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  long long v5 = v3 + 48;
  os_unfair_lock_lock(v3 + 48);
  sub_1834F5D08(v4, (uint64_t (**)())&v7);
  os_unfair_lock_unlock(v5);
  double result = *(double *)&v7;
  *a2 = v7;
  return result;
}

void sub_1834F5898(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = sub_1834CCB54;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  sub_18315ED5C(v1);
  NWListener.serviceRegistrationUpdateHandler.setter((uint64_t)v4, v3);
}

void NWListener.serviceRegistrationUpdateHandler.setter(uint64_t a1, uint64_t a2)
{
  long long v5 = *(os_unfair_lock_s **)(v2 + 16);
  uint64_t v6 = (uint64_t)&v5[4];
  long long v7 = v5 + 48;
  os_unfair_lock_lock(v5 + 48);
  sub_1834F72EC(v6);
  os_unfair_lock_unlock(v7);
  if (a1)
  {
    uint64_t v8 = *(NSObject **)(v2 + 24);
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a1;
    *(void *)(v9 + 24) = a2;
    aBlock[4] = sub_1834F7348;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1834F5CA0;
    aBlock[3] = &block_descriptor_49;
    uint64_t v10 = _Block_copy(aBlock);
    sub_18315ED5C(a1);
    sub_18315ED5C(a1);
    swift_unknownObjectRetain();
    swift_release();
    nw_listener_set_advertised_endpoint_changed_handler(v8, v10);
    sub_18313D870(a1);
    _Block_release(v10);
    swift_unknownObjectRelease();
    sub_18313D870(a1);
  }
  else
  {
    nw_listener_set_advertised_endpoint_changed_handler(*(nw_listener_t *)(v2 + 24), 0);
  }
}

uint64_t sub_1834F5A8C(uint64_t a1, uint64_t a2, void (*a3)(char *))
{
  uint64_t v4 = type metadata accessor for NWListener.ServiceRegistrationChange();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for NWEndpoint();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  long long v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_unknownObjectRetain();
  sub_18315A830(v14, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
    return sub_1834F98D4((uint64_t)v9);
  }
  sub_18315E28C((uint64_t)v9, (uint64_t)v13);
  sub_1834D7F00((uint64_t)v13, (uint64_t)v6);
  swift_storeEnumTagMultiPayload();
  a3(v6);
  sub_1834F9934((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for NWListener.ServiceRegistrationChange);
  return sub_1834F9934((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
}

uint64_t sub_1834F5CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v5 = swift_unknownObjectRetain();
  v4(v5, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_1834F5D08@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_18313D760;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())v5;
  return sub_18315ED5C(v3);
}

uint64_t (*NWListener.serviceRegistrationUpdateHandler.modify(uint64_t (**a1)()))(uint64_t *a1, char a2)
{
  a1[2] = (uint64_t (*)())v1;
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 48;
  os_unfair_lock_lock(v3 + 48);
  sub_1834F5D08(v4, v10);
  os_unfair_lock_unlock(v5);
  if (v10[0])
  {
    long long v9 = *(_OWORD *)v10;
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = v9;
    uint64_t v7 = sub_1834CCB54;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a1 = v7;
  a1[1] = (uint64_t (*)())v6;
  return sub_1834F5E50;
}

uint64_t sub_1834F5E50(uint64_t *a1, char a2)
{
  return sub_1834F5E90(a1, a2, (uint64_t (*)(uint64_t, uint64_t))NWListener.serviceRegistrationUpdateHandler.setter, (void (*)(uint64_t, uint64_t))sub_18315ED5C, (uint64_t (*)(uint64_t, uint64_t))sub_18313D870);
}

uint64_t sub_1834F5E90(uint64_t *a1, char a2, uint64_t (*a3)(uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  if ((a2 & 1) == 0) {
    return a3(*a1, v7);
  }
  a4(*a1, v7);
  a3(v6, v7);

  return a5(v6, v7);
}

void *NWListener.__allocating_init(_:)(void *a1)
{
  id v2 = nw_listener_copy_parameters(a1);
  type metadata accessor for NWParameters();
  uint64_t v3 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61EA0);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = v2;
  *(void *)(v3 + 16) = v4;
  uint64_t v5 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61E60);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 192) = 0;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  *(_OWORD *)(v6 + 64) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(_OWORD *)(v6 + 112) = 0u;
  *(_OWORD *)(v6 + 128) = 0u;
  *(_OWORD *)(v6 + 144) = 0u;
  *(_OWORD *)(v6 + 155) = 0u;
  *(void *)(v6 + 176) = 0;
  *(_DWORD *)(v6 + 184) = 0;
  *(_WORD *)(v6 + 188) = 128;
  v5[3] = a1;
  v5[4] = v3;
  v5[2] = v6;
  return v5;
}

uint64_t NWListener.__allocating_init(using:on:)(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v4 = swift_allocObject();
  NWListener.init(using:on:)(a1, a2);
  return v4;
}

void NWListener.__allocating_init(applicationService:using:)(uint64_t a1, uint64_t a2)
{
  unsigned __int16 v10 = 0;
  swift_allocObject();
  uint64_t v5 = swift_retain();
  NWListener.init(using:on:)(v5, &v10);
  if (v2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 1;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = a1;
    uint64_t v15 = a2;
    long long v16 = 0u;
    long long v17 = 0u;
    uint64_t v18 = 0;
    unint64_t v19 = 0xF000000000000000;
    char v21 = 0;
    __int16 v20 = 768;
    MEMORY[0x1F4188790](v6);
    uint64_t v8 = (uint64_t)&v7[4];
    long long v9 = v7 + 48;
    swift_retain();
    os_unfair_lock_lock(v9);
    sub_1834F9A1C(v8);
    os_unfair_lock_unlock(v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_1834C80D8(0);
    sub_1832E669C(0, 0xF000000000000000);
    swift_release();
  }
  swift_release();
}

void *NWListener.__allocating_init(connection:parameters:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(NSObject **)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = (void *)(v4 + 16);
  uint64_t v6 = (os_unfair_lock_s *)(v4 + 24);
  swift_unknownObjectRetain();
  os_unfair_lock_lock(v6);
  sub_1834A4678(v5, &parameters);
  os_unfair_lock_unlock(v6);
  nw_listener_t v7 = nw_listener_create_with_connection(v3, parameters);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  if (v7)
  {
    uint64_t v8 = (void *)swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61E60);
    uint64_t v9 = swift_allocObject();
    *(_DWORD *)(v9 + 192) = 0;
    *(_OWORD *)(v9 + 16) = 0u;
    *(_OWORD *)(v9 + 32) = 0u;
    *(_OWORD *)(v9 + 48) = 0u;
    *(_OWORD *)(v9 + 64) = 0u;
    *(_OWORD *)(v9 + 80) = 0u;
    *(_OWORD *)(v9 + 96) = 0u;
    *(_OWORD *)(v9 + 112) = 0u;
    *(_OWORD *)(v9 + 128) = 0u;
    *(_OWORD *)(v9 + 144) = 0u;
    *(_OWORD *)(v9 + 155) = 0u;
    *(void *)(v9 + 176) = 0;
    *(_DWORD *)(v9 + 184) = 0;
    *(_WORD *)(v9 + 188) = 128;
    v8[3] = v7;
    v8[4] = a2;
    void v8[2] = v9;
  }
  else
  {
    swift_release();
    return 0;
  }
  return v8;
}

void *NWListener.__allocating_init(launchdSocketKey:parameters:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  double result = _s7Network10NWListenerC7launchd5usingACSgSS_AA12NWParametersCtcfC_0(a1, a2, a3);
  if (result)
  {
    nw_listener_t v7 = result;
    swift_release();
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t NWListener.queue.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 48;
  os_unfair_lock_lock(v1 + 48);
  sub_1834F63D4(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

id sub_1834F63D4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 160);
  *a2 = v2;
  return v2;
}

uint64_t static NWListener.registrationIterator(on:)(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62BF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = *a1;
  int v9 = 128;
  uint64_t v10 = v5;
  (*(void (**)(unsigned char *, void))(v6 + 104))(v4, *MEMORY[0x1E4FBD120]);
  return sub_183D4516C();
}

uint64_t NWListener.deinit()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t NWListener.__deallocating_deinit()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1834F658C()
{
  id v1 = objc_msgSend(*(id *)(*(void *)v0 + 24), sel_description);
  uint64_t v2 = sub_183D44AFC();

  return v2;
}

uint64_t sub_1834F65E8(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4, uint64_t a5, unint64_t a6)
{
  uint64_t v10 = sub_183D4434C();
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = sub_183D4437C();
    if (__OFSUB__(a1, v12))
    {
      __break(1u);
LABEL_13:
      __break(1u);
LABEL_14:
      __break(1u);
      JUMPOUT(0x1834F66E8);
    }
    uint64_t v13 = (const void *)(v11 + a1 - v12);
    sub_183D4436C();
    if (a4)
    {
LABEL_4:
      size_t v14 = 0;
      switch(a6 >> 62)
      {
        case 1uLL:
          goto LABEL_8;
        case 2uLL:
          uint64_t v16 = *(void *)(a5 + 16);
          uint64_t v15 = *(void *)(a5 + 24);
          size_t v14 = v15 - v16;
          if (!__OFSUB__(v15, v16)) {
            goto LABEL_11;
          }
          goto LABEL_14;
        case 3uLL:
          goto LABEL_11;
        default:
          size_t v14 = BYTE6(a6);
          goto LABEL_11;
      }
    }
  }
  else
  {
    uint64_t v13 = 0;
    sub_183D4436C();
    if (a4) {
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_8:
  if (__OFSUB__(HIDWORD(a5), a5)) {
    goto LABEL_13;
  }
  size_t v14 = HIDWORD(a5) - (int)a5;
LABEL_11:
  nw_advertise_descriptor_set_txt_record(a4, v13, v14);
  swift_unknownObjectRelease();
  return sub_1832E5E9C(a5, a6);
}

uint64_t _s7Network10NWListenerC7ServiceV10InvitationV2eeoiySbAG_AGtFZ_0(unsigned __int8 *a1, unsigned char *a2)
{
  int v2 = *a1;
  int v3 = a1[1];
  int v4 = a2[1];
  uint64_t v5 = 0x646F70656D6F68;
  if (v2 != 1) {
    uint64_t v5 = 0x72656B61657073;
  }
  if (*a1) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 7496035;
  }
  if (v2) {
    unint64_t v7 = 0xE700000000000000;
  }
  else {
    unint64_t v7 = 0xE300000000000000;
  }
  uint64_t v8 = 0x646F70656D6F68;
  if (*a2 != 1) {
    uint64_t v8 = 0x72656B61657073;
  }
  if (*a2) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 7496035;
  }
  if (*a2) {
    unint64_t v10 = 0xE700000000000000;
  }
  else {
    unint64_t v10 = 0xE300000000000000;
  }
  if (v6 == v9 && v7 == v10)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  char v11 = sub_183D4592C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v12 = 0;
  if (v11)
  {
LABEL_21:
    unint64_t v13 = 0xE900000000000079;
    uint64_t v14 = 0x74696D69786F7270;
    unint64_t v15 = 0xE700000000000000;
    uint64_t v16 = 0x73646E65697266;
    if (v3 != 1)
    {
      uint64_t v16 = 0x656E6F7972657665;
      unint64_t v15 = 0xE800000000000000;
    }
    if (v3) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 0x74696D69786F7270;
    }
    if (v3) {
      unint64_t v18 = v15;
    }
    else {
      unint64_t v18 = 0xE900000000000079;
    }
    if (v4)
    {
      if (v4 != 1)
      {
        unint64_t v13 = 0xE800000000000000;
        if (v17 != 0x656E6F7972657665) {
          goto LABEL_37;
        }
        goto LABEL_35;
      }
      unint64_t v13 = 0xE700000000000000;
      uint64_t v14 = 0x73646E65697266;
    }
    if (v17 != v14) {
      goto LABEL_37;
    }
LABEL_35:
    if (v18 == v13)
    {
      char v12 = 1;
LABEL_38:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
    }
LABEL_37:
    char v12 = sub_183D4592C();
    goto LABEL_38;
  }
  return v12 & 1;
}

BOOL _s7Network10NWListenerC7ServiceV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  unint64_t v8 = *(void *)(a1 + 80);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v12 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  uint64_t v13 = *(void *)(a2 + 48);
  unint64_t v14 = *(void *)(a2 + 80);
  if (v3)
  {
    if (!v9) {
      return 0;
    }
    int v42 = *(unsigned __int8 *)(a2 + 88);
    int v43 = *(unsigned __int8 *)(a1 + 88);
    uint64_t v44 = *(void *)(a2 + 72);
    uint64_t v45 = *(void *)(a1 + 72);
    right = *(NSObject **)(a2 + 64);
    uint64_t v40 = *(void *)(a2 + 56);
    uint64_t v41 = *(void *)(a1 + 56);
    unsigned int v37 = *(unsigned __int16 *)(a2 + 89);
    unsigned int v38 = *(unsigned __int16 *)(a1 + 89);
    if (*(void *)(a1 + 8) != *(void *)(a2 + 8) || v3 != v9)
    {
      char v15 = sub_183D4592C();
      BOOL result = 0;
      if ((v15 & 1) == 0) {
        return result;
      }
    }
  }
  else
  {
    int v42 = *(unsigned __int8 *)(a2 + 88);
    int v43 = *(unsigned __int8 *)(a1 + 88);
    uint64_t v44 = *(void *)(a2 + 72);
    uint64_t v45 = *(void *)(a1 + 72);
    right = *(NSObject **)(a2 + 64);
    uint64_t v40 = *(void *)(a2 + 56);
    uint64_t v41 = *(void *)(a1 + 56);
    unsigned int v37 = *(unsigned __int16 *)(a2 + 89);
    unsigned int v38 = *(unsigned __int16 *)(a1 + 89);
    if (v9) {
      return 0;
    }
  }
  if (v4 != v10 || v5 != v12)
  {
    char v17 = sub_183D4592C();
    BOOL result = 0;
    if ((v17 & 1) == 0) {
      return result;
    }
  }
  if (v7)
  {
    if (!v13) {
      return 0;
    }
    if (v6 != v11 || v7 != v13)
    {
      char v18 = sub_183D4592C();
      BOOL result = 0;
      if ((v18 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v13)
  {
    return 0;
  }
  if (v8 >> 60 == 15)
  {
    uint64_t v19 = v45;
    if (v14 >> 60 == 15)
    {
      if (v43 == v42) {
        goto LABEL_28;
      }
      return 0;
    }
LABEL_23:
    uint64_t v20 = v19;
    sub_1834D7FF8(v19, v8);
    sub_1834D7FF8(v44, v14);
    sub_1832E669C(v20, v8);
    sub_1832E669C(v44, v14);
    return 0;
  }
  uint64_t v19 = v45;
  if (v14 >> 60 == 15) {
    goto LABEL_23;
  }
  sub_1834D7FF8(v45, v8);
  sub_1834D7FF8(v44, v14);
  char v21 = sub_1834FFE28(v45, v8, v44, v14);
  sub_1832E669C(v44, v14);
  sub_1832E669C(v45, v8);
  BOOL result = 0;
  if (v21 & 1) == 0 || ((v43 ^ v42)) {
    return result;
  }
LABEL_28:
  if (!v41)
  {
    uint64_t v25 = 0;
    uint64_t v22 = v40;
    if (!v40) {
      goto LABEL_33;
    }
    goto LABEL_42;
  }
  uint64_t v22 = v40;
  if (!v40)
  {
    uint64_t v25 = v41;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
LABEL_42:
    sub_1834C4654(v22);
    sub_1834C80D8(v25);
    sub_1834C80D8(v22);
    return 0;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v23 = swift_unknownObjectRetain_n();
  BOOL is_equal = nw_txt_record_is_equal(v23, right);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1834C80D8(v41);
  if (!is_equal) {
    return 0;
  }
LABEL_33:
  BOOL result = v37 == 3 && v38 == 3;
  if (v38 != 3 && v37 != 3)
  {
    uint64_t v26 = 7496035;
    if ((_BYTE)v38)
    {
      unint64_t v27 = 0xE700000000000000;
      if (v38 == 1) {
        uint64_t v28 = 0x646F70656D6F68;
      }
      else {
        uint64_t v28 = 0x72656B61657073;
      }
    }
    else
    {
      unint64_t v27 = 0xE300000000000000;
      uint64_t v28 = 7496035;
    }
    if ((_BYTE)v37)
    {
      unint64_t v29 = 0xE700000000000000;
      if (v37 == 1) {
        uint64_t v26 = 0x646F70656D6F68;
      }
      else {
        uint64_t v26 = 0x72656B61657073;
      }
    }
    else
    {
      unint64_t v29 = 0xE300000000000000;
    }
    if (v28 == v26 && v27 == v29)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v30 = sub_183D4592C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL result = 0;
      if ((v30 & 1) == 0) {
        return result;
      }
    }
    unsigned int v31 = v37 >> 8;
    unint64_t v32 = 0xE900000000000079;
    uint64_t v33 = 0x74696D69786F7270;
    if (v38 >> 8)
    {
      if (v38 >> 8 == 1)
      {
        unint64_t v34 = 0xE700000000000000;
        uint64_t v35 = 0x73646E65697266;
      }
      else
      {
        unint64_t v34 = 0xE800000000000000;
        uint64_t v35 = 0x656E6F7972657665;
      }
    }
    else
    {
      uint64_t v35 = 0x74696D69786F7270;
      unint64_t v34 = 0xE900000000000079;
    }
    if (v31)
    {
      if (v31 == 1)
      {
        unint64_t v32 = 0xE700000000000000;
        uint64_t v33 = 0x73646E65697266;
      }
      else
      {
        unint64_t v32 = 0xE800000000000000;
        uint64_t v33 = 0x656E6F7972657665;
      }
    }
    if (v35 == v33 && v34 == v32)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    else
    {
      char v36 = sub_183D4592C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v36 & 1;
    }
  }
  return result;
}

void sub_1834F6DC0(unsigned __int8 *a1)
{
  uint64_t v19 = *a1;
  uint64_t v2 = *((void *)a1 + 1);
  uint64_t v3 = *((void *)a1 + 2);
  uint64_t v4 = *((void *)a1 + 4);
  uint64_t v17 = *((void *)a1 + 3);
  uint64_t v18 = v2;
  uint64_t v16 = *((void *)a1 + 5);
  uint64_t v5 = *((void *)a1 + 6);
  uint64_t v20 = v3;
  uint64_t v21 = v5;
  uint64_t v6 = *((void *)a1 + 8);
  uint64_t v22 = *((void *)a1 + 7);
  uint64_t v23 = v6;
  unint64_t v7 = *((void *)a1 + 10);
  uint64_t v24 = *((void *)a1 + 9);
  __int16 v8 = a1[88];
  __int16 v9 = *(_WORD *)(a1 + 89);
  unsigned __int16 v38 = 0;
  type metadata accessor for NWListener();
  swift_allocObject();
  uint64_t v10 = swift_retain();
  NWListener.init(using:on:)(v10, &v38);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1834C80D8(v22);
    sub_1832E669C(v24, v7);
  }
  else
  {
    v15[1] = v15;
    uint64_t v25 = v19;
    uint64_t v26 = v18;
    uint64_t v27 = v20;
    uint64_t v28 = v17;
    uint64_t v29 = v4;
    uint64_t v30 = v16;
    uint64_t v31 = v21;
    uint64_t v32 = v22;
    uint64_t v33 = v23;
    uint64_t v34 = v24;
    unint64_t v35 = v7;
    char v37 = HIBYTE(v9);
    __int16 v36 = v8 | (v9 << 8);
    MEMORY[0x1F4188790](v11);
    uint64_t v13 = (uint64_t)&v12[4];
    unint64_t v14 = v12 + 48;
    swift_retain();
    os_unfair_lock_lock(v14);
    sub_1834F9A1C(v13);
    os_unfair_lock_unlock(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1834C80D8(v22);
    sub_1832E669C(v24, v7);
    swift_release();
    swift_release();
  }
}

uint64_t sub_1834F6FD0()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1834F7010()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1834F7058(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_1834F7090(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(a1 + 16);
  sub_18315ED5C(v4);
  uint64_t result = sub_18313D870(v5);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v3;
  return result;
}

uint64_t sub_1834F70EC(uint64_t a1)
{
  return sub_1834F4898(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_1834F70F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61DA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1834F715C(uint64_t a1)
{
  sub_1834F509C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1834F7178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11)
{
  if (a5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1834C80D8(a8);
    sub_1832E669C(a10, a11);
  }
}

uint64_t sub_1834F71FC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, int))
{
  return a1;
}

void sub_1834F7268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11)
{
  if (a5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1834C4654(a8);
    sub_1834D7FF8(a10, a11);
  }
}

uint64_t sub_1834F72EC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(a1 + 48);
  sub_18315ED5C(v4);
  uint64_t result = sub_18313D870(v5);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = v3;
  return result;
}

uint64_t sub_1834F7348(uint64_t a1, uint64_t a2)
{
  return sub_1834F5A8C(a1, a2, *(void (**)(char *))(v2 + 16));
}

void *_s7Network10NWListenerC7launchd5usingACSgSS_AA12NWParametersCtcfC_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(os_unfair_lock_s **)(a3 + 16);
  uint64_t v5 = v4 + 4;
  uint64_t v6 = v4 + 6;
  os_unfair_lock_lock(v4 + 6);
  sub_1834A4678(v5, &v13);
  os_unfair_lock_unlock(v6);
  unint64_t v7 = v13;
  uint64_t v8 = sub_183D44BAC();
  swift_bridgeObjectRelease();
  BOOL v9 = nw_listener_create_with_launchd_key(v7, (const char *)(v8 + 32));
  swift_unknownObjectRelease();
  swift_release();
  type metadata accessor for NWListener();
  uint64_t v10 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61E60);
  uint64_t v11 = swift_allocObject();
  *(_DWORD *)(v11 + 192) = 0;
  *(_OWORD *)(v11 + 16) = 0u;
  *(_OWORD *)(v11 + 32) = 0u;
  *(_OWORD *)(v11 + 48) = 0u;
  *(_OWORD *)(v11 + 64) = 0u;
  *(_OWORD *)(v11 + 80) = 0u;
  *(_OWORD *)(v11 + 96) = 0u;
  *(_OWORD *)(v11 + 112) = 0u;
  *(_OWORD *)(v11 + 128) = 0u;
  *(_OWORD *)(v11 + 144) = 0u;
  *(_OWORD *)(v11 + 155) = 0u;
  *(void *)(v11 + 176) = 0;
  *(_DWORD *)(v11 + 184) = 0;
  *(_WORD *)(v11 + 188) = 128;
  v10[3] = v9;
  v10[4] = a3;
  v10[2] = v11;
  return v10;
}

unint64_t sub_1834F7468()
{
  unint64_t result = qword_1E8F63058;
  if (!qword_1E8F63058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63058);
  }
  return result;
}

unint64_t sub_1834F74C0()
{
  unint64_t result = qword_1E8F63060;
  if (!qword_1E8F63060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63060);
  }
  return result;
}

uint64_t sub_1834F7514@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v2 = *(void *)(a1 + 64);
  *a2 = v3;
  a2[1] = v2;
  return sub_1834C4654(v3);
}

uint64_t sub_1834F7524(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = *(void *)(a2 + 56);
  sub_1834C4654(*a1);
  uint64_t result = sub_1834C80D8(v5);
  *(void *)(a2 + 56) = v3;
  *(void *)(a2 + 64) = v4;
  return result;
}

uint64_t sub_1834F7578@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 88);
  return result;
}

unsigned char *sub_1834F7584(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 88) = *result;
  return result;
}

uint64_t sub_1834F7590@<X0>(uint64_t result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *(_WORD *)(result + 89);
  return result;
}

_WORD *sub_1834F759C(_WORD *result, uint64_t a2)
{
  *(_WORD *)(a2 + 89) = *result;
  return result;
}

uint64_t sub_1834F75C8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = nw_listener_get_new_connection_limit(*(nw_listener_t *)(*(void *)a1 + 24));
  *a2 = result;
  return result;
}

uint64_t method lookup function for NWListener(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWListener);
}

uint64_t dispatch thunk of NWListener.__allocating_init(using:on:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t destroy for NWListener.Service(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = a1[7];
  if (result)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_unknownObjectRelease();
  }
  unint64_t v3 = a1[10];
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = a1[9];
    return sub_1832E5E9C(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for NWListener.Service(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v8 = (_OWORD *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = v9;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *v8;
  }
  uint64_t v10 = (uint64_t *)(a2 + 72);
  unint64_t v11 = *(void *)(a2 + 80);
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v10;
  }
  else
  {
    uint64_t v12 = *v10;
    sub_1832E5D6C(*v10, *(void *)(a2 + 80));
    *(void *)(a1 + 72) = v12;
    *(void *)(a1 + 80) = v11;
  }
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_WORD *)(a1 + 89) = *(_WORD *)(a2 + 89);
  return a1;
}

uint64_t assignWithCopy for NWListener.Service(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v4)
    {
      *(void *)(a1 + 56) = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      goto LABEL_8;
    }
    sub_1834C9554(a1 + 56);
  }
  else if (v4)
  {
    *(void *)(a1 + 56) = v4;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_8:
  uint64_t v5 = (uint64_t *)(a2 + 72);
  unint64_t v6 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80) >> 60 != 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v8 = *v5;
      sub_1832E5D6C(*v5, *(void *)(a2 + 80));
      uint64_t v9 = *(void *)(a1 + 72);
      unint64_t v10 = *(void *)(a1 + 80);
      *(void *)(a1 + 72) = v8;
      *(void *)(a1 + 80) = v6;
      sub_1832E5E9C(v9, v10);
      goto LABEL_15;
    }
    sub_1834F0E54(a1 + 72);
    goto LABEL_13;
  }
  if (v6 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v5;
    goto LABEL_15;
  }
  uint64_t v7 = *v5;
  sub_1832E5D6C(*v5, *(void *)(a2 + 80));
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = v6;
LABEL_15:
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_WORD *)(a1 + 89) = *(_WORD *)(a2 + 89);
  return a1;
}

__n128 __swift_memcpy91_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 75) = *(_OWORD *)(a2 + 75);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for NWListener.Service(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v7)
    {
      *(void *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
    sub_1834C9554(a1 + 56);
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_6:
  uint64_t v8 = (void *)(a2 + 72);
  unint64_t v9 = *(void *)(a1 + 80);
  if (v9 >> 60 != 15)
  {
    unint64_t v10 = *(void *)(a2 + 80);
    if (v10 >> 60 != 15)
    {
      uint64_t v11 = *(void *)(a1 + 72);
      *(void *)(a1 + 72) = *v8;
      *(void *)(a1 + 80) = v10;
      sub_1832E5E9C(v11, v9);
      goto LABEL_11;
    }
    sub_1834F0E54(a1 + 72);
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)v8;
LABEL_11:
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_WORD *)(a1 + 89) = *(_WORD *)(a2 + 89);
  return a1;
}

uint64_t getEnumTagSinglePayload for NWListener.Service(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 91)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NWListener.Service(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 90) = 0;
    *(_WORD *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 91) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 91) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NWListener.Service()
{
  return &type metadata for NWListener.Service;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for NWListener.Service.Invitation(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 65282 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65282 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65282;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NWListener.Service.Invitation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65282 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)__n128 result = a2 - 254;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1834F7C98);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NWListener.Service.Invitation()
{
  return &type metadata for NWListener.Service.Invitation;
}

ValueMetadata *type metadata accessor for NWListener.Service.Invitation.Route()
{
  return &type metadata for NWListener.Service.Invitation.Route;
}

unsigned char *_s7Network10NWListenerC7ServiceV10InvitationV5RouteOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1834F7DB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NWListener.Service.Invitation.Scope()
{
  return &type metadata for NWListener.Service.Invitation.Scope;
}

unint64_t initializeBufferWithCopyOfBuffer for NWListener.ServiceRegistrationChange(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    type metadata accessor for NWEndpoint();
    int v7 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      switch(v7)
      {
        case 1:
          uint64_t v21 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v21;
          uint64_t v22 = *(void *)(a2 + 24);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = v22;
          uint64_t v23 = *(void *)(a2 + 40);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = v23;
          uint64_t v24 = *(void *)(a2 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v24 != 1) {
            swift_unknownObjectRetain();
          }
          *(void *)(a1 + 48) = v24;
          break;
        case 2:
          uint64_t v17 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v17;
          swift_bridgeObjectRetain();
          break;
        case 3:
          uint64_t v18 = sub_183D4447C();
          (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
          break;
        case 4:
          *(void *)a1 = *(void *)a2;
          swift_unknownObjectRetain();
          break;
        default:
          uint64_t v8 = *(void *)a2;
          uint64_t v9 = *(void *)(a2 + 8);
          uint64_t v10 = *(void *)(a2 + 16);
          char v11 = *(unsigned char *)(a2 + 24);
          sub_18315E9E4(*(void *)a2, v9, v10, v11);
          *(void *)a1 = v8;
          *(void *)(a1 + 8) = v9;
          *(void *)(a1 + 16) = v10;
          *(unsigned char *)(a1 + 24) = v11;
          *(_WORD *)(a1 + 26) = *(_WORD *)(a2 + 26);
          break;
      }
    }
    else
    {
      switch(v7)
      {
        case 1:
          uint64_t v25 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v25;
          uint64_t v26 = *(void *)(a2 + 24);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = v26;
          uint64_t v27 = *(void *)(a2 + 40);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = v27;
          uint64_t v28 = *(void *)(a2 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v28 != 1) {
            swift_unknownObjectRetain();
          }
          *(void *)(a1 + 48) = v28;
          break;
        case 2:
          uint64_t v19 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v19;
          swift_bridgeObjectRetain();
          break;
        case 3:
          uint64_t v20 = sub_183D4447C();
          (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
          break;
        case 4:
          *(void *)a1 = *(void *)a2;
          swift_unknownObjectRetain();
          break;
        default:
          uint64_t v13 = *(void *)a2;
          uint64_t v14 = *(void *)(a2 + 8);
          uint64_t v15 = *(void *)(a2 + 16);
          char v16 = *(unsigned char *)(a2 + 24);
          sub_18315E9E4(*(void *)a2, v14, v15, v16);
          *(void *)a1 = v13;
          *(void *)(a1 + 8) = v14;
          *(void *)(a1 + 16) = v15;
          *(unsigned char *)(a1 + 24) = v16;
          *(_WORD *)(a1 + 26) = *(_WORD *)(a2 + 26);
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for NWListener.ServiceRegistrationChange(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  type metadata accessor for NWEndpoint();
  int v3 = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    switch(v3)
    {
      case 0:
        goto LABEL_4;
      case 1:
        goto LABEL_7;
      case 2:
        goto LABEL_9;
      case 3:
        goto LABEL_12;
      case 4:
        goto LABEL_15;
      default:
        return;
    }
  }
  else
  {
    switch(v3)
    {
      case 0:
LABEL_4:
        uint64_t v4 = *(void *)a1;
        uint64_t v5 = *(void *)(a1 + 8);
        uint64_t v6 = *(void *)(a1 + 16);
        char v7 = *(unsigned char *)(a1 + 24);
        sub_18315E658(v4, v5, v6, v7);
        break;
      case 1:
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 48) != 1) {
          goto LABEL_15;
        }
        break;
      case 2:
LABEL_9:
        swift_bridgeObjectRelease();
        break;
      case 3:
LABEL_12:
        uint64_t v8 = sub_183D4447C();
        uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
        v9(a1, v8);
        break;
      case 4:
LABEL_15:
        swift_unknownObjectRelease();
        break;
      default:
        return;
    }
  }
}

uint64_t initializeWithCopy for NWListener.ServiceRegistrationChange(uint64_t a1, uint64_t *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  type metadata accessor for NWEndpoint();
  int v5 = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    switch(v5)
    {
      case 1:
        uint64_t v18 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v18;
        uint64_t v19 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v19;
        uint64_t v20 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v20;
        uint64_t v21 = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v21 != 1) {
          swift_unknownObjectRetain();
        }
        *(void *)(a1 + 48) = v21;
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        uint64_t v14 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v14;
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 3:
        uint64_t v15 = sub_183D4447C();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        goto LABEL_19;
      case 4:
        *(void *)a1 = *a2;
        swift_unknownObjectRetain();
        goto LABEL_19;
      default:
        uint64_t v6 = *a2;
        uint64_t v7 = a2[1];
        uint64_t v8 = a2[2];
        char v9 = *((unsigned char *)a2 + 24);
        sub_18315E9E4(*a2, v7, v8, v9);
        *(void *)a1 = v6;
        *(void *)(a1 + 8) = v7;
        *(void *)(a1 + 16) = v8;
        *(unsigned char *)(a1 + 24) = v9;
        *(_WORD *)(a1 + 26) = *((_WORD *)a2 + 13);
        goto LABEL_19;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        uint64_t v22 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v22;
        uint64_t v23 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v23;
        uint64_t v24 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v24;
        uint64_t v25 = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v25 != 1) {
          swift_unknownObjectRetain();
        }
        *(void *)(a1 + 48) = v25;
        break;
      case 2:
        uint64_t v16 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v16;
        swift_bridgeObjectRetain();
        break;
      case 3:
        uint64_t v17 = sub_183D4447C();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
        break;
      case 4:
        *(void *)a1 = *a2;
        swift_unknownObjectRetain();
        break;
      default:
        uint64_t v10 = *a2;
        uint64_t v11 = a2[1];
        uint64_t v12 = a2[2];
        char v13 = *((unsigned char *)a2 + 24);
        sub_18315E9E4(*a2, v11, v12, v13);
        *(void *)a1 = v10;
        *(void *)(a1 + 8) = v11;
        *(void *)(a1 + 16) = v12;
        *(unsigned char *)(a1 + 24) = v13;
        *(_WORD *)(a1 + 26) = *((_WORD *)a2 + 13);
        break;
    }
LABEL_19:
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for NWListener.ServiceRegistrationChange(uint64_t a1, uint64_t *a2)
{
  if ((uint64_t *)a1 != a2)
  {
    sub_1834F9934(a1, (uint64_t (*)(void))type metadata accessor for NWListener.ServiceRegistrationChange);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    type metadata accessor for NWEndpoint();
    int v5 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      switch(v5)
      {
        case 1:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = a2[5];
          uint64_t v16 = a2[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v16 != 1) {
            swift_unknownObjectRetain();
          }
          *(void *)(a1 + 48) = v16;
          swift_storeEnumTagMultiPayload();
          break;
        case 2:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          swift_bridgeObjectRetain();
          goto LABEL_20;
        case 3:
          uint64_t v14 = sub_183D4447C();
          (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
          goto LABEL_20;
        case 4:
          *(void *)a1 = *a2;
          swift_unknownObjectRetain();
          goto LABEL_20;
        default:
          uint64_t v6 = *a2;
          uint64_t v7 = a2[1];
          uint64_t v8 = a2[2];
          char v9 = *((unsigned char *)a2 + 24);
          sub_18315E9E4(*a2, v7, v8, v9);
          *(void *)a1 = v6;
          *(void *)(a1 + 8) = v7;
          *(void *)(a1 + 16) = v8;
          *(unsigned char *)(a1 + 24) = v9;
          *(_WORD *)(a1 + 26) = *((_WORD *)a2 + 13);
          goto LABEL_20;
      }
    }
    else
    {
      switch(v5)
      {
        case 1:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = a2[5];
          uint64_t v17 = a2[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v17 != 1) {
            swift_unknownObjectRetain();
          }
          *(void *)(a1 + 48) = v17;
          break;
        case 2:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          swift_bridgeObjectRetain();
          break;
        case 3:
          uint64_t v15 = sub_183D4447C();
          (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
          break;
        case 4:
          *(void *)a1 = *a2;
          swift_unknownObjectRetain();
          break;
        default:
          uint64_t v10 = *a2;
          uint64_t v11 = a2[1];
          uint64_t v12 = a2[2];
          char v13 = *((unsigned char *)a2 + 24);
          sub_18315E9E4(*a2, v11, v12, v13);
          *(void *)a1 = v10;
          *(void *)(a1 + 8) = v11;
          *(void *)(a1 + 16) = v12;
          *(unsigned char *)(a1 + 24) = v13;
          *(_WORD *)(a1 + 26) = *((_WORD *)a2 + 13);
          break;
      }
LABEL_20:
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for NWListener.ServiceRegistrationChange()
{
  uint64_t result = qword_1E8F630D0;
  if (!qword_1E8F630D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *initializeWithTake for NWListener.ServiceRegistrationChange(void *a1, const void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for NWEndpoint();
  int v6 = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    if (v6 == 3) {
      goto LABEL_5;
    }
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
    goto LABEL_7;
  }
  if (v6 != 3) {
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v7 = sub_183D4447C();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
  swift_storeEnumTagMultiPayload();
LABEL_7:
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithTake for NWListener.ServiceRegistrationChange(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_1834F9934((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for NWListener.ServiceRegistrationChange);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for NWEndpoint();
    int v6 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      if (v6 == 3) {
        goto LABEL_6;
      }
    }
    else if (v6 == 3)
    {
LABEL_6:
      uint64_t v7 = sub_183D4447C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
LABEL_8:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
    goto LABEL_8;
  }
  return a1;
}

uint64_t sub_1834F8D50()
{
  uint64_t result = type metadata accessor for NWEndpoint();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void destroy for NWListener.LockedState(void *a1)
{
  if (*a1) {
    swift_release();
  }
  if (a1[2]) {
    swift_release();
  }
  if (a1[4]) {
    swift_release();
  }
  if (a1[6]) {
    swift_release();
  }
  if (a1[12])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[15])
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    unint64_t v2 = a1[18];
    if (v2 >> 60 != 15) {
      sub_1832E5E9C(a1[17], v2);
    }
  }
  int v3 = (void *)a1[20];
}

uint64_t initializeWithCopy for NWListener.LockedState(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  uint64_t v7 = *(void *)(a2 + 32);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  uint64_t v9 = *(void *)(a2 + 48);
  if (!v9)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    uint64_t v11 = *(void *)(a2 + 96);
    if (v11) {
      goto LABEL_12;
    }
LABEL_15:
    long long v16 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v16;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 139) = *(_OWORD *)(a2 + 139);
    long long v17 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v17;
    goto LABEL_21;
  }
  uint64_t v10 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  swift_retain();
  uint64_t v11 = *(void *)(a2 + 96);
  if (!v11) {
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v12 = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v13;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  uint64_t v14 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12)
  {
    uint64_t v15 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = v12;
    *(void *)(a1 + 128) = v15;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  }
  uint64_t v18 = (uint64_t *)(a2 + 136);
  unint64_t v19 = *(void *)(a2 + 144);
  if (v19 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 136) = *(_OWORD *)v18;
  }
  else
  {
    uint64_t v20 = *v18;
    sub_1832E5D6C(*v18, *(void *)(a2 + 144));
    *(void *)(a1 + 136) = v20;
    *(void *)(a1 + 144) = v19;
  }
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(_WORD *)(a1 + 153) = *(_WORD *)(a2 + 153);
LABEL_21:
  uint64_t v21 = *(void **)(a2 + 160);
  *(void *)(a1 + 160) = v21;
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(_WORD *)(a1 + 172) = *(_WORD *)(a2 + 172);
  id v22 = v21;
  return a1;
}

uint64_t assignWithCopy for NWListener.LockedState(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (*(void *)a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *(void *)a1 = v4;
      *(void *)(a1 + 8) = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (*(void *)(a1 + 16))
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v9;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (*(void *)(a1 + 32))
  {
    if (v10)
    {
      uint64_t v11 = a2[5];
      *(void *)(a1 + 32) = v10;
      *(void *)(a1 + 40) = v11;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    uint64_t v12 = a2[5];
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v12;
    swift_retain();
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
LABEL_22:
  uint64_t v13 = a2[6];
  if (*(void *)(a1 + 48))
  {
    if (v13)
    {
      uint64_t v14 = a2[7];
      *(void *)(a1 + 48) = v13;
      *(void *)(a1 + 56) = v14;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v13)
  {
    uint64_t v15 = a2[7];
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v15;
    swift_retain();
    goto LABEL_29;
  }
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
LABEL_29:
  long long v16 = (_OWORD *)(a1 + 64);
  long long v17 = a2 + 8;
  uint64_t v18 = a2[12];
  if (*(void *)(a1 + 96))
  {
    if (v18)
    {
      *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
      *(void *)(a1 + 72) = a2[9];
      *(void *)(a1 + 80) = a2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 88) = a2[11];
      *(void *)(a1 + 96) = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = a2[13];
      *(void *)(a1 + 112) = a2[14];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v19 = a2[15];
      if (*(void *)(a1 + 120))
      {
        if (v19)
        {
          *(void *)(a1 + 120) = v19;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 128) = a2[16];
          swift_unknownObjectRetain();
          swift_unknownObjectRelease();
LABEL_43:
          uint64_t v29 = a2 + 17;
          unint64_t v30 = a2[18];
          if (*(void *)(a1 + 144) >> 60 == 15)
          {
            if (v30 >> 60 != 15)
            {
              uint64_t v31 = *v29;
LABEL_53:
              sub_1832E5D6C(v31, v30);
              *(void *)(a1 + 136) = v31;
              *(void *)(a1 + 144) = v30;
              goto LABEL_55;
            }
          }
          else
          {
            if (v30 >> 60 != 15)
            {
              uint64_t v33 = *v29;
              sub_1832E5D6C(*v29, a2[18]);
              uint64_t v34 = *(void *)(a1 + 136);
              unint64_t v35 = *(void *)(a1 + 144);
              *(void *)(a1 + 136) = v33;
              *(void *)(a1 + 144) = v30;
              sub_1832E5E9C(v34, v35);
              goto LABEL_55;
            }
            sub_1834F0E54(a1 + 136);
          }
          *(_OWORD *)(a1 + 136) = *(_OWORD *)v29;
          goto LABEL_55;
        }
        sub_1834C9554(a1 + 120);
      }
      else if (v19)
      {
        *(void *)(a1 + 120) = v19;
        *(void *)(a1 + 128) = a2[16];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_43;
      }
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
      goto LABEL_43;
    }
    sub_1834F94AC((void *)(a1 + 64));
    long long v21 = *((_OWORD *)a2 + 5);
    *long long v16 = *v17;
    *(_OWORD *)(a1 + 80) = v21;
    long long v23 = *((_OWORD *)a2 + 7);
    long long v22 = *((_OWORD *)a2 + 8);
    long long v24 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 139) = *(_OWORD *)((char *)a2 + 139);
    *(_OWORD *)(a1 + 112) = v23;
    *(_OWORD *)(a1 + 128) = v22;
    *(_OWORD *)(a1 + 96) = v24;
  }
  else
  {
    if (v18)
    {
      *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
      *(void *)(a1 + 72) = a2[9];
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = a2[11];
      *(void *)(a1 + 96) = a2[12];
      *(void *)(a1 + 104) = a2[13];
      *(void *)(a1 + 112) = a2[14];
      uint64_t v20 = a2[15];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v20)
      {
        *(void *)(a1 + 120) = v20;
        *(void *)(a1 + 128) = a2[16];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
      }
      uint64_t v32 = a2 + 17;
      unint64_t v30 = a2[18];
      if (v30 >> 60 != 15)
      {
        uint64_t v31 = *v32;
        goto LABEL_53;
      }
      *(_OWORD *)(a1 + 136) = *(_OWORD *)v32;
LABEL_55:
      *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
      *(_WORD *)(a1 + 153) = *(_WORD *)((char *)a2 + 153);
      goto LABEL_56;
    }
    long long v25 = *((_OWORD *)a2 + 5);
    *long long v16 = *v17;
    *(_OWORD *)(a1 + 80) = v25;
    long long v26 = *((_OWORD *)a2 + 6);
    long long v27 = *((_OWORD *)a2 + 7);
    long long v28 = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 139) = *(_OWORD *)((char *)a2 + 139);
    *(_OWORD *)(a1 + 112) = v27;
    *(_OWORD *)(a1 + 128) = v28;
    *(_OWORD *)(a1 + 96) = v26;
  }
LABEL_56:
  __int16 v36 = *(void **)(a1 + 160);
  char v37 = (void *)a2[20];
  *(void *)(a1 + 160) = v37;
  id v38 = v37;

  int v39 = *((_DWORD *)a2 + 42);
  *(unsigned char *)(a1 + 172) = *((unsigned char *)a2 + 172);
  *(_DWORD *)(a1 + 168) = v39;
  *(unsigned char *)(a1 + 173) = *((unsigned char *)a2 + 173);
  return a1;
}

void *sub_1834F94AC(void *a1)
{
  return a1;
}

__n128 __swift_memcpy174_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(_OWORD *)(a1 + 158) = *(long long *)((char *)a2 + 158);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for NWListener.LockedState(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (*(void *)a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *(void *)a1 = v4;
      *(void *)(a1 + 8) = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (*(void *)(a1 + 16))
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v8;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v9;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (*(void *)(a1 + 32))
  {
    if (v10)
    {
      uint64_t v11 = a2[5];
      *(void *)(a1 + 32) = v10;
      *(void *)(a1 + 40) = v11;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    uint64_t v12 = a2[5];
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v12;
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
LABEL_22:
  uint64_t v13 = a2[6];
  if (*(void *)(a1 + 48))
  {
    if (v13)
    {
      uint64_t v14 = a2[7];
      *(void *)(a1 + 48) = v13;
      *(void *)(a1 + 56) = v14;
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v13)
  {
    uint64_t v15 = a2[7];
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v15;
    goto LABEL_29;
  }
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
LABEL_29:
  if (*(void *)(a1 + 96))
  {
    uint64_t v16 = a2[12];
    if (v16)
    {
      *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
      uint64_t v17 = a2[10];
      *(void *)(a1 + 72) = a2[9];
      *(void *)(a1 + 80) = v17;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 88) = a2[11];
      *(void *)(a1 + 96) = v16;
      swift_bridgeObjectRelease();
      uint64_t v18 = a2[14];
      *(void *)(a1 + 104) = a2[13];
      *(void *)(a1 + 112) = v18;
      swift_bridgeObjectRelease();
      uint64_t v19 = a2[15];
      if (*(void *)(a1 + 120))
      {
        if (v19)
        {
          *(void *)(a1 + 120) = v19;
          swift_bridgeObjectRelease();
          *(void *)(a1 + 128) = a2[16];
          swift_unknownObjectRelease();
          goto LABEL_38;
        }
        sub_1834C9554(a1 + 120);
      }
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
LABEL_38:
      long long v22 = a2 + 17;
      unint64_t v23 = *(void *)(a1 + 144);
      if (v23 >> 60 != 15)
      {
        unint64_t v24 = a2[18];
        if (v24 >> 60 != 15)
        {
          uint64_t v25 = *(void *)(a1 + 136);
          *(void *)(a1 + 136) = *v22;
          *(void *)(a1 + 144) = v24;
          sub_1832E5E9C(v25, v23);
          goto LABEL_43;
        }
        sub_1834F0E54(a1 + 136);
      }
      *(_OWORD *)(a1 + 136) = *(_OWORD *)v22;
LABEL_43:
      *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
      *(_WORD *)(a1 + 153) = *(_WORD *)((char *)a2 + 153);
      goto LABEL_44;
    }
    sub_1834F94AC((void *)(a1 + 64));
  }
  long long v20 = *((_OWORD *)a2 + 7);
  *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
  *(_OWORD *)(a1 + 112) = v20;
  *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
  *(_OWORD *)(a1 + 139) = *(_OWORD *)((char *)a2 + 139);
  long long v21 = *((_OWORD *)a2 + 5);
  *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
  *(_OWORD *)(a1 + 80) = v21;
LABEL_44:
  long long v26 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = a2[20];

  *(_DWORD *)(a1 + 168) = *((_DWORD *)a2 + 42);
  *(unsigned char *)(a1 + 172) = *((unsigned char *)a2 + 172);
  *(unsigned char *)(a1 + 173) = *((unsigned char *)a2 + 173);
  return a1;
}

uint64_t getEnumTagSinglePayload for NWListener.LockedState(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 174)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NWListener.LockedState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 172) = 0;
    *(_DWORD *)(result + 168) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 174) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 174) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

uint64_t sub_1834F989C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1834F98D4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1834F9934(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1834F9994(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1834F99C0(void *a1)
{
  return sub_18357ECC8(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_1834F9A1C(uint64_t a1)
{
}

uint64_t HTTPField.withUnsafeBytesOfValue<A>(_:)@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1835A33E0(a1, a2, *(void *)(v4 + 40), *(void *)(v4 + 48), a3, a4);
}

void static HTTPField.DynamicTableIndexingStrategy.automatic.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static HTTPField.DynamicTableIndexingStrategy.prefer.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void static HTTPField.DynamicTableIndexingStrategy.avoid.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

void static HTTPField.DynamicTableIndexingStrategy.disallow.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t HTTPField.DynamicTableIndexingStrategy.hash(into:)()
{
  return sub_183D45B1C();
}

BOOL static HTTPField.DynamicTableIndexingStrategy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t HTTPField.DynamicTableIndexingStrategy.hashValue.getter()
{
  return sub_183D45B4C();
}

uint64_t HTTPField.init(name:value:)@<X0>(long long *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v4 = a3;
  uint64_t v5 = a2;
  long long v7 = *a1;
  uint64_t v8 = *((void *)a1 + 2);
  uint64_t v9 = *((void *)a1 + 3);
  *(unsigned char *)(a4 + 32) = 0;
  *(_OWORD *)a4 = v7;
  *(void *)(a4 + 16) = v8;
  *(void *)(a4 + 24) = v9;
  if ((sub_1834BF534(a2, a3) & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F630E0);
    sub_1834FBEF8((unint64_t *)&qword_1E8F630E8, &qword_1E8F630E0);
    sub_183D44C0C();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    unint64_t v4 = 0xE000000000000000;
  }
  uint64_t v10 = sub_1834FBAD4(v5, v4);
  uint64_t v12 = v11;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a4 + 40) = v10;
  *(void *)(a4 + 48) = v12;
  return result;
}

double HTTPField.init<A>(name:value:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1834F9C3C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1834FBAD4, a5);
}

double HTTPField.init<A>(name:lenientValue:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1834F9C3C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1834FBC78, a5);
}

double sub_1834F9C3C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(uint64_t)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = *(void *)(a3 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](a1);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v22 = *(_OWORD *)v12;
  uint64_t v15 = *(void *)(v12 + 16);
  uint64_t v16 = *(void *)(v12 + 24);
  (*(void (**)(char *))(v11 + 16))(v14);
  uint64_t v17 = sub_1834A3F88((uint64_t)v14, a3, a4);
  uint64_t v18 = a5(v17);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, a3);
  double result = *(double *)&v22;
  *(_OWORD *)a6 = v22;
  *(void *)(a6 + 16) = v15;
  *(void *)(a6 + 24) = v16;
  *(unsigned char *)(a6 + 32) = 0;
  *(void *)(a6 + 40) = v18;
  *(void *)(a6 + 48) = v20;
  return result;
}

uint64_t HTTPField.name.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 HTTPField.name.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v5;
  *uint64_t v1 = v5;
  v1[1].n128_u64[0] = v2;
  v1[1].n128_u64[1] = v3;
  return result;
}

uint64_t (*HTTPField.name.modify())()
{
  return nullsub_1;
}

unint64_t HTTPField.value.getter()
{
  unint64_t v1 = *(void *)(v0 + 40);
  unint64_t v2 = *(void *)(v0 + 48);
  if ((sub_1834BF534(v1, v2) & 1) == 0) {
    return sub_1835A378C(v1, v2);
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1834F9EA4@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v3 = *(void *)(a1 + 40);
  unint64_t v4 = *(void *)(a1 + 48);
  if (sub_1834BF534(v3, v4))
  {
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v3 = sub_1835A378C(v3, v4);
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v4 = v7;
  }
  *a2 = v3;
  a2[1] = v4;
  return result;
}

uint64_t HTTPField.value.setter(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v4 = a2;
  uint64_t v5 = a1;
  if ((sub_1834BF534(a1, a2) & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F630E0);
    sub_1834FBEF8((unint64_t *)&qword_1E8F630E8, &qword_1E8F630E0);
    sub_183D44C0C();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    unint64_t v4 = 0xE000000000000000;
  }
  uint64_t v6 = sub_1834FBAD4(v5, v4);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v3 + 40) = v6;
  *(void *)(v3 + 48) = v8;
  return result;
}

void (*HTTPField.value.modify(void *a1))(unint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[6] = v1;
  unint64_t v4 = *(void *)(v1 + 40);
  unint64_t v5 = *(void *)(v1 + 48);
  if (sub_1834BF534(v4, v5))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v4 = sub_1835A378C(v4, v5);
    unint64_t v5 = v6;
  }
  v3[7] = 0;
  v3[4] = v4;
  v3[5] = v5;
  return sub_1834FA0EC;
}

void sub_1834FA0EC(unint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = (*a1)[4];
  unint64_t v5 = (*a1)[5];
  char v6 = sub_1834BF534(v4, v5);
  if (a2)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      *uint64_t v3 = v4;
      v3[1] = v5;
      v3[2] = (unint64_t)sub_1835A3780;
      v3[3] = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F630E0);
      sub_1834FBEF8((unint64_t *)&qword_1E8F630E8, &qword_1E8F630E0);
      sub_183D44C0C();
      unint64_t v4 = 0;
      unint64_t v5 = 0xE000000000000000;
    }
    unint64_t v11 = v3[6];
    uint64_t v12 = sub_1834FBAD4(v4, v5);
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v11 + 40) = v12;
    *(void *)(v11 + 48) = v14;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((v6 & 1) == 0)
    {
      *uint64_t v3 = v4;
      v3[1] = v5;
      v3[2] = (unint64_t)sub_1835A3780;
      v3[3] = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F630E0);
      sub_1834FBEF8((unint64_t *)&qword_1E8F630E8, &qword_1E8F630E0);
      sub_183D44C0C();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0;
      unint64_t v5 = 0xE000000000000000;
    }
    unint64_t v7 = v3[6];
    uint64_t v8 = sub_1834FBAD4(v4, v5);
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v7 + 40) = v8;
    *(void *)(v7 + 48) = v10;
  }

  free(v3);
}

void HTTPField.indexingStrategy.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

unsigned char *HTTPField.indexingStrategy.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 32) = *result;
  return result;
}

uint64_t (*HTTPField.indexingStrategy.modify())()
{
  return nullsub_1;
}

BOOL _s7Network9HTTPFieldV12isValidValueySbSSFZ_0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    unint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    unint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 1;
  }
  LOBYTE(v5) = (a2 & 0x1000000000000000) == 0 || (a1 & 0x800000000000000) != 0;
  if ((a2 & 0x1000000000000000) != 0)
  {
LABEL_53:
    char v6 = sub_183D44CFC();
    unint64_t v8 = sub_183D44CBC();
  }
  else
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      char v6 = a1;
    }
    else if ((a1 & 0x1000000000000000) != 0)
    {
      char v6 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
    }
    else
    {
      char v6 = *(unsigned char *)sub_183D4557C();
    }
    unint64_t v8 = 65540;
  }
  BOOL result = 0;
  if (v6 != 9 && v6 != 32)
  {
    uint64_t v5 = 4 << v5;
    while (1)
    {
      BOOL v9 = v6 == 32 || v6 == 9;
      if (!v9 && (v6 & 0x80) == 0 && (v6 - 127) < 0xA2u) {
        return 0;
      }
      if (4 * v2 == v8 >> 14) {
        return v6 != 9 && v6 != 32;
      }
      unint64_t v10 = v8 & 0xC;
      unint64_t v11 = v8;
      if (v10 == v5) {
        unint64_t v11 = sub_183520284(v8, a1, a2);
      }
      unint64_t v12 = v11 >> 16;
      if (v11 >> 16 >= v2)
      {
        __break(1u);
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
      if ((a2 & 0x1000000000000000) != 0) {
        break;
      }
      if ((a2 & 0x2000000000000000) != 0)
      {
        v15[0] = a1;
        v15[1] = a2 & 0xFFFFFFFFFFFFFFLL;
        char v6 = *((unsigned char *)v15 + v12);
        if (v10 == v5) {
          goto LABEL_42;
        }
LABEL_35:
        if ((a2 & 0x1000000000000000) != 0) {
          goto LABEL_36;
        }
LABEL_18:
        unint64_t v8 = (v8 & 0xFFFFFFFFFFFF0000) + 65540;
      }
      else
      {
        uint64_t v13 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((a1 & 0x1000000000000000) == 0) {
          uint64_t v13 = sub_183D4557C();
        }
        char v6 = *(unsigned char *)(v13 + v12);
        if (v10 != v5) {
          goto LABEL_35;
        }
LABEL_42:
        unint64_t v8 = sub_183520284(v8, a1, a2);
        if ((a2 & 0x1000000000000000) == 0) {
          goto LABEL_18;
        }
LABEL_36:
        if (v2 <= v8 >> 16) {
          goto LABEL_52;
        }
        unint64_t v8 = sub_183D44CBC();
      }
    }
    char v6 = sub_183D44CFC();
    if (v10 == v5) {
      goto LABEL_42;
    }
    goto LABEL_35;
  }
  return result;
}

BOOL sub_1834FA534(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  char v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v10 = &v14[-v9];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  sub_183D44D5C();
  swift_getAssociatedConformanceWitness();
  sub_183D4539C();
  if (v16)
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
    return 1;
  }
  else
  {
    int v12 = v15;
    if (v15 != 9 && v15 != 32)
    {
      while (v12 == 9 || v12 == 32 || (v12 & 0x80) != 0 || (v12 - 127) > 0xFFFFFFA1)
      {
        sub_183D4539C();
        if (v14[13] == 1)
        {
          (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
          return v12 != 32 && v12 != 9;
        }
        int v12 = v14[12];
      }
    }
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
    return 0;
  }
}

char *sub_1834FA7A8@<X0>(char *result@<X0>, unsigned char *a2@<X8>)
{
  int v2 = *result;
  if ((v2 - 127) >= 0xA2u || (char)v2 <= -1) {
    char v4 = *result;
  }
  else {
    char v4 = 32;
  }
  if (v2 == 32) {
    char v4 = 32;
  }
  if (v2 != 9) {
    LOBYTE(v2) = v4;
  }
  *a2 = v2;
  return result;
}

BOOL sub_1834FA7E4(unsigned __int8 *a1)
{
  int v1 = *a1;
  return v1 == 9 || v1 == 32;
}

unint64_t sub_1834FA7FC(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    unint64_t v4 = HIBYTE(a2) & 0xF;
  }
  else {
    unint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v5 = 4 * v4;
  uint64_t v6 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0) {
    LOBYTE(v6) = 1;
  }
  uint64_t v7 = 4 << v6;
  uint64_t v16 = a2 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v14 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  unint64_t v8 = 15;
  while (1)
  {
    unint64_t v9 = v8 >> 14;
    if (v8 >> 14 == v5) {
      return v9 == v5;
    }
    unint64_t v10 = v8 & 0xC;
    unint64_t result = v8;
    if (v10 == v7) {
      unint64_t result = sub_183520284(v8, a1, a2);
    }
    unint64_t v12 = result >> 16;
    if (result >> 16 >= v4) {
      break;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_183D44CFC();
      char v13 = result;
      if (v10 != v7) {
        goto LABEL_18;
      }
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v15[0] = a1;
      v15[1] = v16;
      char v13 = *((unsigned char *)v15 + v12);
      if (v10 != v7) {
        goto LABEL_18;
      }
    }
    else
    {
      unint64_t result = v14;
      if ((a1 & 0x1000000000000000) == 0) {
        unint64_t result = sub_183D4557C();
      }
      char v13 = *(unsigned char *)(result + v12);
      if (v10 != v7)
      {
LABEL_18:
        if ((a2 & 0x1000000000000000) != 0) {
          goto LABEL_22;
        }
        goto LABEL_19;
      }
    }
    unint64_t result = sub_183520284(v8, a1, a2);
    unint64_t v8 = result;
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_22:
      if (v4 <= v8 >> 16) {
        goto LABEL_28;
      }
      unint64_t v8 = sub_183D44CBC();
      goto LABEL_24;
    }
LABEL_19:
    unint64_t v8 = (v8 & 0xFFFFFFFFFFFF0000) + 65540;
LABEL_24:
    if (v13 == 10 || v13 == 13) {
      return v9 == v5;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

unsigned __int8 *sub_1834FA99C@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  int v2 = *result;
  if (v2 == 10 || v2 == 13) {
    LOBYTE(v2) = 32;
  }
  *a2 = v2;
  return result;
}

BOOL static HTTPField.isValidValue<A>(_:)(uint64_t a1, uint64_t a2)
{
  return sub_1834FA534(a1, a2);
}

uint64_t HTTPField.hash(into:)()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_183D44C4C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_183D45B1C();
  swift_bridgeObjectRetain();
  sub_183D44C4C();

  return swift_bridgeObjectRelease();
}

uint64_t HTTPField.hashValue.getter()
{
  return sub_183D45B4C();
}

uint64_t sub_1834FAB34()
{
  return sub_183D45B4C();
}

uint64_t sub_1834FABF0()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_183D44C4C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_183D45B1C();
  swift_bridgeObjectRetain();
  sub_183D44C4C();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1834FACA0()
{
  return sub_183D45B4C();
}

uint64_t HTTPField.description.getter()
{
  unint64_t v1 = v0[5];
  unint64_t v2 = v0[6];
  uint64_t v4 = *v0;
  swift_bridgeObjectRetain();
  sub_183D44C8C();
  if (sub_1834BF534(v1, v2))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1835A378C(v1, v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_183D44C8C();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1834FAE3C()
{
  unint64_t v1 = v0[5];
  unint64_t v2 = v0[6];
  uint64_t v4 = *v0;
  swift_bridgeObjectRetain();
  sub_183D44C8C();
  if (sub_1834BF534(v1, v2))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1835A378C(v1, v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_183D44C8C();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t HTTPField.playgroundDescription.getter@<X0>(void *a1@<X8>)
{
  unint64_t v3 = v1[5];
  unint64_t v4 = v1[6];
  uint64_t v6 = *v1;
  uint64_t v7 = v1[1];
  swift_bridgeObjectRetain();
  sub_183D44C8C();
  if (sub_1834BF534(v3, v4))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1835A378C(v3, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_183D44C8C();
  uint64_t result = swift_bridgeObjectRelease();
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = v6;
  a1[1] = v7;
  return result;
}

uint64_t sub_1834FB018@<X0>(void *a1@<X8>)
{
  unint64_t v3 = v1[5];
  unint64_t v4 = v1[6];
  uint64_t v6 = *v1;
  uint64_t v7 = v1[1];
  swift_bridgeObjectRetain();
  sub_183D44C8C();
  if (sub_1834BF534(v3, v4))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1835A378C(v3, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_183D44C8C();
  uint64_t result = swift_bridgeObjectRelease();
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = v6;
  a1[1] = v7;
  return result;
}

uint64_t sub_1834FB114(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1835C0E50(*a1, *a2);
}

uint64_t sub_1834FB120()
{
  return sub_183D45B4C();
}

uint64_t sub_1834FB1BC()
{
  sub_183D44C4C();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1834FB244()
{
  return sub_183D45B4C();
}

uint64_t sub_1834FB2DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1834FC4A8();
  *a1 = result;
  return result;
}

void sub_1834FB30C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE500000000000000;
  unint64_t v5 = 0x65756C6176;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000010;
    unint64_t v4 = 0x8000000183E23820;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701667182;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1834FB364()
{
  unint64_t v1 = 0x65756C6176;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1834FB3B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1834FC4A8();
  *a1 = result;
  return result;
}

uint64_t sub_1834FB3E0()
{
  return 0;
}

void sub_1834FB3EC(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1834FB3F8(uint64_t a1)
{
  unint64_t v2 = sub_1834FBDFC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1834FB434(uint64_t a1)
{
  unint64_t v2 = sub_1834FBDFC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t HTTPField.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F630F0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  BOOL v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = *v1;
  uint64_t v8 = *((void *)v1 + 2);
  uint64_t v7 = *((void *)v1 + 3);
  int v19 = *((unsigned __int8 *)v1 + 32);
  uint64_t v9 = *((void *)v1 + 5);
  v13[0] = *((void *)v1 + 6);
  v13[1] = v9;
  __swift_project_boxed_opaque_existential_2(a1, a1[3]);
  sub_1834FBDFC();
  sub_183D45C0C();
  long long v16 = v14;
  uint64_t v17 = v8;
  uint64_t v18 = v7;
  char v20 = 0;
  sub_1834FBE50();
  uint64_t v10 = v15;
  sub_183D4586C();
  if (!v10)
  {
    int v11 = v19;
    LOBYTE(v16) = 1;
    sub_183D4584C();
    if (v11)
    {
      LOBYTE(v16) = 2;
      sub_183D4588C();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t HTTPField.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63108);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2(a1, a1[3]);
  sub_1834FBDFC();
  sub_183D45BCC();
  if (!v2)
  {
    char v31 = 0;
    sub_1834FBEA4();
    sub_183D457DC();
    unint64_t v9 = v28;
    uint64_t v10 = v30;
    uint64_t v25 = v29;
    unint64_t v26 = v27;
    LOBYTE(v27) = 1;
    uint64_t v11 = sub_183D457BC();
    uint64_t v23 = v10;
    unint64_t v24 = v9;
    uint64_t v14 = v11;
    unint64_t v15 = v12;
    if (_s7Network9HTTPFieldV12isValidValueySbSSFZ_0(v11, v12))
    {
      uint64_t v22 = v14;
      LOBYTE(v27) = 2;
      __int16 v16 = sub_183D457AC();
      uint64_t v17 = v23;
      __int16 v18 = v16;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v18 & 0x1FC) != 0) {
        char v19 = 0;
      }
      else {
        char v19 = v18;
      }
      unint64_t v20 = v24;
      *(void *)a2 = v26;
      *(void *)(a2 + 8) = v20;
      *(void *)(a2 + 16) = v25;
      *(void *)(a2 + 24) = v17;
      *(unsigned char *)(a2 + 32) = v19;
      *(void *)(a2 + 40) = v22;
      *(void *)(a2 + 48) = v15;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v31 = 1;
      unint64_t v27 = 0;
      unint64_t v28 = 0xE000000000000000;
      sub_183D4547C();
      swift_bridgeObjectRelease();
      unint64_t v27 = 0xD000000000000012;
      unint64_t v28 = 0x8000000183E24820;
      sub_183D44C8C();
      swift_bridgeObjectRelease();
      sub_183D44C8C();
      sub_183D4554C();
      swift_allocError();
      sub_1834FBEF8(&qword_1E8F63118, &qword_1E8F63108);
      sub_183D4552C();
      swift_bridgeObjectRelease();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  return __swift_destroy_boxed_opaque_existential_2((uint64_t)a1);
}

uint64_t sub_1834FB9D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HTTPField.init(from:)(a1, a2);
}

uint64_t sub_1834FB9E8(void *a1)
{
  return HTTPField.encode(to:)(a1);
}

uint64_t _s7Network9HTTPFieldV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  int v5 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24))
  {
    if (v2 != v5) {
      return 0;
    }
  }
  else
  {
    char v9 = sub_183D4592C();
    uint64_t result = 0;
    if ((v9 & 1) == 0 || v2 != v5) {
      return result;
    }
  }
  if (v3 == v6 && v4 == v7) {
    return 1;
  }

  return sub_183D4592C();
}

uint64_t sub_1834FBAD4(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1;
  if (!_s7Network9HTTPFieldV12isValidValueySbSSFZ_0(a1, a2))
  {
    *(void *)&long long v13 = v3;
    *((void *)&v13 + 1) = a2;
    uint64_t v14 = sub_1834FA7A8;
    uint64_t v15 = 0;
    __int16 v16 = sub_1834FA7E4;
    uint64_t v17 = 0;
    __int16 v18 = sub_1834FC554;
    uint64_t v19 = 0;
    long long v7 = v13;
    long long v8 = (unint64_t)sub_1834FA7A8;
    long long v9 = (unint64_t)sub_1834FA7E4;
    long long v10 = (unint64_t)sub_1834FC554;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63158);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644A0);
    if (swift_dynamicCast())
    {
      sub_1834D9964(v5, (uint64_t)v11);
      __swift_project_boxed_opaque_existential_2(v11, v12);
      if (sub_183D4573C())
      {
        __swift_project_boxed_opaque_existential_2(v11, v12);
        sub_183D4572C();
        uint64_t v3 = v7;
        __swift_destroy_boxed_opaque_existential_2((uint64_t)v11);
        return v3;
      }
      __swift_destroy_boxed_opaque_existential_2((uint64_t)v11);
    }
    else
    {
      uint64_t v6 = 0;
      memset(v5, 0, sizeof(v5));
      sub_1834FC4F4((uint64_t)v5);
    }
    return sub_18353A7A0(&v13);
  }
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1834FBC78(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1;
  if ((sub_1834FA7FC(a1, a2) & 1) == 0)
  {
    uint64_t v7 = v3;
    unint64_t v8 = a2;
    long long v9 = sub_1834FA99C;
    uint64_t v10 = 0;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63148);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644A0);
    if (swift_dynamicCast())
    {
      sub_1834D9964(v5, (uint64_t)v11);
      __swift_project_boxed_opaque_existential_2(v11, v12);
      if (sub_183D4573C())
      {
        __swift_project_boxed_opaque_existential_2(v11, v12);
        sub_183D4572C();
        uint64_t v3 = *(void *)&v5[0];
        __swift_destroy_boxed_opaque_existential_2((uint64_t)v11);
        return v3;
      }
      __swift_destroy_boxed_opaque_existential_2((uint64_t)v11);
    }
    else
    {
      uint64_t v6 = 0;
      memset(v5, 0, sizeof(v5));
      sub_1834FC4F4((uint64_t)v5);
    }
    return sub_18353A85C(v3, a2);
  }
  swift_bridgeObjectRetain();
  return v3;
}

unint64_t sub_1834FBDFC()
{
  unint64_t result = qword_1E8F630F8;
  if (!qword_1E8F630F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F630F8);
  }
  return result;
}

unint64_t sub_1834FBE50()
{
  unint64_t result = qword_1E8F63100;
  if (!qword_1E8F63100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63100);
  }
  return result;
}

unint64_t sub_1834FBEA4()
{
  unint64_t result = qword_1E8F63110;
  if (!qword_1E8F63110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63110);
  }
  return result;
}

uint64_t sub_1834FBEF8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1834FBF40()
{
  unint64_t result = qword_1E8F63120;
  if (!qword_1E8F63120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63120);
  }
  return result;
}

unint64_t sub_1834FBF98()
{
  unint64_t result = qword_1E8F63128;
  if (!qword_1E8F63128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63128);
  }
  return result;
}

uint64_t sub_1834FBFF0(unint64_t *a1)
{
  unint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return HTTPField.value.setter(v1, v2);
}

uint64_t destroy for HTTPField()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HTTPField(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HTTPField(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HTTPField(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HTTPField(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HTTPField(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HTTPField()
{
  return &type metadata for HTTPField;
}

ValueMetadata *type metadata accessor for HTTPField.DynamicTableIndexingStrategy()
{
  return &type metadata for HTTPField.DynamicTableIndexingStrategy;
}

unsigned char *storeEnumTagSinglePayload for HTTPField.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1834FC368);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HTTPField.CodingKeys()
{
  return &type metadata for HTTPField.CodingKeys;
}

unint64_t sub_1834FC3A4()
{
  unint64_t result = qword_1E8F63130;
  if (!qword_1E8F63130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63130);
  }
  return result;
}

unint64_t sub_1834FC3FC()
{
  unint64_t result = qword_1E8F63138;
  if (!qword_1E8F63138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63138);
  }
  return result;
}

unint64_t sub_1834FC454()
{
  unint64_t result = qword_1E8F63140;
  if (!qword_1E8F63140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63140);
  }
  return result;
}

uint64_t sub_1834FC4A8()
{
  unint64_t v0 = sub_183D4575C();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1834FC4F4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63150);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1834FC558()
{
  qword_1E8F7A850 = (uint64_t)&unk_1ECF627B8;
}

void sub_1834FC56C(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

void sub_1834FC57C(uint64_t a1@<X8>)
{
  sub_183504EC0();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 9) = v4 & 1;
}

uint64_t sub_1834FC5B0@<X0>(void *a1@<X8>)
{
  if (qword_1E8F620A8 != -1) {
    swift_once();
  }
  *a1 = qword_1E8F7A850;

  return swift_bridgeObjectRetain();
}

void sub_1834FC61C(uint64_t a1@<X8>)
{
  sub_183504EC0();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 9) = v4 & 1;
}

void sub_1834FC654(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1834FC660()
{
  return sub_183D45B4C();
}

uint64_t sub_1834FC6CC()
{
  return sub_183D4470C();
}

uint64_t sub_1834FC70C()
{
  return sub_183D45B4C();
}

BOOL sub_1834FC774(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1834FC788()
{
  uint64_t v0 = sub_183D4489C();
  __swift_allocate_value_buffer(v0, qword_1E8F7A858);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E8F7A858);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63208);
  unint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63210) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_183D55BD0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "actorName";
  *(void *)(v6 + 8) = 9;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB0];
  uint64_t v8 = sub_183D4487C();
  long long v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "identifier";
  *((void *)v10 + 1) = 10;
  v10[16] = 2;
  v9();
  return sub_183D4488C();
}

uint64_t sub_1834FC940()
{
  uint64_t result = sub_183D4471C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1) {
        sub_183D4477C();
      }
      uint64_t result = sub_183D4471C();
    }
  }
  return result;
}

uint64_t sub_1834FC9D4()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_183D4484C(), !v1))
  {
    unint64_t v5 = v0[3];
    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v0[2] & 0xFFFFFFFFFFFFLL;
    }
    if (!v6 || (uint64_t result = sub_183D4484C(), !v1))
    {
      type metadata accessor for NWActorSystemProtobuf_ActorID(0);
      return sub_183D4469C();
    }
  }
  return result;
}

uint64_t sub_1834FCAB0@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  return sub_183D446AC();
}

unint64_t sub_1834FCADC()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1834FCAF8()
{
  return sub_183D447AC() & 1;
}

uint64_t (*sub_1834FCB1C())()
{
  return nullsub_1;
}

uint64_t sub_1834FCB40()
{
  return sub_1834FC940();
}

uint64_t sub_1834FCB58()
{
  return sub_1834FC9D4();
}

uint64_t sub_1834FCB70()
{
  return sub_183D447EC();
}

uint64_t sub_1834FCB88()
{
  return sub_183D446FC() & 1;
}

uint64_t sub_1834FCBFC()
{
  return sub_183D446EC() & 1;
}

uint64_t sub_1834FCC18@<X0>(uint64_t a1@<X8>)
{
  return sub_1834FF574(&qword_1E8F620B0, (uint64_t)qword_1E8F7A858, a1);
}

uint64_t sub_1834FCC3C()
{
  return sub_183D447DC();
}

uint64_t sub_1834FCCA0()
{
  return sub_183D447EC();
}

uint64_t sub_1834FCD18()
{
  uint64_t v0 = sub_183D4489C();
  __swift_allocate_value_buffer(v0, qword_1E8F7A870);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E8F7A870);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63208);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63210) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_183D54850;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "callID";
  *(void *)(v6 + 8) = 6;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB0];
  uint64_t v8 = sub_183D4487C();
  long long v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "recipient";
  *(void *)(v10 + 8) = 9;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "invocationTarget";
  *((void *)v12 + 1) = 16;
  v12[16] = 2;
  v9();
  long long v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *long long v13 = 4;
  *(void *)uint64_t v14 = "genericSubs";
  *((void *)v14 + 1) = 11;
  unsigned char v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  __int16 v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)__int16 v16 = "arguments";
  *((void *)v16 + 1) = 9;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  __int16 v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)__int16 v18 = "options";
  *((void *)v18 + 1) = 7;
  v18[16] = 2;
  v9();
  return sub_183D4488C();
}

uint64_t sub_1834FCFD4()
{
  uint64_t result = sub_183D4471C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
          sub_183D4477C();
          break;
        case 2:
          sub_1834FD114();
          break;
        case 4:
          sub_183D4476C();
          break;
        case 5:
          sub_183D4473C();
          break;
        case 6:
          sub_183D4478C();
          break;
        default:
          break;
      }
      uint64_t result = sub_183D4471C();
    }
  }
  return result;
}

uint64_t sub_1834FD114()
{
  return sub_183D4479C();
}

uint64_t sub_1834FD1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = v3[1];
  uint64_t v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v9 = *v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9 || (uint64_t result = sub_183D4484C(), !v4))
  {
    uint64_t result = sub_1834FD344((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      unint64_t v11 = v3[3];
      uint64_t v12 = HIBYTE(v11) & 0xF;
      if ((v11 & 0x2000000000000000) == 0) {
        uint64_t v12 = v3[2] & 0xFFFFFFFFFFFFLL;
      }
      if (v12) {
        sub_183D4484C();
      }
      if (*(void *)(v3[4] + 16)) {
        sub_183D4483C();
      }
      if (*(void *)(v3[5] + 16)) {
        sub_183D4480C();
      }
      if (v3[6]) {
        sub_183D4485C();
      }
      type metadata accessor for NWActorSystemProtobuf_RemoteCall(0);
      return sub_183D4469C();
    }
  }
  return result;
}

uint64_t sub_1834FD344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63228);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NWActorSystemProtobuf_ActorID(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NWActorSystemProtobuf_RemoteCall(0);
  sub_183138900(a1 + *(int *)(v12 + 40), (uint64_t)v7, &qword_1E8F63228);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_183138A24((uint64_t)v7, &qword_1E8F63228);
  }
  sub_18350091C((uint64_t)v7, (uint64_t)v11, type metadata accessor for NWActorSystemProtobuf_ActorID);
  sub_1834FF6C0(&qword_1E8F631E8, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_ActorID);
  sub_183D4486C();
  return sub_183500984((uint64_t)v11, type metadata accessor for NWActorSystemProtobuf_ActorID);
}

uint64_t sub_1834FD53C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  a2[4] = v4;
  a2[5] = v4;
  a2[6] = 0;
  sub_183D446AC();
  uint64_t v5 = (char *)a2 + *(int *)(a1 + 40);
  uint64_t v6 = type metadata accessor for NWActorSystemProtobuf_ActorID(0);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, 1, 1, v6);
}

unint64_t sub_1834FD5DC()
{
  return 0xD000000000000020;
}

uint64_t sub_1834FD5F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = sub_183D446BC();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1834FD668(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 36);
  uint64_t v5 = sub_183D446BC();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*sub_1834FD6D8())()
{
  return nullsub_1;
}

uint64_t sub_1834FD6FC()
{
  return sub_1834FCFD4();
}

uint64_t sub_1834FD714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1834FD1C4(a1, a2, a3);
}

uint64_t sub_1834FD72C()
{
  return sub_183D446FC() & 1;
}

uint64_t sub_1834FD7A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1834FF574(&qword_1E8F620B8, (uint64_t)qword_1E8F7A870, a1);
}

uint64_t sub_1834FD7C4()
{
  return sub_183D447DC();
}

uint64_t sub_1834FD824()
{
  return sub_183D447EC();
}

uint64_t sub_1834FD898()
{
  uint64_t v0 = sub_183D4489C();
  __swift_allocate_value_buffer(v0, qword_1E8F7A888);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E8F7A888);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63208);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63210) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_183D55BE0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "callID";
  *(void *)(v6 + 8) = 6;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB0];
  uint64_t v8 = sub_183D4487C();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "value";
  *(void *)(v10 + 8) = 5;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  unint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *unint64_t v11 = 3;
  *(void *)uint64_t v12 = "error";
  *((void *)v12 + 1) = 5;
  v12[16] = 2;
  v9();
  long long v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *long long v13 = 5;
  *(void *)uint64_t v14 = "metrics";
  *((void *)v14 + 1) = 7;
  unsigned char v14[16] = 2;
  v9();
  return sub_183D4488C();
}

uint64_t sub_1834FDAD4()
{
  uint64_t result = sub_183D4471C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_183D4477C();
          break;
        case 2:
          sub_183D4474C();
          break;
        case 3:
          sub_1834FDBE0();
          break;
        case 5:
          sub_1834FDC90();
          break;
        default:
          break;
      }
      uint64_t result = sub_183D4471C();
    }
  }
  return result;
}

uint64_t sub_1834FDBE0()
{
  return sub_183D4479C();
}

uint64_t sub_1834FDC90()
{
  return sub_183D4479C();
}

uint64_t sub_1834FDD40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = v3[1];
  uint64_t v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v9 = *v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9 || (uint64_t result = sub_183D4484C(), !v4))
  {
    uint64_t v11 = v3[2];
    unint64_t v12 = v3[3];
    switch(v12 >> 62)
    {
      case 1uLL:
        if ((int)v11 != v11 >> 32) {
          goto LABEL_11;
        }
        goto LABEL_12;
      case 2uLL:
        if (*(void *)(v11 + 16) != *(void *)(v11 + 24)) {
          goto LABEL_11;
        }
        goto LABEL_12;
      case 3uLL:
        goto LABEL_12;
      default:
        if ((v12 & 0xFF000000000000) == 0) {
          goto LABEL_12;
        }
LABEL_11:
        uint64_t result = sub_183D4481C();
        if (!v4)
        {
LABEL_12:
          uint64_t result = sub_1834FDEA8((uint64_t)v3, a1, a2, a3);
          if (!v4)
          {
            sub_1834FE0A0((uint64_t)v3, a1, a2, a3);
            type metadata accessor for NWActorSystemProtobuf_Reply(0);
            uint64_t result = sub_183D4469C();
          }
        }
        break;
    }
  }
  return result;
}

uint64_t sub_1834FDEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63248);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NWActorSystemProtobuf_Reply.Error(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NWActorSystemProtobuf_Reply(0);
  sub_183138900(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_1E8F63248);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_183138A24((uint64_t)v7, &qword_1E8F63248);
  }
  sub_18350091C((uint64_t)v7, (uint64_t)v11, type metadata accessor for NWActorSystemProtobuf_Reply.Error);
  sub_1834FF6C0(&qword_1E8F63168, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_Reply.Error);
  sub_183D4486C();
  return sub_183500984((uint64_t)v11, type metadata accessor for NWActorSystemProtobuf_Reply.Error);
}

uint64_t sub_1834FE0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63240);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NWActorSystemProtobuf_Reply.Metrics(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NWActorSystemProtobuf_Reply(0);
  sub_183138900(a1 + *(int *)(v12 + 32), (uint64_t)v7, &qword_1E8F63240);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_183138A24((uint64_t)v7, &qword_1E8F63240);
  }
  sub_18350091C((uint64_t)v7, (uint64_t)v11, type metadata accessor for NWActorSystemProtobuf_Reply.Metrics);
  sub_1834FF6C0(&qword_1E8F63188, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_Reply.Metrics);
  sub_183D4486C();
  return sub_183500984((uint64_t)v11, type metadata accessor for NWActorSystemProtobuf_Reply.Metrics);
}

uint64_t sub_1834FE298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0xE000000000000000;
  *(_OWORD *)(a2 + 16) = xmmword_183D54880;
  sub_183D446AC();
  uint64_t v4 = a2 + *(int *)(a1 + 28);
  uint64_t v5 = type metadata accessor for NWActorSystemProtobuf_Reply.Error(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 32);
  uint64_t v7 = type metadata accessor for NWActorSystemProtobuf_Reply.Metrics(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

unint64_t sub_1834FE380()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1834FE39C()
{
  return sub_1834FDAD4();
}

uint64_t sub_1834FE3B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1834FDD40(a1, a2, a3);
}

uint64_t sub_1834FE3CC()
{
  return sub_183D446FC() & 1;
}

uint64_t sub_1834FE440@<X0>(uint64_t a1@<X8>)
{
  return sub_1834FF574(&qword_1E8F620C0, (uint64_t)qword_1E8F7A888, a1);
}

uint64_t sub_1834FE464()
{
  return sub_183D447DC();
}

uint64_t sub_1834FE4C4()
{
  return sub_183D447EC();
}

uint64_t sub_1834FE538(uint64_t a1)
{
  return sub_1834FEAC8(a1, 0x7363697274654D2ELL, 0xE800000000000000, qword_1E8F7A8A0, &qword_1E8F7A8A0[1]);
}

uint64_t sub_1834FE55C()
{
  uint64_t v0 = sub_183D4489C();
  __swift_allocate_value_buffer(v0, qword_1E8F7A8B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E8F7A8B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63208);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63210) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_183D53660;
  unint64_t v4 = v3 + v2 + v1[14];
  *(void *)(v3 + v2) = 1;
  *(void *)unint64_t v4 = "remoteExecutionTime";
  *(void *)(v4 + 8) = 19;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x1E4F70FB0];
  uint64_t v6 = sub_183D4487C();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v4, v5, v6);
  return sub_183D4488C();
}

uint64_t sub_1834FE6B8()
{
  while (1)
  {
    uint64_t result = sub_183D4471C();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      sub_183D4475C();
    }
  }
  return result;
}

uint64_t sub_1834FE728()
{
  if (!*v0 || (uint64_t result = sub_183D4482C(), !v1))
  {
    type metadata accessor for NWActorSystemProtobuf_Reply.Metrics(0);
    return sub_183D4469C();
  }
  return result;
}

uint64_t sub_1834FE7BC@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  return sub_183D446AC();
}

uint64_t sub_1834FE7E0(uint64_t a1, uint64_t a2)
{
  return sub_1834FEF18(a1, a2, &qword_1E8F620C8, qword_1E8F7A8A0);
}

uint64_t sub_1834FE808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_183D446BC();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1834FE878(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 20);
  uint64_t v5 = sub_183D446BC();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*sub_1834FE8E8())()
{
  return nullsub_1;
}

uint64_t sub_1834FE90C()
{
  return sub_1834FE6B8();
}

uint64_t sub_1834FE924()
{
  return sub_1834FE728();
}

uint64_t sub_1834FE93C()
{
  return sub_183D446FC() & 1;
}

uint64_t sub_1834FE9B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1834FF574(&qword_1E8F620D0, (uint64_t)qword_1E8F7A8B0, a1);
}

uint64_t sub_1834FE9D4()
{
  return sub_183D447DC();
}

uint64_t sub_1834FEA34()
{
  return sub_183D447EC();
}

uint64_t sub_1834FEAA8(uint64_t a1)
{
  return sub_1834FEAC8(a1, 0x726F7272452ELL, 0xE600000000000000, qword_1E8F7A8C8, &qword_1E8F7A8C8[1]);
}

uint64_t sub_1834FEAC8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t result = sub_183D44C8C();
  *a4 = 0xD00000000000001BLL;
  *a5 = 0x8000000183E24910;
  return result;
}

uint64_t sub_1834FEB34()
{
  uint64_t v0 = sub_183D4489C();
  __swift_allocate_value_buffer(v0, qword_1E8F7A8D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E8F7A8D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63208);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63210) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_183D55BD0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "type";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB0];
  uint64_t v8 = sub_183D4487C();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "arguments";
  *((void *)v10 + 1) = 9;
  v10[16] = 2;
  v9();
  return sub_183D4488C();
}

uint64_t sub_1834FECEC()
{
  uint64_t result = sub_183D4471C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_183D4473C();
      }
      else if (result == 1)
      {
        sub_1835016DC();
        sub_183D4472C();
      }
      uint64_t result = sub_183D4471C();
    }
  }
  return result;
}

uint64_t sub_1834FEDD0()
{
  if (!*v0 || (sub_1835016DC(), uint64_t result = sub_183D447FC(), !v1))
  {
    if (!*(void *)(v0[2] + 16) || (uint64_t result = sub_183D4480C(), !v1))
    {
      type metadata accessor for NWActorSystemProtobuf_Reply.Error(0);
      return sub_183D4469C();
    }
  }
  return result;
}

uint64_t sub_1834FEEB8@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = MEMORY[0x1E4FBC860];
  return sub_183D446AC();
}

uint64_t sub_1834FEEF0(uint64_t a1, uint64_t a2)
{
  return sub_1834FEF18(a1, a2, &qword_1E8F620D8, qword_1E8F7A8C8);
}

uint64_t sub_1834FEF18(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v5 = *a4;
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_1834FEF70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_183D446BC();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1834FEFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 24);
  uint64_t v5 = sub_183D446BC();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t sub_1834FF050()
{
  return sub_1834FECEC();
}

uint64_t sub_1834FF068()
{
  return sub_1834FEDD0();
}

uint64_t sub_1834FF080()
{
  return sub_183D446FC() & 1;
}

uint64_t sub_1834FF0F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1834FF574(&qword_1E8F620E0, (uint64_t)qword_1E8F7A8D8, a1);
}

uint64_t sub_1834FF118()
{
  return sub_183D447DC();
}

uint64_t sub_1834FF178()
{
  return sub_183D45B4C();
}

uint64_t sub_1834FF1D0()
{
  return sub_183D447EC();
}

uint64_t sub_1834FF240()
{
  return sub_183D45B4C();
}

uint64_t sub_1834FF298()
{
  uint64_t v0 = sub_183D4489C();
  __swift_allocate_value_buffer(v0, qword_1E8F7A8F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E8F7A8F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63208);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63210) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_183D54850;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "ACTOR_RESOLUTION_FAILED";
  *(void *)(v6 + 8) = 23;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB0];
  uint64_t v8 = sub_183D4487C();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "FAILED_TO_EXECUTE";
  *(void *)(v10 + 8) = 17;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 2;
  *(void *)uint64_t v12 = "UNDERLYING";
  *((void *)v12 + 1) = 10;
  v12[16] = 2;
  v9();
  long long v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *long long v13 = 3;
  *(void *)uint64_t v14 = "CODABLE_CLIENT";
  *((void *)v14 + 1) = 14;
  unsigned char v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  __int16 v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 4;
  *(void *)__int16 v16 = "NONCODABLE_CLIENT";
  *((void *)v16 + 1) = 17;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  __int16 v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 5;
  *(void *)__int16 v18 = "NSERROR";
  *((void *)v18 + 1) = 7;
  v18[16] = 2;
  v9();
  return sub_183D4488C();
}

uint64_t sub_1834FF550@<X0>(uint64_t a1@<X8>)
{
  return sub_1834FF574(&qword_1E8F620E8, (uint64_t)qword_1E8F7A8F0, a1);
}

uint64_t sub_1834FF574@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_183D4489C();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_1834FF610()
{
  return sub_1834FF6C0(&qword_1E8F63160, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_Reply.Error);
}

uint64_t type metadata accessor for NWActorSystemProtobuf_Reply.Error(uint64_t a1)
{
  return sub_18315A7F8(a1, (uint64_t *)&unk_1E8F632D0);
}

uint64_t sub_1834FF678()
{
  return sub_1834FF6C0(&qword_1E8F63168, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_Reply.Error);
}

uint64_t sub_1834FF6C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1834FF708()
{
  return sub_1834FF6C0(&qword_1E8F63170, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_Reply.Error);
}

uint64_t sub_1834FF750()
{
  return sub_1834FF6C0(&qword_1E8F63178, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_Reply.Error);
}

uint64_t sub_1834FF798()
{
  return sub_1834FF6C0(&qword_1E8F63180, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_Reply.Metrics);
}

uint64_t type metadata accessor for NWActorSystemProtobuf_Reply.Metrics(uint64_t a1)
{
  return sub_18315A7F8(a1, (uint64_t *)&unk_1E8F632C0);
}

uint64_t sub_1834FF800()
{
  return sub_1834FF6C0(&qword_1E8F63188, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_Reply.Metrics);
}

uint64_t sub_1834FF848()
{
  return sub_1834FF6C0(&qword_1E8F63190, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_Reply.Metrics);
}

uint64_t sub_1834FF890()
{
  return sub_1834FF6C0(&qword_1E8F63198, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_Reply.Metrics);
}

uint64_t sub_1834FF8D8()
{
  return sub_1834FF6C0(&qword_1E8F631A0, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_Reply);
}

uint64_t type metadata accessor for NWActorSystemProtobuf_Reply(uint64_t a1)
{
  return sub_18315A7F8(a1, (uint64_t *)&unk_1E8F632A0);
}

uint64_t sub_1834FF940()
{
  return sub_1834FF6C0(&qword_1E8F631A8, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_Reply);
}

uint64_t sub_1834FF988()
{
  return sub_1834FF6C0(&qword_1E8F631B0, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_Reply);
}

uint64_t sub_1834FF9D0()
{
  return sub_1834FF6C0(&qword_1E8F631B8, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_Reply);
}

uint64_t sub_1834FFA18()
{
  return sub_1834FF6C0(&qword_1E8F631C0, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_RemoteCall);
}

uint64_t type metadata accessor for NWActorSystemProtobuf_RemoteCall(uint64_t a1)
{
  return sub_18315A7F8(a1, (uint64_t *)&unk_1E8F63288);
}

uint64_t sub_1834FFA80()
{
  return sub_1834FF6C0(&qword_1E8F631C8, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_RemoteCall);
}

uint64_t sub_1834FFAC8()
{
  return sub_1834FF6C0(&qword_1E8F631D0, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_RemoteCall);
}

uint64_t sub_1834FFB10()
{
  return sub_1834FF6C0(&qword_1E8F631D8, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_RemoteCall);
}

uint64_t sub_1834FFB58()
{
  return sub_1834FF6C0(&qword_1E8F631E0, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_ActorID);
}

uint64_t type metadata accessor for NWActorSystemProtobuf_ActorID(uint64_t a1)
{
  return sub_18315A7F8(a1, (uint64_t *)&unk_1E8F63278);
}

uint64_t sub_1834FFBC0()
{
  return sub_1834FF6C0(&qword_1E8F631E8, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_ActorID);
}

uint64_t sub_1834FFC08()
{
  return sub_1834FF6C0(&qword_1E8F631F0, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_ActorID);
}

uint64_t sub_1834FFC50()
{
  return sub_1834FF6C0(&qword_1E8F631F8, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_ActorID);
}

uint64_t sub_1834FFC98(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_183517298((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_1834FFD70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_183D4434C();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_183D4437C();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_183D4436C();
  sub_183517298(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1834FFE28(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x183500090);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_1832E5D6C(a3, a4);
                  sub_1832E5D6C(a1, a2);
                  char v17 = sub_1834FFD70((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_1832E5E9C(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_1832E5D6C(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_1834FFD70(v21, v22, v20, a3, a4);
                  sub_1832E5E9C(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_1832E5D6C(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_1832E5D6C(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_1834FFC98(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_1832E5E9C(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1835000C0(uint64_t *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for NWActorSystemProtobuf_ActorID(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63230);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63228);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  char v17 = (char *)&v44 - v16;
  MEMORY[0x1F4188790](v15);
  unint64_t v19 = (char *)&v44 - v18;
  uint64_t v20 = *a1;
  uint64_t v21 = a1[1];
  uint64_t v47 = a1;
  if (v20 != *a2 || v21 != a2[1])
  {
    char v22 = 0;
    if ((sub_183D4592C() & 1) == 0) {
      return v22 & 1;
    }
  }
  uint64_t v45 = v7;
  uint64_t v23 = type metadata accessor for NWActorSystemProtobuf_RemoteCall(0);
  sub_183138900((uint64_t)v47 + *(int *)(v23 + 40), (uint64_t)v19, &qword_1E8F63228);
  uint64_t v44 = v23;
  uint64_t v24 = *(int *)(v23 + 40);
  uint64_t v46 = a2;
  sub_183138900((uint64_t)a2 + v24, (uint64_t)v17, &qword_1E8F63228);
  uint64_t v25 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_183138900((uint64_t)v19, (uint64_t)v10, &qword_1E8F63228);
  sub_183138900((uint64_t)v17, v25, &qword_1E8F63228);
  unint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v26((uint64_t)v10, 1, v4) == 1)
  {
    sub_183138A24((uint64_t)v17, &qword_1E8F63228);
    sub_183138A24((uint64_t)v19, &qword_1E8F63228);
    if (v26(v25, 1, v4) == 1)
    {
      sub_183138A24((uint64_t)v10, &qword_1E8F63228);
      goto LABEL_24;
    }
    goto LABEL_9;
  }
  sub_183138900((uint64_t)v10, (uint64_t)v14, &qword_1E8F63228);
  if (v26(v25, 1, v4) == 1)
  {
    sub_183138A24((uint64_t)v17, &qword_1E8F63228);
    sub_183138A24((uint64_t)v19, &qword_1E8F63228);
    sub_183500984((uint64_t)v14, type metadata accessor for NWActorSystemProtobuf_ActorID);
LABEL_9:
    unint64_t v27 = &qword_1E8F63230;
    uint64_t v28 = (uint64_t)v10;
LABEL_10:
    sub_183138A24(v28, v27);
LABEL_11:
    char v22 = 0;
    return v22 & 1;
  }
  uint64_t v30 = v45;
  sub_18350091C(v25, (uint64_t)v45, type metadata accessor for NWActorSystemProtobuf_ActorID);
  BOOL v31 = *v14 == *v30 && v14[1] == v30[1];
  if (!v31 && (sub_183D4592C() & 1) == 0
    || (v14[2] == v30[2] ? (BOOL v32 = v14[3] == v30[3]) : (BOOL v32 = 0), !v32 && (sub_183D4592C() & 1) == 0))
  {
    sub_183500984((uint64_t)v30, type metadata accessor for NWActorSystemProtobuf_ActorID);
    sub_183138A24((uint64_t)v17, &qword_1E8F63228);
    sub_183138A24((uint64_t)v19, &qword_1E8F63228);
    sub_183500984((uint64_t)v14, type metadata accessor for NWActorSystemProtobuf_ActorID);
    uint64_t v28 = (uint64_t)v10;
    unint64_t v27 = &qword_1E8F63228;
    goto LABEL_10;
  }
  sub_183D446BC();
  sub_1835008D0();
  char v33 = sub_183D44ACC();
  sub_183500984((uint64_t)v30, type metadata accessor for NWActorSystemProtobuf_ActorID);
  sub_183138A24((uint64_t)v17, &qword_1E8F63228);
  sub_183138A24((uint64_t)v19, &qword_1E8F63228);
  sub_183500984((uint64_t)v14, type metadata accessor for NWActorSystemProtobuf_ActorID);
  sub_183138A24((uint64_t)v10, &qword_1E8F63228);
  if ((v33 & 1) == 0) {
    goto LABEL_11;
  }
LABEL_24:
  uint64_t v34 = v46;
  if (v47[2] == v46[2] && v47[3] == v46[3] || (char v22 = 0, (sub_183D4592C() & 1) != 0))
  {
    unint64_t v35 = v47;
    if ((sub_1835147E0((void *)v47[4], (void *)v34[4]) & 1) != 0
      && (sub_1835148A8(v35[5], v34[5]) & 1) != 0
      && v35[6] == v34[6])
    {
      __int16 v36 = (char *)v35 + *(int *)(v44 + 36);
      uint64_t v37 = sub_183D446BC();
      uint64_t v47 = &v44;
      id v38 = *(void **)(v37 - 8);
      uint64_t v39 = v38[8];
      MEMORY[0x1F4188790](v37);
      uint64_t v40 = (char *)&v44 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v41 = (uint64_t (*)(char *, char *, uint64_t))v38[2];
      uint64_t v42 = v41(v40, v36, v37);
      MEMORY[0x1F4188790](v42);
      ((void (*)(char *))v41)(v40);
      sub_1835008D0();
      char v22 = sub_183D44ACC();
      int v43 = (void (*)(char *, uint64_t))v38[1];
      v43(v40, v37);
      v43(v40, v37);
      return v22 & 1;
    }
    goto LABEL_11;
  }
  return v22 & 1;
}

uint64_t sub_1835006EC(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = 0, (sub_183D4592C() & 1) != 0))
  {
    BOOL v6 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v6 || (char v5 = 0, (sub_183D4592C() & 1) != 0))
    {
      char v7 = (char *)a1 + *(int *)(type metadata accessor for NWActorSystemProtobuf_ActorID(0) + 24);
      uint64_t v8 = sub_183D446BC();
      v16[1] = v16;
      uint64_t v9 = *(void **)(v8 - 8);
      uint64_t v10 = v9[8];
      MEMORY[0x1F4188790](v8);
      unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v12 = (uint64_t (*)(char *, char *, uint64_t))v9[2];
      uint64_t v13 = v12((char *)v16 - v11, v7, v8);
      MEMORY[0x1F4188790](v13);
      ((void (*)(char *))v12)((char *)v16 - v11);
      sub_1835008D0();
      char v5 = sub_183D44ACC();
      uint64_t v14 = (void (*)(char *, uint64_t))v9[1];
      v14((char *)v16 - v11, v8);
      v14((char *)v16 - v11, v8);
    }
  }
  return v5 & 1;
}

unint64_t sub_1835008D0()
{
  unint64_t result = qword_1E8F63218;
  if (!qword_1E8F63218)
  {
    sub_183D446BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63218);
  }
  return result;
}

uint64_t sub_18350091C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_183500984(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1835009E4(void *a1, void *a2)
{
  uint64_t v72 = type metadata accessor for NWActorSystemProtobuf_Reply.Metrics(0);
  uint64_t v70 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  char v67 = (void **)((char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63250);
  MEMORY[0x1F4188790](v5);
  uint64_t v73 = (uint64_t)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63240);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v68 = (void **)((char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v74 = (void **)((char *)&v64 - v11);
  MEMORY[0x1F4188790](v10);
  uint64_t v71 = (uint64_t)&v64 - v12;
  uint64_t v13 = type metadata accessor for NWActorSystemProtobuf_Reply.Error(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v69 = (uint64_t *)((char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63258);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63248);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  char v22 = (uint64_t *)((char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v25 = (char *)&v64 - v24;
  MEMORY[0x1F4188790](v23);
  unint64_t v27 = (char *)&v64 - v26;
  uint64_t v28 = *a1;
  uint64_t v29 = a1[1];
  uint64_t v30 = *a2;
  uint64_t v31 = a2[1];
  os_log_type_t v75 = a2;
  if (v28 == v30 && v29 == v31 || (char v32 = 0, (sub_183D4592C() & 1) != 0))
  {
    char v33 = v75;
    if ((sub_1834FFE28(a1[2], a1[3], v75[2], v75[3]) & 1) == 0) {
      goto LABEL_23;
    }
    uint64_t v66 = v5;
    uint64_t v34 = type metadata accessor for NWActorSystemProtobuf_Reply(0);
    uint64_t v35 = *(int *)(v34 + 28);
    unint64_t v64 = a1;
    sub_183138900((uint64_t)a1 + v35, (uint64_t)v27, &qword_1E8F63248);
    uint64_t v65 = v34;
    sub_183138900((uint64_t)v33 + *(int *)(v34 + 28), (uint64_t)v25, &qword_1E8F63248);
    uint64_t v36 = (uint64_t)&v18[*(int *)(v16 + 48)];
    sub_183138900((uint64_t)v27, (uint64_t)v18, &qword_1E8F63248);
    sub_183138900((uint64_t)v25, v36, &qword_1E8F63248);
    uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    if (v37((uint64_t)v18, 1, v13) == 1)
    {
      sub_183138A24((uint64_t)v25, &qword_1E8F63248);
      sub_183138A24((uint64_t)v27, &qword_1E8F63248);
      int v38 = v37(v36, 1, v13);
      uint64_t v39 = v66;
      if (v38 == 1)
      {
        sub_183138A24((uint64_t)v18, &qword_1E8F63248);
LABEL_12:
        uint64_t v45 = v64;
        uint64_t v44 = v65;
        uint64_t v46 = v71;
        sub_183138900((uint64_t)v64 + *(int *)(v65 + 32), v71, &qword_1E8F63240);
        uint64_t v47 = (uint64_t)v74;
        sub_183138900((uint64_t)v75 + *(int *)(v44 + 32), (uint64_t)v74, &qword_1E8F63240);
        uint64_t v48 = v73;
        uint64_t v49 = v73 + *(int *)(v39 + 48);
        sub_183138900(v46, v73, &qword_1E8F63240);
        sub_183138900(v47, v49, &qword_1E8F63240);
        uint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
        uint64_t v51 = v72;
        if (v50(v48, 1, v72) == 1)
        {
          sub_183138A24(v47, &qword_1E8F63240);
          sub_183138A24(v46, &qword_1E8F63240);
          if (v50(v49, 1, v51) == 1)
          {
            sub_183138A24(v48, &qword_1E8F63240);
LABEL_20:
            uint64_t v55 = (uint64_t)v45 + *(int *)(v65 + 24);
            uint64_t v56 = sub_183D446BC();
            uint64_t v74 = &v64;
            uint64_t v57 = *(void **)(v56 - 8);
            uint64_t v58 = v57[8];
            MEMORY[0x1F4188790](v56);
            os_unfair_lock_t v59 = (char *)&v64 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t v60 = (uint64_t (*)(char *, uint64_t, uint64_t))v57[2];
            uint64_t v61 = v60(v59, v55, v56);
            MEMORY[0x1F4188790](v61);
            ((void (*)(char *))v60)(v59);
            sub_1835008D0();
            char v32 = sub_183D44ACC();
            uint64_t v62 = (void (*)(char *, uint64_t))v57[1];
            v62(v59, v56);
            v62(v59, v56);
            return v32 & 1;
          }
          goto LABEL_17;
        }
        uint64_t v52 = v68;
        sub_183138900(v48, (uint64_t)v68, &qword_1E8F63240);
        if (v50(v49, 1, v51) == 1)
        {
          sub_183138A24((uint64_t)v74, &qword_1E8F63240);
          sub_183138A24(v46, &qword_1E8F63240);
          sub_183500984((uint64_t)v52, type metadata accessor for NWActorSystemProtobuf_Reply.Metrics);
LABEL_17:
          uint64_t v40 = &qword_1E8F63250;
          uint64_t v41 = v48;
          goto LABEL_22;
        }
        long long v53 = v67;
        sub_18350091C(v49, (uint64_t)v67, type metadata accessor for NWActorSystemProtobuf_Reply.Metrics);
        if (*v52 != *v53)
        {
          sub_183500984((uint64_t)v53, type metadata accessor for NWActorSystemProtobuf_Reply.Metrics);
          sub_183138A24((uint64_t)v74, &qword_1E8F63240);
          sub_183138A24(v46, &qword_1E8F63240);
          sub_183500984((uint64_t)v52, type metadata accessor for NWActorSystemProtobuf_Reply.Metrics);
          uint64_t v41 = v48;
          uint64_t v40 = &qword_1E8F63240;
          goto LABEL_22;
        }
        sub_183D446BC();
        sub_1835008D0();
        char v54 = sub_183D44ACC();
        sub_183500984((uint64_t)v53, type metadata accessor for NWActorSystemProtobuf_Reply.Metrics);
        sub_183138A24((uint64_t)v74, &qword_1E8F63240);
        sub_183138A24(v46, &qword_1E8F63240);
        sub_183500984((uint64_t)v52, type metadata accessor for NWActorSystemProtobuf_Reply.Metrics);
        sub_183138A24(v48, &qword_1E8F63240);
        if (v54) {
          goto LABEL_20;
        }
LABEL_23:
        char v32 = 0;
        return v32 & 1;
      }
    }
    else
    {
      sub_183138900((uint64_t)v18, (uint64_t)v22, &qword_1E8F63248);
      if (v37(v36, 1, v13) != 1)
      {
        uint64_t v42 = v69;
        sub_18350091C(v36, (uint64_t)v69, type metadata accessor for NWActorSystemProtobuf_Reply.Error);
        char v43 = sub_183501498(v22, v42);
        sub_183500984((uint64_t)v42, type metadata accessor for NWActorSystemProtobuf_Reply.Error);
        sub_183138A24((uint64_t)v25, &qword_1E8F63248);
        sub_183138A24((uint64_t)v27, &qword_1E8F63248);
        sub_183500984((uint64_t)v22, type metadata accessor for NWActorSystemProtobuf_Reply.Error);
        sub_183138A24((uint64_t)v18, &qword_1E8F63248);
        uint64_t v39 = v66;
        if ((v43 & 1) == 0) {
          goto LABEL_23;
        }
        goto LABEL_12;
      }
      sub_183138A24((uint64_t)v25, &qword_1E8F63248);
      sub_183138A24((uint64_t)v27, &qword_1E8F63248);
      sub_183500984((uint64_t)v22, type metadata accessor for NWActorSystemProtobuf_Reply.Error);
    }
    uint64_t v40 = &qword_1E8F63258;
    uint64_t v41 = (uint64_t)v18;
LABEL_22:
    sub_183138A24(v41, v40);
    goto LABEL_23;
  }
  return v32 & 1;
}

uint64_t sub_1835012E8(void *a1, void *a2)
{
  if (*a1 == *a2)
  {
    uint64_t v2 = (char *)a1 + *(int *)(type metadata accessor for NWActorSystemProtobuf_Reply.Metrics(0) + 20);
    uint64_t v3 = sub_183D446BC();
    v12[1] = v12;
    uint64_t v4 = *(void **)(v3 - 8);
    uint64_t v5 = v4[8];
    MEMORY[0x1F4188790](v3);
    unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v7 = (uint64_t (*)(char *, char *, uint64_t))v4[2];
    uint64_t v8 = v7((char *)v12 - v6, v2, v3);
    MEMORY[0x1F4188790](v8);
    ((void (*)(char *))v7)((char *)v12 - v6);
    sub_1835008D0();
    char v9 = sub_183D44ACC();
    uint64_t v10 = (void (*)(char *, uint64_t))v4[1];
    v10((char *)v12 - v6, v3);
    v10((char *)v12 - v6, v3);
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_183501498(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  if (*((unsigned char *)a2 + 8) == 1)
  {
    switch(v4)
    {
      case 1:
        if (v3 == 1) {
          goto LABEL_6;
        }
        goto LABEL_17;
      case 2:
        if (v3 == 2) {
          goto LABEL_6;
        }
        goto LABEL_17;
      case 3:
        if (v3 == 3) {
          goto LABEL_6;
        }
        goto LABEL_17;
      case 4:
        if (v3 == 4) {
          goto LABEL_6;
        }
        goto LABEL_17;
      case 5:
        if (v3 != 5) {
          goto LABEL_17;
        }
        goto LABEL_6;
      default:
        if (!v3) {
          goto LABEL_6;
        }
        goto LABEL_17;
    }
  }
  if (v3 != v4) {
    goto LABEL_17;
  }
LABEL_6:
  if ((sub_1835148A8(a1[2], a2[2]) & 1) == 0)
  {
LABEL_17:
    char v12 = 0;
    return v12 & 1;
  }
  uint64_t v5 = (char *)a1 + *(int *)(type metadata accessor for NWActorSystemProtobuf_Reply.Error(0) + 24);
  uint64_t v6 = sub_183D446BC();
  v15[1] = v15;
  uint64_t v7 = *(void **)(v6 - 8);
  uint64_t v8 = v7[8];
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = (uint64_t (*)(char *, char *, uint64_t))v7[2];
  uint64_t v11 = v10((char *)v15 - v9, v5, v6);
  MEMORY[0x1F4188790](v11);
  ((void (*)(char *))v10)((char *)v15 - v9);
  sub_1835008D0();
  char v12 = sub_183D44ACC();
  uint64_t v13 = (void (*)(char *, uint64_t))v7[1];
  v13((char *)v15 - v9, v6);
  v13((char *)v15 - v9, v6);
  return v12 & 1;
}

unint64_t sub_1835016DC()
{
  unint64_t result = qword_1E8F63270;
  if (!qword_1E8F63270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63270);
  }
  return result;
}

uint64_t *sub_183501730(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    unint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_183D446BC();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_183501828(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_183D446BC();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1835018A8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_183D446BC();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

void *sub_183501950(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_183D446BC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_183501A0C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_183D446BC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *sub_183501A88(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_183D446BC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_183501B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_183501B38);
}

uint64_t sub_183501B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_183D446BC();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_183501BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_183501BFC);
}

uint64_t sub_183501BFC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_183D446BC();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_183501CA4()
{
  return sub_183504CB8();
}

uint64_t *sub_183501CB4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[4];
    uint64_t v10 = a2[6];
    a1[5] = a2[5];
    a1[6] = v10;
    uint64_t v11 = *(int *)(a3 + 36);
    unint64_t v27 = (char *)a2 + v11;
    uint64_t v28 = (char *)a1 + v11;
    a1[4] = v9;
    uint64_t v12 = sub_183D446BC();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v28, v27, v12);
    uint64_t v14 = *(int *)(a3 + 40);
    uint64_t v15 = (uint64_t *)((char *)v4 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = type metadata accessor for NWActorSystemProtobuf_ActorID(0);
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63228);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v21 = v16[1];
      *uint64_t v15 = *v16;
      v15[1] = v21;
      uint64_t v22 = v16[3];
      void v15[2] = v16[2];
      v15[3] = v22;
      uint64_t v23 = *(int *)(v17 + 24);
      uint64_t v24 = (char *)v15 + v23;
      uint64_t v25 = (char *)v16 + v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13(v24, v25, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  return v4;
}

uint64_t sub_183501EDC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_183D446BC();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v10(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 40);
  uint64_t v7 = type metadata accessor for NWActorSystemProtobuf_ActorID(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + *(int *)(v7 + 24);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v5);
  }
  return result;
}

void *sub_183502010(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[6];
  a1[5] = a2[5];
  a1[6] = v9;
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v25 = (char *)a2 + v10;
  uint64_t v26 = (char *)a1 + v10;
  a1[4] = v8;
  uint64_t v11 = sub_183D446BC();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v26, v25, v11);
  uint64_t v13 = *(int *)(a3 + 40);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = type metadata accessor for NWActorSystemProtobuf_ActorID(0);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63228);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v19 = v15[1];
    void *v14 = *v15;
    v14[1] = v19;
    uint64_t v20 = v15[3];
    void v14[2] = v15[2];
    v14[3] = v20;
    uint64_t v21 = *(int *)(v16 + 24);
    uint64_t v22 = (char *)v14 + v21;
    uint64_t v23 = (char *)v15 + v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v22, v23, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

void *sub_1835021E8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_183D446BC();
  uint64_t v24 = *(void *)(v9 - 8);
  uint64_t v25 = v9;
  uint64_t v10 = *(void (**)(char *, char *))(v24 + 24);
  v10(v7, v8);
  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for NWActorSystemProtobuf_ActorID(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      *uint64_t v12 = *v13;
      v12[1] = v13[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      void v12[2] = v13[2];
      uint64_t v12[3] = v13[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t))v10)((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v25);
      return a1;
    }
    sub_183500984((uint64_t)v12, type metadata accessor for NWActorSystemProtobuf_ActorID);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63228);
    memcpy(v12, v13, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  void v12[2] = v13[2];
  uint64_t v12[3] = v13[3];
  uint64_t v18 = *(int *)(v14 + 24);
  uint64_t v19 = (char *)v12 + v18;
  uint64_t v20 = (char *)v13 + v18;
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21(v19, v20, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1835024C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = sub_183D446BC();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = (_OWORD *)(a1 + v12);
  uint64_t v14 = (_OWORD *)(a2 + v12);
  uint64_t v15 = type metadata accessor for NWActorSystemProtobuf_ActorID(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63228);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    long long v18 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v18;
    v11((char *)v13 + *(int *)(v15 + 24), (char *)v14 + *(int *)(v15 + 24), v10);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

void *sub_183502648(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_183D446BC();
  uint64_t v25 = *(void *)(v11 - 8);
  uint64_t v26 = v11;
  uint64_t v12 = *(void (**)(char *, char *))(v25 + 40);
  v12(v9, v10);
  uint64_t v13 = *(int *)(a3 + 40);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = type metadata accessor for NWActorSystemProtobuf_ActorID(0);
  uint64_t v17 = *(void *)(v16 - 8);
  long long v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  LODWORD(v10) = v18(v14, 1, v16);
  int v19 = v18(v15, 1, v16);
  if (!v10)
  {
    if (!v19)
    {
      uint64_t v23 = v15[1];
      void *v14 = *v15;
      v14[1] = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = v15[3];
      void v14[2] = v15[2];
      v14[3] = v24;
      swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t))v12)((char *)v14 + *(int *)(v16 + 24), (char *)v15 + *(int *)(v16 + 24), v26);
      return a1;
    }
    sub_183500984((uint64_t)v14, type metadata accessor for NWActorSystemProtobuf_ActorID);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63228);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  long long v20 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v20;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))((char *)v14 + *(int *)(v16 + 24), (char *)v15 + *(int *)(v16 + 24), v26);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  return a1;
}

uint64_t sub_1835028A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1835028B8);
}

uint64_t sub_1835028B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_183D446BC();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63228);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1835029E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1835029FC);
}

uint64_t sub_1835029FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_183D446BC();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63228);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_183502B2C()
{
  sub_183D446BC();
  if (v0 <= 0x3F)
  {
    sub_18350421C(319, &qword_1E8F63298, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_ActorID);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_183502C3C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[2];
    unint64_t v9 = a2[3];
    swift_bridgeObjectRetain();
    sub_1832E5D6C(v8, v9);
    a1[2] = v8;
    a1[3] = v9;
    uint64_t v10 = a3[6];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_183D446BC();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    v14(v11, v12, v13);
    uint64_t v15 = a3[7];
    uint64_t v16 = (uint64_t *)((char *)a1 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = type metadata accessor for NWActorSystemProtobuf_Reply.Error(0);
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63248);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      *uint64_t v16 = *v17;
      *((unsigned char *)v16 + 8) = *((unsigned char *)v17 + 8);
      void v16[2] = v17[2];
      uint64_t v22 = *(int *)(v18 + 24);
      uint64_t v23 = v14;
      uint64_t v24 = (char *)v16 + v22;
      uint64_t v25 = (char *)v17 + v22;
      swift_bridgeObjectRetain();
      uint64_t v26 = v24;
      uint64_t v14 = v23;
      v23(v26, v25, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    uint64_t v27 = a3[8];
    uint64_t v28 = (uint64_t *)((char *)a1 + v27);
    uint64_t v29 = (uint64_t *)((char *)a2 + v27);
    uint64_t v30 = type metadata accessor for NWActorSystemProtobuf_Reply.Metrics(0);
    uint64_t v31 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63240);
      memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      *uint64_t v28 = *v29;
      v14((char *)v28 + *(int *)(v30 + 20), (char *)v29 + *(int *)(v30 + 20), v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
  }
  return a1;
}

uint64_t sub_183502F44(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  sub_1832E5E9C(*(void *)(a1 + 16), *(void *)(a1 + 24));
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_183D446BC();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v12(v4, v5);
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = type metadata accessor for NWActorSystemProtobuf_Reply.Error(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v12(v6 + *(int *)(v7 + 24), v5);
  }
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = type metadata accessor for NWActorSystemProtobuf_Reply.Metrics(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    uint64_t v11 = v8 + *(int *)(v9 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v5);
  }
  return result;
}

void *sub_1835030D4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[2];
  unint64_t v8 = a2[3];
  swift_bridgeObjectRetain();
  sub_1832E5D6C(v7, v8);
  a1[2] = v7;
  a1[3] = v8;
  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_183D446BC();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  v13(v10, v11, v12);
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = type metadata accessor for NWActorSystemProtobuf_Reply.Error(0);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63248);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    *uint64_t v15 = *v16;
    *((unsigned char *)v15 + 8) = *((unsigned char *)v16 + 8);
    void v15[2] = v16[2];
    uint64_t v20 = *(int *)(v17 + 24);
    uint64_t v21 = v13;
    uint64_t v22 = (char *)v15 + v20;
    uint64_t v23 = (char *)v16 + v20;
    swift_bridgeObjectRetain();
    uint64_t v24 = v22;
    uint64_t v13 = v21;
    v21(v24, v23, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v25 = a3[8];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v28 = type metadata accessor for NWActorSystemProtobuf_Reply.Metrics(0);
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63240);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    *uint64_t v26 = *v27;
    v13((char *)v26 + *(int *)(v28 + 20), (char *)v27 + *(int *)(v28 + 20), v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  return a1;
}

void *sub_18350338C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  sub_1832E5D6C(v6, v7);
  uint64_t v8 = a1[2];
  unint64_t v9 = a1[3];
  a1[2] = v6;
  a1[3] = v7;
  sub_1832E5E9C(v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_183D446BC();
  uint64_t v40 = *(void *)(v13 - 8);
  uint64_t v41 = v13;
  uint64_t v39 = *(void (**)(char *, char *))(v40 + 24);
  v39(v11, v12);
  uint64_t v42 = a3;
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = (uint64_t)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for NWActorSystemProtobuf_Reply.Error(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19((uint64_t)v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      uint64_t v22 = *(void *)v16;
      *(unsigned char *)(v15 + 8) = v16[8];
      *(void *)uint64_t v15 = v22;
      *(void *)(v15 + 16) = *((void *)v16 + 2);
      uint64_t v23 = *(int *)(v17 + 24);
      uint64_t v24 = v15 + v23;
      uint64_t v25 = &v16[v23];
      uint64_t v26 = *(void (**)(uint64_t, char *, uint64_t))(v40 + 16);
      swift_bridgeObjectRetain();
      v26(v24, v25, v41);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    sub_183500984(v15, type metadata accessor for NWActorSystemProtobuf_Reply.Error);
LABEL_6:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63248);
    memcpy((void *)v15, v16, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v38 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = v16[8];
  *(void *)uint64_t v15 = v38;
  *(void *)(v15 + 16) = *((void *)v16 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t, char *, uint64_t))v39)(v15 + *(int *)(v17 + 24), &v16[*(int *)(v17 + 24)], v41);
LABEL_7:
  uint64_t v28 = *(int *)(v42 + 32);
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  uint64_t v31 = type metadata accessor for NWActorSystemProtobuf_Reply.Metrics(0);
  uint64_t v32 = *(void *)(v31 - 8);
  char v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      *uint64_t v29 = *v30;
      ((void (*)(char *, char *, uint64_t))v39)((char *)v29 + *(int *)(v31 + 20), (char *)v30 + *(int *)(v31 + 20), v41);
      return a1;
    }
    sub_183500984((uint64_t)v29, type metadata accessor for NWActorSystemProtobuf_Reply.Metrics);
    goto LABEL_12;
  }
  if (v35)
  {
LABEL_12:
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63240);
    memcpy(v29, v30, *(void *)(*(void *)(v36 - 8) + 64));
    return a1;
  }
  *uint64_t v29 = *v30;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))((char *)v29 + *(int *)(v31 + 20), (char *)v30 + *(int *)(v31 + 20), v41);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  return a1;
}

_OWORD *sub_183503774(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_183D446BC();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for NWActorSystemProtobuf_Reply.Error(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63248);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *uint64_t v13 = *v14;
    *((unsigned char *)v13 + 8) = *((unsigned char *)v14 + 8);
    void v13[2] = v14[2];
    v11((char *)v13 + *(int *)(v15 + 24), (char *)v14 + *(int *)(v15 + 24), v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  int v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = type metadata accessor for NWActorSystemProtobuf_Reply.Metrics(0);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63240);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    *uint64_t v19 = *v20;
    v11((char *)v19 + *(int *)(v21 + 20), (char *)v20 + *(int *)(v21 + 20), v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

void *sub_1835039F0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a1[2];
  unint64_t v8 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_1832E5E9C(v7, v8);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_183D446BC();
  uint64_t v33 = *(void *)(v12 - 8);
  uint64_t v34 = v12;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v33 + 40);
  v32(v10, v11);
  uint64_t v35 = a3;
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = (uint64_t)a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = type metadata accessor for NWActorSystemProtobuf_Reply.Error(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      *(void *)uint64_t v14 = *(void *)v15;
      *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
      *(void *)(v14 + 16) = *(void *)(v15 + 16);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v14 + *(int *)(v16 + 24), v15 + *(int *)(v16 + 24), v34);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    sub_183500984(v14, type metadata accessor for NWActorSystemProtobuf_Reply.Error);
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63248);
    memcpy((void *)v14, (const void *)v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t, uint64_t))v32)(v14 + *(int *)(v16 + 24), v15 + *(int *)(v16 + 24), v34);
LABEL_7:
  uint64_t v22 = *(int *)(v35 + 32);
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = type metadata accessor for NWActorSystemProtobuf_Reply.Metrics(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      *uint64_t v23 = *v24;
      ((void (*)(char *, char *, uint64_t))v32)((char *)v23 + *(int *)(v25 + 20), (char *)v24 + *(int *)(v25 + 20), v34);
      return a1;
    }
    sub_183500984((uint64_t)v23, type metadata accessor for NWActorSystemProtobuf_Reply.Metrics);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63240);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  *uint64_t v23 = *v24;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))((char *)v23 + *(int *)(v25 + 20), (char *)v24 + *(int *)(v25 + 20), v34);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

uint64_t sub_183503DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_183503DB8);
}

uint64_t sub_183503DB8(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_183D446BC();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[6];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63248);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_9;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63240);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[8];

  return v15(v17, a2, v16);
}

uint64_t sub_183503F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_183503F4C);
}

uint64_t sub_183503F4C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_183D446BC();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63248);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_7;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63240);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[8];

  return v15(v17, a2, a2, v16);
}

void sub_1835040CC()
{
  sub_183D446BC();
  if (v0 <= 0x3F)
  {
    sub_18350421C(319, &qword_1E8F632B0, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_Reply.Error);
    if (v1 <= 0x3F)
    {
      sub_18350421C(319, &qword_1E8F632B8, (void (*)(uint64_t))type metadata accessor for NWActorSystemProtobuf_Reply.Metrics);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_18350421C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_183D4536C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *sub_183504270(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_183D446BC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_18350433C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_183D446BC();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *sub_1835043A4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_183D446BC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_183504420(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_183D446BC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_18350449C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_183D446BC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_183504518(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_183D446BC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_183504594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1835045A8);
}

uint64_t sub_1835045A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_183D446BC();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_183504618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_18350462C);
}

uint64_t sub_18350462C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_183D446BC();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_1835046A0()
{
  uint64_t result = sub_183D446BC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_18350473C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_183D446BC();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_183504834(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_183D446BC();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_1835048AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_183D446BC();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t sub_183504954(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = sub_183D446BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_1835049F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_183D446BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_183504A84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_183D446BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_183504B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_183504B34);
}

uint64_t sub_183504B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_183D446BC();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_183504BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_183504BF8);
}

uint64_t sub_183504BF8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_183D446BC();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_183504CA0()
{
  return sub_183504CB8();
}

uint64_t sub_183504CB8()
{
  uint64_t result = sub_183D446BC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for NWActorSystemProtobuf_Reply.Error.TypeEnum()
{
  return &type metadata for NWActorSystemProtobuf_Reply.Error.TypeEnum;
}

unint64_t sub_183504D5C()
{
  unint64_t result = qword_1E8F632E0;
  if (!qword_1E8F632E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F632E0);
  }
  return result;
}

unint64_t sub_183504DB4()
{
  unint64_t result = qword_1E8F632E8;
  if (!qword_1E8F632E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E8F632F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F632E8);
  }
  return result;
}

unint64_t sub_183504E14()
{
  unint64_t result = qword_1E8F632F8;
  if (!qword_1E8F632F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F632F8);
  }
  return result;
}

unint64_t sub_183504E6C()
{
  unint64_t result = qword_1E8F63300;
  if (!qword_1E8F63300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63300);
  }
  return result;
}

uint64_t sub_183504ED4()
{
  sub_183504F30(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WeakDistributedActor()
{
  return self;
}

uint64_t sub_183504F30(uint64_t a1)
{
  return a1;
}

uint64_t static NWDiscoverableActor.connectionParameters.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t static NWDiscoverableActor<>.discover(using:target:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a2;
  uint64_t v21 = a1;
  uint64_t v6 = type metadata accessor for NWActorDiscoveryMechanism(0);
  uint64_t v7 = (int *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a4 + 16))(&v22, a3, a4);
  long long v19 = v22;
  uint64_t v10 = v23;
  uint64_t v11 = v24;
  char v12 = v25;
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  sub_1835050E0(v20, (uint64_t)v9);
  uint64_t v15 = &v9[v7[7]];
  *(_OWORD *)uint64_t v15 = v19;
  *((void *)v15 + 2) = v10;
  *((void *)v15 + 3) = v11;
  v15[32] = v12;
  *(void *)&v9[v7[8]] = v13;
  *(void *)&v9[v7[9]] = v14;
  static DistributedActor<>.discover(_:using:)((uint64_t)v9, v21);
  uint64_t v17 = v16;
  sub_183505144((uint64_t)v9);
  return v17;
}

uint64_t sub_1835050E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWActorDiscoveryMechanism.Target(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_183505144(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NWActorDiscoveryMechanism(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of static NWDiscoverableActor.browseDescriptor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static NWDiscoverableActor.browsingParameters.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static NWDiscoverableActor.connectionParameters.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1835051DC()
{
  uint64_t v0 = sub_183D4498C();
  __swift_allocate_value_buffer(v0, qword_1E8F63308);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E8F63308);
  if (qword_1E8F621C0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1E8F7A940);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1835052A4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63348);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2(a1, a1[3]);
  sub_18350776C();
  sub_183D45C0C();
  LOBYTE(v12) = 0;
  sub_183D4584C();
  if (!v2)
  {
    long long v12 = *(_OWORD *)(v3 + 16);
    char v11 = 1;
    sub_1832E478C();
    sub_183D4586C();
    long long v12 = *(_OWORD *)(v3 + 32);
    char v11 = 2;
    sub_183D4586C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_18350545C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = a4;
  uint64_t v15 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63360);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2(a1, a1[3]);
  sub_183507AD0();
  sub_183D45C0C();
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  char v18 = 0;
  sub_1832E478C();
  sub_183D4586C();
  if (!v5)
  {
    uint64_t v16 = v14;
    uint64_t v17 = v15;
    char v18 = 1;
    sub_183D4586C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1835055FC()
{
  uint64_t v1 = 0x7550726576726573;
  if (*v0 != 1) {
    uint64_t v1 = 0x7550746E65696C63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x4449746567726174;
  }
}

uint64_t sub_183505670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_183508188(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_183505698(uint64_t a1)
{
  unint64_t v2 = sub_18350776C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1835056D4(uint64_t a1)
{
  unint64_t v2 = sub_18350776C();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_183505710@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1835077C0(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_183505754(void *a1)
{
  return sub_1835052A4(a1);
}

uint64_t sub_18350576C()
{
  if (*v0) {
    return 0x7550746E65696C63;
  }
  else {
    return 0x7550726576726573;
  }
}

uint64_t sub_1835057AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_183508320(a1, a2);
  *a3 = result;
  return result;
}

void sub_1835057D4(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1835057E0(uint64_t a1)
{
  unint64_t v2 = sub_183507AD0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_18350581C(uint64_t a1)
{
  unint64_t v2 = sub_183507AD0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_183505858@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_183507B24(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_183505888(void *a1)
{
  return sub_18350545C(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1835058A8(char a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61DC0);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 16) = 0;
  *(void *)(v3 + 16) = v7;
  *(_WORD *)(v3 + 24) = 0;
  *(void *)(v3 + 64) = 0;
  *(void *)(v3 + 72) = 0;
  *(void *)(v3 + 48) = a3;
  *(void *)(v3 + 56) = 0;
  *(void *)(v3 + 40) = a2;
  id v8 = objc_allocWithZone((Class)NWRPFileTransferSession);
  swift_retain();
  char v9 = a1 & 1;
  id v10 = objc_msgSend(v8, sel_initAsTarget_, a1 & 1);
  *(void *)(v3 + 32) = v10;
  if (a1)
  {
    uint64_t v11 = swift_allocObject();
    swift_weakInit();
    uint64_t v23 = sub_1835071B0;
    uint64_t v24 = v11;
    uint64_t v19 = MEMORY[0x1E4F143A8];
    uint64_t v20 = 1107296256;
    uint64_t v21 = sub_183505BAC;
    long long v22 = &block_descriptor_12;
    long long v12 = _Block_copy(&v19);
    id v13 = v10;
    swift_release();
    objc_msgSend(v13, sel_setReceivedFileHandler_, v12);
    _Block_release(v12);

    id v10 = *(id *)(v3 + 32);
  }
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = v9;
  *(void *)(v15 + 24) = v14;
  uint64_t v23 = sub_1835071A4;
  uint64_t v24 = v15;
  uint64_t v19 = MEMORY[0x1E4F143A8];
  uint64_t v20 = 1107296256;
  uint64_t v21 = sub_183137440;
  long long v22 = &block_descriptor_8;
  uint64_t v16 = _Block_copy(&v19);
  id v17 = v10;
  swift_release();
  objc_msgSend(v17, sel_setCompletionHandler_, v16);
  swift_release();
  _Block_release(v16);

  return v3;
}

uint64_t sub_183505AFC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(result + 64);
    if (v5)
    {
      sub_18315ED5C(*(void *)(result + 64));
      swift_release();
      v5(a1, a2);
      return sub_18313D870((uint64_t)v5);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_183505BAC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  uint64_t v2 = sub_183D44AFC();
  uint64_t v4 = v3;
  swift_retain();
  v1(v2, v4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_183505C18(char a1)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_183505D14();
      return swift_release();
    }
  }
  else
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_183506160();
      MEMORY[0x1F4188790](v2);
      uint64_t v4 = v3 + 4;
      os_unfair_lock_lock(v3 + 4);
      sub_1835071D4(v5);
      os_unfair_lock_unlock(v4);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_183505D14()
{
  uint64_t v1 = v0;
  if (qword_1E8F620F0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_183D4498C();
  __swift_project_value_buffer(v2, (uint64_t)qword_1E8F63308);
  uint64_t v3 = sub_183D4496C();
  os_log_type_t v4 = sub_183D452BC();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1830D4000, v3, v4, "Invalidating file transfer session", v5, 2u);
    MEMORY[0x185318E50](v5, -1, -1);
  }

  return (*(uint64_t (**)(id))(v1 + 40))(objc_msgSend(*(id *)(v1 + 32), sel_invalidate));
}

void sub_183505E0C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  if (a2)
  {
    uint64_t v7 = *(void **)(v5 + 32);
    id v8 = (void *)sub_183D44AEC();
    objc_msgSend(v7, sel_setTargetID_, v8);
  }
  if (a4 >> 60 != 15)
  {
    char v9 = *(void **)(v5 + 32);
    id v10 = (void *)sub_183D4452C();
    objc_msgSend(v9, sel_setPeerPublicKey_, v10);
  }
  MEMORY[0x1F4188790](a1);
  long long v12 = v11 + 4;
  os_unfair_lock_lock(v11 + 4);
  sub_18350845C(&v13);
  os_unfair_lock_unlock(v12);
  if (v13 == 1) {
    sub_183505FD4();
  }
}

id sub_183505F20@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = *(void **)(a1 + 32);
  id result = objc_msgSend(v4, sel_targetID);
  if (result
    && (result, (id result = objc_msgSend(v4, sel_peerPublicKey)) != 0))
  {
    uint64_t v6 = result;
    uint64_t v7 = sub_183D4453C();
    unint64_t v9 = v8;

    id result = (id)sub_1832E5E9C(v7, v9);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
  }
  *(unsigned char *)(a1 + 24) = v10;
  *a2 = *(unsigned char *)(a1 + 25);
  return result;
}

void sub_183505FD4()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  sub_1834F277C(&v2);
  os_unfair_lock_unlock(v1);
  if (v2 == 1) {
    objc_msgSend(*(id *)(v0 + 32), sel_activate);
  }
}

uint64_t sub_18350605C(uint64_t a1)
{
  sub_183506160();
  uint64_t v3 = *(void **)(v1 + 32);
  uint64_t v4 = (void *)sub_183D4441C();
  v7[4] = sub_183506BDC;
  v7[5] = a1;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 1107296256;
  v7[2] = sub_183506618;
  v7[3] = &block_descriptor_4;
  uint64_t v5 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_transferFileURL_completion_, v4, v5);
  _Block_release(v5);

  LOBYTE(v7[0]) = 0;
  return sub_1835B5EA0((unsigned __int8 *)v7);
}

void sub_183506160()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  sub_1834F0668(&v2);
  os_unfair_lock_unlock(v1);
  if (v2)
  {
    swift_retain();
    sub_183D4506C();
    swift_release_n();
  }
}

uint64_t sub_183506204(id a1)
{
  if (a1)
  {
    id v2 = a1;
    if (qword_1E8F620F0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_183D4498C();
    __swift_project_value_buffer(v3, (uint64_t)qword_1E8F63308);
    swift_retain();
    id v4 = a1;
    swift_retain();
    id v5 = a1;
    uint64_t v6 = sub_183D4496C();
    os_log_type_t v7 = sub_183D4529C();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v23 = v9;
      *(_DWORD *)uint64_t v8 = 136315394;
      swift_retain();
      uint64_t v10 = sub_183D44B9C();
      sub_1834EFE70(v10, v11, &v23);
      sub_183D453AC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      id v12 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63CE0);
      uint64_t v13 = sub_183D44B9C();
      sub_1834EFE70(v13, v14, &v23);
      sub_183D453AC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1830D4000, v6, v7, "%s failed to transfer: %s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x185318E50](v9, -1, -1);
      MEMORY[0x185318E50](v8, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    if (qword_1E8F620F0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_183D4498C();
    __swift_project_value_buffer(v15, (uint64_t)qword_1E8F63308);
    swift_retain_n();
    uint64_t v16 = sub_183D4496C();
    os_log_type_t v17 = sub_183D452BC();
    if (os_log_type_enabled(v16, v17))
    {
      char v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v23 = v19;
      *(_DWORD *)char v18 = 136315138;
      swift_retain();
      uint64_t v20 = sub_183D44B9C();
      sub_1834EFE70(v20, v21, &v23);
      sub_183D453AC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1830D4000, v16, v17, "%s transferred successfully", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x185318E50](v19, -1, -1);
      MEMORY[0x185318E50](v18, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
  return sub_1835B5958(a1);
}

void sub_183506618(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_183506684(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63038);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_183D44FAC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = 0;
  v6[3] = 0;
  void v6[4] = a1;
  swift_retain();
  *(void *)(a1 + 56) = sub_18353C19C((uint64_t)v4, (uint64_t)&unk_1E8F63328, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_183506798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = sub_183D4562C();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_183506858, 0, 0);
}

uint64_t sub_183506858()
{
  sub_183D4561C();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1E8F63330 + dword_1E8F63330);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_183506920;
  return v3(0x43561A8829300000, 16, 0, 0, 1);
}

uint64_t sub_183506920()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 40);
  uint64_t v3 = *(void *)(*(void *)v1 + 32);
  uint64_t v4 = *(void *)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_183506AF8;
  }
  else {
    uint64_t v5 = sub_183506A90;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_183506A90()
{
  sub_183505D14();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_183506AF8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_183506B60()
{
  swift_release();

  swift_release();
  swift_release();
  sub_18313D870(*(void *)(v0 + 64));

  return swift_deallocClassInstance();
}

uint64_t _s19FileTransferSessionCMa()
{
  return self;
}

uint64_t sub_183506BDC(void *a1)
{
  return sub_183506204(a1);
}

uint64_t sub_183506BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_183D4560C();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return MEMORY[0x1F4188298](sub_183506CE8, 0, 0);
}

uint64_t sub_183506CE8()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_183D4562C();
  uint64_t v5 = sub_1835072E4(&qword_1E8F63338, MEMORY[0x1E4FBD1A8]);
  sub_183D45A5C();
  sub_1835072E4(&qword_1E8F63340, MEMORY[0x1E4FBD178]);
  sub_183D4563C();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_183506E88;
  uint64_t v8 = v0[11];
  return MEMORY[0x1F4188178](v8, v0 + 2, v4, v5);
}

uint64_t sub_183506E88()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_183507044, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_183507044()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1835070B0(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  *(void *)(v1 + 56) = 0;
  *a1 = v2;
}

void *sub_1835070C0@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X1>, void *a2@<X8>)
{
  id result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

void sub_183507104(unsigned char *a1@<X8>)
{
  *(unsigned char *)(v1 + 25) = 1;
  *a1 = *(unsigned char *)(v1 + 24);
}

id sub_183507118@<X0>(unsigned char *a1@<X8>)
{
  return sub_183505F20(v1, a1);
}

uint64_t sub_183507134()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_18350716C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1835071A4()
{
  return sub_183505C18(*(unsigned char *)(v0 + 16));
}

uint64_t sub_1835071B0(uint64_t a1, uint64_t a2)
{
  return sub_183505AFC(a1, a2);
}

uint64_t sub_1835071B8()
{
  return sub_183506684(v0);
}

uint64_t sub_1835071D4(uint64_t a1)
{
  return sub_1834EFDAC(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1835071F0()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_183507230(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1834B5EB0;
  return sub_183506798(a1, v4, v5, v6);
}

uint64_t sub_1835072E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s20FileTransferResponseVwxx(uint64_t *a1)
{
  sub_1832E5E9C(*a1, a1[1]);
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];

  return sub_1832E5E9C(v2, v3);
}

uint64_t *_s20FileTransferResponseVwcp(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1832E5D6C(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v7 = a2[2];
  unint64_t v6 = a2[3];
  sub_1832E5D6C(v7, v6);
  a1[2] = v7;
  a1[3] = v6;
  return a1;
}

uint64_t *_s20FileTransferResponseVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1832E5D6C(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1832E5E9C(v6, v7);
  uint64_t v9 = a2[2];
  unint64_t v8 = a2[3];
  sub_1832E5D6C(v9, v8);
  uint64_t v10 = a1[2];
  unint64_t v11 = a1[3];
  a1[2] = v9;
  a1[3] = v8;
  sub_1832E5E9C(v10, v11);
  return a1;
}

uint64_t *_s20FileTransferResponseVwta(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1832E5E9C(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_1832E5E9C(v6, v7);
  return a1;
}

uint64_t _s20FileTransferResponseVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s20FileTransferResponseVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *_s20FileTransferResponseVMa()
{
  return &_s20FileTransferResponseVN;
}

uint64_t _s19FileTransferRequestVwxx(void *a1)
{
  swift_bridgeObjectRelease();
  sub_1832E5E9C(a1[2], a1[3]);
  uint64_t v2 = a1[4];
  unint64_t v3 = a1[5];

  return sub_1832E5E9C(v2, v3);
}

void *_s19FileTransferRequestVwcp(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  swift_bridgeObjectRetain();
  sub_1832E5D6C(v5, v6);
  a1[2] = v5;
  a1[3] = v6;
  uint64_t v8 = a2[4];
  unint64_t v7 = a2[5];
  sub_1832E5D6C(v8, v7);
  a1[4] = v8;
  a1[5] = v7;
  return a1;
}

void *_s19FileTransferRequestVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  sub_1832E5D6C(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  a1[2] = v4;
  a1[3] = v5;
  sub_1832E5E9C(v6, v7);
  uint64_t v9 = a2[4];
  unint64_t v8 = a2[5];
  sub_1832E5D6C(v9, v8);
  uint64_t v10 = a1[4];
  unint64_t v11 = a1[5];
  a1[4] = v9;
  a1[5] = v8;
  sub_1832E5E9C(v10, v11);
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *_s19FileTransferRequestVwta(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1[2];
  unint64_t v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_1832E5E9C(v5, v6);
  uint64_t v7 = a1[4];
  unint64_t v8 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  sub_1832E5E9C(v7, v8);
  return a1;
}

uint64_t _s19FileTransferRequestVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s19FileTransferRequestVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s19FileTransferRequestVMa()
{
  return &_s19FileTransferRequestVN;
}

unint64_t sub_18350776C()
{
  unint64_t result = qword_1E8F63350;
  if (!qword_1E8F63350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63350);
  }
  return result;
}

uint64_t sub_1835077C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63358);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2(a1, a1[3]);
  sub_18350776C();
  sub_183D45BCC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2((uint64_t)a1);
  }
  LOBYTE(v25) = 0;
  uint64_t v9 = sub_183D457BC();
  uint64_t v11 = v10;
  uint64_t v23 = v9;
  char v27 = 1;
  unint64_t v12 = sub_1832E5D18();
  swift_bridgeObjectRetain();
  unint64_t v24 = v12;
  sub_183D457DC();
  uint64_t v22 = v11;
  char v27 = 2;
  uint64_t v13 = v25;
  unint64_t v21 = v26;
  sub_1832E5D6C(v25, v26);
  sub_183D457DC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v14 = v25;
  unint64_t v15 = v26;
  uint64_t v16 = v22;
  swift_bridgeObjectRetain();
  uint64_t v17 = v13;
  uint64_t v18 = v13;
  unint64_t v19 = v21;
  sub_1832E5D6C(v18, v21);
  sub_1832E5D6C(v14, v15);
  sub_1832E5E9C(v17, v19);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_2((uint64_t)a1);
  swift_bridgeObjectRelease();
  sub_1832E5E9C(v17, v19);
  uint64_t result = sub_1832E5E9C(v14, v15);
  *a2 = v23;
  a2[1] = v16;
  a2[2] = v17;
  a2[3] = v19;
  a2[4] = v14;
  a2[5] = v15;
  return result;
}

unint64_t sub_183507AD0()
{
  unint64_t result = qword_1E8F63368;
  if (!qword_1E8F63368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63368);
  }
  return result;
}

uint64_t sub_183507B24(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63370);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_2(a1, v7);
  sub_183507AD0();
  sub_183D45BCC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_2((uint64_t)a1);
  }
  else
  {
    char v14 = 0;
    sub_1832E5D18();
    sub_183D457DC();
    uint64_t v7 = v12;
    unint64_t v9 = v13;
    char v14 = 1;
    sub_1832E5D6C(v12, v13);
    sub_183D457DC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v10 = v12;
    unint64_t v11 = v13;
    sub_1832E5D6C(v7, v9);
    sub_1832E5D6C(v10, v11);
    sub_1832E5E9C(v7, v9);
    __swift_destroy_boxed_opaque_existential_2((uint64_t)a1);
    sub_1832E5E9C(v7, v9);
    sub_1832E5E9C(v10, v11);
  }
  return v7;
}

unsigned char *_s20FileTransferResponseV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x183507E3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s20FileTransferResponseV10CodingKeysOMa()
{
  return &_s20FileTransferResponseV10CodingKeysON;
}

unsigned char *_s19FileTransferRequestV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x183507F40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s19FileTransferRequestV10CodingKeysOMa()
{
  return &_s19FileTransferRequestV10CodingKeysON;
}

unint64_t sub_183507F7C()
{
  unint64_t result = qword_1E8F63378;
  if (!qword_1E8F63378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63378);
  }
  return result;
}

unint64_t sub_183507FD4()
{
  unint64_t result = qword_1E8F63380;
  if (!qword_1E8F63380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63380);
  }
  return result;
}

unint64_t sub_18350802C()
{
  unint64_t result = qword_1E8F63388;
  if (!qword_1E8F63388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63388);
  }
  return result;
}

unint64_t sub_183508084()
{
  unint64_t result = qword_1E8F63390;
  if (!qword_1E8F63390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63390);
  }
  return result;
}

unint64_t sub_1835080DC()
{
  unint64_t result = qword_1E8F63398;
  if (!qword_1E8F63398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63398);
  }
  return result;
}

unint64_t sub_183508134()
{
  unint64_t result = qword_1E8F633A0;
  if (!qword_1E8F633A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F633A0);
  }
  return result;
}

uint64_t sub_183508188(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449746567726174 && a2 == 0xE800000000000000;
  if (v2 || (sub_183D4592C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7550726576726573 && a2 == 0xEF79654B63696C62 || (sub_183D4592C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7550746E65696C63 && a2 == 0xEF79654B63696C62)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_183D4592C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_183508320(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7550726576726573 && a2 == 0xEF79654B63696C62;
  if (v2 || (sub_183D4592C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7550746E65696C63 && a2 == 0xEF79654B63696C62)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_183D4592C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_18350845C@<X0>(unsigned char *a1@<X8>)
{
  return sub_1834F277C(a1);
}

BOOL sub_18350847C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  if (*((unsigned char *)a1 + 8) == 1)
  {
    switch(v2)
    {
      case 1:
        BOOL v5 = v3 == 1;
        goto LABEL_9;
      case 2:
        BOOL v5 = v3 == 2;
        goto LABEL_9;
      case 3:
        BOOL v5 = v3 == 3;
        goto LABEL_9;
      case 4:
        if (v3 <= 3) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        goto LABEL_12;
      default:
        BOOL v5 = v3 == 0;
LABEL_9:
        if (!v5) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
LABEL_12:
        BOOL result = 1;
        break;
    }
  }
  else
  {
    return (*(unsigned char *)(a2 + 8) & 1) == 0 && v2 == v3;
  }
  return result;
}

uint64_t sub_183508518(int a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3 = a2;
  uint64_t v189 = *MEMORY[0x1E4F143B8];
  unint64_t v4 = a3 >> 62;
  unint64_t v5 = a3;
  uint64_t result = 0;
  unint64_t v173 = HIDWORD(a2);
  switch(a3 >> 62)
  {
    case 1uLL:
      if ((a2 ^ (a2 << 32)) >> 32) {
        goto LABEL_12;
      }
      return 0;
    case 2uLL:
      if (*(void *)(a2 + 16) == *(void *)(a2 + 24)) {
        return 0;
      }
      if (v4 != 2) {
        goto LABEL_12;
      }
      uint64_t v9 = *(void *)(a2 + 16);
      uint64_t v8 = *(void *)(a2 + 24);
      BOOL v10 = __OFSUB__(v8, v9);
      uint64_t v7 = v8 - v9;
      if (!v10) {
        goto LABEL_14;
      }
      __break(1u);
LABEL_12:
      LODWORD(v7) = HIDWORD(a2) - a2;
      if (__OFSUB__(HIDWORD(a2), a2)) {
        goto LABEL_446;
      }
      uint64_t v7 = (int)v7;
      goto LABEL_14;
    case 3uLL:
      return result;
    default:
      if ((a3 & 0xFF000000000000) == 0) {
        return 0;
      }
      uint64_t v7 = BYTE6(a3);
LABEL_14:
      if (v7 + 0x4000000000000000 < 0) {
        goto LABEL_443;
      }
      uint64_t v11 = sub_183509FB0(2 * v7);
      unint64_t v13 = v12;
      uLong v14 = 0;
      uint64_t v187 = v11;
      unint64_t v188 = v12;
      BOOL v15 = __OFSUB__(v173, v3);
      BOOL v176 = v15;
      uint64_t v177 = BYTE6(v5);
      unint64_t v178 = v5;
      unint64_t v182 = 0;
      uint64_t v174 = (int)v3;
      uint64_t v175 = (int)v173 - (int)v3;
      uint64_t v172 = v3 >> 32;
      uint64_t v179 = v3;
      int v180 = v4;
LABEL_19:
      strm.next_in = 0;
      strm.avail_in = 0;
      memset(&strm.total_in, 0, 20);
      memset(&strm.total_out, 0, 52);
      strm.adler = 0;
      strm.reserved = 0;
      int v16 = inflateInit2_(&strm, a1, "1.2.12", 112);
      if (v16)
      {
        msg = strm.msg;
LABEL_330:
        uint64_t v163 = sub_183509EDC(v16, (uint64_t)msg);
        char v165 = v164;
        uint64_t v167 = v166;
        uint64_t v169 = v168;
        sub_18350A04C();
        swift_allocError();
        *(void *)uint64_t v170 = v163;
        *(unsigned char *)(v170 + 8) = v165 & 1;
        *(void *)(v170 + 16) = v167;
        *(void *)(v170 + 24) = v169;
        swift_willThrow();
        return sub_1832E5E9C(v187, v188);
      }
      uLong v183 = v14;
      while (2)
      {
        uint64_t v18 = v14 + strm.total_out;
        if (__CFADD__(v14, strm.total_out))
        {
          __break(1u);
LABEL_332:
          __break(1u);
LABEL_333:
          __break(1u);
LABEL_334:
          __break(1u);
LABEL_335:
          __break(1u);
LABEL_336:
          __break(1u);
LABEL_337:
          __break(1u);
LABEL_338:
          __break(1u);
LABEL_339:
          __break(1u);
LABEL_340:
          __break(1u);
LABEL_341:
          __break(1u);
LABEL_342:
          __break(1u);
LABEL_343:
          __break(1u);
LABEL_344:
          __break(1u);
LABEL_345:
          __break(1u);
LABEL_346:
          __break(1u);
LABEL_347:
          __break(1u);
LABEL_348:
          __break(1u);
LABEL_349:
          __break(1u);
LABEL_350:
          __break(1u);
LABEL_351:
          __break(1u);
LABEL_352:
          __break(1u);
LABEL_353:
          __break(1u);
LABEL_354:
          __break(1u);
LABEL_355:
          __break(1u);
LABEL_356:
          __break(1u);
LABEL_357:
          __break(1u);
LABEL_358:
          __break(1u);
LABEL_359:
          __break(1u);
LABEL_360:
          __break(1u);
LABEL_361:
          __break(1u);
LABEL_362:
          __break(1u);
LABEL_363:
          __break(1u);
LABEL_364:
          __break(1u);
LABEL_365:
          __break(1u);
LABEL_366:
          __break(1u);
LABEL_367:
          __break(1u);
LABEL_368:
          __break(1u);
LABEL_369:
          __break(1u);
LABEL_370:
          __break(1u);
LABEL_371:
          __break(1u);
LABEL_372:
          __break(1u);
LABEL_373:
          __break(1u);
LABEL_374:
          __break(1u);
LABEL_375:
          __break(1u);
LABEL_376:
          __break(1u);
LABEL_377:
          __break(1u);
LABEL_378:
          __break(1u);
LABEL_379:
          __break(1u);
LABEL_380:
          __break(1u);
LABEL_381:
          __break(1u);
LABEL_382:
          __break(1u);
LABEL_383:
          __break(1u);
LABEL_384:
          __break(1u);
LABEL_385:
          __break(1u);
LABEL_386:
          __break(1u);
LABEL_387:
          __break(1u);
LABEL_388:
          __break(1u);
LABEL_389:
          __break(1u);
LABEL_390:
          __break(1u);
LABEL_391:
          __break(1u);
LABEL_392:
          __break(1u);
LABEL_393:
          __break(1u);
LABEL_394:
          __break(1u);
LABEL_395:
          __break(1u);
LABEL_396:
          __break(1u);
LABEL_397:
          __break(1u);
LABEL_398:
          __break(1u);
LABEL_399:
          __break(1u);
LABEL_400:
          __break(1u);
LABEL_401:
          __break(1u);
LABEL_402:
          __break(1u);
LABEL_403:
          __break(1u);
LABEL_404:
          __break(1u);
LABEL_405:
          __break(1u);
LABEL_406:
          __break(1u);
LABEL_407:
          __break(1u);
LABEL_408:
          __break(1u);
LABEL_409:
          __break(1u);
LABEL_410:
          __break(1u);
LABEL_411:
          __break(1u);
LABEL_412:
          __break(1u);
LABEL_413:
          __break(1u);
LABEL_414:
          __break(1u);
LABEL_415:
          __break(1u);
LABEL_416:
          __break(1u);
LABEL_417:
          __break(1u);
LABEL_418:
          __break(1u);
LABEL_419:
          __break(1u);
LABEL_420:
          __break(1u);
LABEL_421:
          __break(1u);
LABEL_422:
          __break(1u);
LABEL_423:
          __break(1u);
LABEL_424:
          __break(1u);
LABEL_425:
          __break(1u);
LABEL_426:
          __break(1u);
LABEL_427:
          __break(1u);
LABEL_428:
          __break(1u);
LABEL_429:
          __break(1u);
LABEL_430:
          __break(1u);
LABEL_431:
          __break(1u);
LABEL_432:
          __break(1u);
LABEL_433:
          __break(1u);
          goto LABEL_434;
        }
        if (v18 < 0) {
          goto LABEL_332;
        }
        switch(v13 >> 62)
        {
          case 1uLL:
            LODWORD(v19) = HIDWORD(v11) - v11;
            if (__OFSUB__(HIDWORD(v11), v11)) {
              goto LABEL_335;
            }
            uint64_t v19 = (int)v19;
LABEL_32:
            if (v18 >= v19)
            {
LABEL_33:
              uint64_t v22 = 0;
              switch((int)v4)
              {
                case 1:
                  uint64_t v22 = v175;
                  if (v176) {
                    goto LABEL_355;
                  }
                  goto LABEL_38;
                case 2:
                  uint64_t v24 = *(void *)(v3 + 16);
                  uint64_t v23 = *(void *)(v3 + 24);
                  BOOL v10 = __OFSUB__(v23, v24);
                  uint64_t v22 = v23 - v24;
                  if (!v10) {
                    goto LABEL_38;
                  }
                  goto LABEL_356;
                case 3:
                  goto LABEL_38;
                default:
                  uint64_t v22 = v177;
LABEL_38:
                  uint64_t v25 = 0;
                  switch(v13 >> 62)
                  {
                    case 1uLL:
                      if (__OFSUB__(HIDWORD(v11), v11)) {
                        goto LABEL_357;
                      }
                      uint64_t v25 = HIDWORD(v11) - (int)v11;
LABEL_43:
                      if (v22 >= 0) {
                        uint64_t v28 = v22;
                      }
                      else {
                        uint64_t v28 = v22 + 1;
                      }
                      if (__OFADD__(v25, v28 >> 1)) {
                        goto LABEL_333;
                      }
                      if (v25 + (v28 >> 1) < 0) {
                        goto LABEL_334;
                      }
                      sub_183D444FC();
                      break;
                    case 2uLL:
                      uint64_t v27 = *(void *)(v11 + 16);
                      uint64_t v26 = *(void *)(v11 + 24);
                      BOOL v10 = __OFSUB__(v26, v27);
                      uint64_t v25 = v26 - v27;
                      if (!v10) {
                        goto LABEL_43;
                      }
                      goto LABEL_358;
                    case 3uLL:
                      goto LABEL_43;
                    default:
                      uint64_t v25 = BYTE6(v13);
                      goto LABEL_43;
                  }
                  break;
              }
            }
            unint64_t v29 = 0;
            switch((int)v4)
            {
              case 1:
                unint64_t v29 = v175;
                if (v176) {
                  goto LABEL_337;
                }
                goto LABEL_54;
              case 2:
                uint64_t v31 = *(void *)(v3 + 16);
                uint64_t v30 = *(void *)(v3 + 24);
                unint64_t v29 = v30 - v31;
                if (!__OFSUB__(v30, v31)) {
                  goto LABEL_54;
                }
                goto LABEL_338;
              case 3:
                goto LABEL_54;
              default:
                unint64_t v29 = v177;
LABEL_54:
                uint64_t v11 = v187;
                unint64_t v13 = v188;
                unint64_t v32 = v188 >> 62;
                unint64_t v33 = 0;
                switch(v188 >> 62)
                {
                  case 1uLL:
                    if (__OFSUB__(HIDWORD(v187), v187)) {
                      goto LABEL_339;
                    }
                    unint64_t v33 = HIDWORD(v187) - (int)v187;
                    break;
                  case 2uLL:
                    uint64_t v35 = *(void *)(v187 + 16);
                    uint64_t v34 = *(void *)(v187 + 24);
                    unint64_t v33 = v34 - v35;
                    if (!__OFSUB__(v34, v35)) {
                      goto LABEL_59;
                    }
                    goto LABEL_340;
                  case 3uLL:
                    goto LABEL_59;
                  default:
                    unint64_t v33 = BYTE6(v188);
                    goto LABEL_59;
                }
                break;
            }
            break;
          case 2uLL:
            uint64_t v21 = *(void *)(v11 + 16);
            uint64_t v20 = *(void *)(v11 + 24);
            BOOL v10 = __OFSUB__(v20, v21);
            uint64_t v19 = v20 - v21;
            if (!v10) {
              goto LABEL_32;
            }
            goto LABEL_336;
          case 3uLL:
            goto LABEL_33;
          default:
            uint64_t v19 = BYTE6(v13);
            goto LABEL_32;
        }
LABEL_59:
        uint64_t v181 = v4;
        switch((int)v4)
        {
          case 1:
            if (v172 < v174) {
              goto LABEL_342;
            }
            sub_1832E5D6C(v3, v5);
            uint64_t v53 = sub_183D4434C();
            if (!v53) {
              goto LABEL_100;
            }
            uint64_t v54 = sub_183D4437C();
            if (__OFSUB__(v174, v54)) {
              goto LABEL_360;
            }
            v53 += v174 - v54;
LABEL_100:
            sub_183D4436C();
            unint64_t v55 = v182 + strm.total_in;
            if (__CFADD__(v182, strm.total_in)) {
              goto LABEL_348;
            }
            if (!v53) {
              goto LABEL_449;
            }
            if ((v55 & 0x8000000000000000) != 0) {
              goto LABEL_352;
            }
            strm.next_in = (Bytef *)(v53 + v55);
            if ((v29 & 0x8000000000000000) != 0 || HIDWORD(v29) || HIDWORD(v55)) {
              goto LABEL_458;
            }
            BOOL v37 = v29 >= v55;
            uInt v56 = v29 - v55;
            if (!v37) {
              goto LABEL_354;
            }
            break;
          case 2:
            uint64_t v42 = *(void *)(v3 + 16);
            uint64_t v41 = *(void *)(v3 + 24);
            swift_retain();
            swift_retain();
            uint64_t v43 = sub_183D4434C();
            if (!v43) {
              goto LABEL_78;
            }
            uint64_t v44 = sub_183D4437C();
            if (__OFSUB__(v42, v44)) {
              goto LABEL_359;
            }
            v43 += v42 - v44;
LABEL_78:
            if (__OFSUB__(v41, v42)) {
              goto LABEL_344;
            }
            sub_183D4436C();
            unint64_t v45 = v182 + strm.total_in;
            if (__CFADD__(v182, strm.total_in)) {
              goto LABEL_347;
            }
            if (!v43) {
              goto LABEL_448;
            }
            unint64_t v5 = v178;
            uint64_t v3 = v179;
            if ((v45 & 0x8000000000000000) != 0) {
              goto LABEL_351;
            }
            strm.next_in = (Bytef *)(v43 + v45);
            if ((v29 & 0x8000000000000000) != 0 || HIDWORD(v29) || HIDWORD(v45)) {
              goto LABEL_458;
            }
            BOOL v37 = v29 >= v45;
            uInt v46 = v29 - v45;
            if (!v37) {
              goto LABEL_353;
            }
            strm.avail_in = v46;
            switch((int)v32)
            {
              case 1:
                unint64_t v70 = v13 & 0x3FFFFFFFFFFFFFFFLL;
                uint64_t v74 = v11 >> 32;
                if (swift_isUniquelyReferenced_nonNull_native()) {
                  goto LABEL_292;
                }
                if (v74 < (int)v11) {
                  goto LABEL_429;
                }
                if (sub_183D4434C() && __OFSUB__((int)v11, sub_183D4437C())) {
                  goto LABEL_441;
                }
                sub_183D4439C();
                swift_allocObject();
                uint64_t v144 = sub_183D4432C();
                swift_release();
                unint64_t v70 = v144;
LABEL_292:
                if (v74 < (int)v11) {
                  goto LABEL_387;
                }
                uint64_t v145 = sub_183D4434C();
                if (!v145) {
                  goto LABEL_456;
                }
                uint64_t v146 = v145;
                uint64_t v147 = sub_183D4437C();
                uint64_t v148 = (int)v11 - v147;
                unint64_t v5 = v178;
                if (__OFSUB__((int)v11, v147)) {
                  goto LABEL_399;
                }
                sub_183D4436C();
                uLong v149 = v183 + strm.total_out;
                if (__CFADD__(v183, strm.total_out)) {
                  goto LABEL_411;
                }
                if ((v149 & 0x8000000000000000) != 0) {
                  goto LABEL_419;
                }
                strm.next_out = (Bytef *)(v146 + v148 + v149);
                if ((v33 & 0x8000000000000000) != 0 || HIDWORD(v33) || HIDWORD(v149)) {
                  goto LABEL_458;
                }
                BOOL v37 = v33 >= v149;
                uInt v150 = v33 - v149;
                if (!v37) {
                  goto LABEL_423;
                }
                strm.avail_out = v150;
                int v17 = inflate(&strm, 2);
                strm.next_out = 0;
                swift_release();
                swift_release();
                goto LABEL_315;
              case 2:
                unint64_t v63 = v13 & 0x3FFFFFFFFFFFFFFFLL;
                if (swift_isUniquelyReferenced_nonNull_native()) {
                  goto LABEL_263;
                }
                uint64_t v76 = *(void *)(v11 + 16);
                uint64_t v75 = *(void *)(v11 + 24);
                if (sub_183D4434C())
                {
                  if (__OFSUB__(v76, sub_183D4437C())) {
                    goto LABEL_439;
                  }
                  if (__OFSUB__(v75, v76)) {
                    goto LABEL_431;
                  }
                }
                else if (__OFSUB__(v75, v76))
                {
                  goto LABEL_431;
                }
                sub_183D4439C();
                swift_allocObject();
                uint64_t v120 = sub_183D4432C();
                swift_release();
                unint64_t v63 = v120;
LABEL_263:
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  uint64_t v121 = *(void *)(v11 + 16);
                  uint64_t v122 = *(void *)(v11 + 24);
                  sub_183D444DC();
                  uint64_t v123 = swift_allocObject();
                  *(void *)(v123 + 16) = v121;
                  *(void *)(v123 + 24) = v122;
                  swift_release();
                  uint64_t v11 = v123;
                }
                uint64_t v124 = *(void *)(v11 + 16);
                uint64_t v125 = *(void *)(v11 + 24);
                uint64_t v126 = sub_183D4434C();
                if (!v126) {
                  goto LABEL_454;
                }
                uint64_t v127 = v126;
                uint64_t v128 = sub_183D4437C();
                uint64_t v129 = v124 - v128;
                if (__OFSUB__(v124, v128)) {
                  goto LABEL_385;
                }
                if (__OFSUB__(v125, v124)) {
                  goto LABEL_397;
                }
                sub_183D4436C();
                uLong v130 = v183 + strm.total_out;
                if (__CFADD__(v183, strm.total_out)) {
                  goto LABEL_409;
                }
                if ((v130 & 0x8000000000000000) != 0) {
                  goto LABEL_417;
                }
                strm.next_out = (Bytef *)(v127 + v129 + v130);
                if ((v33 & 0x8000000000000000) != 0) {
                  goto LABEL_458;
                }
                uint64_t v3 = v179;
                if (HIDWORD(v33) || HIDWORD(v130)) {
                  goto LABEL_458;
                }
                BOOL v37 = v33 >= v130;
                uInt v131 = v33 - v130;
                if (!v37) {
                  goto LABEL_421;
                }
                strm.avail_out = v131;
                int v17 = inflate(&strm, 2);
                swift_release();
                swift_release();
                break;
              case 3:
                memset(v185, 0, 15);
                uLong v77 = v183 + strm.total_out;
                if (__CFADD__(v183, strm.total_out)) {
                  goto LABEL_375;
                }
                if ((v77 & 0x8000000000000000) != 0) {
                  goto LABEL_391;
                }
                strm.next_out = (Bytef *)v185 + v77;
                if ((v33 & 0x8000000000000000) != 0 || HIDWORD(v33) || HIDWORD(v77)) {
                  goto LABEL_458;
                }
                BOOL v37 = v33 >= v77;
                uInt v78 = v33 - v77;
                if (!v37) {
                  goto LABEL_403;
                }
                strm.avail_out = v78;
                int v17 = inflate(&strm, 2);
                swift_release();
                swift_release();
                goto LABEL_209;
              default:
                v185[0] = v11;
                LOWORD(v185[1]) = v13;
                BYTE2(v185[1]) = BYTE2(v13);
                BYTE3(v185[1]) = BYTE3(v13);
                BYTE4(v185[1]) = BYTE4(v13);
                BYTE5(v185[1]) = BYTE5(v13);
                BYTE6(v185[1]) = BYTE6(v13);
                uLong v47 = v183 + strm.total_out;
                if (__CFADD__(v183, strm.total_out)) {
                  goto LABEL_373;
                }
                if ((v47 & 0x8000000000000000) != 0) {
                  goto LABEL_389;
                }
                strm.next_out = (Bytef *)v185 + v47;
                if ((v33 & 0x8000000000000000) != 0 || HIDWORD(v33) || HIDWORD(v47)) {
                  goto LABEL_458;
                }
                BOOL v37 = v33 >= v47;
                uInt v48 = v33 - v47;
                if (!v37) {
                  goto LABEL_402;
                }
                strm.avail_out = v48;
                int v17 = inflate(&strm, 2);
                strm.next_out = 0;
                uint64_t v49 = LODWORD(v185[1]);
                uint64_t v50 = BYTE4(v185[1]);
                uint64_t v51 = BYTE5(v185[1]);
                uint64_t v52 = BYTE6(v185[1]);
                uint64_t v11 = v185[0];
                swift_release();
                swift_release();
LABEL_117:
                uint64_t v59 = v49 | (v50 << 32);
                uint64_t v3 = v179;
                unint64_t v13 = v59 | (v51 << 40) | (v52 << 48);
                goto LABEL_23;
            }
            goto LABEL_22;
          case 3:
            memset(v184, 0, 14);
            unint64_t v60 = v182 + strm.total_in;
            if (__CFADD__(v182, strm.total_in)) {
              goto LABEL_343;
            }
            if ((v60 & 0x8000000000000000) != 0) {
              goto LABEL_346;
            }
            strm.next_in = (Bytef *)v184 + v60;
            if ((v29 & 0x8000000000000000) != 0 || HIDWORD(v29) || HIDWORD(v60)) {
              goto LABEL_458;
            }
            BOOL v37 = v29 >= v60;
            uInt v61 = v29 - v60;
            if (!v37) {
              goto LABEL_350;
            }
            strm.avail_in = v61;
            switch((int)v32)
            {
              case 1:
                unint64_t v70 = v188 & 0x3FFFFFFFFFFFFFFFLL;
                uint64_t v73 = v187 >> 32;
                if (swift_isUniquelyReferenced_nonNull_native()) {
                  goto LABEL_250;
                }
                if (v73 < (int)v11) {
                  goto LABEL_426;
                }
                if (sub_183D4434C() && __OFSUB__((int)v11, sub_183D4437C())) {
                  goto LABEL_438;
                }
                sub_183D4439C();
                swift_allocObject();
                uint64_t v114 = sub_183D4432C();
                swift_release();
                unint64_t v70 = v114;
LABEL_250:
                if (v73 < (int)v11) {
                  goto LABEL_366;
                }
                uint64_t v115 = sub_183D4434C();
                if (!v115) {
                  goto LABEL_453;
                }
                uint64_t v116 = v115;
                uint64_t v117 = sub_183D4437C();
                uint64_t v118 = (int)v11 - v117;
                unint64_t v5 = v178;
                if (__OFSUB__((int)v11, v117)) {
                  goto LABEL_380;
                }
                sub_183D4436C();
                uLong v119 = v183 + strm.total_out;
                if (__CFADD__(v183, strm.total_out)) {
                  goto LABEL_393;
                }
                if ((v119 & 0x8000000000000000) != 0) {
                  goto LABEL_408;
                }
                strm.next_out = (Bytef *)(v116 + v118 + v119);
                if ((v33 & 0x8000000000000000) != 0 || HIDWORD(v33) || HIDWORD(v119)) {
                  goto LABEL_458;
                }
                BOOL v37 = v33 >= v119;
                uInt v113 = v33 - v119;
                if (!v37) {
                  goto LABEL_416;
                }
                goto LABEL_260;
              case 2:
                unint64_t v63 = v188 & 0x3FFFFFFFFFFFFFFFLL;
                if (swift_isUniquelyReferenced_nonNull_native()) {
                  goto LABEL_226;
                }
                uint64_t v67 = *(void *)(v11 + 16);
                uint64_t v66 = *(void *)(v11 + 24);
                if (sub_183D4434C())
                {
                  if (__OFSUB__(v67, sub_183D4437C())) {
                    goto LABEL_436;
                  }
                  if (__OFSUB__(v66, v67)) {
                    goto LABEL_428;
                  }
                }
                else if (__OFSUB__(v66, v67))
                {
                  goto LABEL_428;
                }
                sub_183D4439C();
                swift_allocObject();
                uint64_t v96 = sub_183D4432C();
                swift_release();
                unint64_t v63 = v96;
LABEL_226:
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  uint64_t v97 = *(void *)(v11 + 16);
                  uint64_t v98 = *(void *)(v11 + 24);
                  sub_183D444DC();
                  uint64_t v99 = swift_allocObject();
                  *(void *)(v99 + 16) = v97;
                  *(void *)(v99 + 24) = v98;
                  swift_release();
                  uint64_t v11 = v99;
                }
                uint64_t v100 = *(void *)(v11 + 16);
                uint64_t v101 = *(void *)(v11 + 24);
                uint64_t v102 = sub_183D4434C();
                if (!v102) {
                  goto LABEL_451;
                }
                uint64_t v103 = v102;
                uint64_t v104 = sub_183D4437C();
                uint64_t v105 = v100 - v104;
                if (__OFSUB__(v100, v104)) {
                  goto LABEL_368;
                }
                if (__OFSUB__(v101, v100)) {
                  goto LABEL_378;
                }
                sub_183D4436C();
                uLong v106 = v183 + strm.total_out;
                if (__CFADD__(v183, strm.total_out)) {
                  goto LABEL_395;
                }
                if ((v106 & 0x8000000000000000) != 0) {
                  goto LABEL_406;
                }
                strm.next_out = (Bytef *)(v103 + v105 + v106);
                if ((v33 & 0x8000000000000000) != 0) {
                  goto LABEL_458;
                }
                uint64_t v3 = v179;
                if (HIDWORD(v33) || HIDWORD(v106)) {
                  goto LABEL_458;
                }
                BOOL v37 = v33 >= v106;
                uInt v95 = v33 - v106;
                if (!v37) {
                  goto LABEL_414;
                }
LABEL_21:
                strm.avail_out = v95;
                int v17 = inflate(&strm, 2);
                break;
              case 3:
                memset(v185, 0, 15);
                uLong v68 = v183 + strm.total_out;
                if (__CFADD__(v183, strm.total_out)) {
                  goto LABEL_363;
                }
                if ((v68 & 0x8000000000000000) != 0) {
                  goto LABEL_371;
                }
                strm.next_out = (Bytef *)v185 + v68;
                if ((v33 & 0x8000000000000000) != 0 || HIDWORD(v33) || HIDWORD(v68)) {
                  goto LABEL_458;
                }
                BOOL v37 = v33 >= v68;
                uInt v69 = v33 - v68;
                if (!v37) {
                  goto LABEL_383;
                }
                goto LABEL_165;
              default:
                v185[0] = v187;
                LODWORD(v185[1]) = v188;
                WORD2(v185[1]) = WORD2(v188);
                BYTE6(v185[1]) = BYTE6(v188);
                uLong v62 = v183 + strm.total_out;
                if (__CFADD__(v183, strm.total_out)) {
                  goto LABEL_362;
                }
                if ((v62 & 0x8000000000000000) != 0) {
                  goto LABEL_370;
                }
                strm.next_out = (Bytef *)v185 + v62;
                if ((v33 & 0x8000000000000000) != 0 || HIDWORD(v33) || HIDWORD(v62)) {
                  goto LABEL_458;
                }
                BOOL v37 = v33 >= v62;
                uInt v40 = v33 - v62;
                if (!v37) {
                  goto LABEL_382;
                }
                goto LABEL_133;
            }
            goto LABEL_22;
          default:
            LOWORD(v184[0]) = v3;
            BYTE2(v184[0]) = BYTE2(v3);
            BYTE3(v184[0]) = BYTE3(v3);
            BYTE4(v184[0]) = v173;
            BYTE5(v184[0]) = BYTE5(v3);
            BYTE6(v184[0]) = BYTE6(v3);
            HIBYTE(v184[0]) = HIBYTE(v3);
            LOWORD(v184[1]) = v5;
            BYTE2(v184[1]) = BYTE2(v5);
            BYTE3(v184[1]) = BYTE3(v5);
            BYTE4(v184[1]) = BYTE4(v5);
            BYTE5(v184[1]) = BYTE5(v5);
            unint64_t v36 = v182 + strm.total_in;
            if (__CFADD__(v182, strm.total_in)) {
              goto LABEL_341;
            }
            if ((v36 & 0x8000000000000000) != 0) {
              goto LABEL_345;
            }
            strm.next_in = (Bytef *)v184 + v36;
            if ((v29 & 0x8000000000000000) != 0 || HIDWORD(v29) || HIDWORD(v36)) {
              goto LABEL_458;
            }
            BOOL v37 = v29 >= v36;
            uInt v38 = v29 - v36;
            if (!v37) {
              goto LABEL_349;
            }
            strm.avail_in = v38;
            switch((int)v32)
            {
              case 1:
                unint64_t v70 = v188 & 0x3FFFFFFFFFFFFFFFLL;
                uint64_t v71 = v187 >> 32;
                if (swift_isUniquelyReferenced_nonNull_native()) {
                  goto LABEL_239;
                }
                if (v71 < (int)v11) {
                  goto LABEL_425;
                }
                if (sub_183D4434C() && __OFSUB__((int)v11, sub_183D4437C())) {
                  goto LABEL_437;
                }
                sub_183D4439C();
                swift_allocObject();
                uint64_t v107 = sub_183D4432C();
                swift_release();
                unint64_t v70 = v107;
LABEL_239:
                if (v71 < (int)v11) {
                  goto LABEL_365;
                }
                uint64_t v108 = sub_183D4434C();
                if (!v108) {
                  goto LABEL_452;
                }
                uint64_t v109 = v108;
                uint64_t v110 = sub_183D4437C();
                uint64_t v111 = (int)v11 - v110;
                unint64_t v5 = v178;
                if (__OFSUB__((int)v11, v110)) {
                  goto LABEL_379;
                }
                sub_183D4436C();
                uLong v112 = v183 + strm.total_out;
                if (__CFADD__(v183, strm.total_out)) {
                  goto LABEL_396;
                }
                if ((v112 & 0x8000000000000000) != 0) {
                  goto LABEL_407;
                }
                strm.next_out = (Bytef *)(v109 + v111 + v112);
                if ((v33 & 0x8000000000000000) != 0 || HIDWORD(v33) || HIDWORD(v112)) {
                  goto LABEL_458;
                }
                BOOL v37 = v33 >= v112;
                uInt v113 = v33 - v112;
                if (!v37) {
                  goto LABEL_415;
                }
LABEL_260:
                strm.avail_out = v113;
                int v17 = inflate(&strm, 2);
                strm.next_out = 0;
LABEL_315:
                unint64_t v13 = v70 | 0x4000000000000000;
                goto LABEL_23;
              case 2:
                unint64_t v63 = v188 & 0x3FFFFFFFFFFFFFFFLL;
                if (swift_isUniquelyReferenced_nonNull_native()) {
                  goto LABEL_212;
                }
                uint64_t v65 = *(void *)(v11 + 16);
                uint64_t v64 = *(void *)(v11 + 24);
                if (sub_183D4434C())
                {
                  if (__OFSUB__(v65, sub_183D4437C())) {
                    goto LABEL_435;
                  }
                  if (__OFSUB__(v64, v65)) {
                    goto LABEL_427;
                  }
                }
                else if (__OFSUB__(v64, v65))
                {
                  goto LABEL_427;
                }
                sub_183D4439C();
                swift_allocObject();
                uint64_t v84 = sub_183D4432C();
                swift_release();
                unint64_t v63 = v84;
LABEL_212:
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  uint64_t v85 = *(void *)(v11 + 16);
                  uint64_t v86 = *(void *)(v11 + 24);
                  sub_183D444DC();
                  uint64_t v87 = swift_allocObject();
                  *(void *)(v87 + 16) = v85;
                  *(void *)(v87 + 24) = v86;
                  swift_release();
                  uint64_t v11 = v87;
                }
                uint64_t v88 = *(void *)(v11 + 16);
                uint64_t v89 = *(void *)(v11 + 24);
                uint64_t v90 = sub_183D4434C();
                if (!v90) {
                  goto LABEL_450;
                }
                uint64_t v91 = v90;
                uint64_t v92 = sub_183D4437C();
                uint64_t v93 = v88 - v92;
                if (__OFSUB__(v88, v92)) {
                  goto LABEL_367;
                }
                if (__OFSUB__(v89, v88)) {
                  goto LABEL_377;
                }
                sub_183D4436C();
                uLong v94 = v183 + strm.total_out;
                if (__CFADD__(v183, strm.total_out)) {
                  goto LABEL_394;
                }
                if ((v94 & 0x8000000000000000) != 0) {
                  goto LABEL_405;
                }
                strm.next_out = (Bytef *)(v91 + v93 + v94);
                if ((v33 & 0x8000000000000000) != 0 || (uint64_t v3 = v179, HIDWORD(v33)) || HIDWORD(v94))
                {
LABEL_458:
                  sub_183D456BC();
                  __break(1u);
                  JUMPOUT(0x183509E1CLL);
                }
                BOOL v37 = v33 >= v94;
                uInt v95 = v33 - v94;
                if (!v37) {
                  goto LABEL_413;
                }
                break;
              case 3:
                memset(v185, 0, 15);
                uLong v72 = v183 + strm.total_out;
                if (__CFADD__(v183, strm.total_out)) {
                  goto LABEL_364;
                }
                if ((v72 & 0x8000000000000000) != 0) {
                  goto LABEL_372;
                }
                strm.next_out = (Bytef *)v185 + v72;
                if ((v33 & 0x8000000000000000) != 0 || HIDWORD(v33) || HIDWORD(v72)) {
                  goto LABEL_458;
                }
                BOOL v37 = v33 >= v72;
                uInt v69 = v33 - v72;
                if (!v37) {
                  goto LABEL_384;
                }
LABEL_165:
                strm.avail_out = v69;
                int v17 = inflate(&strm, 2);
LABEL_209:
                strm.next_out = 0;
                goto LABEL_24;
              default:
                v185[0] = v187;
                LODWORD(v185[1]) = v188;
                WORD2(v185[1]) = WORD2(v188);
                BYTE6(v185[1]) = BYTE6(v188);
                uLong v39 = v183 + strm.total_out;
                if (__CFADD__(v183, strm.total_out)) {
                  goto LABEL_361;
                }
                if ((v39 & 0x8000000000000000) != 0) {
                  goto LABEL_369;
                }
                strm.next_out = (Bytef *)v185 + v39;
                if ((v33 & 0x8000000000000000) != 0 || HIDWORD(v33) || HIDWORD(v39)) {
                  goto LABEL_458;
                }
                BOOL v37 = v33 >= v39;
                uInt v40 = v33 - v39;
                if (!v37) {
                  goto LABEL_381;
                }
LABEL_133:
                strm.avail_out = v40;
                int v17 = inflate(&strm, 2);
                strm.next_out = 0;
                uint64_t v11 = v185[0];
                unint64_t v13 = LODWORD(v185[1]) | ((unint64_t)BYTE4(v185[1]) << 32) | ((unint64_t)BYTE5(v185[1]) << 40) | ((unint64_t)BYTE6(v185[1]) << 48);
                goto LABEL_23;
            }
            goto LABEL_21;
        }
        strm.avail_in = v56;
        switch((int)v32)
        {
          case 1:
            unint64_t v70 = v13 & 0x3FFFFFFFFFFFFFFFLL;
            uint64_t v79 = v11 >> 32;
            if (swift_isUniquelyReferenced_nonNull_native()) {
              goto LABEL_304;
            }
            if (v79 < (int)v11) {
              goto LABEL_430;
            }
            if (sub_183D4434C() && __OFSUB__((int)v11, sub_183D4437C())) {
              goto LABEL_442;
            }
            sub_183D4439C();
            swift_allocObject();
            uint64_t v151 = sub_183D4432C();
            swift_release();
            unint64_t v70 = v151;
LABEL_304:
            if (v79 < (int)v11) {
              goto LABEL_388;
            }
            uint64_t v152 = sub_183D4434C();
            if (!v152) {
              goto LABEL_457;
            }
            uint64_t v153 = v152;
            uint64_t v154 = sub_183D4437C();
            uint64_t v155 = (int)v11 - v154;
            unint64_t v5 = v178;
            if (__OFSUB__((int)v11, v154)) {
              goto LABEL_400;
            }
            sub_183D4436C();
            uLong v156 = v183 + strm.total_out;
            if (__CFADD__(v183, strm.total_out)) {
              goto LABEL_412;
            }
            if ((v156 & 0x8000000000000000) != 0) {
              goto LABEL_420;
            }
            strm.next_out = (Bytef *)(v153 + v155 + v156);
            if ((v33 & 0x8000000000000000) != 0 || HIDWORD(v33) || HIDWORD(v156)) {
              goto LABEL_458;
            }
            BOOL v37 = v33 >= v156;
            uInt v157 = v33 - v156;
            if (!v37) {
              goto LABEL_424;
            }
            strm.avail_out = v157;
            int v17 = inflate(&strm, 2);
            strm.next_out = 0;
            sub_1832E5E9C(v3, v178);
            goto LABEL_315;
          case 2:
            unint64_t v63 = v13 & 0x3FFFFFFFFFFFFFFFLL;
            if (swift_isUniquelyReferenced_nonNull_native()) {
              goto LABEL_278;
            }
            uint64_t v81 = *(void *)(v11 + 16);
            uint64_t v80 = *(void *)(v11 + 24);
            if (sub_183D4434C())
            {
              if (__OFSUB__(v81, sub_183D4437C())) {
                goto LABEL_440;
              }
              if (__OFSUB__(v80, v81)) {
                goto LABEL_432;
              }
            }
            else if (__OFSUB__(v80, v81))
            {
              goto LABEL_432;
            }
            sub_183D4439C();
            swift_allocObject();
            uint64_t v132 = sub_183D4432C();
            swift_release();
            unint64_t v63 = v132;
LABEL_278:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              uint64_t v133 = *(void *)(v11 + 16);
              uint64_t v134 = *(void *)(v11 + 24);
              sub_183D444DC();
              uint64_t v135 = swift_allocObject();
              *(void *)(v135 + 16) = v133;
              *(void *)(v135 + 24) = v134;
              swift_release();
              uint64_t v11 = v135;
            }
            uint64_t v136 = *(void *)(v11 + 16);
            uint64_t v137 = *(void *)(v11 + 24);
            uint64_t v138 = sub_183D4434C();
            if (!v138) {
              goto LABEL_455;
            }
            uint64_t v139 = v138;
            uint64_t v140 = sub_183D4437C();
            uint64_t v141 = v136 - v140;
            if (__OFSUB__(v136, v140)) {
              goto LABEL_386;
            }
            if (__OFSUB__(v137, v136)) {
              goto LABEL_398;
            }
            sub_183D4436C();
            uLong v142 = v183 + strm.total_out;
            if (__CFADD__(v183, strm.total_out)) {
              goto LABEL_410;
            }
            if ((v142 & 0x8000000000000000) != 0) {
              goto LABEL_418;
            }
            strm.next_out = (Bytef *)(v139 + v141 + v142);
            if ((v33 & 0x8000000000000000) != 0) {
              goto LABEL_458;
            }
            uint64_t v3 = v179;
            if (HIDWORD(v33) || HIDWORD(v142)) {
              goto LABEL_458;
            }
            BOOL v37 = v33 >= v142;
            uInt v143 = v33 - v142;
            if (!v37) {
              goto LABEL_422;
            }
            strm.avail_out = v143;
            int v17 = inflate(&strm, 2);
            sub_1832E5E9C(v179, v5);
LABEL_22:
            strm.next_out = 0;
            unint64_t v13 = v63 | 0x8000000000000000;
LABEL_23:
            uint64_t v187 = v11;
            unint64_t v188 = v13;
LABEL_24:
            strm.next_in = 0;
            LODWORD(v4) = v180;
            uLong v14 = v183;
            if (!v17) {
              continue;
            }
            BOOL v37 = __CFADD__(v182, strm.total_in);
            v182 += strm.total_in;
            if (v37) {
              goto LABEL_433;
            }
            int v158 = inflateEnd(&strm);
            if (v17 != 1 || v158)
            {
              msg = strm.msg;
              int v16 = v17;
              goto LABEL_330;
            }
            uLong v14 = v183 + strm.total_out;
            if (__CFADD__(v183, strm.total_out))
            {
LABEL_434:
              __break(1u);
LABEL_435:
              __break(1u);
LABEL_436:
              __break(1u);
LABEL_437:
              __break(1u);
LABEL_438:
              __break(1u);
LABEL_439:
              __break(1u);
LABEL_440:
              __break(1u);
LABEL_441:
              __break(1u);
LABEL_442:
              __break(1u);
LABEL_443:
              __break(1u);
LABEL_444:
              __break(1u);
LABEL_445:
              __break(1u);
LABEL_446:
              __break(1u);
LABEL_447:
              __break(1u);
LABEL_448:
              __break(1u);
LABEL_449:
              __break(1u);
LABEL_450:
              __break(1u);
LABEL_451:
              __break(1u);
LABEL_452:
              __break(1u);
LABEL_453:
              __break(1u);
LABEL_454:
              __break(1u);
LABEL_455:
              __break(1u);
LABEL_456:
              __break(1u);
LABEL_457:
              __break(1u);
            }
            uint64_t v159 = v177;
            switch(v181)
            {
              case 1:
                uint64_t v159 = v175;
                if (v176) {
                  goto LABEL_444;
                }
                goto LABEL_324;
              case 2:
                uint64_t v161 = *(void *)(v3 + 16);
                uint64_t v160 = *(void *)(v3 + 24);
                BOOL v10 = __OFSUB__(v160, v161);
                uint64_t v159 = v160 - v161;
                if (!v10) {
                  goto LABEL_324;
                }
                goto LABEL_445;
              case 3:
                goto LABEL_326;
              default:
LABEL_324:
                if (v159 >= 1 && v182 < v159) {
                  goto LABEL_19;
                }
LABEL_326:
                if ((v14 & 0x8000000000000000) != 0) {
                  goto LABEL_447;
                }
                sub_183D444FC();
                uint64_t result = v187;
                break;
            }
            return result;
          case 3:
            memset(v185, 0, 15);
            uLong v82 = v183 + strm.total_out;
            if (__CFADD__(v183, strm.total_out)) {
              goto LABEL_376;
            }
            if ((v82 & 0x8000000000000000) != 0) {
              goto LABEL_392;
            }
            strm.next_out = (Bytef *)v185 + v82;
            if ((v33 & 0x8000000000000000) != 0 || HIDWORD(v33) || HIDWORD(v82)) {
              goto LABEL_458;
            }
            BOOL v37 = v33 >= v82;
            uInt v83 = v33 - v82;
            if (!v37) {
              goto LABEL_404;
            }
            strm.avail_out = v83;
            int v17 = inflate(&strm, 2);
            sub_1832E5E9C(v3, v5);
            goto LABEL_209;
          default:
            v185[0] = v11;
            LOWORD(v185[1]) = v13;
            BYTE2(v185[1]) = BYTE2(v13);
            BYTE3(v185[1]) = BYTE3(v13);
            BYTE4(v185[1]) = BYTE4(v13);
            BYTE5(v185[1]) = BYTE5(v13);
            BYTE6(v185[1]) = BYTE6(v13);
            uLong v57 = v183 + strm.total_out;
            if (__CFADD__(v183, strm.total_out)) {
              goto LABEL_374;
            }
            if ((v57 & 0x8000000000000000) != 0) {
              goto LABEL_390;
            }
            strm.next_out = (Bytef *)v185 + v57;
            if ((v33 & 0x8000000000000000) != 0 || HIDWORD(v33) || HIDWORD(v57)) {
              goto LABEL_458;
            }
            BOOL v37 = v33 >= v57;
            uInt v58 = v33 - v57;
            if (!v37) {
              goto LABEL_401;
            }
            strm.avail_out = v58;
            int v17 = inflate(&strm, 2);
            strm.next_out = 0;
            uint64_t v49 = LODWORD(v185[1]);
            uint64_t v50 = BYTE4(v185[1]);
            uint64_t v51 = BYTE5(v185[1]);
            uint64_t v52 = BYTE6(v185[1]);
            uint64_t v11 = v185[0];
            sub_1832E5E9C(v179, v5);
            goto LABEL_117;
        }
      }
  }
}

uint64_t sub_183509EDC(int a1, uint64_t a2)
{
  if (!a2 || (MEMORY[0x185313FB0](a2), !v3)) {
    swift_bridgeObjectRelease();
  }
  uint64_t result = 0;
  switch(a1)
  {
    case -6:
      uint64_t result = 4;
      break;
    case -5:
      uint64_t result = 3;
      break;
    case -4:
      uint64_t result = 2;
      break;
    case -3:
      uint64_t result = 1;
      break;
    case -2:
      return result;
    default:
      uint64_t result = a1;
      break;
  }
  return result;
}

uint64_t sub_183509FB0(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result < 15)
    {
      return 0;
    }
    else
    {
      sub_183D4439C();
      swift_allocObject();
      sub_183D4438C();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_183D444DC();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = 0;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_18350A04C()
{
  unint64_t result = qword_1E8F633A8;
  if (!qword_1E8F633A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F633A8);
  }
  return result;
}

uint64_t destroy for GzipError()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GzipError(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GzipError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for GzipError(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GzipError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GzipError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GzipError()
{
  return &type metadata for GzipError;
}

ValueMetadata *type metadata accessor for GzipError.Kind()
{
  return &type metadata for GzipError.Kind;
}

uint64_t sub_18350A228(uint64_t a1)
{
  return sub_18350A508(a1, (uint64_t (*)(void))nw_protocol_copy_http_definition, &off_1E8F633B0);
}

uint64_t static NWProtocolHTTP.definition.getter()
{
  return sub_1830DC99C(&qword_1E8F620F8);
}

BOOL sub_18350A26C(void *a1)
{
  return nw_protocol_options_is_http_messaging(a1);
}

uint64_t NWProtocolHTTP.Options.__allocating_init()()
{
  return sub_18350A5F4((uint64_t (*)(void))nw_http_messaging_create_options);
}

uint64_t NWProtocolHTTP.Options.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

BOOL sub_18350A2C0(void *a1)
{
  return nw_protocol_metadata_is_http(a1);
}

uint64_t NWProtocolHTTP.Metadata.__allocating_init(request:)(const void *a1)
{
  type metadata accessor for __NWHTTPRequest();
  uint64_t v2 = swift_allocObject();
  memcpy((void *)(v2 + 16), a1, 0x120uLL);
  metadata_for_request = nw_http_create_metadata_for_request((void *)v2);
  swift_release();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = metadata_for_request;
  return result;
}

uint64_t NWProtocolHTTP.Metadata.__allocating_init(response:)(long long *a1)
{
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a1 + 3);
  char v4 = *((unsigned char *)a1 + 32);
  long long v9 = *(long long *)((char *)a1 + 40);
  long long v10 = *a1;
  uint64_t v5 = *((void *)a1 + 7);
  type metadata accessor for __NWHTTPResponse();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = v10;
  *(void *)(v6 + 32) = v2;
  *(void *)(v6 + 40) = v3;
  *(unsigned char *)(v6 + 48) = v4;
  *(_OWORD *)(v6 + 56) = v9;
  *(void *)(v6 + 72) = v5;
  *(_OWORD *)(v6 + 80) = a1[4];
  metadata_for_response = nw_http_create_metadata_for_response((void *)v6);
  swift_release();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = metadata_for_response;
  return result;
}

uint64_t NWProtocolHTTP.Metadata.trailerFields.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = (uint64_t)nw_http_metadata_copy_trailer_fields(*(void **)(v1 + 16));
  if (result)
  {
    uint64_t v4 = result;
    sub_1835960A8(MEMORY[0x1E4FBC860]);
    uint64_t v5 = (_DWORD *)swift_slowAlloc();
    *uint64_t v5 = 0;
    swift_beginAccess();
    uint64_t v6 = *(void *)(v4 + 16);
    swift_retain();
    MEMORY[0x185318E50](v5, -1, -1);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a1 = v6;
  return result;
}

uint64_t NWProtocolHTTP.deinit()
{
  return v0;
}

uint64_t NWProtocolHTTP.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_18350A4E8(uint64_t a1)
{
  return sub_18350A508(a1, (uint64_t (*)(void))nw_protocol_copy_http_encoding_definition, qword_1E8F633B8);
}

uint64_t sub_18350A508(uint64_t a1, uint64_t (*a2)(void), void *a3)
{
  uint64_t v4 = a2();
  type metadata accessor for NWProtocolDefinition();
  uint64_t v5 = (void *)swift_allocObject();
  v5[4] = v4;
  id v6 = objc_msgSend((id)swift_unknownObjectRetain(), sel_description);
  uint64_t v7 = sub_183D44AFC();
  uint64_t v9 = v8;

  uint64_t result = swift_unknownObjectRelease();
  long long v5[2] = v7;
  v5[3] = v9;
  *a3 = v5;
  return result;
}

uint64_t static NWProtocolHTTPEncoding.definition.getter()
{
  return sub_1830DC99C(&qword_1E8F62100);
}

BOOL sub_18350A5C4(void *a1)
{
  return nw_protocol_options_is_http_encoding(a1);
}

uint64_t NWProtocolHTTPEncoding.Options.__allocating_init()()
{
  return sub_18350A5F4((uint64_t (*)(void))nw_http_encoding_create_options);
}

uint64_t sub_18350A5F4(uint64_t (*a1)(void))
{
  uint64_t v1 = a1();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t NWProtocolHTTPEncoding.deinit()
{
  return v0;
}

uint64_t NWConnection.ContentContext.__allocating_init(request:)(const void *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61E50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_183D569A0;
  type metadata accessor for __NWHTTPRequest();
  uint64_t v5 = swift_allocObject();
  memcpy((void *)(v5 + 16), a1, 0x120uLL);
  metadata_for_request = nw_http_create_metadata_for_request((void *)v5);
  swift_release();
  type metadata accessor for NWProtocolHTTP.Metadata();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = metadata_for_request;
  *(void *)(inited + 32) = v7;
  sub_183D44E6C();
  return (*(uint64_t (**)(uint64_t, unint64_t, void, void, void, uint64_t, double))(v2 + 152))(0x7165722D70747468, 0xEC00000074736575, 0, 0, 0, inited, 0.5);
}

uint64_t NWConnection.ContentContext.__allocating_init(response:)(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v5 = *((void *)a1 + 3);
  char v6 = *((unsigned char *)a1 + 32);
  long long v13 = *(long long *)((char *)a1 + 40);
  long long v14 = *a1;
  uint64_t v7 = *((void *)a1 + 7);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61E50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_183D569A0;
  type metadata accessor for __NWHTTPResponse();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = v14;
  *(void *)(v9 + 32) = v4;
  *(void *)(v9 + 40) = v5;
  *(unsigned char *)(v9 + 48) = v6;
  *(_OWORD *)(v9 + 56) = v13;
  *(void *)(v9 + 72) = v7;
  *(_OWORD *)(v9 + 80) = a1[4];
  metadata_for_response = nw_http_create_metadata_for_response((void *)v9);
  swift_release();
  type metadata accessor for NWProtocolHTTP.Metadata();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = metadata_for_response;
  *(void *)(inited + 32) = v11;
  sub_183D44E6C();
  return (*(uint64_t (**)(uint64_t, unint64_t, void, void, void, uint64_t, double))(v2 + 152))(0x7365722D70747468, 0xED000065736E6F70, 0, 0, 0, inited, 0.5);
}

uint64_t NWConnection.ContentContext.httpRequest.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E8F620F8 != -1) {
    swift_once();
  }
  nw_protocol_metadata_t v3 = nw_content_context_copy_protocol_metadata(*(nw_content_context_t *)(v1 + 16), *((nw_protocol_definition_t *)off_1E8F633B0 + 4));
  if (!v3) {
    goto LABEL_9;
  }
  nw_protocol_metadata_t v4 = v3;
  uint64_t v5 = sub_1835312A8((uint64_t)v3);
  if (!v5)
  {
    swift_unknownObjectRelease();
LABEL_9:
    sub_18350B954(v11);
    return sub_18350B980((uint64_t)v11, a1);
  }
  (*(void (**)(nw_protocol_metadata_t))(v5 + 96))(v4);
  type metadata accessor for NWProtocolHTTP.Metadata();
  char v6 = *(void **)(swift_dynamicCastClassUnconditional() + 16);
  swift_retain();
  uint64_t v7 = (char *)nw_http_metadata_copy_request(v6);
  if (!v7)
  {
    swift_release_n();
    goto LABEL_9;
  }
  uint64_t v8 = v7 + 16;
  swift_beginAccess();
  memcpy(__dst, v8, sizeof(__dst));
  sub_18350BA8C(__dst);
  swift_release_n();
  swift_unknownObjectRelease();
  memcpy(v11, __dst, sizeof(v11));
  nullsub_1(v11);
  return sub_18350B980((uint64_t)v11, a1);
}

double NWConnection.ContentContext.httpResponse.getter@<D0>(void *a1@<X8>)
{
  if (qword_1E8F620F8 != -1) {
    swift_once();
  }
  nw_protocol_metadata_t v3 = nw_content_context_copy_protocol_metadata(*(nw_content_context_t *)(v1 + 16), *((nw_protocol_definition_t *)off_1E8F633B0 + 4));
  if (v3)
  {
    nw_protocol_metadata_t v4 = v3;
    uint64_t v5 = sub_1835312A8((uint64_t)v3);
    if (v5)
    {
      (*(void (**)(nw_protocol_metadata_t))(v5 + 96))(v4);
      type metadata accessor for NWProtocolHTTP.Metadata();
      char v6 = *(void **)(swift_dynamicCastClassUnconditional() + 16);
      swift_retain();
      uint64_t v7 = nw_http_metadata_copy_response(v6);
      if (v7)
      {
        uint64_t v8 = v7;
        swift_beginAccess();
        uint64_t v9 = v8[3];
        uint64_t v10 = v8[5];
        uint64_t v18 = v8[4];
        uint64_t v19 = v8[2];
        uint64_t v17 = *((unsigned __int8 *)v8 + 48);
        uint64_t v12 = v8[7];
        uint64_t v11 = v8[8];
        uint64_t v14 = v8[9];
        uint64_t v13 = v8[10];
        uint64_t v15 = v8[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_release_n();
        swift_unknownObjectRelease();
        *a1 = v19;
        a1[1] = v9;
        a1[2] = v18;
        a1[3] = v10;
        a1[4] = v17;
        a1[5] = v12;
        a1[6] = v11;
        a1[7] = v14;
        a1[8] = v13;
        a1[9] = v15;
        return result;
      }
      swift_release_n();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  double result = 0.0;
  *((_OWORD *)a1 + 3) = 0u;
  *((_OWORD *)a1 + 4) = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  *((_OWORD *)a1 + 2) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t NWConnection.__allocating_init(obliviousHTTPConnection:gatewayKeyConfig:contextID:mediaType:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v43 = a5;
  uint64_t v48 = a4;
  v54[1] = *MEMORY[0x1E4F143B8];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for NWEndpoint();
  uint64_t v44 = *(void *)(v14 - 8);
  uint64_t v45 = v14;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v42 = (uint64_t)v41 - v18;
  uint64_t v19 = *(void **)(a1 + 16);
  swift_unknownObjectRetain();
  id v20 = nw_protocol_copy_oblivious_http_contexts_definition();
  uint64_t v21 = nw_connection_copy_connected_parameters_with_protocol(v19, v20);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (v21)
  {
    v41[0] = (uint64_t)v17;
    v41[1] = v6;
    uint64_t v22 = nw_parameters_copy_default_protocol_stack(v21);
    v54[0] = 0;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v54;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = sub_18350BC04;
    *(void *)(v24 + 24) = v23;
    uint64_t v47 = v23;
    uint64_t v52 = sub_18350BC30;
    uint64_t v53 = v24;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v50 = sub_18350B29C;
    uint64_t v51 = &block_descriptor_5;
    uint64_t v25 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uInt v46 = v22;
    nw_protocol_stack_iterate_application_protocols(v22, v25);
    _Block_release(v25);
    LOBYTE(v25) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v25)
    {
      __break(1u);
LABEL_24:
      __break(1u);
    }
    uint64_t v26 = (void *)v54[0];
    if (v54[0])
    {
      switch(a3 >> 62)
      {
        case 1uLL:
          if (a2 >> 32 < (int)a2) {
            goto LABEL_24;
          }
          swift_unknownObjectRetain_n();
          sub_1832E5D6C(a2, a3);
          sub_18350B9E8((int)a2, a2 >> 32, a3 & 0x3FFFFFFFFFFFFFFFLL, v26);
          sub_1832E5E9C(a2, a3);
          swift_unknownObjectRelease();
          break;
        case 2uLL:
          uint64_t v29 = *(void *)(a2 + 16);
          uint64_t v30 = *(void *)(a2 + 24);
          swift_unknownObjectRetain_n();
          swift_retain();
          swift_retain();
          sub_18350B9E8(v29, v30, a3 & 0x3FFFFFFFFFFFFFFFLL, v26);
          swift_unknownObjectRelease();
          swift_release();
          swift_release();
          break;
        case 3uLL:
          *(void *)((char *)&aBlock + 6) = 0;
          *(void *)&long long aBlock = 0;
          uint64_t v27 = (void *)swift_unknownObjectRetain();
          uint64_t v28 = 0;
          goto LABEL_10;
        default:
          *(void *)&long long aBlock = a2;
          WORD4(aBlock) = a3;
          BYTE10(aBlock) = BYTE2(a3);
          BYTE11(aBlock) = BYTE3(a3);
          BYTE12(aBlock) = BYTE4(a3);
          BYTE13(aBlock) = BYTE5(a3);
          uint64_t v27 = (void *)swift_unknownObjectRetain();
          uint64_t v28 = BYTE6(a3);
LABEL_10:
          nw_oblivious_http_set_config(v27, (uint64_t)&aBlock, v28);
          break;
      }
      nw_oblivious_http_set_context_id(v26, v48);
      if (a6)
      {
        uint64_t v31 = sub_183D44BAC();
        swift_bridgeObjectRelease();
        nw_oblivious_http_set_media_type(v26, v31 + 32);
        swift_release();
      }
      unint64_t v32 = nw_connection_create_with_connection(*(void **)(a1 + 16), v21);
      if (v32)
      {
        uint64_t v33 = (uint64_t)v32;
        uint64_t v34 = nw_connection_copy_endpoint(v32);
        sub_18315A830(v34, (uint64_t)v13);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v13, 1, v45) != 1)
        {
          uint64_t v37 = v42;
          sub_18315E28C((uint64_t)v13, v42);
          uint64_t v38 = v41[0];
          sub_1834D7F00(v37, v41[0]);
          type metadata accessor for NWParameters();
          uint64_t v39 = swift_allocObject();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61EA0);
          uint64_t v40 = swift_allocObject();
          *(_DWORD *)(v40 + 24) = 0;
          *(void *)(v40 + 16) = v21;
          *(void *)(v39 + 16) = v40;
          swift_allocObject();
          swift_unknownObjectRetain();
          uint64_t v35 = sub_18315E310(v38, v39, v33);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_release();
          swift_unknownObjectRelease();
          sub_1832E5E9C(a2, a3);
          swift_unknownObjectRelease();
          swift_release();
          sub_1834D7F64(v37);
          swift_release();
          swift_unknownObjectRelease();
          return v35;
        }
        sub_1832E5E9C(a2, a3);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_release();
        sub_1834F98D4((uint64_t)v13);
      }
      else
      {
        sub_1832E5E9C(a2, a3);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_release();
      }
    }
    else
    {
      sub_1832E5E9C(a2, a3);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
    }
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1832E5E9C(a2, a3);
    swift_release();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_18350B274(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_18350B29C(uint64_t a1, uint64_t a2)
{
  nw_protocol_metadata_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);

  return swift_unknownObjectRelease();
}

uint64_t NWConnection.__allocating_init<A>(obliviousHTTPConnection:standaloneAEADKey:contextID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v45 = a5;
  uint64_t v46 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NWEndpoint();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v41 = v12;
  uint64_t v42 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)v38 - v17;
  uint64_t v19 = *(void **)(a1 + 16);
  swift_unknownObjectRetain();
  id v20 = nw_protocol_copy_oblivious_http_contexts_definition();
  uint64_t v21 = nw_connection_copy_connected_parameters_with_protocol(v19, v20);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (!v21)
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a2, a4);
    return 0;
  }
  uint64_t v44 = a2;
  v38[0] = (uint64_t)v16;
  v38[1] = v5;
  uint64_t v39 = v18;
  uint64_t v22 = nw_parameters_copy_default_protocol_stack(v21);
  uint64_t v48 = 0;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = &v48;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_18350BD58;
  *(void *)(v24 + 24) = v23;
  aBlock[4] = sub_18350BD64;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18350B29C;
  aBlock[3] = &block_descriptor_13;
  uint64_t v25 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v43 = v22;
  nw_protocol_stack_iterate_application_protocols(v22, v25);
  _Block_release(v25);
  LOBYTE(v25) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v25 & 1) == 0)
  {
    uint64_t v27 = v48;
    if (v48)
    {
      uint64_t v40 = v23;
      uint64_t v28 = v44;
      MEMORY[0x1F4188790](result);
      v38[-2] = (uint64_t)v27;
      swift_unknownObjectRetain();
      sub_183D443AC();
      nw_oblivious_http_set_context_id(v27, v46);
      uint64_t v29 = nw_connection_create_with_connection(*(void **)(a1 + 16), v21);
      if (v29)
      {
        uint64_t v30 = (uint64_t)v29;
        uint64_t v31 = v28;
        unint64_t v32 = nw_connection_copy_endpoint(v29);
        sub_18315A830(v32, (uint64_t)v11);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v11, 1, v41) != 1)
        {
          uint64_t v34 = (uint64_t)v39;
          sub_18315E28C((uint64_t)v11, (uint64_t)v39);
          uint64_t v35 = v38[0];
          sub_1834D7F00(v34, v38[0]);
          type metadata accessor for NWParameters();
          uint64_t v36 = swift_allocObject();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61EA0);
          uint64_t v37 = swift_allocObject();
          *(_DWORD *)(v37 + 24) = 0;
          *(void *)(v37 + 16) = v21;
          *(void *)(v36 + 16) = v37;
          swift_allocObject();
          swift_unknownObjectRetain();
          uint64_t v33 = sub_18315E310(v35, v36, v30);
          swift_unknownObjectRelease();
          swift_release();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_release();
          swift_unknownObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(v31, a4);
          sub_1834D7F64(v34);
          swift_release();
          swift_unknownObjectRelease();
          return v33;
        }
        swift_release();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(v28, a4);
        sub_1834F98D4((uint64_t)v11);
      }
      else
      {
        swift_release();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(v28, a4);
      }
    }
    else
    {
      swift_release();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(v44, a4);
    }
    swift_release();
    swift_unknownObjectRelease();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_18350B8C0(uint64_t result, uint64_t *a2)
{
  if (!*a2)
  {
    uint64_t v3 = result;
    uint64_t result = nw_protocol_options_is_oblivious_http((void *)result);
    if (result)
    {
      *a2 = v3;
      swift_unknownObjectRetain();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t type metadata accessor for NWProtocolHTTP.Metadata()
{
  return self;
}

double sub_18350B954(_OWORD *a1)
{
  double result = 0.0;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_18350B980(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F633C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_18350B9E8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t result = sub_183D4434C();
  uint64_t v8 = result;
  if (result)
  {
    uint64_t result = sub_183D4437C();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v8 += a1 - result;
  }
  BOOL v9 = __OFSUB__(a2, a1);
  uint64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v11 = sub_183D4436C();
  if (v8)
  {
    if (v11 >= v10) {
      uint64_t v12 = v10;
    }
    else {
      uint64_t v12 = v11;
    }
    uint64_t v13 = a4;
    uint64_t v14 = v8;
  }
  else
  {
    uint64_t v13 = a4;
    uint64_t v14 = 0;
    uint64_t v12 = 0;
  }
  nw_oblivious_http_set_config(v13, v14, v12);
  return swift_unknownObjectRelease();
}

void *sub_18350BA8C(void *a1)
{
  uint64_t v2 = a1[7];
  uint64_t v3 = a1[8];
  uint64_t v5 = a1[15];
  uint64_t v6 = a1[14];
  uint64_t v7 = a1[22];
  uint64_t v8 = a1[21];
  uint64_t v9 = a1[29];
  uint64_t v10 = a1[28];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1834BF9F8(v2, v3);
  sub_1834BF9F8(v6, v5);
  sub_1834BF9F8(v8, v7);
  sub_1834BF9F8(v10, v9);
  swift_retain();
  return a1;
}

uint64_t sub_18350BBF4()
{
  return swift_deallocObject();
}

uint64_t sub_18350BC04(uint64_t a1)
{
  return sub_18350B8C0(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_18350BC20()
{
  return swift_deallocObject();
}

uint64_t sub_18350BC30()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_18350BC58()
{
  return swift_deallocObject();
}

uint64_t sub_18350BC68()
{
  return swift_deallocObject();
}

uint64_t sub_18350BC78(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v3 = a2 - a1;
    uint64_t v4 = a1;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  return nw_oblivious_http_set_standalone_aead_key(*(void **)(v2 + 16), v4, v3);
}

uint64_t type metadata accessor for NWProtocolHTTP()
{
  return self;
}

uint64_t type metadata accessor for NWProtocolHTTP.Options()
{
  return self;
}

uint64_t type metadata accessor for NWProtocolHTTPEncoding()
{
  return self;
}

uint64_t type metadata accessor for NWProtocolHTTPEncoding.Options()
{
  return self;
}

uint64_t NWInterface.init(_:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t NWInterface.init(_:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_183D44BAC();
  swift_bridgeObjectRelease();
  uint64_t v3 = nw_interface_create_with_name((char *)(v2 + 32));
  uint64_t result = swift_release();
  if (v3) {
    uint64_t v5 = (uint64_t)v3;
  }
  else {
    uint64_t v5 = 1;
  }
  *a1 = v5;
  return result;
}

uint64_t NWInterface.init(_:)@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if ((a1 & 0x8000000000000000) != 0 || HIDWORD(a1))
  {
    uint64_t result = sub_183D456BC();
    __break(1u);
  }
  else
  {
    uint64_t result = (uint64_t)nw_interface_create_with_index(a1);
    if (result) {
      uint64_t v4 = result;
    }
    else {
      uint64_t v4 = 1;
    }
    *a2 = v4;
  }
  return result;
}

uint64_t NWInterface.name.getter()
{
  if (!*v0) {
    return 0x64696C61766E69;
  }
  uint64_t v1 = swift_unknownObjectRetain();
  nw_interface_get_name(v1);
  uint64_t v2 = sub_183D44C9C();
  swift_unknownObjectRelease();
  return v2;
}

uint64_t NWInterface.index.getter()
{
  if (*v0) {
    return nw_interface_get_index(*v0);
  }
  else {
    return -1;
  }
}

uint64_t NWInterface.nw.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_18350BF3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  unint64_t v5 = sub_18359A5D0(a1);
  if (v6)
  {
    unint64_t v7 = v5;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v2;
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1835A0F50();
      uint64_t v9 = v19;
    }
    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB266A00);
    uint64_t v18 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 32))(a2, v10 + *(void *)(v18 + 72) * v7, v11);
    sub_1835509AC(v7, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB266A00);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }

  return v12(v13, v14, 1, v15);
}

uint64_t NWInterface.debugDescription.getter()
{
  if (!*v0) {
    return 0x64696C61766E69;
  }
  uint64_t v1 = swift_unknownObjectRetain();
  nw_interface_get_name(v1);
  uint64_t v2 = sub_183D44C9C();
  swift_unknownObjectRelease();
  return v2;
}

uint64_t NWInterface.hash(into:)()
{
  if (*v0)
  {
    nw_interface_get_index(*v0);
    sub_183D45B0C();
    uint64_t v1 = swift_unknownObjectRetain();
    nw_interface_get_name(v1);
    sub_183D44C9C();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_183D45B0C();
  }
  sub_183D44C4C();

  return swift_bridgeObjectRelease();
}

uint64_t NWInterface.InterfaceType.hash(into:)()
{
  return sub_183D45B0C();
}

void *NWInterface.subtype.getter@<X0>(char *a1@<X8>)
{
  uint64_t result = *v1;
  if (!*v1) {
    goto LABEL_9;
  }
  uint64_t result = (void *)nw_interface_get_subtype(result);
  if ((int)result > 4000)
  {
    if (result == 4001)
    {
      char v4 = 3;
      goto LABEL_10;
    }
    if (result == 5001)
    {
      char v4 = 4;
      goto LABEL_10;
    }
LABEL_9:
    char v4 = 0;
    goto LABEL_10;
  }
  if (result == 1001)
  {
    char v4 = 1;
    goto LABEL_10;
  }
  if (result != 1002) {
    goto LABEL_9;
  }
  char v4 = 2;
LABEL_10:
  *a1 = v4;
  return result;
}

BOOL static NWInterface.RadioType.Cellular.NewRadio5GVariant.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t NWInterface.RadioType.Cellular.NewRadio5GVariant.hash(into:)()
{
  return sub_183D45B0C();
}

uint64_t NWInterface.RadioType.Cellular.NewRadio5GVariant.hashValue.getter()
{
  return sub_183D45B4C();
}

uint64_t sub_18350C328@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 0;
  switch((int)result)
  {
    case 1:
      goto LABEL_8;
    case 2:
      *a2 = 1;
      break;
    case 3:
      *a2 = 2;
      break;
    case 4:
      *a2 = 3;
      break;
    case 5:
      *a2 = 4;
      break;
    case 6:
      *a2 = 5;
      break;
    case 128:
      *a2 = 80;
      break;
    case 129:
      *a2 = 16;
      break;
    case 130:
      *a2 = 17;
      break;
    case 131:
      *a2 = 48;
      break;
    case 132:
      *a2 = 49;
      break;
    case 133:
      *a2 = 81;
      break;
    case 134:
      *a2 = 112;
      break;
    case 135:
      *a2 = 113;
      break;
    case 136:
      *a2 = -112;
      break;
    default:
      char v2 = 24;
LABEL_8:
      *a2 = v2;
      break;
  }
  return result;
}

void NWInterface.radioType.getter(char *a1@<X8>)
{
  if (*v1)
  {
    uint64_t v3 = (void *)swift_unknownObjectRetain();
    radio_os_log_type_t type = nw_interface_get_radio_type(v3);
    sub_18350C328(radio_type, a1);
    swift_unknownObjectRelease();
  }
  else
  {
    *a1 = 24;
  }
}

uint64_t NWInterface.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_183D45AFC();
  if (v1)
  {
    nw_interface_get_index(v1);
    sub_183D45B0C();
    char v2 = swift_unknownObjectRetain();
    nw_interface_get_name(v2);
    sub_183D44C9C();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_183D45B0C();
  }
  sub_183D44C4C();
  swift_bridgeObjectRelease();
  return sub_183D45B4C();
}

uint64_t sub_18350C758()
{
  if (*v0)
  {
    nw_interface_get_index(*v0);
    sub_183D45B0C();
    uint64_t v1 = swift_unknownObjectRetain();
    nw_interface_get_name(v1);
    sub_183D44C9C();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_183D45B0C();
  }
  sub_183D44C4C();

  return swift_bridgeObjectRelease();
}

uint64_t sub_18350C80C()
{
  uint64_t v1 = *v0;
  sub_183D45AFC();
  if (v1)
  {
    nw_interface_get_index(v1);
    sub_183D45B0C();
    char v2 = swift_unknownObjectRetain();
    nw_interface_get_name(v2);
    sub_183D44C9C();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_183D45B0C();
  }
  sub_183D44C4C();
  swift_bridgeObjectRelease();
  return sub_183D45B4C();
}

uint64_t sub_18350C8C0()
{
  if (!*v0) {
    return 0x64696C61766E69;
  }
  uint64_t v1 = swift_unknownObjectRetain();
  nw_interface_get_name(v1);
  uint64_t v2 = sub_183D44C9C();
  swift_unknownObjectRelease();
  return v2;
}

uint64_t NWPath.debugDescription.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for NWPath(0) + 52));
  if (!v1) {
    return 1701736302;
  }
  id v2 = objc_msgSend(v1, sel_description);
  uint64_t v3 = sub_183D44AFC();

  return v3;
}

uint64_t NWPath.nw.getter()
{
  type metadata accessor for NWPath(0);

  return swift_unknownObjectRetain();
}

NSObject *NWPath.unsatisfiedReason.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = *(NSObject **)(v1 + *(int *)(type metadata accessor for NWPath(0) + 52));
  if (result)
  {
    uint64_t result = nw_path_get_unsatisfied_reason(result);
    if (result >= 5) {
      char v4 = 0;
    }
    else {
      char v4 = (char)result;
    }
  }
  else
  {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t NWPath.supportsIPv4.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t NWPath.supportsIPv6.getter()
{
  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t NWPath.supportsDNS.getter()
{
  return *(unsigned __int8 *)(v0 + 19);
}

uint64_t NWPath.gateways.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t NWPath.localEndpoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for NWPath(0);
  return sub_183138900(v1 + *(int *)(v3 + 44), a1, qword_1EB266A50);
}

uint64_t NWPath.remoteEndpoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for NWPath(0);
  return sub_183138900(v1 + *(int *)(v3 + 48), a1, qword_1EB266A50);
}

Swift::Bool __swiftcall NWPath.usesInterfaceType(_:)(Network::NWInterface::InterfaceType a1)
{
  id v2 = (unsigned __int8 *)a1;
  uint64_t v3 = *(NSObject **)(v1 + *(int *)(type metadata accessor for NWPath(0) + 52));
  if (v3) {
    LOBYTE(v3) = nw_path_uses_interface_type(v3, (nw_interface_type_t)*v2);
  }
  return (char)v3;
}

Swift::Bool __swiftcall NWPath.usesInterfaceSubtype(_:)(Network::NWInterface::InterfaceSubtype a1)
{
  id v2 = (char *)a1;
  uint64_t v3 = *(void **)(v1 + *(int *)(type metadata accessor for NWPath(0) + 52));
  if (v3) {
    LOBYTE(v3) = nw_path_uses_interface_subtype(v3, dword_183D5709C[*v2]);
  }
  return (char)v3;
}

uint64_t NWPath.estimatedUploadThroughput.getter()
{
  return sub_18350CB84((uint64_t (*)(void))nw_path_get_estimated_upload_throughput);
}

uint64_t NWPath.estimatedDownloadThroughput.getter()
{
  return sub_18350CB84((uint64_t (*)(void))nw_path_get_estimated_download_throughput);
}

uint64_t sub_18350CB84(uint64_t (*a1)(void))
{
  uint64_t result = *(void *)(v1 + *(int *)(type metadata accessor for NWPath(0) + 52));
  if (result) {
    return a1();
  }
  return result;
}

uint64_t NWPath.isDirect.getter()
{
  return sub_1834A3DF8((uint64_t (*)(void))nw_path_is_direct);
}

BOOL static NWPath.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWPath(0);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(int *)(v5 + 52);
  uint64_t v9 = *(NSObject **)(a1 + v8);
  if (!v9)
  {
    sub_18313829C(a2, (uint64_t)v7, type metadata accessor for NWPath);
    BOOL v11 = *(void *)&v7[*(int *)(v4 + 52)] == 0;
LABEL_6:
    sub_1832FF6F4((uint64_t)v7, type metadata accessor for NWPath);
    return v11;
  }
  uint64_t v10 = *(NSObject **)(a2 + v8);
  if (!v10)
  {
    sub_18313829C(a2, (uint64_t)v7, type metadata accessor for NWPath);
    BOOL v11 = 0;
    goto LABEL_6;
  }
  return nw_path_is_equal(v9, v10);
}

BOOL sub_18350CCFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = MEMORY[0x1F4188790](a1);
  unint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(int *)(v8 + 60);
  uint64_t v10 = *(NSObject **)(v4 + v9);
  if (!v10)
  {
    sub_18313829C(v5, (uint64_t)v7, type metadata accessor for NWPath);
    BOOL v12 = *(void *)&v7[*(int *)(a3 + 52)] == 0;
LABEL_6:
    sub_1832FF6F4((uint64_t)v7, type metadata accessor for NWPath);
    return v12;
  }
  BOOL v11 = *(NSObject **)(v5 + v9);
  if (!v11)
  {
    sub_18313829C(v5, (uint64_t)v7, type metadata accessor for NWPath);
    BOOL v12 = 0;
    goto LABEL_6;
  }
  return nw_path_is_equal(v10, v11);
}

uint64_t sub_18350CDFC(uint64_t a1)
{
  id v2 = *(void **)(v1 + *(int *)(a1 + 52));
  if (!v2) {
    return 1701736302;
  }
  id v3 = objc_msgSend(v2, sel_description);
  uint64_t v4 = sub_183D44AFC();

  return v4;
}

void sub_18350CE6C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 16);
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_183138744(v4, a2);

  os_unfair_lock_unlock(v5);
}

uint64_t sub_18350CF20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWPath(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_18313829C(a1, (uint64_t)v6, type metadata accessor for NWPath);
  uint64_t v7 = *(void *)(*(void *)a2 + 16);
  BOOL v12 = v6;
  uint64_t v8 = v7 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v7 + 16);
  uint64_t v9 = (os_unfair_lock_s *)(v7 + ((*(unsigned int *)(*(void *)v7 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v9);
  sub_183514604(v8);
  os_unfair_lock_unlock(v9);
  return sub_1832FF6F4((uint64_t)v6, type metadata accessor for NWPath);
}

uint64_t NWPathMonitor.currentPath.setter(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_18350F860(v4);
  os_unfair_lock_unlock(v5);
  return sub_1832FF6F4(a1, type metadata accessor for NWPath);
}

uint64_t sub_18350D108(uint64_t a1, uint64_t a2)
{
  sub_183138A24(a1, (uint64_t *)&unk_1EB266A38);
  sub_18313829C(a2, a1, type metadata accessor for NWPath);
  uint64_t v4 = type metadata accessor for NWPath(0);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 0, 1, v4);
}

void (*NWPathMonitor.currentPath.modify(void *a1))(void ***a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  size_t v4 = *(void *)(*(void *)(type metadata accessor for NWPath(0) - 8) + 64);
  *uint64_t v3 = malloc(v4);
  uint64_t v5 = malloc(v4);
  uint64_t v6 = *(uint64_t **)(v1 + 16);
  v3[1] = v5;
  v3[2] = v6;
  uint64_t v7 = *v6;
  uint64_t v8 = *(void *)(*MEMORY[0x1E4FBBAB0] + *v6 + 16);
  v3[3] = v8;
  uint64_t v9 = (uint64_t)v6 + v8;
  uint64_t v10 = *(unsigned int *)(v7 + 48);
  *((_DWORD *)v3 + 10) = v10;
  BOOL v11 = (os_unfair_lock_s *)((char *)v6 + ((v10 + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v11);
  sub_183138744(v9, (uint64_t)v5);
  v3[4] = 0;
  os_unfair_lock_unlock(v11);
  return sub_18350D2C4;
}

void sub_18350D2C4(void ***a1, char a2)
{
  id v2 = *a1;
  size_t v4 = (*a1)[1];
  uint64_t v3 = (char *)(*a1)[2];
  uint64_t v5 = **a1;
  uint64_t v6 = (os_unfair_lock_s *)&v3[(*((unsigned int *)*a1 + 10) + 3) & 0x1FFFFFFFCLL];
  uint64_t v7 = (uint64_t)(*a1)[3] + (void)v3;
  if (a2)
  {
    uint64_t v8 = sub_18313829C((uint64_t)(*a1)[1], (uint64_t)v5, type metadata accessor for NWPath);
    MEMORY[0x1F4188790](v8);
    os_unfair_lock_lock(v6);
    sub_183514604(v7);
    os_unfair_lock_unlock(v6);
    sub_1832FF6F4((uint64_t)v5, type metadata accessor for NWPath);
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    os_unfair_lock_lock(v6);
    sub_183514604(v7);
    os_unfair_lock_unlock(v6);
  }
  sub_1832FF6F4((uint64_t)v4, type metadata accessor for NWPath);
  free(v4);
  free(v5);
  free(v2);
}

uint64_t (*NWPathMonitor.pathUpdateHandler.getter())()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_18350D718(v2, (uint64_t (**)(uint64_t))&v6);
  os_unfair_lock_unlock(v3);
  if (!(void)v6) {
    return 0;
  }
  long long v5 = v6;
  *(_OWORD *)(swift_allocObject() + 16) = v5;
  return sub_18313D738;
}

double sub_18350D510@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 16);
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16);
  long long v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_18350D718(v4, (uint64_t (**)(uint64_t))&v7);
  os_unfair_lock_unlock(v5);
  double result = *(double *)&v7;
  *a2 = v7;
  return result;
}

uint64_t sub_18350D5C0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  if (*a1)
  {
    a1 = (uint64_t *)swift_allocObject();
    a1[2] = v2;
    a1[3] = v1;
    uint64_t v3 = sub_1834CCB54;
  }
  else
  {
    uint64_t v3 = 0;
  }
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = v4 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v4 + 16);
  long long v6 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(void *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  sub_18315ED5C(v2);
  os_unfair_lock_lock(v6);
  sub_1835145E0(v5);
  os_unfair_lock_unlock(v6);
  return sub_18313D870((uint64_t)v3);
}

uint64_t sub_18350D6F0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_18350D718@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for NWPathMonitor.LockedState(0) + 20));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (*v3)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    long long v7 = sub_1835145AC;
  }
  else
  {
    long long v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(uint64_t))v6;
  return sub_18315ED5C(v4);
}

void (*NWPathMonitor.pathUpdateHandler.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *(uint64_t **)(v1 + 16);
  v3[2] = v4;
  uint64_t v5 = *v4;
  uint64_t v6 = *(void *)(*MEMORY[0x1E4FBBAB0] + *v4 + 16);
  v3[3] = v6;
  uint64_t v7 = (uint64_t)v4 + v6;
  uint64_t v8 = *(unsigned int *)(v5 + 48);
  *((_DWORD *)v3 + 10) = v8;
  uint64_t v9 = (os_unfair_lock_s *)((char *)v4 + ((v8 + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v9);
  sub_18350D718(v7, v14);
  v3[4] = 0;
  os_unfair_lock_unlock(v9);
  if (v14[0])
  {
    long long v13 = *(_OWORD *)v14;
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = v13;
    BOOL v11 = sub_1834CCB54;
  }
  else
  {
    BOOL v11 = 0;
    uint64_t v10 = 0;
  }
  *uint64_t v3 = v11;
  v3[1] = v10;
  return sub_18350D8DC;
}

void sub_18350D8DC(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = **a1;
  uint64_t v4 = (*a1)[2];
  uint64_t v5 = (*((unsigned int *)*a1 + 10) + 3) & 0x1FFFFFFFCLL;
  uint64_t v6 = (os_unfair_lock_s *)(v4 + v5);
  uint64_t v7 = v4 + (*a1)[3];
  if (a2)
  {
    sub_18315ED5C(v3);
    os_unfair_lock_lock(v6);
    sub_1835145E0(v7);
    os_unfair_lock_unlock(v6);
    sub_18313D870(v3);
    sub_18313D870(*v2);
  }
  else
  {
    os_unfair_lock_lock((os_unfair_lock_t)(v4 + v5));
    sub_1835145E0(v7);
    os_unfair_lock_unlock(v6);
    sub_18313D870(v3);
  }
  free(v2);
}

uint64_t sub_18350D9C0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void *)(result + 16);
    swift_retain();
    swift_release();
    uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
    uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v3);
    sub_18350DF0C(v2, &v4);
    os_unfair_lock_unlock(v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_18350DAA8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB266A00);
  uint64_t v37 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB2669F8);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v32 - v9;
  locked = (int *)type metadata accessor for NWPathMonitor.LockedState(0);
  *(unsigned char *)(a1 + locked[10]) = 1;
  uint64_t v12 = locked[11];
  swift_release();
  *(void *)(a1 + v12) = 0;
  if (nw_utilities_minos_atleast(1))
  {
    long long v13 = (uint64_t *)(a1 + locked[5]);
    sub_18313D870(*v13);
    *long long v13 = 0;
    v13[1] = 0;
  }
  uint64_t v14 = *(void *)(a1 + locked[8]);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v33 = v14 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v34 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v35 = v37 + 16;
  uint64_t v38 = (void (**)(char *, char *, uint64_t))(v37 + 32);
  uint64_t v19 = (uint64_t (**)(char *, uint64_t))(v37 + 8);
  int64_t v32 = v34 - 1;
  uint64_t v36 = v14;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v39 = 0;
  uint64_t v21 = v37;
  if (!v18) {
    goto LABEL_10;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  unint64_t v23 = v22 | (v39 << 6);
  while (2)
  {
    uint64_t v24 = *(void *)(v36 + 56);
    *(void *)uint64_t v8 = *(void *)(*(void *)(v36 + 48) + 8 * v23);
    uint64_t v25 = v24 + *(void *)(v21 + 72) * v23;
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB2669F0);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(&v8[*(int *)(v26 + 48)], v25, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v8, 0, 1, v26);
    while (1)
    {
      sub_183138964((uint64_t)v8, (uint64_t)v10, &qword_1EB2669F8);
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB2669F0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v10, 1, v31) == 1) {
        return swift_release();
      }
      (*v38)(v4, &v10[*(int *)(v31 + 48)], v2);
      sub_183D44FFC();
      uint64_t result = (*v19)(v4, v2);
      if (v18) {
        goto LABEL_8;
      }
LABEL_10:
      int64_t v27 = v39 + 1;
      if (__OFADD__(v39, 1))
      {
        __break(1u);
        goto LABEL_31;
      }
      if (v27 < v34)
      {
        unint64_t v28 = *(void *)(v33 + 8 * v27);
        if (v28) {
          goto LABEL_13;
        }
        int64_t v29 = v39 + 2;
        ++v39;
        if (v27 + 1 < v34)
        {
          unint64_t v28 = *(void *)(v33 + 8 * v29);
          if (v28) {
            goto LABEL_16;
          }
          int64_t v39 = v27 + 1;
          if (v27 + 2 < v34)
          {
            unint64_t v28 = *(void *)(v33 + 8 * (v27 + 2));
            if (v28)
            {
              v27 += 2;
              goto LABEL_13;
            }
            int64_t v29 = v27 + 3;
            int64_t v39 = v27 + 2;
            if (v27 + 3 < v34) {
              break;
            }
          }
        }
      }
LABEL_27:
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB2669F0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v8, 1, 1, v30);
      unint64_t v18 = 0;
    }
    unint64_t v28 = *(void *)(v33 + 8 * v29);
    if (v28)
    {
LABEL_16:
      int64_t v27 = v29;
LABEL_13:
      unint64_t v18 = (v28 - 1) & v28;
      unint64_t v23 = __clz(__rbit64(v28)) + (v27 << 6);
      int64_t v39 = v27;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v27 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v27 >= v34)
    {
      int64_t v39 = v32;
      goto LABEL_27;
    }
    unint64_t v28 = *(void *)(v33 + 8 * v27);
    ++v29;
    if (v28) {
      goto LABEL_13;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_18350DF0C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_18350DAA8(a1);
  *a2 = 0;
  return result;
}

Swift::Void __swiftcall NWPathMonitor.cancel()()
{
  nw_path_monitor_cancel(*(nw_path_monitor_t *)(v0 + 24));
}

uint64_t NWPathMonitor.queue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_18350DFE8(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

id sub_18350DFE8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + *(int *)(type metadata accessor for NWPathMonitor.LockedState(0) + 28));
  *a2 = v3;
  return v3;
}

uint64_t NWPathMonitor.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  NWPathMonitor.init(_:)(a1);
  return v2;
}

uint64_t NWPathMonitor.init(_:)(uint64_t a1)
{
  uint64_t locked = type metadata accessor for NWPathMonitor.LockedState(0);
  char v4 = (int *)(locked - 8);
  MEMORY[0x1F4188790](locked);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NWPath(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = &v6[v4[7]];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  *(void *)&v6[v4[8]] = 1;
  *(void *)&v6[v4[9]] = 0;
  *(void *)&v6[v4[10]] = MEMORY[0x1E4FBC868];
  v6[v4[11]] = 0;
  v6[v4[12]] = 0;
  *(void *)&v6[v4[13]] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB266A18);
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + ((*(unsigned int *)(*(void *)v9 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_18313829C((uint64_t)v6, v9 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v9 + 16), type metadata accessor for NWPathMonitor.LockedState);
  sub_1832FF6F4((uint64_t)v6, type metadata accessor for NWPathMonitor.LockedState);
  *(void *)(v1 + 16) = v9;
  *(void *)(v1 + 24) = a1;
  return v1;
}

uint64_t NWPathMonitor.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  NWPathMonitor.init()();
  return v0;
}

uint64_t NWPathMonitor.deinit()
{
  nw_path_monitor_cancel(*(nw_path_monitor_t *)(v0 + 24));
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t NWPathMonitor.__deallocating_deinit()
{
  nw_path_monitor_cancel(*(nw_path_monitor_t *)(v0 + 24));
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t static NWPathMonitor.ethernetChannel.getter()
{
  nw_path_monitor_t v0 = nw_path_monitor_create_for_ethernet_channel();
  uint64_t v1 = swift_allocObject();
  NWPathMonitor.init(_:)((uint64_t)v0);
  return v1;
}

uint64_t NWPathMonitor.__allocating_init(requiredInterfaceType:)(unsigned __int8 *a1)
{
  uint64_t v2 = swift_allocObject();
  NWPathMonitor.init(requiredInterfaceType:)(a1);
  return v2;
}

uint64_t NWPathMonitor.init(requiredInterfaceType:)(unsigned __int8 *a1)
{
  uint64_t locked = type metadata accessor for NWPathMonitor.LockedState(0);
  char v4 = (int *)(locked - 8);
  MEMORY[0x1F4188790](locked);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(a1) = *a1;
  uint64_t v7 = type metadata accessor for NWPath(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = &v6[v4[7]];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  *(void *)&v6[v4[8]] = 1;
  *(void *)&v6[v4[9]] = 0;
  *(void *)&v6[v4[10]] = MEMORY[0x1E4FBC868];
  v6[v4[11]] = 0;
  v6[v4[12]] = 0;
  *(void *)&v6[v4[13]] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB266A18);
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + ((*(unsigned int *)(*(void *)v9 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_18313829C((uint64_t)v6, v9 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v9 + 16), type metadata accessor for NWPathMonitor.LockedState);
  sub_1832FF6F4((uint64_t)v6, type metadata accessor for NWPathMonitor.LockedState);
  *(void *)(v1 + 16) = v9;
  *(void *)(v1 + 24) = nw_path_monitor_create_with_type((nw_interface_type_t)a1);
  return v1;
}

uint64_t NWPathMonitor.__allocating_init(prohibitedInterfaceTypes:)(uint64_t a1)
{
  swift_allocObject();
  uint64_t v2 = sub_18350F8B4(a1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t NWPathMonitor.init(prohibitedInterfaceTypes:)(uint64_t a1)
{
  uint64_t v1 = sub_18350F8B4(a1);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t NWPathMonitor.debugDescription.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 24), sel_description);
  uint64_t v2 = sub_183D44AFC();

  return v2;
}

int *sub_18350E668(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F619B0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *uint64_t v6 = 1;
  (*(void (**)(void *, void))(v7 + 104))(v6, *MEMORY[0x1E4FBD018]);
  uint64_t v10 = a1;
  uint64_t v11 = a2;
  type metadata accessor for NWPath(0);
  sub_183D4505C();
  uint64_t result = (int *)type metadata accessor for NWPathMonitor.LockedState(0);
  if ((*(unsigned char *)(a1 + result[9]) & 1) == 0) {
    return sub_183138B48(a1);
  }
  return result;
}

int *sub_18350E7A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_183D4498C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB2669E8);
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v57 = v10;
  MEMORY[0x1F4188790](v10);
  unint64_t v55 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB266A38);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v61 = (uint64_t)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for NWPath(0);
  uint64_t v59 = *(void *)(v14 - 8);
  uint64_t v60 = v14;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v53 = (uint64_t)v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v54 = (uint64_t)v49 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(qword_1E8F619F0);
  MEMORY[0x1F4188790](v18 - 8);
  uInt v58 = (char *)v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB266A00);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void *)(v21 + 64);
  MEMORY[0x1F4188790](v20);
  unint64_t v23 = (char *)v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (int *)type metadata accessor for NWPathMonitor.LockedState(0);
  if ((*(unsigned char *)(a2 + result[10]) & 1) == 0)
  {
    uint64_t v34 = result[6];
    uint64_t v35 = *(void *)(a2 + v34);
    if (!__OFADD__(v35, 1))
    {
      *(void *)(a2 + v34) = v35 + 1;
      uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
      uint64_t v52 = a2;
      uint64_t v50 = v35;
      v51((char *)v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v20);
      uint64_t v36 = a1;
      unint64_t v37 = (*(unsigned __int8 *)(v21 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      uint64_t v38 = v20;
      unint64_t v39 = (v22 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = a3;
      unint64_t v41 = v40 + v37;
      uint64_t v42 = v36;
      (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v41, v23, v38);
      uint64_t v43 = v50;
      *(void *)(v40 + v39) = v50;
      swift_retain();
      sub_183D44FCC();
      uint64_t v44 = (uint64_t)v58;
      v51(v58, v42, v38);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v44, 0, 1, v38);
      uint64_t v45 = v52;
      sub_183534468(v44, v43);
      uint64_t v46 = v61;
      sub_183138900(v45, v61, (uint64_t *)&unk_1EB266A38);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v46, 1, v60) == 1) {
        return (int *)sub_183138A24(v46, (uint64_t *)&unk_1EB266A38);
      }
      uint64_t v47 = v54;
      sub_183138878(v46, v54, type metadata accessor for NWPath);
      sub_18313829C(v47, v53, type metadata accessor for NWPath);
      uint64_t v48 = v55;
      sub_183D44FEC();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
      return (int *)sub_1832FF6F4(v47, type metadata accessor for NWPath);
    }
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v61 = v7;
  uint64_t result = (int *)(id)__nwlog_path_log();
  if (!result) {
    goto LABEL_13;
  }
  sub_183D4499C();
  swift_retain_n();
  uint64_t v25 = sub_183D4496C();
  os_log_type_t v26 = sub_183D4529C();
  if (os_log_type_enabled(v25, v26))
  {
    v49[1] = a3;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v59 = v6;
    unint64_t v28 = (uint8_t *)v27;
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)unint64_t v28 = 136315138;
    uint64_t v63 = v29;
    uInt v58 = (char *)(v28 + 4);
    id v30 = objc_msgSend(*(id *)(a3 + 24), sel_description);
    uint64_t v31 = sub_183D44AFC();
    uint64_t v60 = a1;
    unint64_t v33 = v32;

    uint64_t v62 = sub_1834EFE70(v31, v33, &v63);
    sub_183D453AC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1830D4000, v25, v26, "%s Attempted to fetch paths for cancelled monitor", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v29, -1, -1);
    MEMORY[0x185318E50](v28, -1, -1);

    (*(void (**)(char *, uint64_t))(v61 + 8))(v9, v59);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v9, v6);
  }
  return (int *)sub_183D44FFC();
}

void sub_18350EE80(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = v2 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v2 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_18351458C(v3);
  os_unfair_lock_unlock(v4);
}

void sub_18350EF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1E8F619F0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB266A00);
  sub_183D44FFC();
  uint64_t locked = type metadata accessor for NWPathMonitor.LockedState(0);
  sub_18350BF3C(a3, (uint64_t)v9);
  sub_183138A24((uint64_t)v9, qword_1E8F619F0);
  if (!*(void *)(a1 + *(int *)(locked + 28))) {
    nw_path_monitor_cancel(*(nw_path_monitor_t *)(a4 + 24));
  }
}

uint64_t NWPathMonitor.Iterator.next()(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61A08);
  *uint64_t v3 = v1;
  v3[1] = sub_1834B5EB0;
  return MEMORY[0x1F4187D60](a1, v4);
}

uint64_t sub_18350F0C4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61A08);
  *uint64_t v3 = v1;
  v3[1] = sub_18350F178;
  return MEMORY[0x1F4187D60](a1, v4);
}

uint64_t sub_18350F178()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_18350F270(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61A08);
  *uint64_t v3 = v1;
  v3[1] = sub_183514600;
  return MEMORY[0x1F4187D60](a1, v4);
}

uint64_t NWPathMonitor.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  v14[0] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61A08);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A20);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = v10 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v10 + 16);
  uint64_t v12 = (os_unfair_lock_s *)(v10 + ((*(unsigned int *)(*(void *)v10 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v12);
  sub_18350FAB4(v11);
  os_unfair_lock_unlock(v12);
  sub_183D4501C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(void, char *, uint64_t))(v3 + 32))(v14[0], v5, v2);
  return swift_release();
}

uint64_t sub_18350F528@<X0>(uint64_t a1@<X8>)
{
  v14[0] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61A08);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A20);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(*(void *)v1 + 16);
  uint64_t v11 = v10 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v10 + 16);
  uint64_t v12 = (os_unfair_lock_s *)(v10 + ((*(unsigned int *)(*(void *)v10 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v12);
  sub_18350FAB4(v11);
  os_unfair_lock_unlock(v12);
  sub_183D4501C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(void, char *, uint64_t))(v3 + 32))(v14[0], v5, v2);
  return swift_release();
}

uint64_t _s7Network11NWInterfaceV2eeoiySbAC_ACtFZ_0(nw_interface_t *a1, nw_interface_t *a2)
{
  uint64_t v2 = *a2;
  if (*a1)
  {
    uint32_t index = nw_interface_get_index(*a1);
    if (v2 && index == nw_interface_get_index(v2))
    {
      uint64_t v4 = swift_unknownObjectRetain();
      nw_interface_get_name(v4);
      uint64_t v5 = sub_183D44C9C();
      unint64_t v7 = v6;
      swift_unknownObjectRelease();
      uint64_t v8 = swift_unknownObjectRetain();
      nw_interface_get_name(v8);
      uint64_t v9 = sub_183D44C9C();
      unint64_t v11 = v10;
      swift_unknownObjectRelease();
      if (v5 != v9) {
        goto LABEL_12;
      }
      goto LABEL_10;
    }
    return 0;
  }
  if (v2)
  {
    nw_interface_get_index(*a2);
    return 0;
  }
  unint64_t v7 = 0xE700000000000000;
  unint64_t v11 = 0xE700000000000000;
LABEL_10:
  if (v7 == v11)
  {
    swift_bridgeObjectRelease_n();
    return 1;
  }
LABEL_12:
  char v13 = sub_183D4592C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13 & 1;
}

uint64_t sub_18350F860(uint64_t a1)
{
  return sub_18350D108(a1, *(void *)(v1 + 16));
}

uint64_t sub_18350F87C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_18350F8B4(uint64_t a1)
{
  uint64_t locked = type metadata accessor for NWPathMonitor.LockedState(0);
  uint64_t v4 = (int *)(locked - 8);
  MEMORY[0x1F4188790](locked);
  unint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NWPath(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = &v6[v4[7]];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  *(void *)&v6[v4[8]] = 1;
  *(void *)&v6[v4[9]] = 0;
  *(void *)&v6[v4[10]] = MEMORY[0x1E4FBC868];
  v6[v4[11]] = 0;
  v6[v4[12]] = 0;
  *(void *)&v6[v4[13]] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB266A18);
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + ((*(unsigned int *)(*(void *)v9 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_18313829C((uint64_t)v6, v9 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v9 + 16), type metadata accessor for NWPathMonitor.LockedState);
  sub_1832FF6F4((uint64_t)v6, type metadata accessor for NWPathMonitor.LockedState);
  *(void *)(v1 + 16) = v9;
  nw_path_monitor_t v10 = nw_path_monitor_create();
  *(void *)(v1 + 24) = v10;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v12 = v10;
    char v13 = (unsigned __int8 *)(a1 + 32);
    do
    {
      nw_interface_type_t v14 = *v13++;
      nw_path_monitor_prohibit_interface_type(v12, v14);
      --v11;
    }
    while (v11);
  }
  return v1;
}

int *sub_18350FAB4(uint64_t a1)
{
  return sub_18350E668(a1, v1);
}

unint64_t sub_18350FAD4()
{
  unint64_t result = qword_1E8F633D8;
  if (!qword_1E8F633D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F633D8);
  }
  return result;
}

unint64_t sub_18350FB2C()
{
  unint64_t result = qword_1E8F633E0;
  if (!qword_1E8F633E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F633E0);
  }
  return result;
}

unint64_t sub_18350FB84()
{
  unint64_t result = qword_1E8F633E8;
  if (!qword_1E8F633E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F633E8);
  }
  return result;
}

unint64_t sub_18350FBDC()
{
  unint64_t result = qword_1E8F633F0;
  if (!qword_1E8F633F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F633F0);
  }
  return result;
}

unint64_t sub_18350FC34()
{
  unint64_t result = qword_1E8F633F8;
  if (!qword_1E8F633F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F633F8);
  }
  return result;
}

unint64_t sub_18350FC8C()
{
  unint64_t result = qword_1E8F63400;
  if (!qword_1E8F63400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63400);
  }
  return result;
}

unint64_t sub_18350FCE4()
{
  unint64_t result = qword_1E8F63408[0];
  if (!qword_1E8F63408[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E8F63408);
  }
  return result;
}

uint64_t sub_18350FD38()
{
  return MEMORY[0x1E4FBC278];
}

uint64_t sub_18350FD44()
{
  return sub_183138A80((unint64_t *)&unk_1E8F63420, (void (*)(uint64_t))type metadata accessor for NWPathMonitor.Iterator);
}

uint64_t type metadata accessor for NWPathMonitor.Iterator(uint64_t a1)
{
  return sub_18315A7F8(a1, qword_1E8F61998);
}

void *assignWithCopy for NWInterface(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

void *assignWithTake for NWInterface(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for NWInterface.InterfaceSubtype()
{
  return &type metadata for NWInterface.InterfaceSubtype;
}

uint64_t getEnumTagSinglePayload for NWInterface.RadioType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 3) {
    goto LABEL_17;
  }
  if (a2 + 253 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 253) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 253;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 253;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 253;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 2) & 2 | (*a1 >> 4) & 1) ^ 3;
  if (v6 >= 2) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for NWInterface.RadioType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 253 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 253) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 2)
  {
    unsigned int v6 = ((a2 - 3) >> 8) + 1;
    *unint64_t result = a2 - 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x18350FFACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = (16 * (a2 & 1)) | 8;
        break;
    }
  }
  return result;
}

uint64_t sub_18350FFD4(unsigned __int8 *a1)
{
  return (*a1 >> 4) & 1;
}

unsigned char *sub_18350FFE0(unsigned char *result)
{
  *result &= ~0x10u;
  return result;
}

unsigned char *sub_18350FFF0(unsigned char *result, char a2)
{
  *unint64_t result = *result & 0xE7 | (16 * (a2 & 1));
  return result;
}

ValueMetadata *type metadata accessor for NWInterface.RadioType()
{
  return &type metadata for NWInterface.RadioType;
}

unsigned char *storeEnumTagSinglePayload for NWInterface.RadioType.WiFi(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1835100E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NWInterface.RadioType.WiFi()
{
  return &type metadata for NWInterface.RadioType.WiFi;
}

uint64_t getEnumTagSinglePayload for NWInterface.RadioType.Cellular(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7C) {
    goto LABEL_17;
  }
  if (a2 + 132 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 132) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 132;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 132;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 132;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 5) & 0xFFFFFF87 | (8 * ((*a1 >> 1) & 0xF))) ^ 0x7F;
  if (v6 >= 0x7B) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for NWInterface.RadioType.Cellular(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 132 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 132) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7C) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7B)
  {
    unsigned int v6 = ((a2 - 124) >> 8) + 1;
    *unint64_t result = a2 - 124;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x183510294);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1835102BC(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 <= 0x3F) {
    return v1 >> 5;
  }
  else {
    return (v1 | 0xFFFFFFFE) + 2 * (v1 >> 5);
  }
}

unsigned char *sub_1835102D8(unsigned char *result)
{
  *result &= 0x1Fu;
  return result;
}

unsigned char *sub_1835102E8(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    *unint64_t result = *result & 1 | (32 * a2);
  }
  else {
    *unint64_t result = (a2 & 1 | (32 * (a2 >> 1))) + 32;
  }
  return result;
}

ValueMetadata *type metadata accessor for NWInterface.RadioType.Cellular()
{
  return &type metadata for NWInterface.RadioType.Cellular;
}

unsigned char *storeEnumTagSinglePayload for NWInterface.RadioType.Cellular.NewRadio5GVariant(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1835103F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NWInterface.RadioType.Cellular.NewRadio5GVariant()
{
  return &type metadata for NWInterface.RadioType.Cellular.NewRadio5GVariant;
}

void *initializeBufferWithCopyOfBuffer for NWPath(uint64_t a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = a2[1];
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    *(void *)(a1 + 24) = a2[3];
    uint64_t v7 = a3[11];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for NWEndpoint();
    uint64_t v39 = *(void *)(v10 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v17 = *((void *)v9 + 1);
          *uint64_t v8 = *(void *)v9;
          v8[1] = v17;
          uint64_t v18 = *((void *)v9 + 3);
          void v8[2] = *((void *)v9 + 2);
          v8[3] = v18;
          uint64_t v19 = *((void *)v9 + 5);
          v8[4] = *((void *)v9 + 4);
          v8[5] = v19;
          uint64_t v20 = *((void *)v9 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v20 != 1) {
            swift_unknownObjectRetain();
          }
          v8[6] = v20;
          break;
        case 2u:
          uint64_t v15 = *((void *)v9 + 1);
          *uint64_t v8 = *(void *)v9;
          v8[1] = v15;
          swift_bridgeObjectRetain();
          break;
        case 3u:
          uint64_t v16 = sub_183D4447C();
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v8, v9, v16);
          break;
        case 4u:
          *uint64_t v8 = *(void *)v9;
          swift_unknownObjectRetain();
          break;
        default:
          uint64_t v14 = *(void *)v9;
          uint64_t v36 = *((void *)v9 + 2);
          uint64_t v37 = *((void *)v9 + 1);
          char v35 = v9[24];
          sub_18315E9E4(*(void *)v9, v37, v36, v35);
          *uint64_t v8 = v14;
          v8[1] = v37;
          void v8[2] = v36;
          *((unsigned char *)v8 + 24) = v35;
          *((_WORD *)v8 + 13) = *((_WORD *)v9 + 13);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v8, 0, 1, v10);
    }
    uint64_t v21 = a3[12];
    uint64_t v22 = (void *)((char *)v4 + v21);
    unint64_t v23 = (char *)a2 + v21;
    if (v11((char *)a2 + v21, 1, v10))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v30 = *((void *)v23 + 1);
          *uint64_t v22 = *(void *)v23;
          v22[1] = v30;
          uint64_t v31 = *((void *)v23 + 3);
          v22[2] = *((void *)v23 + 2);
          v22[3] = v31;
          uint64_t v32 = *((void *)v23 + 5);
          v22[4] = *((void *)v23 + 4);
          v22[5] = v32;
          uint64_t v33 = *((void *)v23 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v33 != 1) {
            swift_unknownObjectRetain();
          }
          v22[6] = v33;
          break;
        case 2u:
          uint64_t v28 = *((void *)v23 + 1);
          *uint64_t v22 = *(void *)v23;
          v22[1] = v28;
          swift_bridgeObjectRetain();
          break;
        case 3u:
          uint64_t v29 = sub_183D4447C();
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v22, v23, v29);
          break;
        case 4u:
          *uint64_t v22 = *(void *)v23;
          swift_unknownObjectRetain();
          break;
        default:
          uint64_t v25 = *(void *)v23;
          uint64_t v26 = *((void *)v23 + 1);
          uint64_t v27 = *((void *)v23 + 2);
          char v38 = v23[24];
          sub_18315E9E4(*(void *)v23, v26, v27, v38);
          *uint64_t v22 = v25;
          v22[1] = v26;
          v22[2] = v27;
          *((unsigned char *)v22 + 24) = v38;
          *((_WORD *)v22 + 13) = *((_WORD *)v23 + 13);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v22, 0, 1, v10);
    }
    *(void *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    swift_unknownObjectRetain();
  }
  return v4;
}

uint64_t assignWithCopy for NWPath(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[11];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for NWEndpoint();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *(void *)(v8 + 8);
          *(void *)(v7 + 16) = *(void *)(v8 + 16);
          *(void *)(v7 + 24) = *(void *)(v8 + 24);
          *(void *)(v7 + 32) = *(void *)(v8 + 32);
          *(void *)(v7 + 40) = *(void *)(v8 + 40);
          uint64_t v16 = *(void *)(v8 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v16 != 1) {
            swift_unknownObjectRetain();
          }
          *(void *)(v7 + 48) = v16;
          break;
        case 2u:
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *(void *)(v8 + 8);
          swift_bridgeObjectRetain();
          break;
        case 3u:
          uint64_t v17 = sub_183D4447C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v7, v8, v17);
          break;
        case 4u:
          *(void *)uint64_t v7 = *(void *)v8;
          swift_unknownObjectRetain();
          break;
        default:
          uint64_t v40 = *(void *)(v8 + 8);
          uint64_t v43 = *(void *)v8;
          uint64_t v38 = *(void *)(v8 + 16);
          char v37 = *(unsigned char *)(v8 + 24);
          sub_18315E9E4(*(void *)v8, v40, v38, v37);
          *(void *)uint64_t v7 = v43;
          *(void *)(v7 + 8) = v40;
          *(void *)(v7 + 16) = v38;
          *(unsigned char *)(v7 + 24) = v37;
          *(_WORD *)(v7 + 26) = *(_WORD *)(v8 + 26);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_18;
    }
LABEL_7:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
    memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_18;
  }
  if (v13)
  {
    sub_1832FF6F4(v7, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_1832FF6F4(v7, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = *(void *)(v8 + 8);
        *(void *)(v7 + 16) = *(void *)(v8 + 16);
        *(void *)(v7 + 24) = *(void *)(v8 + 24);
        *(void *)(v7 + 32) = *(void *)(v8 + 32);
        *(void *)(v7 + 40) = *(void *)(v8 + 40);
        uint64_t v35 = *(void *)(v8 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v35 != 1) {
          swift_unknownObjectRetain();
        }
        *(void *)(v7 + 48) = v35;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = *(void *)(v8 + 8);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v33 = sub_183D4447C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v7, v8, v33);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *(void *)uint64_t v7 = *(void *)v8;
        swift_unknownObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        uint64_t v15 = *(void *)v8;
        uint64_t v41 = *(void *)(v8 + 16);
        uint64_t v44 = *(void *)(v8 + 8);
        char v39 = *(unsigned char *)(v8 + 24);
        sub_18315E9E4(*(void *)v8, v44, v41, v39);
        *(void *)uint64_t v7 = v15;
        *(void *)(v7 + 8) = v44;
        *(void *)(v7 + 16) = v41;
        *(unsigned char *)(v7 + 24) = v39;
        *(_WORD *)(v7 + 26) = *(_WORD *)(v8 + 26);
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
LABEL_18:
  uint64_t v18 = a3[12];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  int v21 = v11(a1 + v18, 1, v9);
  int v22 = v11(v20, 1, v9);
  if (v21)
  {
    if (!v22)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)uint64_t v19 = *(void *)v20;
          *(void *)(v19 + 8) = *(void *)(v20 + 8);
          *(void *)(v19 + 16) = *(void *)(v20 + 16);
          *(void *)(v19 + 24) = *(void *)(v20 + 24);
          *(void *)(v19 + 32) = *(void *)(v20 + 32);
          *(void *)(v19 + 40) = *(void *)(v20 + 40);
          uint64_t v30 = *(void *)(v20 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v30 != 1) {
            swift_unknownObjectRetain();
          }
          *(void *)(v19 + 48) = v30;
          break;
        case 2u:
          *(void *)uint64_t v19 = *(void *)v20;
          *(void *)(v19 + 8) = *(void *)(v20 + 8);
          swift_bridgeObjectRetain();
          break;
        case 3u:
          uint64_t v31 = sub_183D4447C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v19, v20, v31);
          break;
        case 4u:
          *(void *)uint64_t v19 = *(void *)v20;
          swift_unknownObjectRetain();
          break;
        default:
          uint64_t v23 = *(void *)(v20 + 8);
          uint64_t v45 = *(void *)v20;
          uint64_t v24 = *(void *)(v20 + 16);
          char v42 = *(unsigned char *)(v20 + 24);
          sub_18315E9E4(*(void *)v20, v23, v24, v42);
          *(void *)uint64_t v19 = v45;
          *(void *)(v19 + 8) = v23;
          *(void *)(v19 + 16) = v24;
          *(unsigned char *)(v19 + 24) = v42;
          *(_WORD *)(v19 + 26) = *(_WORD *)(v20 + 26);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
      goto LABEL_35;
    }
LABEL_24:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
    memcpy((void *)v19, (const void *)v20, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_35;
  }
  if (v22)
  {
    sub_1832FF6F4(v19, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
    goto LABEL_24;
  }
  if (a1 != a2)
  {
    sub_1832FF6F4(v19, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)uint64_t v19 = *(void *)v20;
        *(void *)(v19 + 8) = *(void *)(v20 + 8);
        *(void *)(v19 + 16) = *(void *)(v20 + 16);
        *(void *)(v19 + 24) = *(void *)(v20 + 24);
        *(void *)(v19 + 32) = *(void *)(v20 + 32);
        *(void *)(v19 + 40) = *(void *)(v20 + 40);
        uint64_t v36 = *(void *)(v20 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v36 != 1) {
          swift_unknownObjectRetain();
        }
        *(void *)(v19 + 48) = v36;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(void *)uint64_t v19 = *(void *)v20;
        *(void *)(v19 + 8) = *(void *)(v20 + 8);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v34 = sub_183D4447C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v19, v20, v34);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *(void *)uint64_t v19 = *(void *)v20;
        swift_unknownObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        uint64_t v26 = *(void *)v20;
        uint64_t v27 = *(void *)(v20 + 8);
        uint64_t v28 = *(void *)(v20 + 16);
        char v29 = *(unsigned char *)(v20 + 24);
        sub_18315E9E4(*(void *)v20, v27, v28, v29);
        *(void *)uint64_t v19 = v26;
        *(void *)(v19 + 8) = v27;
        *(void *)(v19 + 16) = v28;
        *(unsigned char *)(v19 + 24) = v29;
        *(_WORD *)(v19 + 26) = *(_WORD *)(v20 + 26);
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
LABEL_35:
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t initializeWithTake for NWPath(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = a3[11];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for NWEndpoint();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v13 = sub_183D4447C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(v10 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v14 = a3[12];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v11((const void *)(a2 + v14), 1, v9))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v18 = sub_183D4447C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(v10 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
  }
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for NWPath(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[11];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for NWEndpoint();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_1832FF6F4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v16 = sub_183D4447C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 32))(v7, v8, v16);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v15 = *(void *)(v10 + 64);
LABEL_8:
      memcpy(v7, v8, v15);
      goto LABEL_14;
    }
    sub_1832FF6F4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
LABEL_7:
    size_t v15 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50) - 8) + 64);
    goto LABEL_8;
  }
  if (v13) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v14 = sub_183D4447C();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(v10 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  uint64_t v17 = a3[12];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  int v20 = v11((void *)(a1 + v17), 1, v9);
  int v21 = v11(v19, 1, v9);
  if (!v20)
  {
    if (!v21)
    {
      if (a1 == a2) {
        goto LABEL_27;
      }
      sub_1832FF6F4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v24 = sub_183D4447C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 32))(v18, v19, v24);
        swift_storeEnumTagMultiPayload();
        goto LABEL_27;
      }
      size_t v23 = *(void *)(v10 + 64);
      goto LABEL_21;
    }
    sub_1832FF6F4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
LABEL_20:
    size_t v23 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50) - 8) + 64);
LABEL_21:
    memcpy(v18, v19, v23);
    goto LABEL_27;
  }
  if (v21) {
    goto LABEL_20;
  }
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v22 = sub_183D4447C();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 32))(v18, v19, v22);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(void *)(v10 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
LABEL_27:
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_1835118C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_18351197C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NWPath.Status(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x183511AF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NWPath.UnsatisfiedReason()
{
  return &type metadata for NWPath.UnsatisfiedReason;
}

uint64_t method lookup function for NWPathMonitor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWPathMonitor);
}

uint64_t dispatch thunk of NWPathMonitor.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of NWPathMonitor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of NWPathMonitor.__allocating_init(requiredInterfaceType:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of NWPathMonitor.__allocating_init(prohibitedInterfaceTypes:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t initializeBufferWithCopyOfBuffer for NWPathMonitor.Iterator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61A08);
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for NWPathMonitor.Iterator(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61A08);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for NWPathMonitor.Iterator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61A08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for NWPathMonitor.Iterator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61A08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for NWPathMonitor.Iterator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61A08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for NWPathMonitor.Iterator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61A08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for NWPathMonitor.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_183511E48);
}

uint64_t sub_183511E48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61A08);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for NWPathMonitor.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_183511ECC);
}

uint64_t sub_183511ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61A08);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_183511F40()
{
  sub_1834A5418(319, &qword_1E8F61A18, type metadata accessor for NWPath, MEMORY[0x1E4FBD050]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_183511FFC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for NWPath(0);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB266A38);
      memcpy(v4, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v54 = v8;
      *(unsigned char *)uint64_t v4 = *(unsigned char *)a2;
      v4[1] = a2[1];
      *((_DWORD *)v4 + 4) = *((_DWORD *)a2 + 4);
      v4[3] = a2[3];
      uint64_t v11 = v7[11];
      __dst = (uint64_t *)((char *)v4 + v11);
      int v12 = (char *)a2 + v11;
      uint64_t v13 = type metadata accessor for NWEndpoint();
      uint64_t v53 = *(void *)(v13 - 8);
      uint64_t v14 = *(unsigned int (**)(void, void, void))(v53 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14(v12, 1, v13))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
        memcpy(__dst, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v51 = v14;
            uint64_t v19 = *((void *)v12 + 1);
            void *__dst = *(void *)v12;
            __dst[1] = v19;
            uint64_t v20 = *((void *)v12 + 3);
            __dst[2] = *((void *)v12 + 2);
            __dst[3] = v20;
            uint64_t v21 = *((void *)v12 + 5);
            __dst[4] = *((void *)v12 + 4);
            __dst[5] = v21;
            uint64_t v22 = *((void *)v12 + 6);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v22 != 1) {
              swift_unknownObjectRetain();
            }
            __dst[6] = v22;
            uint64_t v14 = v51;
            break;
          case 2u:
            uint64_t v17 = *((void *)v12 + 1);
            void *__dst = *(void *)v12;
            __dst[1] = v17;
            swift_bridgeObjectRetain();
            break;
          case 3u:
            uint64_t v18 = sub_183D4447C();
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(__dst, v12, v18);
            break;
          case 4u:
            void *__dst = *(void *)v12;
            swift_unknownObjectRetain();
            break;
          default:
            uint64_t v50 = v14;
            uint64_t v16 = *(void *)v12;
            uint64_t v48 = *((void *)v12 + 2);
            uint64_t v49 = *((void *)v12 + 1);
            char v47 = v12[24];
            sub_18315E9E4(*(void *)v12, v49, v48, v47);
            void *__dst = v16;
            uint64_t v14 = v50;
            __dst[1] = v49;
            __dst[2] = v48;
            *((unsigned char *)__dst + 24) = v47;
            *((_WORD *)__dst + 13) = *((_WORD *)v12 + 13);
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56))(__dst, 0, 1, v13);
      }
      uint64_t v23 = v7[12];
      uint64_t v24 = (uint64_t *)((char *)v4 + v23);
      uint64_t v25 = (char *)a2 + v23;
      if (v14((char *)a2 + v23, 1, v13))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
        uint64_t v27 = v54;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v32 = *((void *)v25 + 1);
            *uint64_t v24 = *(void *)v25;
            v24[1] = v32;
            uint64_t v33 = *((void *)v25 + 3);
            v24[2] = *((void *)v25 + 2);
            v24[3] = v33;
            uint64_t v34 = *((void *)v25 + 5);
            v24[4] = *((void *)v25 + 4);
            v24[5] = v34;
            uint64_t v35 = *((void *)v25 + 6);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v35 != 1) {
              swift_unknownObjectRetain();
            }
            v24[6] = v35;
            break;
          case 2u:
            uint64_t v30 = *((void *)v25 + 1);
            *uint64_t v24 = *(void *)v25;
            v24[1] = v30;
            swift_bridgeObjectRetain();
            break;
          case 3u:
            uint64_t v31 = sub_183D4447C();
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v24, v25, v31);
            break;
          case 4u:
            *uint64_t v24 = *(void *)v25;
            swift_unknownObjectRetain();
            break;
          default:
            uint64_t v28 = *(void *)v25;
            uint64_t v29 = *((void *)v25 + 1);
            __dsta = (void *)*((void *)v25 + 2);
            char v52 = v25[24];
            sub_18315E9E4(*(void *)v25, v29, (uint64_t)__dsta, v52);
            *uint64_t v24 = v28;
            v24[1] = v29;
            v24[2] = __dsta;
            *((unsigned char *)v24 + 24) = v52;
            *((_WORD *)v24 + 13) = *((_WORD *)v25 + 13);
            break;
        }
        uint64_t v27 = v54;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56))(v24, 0, 1, v13);
      }
      *(uint64_t *)((char *)v4 + v7[13]) = *(uint64_t *)((char *)a2 + v7[13]);
      uint64_t v36 = *(void (**)(uint64_t *, void, uint64_t, int *))(v27 + 56);
      swift_unknownObjectRetain();
      v36(v4, 0, 1, v7);
    }
    uint64_t v37 = a3[5];
    uint64_t v38 = (uint64_t *)((char *)v4 + v37);
    char v39 = (uint64_t *)((char *)a2 + v37);
    if (*v39)
    {
      uint64_t v40 = v39[1];
      *uint64_t v38 = *v39;
      v38[1] = v40;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
    }
    uint64_t v41 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    char v42 = *(void **)((char *)a2 + v41);
    *(uint64_t *)((char *)v4 + v41) = (uint64_t)v42;
    uint64_t v43 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *((unsigned char *)v4 + v43) = *((unsigned char *)a2 + v43);
    uint64_t v44 = a3[11];
    *((unsigned char *)v4 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    *(uint64_t *)((char *)v4 + v44) = *(uint64_t *)((char *)a2 + v44);
    id v45 = v42;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_18351263C(uint64_t a1, uint64_t a2, int *a3)
{
  unsigned int v6 = (int *)type metadata accessor for NWPath(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1832FF6F4(a1, type metadata accessor for NWPath);
      goto LABEL_7;
    }
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
    *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
    *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v19 = v6[11];
    uint64_t v20 = (uint64_t *)(a1 + v19);
    uint64_t v21 = (uint64_t *)(a2 + v19);
    uint64_t v22 = type metadata accessor for NWEndpoint();
    uint64_t v90 = *(void *)(v22 - 8);
    uint64_t v23 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v90 + 48);
    int v24 = v23(v20, 1, v22);
    int v25 = v23(v21, 1, v22);
    if (v24)
    {
      if (!v25)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *uint64_t v20 = *v21;
            v20[1] = v21[1];
            v20[2] = v21[2];
            v20[3] = v21[3];
            v20[4] = v21[4];
            v20[5] = v21[5];
            uint64_t v42 = v21[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v42 != 1) {
              swift_unknownObjectRetain();
            }
            v20[6] = v42;
            break;
          case 2u:
            *uint64_t v20 = *v21;
            v20[1] = v21[1];
            swift_bridgeObjectRetain();
            break;
          case 3u:
            uint64_t v43 = sub_183D4447C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v43 - 8) + 16))(v20, v21, v43);
            break;
          case 4u:
            *uint64_t v20 = *v21;
            swift_unknownObjectRetain();
            break;
          default:
            uint64_t v82 = v21[1];
            uint64_t v86 = *v21;
            uint64_t v77 = v21[2];
            char v75 = *((unsigned char *)v21 + 24);
            sub_18315E9E4(*v21, v82, v77, v75);
            *uint64_t v20 = v86;
            v20[1] = v82;
            v20[2] = v77;
            *((unsigned char *)v20 + 24) = v75;
            *((_WORD *)v20 + 13) = *((_WORD *)v21 + 13);
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v90 + 56))(v20, 0, 1, v22);
        goto LABEL_46;
      }
    }
    else
    {
      if (!v25)
      {
        if (a1 != a2)
        {
          sub_1832FF6F4((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *uint64_t v20 = *v21;
              v20[1] = v21[1];
              v20[2] = v21[2];
              v20[3] = v21[3];
              v20[4] = v21[4];
              v20[5] = v21[5];
              uint64_t v71 = v21[6];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v71 != 1) {
                swift_unknownObjectRetain();
              }
              v20[6] = v71;
              swift_storeEnumTagMultiPayload();
              break;
            case 2u:
              *uint64_t v20 = *v21;
              v20[1] = v21[1];
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
              break;
            case 3u:
              uint64_t v69 = sub_183D4447C();
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v69 - 8) + 16))(v20, v21, v69);
              swift_storeEnumTagMultiPayload();
              break;
            case 4u:
              *uint64_t v20 = *v21;
              swift_unknownObjectRetain();
              swift_storeEnumTagMultiPayload();
              break;
            default:
              uint64_t v29 = *v21;
              uint64_t v83 = v21[2];
              uint64_t v87 = v21[1];
              char v79 = *((unsigned char *)v21 + 24);
              sub_18315E9E4(*v21, v87, v83, v79);
              *uint64_t v20 = v29;
              v20[1] = v87;
              v20[2] = v83;
              *((unsigned char *)v20 + 24) = v79;
              *((_WORD *)v20 + 13) = *((_WORD *)v21 + 13);
              swift_storeEnumTagMultiPayload();
              break;
          }
        }
LABEL_46:
        uint64_t v44 = v6[12];
        id v45 = (uint64_t *)(a1 + v44);
        uint64_t v46 = (uint64_t *)(a2 + v44);
        int v47 = v23((uint64_t *)(a1 + v44), 1, v22);
        int v48 = v23(v46, 1, v22);
        if (v47)
        {
          if (!v48)
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                *id v45 = *v46;
                v45[1] = v46[1];
                v45[2] = v46[2];
                v45[3] = v46[3];
                v45[4] = v46[4];
                v45[5] = v46[5];
                uint64_t v55 = v46[6];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v55 != 1) {
                  swift_unknownObjectRetain();
                }
                v45[6] = v55;
                break;
              case 2u:
                *id v45 = *v46;
                v45[1] = v46[1];
                swift_bridgeObjectRetain();
                break;
              case 3u:
                uint64_t v56 = sub_183D4447C();
                (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v56 - 8) + 16))(v45, v46, v56);
                break;
              case 4u:
                *id v45 = *v46;
                swift_unknownObjectRetain();
                break;
              default:
                uint64_t v50 = *v46;
                uint64_t v49 = v46[1];
                uint64_t v88 = v46[2];
                char v84 = *((unsigned char *)v46 + 24);
                sub_18315E9E4(*v46, v49, v88, v84);
                *id v45 = v50;
                v45[1] = v49;
                v45[2] = v88;
                *((unsigned char *)v45 + 24) = v84;
                *((_WORD *)v45 + 13) = *((_WORD *)v46 + 13);
                break;
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v90 + 56))(v45, 0, 1, v22);
            goto LABEL_63;
          }
        }
        else
        {
          if (!v48)
          {
            if (a1 != a2)
            {
              sub_1832FF6F4((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  *id v45 = *v46;
                  v45[1] = v46[1];
                  v45[2] = v46[2];
                  v45[3] = v46[3];
                  v45[4] = v46[4];
                  v45[5] = v46[5];
                  uint64_t v72 = v46[6];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v72 != 1) {
                    swift_unknownObjectRetain();
                  }
                  v45[6] = v72;
                  swift_storeEnumTagMultiPayload();
                  break;
                case 2u:
                  *id v45 = *v46;
                  v45[1] = v46[1];
                  swift_bridgeObjectRetain();
                  swift_storeEnumTagMultiPayload();
                  break;
                case 3u:
                  uint64_t v70 = sub_183D4447C();
                  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v70 - 8) + 16))(v45, v46, v70);
                  swift_storeEnumTagMultiPayload();
                  break;
                case 4u:
                  *id v45 = *v46;
                  swift_unknownObjectRetain();
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  uint64_t v52 = *v46;
                  uint64_t v53 = v46[1];
                  uint64_t v54 = v46[2];
                  char v92 = *((unsigned char *)v46 + 24);
                  sub_18315E9E4(*v46, v53, v54, v92);
                  *id v45 = v52;
                  v45[1] = v53;
                  v45[2] = v54;
                  *((unsigned char *)v45 + 24) = v92;
                  *((_WORD *)v45 + 13) = *((_WORD *)v46 + 13);
                  swift_storeEnumTagMultiPayload();
                  break;
              }
            }
            goto LABEL_63;
          }
          sub_1832FF6F4((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
        }
        uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
        memcpy(v45, v46, *(void *)(*(void *)(v51 - 8) + 64));
LABEL_63:
        *(void *)(a1 + v6[13]) = *(void *)(a2 + v6[13]);
        swift_unknownObjectRetain();
        swift_unknownObjectRelease();
        goto LABEL_64;
      }
      sub_1832FF6F4((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
    }
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
    memcpy(v20, v21, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_46;
  }
  if (v10)
  {
LABEL_7:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB266A38);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_64;
  }
  uint64_t v85 = v7;
  uint64_t v89 = v6;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v11 = v6[11];
  int v12 = (void *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = type metadata accessor for NWEndpoint();
  uint64_t v81 = *(void *)(v14 - 8);
  uint64_t v15 = *(unsigned int (**)(void, void, void))(v81 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    uint64_t v17 = v89;
  }
  else
  {
    uint64_t v26 = v12;
    uint64_t v17 = v89;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v26 = *(void *)v13;
        v26[1] = *((void *)v13 + 1);
        v26[2] = *((void *)v13 + 2);
        v26[3] = *((void *)v13 + 3);
        v26[4] = *((void *)v13 + 4);
        v26[5] = *((void *)v13 + 5);
        uint64_t v30 = *((void *)v13 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v30 != 1) {
          swift_unknownObjectRetain();
        }
        v26[6] = v30;
        break;
      case 2u:
        *uint64_t v26 = *(void *)v13;
        v26[1] = *((void *)v13 + 1);
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v31 = sub_183D4447C();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v26, v13, v31);
        break;
      case 4u:
        *uint64_t v26 = *(void *)v13;
        swift_unknownObjectRetain();
        break;
      default:
        uInt v78 = v15;
        uint64_t v27 = *(void *)v13;
        uint64_t v74 = *((void *)v13 + 2);
        uint64_t v76 = *((void *)v13 + 1);
        char v73 = v13[24];
        sub_18315E9E4(*(void *)v13, v76, v74, v73);
        *uint64_t v26 = v27;
        uint64_t v15 = v78;
        v26[1] = v76;
        v26[2] = v74;
        *((unsigned char *)v26 + 24) = v73;
        *((_WORD *)v26 + 13) = *((_WORD *)v13 + 13);
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v81 + 56))(v26, 0, 1, v14);
  }
  uint64_t v32 = v17[12];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (char *)(a2 + v32);
  if (v15(a2 + v32, 1, v14))
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    uint64_t v36 = v85;
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v33 = *(void *)v34;
        v33[1] = *((void *)v34 + 1);
        v33[2] = *((void *)v34 + 2);
        v33[3] = *((void *)v34 + 3);
        v33[4] = *((void *)v34 + 4);
        v33[5] = *((void *)v34 + 5);
        uint64_t v39 = *((void *)v34 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v39 != 1) {
          swift_unknownObjectRetain();
        }
        v33[6] = v39;
        break;
      case 2u:
        *uint64_t v33 = *(void *)v34;
        v33[1] = *((void *)v34 + 1);
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v40 = sub_183D4447C();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v33, v34, v40);
        break;
      case 4u:
        *uint64_t v33 = *(void *)v34;
        swift_unknownObjectRetain();
        break;
      default:
        uint64_t v37 = *(void *)v34;
        uint64_t v38 = *((void *)v34 + 1);
        uint64_t v91 = *((void *)v34 + 2);
        char v80 = v34[24];
        sub_18315E9E4(*(void *)v34, v38, v91, v80);
        *uint64_t v33 = v37;
        v33[1] = v38;
        v33[2] = v91;
        *((unsigned char *)v33 + 24) = v80;
        *((_WORD *)v33 + 13) = *((_WORD *)v34 + 13);
        break;
    }
    uint64_t v36 = v85;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v81 + 56))(v33, 0, 1, v14);
  }
  *(void *)(a1 + v17[13]) = *(void *)(a2 + v17[13]);
  uint64_t v41 = *(void (**)(uint64_t, void, uint64_t, int *))(v36 + 56);
  swift_unknownObjectRetain();
  v41(a1, 0, 1, v17);
LABEL_64:
  uint64_t v57 = a3[5];
  uInt v58 = (void *)(a1 + v57);
  uint64_t v59 = a2 + v57;
  uint64_t v60 = *(void *)(a1 + v57);
  uint64_t v61 = *(void *)(a2 + v57);
  if (!v60)
  {
    if (v61)
    {
      uint64_t v63 = *(void *)(v59 + 8);
      *uInt v58 = v61;
      v58[1] = v63;
      swift_retain();
      goto LABEL_71;
    }
LABEL_70:
    *(_OWORD *)uInt v58 = *(_OWORD *)v59;
    goto LABEL_71;
  }
  if (!v61)
  {
    swift_release();
    goto LABEL_70;
  }
  uint64_t v62 = *(void *)(v59 + 8);
  *uInt v58 = v61;
  v58[1] = v62;
  swift_retain();
  swift_release();
LABEL_71:
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v64 = a3[7];
  uint64_t v65 = *(void **)(a1 + v64);
  uint64_t v66 = *(void **)(a2 + v64);
  *(void *)(a1 + v64) = v66;
  id v67 = v66;

  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  return a1;
}

unsigned char *sub_183513544(unsigned char *a1, unsigned char *a2, int *a3)
{
  unsigned int v6 = (int *)type metadata accessor for NWPath(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB266A38);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *((void *)a1 + 1) = *((void *)a2 + 1);
    *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
    *((void *)a1 + 3) = *((void *)a2 + 3);
    uint64_t v9 = v6[11];
    int v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = type metadata accessor for NWEndpoint();
    uint64_t v33 = *(void *)(v12 - 8);
    uint64_t v13 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v33 + 48);
    if (v13(v11, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v32 = v7;
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v15 = sub_183D4447C();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(v10, v11, v15);
        swift_storeEnumTagMultiPayload();
        uint64_t v16 = v10;
        uint64_t v17 = v33;
      }
      else
      {
        uint64_t v16 = v10;
        uint64_t v17 = v33;
        memcpy(v16, v11, *(void *)(v33 + 64));
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v16, 0, 1, v12);
      uint64_t v7 = v32;
    }
    uint64_t v18 = v6[12];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    if (v13(&a2[v18], 1, v12))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v22 = sub_183D4447C();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v19, v20, *(void *)(v33 + 64));
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v33 + 56))(v19, 0, 1, v12);
    }
    *(void *)&a1[v6[13]] = *(void *)&a2[v6[13]];
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v23 = a3[5];
  int v24 = &a1[v23];
  int v25 = (uint64_t *)&a2[v23];
  uint64_t v26 = *v25;
  if (*v25)
  {
    uint64_t v27 = v25[1];
    *int v24 = v26;
    v24[1] = v27;
  }
  else
  {
    *(_OWORD *)int v24 = *(_OWORD *)v25;
  }
  uint64_t v28 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[v28] = *(void *)&a2[v28];
  uint64_t v29 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  a1[v29] = a2[v29];
  uint64_t v30 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  *(void *)&a1[v30] = *(void *)&a2[v30];
  return a1;
}

uint64_t sub_18351391C(uint64_t a1, uint64_t a2, int *a3)
{
  unsigned int v6 = (int *)type metadata accessor for NWPath(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1832FF6F4(a1, type metadata accessor for NWPath);
      goto LABEL_7;
    }
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
    *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
    *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRelease();
    uint64_t v18 = v6[11];
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (void *)(a2 + v18);
    uint64_t v21 = type metadata accessor for NWEndpoint();
    uint64_t v61 = *(void *)(v21 - 8);
    uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v61 + 48);
    int v23 = v22(v19, 1, v21);
    int v24 = v22(v20, 1, v21);
    if (v23)
    {
      if (!v24)
      {
        if (swift_getEnumCaseMultiPayload() == 3)
        {
          uint64_t v25 = sub_183D4447C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 32))(v19, v20, v25);
          swift_storeEnumTagMultiPayload();
          uint64_t v26 = v61;
        }
        else
        {
          uint64_t v26 = v61;
          memcpy(v19, v20, *(void *)(v61 + 64));
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v19, 0, 1, v21);
LABEL_32:
        uint64_t v39 = v6[12];
        uint64_t v40 = (void *)(a1 + v39);
        uint64_t v41 = (void *)(a2 + v39);
        int v42 = v22((void *)(a1 + v39), 1, v21);
        int v43 = v22(v41, 1, v21);
        if (v42)
        {
          if (!v43)
          {
            if (swift_getEnumCaseMultiPayload() == 3)
            {
              uint64_t v44 = sub_183D4447C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 32))(v40, v41, v44);
              swift_storeEnumTagMultiPayload();
              uint64_t v45 = v61;
            }
            else
            {
              uint64_t v45 = v61;
              memcpy(v40, v41, *(void *)(v61 + 64));
            }
            (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(v40, 0, 1, v21);
            goto LABEL_45;
          }
        }
        else
        {
          if (!v43)
          {
            if (a1 == a2) {
              goto LABEL_45;
            }
            sub_1832FF6F4((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
            if (swift_getEnumCaseMultiPayload() == 3)
            {
              uint64_t v47 = sub_183D4447C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 32))(v40, v41, v47);
              swift_storeEnumTagMultiPayload();
              goto LABEL_45;
            }
            size_t v46 = *(void *)(v61 + 64);
LABEL_39:
            memcpy(v40, v41, v46);
LABEL_45:
            *(void *)(a1 + v6[13]) = *(void *)(a2 + v6[13]);
            swift_unknownObjectRelease();
            goto LABEL_46;
          }
          sub_1832FF6F4((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
        }
        size_t v46 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50) - 8) + 64);
        goto LABEL_39;
      }
    }
    else
    {
      if (!v24)
      {
        if (a1 == a2) {
          goto LABEL_32;
        }
        sub_1832FF6F4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
        if (swift_getEnumCaseMultiPayload() == 3)
        {
          uint64_t v38 = sub_183D4447C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 32))(v19, v20, v38);
          swift_storeEnumTagMultiPayload();
          goto LABEL_32;
        }
        size_t v30 = *(void *)(v61 + 64);
LABEL_17:
        memcpy(v19, v20, v30);
        goto LABEL_32;
      }
      sub_1832FF6F4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for NWEndpoint);
    }
    size_t v30 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50) - 8) + 64);
    goto LABEL_17;
  }
  if (v10)
  {
LABEL_7:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB266A38);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_46;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v11 = v6[11];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for NWEndpoint();
  uint64_t v60 = *(void *)(v14 - 8);
  uint64_t v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v60 + 48);
  if (v15(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v27 = sub_183D4447C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 32))(v12, v13, v27);
      swift_storeEnumTagMultiPayload();
      uint64_t v28 = v12;
      uint64_t v29 = v60;
    }
    else
    {
      uint64_t v31 = v12;
      uint64_t v59 = v12;
      uint64_t v29 = v60;
      memcpy(v31, v13, *(void *)(v60 + 64));
      uint64_t v28 = v59;
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v28, 0, 1, v14);
  }
  uint64_t v32 = v6[12];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  if (v15((const void *)(a2 + v32), 1, v14))
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v36 = sub_183D4447C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
      swift_storeEnumTagMultiPayload();
      uint64_t v37 = v60;
    }
    else
    {
      uint64_t v37 = v60;
      memcpy(v33, v34, *(void *)(v60 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v14);
  }
  *(void *)(a1 + v6[13]) = *(void *)(a2 + v6[13]);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_46:
  uint64_t v48 = a3[5];
  uint64_t v49 = (void *)(a1 + v48);
  uint64_t v50 = a2 + v48;
  uint64_t v51 = *(void *)(a1 + v48);
  uint64_t v52 = *(void *)(a2 + v48);
  if (!v51)
  {
    if (v52)
    {
      uint64_t v54 = *(void *)(v50 + 8);
      *uint64_t v49 = v52;
      v49[1] = v54;
      goto LABEL_53;
    }
LABEL_52:
    *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
    goto LABEL_53;
  }
  if (!v52)
  {
    swift_release();
    goto LABEL_52;
  }
  uint64_t v53 = *(void *)(v50 + 8);
  *uint64_t v49 = v52;
  v49[1] = v53;
  swift_release();
LABEL_53:
  uint64_t v55 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v56 = *(void **)(a1 + v55);
  *(void *)(a1 + v55) = *(void *)(a2 + v55);

  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v57 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v57) = *(unsigned char *)(a2 + v57);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_release();
  return a1;
}

uint64_t sub_1835141A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1835141BC);
}

uint64_t sub_1835141BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB266A38);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_183514280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_183514294);
}

uint64_t sub_183514294(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB266A38);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_183514354()
{
  return swift_deallocObject();
}

uint64_t sub_183514364()
{
  return swift_deallocObject();
}

uint64_t sub_183514374()
{
  return swift_deallocObject();
}

uint64_t sub_183514384()
{
  return swift_deallocObject();
}

int *sub_183514394(uint64_t a1)
{
  return sub_18350E7A4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_18351439C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1835143D4()
{
  return sub_18350D9C0();
}

uint64_t sub_18351440C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB266A00);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1835144E8(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB266A00);
  uint64_t v3 = *(void *)(v1 + 16);

  sub_18350EE80(a1, v3);
}

void sub_18351458C(uint64_t a1)
{
  sub_18350EF24(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1835145AC(uint64_t a1)
{
  return sub_183572378(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1835145E0(uint64_t a1)
{
  return sub_1831375AC(a1);
}

uint64_t sub_183514604(uint64_t a1)
{
  return sub_18350F860(a1);
}

uint64_t sub_18351461C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (uint64_t *)(a1 + 32);
  uint64_t v4 = (NSObject **)(a2 + 32);
  while (1)
  {
    uint64_t v7 = *v3++;
    uint64_t v6 = v7;
    uint64_t v9 = *v4++;
    uint64_t v8 = v9;
    if (!v6) {
      break;
    }
    swift_unknownObjectRetain();
    unint64_t v10 = swift_unknownObjectRetain();
    uint32_t index = nw_interface_get_index(v10);
    if (!v8) {
      goto LABEL_20;
    }
    if (index != nw_interface_get_index(v8)) {
      goto LABEL_19;
    }
    uint64_t v12 = swift_unknownObjectRetain();
    nw_interface_get_name(v12);
    uint64_t v13 = sub_183D44C9C();
    unint64_t v15 = v14;
    swift_unknownObjectRelease();
    uint64_t v16 = swift_unknownObjectRetain();
    nw_interface_get_name(v16);
    uint64_t v17 = sub_183D44C9C();
    unint64_t v19 = v18;
    swift_unknownObjectRelease();
    if (v13 == v17)
    {
LABEL_14:
      if (v15 != v19) {
        goto LABEL_5;
      }
      swift_bridgeObjectRelease_n();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      if (!--v2) {
        return 1;
      }
    }
    else
    {
LABEL_5:
      char v5 = sub_183D4592C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      if ((v5 & 1) == 0) {
        return 0;
      }
      if (!--v2) {
        return 1;
      }
    }
  }
  swift_unknownObjectRetain();
  if (!v8)
  {
    unint64_t v15 = 0xE700000000000000;
    unint64_t v19 = 0xE700000000000000;
    goto LABEL_14;
  }
  nw_interface_get_index(v8);
LABEL_19:
  swift_unknownObjectRelease();
LABEL_20:
  swift_unknownObjectRelease();
  return 0;
}

uint64_t sub_1835147E0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_183D4592C(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_183D4592C() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1835148A8(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unint64_t *)(a1 + 40);
    uint64_t v4 = (unint64_t *)(a2 + 40);
    while (1)
    {
      uint64_t v6 = *(v3 - 1);
      unint64_t v5 = *v3;
      uint64_t v8 = *(v4 - 1);
      unint64_t v7 = *v4;
      unint64_t v9 = *v3 >> 62;
      v3 += 2;
      v4 += 2;
      uint64_t v10 = 0;
      switch(v9)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v6), v6))
          {
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
          }
          uint64_t v10 = HIDWORD(v6) - (int)v6;
LABEL_13:
          sub_1832E5D6C(v6, v5);
          break;
        case 2uLL:
          uint64_t v12 = *(void *)(v6 + 16);
          uint64_t v11 = *(void *)(v6 + 24);
          uint64_t v10 = v11 - v12;
          if (!__OFSUB__(v11, v12)) {
            goto LABEL_13;
          }
          goto LABEL_124;
        case 3uLL:
          break;
        default:
          uint64_t v10 = BYTE6(v5);
          break;
      }
      unint64_t v13 = v7 >> 62;
      switch(v7 >> 62)
      {
        case 1uLL:
          LODWORD(v14) = HIDWORD(v8) - v8;
          if (__OFSUB__(HIDWORD(v8), v8)) {
            goto LABEL_125;
          }
          uint64_t v14 = (int)v14;
LABEL_19:
          if (v10 != v14) {
            goto LABEL_121;
          }
          if (v10 < 1)
          {
LABEL_6:
            sub_1832E5E9C(v6, v5);
          }
          else
          {
            switch((int)v9)
            {
              case 1:
                uint64_t v76 = v3;
                if ((int)v6 > v6 >> 32) {
                  goto LABEL_127;
                }
                sub_1832E5D6C(v8, v7);
                int v23 = (char *)sub_183D4434C();
                if (!v23) {
                  goto LABEL_33;
                }
                uint64_t v24 = sub_183D4437C();
                if (__OFSUB__((int)v6, v24)) {
                  goto LABEL_129;
                }
                v23 += (int)v6 - v24;
LABEL_33:
                sub_183D4436C();
                if (!v13)
                {
                  __s1[0] = v8;
                  LOWORD(__s1[1]) = v7;
                  BYTE2(__s1[1]) = BYTE2(v7);
                  BYTE3(__s1[1]) = BYTE3(v7);
                  BYTE4(__s1[1]) = BYTE4(v7);
                  BYTE5(__s1[1]) = BYTE5(v7);
                  if (!v23) {
                    goto LABEL_157;
                  }
                  size_t v41 = BYTE6(v7);
                  uint64_t v40 = __s1;
                  uint64_t v39 = v23;
LABEL_103:
                  int v29 = memcmp(v39, v40, v41);
                  goto LABEL_104;
                }
                if (v13 == 1)
                {
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_138;
                  }
                  swift_retain();
                  uint64_t v25 = (char *)sub_183D4434C();
                  if (v25)
                  {
                    uint64_t v26 = sub_183D4437C();
                    if (__OFSUB__((int)v8, v26)) {
                      goto LABEL_145;
                    }
                    v25 += (int)v8 - v26;
                  }
                  uint64_t v27 = sub_183D4436C();
                  if (v27 >= (v8 >> 32) - (int)v8) {
                    size_t v28 = (v8 >> 32) - (int)v8;
                  }
                  else {
                    size_t v28 = v27;
                  }
                  if (!v23) {
                    goto LABEL_147;
                  }
                  if (!v25) {
                    goto LABEL_148;
                  }
                  int v29 = memcmp(v23, v25, v28);
                  sub_1832E5E9C(v8, v7);
                  goto LABEL_72;
                }
                uint64_t v67 = *(void *)(v8 + 16);
                uint64_t v74 = *(char **)(v8 + 24);
                swift_retain();
                swift_retain();
                uint64_t v68 = sub_183D4434C();
                if (v68)
                {
                  uint64_t v69 = sub_183D4437C();
                  if (__OFSUB__(v67, v69)) {
                    goto LABEL_144;
                  }
                  v68 += v67 - v69;
                }
                if (__OFSUB__(v74, v67)) {
                  goto LABEL_139;
                }
                uint64_t v70 = sub_183D4436C();
                if (v70 >= (uint64_t)&v74[-v67]) {
                  uint64_t v71 = &v74[-v67];
                }
                else {
                  uint64_t v71 = (char *)v70;
                }
                uint64_t v56 = v23;
                uint64_t v3 = v76;
                if (!v23) {
                  goto LABEL_158;
                }
                if (!v68) {
                  goto LABEL_159;
                }
                size_t v55 = (size_t)v71;
                uint64_t v57 = (const void *)v68;
LABEL_116:
                int v58 = memcmp(v56, v57, v55);
                swift_release();
                goto LABEL_117;
              case 2:
                uint64_t v77 = v3;
                uint64_t v30 = *(void *)(v6 + 16);
                sub_1832E5D6C(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v31 = sub_183D4434C();
                if (v31)
                {
                  uint64_t v32 = v31;
                  uint64_t v33 = sub_183D4437C();
                  if (__OFSUB__(v30, v33)) {
                    goto LABEL_128;
                  }
                  char v73 = (void *)(v32 + v30 - v33);
                }
                else
                {
                  char v73 = 0;
                }
                sub_183D4436C();
                uint64_t v3 = v77;
                if (v13)
                {
                  if (v13 == 1)
                  {
                    if (v8 >> 32 < (int)v8) {
                      goto LABEL_134;
                    }
                    swift_retain();
                    int v42 = (char *)sub_183D4434C();
                    if (v42)
                    {
                      uint64_t v43 = sub_183D4437C();
                      if (__OFSUB__((int)v8, v43)) {
                        goto LABEL_143;
                      }
                      v42 += (int)v8 - v43;
                    }
                    uint64_t v44 = sub_183D4436C();
                    if (v44 >= (v8 >> 32) - (int)v8) {
                      size_t v45 = (v8 >> 32) - (int)v8;
                    }
                    else {
                      size_t v45 = v44;
                    }
                    if (!v73) {
                      goto LABEL_150;
                    }
                    uint64_t v3 = v77;
                    if (!v42) {
                      goto LABEL_151;
                    }
                    int v29 = memcmp(v73, v42, v45);
                    sub_1832E5E9C(v8, v7);
                    swift_release();
                    swift_release();
LABEL_72:
                    sub_1832E5E9C(v8, v7);
LABEL_104:
                    sub_1832E5E9C(v6, v5);
                    if (v29) {
                      return 0;
                    }
                  }
                  else
                  {
                    uint64_t v60 = *(void *)(v8 + 16);
                    uint64_t v59 = *(void *)(v8 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v61 = (char *)sub_183D4434C();
                    if (v61)
                    {
                      uint64_t v62 = sub_183D4437C();
                      if (__OFSUB__(v60, v62)) {
                        goto LABEL_142;
                      }
                      v61 += v60 - v62;
                    }
                    BOOL v17 = __OFSUB__(v59, v60);
                    int64_t v63 = v59 - v60;
                    if (v17) {
                      goto LABEL_137;
                    }
                    uint64_t v64 = sub_183D4436C();
                    if (v64 >= v63) {
                      size_t v65 = v63;
                    }
                    else {
                      size_t v65 = v64;
                    }
                    uint64_t v3 = v77;
                    if (!v73) {
                      goto LABEL_155;
                    }
                    if (!v61) {
                      goto LABEL_156;
                    }
                    int v66 = memcmp(v73, v61, v65);
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    sub_1832E5E9C(v8, v7);
                    sub_1832E5E9C(v6, v5);
                    if (v66) {
                      return 0;
                    }
                  }
                }
                else
                {
                  __s1[0] = v8;
                  LOWORD(__s1[1]) = v7;
                  BYTE2(__s1[1]) = BYTE2(v7);
                  BYTE3(__s1[1]) = BYTE3(v7);
                  BYTE4(__s1[1]) = BYTE4(v7);
                  BYTE5(__s1[1]) = BYTE5(v7);
                  if (!v73) {
                    goto LABEL_154;
                  }
                  int v58 = memcmp(v73, __s1, BYTE6(v7));
                  swift_release();
LABEL_117:
                  swift_release();
                  sub_1832E5E9C(v8, v7);
                  sub_1832E5E9C(v6, v5);
                  if (v58) {
                    return 0;
                  }
                }
                break;
              case 3:
                memset(__s1, 0, 14);
                if (!v13) {
                  goto LABEL_58;
                }
                char v75 = v3;
                if (v13 == 1)
                {
                  uint64_t v18 = (v8 >> 32) - (int)v8;
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_131;
                  }
                  sub_1832E5D6C(v8, v7);
                  uint64_t v34 = sub_183D4434C();
                  if (!v34) {
                    goto LABEL_149;
                  }
                  uint64_t v20 = v34;
                  uint64_t v35 = sub_183D4437C();
                  uint64_t v22 = (int)v8 - v35;
                  if (__OFSUB__((int)v8, v35)) {
                    goto LABEL_133;
                  }
LABEL_53:
                  uint64_t v36 = sub_183D4436C();
                  if (v36 >= v18) {
                    size_t v37 = v18;
                  }
                  else {
                    size_t v37 = v36;
                  }
                  int v38 = memcmp(__s1, (const void *)(v20 + v22), v37);
                  sub_1832E5E9C(v8, v7);
                  sub_1832E5E9C(v6, v5);
                  uint64_t v3 = v75;
                  if (v38) {
                    return 0;
                  }
                  break;
                }
                uint64_t v52 = *(void *)(v8 + 16);
                uint64_t v53 = *(void *)(v8 + 24);
                sub_1832E5D6C(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v48 = sub_183D4434C();
                if (v48)
                {
                  uint64_t v54 = sub_183D4437C();
                  if (__OFSUB__(v52, v54)) {
                    goto LABEL_141;
                  }
                  v48 += v52 - v54;
                }
                BOOL v17 = __OFSUB__(v53, v52);
                int64_t v50 = v53 - v52;
                if (v17) {
                  goto LABEL_136;
                }
                uint64_t v51 = sub_183D4436C();
                uint64_t v3 = v75;
                if (!v48) {
                  goto LABEL_153;
                }
LABEL_84:
                if (v51 >= v50) {
                  size_t v55 = v50;
                }
                else {
                  size_t v55 = v51;
                }
                uint64_t v56 = __s1;
                uint64_t v57 = (const void *)v48;
                goto LABEL_116;
              default:
                __s1[0] = v6;
                LOWORD(__s1[1]) = v5;
                BYTE2(__s1[1]) = BYTE2(v5);
                BYTE3(__s1[1]) = BYTE3(v5);
                BYTE4(__s1[1]) = BYTE4(v5);
                BYTE5(__s1[1]) = BYTE5(v5);
                if (!v13)
                {
LABEL_58:
                  uint64_t v78 = v8;
                  __int16 v79 = v7;
                  char v80 = BYTE2(v7);
                  char v81 = BYTE3(v7);
                  char v82 = BYTE4(v7);
                  char v83 = BYTE5(v7);
                  sub_1832E5D6C(v8, v7);
                  uint64_t v39 = __s1;
                  uint64_t v40 = &v78;
                  size_t v41 = BYTE6(v7);
                  goto LABEL_103;
                }
                char v75 = v3;
                if (v13 == 1)
                {
                  uint64_t v18 = (v8 >> 32) - (int)v8;
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_130;
                  }
                  sub_1832E5D6C(v8, v7);
                  uint64_t v19 = sub_183D4434C();
                  if (!v19)
                  {
                    sub_183D4436C();
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    sub_183D4436C();
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
LABEL_158:
                    __break(1u);
LABEL_159:
                    __break(1u);
                    JUMPOUT(0x1835151E0);
                  }
                  uint64_t v20 = v19;
                  uint64_t v21 = sub_183D4437C();
                  uint64_t v22 = (int)v8 - v21;
                  if (__OFSUB__((int)v8, v21)) {
                    goto LABEL_132;
                  }
                  goto LABEL_53;
                }
                uint64_t v46 = *(void *)(v8 + 16);
                uint64_t v47 = *(void *)(v8 + 24);
                sub_1832E5D6C(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v48 = sub_183D4434C();
                if (v48)
                {
                  uint64_t v49 = sub_183D4437C();
                  if (__OFSUB__(v46, v49)) {
                    goto LABEL_140;
                  }
                  v48 += v46 - v49;
                }
                BOOL v17 = __OFSUB__(v47, v46);
                int64_t v50 = v47 - v46;
                if (v17) {
                  goto LABEL_135;
                }
                uint64_t v51 = sub_183D4436C();
                uint64_t v3 = v75;
                if (!v48) {
                  goto LABEL_152;
                }
                goto LABEL_84;
            }
          }
          if (!--v2) {
            return 1;
          }
          break;
        case 2uLL:
          uint64_t v16 = *(void *)(v8 + 16);
          uint64_t v15 = *(void *)(v8 + 24);
          BOOL v17 = __OFSUB__(v15, v16);
          uint64_t v14 = v15 - v16;
          if (!v17) {
            goto LABEL_19;
          }
          goto LABEL_126;
        case 3uLL:
          if (!v10) {
            goto LABEL_6;
          }
          sub_1832E5D6C(v8, v7);
LABEL_121:
          sub_1832E5E9C(v6, v5);
          return 0;
        default:
          uint64_t v14 = BYTE6(v7);
          goto LABEL_19;
      }
    }
  }
  return 1;
}

BOOL sub_183515210(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  unint64_t v5 = (unsigned __int8 *)(a1 + 33);
  uint64_t v6 = (unsigned __int8 *)(a2 + 33);
  do
  {
    int v8 = *v5++;
    int v7 = v8;
    int v10 = *v6++;
    int v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t NWEthernetChannel.debugDescription.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_description);
  uint64_t v2 = sub_183D44AFC();

  return v2;
}

uint64_t sub_1835152DC@<X0>(nw_error_t error@<X1>, uint64_t result@<X0>, uint64_t a3@<X8>)
{
  switch((int)result)
  {
    case 0:
      BOOL result = swift_unknownObjectRelease();
      unint64_t v5 = 0x8000000000;
      break;
    case 1:
      if (error)
      {
        nw_error_domain_t error_domain = nw_error_get_error_domain(error);
        switch(error_domain)
        {
          case nw_error_domain_tls:
            unsigned int error_code = nw_error_get_error_code(error);
            BOOL result = swift_unknownObjectRelease();
            unint64_t v5 = error_code | 0x200000000;
            break;
          case nw_error_domain_dns:
            unsigned int v9 = nw_error_get_error_code(error);
            BOOL result = swift_unknownObjectRelease();
            unint64_t v5 = v9 | 0x100000000;
            break;
          case nw_error_domain_posix:
            nw_error_get_error_code(error);
            uint64_t v7 = sub_183D449AC();
            BOOL result = swift_unknownObjectRelease();
            unint64_t v5 = 22;
            if ((v7 & 0x100000000) == 0) {
              unint64_t v5 = v7;
            }
            break;
          default:
            BOOL result = swift_unknownObjectRelease();
            unint64_t v5 = 22;
            break;
        }
      }
      else
      {
        unint64_t v5 = 50;
      }
      break;
    case 2:
      BOOL result = swift_unknownObjectRelease();
      unint64_t v5 = 0x8000000001;
      break;
    case 3:
      BOOL result = swift_unknownObjectRelease();
      unint64_t v5 = 0x8000000002;
      break;
    case 4:
      BOOL result = (uint64_t)sub_1832E6D08(error, (uint64_t)&v10);
      unint64_t v5 = 0x4000000016;
      if (v11 != 255) {
        unint64_t v5 = v10 | ((unint64_t)v11 << 32) | 0x4000000000;
      }
      break;
    default:
      BOOL result = swift_unknownObjectRelease();
      unint64_t v5 = 0x8000000003;
      break;
  }
  *(_DWORD *)a3 = v5;
  *(unsigned char *)(a3 + 4) = BYTE4(v5);
  return result;
}

void NWEthernetChannel.state.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 24);
  uint64_t v4 = (int *)&v3[4];
  unint64_t v5 = v3 + 17;
  os_unfair_lock_lock(v3 + 17);
  sub_1835154F4(v4, a1);

  os_unfair_lock_unlock(v5);
}

int *sub_1835154F4@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int v2 = *result;
  *(unsigned char *)(a2 + 4) = *((unsigned char *)result + 4);
  *(_DWORD *)a2 = v2;
  return result;
}

uint64_t (*NWEthernetChannel.stateUpdateHandler.getter())()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 24);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 17;
  os_unfair_lock_lock(v1 + 17);
  sub_1835159DC(v2, (uint64_t (**)())&v6);
  os_unfair_lock_unlock(v3);
  if (!(void)v6) {
    return 0;
  }
  long long v5 = v6;
  *(_OWORD *)(swift_allocObject() + 16) = v5;
  return sub_18313D738;
}

double sub_1835155B4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a1 + 24);
  uint64_t v4 = (uint64_t)&v3[4];
  long long v5 = v3 + 17;
  os_unfair_lock_lock(v3 + 17);
  sub_1835159DC(v4, (uint64_t (**)())&v7);
  os_unfair_lock_unlock(v5);
  double result = *(double *)&v7;
  *a2 = v7;
  return result;
}

uint64_t sub_183515620(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = sub_1834CCB54;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  sub_18315ED5C(v1);
  return NWEthernetChannel.stateUpdateHandler.setter((uint64_t)v4, v3);
}

uint64_t NWEthernetChannel.stateUpdateHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  long long v6 = *(os_unfair_lock_s **)(v2 + 24);
  uint64_t v7 = (uint64_t)&v6[4];
  int v8 = v6 + 17;
  os_unfair_lock_lock(v6 + 17);
  sub_18351827C(v7, aBlock);
  os_unfair_lock_unlock(v8);
  if (LOBYTE(aBlock[0]) != 1) {
    return sub_18313D870(a1);
  }
  unsigned int v9 = *(NSObject **)(v2 + 16);
  unsigned int v10 = (void *)swift_allocObject();
  v10[2] = v3;
  v10[3] = a1;
  v10[4] = a2;
  aBlock[4] = sub_183518334;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18351596C;
  aBlock[3] = &block_descriptor_7;
  unsigned __int8 v11 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  sub_18315ED5C(a1);
  swift_release();
  nw_ethernet_channel_set_state_changed_handler(v9, v11);
  sub_18313D870(a1);
  _Block_release(v11);
  return swift_unknownObjectRelease();
}

void sub_18351581C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(int *))
{
  long long v5 = *(os_unfair_lock_s **)(a3 + 24);
  uint64_t v6 = (uint64_t)&v5[4];
  uint64_t v7 = v5 + 17;
  os_unfair_lock_lock(v5 + 17);
  sub_183518F44(v6, (uint64_t)&v8);
  os_unfair_lock_unlock(v7);
  if (a4) {
    a4(&v8);
  }
}

uint64_t sub_1835158BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, uint64_t a4@<X8>)
{
  swift_unknownObjectRetain();
  uint64_t result = sub_1835152DC(a3, a2, (uint64_t)&v11);
  unsigned int v9 = v11;
  unint64_t v10 = v11 | ((unint64_t)v12 << 32);
  *(unsigned char *)(a1 + 4) = v12;
  *(_DWORD *)a1 = v9;
  if (v10 >= 0x8000000003)
  {
    uint64_t result = nw_utilities_minos_atleast(1);
    if (result)
    {
      sub_18313D870(*(void *)(a1 + 8));
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      uint64_t result = sub_18313D870(*(void *)(a1 + 24));
      *(void *)(a1 + 24) = 0;
      *(void *)(a1 + 32) = 0;
    }
  }
  *(_DWORD *)a4 = v10;
  *(unsigned char *)(a4 + 4) = BYTE4(v10);
  return result;
}

uint64_t sub_18351596C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_1835159DC@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_18313D760;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())v5;
  return sub_18315ED5C(v3);
}

uint64_t (*NWEthernetChannel.stateUpdateHandler.modify(uint64_t (**a1)()))(uint64_t *a1, char a2)
{
  a1[2] = (uint64_t (*)())v1;
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 24);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 17;
  os_unfair_lock_lock(v3 + 17);
  sub_1835159DC(v4, v10);
  os_unfair_lock_unlock(v5);
  if (v10[0])
  {
    long long v9 = *(_OWORD *)v10;
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = v9;
    uint64_t v7 = sub_1834CCB54;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a1 = v7;
  a1[1] = (uint64_t (*)())v6;
  return sub_183515B24;
}

uint64_t sub_183515B24(uint64_t *a1, char a2)
{
  return sub_18351717C(a1, a2, NWEthernetChannel.stateUpdateHandler.setter, (void (*)(uint64_t, uint64_t))sub_1834CCAF0, sub_1834CCAEC);
}

uint64_t NWEthernetChannel.etherType.getter()
{
  return *(unsigned __int16 *)(v0 + 32);
}

uint64_t NWEthernetChannel.interface.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
  return swift_unknownObjectRetain();
}

uint64_t NWEthernetChannel.__allocating_init(on:etherType:)(NSObject **a1, uint16_t a2)
{
  uint64_t v4 = swift_allocObject();
  NWEthernetChannel.init(on:etherType:)(a1, a2);
  return v4;
}

uint64_t NWEthernetChannel.init(on:etherType:)(NSObject **a1, uint16_t a2)
{
  uint64_t v4 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63550);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 68) = 0;
  *(unsigned char *)(result + 20) = 0x80;
  *(_DWORD *)(result + 16) = 0;
  *(_OWORD *)(result + 24) = 0u;
  *(_OWORD *)(result + 40) = 0u;
  *(_OWORD *)(result + 49) = 0u;
  *(void *)(v2 + 24) = result;
  *(_WORD *)(v2 + 32) = a2;
  *(void *)(v2 + 40) = v4;
  if (v4)
  {
    *(void *)(v2 + 16) = nw_ethernet_channel_create(a2, v4);
    sub_18315ED5C(0);
    NWEthernetChannel.stateUpdateHandler.setter(0, 0);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t NWEthernetChannel.__allocating_init(on:etherType:parameters:)(NSObject **a1, uint16_t a2, uint64_t a3)
{
  swift_allocObject();
  uint64_t v6 = sub_183518340(a1, a2, a3);
  swift_release();
  return v6;
}

uint64_t NWEthernetChannel.init(on:etherType:parameters:)(NSObject **a1, uint16_t a2, uint64_t a3)
{
  uint64_t v3 = sub_183518340(a1, a2, a3);
  swift_release();
  return v3;
}

uint64_t NWEthernetChannel.maximumPayloadSize.getter()
{
  return nw_ethernet_channel_get_maximum_payload_size(*(nw_ethernet_channel_t *)(v0 + 16));
}

void NWEthernetChannel.start(queue:)(NSObject *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + 24);
  uint64_t v5 = (uint64_t)&v4[4];
  uint64_t v6 = v4 + 17;
  os_unfair_lock_lock(v4 + 17);
  sub_183518454(v5);
  os_unfair_lock_unlock(v6);
  os_unfair_lock_lock(v6);
  sub_1835159DC(v5, v11);
  os_unfair_lock_unlock(v6);
  if (v11[0])
  {
    long long v10 = *(_OWORD *)v11;
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = v10;
    int v8 = sub_1834CCB54;
  }
  else
  {
    int v8 = 0;
    uint64_t v7 = 0;
  }
  sub_18315ED5C((uint64_t)v8);
  sub_18315ED5C((uint64_t)v8);
  NWEthernetChannel.stateUpdateHandler.setter((uint64_t)v8, v7);
  sub_18313D870((uint64_t)v8);
  sub_18313D870((uint64_t)v8);
  long long v9 = *(NSObject **)(v1 + 16);
  nw_ethernet_channel_set_queue(*(nw_ethernet_channel_t *)(v2 + 16), a1);
  nw_ethernet_channel_start(v9);
}

uint64_t NWEthernetChannel.queue.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 24);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 17;
  os_unfair_lock_lock(v1 + 17);
  sub_183515EB8(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

id sub_183515EB8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 40);
  *a2 = v2;
  return v2;
}

Swift::Void __swiftcall NWEthernetChannel.cancel()()
{
  nw_ethernet_channel_cancel(*(nw_ethernet_channel_t *)(v0 + 16));
}

uint64_t NWEthernetChannel.EthernetAddress.init(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v6) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_11:
        __break(1u);
        JUMPOUT(0x183515FB0);
      }
      uint64_t v6 = (int)v6;
LABEL_6:
      if (v6 == 6)
      {
        long long v10 = sub_183517F48(a1, a2);
        uint64_t result = sub_1832E5E9C(a1, a2);
      }
      else
      {
LABEL_8:
        uint64_t result = sub_1832E5E9C(a1, a2);
        long long v10 = 0;
      }
      *a3 = v10;
      return result;
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(a1 + 24);
      BOOL v9 = __OFSUB__(v7, v8);
      uint64_t v6 = v7 - v8;
      if (!v9) {
        goto LABEL_6;
      }
      goto LABEL_11;
    case 3uLL:
      goto LABEL_8;
    default:
      uint64_t v6 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t NWEthernetChannel.EthernetAddress.init(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char **a3@<X8>)
{
  uint64_t v60 = 58;
  uint64_t v61 = 0xE100000000000000;
  int v58 = &v60;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_18351750C(0x7FFFFFFFFFFFFFFFLL, 1, sub_1835184A0, (uint64_t)v57, a1, a2);
  swift_bridgeObjectRelease();
  unint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    uint64_t result = swift_bridgeObjectRelease();
    BOOL v17 = 0;
LABEL_22:
    *a3 = v17;
    return result;
  }
  int64_t v50 = a3;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  uint64_t v56 = v6;
  BOOL v9 = (unint64_t *)(v6 + 56);
  while (1)
  {
    unint64_t v11 = *(v9 - 3);
    unint64_t v10 = *(v9 - 2);
    if ((v10 ^ v11) < 0x4000) {
      goto LABEL_10;
    }
    unint64_t v13 = *(v9 - 1);
    unint64_t v12 = *v9;
    if ((*v9 & 0x1000000000000000) == 0) {
      break;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __int16 v16 = sub_183517B0C(v11, v10, v13, v12, 16);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v16 & 0x100) == 0) {
      goto LABEL_16;
    }
LABEL_10:
    ++v8;
    v9 += 4;
    if (v7 == v8) {
      goto LABEL_20;
    }
  }
  if ((v12 & 0x2000000000000000) != 0)
  {
    uint64_t v60 = *(v9 - 1);
    uint64_t v61 = v12 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v14 = &v60;
  }
  else if ((v13 & 0x1000000000000000) != 0)
  {
    uint64_t v14 = (uint64_t *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    uint64_t v14 = (uint64_t *)sub_183D4557C();
  }
  uint64_t result = sub_1835184F8((uint64_t)v14, v11, v10, v13, v12, 16);
  char v59 = BYTE1(result) & 1;
  if ((result & 0x100) != 0) {
    goto LABEL_10;
  }
LABEL_16:
  if (v7 >= v8)
  {
    if (v7 == v8)
    {
LABEL_20:
      uint64_t result = swift_bridgeObjectRelease_n();
LABEL_21:
      BOOL v17 = 0;
      a3 = v50;
      goto LABEL_22;
    }
    uint64_t v18 = 1;
    uint64_t v19 = v7;
  }
  else
  {
    uint64_t v18 = -1;
    uint64_t v19 = v8;
    uint64_t v8 = v7;
  }
  uint64_t v20 = 0;
  uint64_t v52 = v18;
  uint64_t v54 = v6 + 88;
  uint64_t v51 = v19;
  do
  {
    BOOL v22 = __OFADD__(v20, v18);
    v20 += v18;
    if (v22) {
      goto LABEL_81;
    }
    if (v8 == v7) {
      goto LABEL_82;
    }
    unint64_t v21 = v8 + 1;
    if (v8 + 1 != v7)
    {
      int v23 = (unint64_t *)(v54 + 32 * v8);
      while (v8 >= -1)
      {
        if (v21 >= *(void *)(v56 + 16)) {
          goto LABEL_80;
        }
        unint64_t v25 = *(v23 - 3);
        unint64_t v24 = *(v23 - 2);
        if ((v24 ^ v25) >= 0x4000)
        {
          unint64_t v27 = *(v23 - 1);
          unint64_t v26 = *v23;
          if ((*v23 & 0x1000000000000000) != 0)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __int16 v29 = sub_183517B0C(v25, v24, v27, v26, 16);
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if ((v29 & 0x100) == 0) {
              goto LABEL_44;
            }
          }
          else
          {
            if ((v26 & 0x2000000000000000) != 0)
            {
              uint64_t v60 = *(v23 - 1);
              uint64_t v61 = v26 & 0xFFFFFFFFFFFFFFLL;
              size_t v28 = &v60;
            }
            else if ((v27 & 0x1000000000000000) != 0)
            {
              size_t v28 = (uint64_t *)((v26 & 0xFFFFFFFFFFFFFFFLL) + 32);
            }
            else
            {
              size_t v28 = (uint64_t *)sub_183D4557C();
            }
            uint64_t result = sub_1835184F8((uint64_t)v28, v25, v24, v27, v26, 16);
            char v59 = BYTE1(result) & 1;
            if ((result & 0x100) == 0) {
              goto LABEL_44;
            }
          }
        }
        ++v21;
        v23 += 4;
        if (v7 == v21)
        {
          unint64_t v21 = v7;
LABEL_44:
          uint64_t v19 = v51;
          uint64_t v18 = v52;
          goto LABEL_25;
        }
      }
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
      goto LABEL_83;
    }
    unint64_t v21 = v7;
LABEL_25:
    uint64_t v8 = v21;
  }
  while (v21 != v19);
  swift_bridgeObjectRelease();
  if (v20 <= 5)
  {
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  uint64_t result = swift_bridgeObjectRetain_n();
  size_t v55 = 0;
  uint64_t v30 = 0;
  BOOL v17 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v31 = v56 + 56;
  uint64_t v53 = (char *)(MEMORY[0x1E4FBC860] + 32);
LABEL_48:
  uint64_t v32 = (unint64_t *)(v31 + 32 * v30++);
  while ((unint64_t)(v30 - 1) < *(void *)(v56 + 16))
  {
    unint64_t v34 = *(v32 - 3);
    unint64_t v33 = *(v32 - 2);
    if ((v33 ^ v34) >> 14)
    {
      unint64_t v36 = *(v32 - 1);
      unint64_t v35 = *v32;
      if ((*v32 & 0x1000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        LOWORD(v33) = sub_183517B0C(v34, v33, v36, v35, 16);
        uint64_t result = swift_bridgeObjectRelease();
        if ((v33 & 0x100) == 0) {
          goto LABEL_62;
        }
      }
      else
      {
        if ((v35 & 0x2000000000000000) != 0)
        {
          uint64_t v60 = *(v32 - 1);
          uint64_t v61 = v35 & 0xFFFFFFFFFFFFFFLL;
          size_t v37 = &v60;
        }
        else if ((v36 & 0x1000000000000000) != 0)
        {
          size_t v37 = (uint64_t *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else
        {
          size_t v37 = (uint64_t *)sub_183D4557C();
        }
        uint64_t result = sub_1835184F8((uint64_t)v37, v34, v33, v36, v35, 16);
        LOBYTE(v33) = result;
        char v59 = BYTE1(result) & 1;
        if ((result & 0x100) == 0)
        {
LABEL_62:
          size_t v38 = v55;
          if (!v55)
          {
            unint64_t v39 = *((void *)v17 + 3);
            if ((uint64_t)((v39 >> 1) + 0x4000000000000000) < 0) {
              goto LABEL_86;
            }
            int64_t v40 = v39 & 0xFFFFFFFFFFFFFFFELL;
            if (v40 <= 1) {
              uint64_t v41 = 1;
            }
            else {
              uint64_t v41 = v40;
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61ED0);
            int v42 = (char *)swift_allocObject();
            size_t v43 = 2 * _swift_stdlib_malloc_size(v42) - 64;
            *((void *)v42 + 2) = v41;
            *((void *)v42 + 3) = v43;
            uint64_t v44 = v42 + 32;
            size_t v45 = *((void *)v17 + 3) >> 1;
            if (*((void *)v17 + 2))
            {
              uint64_t v46 = v17 + 32;
              if (v42 != v17 || v44 >= &v46[v45]) {
                memmove(v42 + 32, v46, v45);
              }
              *((void *)v17 + 2) = 0;
            }
            uint64_t v53 = &v44[v45];
            size_t v38 = (v43 >> 1) - v45;
            uint64_t result = swift_release();
            BOOL v17 = v42;
          }
          uint64_t v31 = v56 + 56;
          size_t v55 = v38 - 1;
          if (__OFSUB__(v38, 1)) {
            goto LABEL_84;
          }
          *v53++ = v33;
          if (v30 != v7) {
            goto LABEL_48;
          }
LABEL_75:
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v47 = *((void *)v17 + 3);
          a3 = v50;
          if (v47 >= 2)
          {
            unint64_t v48 = v47 >> 1;
            BOOL v22 = __OFSUB__(v48, v55);
            unint64_t v49 = v48 - v55;
            if (v22) {
              goto LABEL_85;
            }
            *((void *)v17 + 2) = v49;
          }
          uint64_t result = swift_bridgeObjectRelease_n();
          goto LABEL_22;
        }
      }
    }
    ++v30;
    v32 += 4;
    if (v30 - v7 == 1) {
      goto LABEL_75;
    }
  }
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
  return result;
}

uint64_t NWEthernetChannel.EthernetAddress.debugDescription.getter()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F62DB0);
  uint64_t v2 = swift_allocObject();
  uint64_t v5 = MEMORY[0x1E4FBC358];
  *(_OWORD *)(v2 + 16) = xmmword_183D54850;
  uint64_t v6 = MEMORY[0x1E4FBC3B0];
  *(void *)(v2 + 56) = v5;
  *(void *)(v2 + 64) = v6;
  unint64_t v7 = *(void *)(v1 + 16);
  if (!v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v4 = v2;
  *(unsigned char *)(v2 + 32) = *(unsigned char *)(v1 + 32);
  *(void *)(v2 + 96) = v5;
  *(void *)(v2 + 104) = v6;
  if (v7 == 1)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  *(unsigned char *)(v2 + 72) = *(unsigned char *)(v1 + 33);
  *(void *)(v2 + 136) = v5;
  *(void *)(v2 + 144) = v6;
  if (v7 < 3)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  *(unsigned char *)(v2 + 112) = *(unsigned char *)(v1 + 34);
  *(void *)(v2 + 176) = v5;
  *(void *)(v2 + 184) = v6;
  if (v7 == 3)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  *(unsigned char *)(v2 + 152) = *(unsigned char *)(v1 + 35);
  *(void *)(v2 + 216) = v5;
  *(void *)(v2 + 224) = v6;
  if (v7 < 5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  *(unsigned char *)(v2 + 192) = *(unsigned char *)(v1 + 36);
  *(void *)(v2 + 256) = v5;
  *(void *)(v2 + 264) = v6;
  if (v7 == 5)
  {
LABEL_15:
    __break(1u);
    return MEMORY[0x1F40E6238](v2, v3, v4);
  }
  *(unsigned char *)(v2 + 232) = *(unsigned char *)(v1 + 37);
  unint64_t v3 = 0x8000000183E23EF0;
  uint64_t v2 = 0xD00000000000001DLL;

  return MEMORY[0x1F40E6238](v2, v3, v4);
}

uint64_t NWEthernetChannel.EthernetAddress.rawValue.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1834D81D4(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t NWEthernetChannel.EthernetAddress.hash(into:)()
{
  uint64_t v1 = *v0;
  uint64_t result = sub_183D45B0C();
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    uint64_t v4 = v1 + 32;
    do
    {
      ++v4;
      uint64_t result = sub_183D45B1C();
      --v3;
    }
    while (v3);
  }
  return result;
}

BOOL static NWEthernetChannel.EthernetAddress.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_183515210(*a1, *a2);
}

uint64_t NWEthernetChannel.EthernetAddress.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_183D45AFC();
  sub_183D45B0C();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    do
    {
      ++v3;
      sub_183D45B1C();
      --v2;
    }
    while (v2);
  }
  return sub_183D45B4C();
}

uint64_t sub_183516750()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  uint64_t result = sub_183D45B0C();
  if (v2)
  {
    uint64_t v4 = v1 + 32;
    do
    {
      ++v4;
      uint64_t result = sub_183D45B1C();
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1835167A4()
{
  uint64_t v1 = *v0;
  sub_183D45AFC();
  uint64_t v2 = *(void *)(v1 + 16);
  sub_183D45B0C();
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    do
    {
      ++v3;
      sub_183D45B1C();
      --v2;
    }
    while (v2);
  }
  return sub_183D45B4C();
}

BOOL sub_183516814(uint64_t *a1, uint64_t *a2)
{
  return sub_183515210(*a1, *a2);
}

uint64_t NWEthernetChannel.send(content:to:vlanTag:completion:)(uint64_t a1, uint64_t a2, char **a3, uint16_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  unint64_t v13 = *a3;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v13 = sub_183517EB8((uint64_t)v13);
  }
  sub_1835168D0((unsigned __int8 *)v13 + 32, v7, a1, a2, a4, a5, a6);

  return swift_bridgeObjectRelease();
}

void sub_1835168D0(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint16_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v11 = *(NSObject **)(a2 + 16);
  swift_unknownObjectRetain();
  unint64_t v12 = (void *)sub_183D4452C();
  uint64_t v14 = NWCreateDispatchDataFromNSData(v12, v13);

  if (v14)
  {
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a6;
    *(void *)(v15 + 24) = a7;
    void v17[4] = sub_1832E6CC8;
    v17[5] = v15;
    v17[0] = MEMORY[0x1E4F143A8];
    v17[1] = 1107296256;
    v17[2] = sub_1832E6C64;
    v17[3] = &block_descriptor_50;
    __int16 v16 = _Block_copy(v17);
    swift_retain();
    swift_release();
    nw_ethernet_channel_send(v11, v14, a5, a1, v16);
    _Block_release(v16);
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t (*NWEthernetChannel.receiveHandler.getter())(uint64_t, uint64_t, __int16, uint64_t, uint64_t)
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 24);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 17;
  os_unfair_lock_lock(v1 + 17);
  sub_183516FF4(v2, &v6);
  os_unfair_lock_unlock(v3);
  if (!(void)v6) {
    return 0;
  }
  long long v5 = v6;
  *(_OWORD *)(swift_allocObject() + 16) = v5;
  return sub_183518950;
}

double sub_183516AC4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a1 + 24);
  uint64_t v4 = (uint64_t)&v3[4];
  long long v5 = v3 + 17;
  os_unfair_lock_lock(v3 + 17);
  sub_183516FF4(v4, &v7);
  os_unfair_lock_unlock(v5);
  double result = *(double *)&v7;
  *a2 = v7;
  return result;
}

void sub_183516B30(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = sub_183518950;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  sub_18315ED5C(v1);
  NWEthernetChannel.receiveHandler.setter((uint64_t)v4, v3);
}

void NWEthernetChannel.receiveHandler.setter(uint64_t a1, uint64_t a2)
{
  long long v5 = *(os_unfair_lock_s **)(v2 + 24);
  uint64_t v6 = (uint64_t)&v5[4];
  long long v7 = v5 + 17;
  os_unfair_lock_lock(v5 + 17);
  sub_1834C39FC(v6);
  os_unfair_lock_unlock(v7);
  if (a1)
  {
    uint64_t v8 = *(NSObject **)(v2 + 16);
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a1;
    *(void *)(v9 + 24) = a2;
    aBlock[4] = sub_183518954;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_183516F68;
    aBlock[3] = &block_descriptor_20;
    unint64_t v10 = _Block_copy(aBlock);
    sub_18315ED5C(a1);
    sub_18315ED5C(a1);
    swift_unknownObjectRetain();
    swift_release();
    nw_ethernet_channel_set_receive_handler(v8, v10);
    sub_18313D870(a1);
    _Block_release(v10);
    swift_unknownObjectRelease();
    sub_18313D870(a1);
  }
  else
  {
    nw_ethernet_channel_set_receive_handler(*(nw_ethernet_channel_t *)(v2 + 16), 0);
  }
}

uint64_t sub_183516D24(void *a1, uint64_t a2, unsigned char *a3, unsigned char *a4, void (*a5)(uint64_t, unint64_t, uint64_t, void **, void **))
{
  uint64_t result = (uint64_t)NWCreateNSDataFromDispatchData(a1);
  if (result)
  {
    unint64_t v10 = (void *)result;
    uint64_t v11 = sub_183D4453C();
    unint64_t v13 = v12;

    uint64_t v14 = sub_1835572E0(a3, 6);
    uint64_t v16 = v14;
    unint64_t v17 = v15;
    switch(v15 >> 62)
    {
      case 1uLL:
        LODWORD(v18) = HIDWORD(v14) - v14;
        if (__OFSUB__(HIDWORD(v14), v14))
        {
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
          JUMPOUT(0x183516F48);
        }
        uint64_t v18 = (int)v18;
LABEL_7:
        if (v18 == 6)
        {
          BOOL v22 = sub_183517F48(v14, v15);
          sub_1832E5E9C(v16, v17);
          uint64_t v23 = sub_1835572E0(a4, 6);
          uint64_t v25 = v23;
          unint64_t v26 = v24;
          switch(v24 >> 62)
          {
            case 1uLL:
              LODWORD(v27) = HIDWORD(v23) - v23;
              if (__OFSUB__(HIDWORD(v23), v23)) {
                goto LABEL_23;
              }
              uint64_t v27 = (int)v27;
LABEL_14:
              if (v27 == 6)
              {
                uint64_t v30 = sub_183517F48(v23, v24);
                sub_1832E5E9C(v25, v26);
                uint64_t v31 = v30;
                uint64_t v32 = v22;
                a5(v11, v13, a2, &v32, &v31);
                sub_1832E5E9C(v11, v13);
                swift_release();
                return swift_release();
              }
LABEL_17:
              sub_1832E5E9C(v23, v24);
              swift_release();
              break;
            case 2uLL:
              uint64_t v29 = *(void *)(v23 + 16);
              uint64_t v28 = *(void *)(v23 + 24);
              BOOL v21 = __OFSUB__(v28, v29);
              uint64_t v27 = v28 - v29;
              if (!v21) {
                goto LABEL_14;
              }
              goto LABEL_24;
            case 3uLL:
              goto LABEL_17;
            default:
              uint64_t v27 = BYTE6(v24);
              goto LABEL_14;
          }
        }
        else
        {
LABEL_10:
          sub_1832E5E9C(v14, v15);
        }
        uint64_t result = sub_1832E5E9C(v11, v13);
        break;
      case 2uLL:
        uint64_t v20 = *(void *)(v14 + 16);
        uint64_t v19 = *(void *)(v14 + 24);
        BOOL v21 = __OFSUB__(v19, v20);
        uint64_t v18 = v19 - v20;
        if (!v21) {
          goto LABEL_7;
        }
        goto LABEL_22;
      case 3uLL:
        goto LABEL_10;
      default:
        uint64_t v18 = BYTE6(v15);
        goto LABEL_7;
    }
  }
  return result;
}

void sub_183516F68(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_183516FF4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_183518E68;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_18315ED5C(v3);
}

uint64_t (*NWEthernetChannel.receiveHandler.modify(uint64_t (**a1)(uint64_t, uint64_t, __int16, uint64_t, uint64_t)))(uint64_t *a1, char a2)
{
  a1[2] = (uint64_t (*)(uint64_t, uint64_t, __int16, uint64_t, uint64_t))v1;
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 24);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 17;
  os_unfair_lock_lock(v3 + 17);
  sub_183516FF4(v4, &v10);
  os_unfair_lock_unlock(v5);
  if ((void)v10)
  {
    long long v9 = v10;
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = v9;
    long long v7 = sub_183518950;
  }
  else
  {
    long long v7 = 0;
    uint64_t v6 = 0;
  }
  *a1 = v7;
  a1[1] = (uint64_t (*)(uint64_t, uint64_t, __int16, uint64_t, uint64_t))v6;
  return sub_18351713C;
}

uint64_t sub_18351713C(uint64_t *a1, char a2)
{
  return sub_18351717C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))NWEthernetChannel.receiveHandler.setter, (void (*)(uint64_t, uint64_t))sub_18315ED5C, (uint64_t (*)(uint64_t, uint64_t))sub_18313D870);
}

uint64_t sub_18351717C(uint64_t *a1, char a2, uint64_t (*a3)(uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  if ((a2 & 1) == 0) {
    return a3(*a1, v7);
  }
  a4(*a1, v7);
  a3(v6, v7);

  return a5(v6, v7);
}

uint64_t NWEthernetChannel.deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t NWEthernetChannel.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_183517298@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_1832E5D6C(a2, a3);
      long long v10 = (char *)sub_183D4434C();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_183D4437C();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_183D4436C();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1835174FCLL);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      uint64_t __s1 = sub_1832E5E9C(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      unint64_t v17 = (char *)sub_183D4434C();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_183D4437C();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_183D4436C();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      uint64_t __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        uint64_t __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_18351750C(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_1835179B0(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    size_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  size_t v13 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_183D44D2C();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_183D44C6C();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_183D44C6C();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_183D44D4C();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    size_t v13 = sub_1834B4930(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    size_t v13 = sub_1834B4930((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  void v13[2] = v27 + 1;
  char v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_183D44C6C();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_183D44D4C();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      size_t v13 = sub_1834B4930(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      size_t v13 = sub_1834B4930((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    void v13[2] = v39 + 1;
    int64_t v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_183D456BC();
  __break(1u);
LABEL_42:
  uint64_t result = sub_183D456BC();
  __break(1u);
  return result;
}

uint64_t sub_1835179B0(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_183D44D4C();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_1834B4930(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_1834B4930((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    void v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    void v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_183D456BC();
  __break(1u);
  return result;
}

uint64_t sub_183517B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_183518EA8();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_183D44D3C();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_18359979C();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)sub_183D4557C();
  }
LABEL_7:
  unsigned __int16 v13 = (unsigned __int16)sub_183517BFC(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13 & 0x1FF;
}

unsigned __int8 *sub_183517BFC(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v14 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v15 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = a3 + 55;
        }
        else
        {
          unsigned __int8 v15 = 97;
          unsigned __int8 v16 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v17 = a3 + 48;
        }
        else {
          unsigned __int8 v17 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          uint64_t v18 = result + 1;
          do
          {
            unsigned int v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v19 < 0x61 || v19 >= v15) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v20 = -87;
              }
              else
              {
                char v20 = -55;
              }
            }
            else
            {
              char v20 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v8 = (v8 * a3) + (v19 + v20);
            if ((v8 >> 8)) {
              goto LABEL_72;
            }
            ++v18;
            --v14;
          }
          while (v14);
LABEL_48:
          int v13 = 0;
          unsigned __int8 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned __int8 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v21 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v22 = a3 + 55;
        }
        else
        {
          unsigned __int8 v21 = 97;
          unsigned __int8 v22 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v23 = a3 + 48;
        }
        else {
          unsigned __int8 v23 = 58;
        }
        if (result)
        {
          LOBYTE(v24) = 0;
          do
          {
            unsigned int v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v25 < 0x61 || v25 >= v21) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v26 = -87;
              }
              else
              {
                char v26 = -55;
              }
            }
            else
            {
              char v26 = -48;
            }
            if (((v24 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v24 = (v24 * a3) + (v25 + v26);
            if ((v24 >> 8)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          int v13 = 0;
          unsigned __int8 v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v8 = (v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFFFF00) != 0) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned __int8 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_183517EA4(void *a1)
{
  return sub_1834B412C(0, a1[2], 0, a1);
}

char *sub_183517EB8(uint64_t a1)
{
  return sub_1834B4598(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_183517ECC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_183D456DC();
    swift_bridgeObjectRelease();
  }

  JUMPOUT(0x1853148C0);
}

void *sub_183517F48(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_183D4456C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned __int8 v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v8 = (void *)MEMORY[0x1E4FBC860];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9)
      {
        if (v9 >= 1)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61ED0);
          unsigned int v8 = (void *)swift_allocObject();
          size_t v12 = _swift_stdlib_malloc_size(v8);
          void v8[2] = v9;
          v8[3] = 2 * v12 - 64;
        }
        sub_1832E5D6C(a1, a2);
        uint64_t v13 = sub_183D444CC();
        sub_1832E5E9C(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (v13 != v9)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x1835180F4);
        }
      }
      return v8;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v8;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t _s7Network17NWEthernetChannelC5StateO2eeoiySbAE_AEtFZ_0(unsigned int *a1, unsigned int *a2)
{
  unsigned int v2 = *((unsigned __int8 *)a1 + 4);
  unint64_t v3 = *a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32);
  unint64_t v4 = *a2 | ((unint64_t)*((unsigned __int8 *)a2 + 4) << 32);
  unsigned int v5 = v2 >> 6;
  if (v5)
  {
    if (v5 != 1)
    {
      switch(v3)
      {
        case 0x8000000001uLL:
          uint64_t v12 = v4 & 0xFFFFFFFFFFLL;
          uint64_t v13 = 1;
          break;
        case 0x8000000002uLL:
          uint64_t v12 = v4 & 0xFFFFFFFFFFLL;
          uint64_t v13 = 2;
          break;
        case 0x8000000003uLL:
          uint64_t v12 = v4 & 0xFFFFFFFFFFLL;
          uint64_t v13 = 3;
          break;
        default:
          return (v4 & 0xFFFFFFFFFFLL) == 0x8000000000;
      }
      return v12 == (v13 & 0xFFFF0000FFFFFFFFLL | 0x8000000000);
    }
    if (((v4 >> 38) & 3) != 1) {
      return 0;
    }
    uint64_t v6 = HIDWORD(v3) & 0x3F;
    uint64_t v7 = HIDWORD(v4) & 0x3F;
    if (v6)
    {
      if (v6 == 1) {
        return v7 == 1 && v3 == *a2;
      }
      return v7 == 2 && v3 == *a2;
    }
LABEL_22:
    if (!v7)
    {
      int v10 = sub_183D449BC();
      if (v10 == sub_183D449BC()) {
        return 1;
      }
    }
    return 0;
  }
  if (((v4 >> 38) & 3) != 0) {
    return 0;
  }
  LODWORD(v7) = BYTE4(v4);
  if (!HIDWORD(v3)) {
    goto LABEL_22;
  }
  if (HIDWORD(v3) != 1) {
    return v7 == 2 && v3 == *a2;
  }
  return v7 == 1 && v3 == *a2;
}

uint64_t sub_183518244()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_18351827C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(a1 + 8);
  sub_18315ED5C(v6);
  uint64_t result = sub_18313D870(v7);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v5;
  *a2 = *(unsigned char *)(a1 + 48);
  return result;
}

uint64_t sub_1835182EC()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_183518334(uint64_t a1, uint64_t a2)
{
  sub_18351581C(a1, a2, *(void *)(v2 + 16), *(void (**)(int *))(v2 + 24));
}

uint64_t sub_183518340(NSObject **a1, uint16_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63550);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 68) = 0;
  *(unsigned char *)(result + 20) = 0x80;
  *(_DWORD *)(result + 16) = 0;
  *(_OWORD *)(result + 24) = 0u;
  *(_OWORD *)(result + 40) = 0u;
  *(_OWORD *)(result + 49) = 0u;
  *(void *)(v4 + 24) = result;
  *(_WORD *)(v4 + 32) = a2;
  *(void *)(v4 + 40) = v7;
  if (v7)
  {
    uint64_t v9 = *(void *)(a3 + 16);
    int v10 = (void *)(v9 + 16);
    uint64_t v11 = (os_unfair_lock_s *)(v9 + 24);
    swift_unknownObjectRetain();
    os_unfair_lock_lock(v11);
    sub_1834A4678(v10, &parameters);
    os_unfair_lock_unlock(v11);
    nw_ethernet_channel_t v12 = nw_ethernet_channel_create_with_parameters(a2, v7, parameters);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    *(void *)(v4 + 16) = v12;
    sub_18315ED5C(0);
    NWEthernetChannel.stateUpdateHandler.setter(0, 0);
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_183518454(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = *(void **)(a1 + 40);
  id v5 = v3;

  *(void *)(a1 + 40) = v3;
  *(unsigned char *)(a1 + 48) = 1;
}

uint64_t sub_1835184A0(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_183D4592C() & 1;
  }
}

uint64_t sub_1835184F8(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    uint64_t result = sub_183520284(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_104;
  }
  uint64_t result = sub_183D44CEC();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_183520284(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    uint64_t result = sub_183520284(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    uint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_100;
  }
  if (v17 < a3 >> 16)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  uint64_t result = sub_183D44CEC();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_99;
  }
  if (v18 < v15)
  {
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  unsigned int v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    unsigned int v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v31 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v32 = a6 + 55;
        }
        else
        {
          unsigned __int8 v31 = 97;
          unsigned __int8 v32 = 65;
        }
        if (a6 <= 10) {
          unsigned __int8 v33 = a6 + 48;
        }
        else {
          unsigned __int8 v33 = 58;
        }
        if (v19)
        {
          LOBYTE(v24) = 0;
          uint64_t v34 = v19 + 1;
          uint64_t v35 = result - 1;
          do
          {
            unsigned int v36 = *v34;
            if (v36 < 0x30 || v36 >= v33)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                unsigned __int8 v29 = 0;
                int v30 = 1;
                if (v36 < 0x61 || v36 >= v31) {
                  return v29 | (v30 << 8);
                }
                char v37 = -87;
              }
              else
              {
                char v37 = -55;
              }
            }
            else
            {
              char v37 = -48;
            }
            if (((v24 * (unsigned __int16)a6) & 0xFF00) != 0) {
              goto LABEL_96;
            }
            unsigned int v24 = (v24 * a6) + (v36 + v37);
            if ((v24 >> 8)) {
              goto LABEL_96;
            }
            ++v34;
            --v35;
          }
          while (v35);
LABEL_72:
          int v30 = 0;
          unsigned __int8 v29 = v24;
          return v29 | (v30 << 8);
        }
        goto LABEL_95;
      }
LABEL_96:
      unsigned __int8 v29 = 0;
      int v30 = 1;
      return v29 | (v30 << 8);
    }
    goto LABEL_103;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v38 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v39 = a6 + 55;
      }
      else
      {
        unsigned __int8 v38 = 97;
        unsigned __int8 v39 = 65;
      }
      if (a6 <= 10) {
        unsigned __int8 v40 = a6 + 48;
      }
      else {
        unsigned __int8 v40 = 58;
      }
      if (v19)
      {
        LOBYTE(v41) = 0;
        do
        {
          unsigned int v42 = *v19;
          if (v42 < 0x30 || v42 >= v40)
          {
            if (v42 < 0x41 || v42 >= v39)
            {
              unsigned __int8 v29 = 0;
              int v30 = 1;
              if (v42 < 0x61 || v42 >= v38) {
                return v29 | (v30 << 8);
              }
              char v43 = -87;
            }
            else
            {
              char v43 = -55;
            }
          }
          else
          {
            char v43 = -48;
          }
          if (((v41 * (unsigned __int16)a6) & 0xFF00) != 0) {
            goto LABEL_96;
          }
          unsigned int v41 = (v41 * a6) + (v42 + v43);
          if ((v41 >> 8)) {
            goto LABEL_96;
          }
          ++v19;
          --result;
        }
        while (result);
        int v30 = 0;
        unsigned __int8 v29 = v41;
        return v29 | (v30 << 8);
      }
      goto LABEL_95;
    }
    goto LABEL_96;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v22 = a6 + 55;
      }
      else
      {
        unsigned __int8 v21 = 97;
        unsigned __int8 v22 = 65;
      }
      if (a6 <= 10) {
        unsigned __int8 v23 = a6 + 48;
      }
      else {
        unsigned __int8 v23 = 58;
      }
      if (v19)
      {
        LOBYTE(v24) = 0;
        unsigned int v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              unsigned __int8 v29 = 0;
              int v30 = 1;
              if (v27 < 0x61 || v27 >= v21) {
                return v29 | (v30 << 8);
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          if (((v24 * (unsigned __int16)a6) & 0xFF00) != 0) {
            goto LABEL_96;
          }
          unsigned int v24 = (v24 * a6) - (v27 + v28);
          if ((v24 & 0xFFFFFF00) != 0) {
            goto LABEL_96;
          }
          ++v25;
          if (!--v26) {
            goto LABEL_72;
          }
        }
      }
LABEL_95:
      unsigned __int8 v29 = 0;
      int v30 = 0;
      return v29 | (v30 << 8);
    }
    goto LABEL_96;
  }
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
  return result;
}

uint64_t sub_183518954(void *a1, uint64_t a2, unsigned char *a3, unsigned char *a4)
{
  return sub_183516D24(a1, a2, a3, a4, *(void (**)(uint64_t, unint64_t, uint64_t, void **, void **))(v4 + 16));
}

unint64_t sub_183518960()
{
  unint64_t result = qword_1E8F63558;
  if (!qword_1E8F63558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63558);
  }
  return result;
}

uint64_t type metadata accessor for NWEthernetChannel()
{
  return self;
}

uint64_t method lookup function for NWEthernetChannel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWEthernetChannel);
}

uint64_t dispatch thunk of NWEthernetChannel.__allocating_init(on:etherType:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of NWEthernetChannel.__allocating_init(on:etherType:parameters:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

ValueMetadata *type metadata accessor for NWEthernetChannel.State()
{
  return &type metadata for NWEthernetChannel.State;
}

ValueMetadata *type metadata accessor for NWEthernetChannel.EthernetAddress()
{
  return &type metadata for NWEthernetChannel.EthernetAddress;
}

void destroy for NWEthernetChannel.LockedState(void *a1)
{
  if (a1[1]) {
    swift_release();
  }
  if (a1[3]) {
    swift_release();
  }
  uint64_t v2 = (void *)a1[5];
}

uint64_t initializeWithCopy for NWEthernetChannel.LockedState(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  uint64_t v6 = *(void *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  unsigned int v8 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  id v9 = v8;
  return a1;
}

uint64_t assignWithCopy for NWEthernetChannel.LockedState(uint64_t a1, int *a2)
{
  int v4 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v4;
  uint64_t v5 = (_OWORD *)(a1 + 8);
  uint64_t v7 = a2 + 2;
  uint64_t v6 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8))
  {
    if (v6)
    {
      uint64_t v8 = *((void *)a2 + 2);
      *(void *)(a1 + 8) = v6;
      *(void *)(a1 + 16) = v8;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v9 = *((void *)a2 + 2);
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v9;
    swift_retain();
    goto LABEL_8;
  }
  *uint64_t v5 = *v7;
LABEL_8:
  uint64_t v10 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v10)
    {
      uint64_t v12 = *((void *)a2 + 4);
      *(void *)(a1 + 24) = v10;
      *(void *)(a1 + 32) = v12;
      swift_retain();
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 6);
    goto LABEL_15;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v11 = *((void *)a2 + 4);
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v11;
  swift_retain();
  swift_release();
LABEL_15:
  uint64_t v13 = *(void **)(a1 + 40);
  unint64_t v14 = (void *)*((void *)a2 + 5);
  *(void *)(a1 + 40) = v14;
  id v15 = v14;

  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for NWEthernetChannel.LockedState(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  long long v4 = (_OWORD *)(a1 + 8);
  uint64_t v6 = (_OWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v7;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    uint64_t v8 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v8;
    goto LABEL_8;
  }
  *long long v4 = *v6;
LABEL_8:
  uint64_t v9 = *(void *)(a2 + 24);
  if (!*(void *)(a1 + 24))
  {
    if (v9)
    {
      uint64_t v11 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v9;
      *(void *)(a1 + 32) = v11;
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    goto LABEL_15;
  }
  if (!v9)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v10 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  swift_release();
LABEL_15:
  uint64_t v12 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for NWEthernetChannel.LockedState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NWEthernetChannel.LockedState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NWEthernetChannel.LockedState()
{
  return &type metadata for NWEthernetChannel.LockedState;
}

uint64_t sub_183518E20(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(uint64_t (**)(void *, __int16 *, uint64_t, uint64_t))(v5 + 16);
  v9[0] = a1;
  v9[1] = a2;
  __int16 v8 = a3;
  return v6(v9, &v8, a4, a5);
}

uint64_t sub_183518E68(void *a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void, void, uint64_t, uint64_t))(v4 + 16))(*a1, a1[1], *a2, a3, a4);
}

unint64_t sub_183518EA8()
{
  unint64_t result = qword_1E8F635C0;
  if (!qword_1E8F635C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F635C0);
  }
  return result;
}

uint64_t sub_183518EFC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_183518F34()
{
  return swift_deallocObject();
}

uint64_t sub_183518F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1835158BC(a1, *(unsigned int *)(v2 + 16), *(NSObject **)(v2 + 24), a2);
}

void sub_183518F9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F635D0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  __int16 v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FA8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v1 + OBJC_IVAR____TtC7Network7Browser_startContinuation;
  swift_beginAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v16, 1, v12))
  {
    if (!*(void *)(v1 + 24)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  sub_183D44F6C();
  uint64_t v28 = v5;
  unsigned int v24 = v8;
  unsigned int v25 = v4;
  sub_18351985C();
  uint64_t v26 = swift_allocError();
  sub_183D44A3C();
  uint64_t v30 = v26;
  uint64_t v4 = v25;
  __int16 v8 = v24;
  uint64_t v5 = v28;
  sub_183D44F3C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (*(void *)(v1 + 24))
  {
LABEL_3:
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63CE0);
    sub_183D4506C();
    swift_release();
  }
LABEL_4:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  swift_beginAccess();
  sub_1835197F8((uint64_t)v11, v16, &qword_1E8F62FA8);
  swift_endAccess();
  *(void *)(v1 + 24) = 0;
  swift_release();
  uint64_t v17 = v1 + OBJC_IVAR____TtC7Network7Browser_endpointSelectionContinuation;
  swift_beginAccess();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v17, 1, v5))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v17, v5);
    sub_183D44F6C();
    sub_18351985C();
    uint64_t v18 = swift_allocError();
    sub_183D44A3C();
    uint64_t v29 = v18;
    sub_183D44F3C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v19 = OBJC_IVAR____TtC7Network7Browser_endpointSelectionTask;
  if (*(void *)(v1 + OBJC_IVAR____TtC7Network7Browser_endpointSelectionTask))
  {
    type metadata accessor for NWEndpoint();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63CE0);
    sub_183D4506C();
    swift_release();
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  swift_beginAccess();
  sub_1835197F8((uint64_t)v4, v17, &qword_1E8F635D0);
  swift_endAccess();
  *(void *)(v1 + v19) = 0;
  swift_release();
  uint64_t v20 = *(void *)(v1 + OBJC_IVAR____TtC7Network7Browser_browser);
  if (nw_utilities_minos_atleast(1))
  {
    unsigned __int8 v21 = *(os_unfair_lock_s **)(v20 + 24);
    unsigned __int8 v22 = (uint64_t *)&v21[4];
    unsigned __int8 v23 = v21 + 20;
    os_unfair_lock_lock(v21 + 20);
    sub_1834C39B8(v22);
    os_unfair_lock_unlock(v23);
  }
  nw_browser_cancel(*(nw_browser_t *)(v20 + 16));
}

uint64_t sub_1835194AC()
{
  swift_release();
  swift_release();
  sub_183138A24(v0 + OBJC_IVAR____TtC7Network7Browser_startContinuation, &qword_1E8F62FA8);
  swift_release();
  sub_183138A24(v0 + OBJC_IVAR____TtC7Network7Browser_endpointSelectionContinuation, &qword_1E8F635D0);

  swift_release();
  sub_183138A24(v0 + OBJC_IVAR____TtC7Network7Browser_endpoint, qword_1EB266A50);
  return v0;
}

uint64_t sub_18351954C()
{
  sub_1835194AC();

  return swift_deallocClassInstance();
}

uint64_t sub_1835195A4()
{
  return type metadata accessor for Browser();
}

uint64_t type metadata accessor for Browser()
{
  uint64_t result = qword_1E8F61A28;
  if (!qword_1E8F61A28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1835195F8()
{
  sub_183519750(319, (unint64_t *)&qword_1E8F61A58, &qword_1E8F61A50);
  if (v0 <= 0x3F)
  {
    sub_183519750(319, (unint64_t *)&unk_1E8F61A40, &qword_1E8F61A38);
    if (v1 <= 0x3F)
    {
      sub_1835197A0();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_183519750(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = sub_183D4536C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1835197A0()
{
  if (!qword_1EB266AE0)
  {
    type metadata accessor for NWEndpoint();
    unint64_t v0 = sub_183D4536C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB266AE0);
    }
  }
}

uint64_t sub_1835197F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_18351985C()
{
  unint64_t result = qword_1E8F635D8;
  if (!qword_1E8F635D8)
  {
    sub_183D44F6C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F635D8);
  }
  return result;
}

uint64_t sub_1835198B4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int16 a5)
{
  uint64_t v7 = result;
  unint64_t v8 = a5;
  if (!a2)
  {
    uint64_t v9 = 0;
    goto LABEL_15;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
LABEL_15:
    *(void *)uint64_t v7 = a4;
    *(_WORD *)(v7 + 8) = v8;
    return v9;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (a5 == 0xFFFF)
    {
      uint64_t v9 = 0;
      LOWORD(v8) = -1;
    }
    else
    {
      if (*(void *)(a4 + 16) <= (unint64_t)a5)
      {
LABEL_12:
        __break(1u);
LABEL_13:
        LOWORD(v8) = -1;
        uint64_t v9 = v5;
      }
      else
      {
        uint64_t v10 = a2;
        uint64_t v5 = 1;
        while (1)
        {
          uint64_t v11 = a4 + 32 + (v8 << 6);
          uint64_t v12 = *(void *)(v11 + 8);
          uint64_t v13 = *(void *)(v11 + 16);
          uint64_t v14 = *(void *)(v11 + 24);
          char v15 = *(unsigned char *)(v11 + 32);
          uint64_t v16 = *(void *)(v11 + 40);
          uint64_t v17 = *(void *)(v11 + 48);
          unint64_t v8 = *(unsigned __int16 *)(v11 + 56);
          *(void *)uint64_t v10 = *(void *)v11;
          *(void *)(v10 + 8) = v12;
          *(void *)(v10 + 16) = v13;
          *(void *)(v10 + 24) = v14;
          *(unsigned char *)(v10 + 32) = v15;
          *(void *)(v10 + 40) = v16;
          *(void *)(v10 + 48) = v17;
          if (v9 == v5) {
            break;
          }
          if (v8 == 0xFFFF) {
            goto LABEL_13;
          }
          ++v5;
          unint64_t v18 = *(void *)(a4 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v10 += 56;
          if (v18 <= v8) {
            goto LABEL_12;
          }
        }
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

unint64_t sub_1835199D8(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t result = swift_beginAccess();
  unint64_t v9 = *(void *)(*(void *)(a4 + 16) + 16);
  if (v9 < a1)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v9 < a3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v10 = a3 - a1;
  if (a2 >= 1)
  {
    if (v10 < 0 || v10 >= (unint64_t)a2) {
      goto LABEL_10;
    }
    return 0;
  }
  if (v10 <= 0 && v10 > a2) {
    return 0;
  }
LABEL_10:
  unint64_t result = a1 + a2;
  if (__OFADD__(a1, a2))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (result > v9) {
LABEL_16:
  }
    __break(1u);
  return result;
}

unint64_t HTTPFields.init(dictionaryLiteral:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  type metadata accessor for HTTPFields._Storage();
  uint64_t v3 = (void *)swift_allocObject();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  v3[2] = MEMORY[0x1E4FBC860];
  v3[3] = sub_1835960A8(v4);
  uint64_t v5 = (_DWORD *)swift_slowAlloc();
  v3[4] = v5;
  *uint64_t v5 = 0;
  unint64_t v6 = *(void *)(a1 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v7 = sub_18351A56C();
    swift_release();
    uint64_t v3 = v7;
  }
  swift_beginAccess();
  if (v3[3])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61ED8);
    sub_183D44A5C();
  }
  swift_endAccess();
  unsigned __int8 v32 = v3 + 2;
  swift_beginAccess();
  unint64_t v8 = (void *)v3[2];
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  v3[2] = v8;
  if (!isUniquelyReferenced_nonNull_native || v6 > v8[3] >> 1)
  {
    if (v8[2] <= v6) {
      int64_t v10 = v6;
    }
    else {
      int64_t v10 = v8[2];
    }
    unint64_t v8 = sub_1834B412C(isUniquelyReferenced_nonNull_native, v10, 0, v8);
  }
  *unsigned __int8 v32 = v8;
  unint64_t result = swift_endAccess();
  uint64_t v36 = *(void *)(a1 + 16);
  if (v36)
  {
    unint64_t v12 = 0;
    uint64_t v34 = v3;
    uint64_t v35 = a1 + 32;
    uint64_t v33 = a1;
    do
    {
      if (v12 >= *(void *)(a1 + 16))
      {
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        return result;
      }
      uint64_t v16 = (uint64_t *)(v35 + 48 * v12);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      uint64_t v20 = (unsigned __int8 *(*)@<X0>(unsigned __int8 *@<X0>, _DWORD *@<X8>))v16[2];
      uint64_t v19 = v16[3];
      unint64_t v22 = v16[4];
      unint64_t v21 = v16[5];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      char v23 = sub_183D44D1C();
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      if (v23) {
        goto LABEL_48;
      }
      uint64_t v37 = v17;
      uint64_t v38 = v19;
      unint64_t v39 = v12 + 1;
      if ((v21 & 0x2000000000000000) != 0) {
        unint64_t v24 = HIBYTE(v21) & 0xF;
      }
      else {
        unint64_t v24 = v22 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v25 = (v22 >> 59) & 1;
      if ((v21 & 0x1000000000000000) == 0) {
        LOBYTE(v25) = 1;
      }
      uint64_t v26 = 4 << v25;
      unint64_t v27 = 15;
      do
      {
        while (1)
        {
          if (4 * v24 == v27 >> 14)
          {
            uint64_t v3 = v34;
            swift_retain();
            goto LABEL_14;
          }
          unint64_t v28 = v27 & 0xC;
          unint64_t result = v27;
          if (v28 == v26) {
            unint64_t result = sub_183520284(v27, v22, v21);
          }
          unint64_t v29 = result >> 16;
          if (result >> 16 >= v24)
          {
            __break(1u);
LABEL_46:
            __break(1u);
            goto LABEL_47;
          }
          if ((v21 & 0x1000000000000000) == 0) {
            break;
          }
          unint64_t result = sub_183D44CFC();
          char v30 = result;
          if (v28 == v26) {
            goto LABEL_40;
          }
LABEL_35:
          if ((v21 & 0x1000000000000000) != 0) {
            goto LABEL_36;
          }
LABEL_23:
          unint64_t v27 = (v27 & 0xFFFFFFFFFFFF0000) + 65540;
          if (v30 < 0) {
            goto LABEL_42;
          }
        }
        if ((v21 & 0x2000000000000000) != 0)
        {
          unint64_t v40 = v22;
          uint64_t v41 = v21 & 0xFFFFFFFFFFFFFFLL;
          char v30 = *((unsigned char *)&v40 + v29);
          if (v28 == v26) {
            goto LABEL_40;
          }
          goto LABEL_35;
        }
        unint64_t result = (v21 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((v22 & 0x1000000000000000) == 0) {
          unint64_t result = sub_183D4557C();
        }
        char v30 = *(unsigned char *)(result + v29);
        if (v28 != v26) {
          goto LABEL_35;
        }
LABEL_40:
        unint64_t result = sub_183520284(v27, v22, v21);
        unint64_t v27 = result;
        if ((v21 & 0x1000000000000000) == 0) {
          goto LABEL_23;
        }
LABEL_36:
        if (v24 <= v27 >> 16) {
          goto LABEL_46;
        }
        unint64_t v27 = sub_183D44CBC();
      }
      while ((v30 & 0x80) == 0);
LABEL_42:
      unint64_t v40 = v22;
      uint64_t v41 = v21;
      unsigned int v42 = sub_1835A3780;
      uint64_t v43 = 0;
      unint64_t v47 = 0;
      unint64_t v48 = 0xE000000000000000;
      uint64_t v3 = v34;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F630E0);
      sub_1834FBEF8((unint64_t *)&qword_1E8F630E8, &qword_1E8F630E0);
      sub_183D44C0C();
      swift_bridgeObjectRelease();
      unint64_t v22 = v47;
      unint64_t v21 = v48;
LABEL_14:
      a1 = v33;
      uint64_t v13 = sub_1834FBAD4(v22, v21);
      uint64_t v15 = v14;
      swift_bridgeObjectRelease();
      unint64_t v40 = v18;
      uint64_t v41 = v37;
      unsigned int v42 = v20;
      uint64_t v43 = v38;
      char v44 = 0;
      uint64_t v45 = v13;
      uint64_t v46 = v15;
      sub_18351A7C0((uint64_t *)&v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t result = swift_release();
      ++v12;
    }
    while (v39 != v36);
  }
  swift_bridgeObjectRelease();
  unint64_t result = swift_beginAccess();
  if (*(void *)(*v32 + 16) > 0xFFFEuLL) {
    goto LABEL_49;
  }
  *a2 = v3;
  return result;
}

uint64_t HTTPFields.subscript.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v1 = *(void *)(a1 + 24);
  uint64_t v3 = sub_18351A02C();
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_18359A408(v2, v1);
    if (v5) {
      unsigned __int16 v6 = *(_WORD *)(*(void *)(v3 + 56) + 4 * v4);
    }
    else {
      unsigned __int16 v6 = -1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    unsigned __int16 v6 = -1;
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_1835204B0(v7, v6);
  swift_bridgeObjectRelease();
  return v8;
}

{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;

  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v4 = *v1;
  char v5 = sub_18351A02C();
  if (!*(void *)(v5 + 16)) {
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  unsigned __int16 v6 = sub_18359A408(v3, v2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    return 0;
  }
  uint64_t v8 = *(unsigned __int16 *)(*(void *)(v5 + 56) + 4 * v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t result = swift_beginAccess();
  if (v8 == 0xFFFF) {
    return 0;
  }
  if (*(void *)(*(void *)(v4 + 16) + 16) > v8)
  {
    if (v3 != 0x65696B6F6F63 || v2 != 0xE600000000000000) {
      sub_183D4592C();
    }
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F635E0);
    sub_1834FBEF8(&qword_1E8F635E8, &qword_1E8F635E0);
    sub_1834D7EAC();
    int64_t v10 = sub_183D44DDC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unsigned __int16 v6;
  uint64_t v7;
  uint64_t v8;

  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = sub_18351A02C();
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_18359A408(v1, v2);
    if (v5) {
      unsigned __int16 v6 = *(_WORD *)(*(void *)(v3 + 56) + 4 * v4);
    }
    else {
      unsigned __int16 v6 = -1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    unsigned __int16 v6 = -1;
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_18351C894(v7, v6);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_183519FDC()
{
  MEMORY[0x185318E50](*(void *)(v0 + 32), -1, -1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_18351A02C()
{
  uint64_t v1 = (os_unfair_lock_s *)v0[4];
  os_unfair_lock_lock(v1);
  swift_beginAccess();
  uint64_t v2 = (void *)v0[3];
  if (v2)
  {
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v1);
    return (uint64_t)v2;
  }
  uint64_t v35 = v0 + 3;
  lock = v1;
  swift_beginAccess();
  uint64_t v38 = *(void *)(v0[2] + 16);
  if (!v38)
  {
    uint64_t v4 = 0;
    char v5 = 0;
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
LABEL_30:
    *uint64_t v35 = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(lock);
    sub_18313D870((uint64_t)v4);
    sub_18313D870((uint64_t)v5);
    return (uint64_t)v2;
  }
  uint64_t v37 = v0 + 2;
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  char v5 = 0;
  unint64_t v6 = 0;
  uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  while (v6 < *(void *)(*v37 + 16))
  {
    uint64_t v8 = *v37 + v3 * 8;
    uint64_t v39 = (uint64_t)v5;
    uint64_t v40 = *(void *)(v8 + 48);
    uint64_t v9 = *(void *)(v8 + 56);
    swift_beginAccess();
    int64_t v10 = (void *)*v37;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v37 = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      int64_t v10 = sub_183517EA4(v10);
      *uint64_t v37 = v10;
    }
    if (v6 >= v10[2]) {
      goto LABEL_33;
    }
    LOWORD(v10[v3 + 11]) = -1;
    swift_endAccess();
    if (v2[2])
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_18359A408(v40, v9);
      if (v13)
      {
        unint64_t v14 = *(unsigned __int16 *)(v2[7] + 4 * v12 + 2);
        swift_bridgeObjectRelease();
        if (v6 >= 0x10000) {
          goto LABEL_37;
        }
        swift_beginAccess();
        uint64_t v15 = (void *)*v37;
        char v16 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v37 = v15;
        if ((v16 & 1) == 0)
        {
          uint64_t v15 = sub_183517EA4(v15);
          *uint64_t v37 = v15;
        }
        if (v15[2] <= v14) {
          goto LABEL_36;
        }
        LOWORD(v15[8 * v14 + 11]) = v6;
        swift_endAccess();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v6;
    sub_18313D870((uint64_t)v4);
    if (v6 == 0x10000) {
      goto LABEL_37;
    }
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_183522850;
    *(void *)(v18 + 24) = v17;
    sub_18313D870(v39);
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v21 = sub_18359A408(v40, v9);
    uint64_t v22 = v2[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23)) {
      goto LABEL_34;
    }
    char v25 = v20;
    if (v2[3] >= v24)
    {
      if ((v19 & 1) == 0) {
        sub_18359FDD0();
      }
    }
    else
    {
      sub_18359B804(v24, v19);
      uint64_t v26 = sub_18359A408(v40, v9);
      if ((v25 & 1) != (v27 & 1)) {
        goto LABEL_38;
      }
      unint64_t v21 = v26;
    }
    swift_bridgeObjectRelease();
    uint64_t v28 = swift_bridgeObjectRetain();
    if ((v25 & 1) == 0)
    {
      int v29 = (*(uint64_t (**)(uint64_t))(v18 + 16))(v28);
      v2[(v21 >> 6) + 8] |= 1 << v21;
      char v30 = (uint64_t *)(v2[6] + 16 * v21);
      uint64_t *v30 = v40;
      v30[1] = v9;
      *(_DWORD *)(v2[7] + 4 * v21) = v29;
      uint64_t v31 = v2[2];
      BOOL v32 = __OFADD__(v31, 1);
      uint64_t v33 = v31 + 1;
      if (v32) {
        goto LABEL_35;
      }
      v2[2] = v33;
      swift_bridgeObjectRetain();
    }
    uint64_t v7 = v2[7];
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 4 * v21 + 2) = v6;
    swift_bridgeObjectRelease();
    v3 += 8;
    char v5 = sub_183522868;
    uint64_t v4 = sub_183522850;
    if (v38 == ++v6) {
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  sub_183D456BC();
  __break(1u);
LABEL_38:
  uint64_t result = sub_183D45A4C();
  __break(1u);
  return result;
}

unint64_t sub_18351A4C0(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0 || result >= 0x10000)
  {
    uint64_t result = sub_183D456BC();
    __break(1u);
  }
  return result;
}

void *sub_18351A56C()
{
  uint64_t v1 = (void *)swift_allocObject();
  uint64_t v2 = MEMORY[0x1E4FBC860];
  v1[2] = MEMORY[0x1E4FBC860];
  v1[3] = sub_1835960A8(v2);
  uint64_t v3 = (_DWORD *)swift_slowAlloc();
  v1[4] = v3;
  *uint64_t v3 = 0;
  swift_beginAccess();
  uint64_t v4 = v0[2];
  swift_beginAccess();
  v1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v5 = (os_unfair_lock_s *)v0[4];
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  uint64_t v6 = v0[3];
  swift_beginAccess();
  v1[3] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v5);
  return v1;
}

uint64_t sub_18351A6A8()
{
  uint64_t result = swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v2 + 80;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_183D44C4C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_183D45B1C();
      swift_bridgeObjectRetain();
      sub_183D44C4C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v4 += 64;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_18351A7C0(uint64_t *a1)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  unint64_t v6 = a1[3];
  char v7 = *((unsigned char *)a1 + 32);
  uint64_t v8 = a1[5];
  uint64_t v39 = a1[6];
  uint64_t v40 = a1[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_183D44D1C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v2 = (unint64_t *)((char *)v1 + 16);
  swift_beginAccess();
  unint64_t v10 = *(void *)(*((void *)v1 + 2) + 16);
  if (v10 >= 0x10000) {
    goto LABEL_33;
  }
  uint64_t v3 = (uint64_t (*)())((char *)v1 + 24);
  swift_beginAccess();
  uint64_t v11 = *((void *)v1 + 3);
  if (!v11 || !*(void *)(v11 + 16)) {
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_18359A408(v40, v6);
  if (v13)
  {
    unint64_t v9 = *(unsigned __int16 *)(*(void *)(v11 + 56) + 4 * v12 + 2);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    unint64_t v14 = (void *)*v2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v2 = (unint64_t)v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_183517EA4(v14);
      *uint64_t v2 = (unint64_t)v14;
    }
    if (v14[2] > v9)
    {
      LOWORD(v14[8 * v9 + 11]) = v10;
LABEL_10:
      swift_endAccess();
      goto LABEL_11;
    }
    __break(1u);
LABEL_33:
    sub_183D456BC();
    __break(1u);
    goto LABEL_34;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v36 = v8;
  char v37 = v7;
  uint64_t v38 = v5;
  swift_beginAccess();
  uint64_t v1 = *(uint64_t (**)@<X0>(_DWORD *@<X8>))v3;
  if (!*(void *)v3)
  {
    uint64_t v3 = 0;
    goto LABEL_21;
  }
  uint64_t v16 = swift_allocObject();
  __int16 v35 = v10;
  *(_WORD *)(v16 + 16) = v10;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_18352287C;
  *(void *)(v17 + 24) = v16;
  swift_bridgeObjectRetain();
  char v18 = swift_isUniquelyReferenced_nonNull_native();
  char v19 = *(uint64_t (**)@<X0>(_DWORD *@<X8>))v3;
  uint64_t v41 = *(uint64_t (**)@<X0>(_DWORD *@<X8>))v3;
  *(void *)uint64_t v3 = 0x8000000000000000;
  unint64_t v21 = sub_18359A408(v40, v6);
  uint64_t v22 = *((void *)v19 + 2);
  BOOL v23 = (v20 & 1) == 0;
  uint64_t v24 = v22 + v23;
  if (__OFADD__(v22, v23)) {
    goto LABEL_30;
  }
  LOBYTE(v9) = v20;
  if (*((void *)v19 + 3) >= v24)
  {
    if ((v18 & 1) == 0) {
      goto LABEL_31;
    }
    goto LABEL_18;
  }
  sub_18359B804(v24, v18);
  char v19 = v41;
  uint64_t v25 = sub_18359A408(v40, v6);
  if ((v9 & 1) != (v26 & 1))
  {
LABEL_34:
    uint64_t result = sub_183D45A4C();
    __break(1u);
    return result;
  }
  unint64_t v21 = v25;
  while (1)
  {
LABEL_18:
    *(void *)uint64_t v3 = v19;
    swift_bridgeObjectRelease();
    char v27 = *(void **)v3;
    swift_bridgeObjectRetain();
    if ((v9 & 1) == 0)
    {
      int v28 = sub_18352287C();
      sub_18359F6F4(v21, v40, v6, v28, v27);
      swift_bridgeObjectRetain();
    }
    uint64_t v29 = v27[7];
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 4 * v21 + 2) = v35;
    swift_bridgeObjectRelease();
    uint64_t v1 = sub_183522868;
    uint64_t v3 = sub_18352287C;
LABEL_21:
    swift_endAccess();
    swift_beginAccess();
    unint64_t v9 = *v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v30 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v2 = v9;
    if ((v30 & 1) == 0)
    {
LABEL_28:
      unint64_t v9 = (unint64_t)sub_1834B412C(0, *(void *)(v9 + 16) + 1, 1, (void *)v9);
      *uint64_t v2 = v9;
    }
    unint64_t v21 = *(void *)(v9 + 16);
    unint64_t v31 = *(void *)(v9 + 24);
    if (v21 >= v31 >> 1)
    {
      unint64_t v9 = (unint64_t)sub_1834B412C((void *)(v31 > 1), v21 + 1, 1, (void *)v9);
      *uint64_t v2 = v9;
    }
    *(void *)(v9 + 16) = v21 + 1;
    unint64_t v32 = v9 + (v21 << 6);
    *(void *)(v32 + 32) = v38;
    *(void *)(v32 + 40) = v4;
    *(void *)(v32 + 48) = v40;
    *(void *)(v32 + 56) = v6;
    *(unsigned char *)(v32 + 64) = v37;
    *(void *)(v32 + 72) = v36;
    *(void *)(v32 + 80) = v39;
    *(_WORD *)(v32 + 88) = -1;
    unint64_t v33 = *v2;
    swift_endAccess();
    unint64_t v6 = *(void *)(v33 + 16);
    sub_18313D870((uint64_t)v3);
    uint64_t result = sub_18313D870((uint64_t)v1);
    if (v6 <= 0xFFFE) {
      break;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    sub_18359FDD0();
    char v19 = v41;
  }
  return result;
}

uint64_t sub_18351AC60()
{
  sub_183D45AFC();
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 + 80;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_183D44C4C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_183D45B1C();
      swift_bridgeObjectRetain();
      sub_183D44C4C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v3 += 64;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return sub_183D45B4C();
}

uint64_t sub_18351AD88()
{
  return sub_18351AC60();
}

uint64_t sub_18351ADAC()
{
  return sub_18351A6A8();
}

uint64_t sub_18351ADD0()
{
  return sub_183D45B4C();
}

uint64_t sub_18351AE10(uint64_t *a1, uint64_t *a2)
{
  return sub_183521734(*a1, *a2);
}

_DWORD *HTTPFields.init()@<X0>(void *a1@<X8>)
{
  type metadata accessor for HTTPFields._Storage();
  uint64_t v2 = (void *)swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  v2[2] = MEMORY[0x1E4FBC860];
  v2[3] = sub_1835960A8(v3);
  uint64_t result = (_DWORD *)swift_slowAlloc();
  v2[4] = result;
  *uint64_t result = 0;
  *a1 = v2;
  return result;
}

uint64_t sub_18351B060(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = a3[1];
  uint64_t v4 = a3[2];
  uint64_t v5 = a3[3];
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  v9[0] = *a3;
  v9[1] = v3;
  void v9[2] = v4;
  v9[3] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return HTTPFields.subscript.setter(v6, v7, v9);
}

uint64_t HTTPFields.subscript.setter(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  uint64_t v3 = a3[1];
  uint64_t v6 = a3[2];
  uint64_t v5 = a3[3];
  if (a2)
  {
    unint64_t v7 = a2;
    BOOL v9 = v6 == 0x65696B6F6F63 && v5 == 0xE600000000000000;
    if (v9 || (sub_183D4592C() & 1) != 0)
    {
      uint64_t v16 = a1;
      unint64_t v17 = v7;
      sub_183521DD8();
      uint64_t v10 = sub_183D451FC();
      swift_bridgeObjectRelease();
      uint64_t v11 = (void *)swift_allocObject();
      void v11[2] = v4;
      void v11[3] = v3;
      v11[4] = v6;
      v11[5] = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_18351B4E4(v10, (void (*)(void *__return_ptr, void))sub_183521E30, (uint64_t)v11, v4, v3, v6, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      if (sub_1834BF534(a1, v7))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v16 = a1;
        unint64_t v17 = v7;
        char v18 = sub_1835A3780;
        uint64_t v19 = 0;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F630E0);
        sub_1834FBEF8((unint64_t *)&qword_1E8F630E8, &qword_1E8F630E0);
        sub_183D44C0C();
        swift_bridgeObjectRelease();
        a1 = 0;
        unint64_t v7 = 0xE000000000000000;
      }
      uint64_t v13 = sub_1834FBAD4(a1, v7);
      uint64_t v15 = v14;
      swift_bridgeObjectRelease();
      uint64_t v16 = v4;
      unint64_t v17 = v3;
      char v18 = (unsigned __int8 *(*)@<X0>(unsigned __int8 *@<X0>, _DWORD *@<X8>))v6;
      uint64_t v19 = v5;
      char v20 = 0;
      uint64_t v21 = v13;
      uint64_t v22 = v15;
      sub_18351B938(&v16, v4, v3, v6, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    sub_183521BF0(*a3, a3[1], a3[2], v5);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_18351B3A8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v13 = a1[2];
  uint64_t v14 = a1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = MEMORY[0x185313F90](v11, v12, v13, v14);
  unint64_t v17 = v16;
  *(unsigned char *)(a6 + 32) = 0;
  *(void *)a6 = a2;
  *(void *)(a6 + 8) = a3;
  *(void *)(a6 + 16) = a4;
  *(void *)(a6 + 24) = a5;
  if ((sub_1834BF534(v15, v16) & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F630E0);
    sub_1834FBEF8((unint64_t *)&qword_1E8F630E8, &qword_1E8F630E0);
    sub_183D44C0C();
    swift_bridgeObjectRelease();
    uint64_t v15 = 0;
    unint64_t v17 = 0xE000000000000000;
  }
  uint64_t v18 = sub_1834FBAD4(v15, v17);
  uint64_t v20 = v19;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a6 + 40) = v18;
  *(void *)(a6 + 48) = v20;
  return result;
}

uint64_t sub_18351B4E4(uint64_t a1, void (*a2)(void *__return_ptr, void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void (*v42)(void *__return_ptr, void);
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[4];
  char v49;
  uint64_t v50;
  uint64_t v51;
  long long v52;
  uint64_t v53;
  uint64_t v54;

  uint64_t v8 = v7;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    *unint64_t v7 = sub_18351A56C();
    swift_release();
  }
  uint64_t v12 = sub_18351A02C();
  if (!*(void *)(v12 + 16)) {
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_18359A408(a6, a7);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  unsigned int v15 = *(unsigned __int16 *)(*(void *)(v12 + 56) + 4 * v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15 != 0xFFFF)
  {
    unint64_t v16 = *(void *)(a1 + 16);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    unint64_t v18 = 0;
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    unsigned int v42 = a2;
    unint64_t v41 = v16;
    while (1)
    {
      if (v18 == v16)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = sub_1834B4A40(0, v19[2] + 1, 1, v19);
        }
        unint64_t v21 = v19[2];
        unint64_t v20 = v19[3];
        if (v21 >= v20 >> 1) {
          uint64_t v19 = sub_1834B4A40((void *)(v20 > 1), v21 + 1, 1, v19);
        }
        unint64_t v22 = v15;
        v19[2] = v21 + 1;
        v19[v21 + 4] = v15;
        unint64_t v18 = v16;
      }
      else
      {
        if (v18 >= v16) {
          goto LABEL_32;
        }
        uint64_t v23 = a1 + 32 + 32 * v18;
        uint64_t v24 = *(void *)(v23 + 16);
        uint64_t v25 = *(void *)(v23 + 24);
        uint64_t v52 = *(_OWORD *)v23;
        uint64_t v53 = v24;
        uint64_t v54 = v25;
        swift_bridgeObjectRetain();
        a2(v48, &v52);
        swift_bridgeObjectRelease();
        uint64_t v26 = v48[1];
        uint64_t v27 = v48[3];
        uint64_t v46 = v48[2];
        unint64_t v47 = v48[0];
        uint64_t v45 = v49;
        uint64_t v28 = v51;
        char v44 = v50;
        uint64_t v29 = *v8;
        char v30 = (uint64_t *)(*v8 + 16);
        swift_beginAccess();
        unint64_t v31 = *(void **)(v29 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v29 + 16) = v31;
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_183517EA4(v31);
          unint64_t v31 = (void *)result;
          uint64_t *v30 = result;
        }
        unint64_t v22 = v15;
        if (v31[2] <= (unint64_t)v15) {
          goto LABEL_33;
        }
        unint64_t v32 = &v31[8 * (unint64_t)v15];
        ++v18;
        v32[4] = v47;
        v32[5] = v26;
        v32[6] = v46;
        v32[7] = v27;
        *((unsigned char *)v32 + 64) = v45;
        v32[9] = v44;
        v32[10] = v28;
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a2 = v42;
        unint64_t v16 = v41;
      }
      uint64_t v33 = *v8;
      uint64_t result = swift_beginAccess();
      uint64_t v34 = *(void *)(v33 + 16);
      if (*(void *)(v34 + 16) <= v22) {
        break;
      }
      unsigned int v15 = *(unsigned __int16 *)(v34 + (v22 << 6) + 88);
      if (v15 == 0xFFFF) {
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
LABEL_23:
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v18 = 0;
  uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
LABEL_24:
  if (v19[2])
  {
    swift_beginAccess();
    sub_18351D0C4((uint64_t)v19);
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v35 = *v8;
    swift_beginAccess();
    *(void *)(v35 + 24) = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v36 = *(void *)(a1 + 16);
  unint64_t v37 = v36 - v18;
  if (v36 == v18) {
    goto LABEL_30;
  }
  if (v36 > v18)
  {
    uint64_t v38 = (uint64_t *)(a1 + 32 * v18 + 56);
    do
    {
      uint64_t v39 = *(v38 - 1);
      uint64_t v40 = *v38;
      uint64_t v52 = *(_OWORD *)(v38 - 3);
      uint64_t v53 = v39;
      uint64_t v54 = v40;
      swift_bridgeObjectRetain();
      a2(v48, &v52);
      swift_bridgeObjectRelease();
      sub_18351A7C0(v48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v38 += 4;
      --v37;
    }
    while (v37);
LABEL_30:
    swift_release();
    return swift_bridgeObjectRelease();
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_18351B938(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    *uint64_t v5 = sub_18351A56C();
    swift_release();
  }
  uint64_t v10 = sub_18351A02C();
  if (*(void *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_18359A408(a4, a5);
    if (v12) {
      LODWORD(v13) = *(unsigned __int16 *)(*(void *)(v10 + 56) + 4 * v11);
    }
    else {
      LODWORD(v13) = 0xFFFF;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    LODWORD(v13) = 0xFFFF;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = *a1;
  unint64_t v15 = a1[1];
  uint64_t v16 = a1[2];
  uint64_t v17 = a1[3];
  char v34 = *((unsigned char *)a1 + 32);
  uint64_t v18 = a1[5];
  uint64_t v33 = a1[6];
  if (v13 == 0xFFFF)
  {
    sub_1834BFB88((uint64_t)a1);
    a1 = (uint64_t *)MEMORY[0x1E4FBC860];
    uint64_t v19 = v16;
    uint64_t v20 = v17;
    uint64_t v22 = v33;
    char v21 = v34;
    if (*(void *)(MEMORY[0x1E4FBC860] + 16)) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v32 = *a1;
    uint64_t v25 = *v6;
    uint64_t v26 = *v6 + 2;
    swift_beginAccess();
    uint64_t v27 = v25[2];
    sub_1834BFB88((uint64_t)a1);
    sub_1834BFB88((uint64_t)a1);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    void v25[2] = v27;
    if ((result & 1) == 0) {
      goto LABEL_29;
    }
    while (1)
    {
      unint64_t v28 = v13;
      if (*(void *)(v27 + 16) <= (unint64_t)v13)
      {
        __break(1u);
        return result;
      }
      unint64_t v29 = v27 + ((unint64_t)v13 << 6);
      uint64_t v27 = *(void *)(v29 + 56);
      uint64_t v13 = *(void *)(v29 + 80);
      *(void *)(v29 + 32) = v32;
      *(void *)(v29 + 40) = v15;
      *(void *)(v29 + 48) = v16;
      *(void *)(v29 + 56) = v17;
      *(unsigned char *)(v29 + 64) = v34;
      *(void *)(v29 + 72) = v18;
      *(void *)(v29 + 80) = v33;
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_18312A0D8((uint64_t)a1);
      uint64_t v26 = *v6;
      swift_beginAccess();
      uint64_t v30 = v26[2];
      if (*(void *)(v30 + 16) > v28) {
        break;
      }
LABEL_28:
      __break(1u);
LABEL_29:
      uint64_t result = (uint64_t)sub_183517EA4((void *)v27);
      uint64_t v27 = result;
      *uint64_t v26 = result;
    }
    a1 = (uint64_t *)MEMORY[0x1E4FBC860];
    uint64_t v27 = 0xFFFFLL;
    while (1)
    {
      unint64_t v28 = *(unsigned __int16 *)(v30 + (v28 << 6) + 88);
      if (v28 == 0xFFFF) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a1 = sub_1834B4A40(0, a1[2] + 1, 1, a1);
      }
      unint64_t v15 = a1[2];
      unint64_t v31 = a1[3];
      if (v15 >= v31 >> 1) {
        a1 = sub_1834B4A40((void *)(v31 > 1), v15 + 1, 1, a1);
      }
      a1[2] = v15 + 1;
      a1[v15 + 4] = v28;
      uint64_t v26 = *v6;
      swift_beginAccess();
      uint64_t v30 = v26[2];
      if (*(void *)(v30 + 16) <= v28) {
        goto LABEL_28;
      }
    }
    uint64_t v14 = 0;
    unint64_t v15 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    char v21 = 0;
    uint64_t v18 = 0;
    uint64_t v22 = 0;
    if (a1[2])
    {
LABEL_11:
      swift_beginAccess();
      sub_18351D0C4((uint64_t)a1);
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t v23 = *v6;
      swift_beginAccess();
      v23[3] = 0;
      uint64_t result = swift_bridgeObjectRelease();
      if (!v15) {
        return result;
      }
      goto LABEL_12;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_12:
    v35[0] = v14;
    v35[1] = v15;
    v35[2] = v19;
    v35[3] = v20;
    char v36 = v21;
    uint64_t v37 = v18;
    uint64_t v38 = v22;
    sub_18351A7C0(v35);
    return sub_1834BFA48(v14, v15);
  }
  return result;
}

uint64_t sub_18351BCB8(uint64_t a1, void (*a2)(void *__return_ptr, void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void (*v39)(void *__return_ptr, void);
  uint64_t v40;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[4];
  char v47;
  uint64_t v48;
  uint64_t v49;
  void v50[2];
  void v51[4];

  uint64_t v8 = v7;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    *unint64_t v7 = sub_18351A56C();
    swift_release();
  }
  uint64_t v12 = sub_18351A02C();
  if (!*(void *)(v12 + 16)) {
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_18359A408(a6, a7);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  unsigned int v15 = *(unsigned __int16 *)(*(void *)(v12 + 56) + 4 * v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15 != 0xFFFF)
  {
    unint64_t v16 = *(void *)(a1 + 16);
    uint64_t v40 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    unint64_t v18 = 0;
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v39 = a2;
    unint64_t v38 = v16;
    while (1)
    {
      if (v18 == v16)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = sub_1834B4A40(0, v19[2] + 1, 1, v19);
        }
        unint64_t v21 = v19[2];
        unint64_t v20 = v19[3];
        if (v21 >= v20 >> 1) {
          uint64_t v19 = sub_1834B4A40((void *)(v20 > 1), v21 + 1, 1, v19);
        }
        unint64_t v22 = v15;
        v19[2] = v21 + 1;
        v19[v21 + 4] = v15;
        unint64_t v18 = v16;
      }
      else
      {
        if (v18 >= v16) {
          goto LABEL_32;
        }
        uint64_t v23 = *(void *)(v40 + 16 * v18 + 8);
        v51[0] = *(void *)(v40 + 16 * v18);
        v51[1] = v23;
        swift_bridgeObjectRetain();
        a2(v46, v51);
        swift_bridgeObjectRelease();
        uint64_t v24 = v46[1];
        uint64_t v25 = v46[3];
        char v44 = v46[2];
        uint64_t v45 = v46[0];
        uint64_t v43 = v47;
        uint64_t v26 = v49;
        unsigned int v42 = v48;
        uint64_t v27 = *v8;
        unint64_t v28 = (uint64_t *)(*v8 + 16);
        swift_beginAccess();
        unint64_t v29 = *(void **)(v27 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v27 + 16) = v29;
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_183517EA4(v29);
          unint64_t v29 = (void *)result;
          *unint64_t v28 = result;
        }
        unint64_t v22 = v15;
        if (v29[2] <= (unint64_t)v15) {
          goto LABEL_33;
        }
        uint64_t v30 = &v29[8 * (unint64_t)v15];
        ++v18;
        v30[4] = v45;
        v30[5] = v24;
        v30[6] = v44;
        v30[7] = v25;
        *((unsigned char *)v30 + 64) = v43;
        v30[9] = v42;
        v30[10] = v26;
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a2 = v39;
        unint64_t v16 = v38;
      }
      uint64_t v31 = *v8;
      uint64_t result = swift_beginAccess();
      uint64_t v32 = *(void *)(v31 + 16);
      if (*(void *)(v32 + 16) <= v22) {
        break;
      }
      unsigned int v15 = *(unsigned __int16 *)(v32 + (v22 << 6) + 88);
      if (v15 == 0xFFFF) {
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
LABEL_23:
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v18 = 0;
  uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
LABEL_24:
  if (v19[2])
  {
    swift_beginAccess();
    sub_18351D0C4((uint64_t)v19);
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v33 = *v8;
    swift_beginAccess();
    *(void *)(v33 + 24) = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v34 = *(void *)(a1 + 16);
  unint64_t v35 = v34 - v18;
  if (v34 == v18) {
    goto LABEL_30;
  }
  if (v34 > v18)
  {
    char v36 = (uint64_t *)(a1 + 16 * v18 + 40);
    do
    {
      uint64_t v37 = *v36;
      v50[0] = *(v36 - 1);
      v50[1] = v37;
      swift_bridgeObjectRetain();
      a2(v46, v50);
      swift_bridgeObjectRelease();
      sub_18351A7C0(v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v36 += 2;
      --v35;
    }
    while (v35);
LABEL_30:
    swift_release();
    return swift_bridgeObjectRelease();
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_18351C0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    *uint64_t v5 = sub_18351A56C();
    swift_release();
  }
  uint64_t v9 = sub_18351A02C();
  if (!*(void *)(v9 + 16)) {
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_18359A408(a4, a5);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  unint64_t v12 = *(unsigned __int16 *)(*(void *)(v9 + 56) + 4 * v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12 != 0xFFFF)
  {
    unint64_t v13 = *(void *)(a1 + 16);
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v15 = 0;
    unint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v39 = v13;
    while (1)
    {
      if (v15 == v13)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v16 = sub_1834B4A40(0, v16[2] + 1, 1, v16);
        }
        unint64_t v18 = v16[2];
        unint64_t v17 = v16[3];
        if (v18 >= v17 >> 1) {
          unint64_t v16 = sub_1834B4A40((void *)(v17 > 1), v18 + 1, 1, v16);
        }
        void v16[2] = v18 + 1;
        v16[v18 + 4] = v12;
        unint64_t v15 = v13;
      }
      else
      {
        if (v15 >= v13) {
          goto LABEL_32;
        }
        uint64_t v19 = a1 + 32 + 56 * v15;
        uint64_t v20 = *(void *)(v19 + 8);
        uint64_t v21 = *(void *)(v19 + 24);
        uint64_t v43 = *(void *)(v19 + 16);
        uint64_t v44 = *(void *)v19;
        char v42 = *(unsigned char *)(v19 + 32);
        uint64_t v22 = *(void *)(v19 + 48);
        uint64_t v41 = *(void *)(v19 + 40);
        uint64_t v23 = *v6;
        uint64_t v24 = (uint64_t *)(*v6 + 16);
        swift_beginAccess();
        uint64_t v25 = *(void **)(v23 + 16);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v23 + 16) = v25;
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_183517EA4(v25);
          uint64_t v25 = (void *)result;
          *uint64_t v24 = result;
        }
        if (v25[2] <= v12) {
          goto LABEL_33;
        }
        uint64_t v26 = &v25[8 * v12];
        ++v15;
        v26[4] = v44;
        v26[5] = v20;
        v26[6] = v43;
        v26[7] = v21;
        *((unsigned char *)v26 + 64) = v42;
        v26[9] = v41;
        v26[10] = v22;
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v13 = v39;
      }
      uint64_t v27 = *v6;
      uint64_t result = swift_beginAccess();
      uint64_t v28 = *(void *)(v27 + 16);
      if (*(void *)(v28 + 16) <= v12) {
        break;
      }
      unint64_t v12 = *(unsigned __int16 *)(v28 + (v12 << 6) + 88);
      if (v12 == 0xFFFF) {
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
LABEL_23:
  swift_bridgeObjectRetain();
  unint64_t v15 = 0;
  unint64_t v16 = (void *)MEMORY[0x1E4FBC860];
LABEL_24:
  if (v16[2])
  {
    swift_beginAccess();
    sub_18351D0C4((uint64_t)v16);
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v29 = *v6;
    swift_beginAccess();
    *(void *)(v29 + 24) = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v30 = *(void *)(a1 + 16);
  unint64_t v31 = v30 - v15;
  if (v30 == v15) {
    return swift_bridgeObjectRelease();
  }
  if (v30 > v15)
  {
    uint64_t v32 = (void *)(a1 + 56 * v15 + 80);
    do
    {
      uint64_t v33 = *(v32 - 5);
      uint64_t v34 = *(v32 - 4);
      uint64_t v35 = *(v32 - 3);
      char v36 = *((unsigned char *)v32 - 16);
      uint64_t v37 = *(v32 - 1);
      uint64_t v38 = *v32;
      v45[0] = *(v32 - 6);
      v45[1] = v33;
      v45[2] = v34;
      v45[3] = v35;
      char v46 = v36;
      uint64_t v47 = v37;
      uint64_t v48 = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_18351A7C0(v45);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32 += 7;
      --v31;
    }
    while (v31);
    return swift_bridgeObjectRelease();
  }
LABEL_34:
  __break(1u);
  return result;
}

void (*HTTPFields.subscript.modify(void *a1, uint64_t *a2))(uint64_t **a1, char a2)
{
  uint64_t v5 = malloc(0x38uLL);
  *a1 = v5;
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  long long v5[2] = v2;
  v5[3] = v7;
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  v5[4] = v6;
  v5[5] = v8;
  v5[6] = v9;
  uint64_t v10 = *v2;
  v13[3] = v9;
  void v13[4] = v10;
  v13[0] = v7;
  v13[1] = v6;
  void v13[2] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *uint64_t v5 = HTTPFields.subscript.getter((uint64_t)v13);
  v5[1] = v11;
  return sub_18351C584;
}

{
  uint64_t *v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void v12[5];

  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  v5[1] = v2;
  long long v5[2] = v7;
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  v5[3] = v6;
  v5[4] = v8;
  v5[5] = v9;
  uint64_t v10 = *v2;
  uint64_t v12[3] = v9;
  _OWORD v12[4] = v10;
  v12[0] = v7;
  v12[1] = v6;
  void v12[2] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *uint64_t v5 = HTTPFields.subscript.getter((uint64_t)v12);
  return sub_18351CBEC;
}

{
  uint64_t *v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void v12[5];

  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  v5[1] = v2;
  long long v5[2] = v7;
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  v5[3] = v6;
  v5[4] = v8;
  v5[5] = v9;
  uint64_t v10 = *v2;
  uint64_t v12[3] = v9;
  _OWORD v12[4] = v10;
  v12[0] = v7;
  v12[1] = v6;
  void v12[2] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *uint64_t v5 = HTTPFields.subscript.getter((uint64_t)v12);
  return sub_18351CEE4;
}

void sub_18351C584(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  unint64_t v3 = (*a1)[1];
  uint64_t v6 = (*a1)[5];
  uint64_t v5 = (*a1)[6];
  uint64_t v7 = (*a1)[4];
  v8[0] = (*a1)[3];
  v8[1] = v7;
  void v8[2] = v6;
  v8[3] = v5;
  if (a2)
  {
    swift_bridgeObjectRetain();
    HTTPFields.subscript.setter(v4, v3, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    HTTPFields.subscript.setter(v4, v3, v8);
  }

  free(v2);
}

uint64_t sub_18351C6EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  uint64_t v5 = a3[2];
  uint64_t v6 = a3[3];
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v3;
  v7[3] = v4;
  v7[4] = v5;
  v7[5] = v6;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_18351BCB8(v8, (void (*)(void *__return_ptr, void))sub_183522A2C, (uint64_t)v7, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t HTTPFields.subscript.setter(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v3;
  v7[3] = v4;
  v7[4] = v5;
  v7[5] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18351BCB8(a1, (void (*)(void *__return_ptr, void))sub_183521E40, (uint64_t)v7, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  sub_18351C0FC(a1, *a2, a2[1], a2[2], a2[3]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_18351C894(uint64_t a1, unsigned __int16 a2)
{
  int v4 = (unsigned __int16)~a2;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  sub_1835AF3E4(0, 0, 0);
  uint64_t result = swift_bridgeObjectRetain();
  if (v4)
  {
    unint64_t v6 = a2;
    uint64_t v7 = a1 + 32;
    uint64_t v17 = a1 + 32;
    while (*(void *)(a1 + 16) > v6)
    {
      uint64_t v8 = v7 + (v6 << 6);
      unint64_t v9 = *(void *)(v8 + 40);
      unint64_t v10 = *(void *)(v8 + 48);
      unint64_t v6 = *(unsigned __int16 *)(v8 + 56);
      if (sub_1834BF534(v9, v10))
      {
        uint64_t result = swift_bridgeObjectRetain();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v9 = sub_1835A378C(v9, v10);
        uint64_t v11 = a1;
        unint64_t v13 = v12;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v13;
        a1 = v11;
        uint64_t v7 = v17;
      }
      unint64_t v15 = *(void *)(v18 + 16);
      unint64_t v14 = *(void *)(v18 + 24);
      if (v15 >= v14 >> 1) {
        uint64_t result = sub_1835AF3E4(v14 > 1, v15 + 1, 1);
      }
      *(void *)(v18 + 16) = v15 + 1;
      uint64_t v16 = v18 + 16 * v15;
      *(void *)(v16 + 32) = v9;
      *(void *)(v16 + 40) = v10;
      if (v6 == 0xFFFF) {
        goto LABEL_2;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_2:
    swift_bridgeObjectRelease();
    return v18;
  }
  return result;
}

uint64_t sub_18351CA2C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v8 = *a1;
  unint64_t v7 = a1[1];
  *(unsigned char *)(a6 + 32) = 0;
  *(void *)a6 = a2;
  *(void *)(a6 + 8) = a3;
  *(void *)(a6 + 16) = a4;
  *(void *)(a6 + 24) = a5;
  if (sub_1834BF534(v8, v7))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F630E0);
    sub_1834FBEF8((unint64_t *)&qword_1E8F630E8, &qword_1E8F630E0);
    sub_183D44C0C();
    unint64_t v8 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  uint64_t v9 = sub_1834FBAD4(v8, v7);
  uint64_t v11 = v10;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a6 + 40) = v9;
  *(void *)(a6 + 48) = v11;
  return result;
}

void sub_18351CBEC(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = (*a1)[4];
  uint64_t v3 = (*a1)[5];
  uint64_t v6 = (*a1)[2];
  uint64_t v5 = (*a1)[3];
  uint64_t v7 = **a1;
  if (a2)
  {
    unint64_t v8 = (void *)swift_allocObject();
    void v8[2] = v6;
    v8[3] = v5;
    uint64_t v8[4] = v4;
    v8[5] = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_18351BCB8(v9, (void (*)(void *__return_ptr, void))sub_183522A2C, (uint64_t)v8, v6, v5, v4, v3);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = v6;
    v10[3] = v5;
    v10[4] = v4;
    v10[5] = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_18351BCB8(v7, (void (*)(void *__return_ptr, void))sub_183522A2C, (uint64_t)v10, v6, v5, v4, v3);
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  free(v2);
}

uint64_t sub_18351CD54(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  uint64_t v5 = a3[2];
  uint64_t v6 = a3[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_18351C0FC(v7, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_18351CEE4(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = (*a1)[4];
  uint64_t v3 = (*a1)[5];
  uint64_t v6 = (*a1)[2];
  uint64_t v5 = (*a1)[3];
  uint64_t v7 = **a1;
  if (a2)
  {
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_18351C0FC(v8, v6, v5, v4, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_18351C0FC(v7, v6, v5, v4, v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  free(v2);
}

uint64_t sub_18351CFA8@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1[4];
  if (v2 == 0xFFFF)
  {
    *(void *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  else if (*(void *)(*(void *)v1 + 16) <= v2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void *)v1 + (v2 << 6);
    uint64_t v5 = *(void *)(v3 + 32);
    uint64_t v4 = *(void *)(v3 + 40);
    uint64_t v6 = *(void *)(v3 + 48);
    uint64_t v7 = *(void *)(v3 + 56);
    uint64_t v8 = *(unsigned __int8 *)(v3 + 64);
    uint64_t v9 = *(void *)(v3 + 72);
    uint64_t v10 = *(void *)(v3 + 80);
    v1[4] = *(_WORD *)(v3 + 88);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_18351D060(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(_WORD *)(a1 + 8) = v2;
}

uint64_t sub_18351D074()
{
  return 0;
}

uint64_t sub_18351D07C()
{
  uint64_t v1 = sub_1835204B0(*(void *)v0, *(_WORD *)(v0 + 8));
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_18351D0B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1835198B4(a1, a2, a3, *(void *)v3, *(_WORD *)(v3 + 8));
}

uint64_t sub_18351D0C4(uint64_t result)
{
  uint64_t v2 = result;
  unint64_t v3 = *(void *)(result + 16);
  BOOL v4 = v3 == 0;
  if (v3)
  {
    uint64_t v5 = *(void *)(result + 32);
    unint64_t v6 = 1;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0;
  }
  uint64_t v7 = (void *)*v1;
  if (!*(void *)(*v1 + 16)) {
    return result;
  }
  uint64_t v32 = *(void *)(*v1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v8 = v7;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v27 = v1;
  if (result)
  {
    uint64_t v9 = (uint64_t)v7;
  }
  else
  {
LABEL_53:
    uint64_t result = (uint64_t)sub_183517EA4(v8);
    uint64_t v9 = result;
  }
  unint64_t v10 = 0;
  unint64_t v11 = 0;
  uint64_t v29 = v2 + 32;
  unint64_t v30 = v3;
  uint64_t v31 = v9 + 32;
  unint64_t v28 = v3 + 1;
  uint64_t v12 = v32;
  do
  {
    if (v11 == v12) {
      goto LABEL_46;
    }
    if (v4)
    {
      BOOL v4 = 1;
    }
    else
    {
      if (__OFADD__(v11, v10)) {
        goto LABEL_48;
      }
      if (v11 + v10 == v5)
      {
        unint64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          goto LABEL_52;
        }
        if (v6 != v3)
        {
          unint64_t v10 = v28 + v10 - v6;
          if (v6 <= v3) {
            unint64_t v24 = v3;
          }
          else {
            unint64_t v24 = v6;
          }
          while (v24 != v6)
          {
            unint64_t v25 = v11 + v13;
            if (__OFADD__(v11, v13)) {
              goto LABEL_44;
            }
            uint64_t v5 = *(void *)(v29 + 8 * v6);
            BOOL v4 = v25 == v5;
            if (v25 != v5)
            {
              ++v6;
              unint64_t v10 = v13;
              goto LABEL_18;
            }
            if (__OFADD__(v13, 1)) {
              goto LABEL_45;
            }
            ++v6;
            ++v13;
            if (v3 == v6)
            {
              uint64_t v5 = 0;
              unint64_t v6 = v3;
              goto LABEL_18;
            }
          }
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
        uint64_t v5 = 0;
        BOOL v4 = 1;
        ++v10;
        unint64_t v6 = v3;
      }
      else
      {
        BOOL v4 = 0;
      }
    }
LABEL_18:
    unint64_t v14 = v11 + v10;
    if (__OFADD__(v11, v10)) {
      goto LABEL_47;
    }
    unint64_t v15 = *(void *)(v9 + 16);
    if ((uint64_t)v14 >= (uint64_t)v15) {
      break;
    }
    if (v11 != v14)
    {
      if (v11 >= v15) {
        goto LABEL_49;
      }
      if ((v14 & 0x8000000000000000) != 0) {
        goto LABEL_50;
      }
      unint64_t v40 = v10;
      uint64_t v16 = (uint64_t *)(v31 + (v11 << 6));
      uint64_t v17 = v16[2];
      uint64_t v38 = v16[1];
      uint64_t v39 = *v16;
      uint64_t v37 = v16[3];
      char v36 = *((unsigned char *)v16 + 32);
      uint64_t v34 = v16[6];
      uint64_t v35 = v16[5];
      __int16 v33 = *((_WORD *)v16 + 28);
      uint64_t v2 = v31 + (v14 << 6);
      uint64_t v18 = *(void *)(v2 + 8);
      uint64_t v19 = *(void *)(v2 + 16);
      unint64_t v3 = *(void *)(v2 + 24);
      char v20 = *(unsigned char *)(v2 + 32);
      uint64_t v21 = *(void *)(v2 + 40);
      uint64_t v8 = *(void **)(v2 + 48);
      __int16 v22 = *(_WORD *)(v2 + 56);
      *uint64_t v16 = *(void *)v2;
      v16[1] = v18;
      void v16[2] = v19;
      v16[3] = v3;
      *((unsigned char *)v16 + 32) = v20;
      v16[5] = v21;
      v16[6] = (uint64_t)v8;
      *((_WORD *)v16 + 28) = v22;
      uint64_t v23 = v9;
      unint64_t v41 = *(void *)(v9 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14 >= v41) {
        goto LABEL_51;
      }
      uint64_t v8 = *(void **)(v2 + 24);
      *(void *)uint64_t v2 = v39;
      *(void *)(v2 + 8) = v38;
      *(void *)(v2 + 16) = v17;
      *(void *)(v2 + 24) = v37;
      *(unsigned char *)(v2 + 32) = v36;
      *(void *)(v2 + 40) = v35;
      *(void *)(v2 + 48) = v34;
      *(_WORD *)(v2 + 56) = v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v3 = v30;
      uint64_t v9 = v23;
      uint64_t v12 = v32;
      unint64_t v10 = v40;
    }
    ++v11;
  }
  while (v11 != v12);
  *uint64_t v27 = v9;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      unint64_t v26 = *(void *)(v9 + 16);
      uint64_t result = v26 - v10;
      if (v26 >= v10)
      {
        sub_1834F2024(result);
        goto LABEL_39;
      }
    }
    __break(1u);
    return result;
  }
LABEL_39:

  return swift_bridgeObjectRelease();
}

uint64_t HTTPFields.contains(_:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v1 = *(void *)(a1 + 24);
  if (*(void *)(sub_18351A02C() + 16))
  {
    swift_bridgeObjectRetain();
    sub_18359A408(v2, v1);
    char v4 = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    char v4 = 0;
  }
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t HTTPFields.hash(into:)()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v5 = v3 + 80;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_183D44C4C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_183D45B1C();
      swift_bridgeObjectRetain();
      sub_183D44C4C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v5 += 64;
      --v4;
    }
    while (v4);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static HTTPFields.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_183521734(*a1, *a2);
}

uint64_t HTTPFields.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_183D45AFC();
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v2 + 80;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_183D44C4C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_183D45B1C();
      swift_bridgeObjectRetain();
      sub_183D44C4C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v4 += 64;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  return sub_183D45B4C();
}

uint64_t sub_18351D6D4()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v3 + 80;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_183D44C4C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_183D45B1C();
      swift_bridgeObjectRetain();
      sub_183D44C4C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v5 += 64;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall HTTPFields.reserveCapacity(_:)(Swift::Int a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    *uint64_t v1 = sub_18351A56C();
    swift_release();
  }
  uint64_t v3 = *v1;
  swift_beginAccess();
  if (*(void *)(v3 + 24))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61ED8);
    sub_183D44A5C();
  }
  swift_endAccess();
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)(*v1 + 16);
  swift_beginAccess();
  unint64_t v6 = *(void **)(v4 + 16);
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v4 + 16) = v6;
  if (!isUniquelyReferenced_nonNull_native || a1 > v6[3] >> 1)
  {
    if (v6[2] <= a1) {
      Swift::Int v8 = a1;
    }
    else {
      Swift::Int v8 = v6[2];
    }
    unint64_t v6 = sub_1834B412C(isUniquelyReferenced_nonNull_native, v8, 0, v6);
  }
  *uint64_t v5 = v6;
  swift_endAccess();
}

uint64_t type metadata accessor for HTTPFields._Storage()
{
  return self;
}

uint64_t HTTPFields.startIndex.getter()
{
  return 0;
}

uint64_t HTTPFields.endIndex.getter()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(void *)(*(void *)(v1 + 16) + 16);
}

BOOL HTTPFields.isEmpty.getter()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(void *)(*(void *)(v1 + 16) + 16) == 0;
}

uint64_t HTTPFields.subscript.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v3 = result;
    uint64_t v5 = *v2;
    uint64_t result = swift_beginAccess();
    uint64_t v6 = *(void *)(v5 + 16);
    if (*(void *)(v6 + 16) > v3)
    {
      uint64_t v7 = v6 + (v3 << 6);
      uint64_t v8 = *(void *)(v7 + 40);
      uint64_t v9 = *(void *)(v7 + 48);
      uint64_t v10 = *(void *)(v7 + 56);
      char v11 = *(unsigned char *)(v7 + 64);
      uint64_t v12 = *(void *)(v7 + 72);
      uint64_t v13 = *(void *)(v7 + 80);
      *(void *)a2 = *(void *)(v7 + 32);
      *(void *)(a2 + 8) = v8;
      *(void *)(a2 + 16) = v9;
      *(void *)(a2 + 24) = v10;
      *(unsigned char *)(a2 + 32) = v11;
      *(void *)(a2 + 40) = v12;
      *(void *)(a2 + 48) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
  }
  __break(1u);
  return result;
}

double sub_18351DA50@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  HTTPFields.subscript.getter(*a1, (uint64_t)&v9);
  double result = *(double *)&v9;
  uint64_t v4 = v10;
  uint64_t v5 = v11;
  char v6 = v12;
  uint64_t v7 = v13;
  uint64_t v8 = v14;
  *(_OWORD *)a2 = v9;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  *(unsigned char *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v8;
  return result;
}

uint64_t sub_18351DAB0(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  unint64_t v3 = *a3;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  v11[0] = *(void *)a1;
  v11[1] = v4;
  void v11[2] = v5;
  void v11[3] = v6;
  char v12 = v7;
  uint64_t v13 = v8;
  uint64_t v14 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return HTTPFields.subscript.setter(v11, v3);
}

uint64_t HTTPFields.subscript.setter(uint64_t *a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v9 = (uint64_t **)v3;
  unint64_t v8 = a2;
  uint64_t v11 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v4 = a1[3];
  int v29 = *((unsigned __int8 *)a1 + 32);
  uint64_t v7 = a1[5];
  uint64_t v5 = a1[6];
  unint64_t v3 = (uint64_t *)*v3;
  swift_beginAccess();
  uint64_t v12 = v3[2];
  if (*(void *)(v12 + 16) <= v8)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    uint64_t result = (uint64_t)sub_183517EA4(v9);
    uint64_t v9 = (uint64_t **)result;
    *unint64_t v3 = result;
    goto LABEL_25;
  }
  uint64_t v27 = v11;
  uint64_t v28 = v7;
  uint64_t v7 = v8 << 6;
  uint64_t v13 = v12 + (v8 << 6);
  int v14 = *(unsigned __int8 *)(v13 + 64);
  uint64_t v15 = *(void *)(v13 + 72);
  uint64_t v16 = *(void *)(v13 + 80);
  BOOL v17 = *(void *)(v13 + 48) == v6 && *(void *)(v13 + 56) == v4;
  if (v17 || (sub_183D4592C()) && v14 == v29)
  {
    BOOL v18 = v15 == v28 && v16 == v5;
    if (v18 || (sub_183D4592C() & 1) != 0) {
      goto LABEL_27;
    }
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    *uint64_t v9 = sub_18351A56C();
    swift_release();
  }
  unint64_t v3 = *v9;
  swift_beginAccess();
  uint64_t v19 = v3[2];
  uint64_t v10 = v27;
  if (*(void *)(v19 + 16) <= v8) {
    goto LABEL_30;
  }
  uint64_t v20 = v19 + v7;
  BOOL v21 = v6 == *(void *)(v20 + 48) && v4 == *(void *)(v20 + 56);
  if (!v21 && (sub_183D4592C() & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v22 = sub_183D44D1C();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_33;
    }
    unint64_t v24 = *v9;
    swift_beginAccess();
    v24[3] = 0;
    swift_bridgeObjectRelease();
  }
  unint64_t v25 = *v9;
  unint64_t v3 = *v9 + 2;
  swift_beginAccess();
  uint64_t v9 = (uint64_t **)v25[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  void v25[2] = (uint64_t)v9;
  if ((result & 1) == 0) {
    goto LABEL_31;
  }
LABEL_25:
  if ((unint64_t)v9[2] > v8)
  {
    unint64_t v26 = (char *)v9 + v7;
    *((void *)v26 + 4) = v10;
    *((void *)v26 + 5) = v2;
    *((void *)v26 + 6) = v6;
    *((void *)v26 + 7) = v4;
    v26[64] = v29;
    *((void *)v26 + 9) = v28;
    *((void *)v26 + 10) = v5;
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_27:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

void (*HTTPFields.subscript.modify(void (**a1)(uint64_t **a1, char a2), unint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t result = (void (*)(uint64_t **, char))malloc(0x60uLL);
  *a1 = result;
  *((void *)result + 10) = a2;
  *((void *)result + 11) = v2;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = result;
    uint64_t v7 = *v2;
    uint64_t result = (void (*)(uint64_t **, char))swift_beginAccess();
    uint64_t v8 = *(void *)(v7 + 16);
    if (*(void *)(v8 + 16) > a2)
    {
      uint64_t v9 = v8 + (a2 << 6);
      uint64_t v10 = *(void *)(v9 + 40);
      uint64_t v11 = *(void *)(v9 + 48);
      uint64_t v12 = *(void *)(v9 + 56);
      char v13 = *(unsigned char *)(v9 + 64);
      uint64_t v14 = *(void *)(v9 + 72);
      uint64_t v15 = *(void *)(v9 + 80);
      *(void *)uint64_t v6 = *(void *)(v9 + 32);
      *((void *)v6 + 1) = v10;
      *((void *)v6 + 2) = v11;
      *((void *)v6 + 3) = v12;
      *((unsigned char *)v6 + 32) = v13;
      *((void *)v6 + 5) = v14;
      *((void *)v6 + 6) = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_18351DEAC;
    }
  }
  __break(1u);
  return result;
}

void sub_18351DEAC(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  char v7 = *((unsigned char *)v2 + 32);
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  unint64_t v10 = v2[10];
  v11[0] = v4;
  v11[1] = v3;
  void v11[2] = v5;
  void v11[3] = v6;
  char v12 = v7;
  uint64_t v13 = v8;
  uint64_t v14 = v9;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    HTTPFields.subscript.setter(v11, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    HTTPFields.subscript.setter(v11, v10);
  }

  free(v2);
}

uint64_t sub_18351DF80(uint64_t a1, int64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    *uint64_t v3 = (uint64_t)sub_18351A56C();
    swift_release();
  }
  uint64_t v8 = *v3;
  swift_beginAccess();
  if (*(void *)(*(void *)(v8 + 16) + 16) == a1)
  {
    long long v9 = *(_OWORD *)(a3 + 16);
    long long v41 = *(_OWORD *)a3;
    long long v42 = v9;
    long long v43 = *(_OWORD *)(a3 + 32);
    uint64_t v44 = *(void *)(a3 + 48);
    v45[0] = v41;
    v45[1] = v9;
    sub_1834BFB88(a3);
    sub_1835227D0((uint64_t)v45);
    char v10 = sub_183D44D1C();
    sub_183522808((uint64_t)v45);
    if ((v10 & 1) == 0)
    {
      v39[0] = v41;
      v39[1] = v42;
      v39[2] = v43;
      uint64_t v40 = v44;
      sub_18351A7C0((uint64_t *)v39);
      return sub_18312A0D8(a3);
    }
    __break(1u);
    goto LABEL_29;
  }
  swift_beginAccess();
  *(void *)(v8 + 24) = 0;
  swift_bridgeObjectRelease();
  uint64_t v12 = *v4 + 16;
  swift_beginAccess();
  if (a1 < 0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v13 = *(void **)v12;
  int64_t v14 = *(void *)(*(void *)v12 + 16);
  if (v14 < a2)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v38 = (void *)v12;
  uint64_t v15 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v16 = 1 - v15;
  if (__OFSUB__(1, v15))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int64_t v17 = v14 + v16;
  if (__OFADD__(v14, v16))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  sub_1834BFB88(a3);
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v38 = v13;
  if (!isUniquelyReferenced_nonNull_native || v17 > v13[3] >> 1)
  {
    if (v14 <= v17) {
      int64_t v19 = v14 + v16;
    }
    else {
      int64_t v19 = v14;
    }
    uint64_t v13 = sub_1834B412C(isUniquelyReferenced_nonNull_native, v19, 1, v13);
    *uint64_t v38 = v13;
  }
  uint64_t v20 = (uint64_t)&v13[8 * a1 + 4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61F48);
  swift_arrayDestroy();
  if (v16)
  {
    uint64_t v21 = v13[2];
    BOOL v22 = __OFSUB__(v21, a2);
    uint64_t v23 = v21 - a2;
    if (v22)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v23 < 0)
    {
LABEL_38:
      uint64_t result = sub_183D4571C();
      __break(1u);
      return result;
    }
    unint64_t v24 = (char *)(v20 + 64);
    unint64_t v25 = (char *)&v13[8 * a2 + 4];
    size_t v26 = v23 << 6;
    if ((char *)(v20 + 64) != v25 || v24 >= &v25[v26]) {
      memmove(v24, v25, v26);
    }
    uint64_t v27 = v13[2];
    BOOL v22 = __OFADD__(v27, v16);
    uint64_t v28 = v27 + v16;
    if (v22)
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    void v13[2] = v28;
  }
  uint64_t v29 = *(void *)a3;
  uint64_t v30 = *(void *)(a3 + 8);
  uint64_t v32 = *(void *)(a3 + 16);
  uint64_t v31 = *(void *)(a3 + 24);
  char v33 = *(unsigned char *)(a3 + 32);
  uint64_t v36 = *(void *)(a3 + 48);
  uint64_t v37 = *(void *)(a3 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v34 = sub_183D44D1C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v34) {
    goto LABEL_34;
  }
  *(void *)uint64_t v20 = v29;
  *(void *)(v20 + 8) = v30;
  *(void *)(v20 + 16) = v32;
  *(void *)(v20 + 24) = v31;
  *(unsigned char *)(v20 + 32) = v33;
  *(void *)(v20 + 40) = v37;
  *(void *)(v20 + 48) = v36;
  *(_WORD *)(v20 + 56) = 0;
  sub_1834BFB88(a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *uint64_t v38 = v13;
  swift_endAccess();
  uint64_t v35 = *v4;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)(v35 + 16) + 16) > 0xFFFEuLL)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  return result;
}

uint64_t HTTPFields.replaceSubrange<A>(_:with:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v35 = a3;
  uint64_t v36 = a2;
  uint64_t v34 = a5;
  uint64_t v9 = *(void *)(a5 + 8);
  uint64_t v10 = sub_183D454BC();
  uint64_t v32 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v31 - v11;
  v31[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E8F61F48);
  uint64_t v33 = sub_183D4564C();
  uint64_t v13 = MEMORY[0x1F4188790](v33);
  v31[2] = (char *)v31 - v14;
  uint64_t v15 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](v13);
  int64_t v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v31[0] = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  int64_t v19 = (char *)v31 - v18;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    *uint64_t v5 = sub_18351A56C();
    swift_release();
  }
  uint64_t v20 = *v5;
  swift_beginAccess();
  if (*(void *)(*(void *)(v20 + 16) + 16) == a1)
  {
    uint64_t v36 = v6;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v35, a4);
    sub_183D44D5C();
    swift_getAssociatedConformanceWitness();
    sub_183D4539C();
    uint64_t v21 = v39;
    if (!v39) {
      return (*(uint64_t (**)(char *, uint64_t))(v31[0] + 8))(v19, AssociatedTypeWitness);
    }
    uint64_t v22 = v38;
    uint64_t v23 = v40;
    uint64_t v24 = v41;
    char v26 = v42;
    uint64_t v25 = v43;
    uint64_t v27 = v44;
    while (1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v28 = sub_183D44D1C();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v28) {
        break;
      }
      uint64_t v38 = v22;
      uint64_t v39 = v21;
      uint64_t v40 = v23;
      uint64_t v41 = v24;
      LOBYTE(v42) = v26;
      uint64_t v43 = v25;
      uint64_t v44 = v27;
      sub_18351A7C0(&v38);
      sub_1834BFA48(v22, v21);
      sub_183D4539C();
      uint64_t v22 = v38;
      uint64_t v21 = v39;
      uint64_t v23 = v40;
      uint64_t v24 = v41;
      char v26 = v42;
      uint64_t v25 = v43;
      uint64_t v27 = v44;
      if (!v39) {
        return (*(uint64_t (**)(char *, uint64_t))(v31[0] + 8))(v19, AssociatedTypeWitness);
      }
    }
    __break(1u);
    goto LABEL_12;
  }
  swift_beginAccess();
  *(void *)(v20 + 24) = 0;
  swift_bridgeObjectRelease();
  MEMORY[0x185314190](a4, v9);
  swift_getWitnessTable();
  sub_183D4574C();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v10);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F635F8);
  uint64_t v45 = v34;
  swift_getWitnessTable();
  sub_183D44E8C();
  swift_endAccess();
  uint64_t v30 = *v6;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)(v30 + 16) + 16) > 0xFFFEuLL) {
LABEL_12:
  }
    __break(1u);
  return result;
}

uint64_t sub_18351E84C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  char v7 = *((unsigned char *)a1 + 32);
  uint64_t v9 = a1[5];
  uint64_t v8 = a1[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v10 = sub_183D44D1C();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v10)
  {
    __break(1u);
  }
  else
  {
    *(void *)a2 = v4;
    *(void *)(a2 + 8) = v3;
    *(void *)(a2 + 16) = v6;
    *(void *)(a2 + 24) = v5;
    *(unsigned char *)(a2 + 32) = v7;
    *(void *)(a2 + 40) = v9;
    *(void *)(a2 + 48) = v8;
    *(_WORD *)(a2 + 56) = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

_DWORD *sub_18351E914@<X0>(void *a1@<X8>)
{
  type metadata accessor for HTTPFields._Storage();
  uint64_t v2 = (void *)swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  v2[2] = MEMORY[0x1E4FBC860];
  v2[3] = sub_1835960A8(v3);
  uint64_t result = (_DWORD *)swift_slowAlloc();
  v2[4] = result;
  *uint64_t result = 0;
  *a1 = v2;
  return result;
}

uint64_t sub_18351E978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HTTPFields.replaceSubrange<A>(_:with:)(*(void *)a1, *(void **)(a1 + 8), a2, a3, a4);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8);

  return v6(a2, a3);
}

_DWORD *sub_18351E9FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  long long v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  return sub_18351EA38((uint64_t)v5, a2, a3);
}

_DWORD *sub_18351EA38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  type metadata accessor for HTTPFields._Storage();
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  void v12[2] = MEMORY[0x1E4FBC860];
  uint64_t v12[3] = sub_1835960A8(v13);
  uint64_t result = (_DWORD *)swift_slowAlloc();
  _OWORD v12[4] = result;
  *uint64_t result = 0;
  if (!a2)
  {
    uint64_t result = (_DWORD *)sub_18312A0D8(a1);
LABEL_7:
    *a3 = v12;
    return result;
  }
  if ((a2 & 0x8000000000000000) == 0)
  {
    v17[0] = v6;
    v17[1] = v5;
    v17[2] = v8;
    v17[3] = v7;
    char v18 = v9;
    uint64_t v19 = v10;
    uint64_t v20 = v11;
    do
    {
      swift_beginAccess();
      uint64_t v15 = *(void *)(v12[2] + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_18351DF80(v15, v15, (uint64_t)v17);
      sub_18312A0D8(a1);
      --a2;
    }
    while (a2);
    uint64_t result = (_DWORD *)sub_18312A0D8(a1);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_18351EB74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184548](a1, a4, a2, a5, a3);
}

uint64_t sub_18351EB8C(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  char v6 = *((unsigned char *)a1 + 32);
  uint64_t v8 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v9 = *v1;
  swift_beginAccess();
  uint64_t v10 = *(void *)(*(void *)(v9 + 16) + 16);
  v12[0] = v3;
  v12[1] = v2;
  void v12[2] = v5;
  uint64_t v12[3] = v4;
  char v13 = v6;
  uint64_t v14 = v8;
  uint64_t v15 = v7;
  sub_18351DF80(v10, v10, (uint64_t)v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18351EC34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184500](a1, a4, a2, a5, a3);
}

uint64_t sub_18351EC4C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  char v6 = *((unsigned char *)a1 + 32);
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v9 = *a2;
  v11[0] = v2;
  v11[1] = v3;
  void v11[2] = v4;
  void v11[3] = v5;
  char v12 = v6;
  uint64_t v13 = v7;
  uint64_t v14 = v8;
  sub_18351DF80(v9, v9, (uint64_t)v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_18351ECCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return MEMORY[0x1F4184510](a1, a2, a5, a3, a6, a4);
}

uint64_t sub_18351ECE4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_18351ECEC(*a1, a2);
}

uint64_t sub_18351ECEC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(v5 + 16);
  unint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
    __break(1u);
    goto LABEL_6;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v8 > a1)
  {
    uint64_t v9 = v7 + (a1 << 6);
    uint64_t v10 = *(void *)(v9 + 40);
    uint64_t v16 = *(void *)(v9 + 32);
    uint64_t v12 = *(void *)(v9 + 48);
    uint64_t v11 = *(void *)(v9 + 56);
    char v13 = *(unsigned char *)(v9 + 64);
    uint64_t v15 = *(void *)(v9 + 72);
    uint64_t v14 = *(void *)(v9 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_1835226CC(a1);
    *(void *)a2 = v16;
    *(void *)(a2 + 8) = v10;
    *(void *)(a2 + 16) = v12;
    *(void *)(a2 + 24) = v11;
    *(unsigned char *)(a2 + 32) = v13;
    *(void *)(a2 + 40) = v15;
    *(void *)(a2 + 48) = v14;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_18351EDC8(uint64_t *a1)
{
  return sub_1835226CC(*a1);
}

double sub_18351EDD4@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_18351EDEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void *)(v3 + 16);
  unint64_t v6 = *(void *)(v5 + 16);
  if (!v6)
  {
    __break(1u);
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(v5 + 40);
  uint64_t v8 = *(void *)(v5 + 48);
  uint64_t v9 = *(void *)(v5 + 56);
  char v10 = *(unsigned char *)(v5 + 64);
  uint64_t v11 = *(void *)(v5 + 72);
  uint64_t v12 = *(void *)(v5 + 80);
  *(void *)a1 = *(void *)(v5 + 32);
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v12;
  uint64_t result = sub_1835199D8(0, 1, v6, v3);
  if ((v13 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_1835226CC(0);
    }
    goto LABEL_6;
  }
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_18351EEB8(unint64_t result)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v3 = *v1;
      swift_beginAccess();
      uint64_t result = sub_1835199D8(0, v2, *(void *)(*(void *)(v3 + 16) + 16), v3);
      if (v4)
      {
LABEL_9:
        __break(1u);
        return result;
      }
      if ((result & 0x8000000000000000) == 0) {
        return sub_1835226CC(0);
      }
    }
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

_DWORD *sub_18351EF48(char a1)
{
  if (a1)
  {
    swift_beginAccess();
    return (_DWORD *)sub_1835226CC(0);
  }
  else
  {
    swift_release();
    type metadata accessor for HTTPFields._Storage();
    uint64_t v3 = (void *)swift_allocObject();
    uint64_t v4 = MEMORY[0x1E4FBC860];
    v3[2] = MEMORY[0x1E4FBC860];
    v3[3] = sub_1835960A8(v4);
    uint64_t result = (_DWORD *)swift_slowAlloc();
    v3[4] = result;
    *uint64_t result = 0;
    *uint64_t v1 = v3;
  }
  return result;
}

uint64_t sub_18351EFE8(uint64_t (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t result = sub_183520B08(a1, a2);
  if (!v3)
  {
    uint64_t v5 = result;
    uint64_t v6 = *v2;
    uint64_t result = swift_beginAccess();
    if (*(void *)(*(void *)(v6 + 16) + 16) < v5) {
      __break(1u);
    }
    else {
      return sub_1835226CC(v5);
    }
  }
  return result;
}

uint64_t sub_18351F068(uint64_t *a1, unint64_t *a2)
{
  return HTTPFields.subscript.setter(a1, *a2);
}

uint64_t (*sub_18351F070(void (***a1)(uint64_t **a1, char a2), unint64_t *a2))()
{
  uint64_t v4 = (void (**)(uint64_t **, char))malloc(0x28uLL);
  *a1 = v4;
  v4[4] = HTTPFields.subscript.modify(v4, *a2);
  return sub_18351F0D0;
}

uint64_t sub_18351F0D4(uint64_t a1, uint64_t a2)
{
  sub_183520300(v2, *(void *)a2, *(void *)(a2 + 8), *(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16));

  return swift_release();
}

uint64_t (*sub_18351F120(void *a1, uint64_t *a2))()
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_18351F1C8(v4, *a2, a2[1]);
  return sub_18351F0D0;
}

void sub_18351F180(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_18351F1C8(void *a1, uint64_t a2, uint64_t a3))(unint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x48uLL);
  *a1 = v7;
  v7[7] = a3;
  v7[8] = v3;
  void v7[6] = a2;
  uint64_t v8 = *v3;
  uint64_t result = (void (*)(unint64_t **, char))swift_beginAccess();
  if (a2 < 0 || *(void *)(*(void *)(v8 + 16) + 16) < a3)
  {
    __break(1u);
  }
  else
  {
    v7[1] = a3;
    v7[2] = v8;
    *uint64_t v7 = a2;
    swift_retain();
    return sub_18351F278;
  }
  return result;
}

void sub_18351F278(unint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = **a1;
  uint64_t v4 = (*a1)[1];
  uint64_t v5 = (*a1)[2];
  int64_t v6 = (*a1)[7];
  uint64_t v7 = (uint64_t *)(*a1)[8];
  unint64_t v8 = (*a1)[6];
  if (a2)
  {
    swift_retain();
    sub_183520300(v7, v8, v6, v3, v4, v5);
    swift_release();
  }
  else
  {
    sub_183520300((uint64_t *)(*a1)[8], v8, v6, v3, v4, v5);
  }
  swift_release();

  free(v2);
}

uint64_t sub_18351F32C@<X0>(uint64_t (*a1)(uint64_t *)@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_183520EA4(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_18351F358(uint64_t *a1, unint64_t *a2)
{
  return sub_18351F364(*a1, *a2);
}

uint64_t sub_18351F364(uint64_t result, unint64_t a2)
{
  if (result != a2)
  {
    unint64_t v3 = result;
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v5 = *v2;
      uint64_t result = swift_beginAccess();
      uint64_t v6 = *(void *)(v5 + 16);
      unint64_t v7 = *(void *)(v6 + 16);
      if (v7 > v3)
      {
        uint64_t v8 = v6 + 32;
        uint64_t v9 = v8 + (v3 << 6);
        uint64_t result = *(void *)(v9 + 8);
        uint64_t v10 = *(void *)(v9 + 16);
        uint64_t v11 = *(void *)(v9 + 24);
        char v12 = *(unsigned char *)(v9 + 32);
        uint64_t v13 = *(void *)(v9 + 40);
        uint64_t v14 = *(void *)(v9 + 48);
        v26[0] = *(void *)v9;
        v26[1] = result;
        v26[2] = v10;
        v26[3] = v11;
        char v27 = v12;
        uint64_t v28 = v13;
        uint64_t v29 = v14;
        if (v7 > a2)
        {
          uint64_t v15 = v8 + (a2 << 6);
          uint64_t v16 = *(void *)(v15 + 8);
          uint64_t v17 = *(void *)(v15 + 16);
          uint64_t v18 = *(void *)(v15 + 24);
          char v19 = *(unsigned char *)(v15 + 32);
          uint64_t v20 = *(void *)(v15 + 40);
          uint64_t v21 = *(void *)(v15 + 48);
          v22[0] = *(void *)v15;
          v22[1] = v16;
          v22[2] = v17;
          v22[3] = v18;
          char v23 = v19;
          uint64_t v24 = v20;
          uint64_t v25 = v21;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          HTTPFields.subscript.setter(v22, v3);
          return HTTPFields.subscript.setter(v26, a2);
        }
LABEL_9:
        __break(1u);
        return result;
      }
    }
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_18351F480()
{
  return sub_183D44ABC();
}

uint64_t sub_18351F4A4()
{
  return sub_183D44AAC();
}

uint64_t sub_18351F4C8@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  *a1 = *(void *)(*(void *)(v3 + 16) + 16);
  return result;
}

void (*sub_18351F514(void (***a1)(void **a1), unint64_t *a2))(void *a1)
{
  uint64_t v4 = (void (**)(void **))malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_18351F574(v4, *a2);
  return sub_1834AFAEC;
}

void (*sub_18351F574(void (**a1)(void **a1), unint64_t a2))(void **a1)
{
  uint64_t result = (void (*)(void **))malloc(0x50uLL);
  *a1 = result;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = result;
    uint64_t v7 = *v2;
    uint64_t result = (void (*)(void **))swift_beginAccess();
    uint64_t v8 = *(void *)(v7 + 16);
    if (*(void *)(v8 + 16) > a2)
    {
      uint64_t v9 = v8 + (a2 << 6);
      uint64_t v10 = *(void *)(v9 + 40);
      uint64_t v11 = *(void *)(v9 + 48);
      uint64_t v12 = *(void *)(v9 + 56);
      char v13 = *(unsigned char *)(v9 + 64);
      uint64_t v14 = *(void *)(v9 + 72);
      uint64_t v15 = *(void *)(v9 + 80);
      *(void *)uint64_t v6 = *(void *)(v9 + 32);
      *((void *)v6 + 1) = v10;
      *((void *)v6 + 2) = v11;
      *((void *)v6 + 3) = v12;
      *((unsigned char *)v6 + 32) = v13;
      *((void *)v6 + 5) = v14;
      *((void *)v6 + 6) = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_18351F63C;
    }
  }
  __break(1u);
  return result;
}

void sub_18351F63C(void **a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  free(v1);
}

uint64_t sub_18351F698@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = *v2;
  uint64_t result = swift_beginAccess();
  if (v4 < 0 || *(void *)(*(void *)(v6 + 16) + 16) < v5)
  {
    __break(1u);
  }
  else
  {
    a2[1] = v5;
    a2[2] = v6;
    *a2 = v4;
    return swift_retain();
  }
  return result;
}

uint64_t sub_18351F70C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void *)(*(void *)(v3 + 16) + 16);
  *a1 = 0;
  a1[1] = v5;
  return result;
}

BOOL sub_18351F758()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(void *)(*(void *)(v1 + 16) + 16) == 0;
}

uint64_t *sub_18351F7A4(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = a2[1];
  if (*result >= *a2)
  {
    BOOL v5 = __OFSUB__(v2, v3);
    BOOL v4 = v2 - v3 < 0;
  }
  else
  {
    BOOL v5 = 0;
    BOOL v4 = 0;
  }
  if (v4 == v5) {
    __break(1u);
  }
  return result;
}

void *sub_18351F7C0(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < *result) {
    __break(1u);
  }
  return result;
}

void *sub_18351F7DC(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < result[1]) {
    __break(1u);
  }
  return result;
}

uint64_t sub_18351F7F8@<X0>(unint64_t *a1@<X0>, void *a2@<X8>)
{
  unint64_t v4 = *a1;
  uint64_t v5 = *v2;
  uint64_t result = swift_beginAccess();
  if (v4 >= *(void *)(*(void *)(v5 + 16) + 16)) {
    __break(1u);
  }
  else {
    *a2 = v4 + 1;
  }
  return result;
}

uint64_t sub_18351F860(unint64_t *a1)
{
  uint64_t v3 = *v1;
  unint64_t v4 = *a1;
  uint64_t result = swift_beginAccess();
  if (v4 >= *(void *)(*(void *)(v3 + 16) + 16)) {
    __break(1u);
  }
  else {
    *a1 = v4 + 1;
  }
  return result;
}

void *sub_18351F8C8@<X0>(void *result@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v4 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = *v2;
    uint64_t result = (void *)swift_beginAccess();
    if (v4 < *(void *)(*(void *)(v5 + 16) + 16))
    {
      *a2 = v4;
      return result;
    }
  }
  __break(1u);
  return result;
}

unint64_t *sub_18351F938(unint64_t *result)
{
  unint64_t v2 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = result;
    uint64_t v4 = *v1;
    uint64_t result = (unint64_t *)swift_beginAccess();
    if (v2 < *(void *)(*(void *)(v4 + 16) + 16))
    {
      *uint64_t v3 = v2;
      return result;
    }
  }
  __break(1u);
  return result;
}

void *sub_18351F9A8@<X0>(void *result@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t v5 = *result + a2;
  if (__OFADD__(*result, a2))
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = *v3;
    uint64_t result = (void *)swift_beginAccess();
    if (v5 <= *(void *)(*(void *)(v6 + 16) + 16))
    {
      *a3 = v5;
      return result;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_18351FA18@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t result = sub_1835199D8(*a1, a2, *a3, *v4);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v7 & 1;
  return result;
}

uint64_t sub_18351FA54(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *v2;
  uint64_t result = swift_beginAccess();
  unint64_t v7 = *(void *)(*(void *)(v5 + 16) + 16);
  if (v3 > v7)
  {
    __break(1u);
  }
  else if (v4 <= v7)
  {
    return v4 - v3;
  }
  __break(1u);
  return result;
}

void sub_18351FAC4(void *a1@<X8>)
{
  *a1 = *v1;
  a1[1] = 0;
}

uint64_t sub_18351FAD0()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(void *)(*(void *)(v1 + 16) + 16);
}

void *sub_18351FB14()
{
  uint64_t v1 = sub_183599C88(*v0);
  swift_release();
  return v1;
}

uint64_t sub_18351FB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_183599FF8(a1, a2, a3, *v3);
}

uint64_t HTTPFields.debugDescription.getter()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61F48);
  uint64_t v4 = MEMORY[0x185314230](v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_18351FBD4()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61F48);
  uint64_t v4 = MEMORY[0x185314230](v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t HTTPFields.encode(to:)(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_2(a1, a1[3]);
  sub_183D45BDC();
  uint64_t v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_183521E54();
  sub_183521EA8();
  sub_183D458DC();
  return __swift_destroy_boxed_opaque_existential_2((uint64_t)v4);
}

uint64_t HTTPFields.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  type metadata accessor for HTTPFields._Storage();
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v6 = MEMORY[0x1E4FBC860];
  long long v5[2] = MEMORY[0x1E4FBC860];
  _OWORD v5[3] = sub_1835960A8(v6);
  unint64_t v7 = (_DWORD *)swift_slowAlloc();
  v5[4] = v7;
  *unint64_t v7 = 0;
  uint64_t v31 = v5;
  __swift_project_boxed_opaque_existential_2(a1, a1[3]);
  sub_183D45B9C();
  if (v2)
  {
    swift_release();
  }
  else
  {
    __swift_project_boxed_opaque_existential_2(v25, v26);
    uint64_t v8 = sub_183D458AC();
    if ((v9 & 1) == 0)
    {
      int64_t v10 = v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v11 = sub_18351A56C();
        uint64_t v31 = v11;
        swift_release();
        uint64_t v5 = v11;
      }
      swift_beginAccess();
      if (v5[3])
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61ED8);
        sub_183D44A5C();
      }
      swift_endAccess();
      swift_beginAccess();
      uint64_t v12 = (void *)v5[2];
      char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
      long long v5[2] = v12;
      if (!isUniquelyReferenced_nonNull_native || v10 > v12[3] >> 1)
      {
        if (v12[2] <= v10) {
          int64_t v14 = v10;
        }
        else {
          int64_t v14 = v12[2];
        }
        uint64_t v12 = sub_1834B412C(isUniquelyReferenced_nonNull_native, v14, 0, v12);
      }
      long long v5[2] = v12;
      swift_endAccess();
    }
    __swift_project_boxed_opaque_existential_2(v25, v26);
    if (sub_183D458CC())
    {
LABEL_19:
      __swift_destroy_boxed_opaque_existential_2((uint64_t)v25);
      *a2 = v31;
    }
    else
    {
      while (1)
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
        sub_183521EFC();
        sub_183D458BC();
        unint64_t v16 = v23;
        unint64_t v15 = v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v17 = sub_183D44D1C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v17) {
          break;
        }
        uint64_t v18 = v31;
        swift_beginAccess();
        uint64_t v19 = *(void *)(v18[2] + 16);
        v27[0] = v21[0];
        v27[1] = v21[1];
        v27[2] = v21[2];
        v27[3] = v21[3];
        char v28 = v22;
        unint64_t v29 = v23;
        unint64_t v30 = v24;
        sub_18351DF80(v19, v19, (uint64_t)v27);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_project_boxed_opaque_existential_2(v25, v26);
        if (sub_183D458CC()) {
          goto LABEL_19;
        }
      }
      sub_1834BDE24((uint64_t)v25, (uint64_t)v21);
      sub_183D4547C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_183D44C8C();
      if (sub_1834BF534(v16, v15))
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1835A378C(v16, v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_183D44C8C();
      swift_bridgeObjectRelease();
      sub_183D44C8C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_183D44C8C();
      sub_183D4554C();
      swift_allocError();
      sub_183D4551C();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_2((uint64_t)v21);
      swift_willThrow();
      swift_release();
      __swift_destroy_boxed_opaque_existential_2((uint64_t)v25);
    }
  }
  return __swift_destroy_boxed_opaque_existential_2((uint64_t)a1);
}

uint64_t sub_1835201B8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return HTTPFields.init(from:)(a1, a2);
}

uint64_t sub_1835201D0(void *a1)
{
  __swift_project_boxed_opaque_existential_2(a1, a1[3]);
  sub_183D45BDC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_183521E54();
  sub_183521EA8();
  sub_183D458DC();
  return __swift_destroy_boxed_opaque_existential_2((uint64_t)v2);
}

uint64_t sub_183520284(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_183D44D0C();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1853140B0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_183520300(uint64_t *a1, unint64_t a2, int64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *a1;
  uint64_t result = swift_beginAccess();
  if ((a2 & 0x8000000000000000) != 0 || *(void *)(*(void *)(v12 + 16) + 16) < a3)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (a2 != a3)
  {
    if (a4 == a5)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    if ((uint64_t)a2 >= a3)
    {
LABEL_26:
      __break(1u);
      return result;
    }
    uint64_t v14 = a6 + 16;
    uint64_t result = swift_beginAccess();
    uint64_t v15 = (a4 << 6) + 80;
    int64_t v16 = a3 - 1;
    unint64_t v17 = a4;
    while ((uint64_t)v17 < a5)
    {
      if ((a4 & 0x8000000000000000) != 0) {
        goto LABEL_19;
      }
      if (v17 >= *(void *)(*(void *)v14 + 16)) {
        goto LABEL_20;
      }
      uint64_t v18 = (void *)(*(void *)v14 + v15);
      uint64_t v19 = *(v18 - 5);
      uint64_t v20 = *(v18 - 4);
      uint64_t v21 = *(v18 - 3);
      char v22 = *((unsigned char *)v18 - 16);
      uint64_t v23 = *(v18 - 1);
      uint64_t v24 = *v18;
      v26[0] = *(v18 - 6);
      v26[1] = v19;
      v26[2] = v20;
      v26[3] = v21;
      char v27 = v22;
      uint64_t v28 = v23;
      uint64_t v29 = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      HTTPFields.subscript.setter(v26, a2);
      uint64_t v25 = *a1;
      uint64_t result = swift_beginAccess();
      if (a2 >= *(void *)(*(void *)(v25 + 16) + 16)) {
        goto LABEL_21;
      }
      if (v17 >= *(void *)(*(void *)v14 + 16)) {
        goto LABEL_22;
      }
      ++v17;
      if (v16 == a2) {
        goto LABEL_15;
      }
      v15 += 64;
      ++a2;
      if (a5 == v17)
      {
        __break(1u);
LABEL_15:
        a4 = v17;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_16:
  if (a4 != a5)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  return result;
}

uint64_t sub_1835204B0(uint64_t result, unsigned __int16 a2)
{
  char v3 = (void *)MEMORY[0x1E4FBC860];
  if (a2 == 0xFFFF)
  {
    uint64_t v2 = 0;
  }
  else
  {
    unint64_t v4 = *(void *)(result + 16);
    unint64_t v5 = a2;
    uint64_t v26 = result;
    uint64_t result = swift_bridgeObjectRetain();
    if (v4 > v5)
    {
      uint64_t v2 = 0;
      uint64_t v6 = (uint64_t)(v3 + 4);
      unint64_t v27 = v4;
      do
      {
        uint64_t v7 = v26 + 32 + (v5 << 6);
        uint64_t v9 = *(void *)v7;
        uint64_t v8 = *(void *)(v7 + 8);
        uint64_t v11 = *(void *)(v7 + 16);
        uint64_t v10 = *(void *)(v7 + 24);
        char v29 = *(unsigned char *)(v7 + 32);
        uint64_t v12 = *(void *)(v7 + 48);
        uint64_t v28 = *(void *)(v7 + 40);
        unint64_t v5 = *(unsigned __int16 *)(v7 + 56);
        if (v2)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t result = swift_bridgeObjectRetain();
          BOOL v13 = __OFSUB__(v2--, 1);
          if (v13) {
            goto LABEL_31;
          }
        }
        else
        {
          unint64_t v14 = v3[3];
          if ((uint64_t)((v14 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_32;
          }
          int64_t v15 = v14 & 0xFFFFFFFFFFFFFFFELL;
          if (v15 <= 1) {
            uint64_t v16 = 1;
          }
          else {
            uint64_t v16 = v15;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61F70);
          unint64_t v17 = (void *)swift_allocObject();
          uint64_t v18 = (uint64_t)(_swift_stdlib_malloc_size(v17) - 32) / 56;
          v17[2] = v16;
          v17[3] = 2 * v18;
          uint64_t v19 = v17 + 4;
          uint64_t v20 = v3[3] >> 1;
          uint64_t v6 = (uint64_t)&v17[7 * v20 + 4];
          uint64_t v21 = (v18 & 0x7FFFFFFFFFFFFFFFLL) - v20;
          if (v3[2])
          {
            if (v17 != v3 || v19 >= &v3[7 * v20 + 4]) {
              memmove(v19, v3 + 4, 56 * v20);
            }
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v3[2] = 0;
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          uint64_t result = swift_release();
          char v3 = v17;
          unint64_t v4 = v27;
          BOOL v13 = __OFSUB__(v21, 1);
          uint64_t v2 = v21 - 1;
          if (v13)
          {
LABEL_31:
            __break(1u);
LABEL_32:
            __break(1u);
LABEL_33:
            __break(1u);
            return result;
          }
        }
        *(void *)uint64_t v6 = v9;
        *(void *)(v6 + 8) = v8;
        *(void *)(v6 + 16) = v11;
        *(void *)(v6 + 24) = v10;
        *(unsigned char *)(v6 + 32) = v29;
        *(void *)(v6 + 40) = v28;
        *(void *)(v6 + 48) = v12;
        if (v5 == 0xFFFF) {
          goto LABEL_25;
        }
        v6 += 56;
      }
      while (v4 > v5);
    }
    __break(1u);
LABEL_25:
    uint64_t result = swift_bridgeObjectRelease();
  }
  unint64_t v23 = v3[3];
  if (v23 >= 2)
  {
    unint64_t v24 = v23 >> 1;
    BOOL v13 = __OFSUB__(v24, v2);
    uint64_t v25 = v24 - v2;
    if (v13) {
      goto LABEL_33;
    }
    v3[2] = v25;
  }
  return (uint64_t)v3;
}

unint64_t sub_1835206FC()
{
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  unint64_t result = sub_1835210E0();
  uint64_t v1 = (void *)MEMORY[0x1E4FBC860];
  if ((result & 0x100) == 0)
  {
    char v2 = result;
    size_t v3 = 0;
    unint64_t v4 = (unsigned char *)(MEMORY[0x1E4FBC860] + 32);
    while (1)
    {
      if (!v3)
      {
        unint64_t v5 = v1[3];
        if ((uint64_t)((v5 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_26;
        }
        int64_t v6 = v5 & 0xFFFFFFFFFFFFFFFELL;
        if (v6 <= 1) {
          uint64_t v7 = 1;
        }
        else {
          uint64_t v7 = v6;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61ED0);
        uint64_t v8 = (void *)swift_allocObject();
        size_t v9 = 2 * _swift_stdlib_malloc_size(v8) - 64;
        void v8[2] = v7;
        v8[3] = v9;
        unint64_t v10 = (unint64_t)(v8 + 4);
        size_t v11 = v1[3] >> 1;
        if (v1[2])
        {
          if (v8 != v1 || v10 >= (unint64_t)v1 + v11 + 32) {
            memmove(v8 + 4, v1 + 4, v11);
          }
          v1[2] = 0;
        }
        unint64_t v4 = (unsigned char *)(v10 + v11);
        size_t v3 = (v9 >> 1) - v11;
        unint64_t result = swift_release();
        uint64_t v1 = v8;
      }
      BOOL v13 = __OFSUB__(v3--, 1);
      if (v13) {
        break;
      }
      *v4++ = v2;
      unint64_t result = sub_1835210E0();
      char v2 = result;
      if ((result & 0x100) != 0) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  size_t v3 = 0;
LABEL_21:
  swift_release();
  swift_release();
  swift_release();
  unint64_t result = swift_bridgeObjectRelease();
  unint64_t v14 = v1[3];
  if (v14 < 2) {
    return (unint64_t)v1;
  }
  unint64_t v15 = v14 >> 1;
  BOOL v13 = __OFSUB__(v15, v3);
  unint64_t v16 = v15 - v3;
  if (!v13)
  {
    v1[2] = v16;
    return (unint64_t)v1;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1835208CC(uint64_t result, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    unint64_t result = sub_183D44CAC();
    uint64_t v2 = result;
    if (result > 0)
    {
LABEL_6:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61ED0);
      size_t v3 = (void *)swift_allocObject();
      unint64_t result = _swift_stdlib_malloc_size(v3);
      unint64_t v4 = 2 * result - 64;
      v3[2] = v2;
      v3[3] = v4;
      goto LABEL_9;
    }
  }
  else
  {
    if ((a2 & 0x2000000000000000) != 0) {
      uint64_t v2 = HIBYTE(a2) & 0xF;
    }
    else {
      uint64_t v2 = result & 0xFFFFFFFFFFFFLL;
    }
    if (v2 > 0) {
      goto LABEL_6;
    }
  }
  size_t v3 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v4 = *(void *)(MEMORY[0x1E4FBC860] + 24);
LABEL_9:
  if (v2 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v5 = v3 + 4;
  unint64_t v6 = v4 >> 1;
  if (v2)
  {
    v6 -= v2;
    swift_bridgeObjectRetain();
    swift_retain();
    while (1)
    {
      unint64_t result = sub_183524FF8();
      if ((result & 0x100) != 0) {
        goto LABEL_42;
      }
      *v5++ = result;
      if (!--v2) {
        goto LABEL_16;
      }
    }
  }
  swift_bridgeObjectRetain();
  swift_retain();
LABEL_16:
  unint64_t result = sub_183524FF8();
  if ((result & 0x100) == 0)
  {
    char v7 = result;
    while (1)
    {
      if (!v6)
      {
        unint64_t v8 = v3[3];
        if ((uint64_t)((v8 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_39;
        }
        int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
        if (v9 <= 1) {
          uint64_t v10 = 1;
        }
        else {
          uint64_t v10 = v9;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61ED0);
        size_t v11 = (void *)swift_allocObject();
        size_t v12 = 2 * _swift_stdlib_malloc_size(v11) - 64;
        void v11[2] = v10;
        void v11[3] = v12;
        unint64_t v13 = (unint64_t)(v11 + 4);
        size_t v14 = v3[3] >> 1;
        if (v3[2])
        {
          if (v11 != v3 || v13 >= (unint64_t)v3 + v14 + 32) {
            memmove(v11 + 4, v3 + 4, v14);
          }
          v3[2] = 0;
        }
        unint64_t v5 = (unsigned char *)(v13 + v14);
        unint64_t v6 = (v12 >> 1) - v14;
        unint64_t result = swift_release();
        size_t v3 = v11;
      }
      BOOL v16 = __OFSUB__(v6--, 1);
      if (v16) {
        break;
      }
      *v5++ = v7;
      unint64_t result = sub_183524FF8();
      char v7 = result;
      if ((result & 0x100) != 0) {
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
LABEL_34:
  swift_release();
  unint64_t result = swift_bridgeObjectRelease();
  unint64_t v17 = v3[3];
  if (v17 < 2) {
    return (uint64_t)v3;
  }
  unint64_t v18 = v17 >> 1;
  BOOL v16 = __OFSUB__(v18, v6);
  unint64_t v19 = v18 - v6;
  if (!v16)
  {
    v3[2] = v19;
    return (uint64_t)v3;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_183520B08(uint64_t (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v64 = a2;
  uint64_t v4 = *v2;
  unint64_t v5 = (uint64_t *)(v4 + 16);
  swift_retain();
  uint64_t result = swift_beginAccess();
  uint64_t v51 = v4;
  uint64_t v7 = *(void *)(v4 + 16);
  unint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = 144;
    unint64_t v10 = 1;
    while (1)
    {
      unint64_t v11 = v10 - 1;
      if (v10 - 1 >= v8)
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v7 + v9;
      uint64_t v13 = *(void *)(v12 - 104);
      uint64_t v14 = *(void *)(v12 - 96);
      uint64_t v15 = *(void *)(v12 - 88);
      char v16 = *(unsigned char *)(v12 - 80);
      uint64_t v17 = *(void *)(v12 - 72);
      uint64_t v18 = *(void *)(v12 - 64);
      uint64_t v57 = *(void *)(v12 - 112);
      uint64_t v58 = v13;
      uint64_t v59 = v14;
      uint64_t v60 = v15;
      char v61 = v16;
      uint64_t v62 = v17;
      uint64_t v63 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v19 = a1(&v57);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v11;
      }
      char v20 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v20) {
        break;
      }
      uint64_t v7 = *v5;
      unint64_t v8 = *(void *)(*v5 + 16);
      if (v11 >= v8) {
        goto LABEL_27;
      }
      v9 += 64;
      if (v10++ == v8) {
        goto LABEL_9;
      }
    }
    uint64_t v22 = v51;
    swift_release();
    if (v11 < *(void *)(*(void *)(v51 + 16) + 16)) {
      goto LABEL_15;
    }
    __break(1u);
LABEL_13:
    uint64_t v22 = v51;
    while (1)
    {
      uint64_t result = swift_beginAccess();
      v9 += 64;
      if (v10++ >= *(void *)(*(void *)(v22 + 16) + 16)) {
        break;
      }
LABEL_15:
      unint64_t v24 = (uint64_t *)(v22 + 16);
      uint64_t result = swift_beginAccess();
      uint64_t v51 = v22;
      uint64_t v25 = *(void *)(v22 + 16);
      unint64_t v26 = *(void *)(v25 + 16);
      if (v10 == v26) {
        return v11;
      }
      if (v10 >= v26) {
        goto LABEL_28;
      }
      unint64_t v27 = (void *)(v25 + v9);
      uint64_t v28 = *(v27 - 5);
      uint64_t v29 = *(v27 - 4);
      uint64_t v30 = *(v27 - 3);
      char v31 = *((unsigned char *)v27 - 16);
      uint64_t v32 = *(v27 - 1);
      uint64_t v33 = *v27;
      uint64_t v57 = *(v27 - 6);
      uint64_t v58 = v28;
      uint64_t v59 = v29;
      uint64_t v60 = v30;
      char v61 = v31;
      uint64_t v62 = v32;
      uint64_t v63 = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v34 = a1(&v57);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v34) {
        goto LABEL_13;
      }
      if (v10 != v11)
      {
        if ((v11 & 0x8000000000000000) != 0) {
          goto LABEL_31;
        }
        uint64_t v35 = *v24;
        unint64_t v36 = *(void *)(*v24 + 16);
        if (v11 >= v36) {
          goto LABEL_32;
        }
        uint64_t v37 = v35 + (v11 << 6);
        uint64_t result = *(void *)(v37 + 40);
        uint64_t v38 = *(void *)(v37 + 48);
        uint64_t v39 = *(void *)(v37 + 56);
        char v40 = *(unsigned char *)(v37 + 64);
        uint64_t v41 = *(void *)(v37 + 72);
        uint64_t v42 = *(void *)(v37 + 80);
        uint64_t v57 = *(void *)(v37 + 32);
        uint64_t v58 = result;
        uint64_t v59 = v38;
        uint64_t v60 = v39;
        char v61 = v40;
        uint64_t v62 = v41;
        uint64_t v63 = v42;
        if (v10 >= v36) {
          goto LABEL_33;
        }
        uint64_t v43 = (void *)(v35 + v9);
        uint64_t v44 = *(v43 - 5);
        uint64_t v45 = *(v43 - 4);
        uint64_t v46 = *(v43 - 3);
        char v47 = *((unsigned char *)v43 - 16);
        uint64_t v48 = *(v43 - 1);
        uint64_t v49 = *v43;
        v53[0] = *(v43 - 6);
        v53[1] = v44;
        v53[2] = v45;
        v53[3] = v46;
        char v54 = v47;
        uint64_t v55 = v48;
        uint64_t v56 = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        HTTPFields.subscript.setter(v53, v11);
        HTTPFields.subscript.setter(&v57, v10);
      }
      uint64_t v22 = *v50;
      uint64_t result = swift_beginAccess();
      if (v11 >= *(void *)(*(void *)(v22 + 16) + 16)) {
        goto LABEL_30;
      }
      ++v11;
    }
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  else
  {
LABEL_9:
    swift_release();
    return *(void *)(*(void *)(v51 + 16) + 16);
  }
  return result;
}

uint64_t sub_183520EA4(uint64_t (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v36 = a2;
  uint64_t v4 = *v2;
  swift_beginAccess();
  int64_t v5 = *(void *)(*(void *)(v4 + 16) + 16);
  if (v5)
  {
    unint64_t v27 = v2;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = v4 + 16;
      uint64_t result = swift_beginAccess();
      uint64_t v9 = *(void *)(v4 + 16);
      if (v6 >= *(void *)(v9 + 16))
      {
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      uint64_t v10 = v9 + (v6 << 6);
      uint64_t v11 = *(void *)(v10 + 40);
      uint64_t v12 = *(void *)(v10 + 48);
      uint64_t v13 = *(void *)(v10 + 56);
      char v14 = *(unsigned char *)(v10 + 64);
      uint64_t v15 = *(void *)(v10 + 72);
      uint64_t v16 = *(void *)(v10 + 80);
      uint64_t v29 = *(void *)(v10 + 32);
      uint64_t v30 = v11;
      uint64_t v31 = v12;
      uint64_t v32 = v13;
      char v33 = v14;
      uint64_t v34 = v15;
      uint64_t v35 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v17 = a1(&v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v3) {
        return v6;
      }
      if (v17) {
        break;
      }
      if (v6 >= *(void *)(*(void *)v7 + 16)) {
        goto LABEL_20;
      }
LABEL_14:
      if ((uint64_t)++v6 >= v5) {
        return v6;
      }
    }
    int64_t v18 = v5 << 6;
    do
    {
      if (--v5 >= *(void *)(*(void *)v7 + 16))
      {
        __break(1u);
        goto LABEL_19;
      }
      if ((uint64_t)v6 >= v5) {
        return v6;
      }
      int64_t v19 = *(void *)v7 + v18;
      uint64_t v20 = *(void *)(v19 - 24);
      uint64_t v21 = *(void *)(v19 - 16);
      uint64_t v22 = *(void *)(v19 - 8);
      char v23 = *(unsigned char *)v19;
      uint64_t v24 = *(void *)(v19 + 8);
      uint64_t v25 = *(void *)(v19 + 16);
      uint64_t v29 = *(void *)(v19 - 32);
      uint64_t v30 = v20;
      uint64_t v31 = v21;
      uint64_t v32 = v22;
      char v33 = v23;
      uint64_t v34 = v24;
      uint64_t v35 = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v26 = a1(&v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      v18 -= 64;
    }
    while ((v26 & 1) != 0);
    sub_18351F364(v6, v5);
    uint64_t v4 = *v27;
    uint64_t result = swift_beginAccess();
    if (v6 < *(void *)(*(void *)(v4 + 16) + 16)) {
      goto LABEL_14;
    }
LABEL_21:
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

unint64_t sub_1835210E0()
{
  void (*v2)(unint64_t *__return_ptr, char *);
  unint64_t v3;
  long long v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t result;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  int v16;
  unint64_t v17;
  long long v18;
  void (*v19)(unint64_t *__return_ptr, char *);
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  long long v32;
  long long v33;
  long long v34;

  uint64_t v1 = v0;
  uint64_t v2 = (void (*)(unint64_t *__return_ptr, char *))(v0 + 8);
  if (*(unsigned char *)v0 != 1)
  {
    while (1)
    {
      char v17 = *(void *)(v1 + 56);
      int64_t v18 = *((_OWORD *)v2 + 1);
      uint64_t v32 = *(_OWORD *)v2;
      char v33 = v18;
      uint64_t v34 = *((_OWORD *)v2 + 2);
      if (v17 >> 14 == sub_1835214D8() >> 14) {
        goto LABEL_54;
      }
      int64_t v5 = *((void *)&v32 + 1);
      unint64_t v6 = v32;
      int64_t v19 = (void (*)(unint64_t *__return_ptr, char *))v33;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      uint64_t v20 = sub_1835214D8();
      swift_release();
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      if (v17 >> 14 >= v20 >> 14)
      {
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
        goto LABEL_59;
      }
      uint64_t v21 = (v6 >> 59) & 1;
      if ((v5 & 0x1000000000000000) == 0) {
        LOBYTE(v21) = 1;
      }
      uint64_t v22 = 4 << v21;
      if ((v17 & 0xC) == 4 << v21)
      {
        uint64_t result = sub_183520284(v17, v6, v5);
        char v17 = result;
        if ((v5 & 0x1000000000000000) == 0)
        {
LABEL_23:
          uint64_t result = (v17 & 0xFFFFFFFFFFFF0000) + 65540;
          goto LABEL_24;
        }
      }
      else if ((v5 & 0x1000000000000000) == 0)
      {
        goto LABEL_23;
      }
      char v26 = HIBYTE(v5) & 0xF;
      if ((v5 & 0x2000000000000000) == 0) {
        char v26 = v6 & 0xFFFFFFFFFFFFLL;
      }
      if (v26 <= v17 >> 16)
      {
        __break(1u);
        return result;
      }
      uint64_t result = sub_183D44CBC();
LABEL_24:
      *(void *)(v1 + 56) = result;
      if ((result & 0xC) == v22)
      {
        uint64_t result = sub_183520284(result, v6, v5);
        if (result < 0x4000) {
          goto LABEL_56;
        }
      }
      else if (result < 0x4000)
      {
        goto LABEL_56;
      }
      if ((v5 & 0x1000000000000000) != 0)
      {
        char v23 = HIBYTE(v5) & 0xF;
        if ((v5 & 0x2000000000000000) == 0) {
          char v23 = v6 & 0xFFFFFFFFFFFFLL;
        }
        if (v23 < result >> 16) {
          goto LABEL_58;
        }
        uint64_t result = sub_183D44CCC();
      }
      else
      {
        uint64_t result = (result & 0xFFFFFFFFFFFF0000) - 65532;
      }
      if ((result & 0xC) == v22) {
        uint64_t result = sub_183520284(result, v6, v5);
      }
      uint64_t v24 = HIBYTE(v5) & 0xF;
      if ((v5 & 0x2000000000000000) == 0) {
        uint64_t v24 = v6 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v25 = result >> 16;
      if (result >> 16 >= v24) {
        goto LABEL_57;
      }
      if ((v5 & 0x1000000000000000) != 0)
      {
        uint64_t v15 = sub_183D44CFC();
      }
      else if ((v5 & 0x2000000000000000) != 0)
      {
        uint64_t v28 = v6;
        uint64_t v29 = v5 & 0xFFFFFFFFFFFFFFLL;
        uint64_t v15 = *((unsigned char *)&v28 + v25);
      }
      else if ((v6 & 0x1000000000000000) != 0)
      {
        uint64_t v15 = *(unsigned char *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x20 + (result >> 16));
      }
      else
      {
        uint64_t v15 = *(unsigned char *)(sub_183D4557C() + v25);
      }
      uint64_t v30 = v15;
      v19(&v28, &v30);
      uint64_t v16 = v28;
      uint64_t v31 = v28;
      if (((*(uint64_t (**)(char *))(v1 + 64))(&v31) & 1) == 0)
      {
        unint64_t v27 = 0;
        *(unsigned char *)uint64_t v1 = 1;
        return v16 | (v27 << 8);
      }
    }
  }
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(_OWORD *)(v0 + 24);
  uint64_t v32 = *(_OWORD *)v2;
  char v33 = v4;
  uint64_t v34 = *(_OWORD *)(v0 + 40);
  if (v3 >> 14 == sub_1835214D8() >> 14)
  {
LABEL_54:
    uint64_t v16 = 0;
    unint64_t v27 = 1;
    return v16 | (v27 << 8);
  }
  int64_t v5 = *((void *)&v32 + 1);
  unint64_t v6 = v32;
  uint64_t v2 = (void (*)(unint64_t *__return_ptr, char *))v33;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v7 = sub_1835214D8();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 >> 14 >= v7 >> 14)
  {
LABEL_59:
    __break(1u);
LABEL_60:
    uint64_t result = sub_183520284(result, v6, v5);
    goto LABEL_7;
  }
  uint64_t v9 = sub_183521A98(v3, v32, *((unint64_t *)&v32 + 1));
  *(void *)(v1 + 56) = v9;
  uint64_t result = sub_183521B3C(v9, v6, v5);
  uint64_t v10 = (v6 >> 59) & 1;
  if ((v5 & 0x1000000000000000) == 0) {
    LOBYTE(v10) = 1;
  }
  if ((result & 0xC) == 4 << v10) {
    goto LABEL_60;
  }
LABEL_7:
  uint64_t v11 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v11 = v6 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v12 = result >> 16;
  if (result >> 16 >= v11)
  {
    __break(1u);
  }
  else if ((v5 & 0x1000000000000000) == 0)
  {
    if ((v5 & 0x2000000000000000) != 0)
    {
      uint64_t v28 = v6;
      uint64_t v29 = v5 & 0xFFFFFFFFFFFFFFLL;
      char v14 = *((unsigned char *)&v28 + v12);
    }
    else
    {
      if ((v6 & 0x1000000000000000) != 0) {
        uint64_t v13 = (v5 & 0xFFFFFFFFFFFFFFFLL) + 32;
      }
      else {
        uint64_t v13 = sub_183D4557C();
      }
      char v14 = *(unsigned char *)(v13 + v12);
    }
    goto LABEL_52;
  }
  char v14 = sub_183D44CFC();
LABEL_52:
  uint64_t v31 = v14;
  v2(&v28, &v31);
  unint64_t v27 = 0;
  uint64_t v16 = v28;
  return v16 | (v27 << 8);
}

unint64_t sub_1835214D8()
{
  void (*v14)(uint64_t *__return_ptr, void *);
  void v15[2];
  uint64_t v16;

  unint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  if ((v2 & 0x2000000000000000) != 0) {
    unint64_t v3 = HIBYTE(v2) & 0xF;
  }
  else {
    unint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = (v1 >> 59) & 1;
  if ((v2 & 0x1000000000000000) == 0) {
    LODWORD(v4) = 1;
  }
  uint64_t v5 = 11;
  if (v4) {
    uint64_t v5 = 7;
  }
  unint64_t v6 = v5 | (v3 << 16);
  if (!v3) {
    return v6;
  }
  uint64_t v7 = (uint64_t (*)(uint64_t *))v0[4];
  uint64_t v8 = 4 << v4;
  char v14 = (void (*)(uint64_t *__return_ptr, void *))v0[2];
  while (1)
  {
    unint64_t result = v6;
    if ((v6 & 0xC) == v8)
    {
      unint64_t result = sub_183520284(v6, v1, v2);
      if (result < 0x4000) {
        goto LABEL_40;
      }
    }
    else if (v6 < 0x4000)
    {
      goto LABEL_40;
    }
    if ((v2 & 0x1000000000000000) != 0)
    {
      if (v3 < result >> 16) {
        goto LABEL_42;
      }
      unint64_t result = sub_183D44CCC();
    }
    else
    {
      unint64_t result = (result & 0xFFFFFFFFFFFF0000) - 65532;
    }
    if ((result & 0xC) == v8) {
      unint64_t result = sub_183520284(result, v1, v2);
    }
    unint64_t v10 = result >> 16;
    if (result >> 16 >= v3) {
      break;
    }
    if ((v2 & 0x1000000000000000) != 0)
    {
      char v12 = sub_183D44CFC();
    }
    else if ((v2 & 0x2000000000000000) != 0)
    {
      v15[0] = v1;
      v15[1] = v2 & 0xFFFFFFFFFFFFFFLL;
      char v12 = *((unsigned char *)v15 + v10);
    }
    else
    {
      uint64_t v11 = (v2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((v1 & 0x1000000000000000) == 0) {
        uint64_t v11 = sub_183D4557C();
      }
      char v12 = *(unsigned char *)(v11 + v10);
    }
    LOBYTE(v15[0]) = v12;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v14(&v16, v15);
    swift_release();
    swift_bridgeObjectRelease();
    char v13 = v7(&v16);
    unint64_t result = swift_release();
    if ((v13 & 1) == 0) {
      return v6;
    }
    if ((v6 & 0xC) == v8)
    {
      unint64_t result = sub_183520284(v6, v1, v2);
      unint64_t v6 = result;
      if (result < 0x4000) {
        goto LABEL_41;
      }
    }
    else if (v6 < 0x4000)
    {
      goto LABEL_41;
    }
    if ((v2 & 0x1000000000000000) != 0)
    {
      if (v3 < v6 >> 16) {
        goto LABEL_43;
      }
      unint64_t v6 = sub_183D44CCC();
      if (v6 < 0x4000) {
        return v6;
      }
    }
    else
    {
      unint64_t v6 = (v6 & 0xFFFFFFFFFFFF0000) - 65532;
      if (v6 < 0x4000) {
        return v6;
      }
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_183521734(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_18351A02C();
  uint64_t result = sub_18351A02C();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16) == *(void *)(result + 16))
  {
    int64_t v7 = 0;
    uint64_t v38 = v4 + 64;
    uint64_t v8 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v9 = -1;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    unint64_t v10 = v9 & *(void *)(v4 + 64);
    uint64_t v44 = a1 + 16;
    uint64_t v11 = a2 + 16;
    int64_t v39 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v40 = result;
    uint64_t v41 = v4;
    while (1)
    {
      if (v10)
      {
        unint64_t v12 = __clz(__rbit64(v10));
        uint64_t v13 = (v10 - 1) & v10;
        unint64_t v14 = v12 | (v7 << 6);
        if (!*(void *)(v6 + 16)) {
          goto LABEL_51;
        }
      }
      else
      {
        int64_t v15 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          goto LABEL_56;
        }
        if (v15 >= v39)
        {
LABEL_53:
          swift_bridgeObjectRelease();
          swift_release();
          return 1;
        }
        unint64_t v16 = *(void *)(v38 + 8 * v15);
        ++v7;
        if (!v16)
        {
          int64_t v7 = v15 + 1;
          if (v15 + 1 >= v39) {
            goto LABEL_53;
          }
          unint64_t v16 = *(void *)(v38 + 8 * v7);
          if (!v16)
          {
            int64_t v7 = v15 + 2;
            if (v15 + 2 >= v39) {
              goto LABEL_53;
            }
            unint64_t v16 = *(void *)(v38 + 8 * v7);
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v39) {
                goto LABEL_53;
              }
              unint64_t v16 = *(void *)(v38 + 8 * v17);
              if (!v16)
              {
                while (1)
                {
                  int64_t v7 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_57;
                  }
                  if (v7 >= v39) {
                    goto LABEL_53;
                  }
                  unint64_t v16 = *(void *)(v38 + 8 * v7);
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v7 = v17;
            }
          }
        }
LABEL_23:
        uint64_t v13 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v7 << 6);
        if (!*(void *)(v6 + 16))
        {
LABEL_51:
          swift_release();
          goto LABEL_49;
        }
      }
      unint64_t v42 = v13;
      int64_t v43 = v7;
      int64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
      unsigned int v19 = *(unsigned __int16 *)(*(void *)(v4 + 56) + 4 * v14);
      uint64_t v21 = *v18;
      uint64_t v20 = v18[1];
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_18359A408(v21, v20);
      if ((v23 & 1) == 0)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_49;
      }
      unsigned int v24 = *(unsigned __int16 *)(*(void *)(v6 + 56) + 4 * v22);
      uint64_t result = swift_bridgeObjectRelease();
      BOOL v25 = v19 == 0xFFFF || v24 == 0xFFFF;
      if (!v25) {
        break;
      }
LABEL_5:
      BOOL v25 = v19 == v24;
      uint64_t v6 = v40;
      uint64_t v4 = v41;
      unint64_t v10 = v42;
      int64_t v7 = v43;
      if (!v25)
      {
LABEL_47:
        swift_bridgeObjectRelease();
        swift_release();
        return 0;
      }
    }
    swift_beginAccess();
    uint64_t result = swift_beginAccess();
    while (*(void *)(*(void *)v44 + 16) > (unint64_t)v19)
    {
      if (*(void *)(*(void *)v11 + 16) <= (unint64_t)v24) {
        goto LABEL_55;
      }
      unint64_t v27 = *(void *)v44 + ((unint64_t)v19 << 6);
      uint64_t result = *(void *)(v27 + 48);
      uint64_t v28 = *(void *)(v27 + 56);
      int v29 = *(unsigned __int8 *)(v27 + 64);
      uint64_t v30 = *(void *)(v27 + 72);
      uint64_t v31 = *(void *)(v27 + 80);
      unsigned int v19 = *(unsigned __int16 *)(v27 + 88);
      unint64_t v32 = *(void *)v11 + ((unint64_t)v24 << 6);
      int v33 = *(unsigned __int8 *)(v32 + 64);
      uint64_t v34 = *(void *)(v32 + 72);
      uint64_t v35 = *(void *)(v32 + 80);
      unsigned int v24 = *(unsigned __int16 *)(v32 + 88);
      if (result != *(void *)(v32 + 48) || v28 != *(void *)(v32 + 56))
      {
        uint64_t result = sub_183D4592C();
        if ((result & 1) == 0) {
          goto LABEL_47;
        }
      }
      if (v29 != v33) {
        goto LABEL_47;
      }
      if (v30 != v34 || v31 != v35)
      {
        uint64_t result = sub_183D4592C();
        if ((result & 1) == 0) {
          goto LABEL_47;
        }
      }
      if (v19 == 0xFFFF || v24 == 0xFFFF) {
        goto LABEL_5;
      }
    }
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_49:
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

unint64_t sub_183521A98(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5)
  {
    uint64_t result = sub_183520284(result, a2, a3);
    if ((a3 & 0x1000000000000000) == 0) {
      return (result & 0xFFFFFFFFFFFF0000) + 65540;
    }
  }
  else if ((a3 & 0x1000000000000000) == 0)
  {
    return (result & 0xFFFFFFFFFFFF0000) + 65540;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
  }
  else
  {
    return sub_183D44CBC();
  }
  return result;
}

unint64_t sub_183521B3C(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) != 4 << v5)
  {
    if (result >= 0x4000) {
      goto LABEL_5;
    }
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = sub_183520284(result, a2, a3);
  if (result < 0x4000) {
    goto LABEL_8;
  }
LABEL_5:
  if ((a3 & 0x1000000000000000) == 0) {
    return (result & 0xFFFFFFFFFFFF0000) - 65532;
  }
LABEL_9:
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16)
  {
    __break(1u);
  }
  else
  {
    return sub_183D44CCC();
  }
  return result;
}

uint64_t sub_183521BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    *uint64_t v4 = (uint64_t)sub_18351A56C();
    swift_release();
  }
  uint64_t v8 = sub_18351A02C();
  if (!*(void *)(v8 + 16)) {
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_18359A408(a3, a4);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  unint64_t v11 = *(unsigned __int16 *)(*(void *)(v8 + 56) + 4 * v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11 != 0xFFFF)
  {
    unint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v12 = sub_1834B4A40(0, v12[2] + 1, 1, v12);
      }
      unint64_t v14 = v12[2];
      unint64_t v13 = v12[3];
      if (v14 >= v13 >> 1) {
        unint64_t v12 = sub_1834B4A40((void *)(v13 > 1), v14 + 1, 1, v12);
      }
      void v12[2] = v14 + 1;
      v12[v14 + 4] = v11;
      uint64_t v15 = *v5;
      uint64_t result = swift_beginAccess();
      uint64_t v17 = *(void *)(v15 + 16);
      if (*(void *)(v17 + 16) <= v11) {
        break;
      }
      unint64_t v11 = *(unsigned __int16 *)(v17 + (v11 << 6) + 88);
      if (v11 == 0xFFFF) {
        goto LABEL_17;
      }
    }
    __break(1u);
    return result;
  }
LABEL_16:
  unint64_t v12 = (void *)MEMORY[0x1E4FBC860];
LABEL_17:
  if (v12[2])
  {
    swift_beginAccess();
    sub_18351D0C4((uint64_t)v12);
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v18 = *v5;
    swift_beginAccess();
    *(void *)(v18 + 24) = 0;
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_183521DD8()
{
  unint64_t result = qword_1E8F635F0;
  if (!qword_1E8F635F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F635F0);
  }
  return result;
}

uint64_t sub_183521E30@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_18351B3A8(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_183521E40@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_18351CA2C(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

unint64_t sub_183521E54()
{
  unint64_t result = qword_1E8F61CC8;
  if (!qword_1E8F61CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F61CC8);
  }
  return result;
}

unint64_t sub_183521EA8()
{
  unint64_t result = qword_1E8F63600;
  if (!qword_1E8F63600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63600);
  }
  return result;
}

unint64_t sub_183521EFC()
{
  unint64_t result = qword_1E8F63608;
  if (!qword_1E8F63608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63608);
  }
  return result;
}

unint64_t sub_183521F54()
{
  unint64_t result = qword_1E8F63610;
  if (!qword_1E8F63610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63610);
  }
  return result;
}

unint64_t sub_183521FAC()
{
  unint64_t result = qword_1E8F61D00;
  if (!qword_1E8F61D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F61D00);
  }
  return result;
}

uint64_t sub_183522000()
{
  return sub_1835223C0(&qword_1E8F63618, (void (*)(void))sub_183522048);
}

unint64_t sub_183522048()
{
  unint64_t result = qword_1E8F63628;
  if (!qword_1E8F63628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63628);
  }
  return result;
}

unint64_t sub_1835220A0()
{
  unint64_t result = qword_1E8F63630;
  if (!qword_1E8F63630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63630);
  }
  return result;
}

uint64_t sub_1835220F4()
{
  return sub_183522308(&qword_1E8F63638);
}

uint64_t sub_183522128()
{
  return sub_1835223C0(&qword_1E8F63648, (void (*)(void))sub_183522170);
}

unint64_t sub_183522170()
{
  unint64_t result = qword_1E8F63650;
  if (!qword_1E8F63650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63650);
  }
  return result;
}

uint64_t sub_1835221C4()
{
  return sub_1835223C0(&qword_1E8F63658, (void (*)(void))sub_18352220C);
}

unint64_t sub_18352220C()
{
  unint64_t result = qword_1E8F63660;
  if (!qword_1E8F63660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63660);
  }
  return result;
}

uint64_t sub_183522264()
{
  return sub_183522308(&qword_1E8F63668);
}

uint64_t sub_183522298()
{
  return sub_1834FBEF8(&qword_1E8F63670, &qword_1E8F63620);
}

uint64_t sub_1835222D4()
{
  return sub_183522308(&qword_1E8F63678);
}

uint64_t sub_183522308(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E8F63640);
    sub_1834B6110();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_183522378()
{
  return sub_1835223C0(&qword_1E8F63680, (void (*)(void))sub_1835220A0);
}

uint64_t sub_1835223C0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E8F63620);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_183522430()
{
  return sub_1834FBEF8(&qword_1E8F63688, &qword_1E8F63690);
}

uint64_t sub_18352246C@<X0>(uint64_t *a1@<X0>, long long *a2@<X1>, uint64_t *a3@<X8>)
{
  long long v4 = *a2;
  uint64_t v5 = *((void *)a2 + 2);
  uint64_t v6 = *((void *)a2 + 3);
  uint64_t v12 = *a1;
  long long v9 = v4;
  uint64_t v10 = v5;
  uint64_t v11 = v6;
  uint64_t result = HTTPFields.subscript.getter((uint64_t)&v9);
  *a3 = result;
  a3[1] = v8;
  return result;
}

uint64_t sub_1835224C0()
{
  return 0;
}

uint64_t sub_1835224D0@<X0>(uint64_t *a1@<X0>, long long *a2@<X1>, uint64_t *a3@<X8>)
{
  return keypath_get_12Tm(a1, a2, (uint64_t (*)(long long *))HTTPFields.subscript.getter, a3);
}

uint64_t sub_1835224EC()
{
  return 0;
}

uint64_t sub_1835224FC@<X0>(uint64_t *a1@<X0>, long long *a2@<X1>, uint64_t *a3@<X8>)
{
  return keypath_get_12Tm(a1, a2, (uint64_t (*)(long long *))HTTPFields.subscript.getter, a3);
}

uint64_t keypath_get_12Tm@<X0>(uint64_t *a1@<X0>, long long *a2@<X1>, uint64_t (*a3)(long long *)@<X3>, uint64_t *a4@<X8>)
{
  long long v5 = *a2;
  uint64_t v6 = *((void *)a2 + 2);
  uint64_t v7 = *((void *)a2 + 3);
  uint64_t v12 = *a1;
  long long v9 = v5;
  uint64_t v10 = v6;
  uint64_t v11 = v7;
  uint64_t result = a3(&v9);
  *a4 = result;
  return result;
}

uint64_t sub_18352256C()
{
  return 0;
}

uint64_t sub_183522584()
{
  return 0;
}

ValueMetadata *type metadata accessor for HTTPFields()
{
  return &type metadata for HTTPFields;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for HTTPFields.HTTPFieldSequence()
{
  return &type metadata for HTTPFields.HTTPFieldSequence;
}

unint64_t sub_1835225D8()
{
  unint64_t result = qword_1E8F63698;
  if (!qword_1E8F63698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63698);
  }
  return result;
}

unint64_t sub_183522630()
{
  unint64_t result = qword_1E8F636A0;
  if (!qword_1E8F636A0)
  {
    type metadata accessor for HTTPFields._Storage();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F636A0);
  }
  return result;
}

uint64_t objectdestroyTm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1835226CC(uint64_t a1)
{
  uint64_t v2 = v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    *unint64_t v1 = (uint64_t)sub_18351A56C();
    swift_release();
  }
  uint64_t v4 = *v1;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)(v4 + 16) + 16) != a1)
  {
    swift_beginAccess();
    *(void *)(v4 + 24) = 0;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1834F2024(a1);
    swift_endAccess();
    uint64_t v6 = *v2;
    uint64_t result = swift_beginAccess();
    if (*(void *)(*(void *)(v6 + 16) + 16) > 0xFFFEuLL) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1835227D0(uint64_t a1)
{
  return a1;
}

uint64_t sub_183522808(uint64_t a1)
{
  return a1;
}

uint64_t sub_183522840()
{
  return swift_deallocObject();
}

unint64_t sub_183522850()
{
  return sub_18351A4C0(*(void *)(v0 + 16));
}

uint64_t sub_183522858()
{
  return swift_deallocObject();
}

uint64_t sub_18352286C()
{
  return swift_deallocObject();
}

uint64_t sub_18352287C()
{
  return *(unsigned __int16 *)(v0 + 16);
}

uint64_t sub_183522884()
{
  return swift_deallocObject();
}

uint64_t sub_183522894@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for HTTPFields.HTTPFieldSequence.Iterator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s7Network10HTTPFieldsV17HTTPFieldSequenceVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for HTTPFields.HTTPFieldSequence.Iterator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  return a1;
}

uint64_t _s7Network10HTTPFieldsV17HTTPFieldSequenceVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 10)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1835229D4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 10) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HTTPFields.HTTPFieldSequence.Iterator()
{
  return &type metadata for HTTPFields.HTTPFieldSequence.Iterator;
}

uint64_t sub_183522A3C()
{
  nw_protocol_definition_t v0 = nw_protocol_copy_ip_definition();
  type metadata accessor for NWProtocolDefinition();
  uint64_t v1 = (void *)swift_allocObject();
  v1[4] = v0;
  id v2 = objc_msgSend((id)swift_unknownObjectRetain(), sel_description);
  uint64_t v3 = sub_183D44AFC();
  uint64_t v5 = v4;

  uint64_t result = swift_unknownObjectRelease();
  v1[2] = v3;
  v1[3] = v5;
  qword_1E8F636A8 = (uint64_t)v1;
  return result;
}

uint64_t static NWProtocolIP.definition.getter()
{
  if (qword_1E8F62108 != -1) {
    swift_once();
  }

  return swift_retain();
}

void sub_183522B30(char *a1)
{
  nw_ip_options_set_version(*(nw_protocol_options_t *)(v1 + 16), dword_183D579F4[*a1]);
}

uint64_t sub_183522B48@<X0>(char *a1@<X8>)
{
  uint64_t result = nw_ip_options_get_version(*(void **)(v1 + 16));
  char v4 = 2 * (result == 6);
  if (result == 4) {
    char v4 = 1;
  }
  *a1 = v4;
  return result;
}

void (*sub_183522B88(uint64_t a1))(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)a1 = v3;
  int version = nw_ip_options_get_version(v3);
  char v5 = 2 * (version == 6);
  if (version == 4) {
    char v5 = 1;
  }
  *(unsigned char *)(a1 + 8) = v5;
  return sub_183522BE8;
}

void sub_183522BE8(uint64_t a1)
{
}

void sub_183522C00(uint8_t a1)
{
  nw_ip_options_set_hop_limit(*(nw_protocol_options_t *)(v1 + 16), a1);
}

uint64_t sub_183522C10()
{
  return nw_ip_options_get_hop_limit(*(void **)(v0 + 16));
}

void (*sub_183522C2C(uint64_t a1))(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = nw_ip_options_get_hop_limit(v3);
  return sub_183522C78;
}

void sub_183522C78(uint64_t a1)
{
}

void sub_183522C88(char a1)
{
  nw_ip_options_set_use_minimum_mtu(*(nw_protocol_options_t *)(v1 + 16), a1 & 1);
}

BOOL sub_183522C98()
{
  return nw_ip_options_get_use_minimum_mtu(*(void **)(v0 + 16));
}

void (*sub_183522CB4(uint64_t a1))(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = nw_ip_options_get_use_minimum_mtu(v3);
  return sub_183522D00;
}

void sub_183522D00(uint64_t a1)
{
}

void sub_183522D10(char a1)
{
  nw_ip_options_set_disable_fragmentation(*(nw_protocol_options_t *)(v1 + 16), a1 & 1);
}

BOOL sub_183522D20()
{
  return nw_ip_options_get_fragmentation_value(*(void **)(v0 + 16)) == 1;
}

void (*sub_183522D44(uint64_t a1))(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = nw_ip_options_get_fragmentation_value(v3) == 1;
  return sub_183522D98;
}

void sub_183522D98(uint64_t a1)
{
}

void sub_183522DA8(char a1)
{
  nw_ip_options_set_calculate_receive_time(*(nw_protocol_options_t *)(v1 + 16), a1 & 1);
}

BOOL sub_183522DB8()
{
  return nw_ip_options_get_calculate_receive_time(*(void **)(v0 + 16));
}

void (*sub_183522DD4(uint64_t a1))(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = nw_ip_options_get_calculate_receive_time(v3);
  return sub_183522E20;
}

void sub_183522E20(uint64_t a1)
{
}

void sub_183522E34(unsigned __int8 *a1)
{
  nw_ip_options_set_local_address_preference(*(nw_protocol_options_t *)(v1 + 16), (nw_ip_local_address_preference_t)*a1);
}

uint64_t sub_183522E40@<X0>(char *a1@<X8>)
{
  uint64_t result = nw_ip_options_get_local_address_preference(*(void **)(v1 + 16));
  char v4 = 2 * (result == 2);
  if (result == 1) {
    char v4 = 1;
  }
  *a1 = v4;
  return result;
}

uint64_t (*sub_183522E80(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)a1 = v3;
  int local_address_preference = nw_ip_options_get_local_address_preference(v3);
  char v5 = 2 * (local_address_preference == 2);
  if (local_address_preference == 1) {
    char v5 = 1;
  }
  *(unsigned char *)(a1 + 8) = v5;
  return sub_183522EE0;
}

uint64_t sub_183522EE0(uint64_t a1, uint64_t a2)
{
  return sub_1835231F4(a1, a2, (uint64_t (*)(void, void))nw_ip_options_set_local_address_preference);
}

void sub_183522EF8(char a1)
{
  nw_ip_options_set_disable_multicast_loopback(*(nw_protocol_options_t *)(v1 + 16), a1 & 1);
}

BOOL sub_183522F08()
{
  return nw_ip_options_get_disable_multicast_loopback(*(void **)(v0 + 16));
}

void (*sub_183522F24(uint64_t a1))(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = nw_ip_options_get_disable_multicast_loopback(v3);
  return sub_183522F70;
}

void sub_183522F70(uint64_t a1)
{
}

BOOL sub_183522F80(NSObject *a1)
{
  uint64_t v1 = nw_protocol_options_copy_definition(a1);
  id v2 = nw_protocol_copy_ip_definition();
  BOOL is_equal = nw_protocol_definition_is_equal(v1, v2);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return is_equal;
}

uint64_t NWProtocolIP.Options.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

BOOL static NWProtocolIP.ECN.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t NWProtocolIP.ECN.hash(into:)()
{
  return sub_183D45B0C();
}

void sub_183523040(char *a1, uint64_t a2)
{
}

void sub_18352305C(char *a1)
{
  nw_ip_metadata_set_ecn_flag(*(nw_protocol_metadata_t *)(v1 + 16), dword_183D57A00[*a1]);
}

uint64_t sub_183523074@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = nw_ip_metadata_get_ecn_flag(*(nw_protocol_metadata_t *)(v1 + 16));
  unsigned int v4 = 0x3010200u >> (8 * result);
  if (result >= 4) {
    LOBYTE(v4) = 0;
  }
  *a1 = v4;
  return result;
}

void (*sub_1835230B8(uint64_t a1))(uint64_t a1)
{
  uint64_t v3 = *(NSObject **)(v1 + 16);
  *(void *)a1 = v3;
  nw_ip_ecn_flag_t ecn_flag = nw_ip_metadata_get_ecn_flag(v3);
  unsigned int v5 = 0x3010200u >> (8 * ecn_flag);
  if (ecn_flag >= 4) {
    LOBYTE(v5) = 0;
  }
  *(unsigned char *)(a1 + 8) = v5;
  return sub_18352311C;
}

void sub_18352311C(uint64_t a1)
{
}

void sub_183523134(unsigned __int8 *a1, uint64_t a2)
{
}

void sub_183523148(unsigned __int8 *a1)
{
  nw_ip_metadata_set_service_class(*(nw_protocol_metadata_t *)(v1 + 16), (nw_service_class_t)*a1);
}

uint64_t sub_183523154@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = nw_ip_metadata_get_service_class(*(nw_protocol_metadata_t *)(v1 + 16));
  if (result >= 6) {
    char v4 = 0;
  }
  else {
    char v4 = result;
  }
  *a1 = v4;
  return result;
}

uint64_t (*sub_183523188(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(NSObject **)(v1 + 16);
  *(void *)a1 = v3;
  nw_service_class_t service_class = nw_ip_metadata_get_service_class(v3);
  if (service_class >= (nw_service_class_responsive_data|nw_service_class_interactive_video)) {
    char v5 = 0;
  }
  else {
    char v5 = service_class;
  }
  *(unsigned char *)(a1 + 8) = v5;
  return sub_1835231DC;
}

uint64_t sub_1835231DC(uint64_t a1, uint64_t a2)
{
  return sub_1835231F4(a1, a2, (uint64_t (*)(void, void))nw_ip_metadata_set_service_class);
}

uint64_t sub_1835231F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void))
{
  return a3(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_183523204()
{
  return nw_ip_metadata_get_receive_time(*(nw_protocol_metadata_t *)(v0 + 16));
}

BOOL sub_18352320C(NSObject *a1)
{
  return nw_protocol_metadata_is_ip(a1);
}

uint64_t NWProtocolIP.Metadata.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = nw_ip_create_metadata();
  return v0;
}

uint64_t NWProtocolIP.Metadata.init()()
{
  *(void *)(v0 + 16) = nw_ip_create_metadata();
  return v0;
}

uint64_t NWProtocolIP.deinit()
{
  return v0;
}

uint64_t NWProtocolIP.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1835232A0()
{
  unint64_t result = qword_1E8F636B0;
  if (!qword_1E8F636B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F636B0);
  }
  return result;
}

unint64_t sub_1835232F8()
{
  unint64_t result = qword_1E8F636B8;
  if (!qword_1E8F636B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F636B8);
  }
  return result;
}

unint64_t sub_183523350()
{
  unint64_t result = qword_1E8F636C0;
  if (!qword_1E8F636C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F636C0);
  }
  return result;
}

uint64_t sub_1835233A4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t result = nw_ip_options_get_version(*(void **)(*(void *)a1 + 16));
  char v4 = 2 * (result == 6);
  if (result == 4) {
    char v4 = 1;
  }
  *a2 = v4;
  return result;
}

void sub_1835233E8(char *a1, uint64_t a2)
{
}

uint64_t sub_183523404@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = nw_ip_options_get_hop_limit(*(void **)(*(void *)a1 + 16));
  *a2 = result;
  return result;
}

void sub_183523434(uint8_t *a1, uint64_t a2)
{
}

BOOL sub_183523448@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = nw_ip_options_get_use_minimum_mtu(*(void **)(*(void *)a1 + 16));
  *a2 = result;
  return result;
}

void sub_183523478(BOOL *a1, uint64_t a2)
{
}

uint64_t sub_18352348C@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t result = nw_ip_options_get_fragmentation_value(*(void **)(*(void *)a1 + 16));
  *a2 = result == 1;
  return result;
}

void sub_1835234C4(BOOL *a1, uint64_t a2)
{
}

BOOL sub_1835234D8@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = nw_ip_options_get_calculate_receive_time(*(void **)(*(void *)a1 + 16));
  *a2 = result;
  return result;
}

void sub_183523508(BOOL *a1, uint64_t a2)
{
}

uint64_t sub_18352351C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t result = nw_ip_options_get_local_address_preference(*(void **)(*(void *)a1 + 16));
  char v4 = 2 * (result == 2);
  if (result == 1) {
    char v4 = 1;
  }
  *a2 = v4;
  return result;
}

void sub_183523560(unsigned __int8 *a1, uint64_t a2)
{
}

BOOL sub_183523574@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = nw_ip_options_get_disable_multicast_loopback(*(void **)(*(void *)a1 + 16));
  *a2 = result;
  return result;
}

void sub_1835235A4(BOOL *a1, uint64_t a2)
{
}

uint64_t sub_1835235B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_183523074(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1835235F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_183523154(&v3);
  *a1 = v3;
  return result;
}

uint64_t type metadata accessor for NWProtocolIP()
{
  return self;
}

uint64_t type metadata accessor for NWProtocolIP.Options()
{
  return self;
}

uint64_t method lookup function for NWProtocolIP.Options(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWProtocolIP.Options);
}

uint64_t dispatch thunk of NWProtocolIP.Options.version.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of NWProtocolIP.Options.version.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of NWProtocolIP.Options.version.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of NWProtocolIP.Options.hopLimit.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of NWProtocolIP.Options.hopLimit.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of NWProtocolIP.Options.hopLimit.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of NWProtocolIP.Options.useMinimumMTU.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of NWProtocolIP.Options.useMinimumMTU.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of NWProtocolIP.Options.useMinimumMTU.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of NWProtocolIP.Options.disableFragmentation.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of NWProtocolIP.Options.disableFragmentation.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of NWProtocolIP.Options.disableFragmentation.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of NWProtocolIP.Options.shouldCalculateReceiveTime.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of NWProtocolIP.Options.shouldCalculateReceiveTime.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of NWProtocolIP.Options.shouldCalculateReceiveTime.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of NWProtocolIP.Options.localAddressPreference.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of NWProtocolIP.Options.localAddressPreference.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of NWProtocolIP.Options.localAddressPreference.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of NWProtocolIP.Options.disableMulticastLoopback.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of NWProtocolIP.Options.disableMulticastLoopback.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of NWProtocolIP.Options.disableMulticastLoopback.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

ValueMetadata *type metadata accessor for NWProtocolIP.Options.Version()
{
  return &type metadata for NWProtocolIP.Options.Version;
}

unsigned char *_s7Network12NWProtocolIPC7OptionsC7VersionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x183523A7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NWProtocolIP.Options.AddressPreference()
{
  return &type metadata for NWProtocolIP.Options.AddressPreference;
}

uint64_t getEnumTagSinglePayload for NWProtocolIP.ECN(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NWProtocolIP.ECN(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x183523C10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NWProtocolIP.ECN()
{
  return &type metadata for NWProtocolIP.ECN;
}

uint64_t type metadata accessor for NWProtocolIP.Metadata()
{
  return self;
}

uint64_t method lookup function for NWProtocolIP.Metadata(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWProtocolIP.Metadata);
}

uint64_t dispatch thunk of NWProtocolIP.Metadata.ecn.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of NWProtocolIP.Metadata.ecn.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of NWProtocolIP.Metadata.ecn.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of NWProtocolIP.Metadata.serviceClass.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of NWProtocolIP.Metadata.serviceClass.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of NWProtocolIP.Metadata.serviceClass.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of NWProtocolIP.Metadata.receiveTime.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of NWProtocolIP.Metadata.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t _s22RemoteCallReplyMetricsVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s22RemoteCallReplyMetricsVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 33) = v3;
  return result;
}

ValueMetadata *_s22RemoteCallReplyMetricsVMa()
{
  return &_s22RemoteCallReplyMetricsVN;
}

unint64_t sub_183523E08()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61D38);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_183D53660;
  *(void *)(inited + 32) = 0xD00000000000001ALL;
  *(void *)(inited + 40) = 0x8000000183E24F60;
  uint64_t v4 = (uint64_t)(v0 + 1);
  uint64_t v3 = *v0;
  uint64_t v5 = MEMORY[0x1E4FBB550];
  *(void *)(inited + 72) = MEMORY[0x1E4FBB550];
  *(void *)(inited + 48) = v3;
  unint64_t v6 = sub_18359645C(inited);
  sub_183138964(v4, (uint64_t)v17, &qword_1E8F636F8);
  sub_183138964((uint64_t)v17, (uint64_t)&v18, &qword_1E8F636F8);
  if ((v19 & 1) == 0)
  {
    uint64_t v15 = v5;
    *(void *)&long long v14 = v18;
    sub_1835249AC(&v14, v13);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v16 = v6;
    sub_18359F1C8(v13, 0xD00000000000001ALL, 0x8000000183E24F80, isUniquelyReferenced_nonNull_native);
    unint64_t v6 = v16;
    swift_bridgeObjectRelease();
  }
  sub_183138964((uint64_t)(v1 + 3), (uint64_t)v13, &qword_1E8F636E8);
  sub_183138964((uint64_t)v13, (uint64_t)&v14, &qword_1E8F636E8);
  if ((BYTE8(v14) & 1) == 0)
  {
    uint64_t v8 = v14;
    uint64_t v9 = swift_initStackObject();
    *(_OWORD *)(v9 + 16) = xmmword_183D53660;
    *(void *)(v9 + 32) = 0xD000000000000013;
    *(void *)(v9 + 40) = 0x8000000183E24940;
    *(void *)(v9 + 72) = MEMORY[0x1E4FBC1C8];
    *(void *)(v9 + 48) = v8;
    unint64_t v10 = sub_18359645C(v9);
    char v11 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v16 = v6;
    sub_183524354(v10, (uint64_t)sub_183524FA4, 0, v11, (uint64_t)&v16);
    unint64_t v6 = v16;
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_183524004(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F636E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_2(a1, a1[3]);
  sub_1835248B0();
  sub_183D45C0C();
  v11[0] = 0;
  sub_183D4585C();
  if (!v2)
  {
    v11[0] = 1;
    sub_183D4582C();
    sub_183138964(v3 + 24, (uint64_t)v12, &qword_1E8F636E8);
    sub_183138964((uint64_t)v12, (uint64_t)v11, &qword_1E8F636E8);
    v10[15] = 2;
    sub_183524958();
    sub_183D4583C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1835241C8()
{
  unint64_t v1 = 0x654D65746F6D6572;
  if (*v0 == 1) {
    unint64_t v1 = 0xD00000000000001ALL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD00000000000001ALL;
  }
}

uint64_t sub_183524230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_183524BD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_183524258(uint64_t a1)
{
  unint64_t v2 = sub_1835248B0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_183524294(uint64_t a1)
{
  unint64_t v2 = sub_1835248B0();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1835242D0@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1835246AC(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(unsigned char *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_183524318(void *a1)
{
  return sub_183524004(a1);
}

uint64_t sub_183524354(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v50 = a1;
  uint64_t v51 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v52 = v8;
  uint64_t v53 = 0;
  uint64_t v54 = v11 & v9;
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_183525194(&v48);
  uint64_t v12 = *((void *)&v48 + 1);
  if (!*((void *)&v48 + 1)) {
    goto LABEL_27;
  }
  uint64_t v13 = v48;
  sub_1835249AC(v49, v47);
  long long v14 = *(void **)a5;
  unint64_t v16 = sub_18359A408(v13, v12);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v20 = v15;
  if (v14[3] >= v19)
  {
    if (a4)
    {
      if (v15) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_1835A11E4();
      if (v20) {
        goto LABEL_12;
      }
    }
LABEL_14:
    unsigned int v24 = *(void **)a5;
    *(void *)(*(void *)a5 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    BOOL v25 = (uint64_t *)(v24[6] + 16 * v16);
    *BOOL v25 = v13;
    v25[1] = v12;
    sub_1835249AC(v47, (_OWORD *)(v24[7] + 32 * v16));
    uint64_t v26 = v24[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v24[2] = v28;
LABEL_16:
    sub_183525194(&v48);
    for (uint64_t i = *((void *)&v48 + 1); *((void *)&v48 + 1); uint64_t i = *((void *)&v48 + 1))
    {
      uint64_t v31 = v48;
      sub_1835249AC(v49, v47);
      unint64_t v32 = *(void **)a5;
      unint64_t v34 = sub_18359A408(v31, i);
      uint64_t v35 = v32[2];
      BOOL v36 = (v33 & 1) == 0;
      uint64_t v37 = v35 + v36;
      if (__OFADD__(v35, v36)) {
        goto LABEL_28;
      }
      char v38 = v33;
      if (v32[3] < v37)
      {
        sub_18359D758(v37, 1);
        uint64_t v39 = sub_18359A408(v31, i);
        if ((v38 & 1) != (v40 & 1)) {
          goto LABEL_30;
        }
        unint64_t v34 = v39;
      }
      if (v38)
      {
        sub_1834F26A8((uint64_t)v47, (uint64_t)v46);
        __swift_destroy_boxed_opaque_existential_2((uint64_t)v47);
        swift_bridgeObjectRelease();
        uint64_t v30 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v34);
        __swift_destroy_boxed_opaque_existential_2((uint64_t)v30);
        sub_1835249AC(v46, v30);
      }
      else
      {
        uint64_t v41 = *(void **)a5;
        *(void *)(*(void *)a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
        unint64_t v42 = (uint64_t *)(v41[6] + 16 * v34);
        *unint64_t v42 = v31;
        v42[1] = i;
        sub_1835249AC(v47, (_OWORD *)(v41[7] + 32 * v34));
        uint64_t v43 = v41[2];
        BOOL v27 = __OFADD__(v43, 1);
        uint64_t v44 = v43 + 1;
        if (v27) {
          goto LABEL_29;
        }
        uint64_t v41[2] = v44;
      }
      sub_183525194(&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1835249BC();
    return swift_release();
  }
  sub_18359D758(v19, a4 & 1);
  uint64_t v21 = sub_18359A408(v13, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    unint64_t v16 = v21;
    if ((v20 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    sub_1834F26A8((uint64_t)v47, (uint64_t)v46);
    __swift_destroy_boxed_opaque_existential_2((uint64_t)v47);
    swift_bridgeObjectRelease();
    char v23 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v16);
    __swift_destroy_boxed_opaque_existential_2((uint64_t)v23);
    sub_1835249AC(v46, v23);
    goto LABEL_16;
  }
LABEL_30:
  uint64_t result = sub_183D45A4C();
  __break(1u);
  return result;
}

uint64_t sub_1835246AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F636C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2(a1, a1[3]);
  sub_1835248B0();
  sub_183D45BCC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v9 = sub_183D457CC();
  char v19 = 1;
  uint64_t v10 = sub_183D4578C();
  int v17 = v11;
  char v18 = 2;
  sub_183524904();
  sub_183D4579C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v15;
  char v13 = v16;
  uint64_t result = __swift_destroy_boxed_opaque_existential_2((uint64_t)a1);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(unsigned char *)(a2 + 16) = v17 & 1;
  *(void *)(a2 + 24) = v12;
  *(unsigned char *)(a2 + 32) = v13;
  return result;
}

unint64_t sub_1835248B0()
{
  unint64_t result = qword_1E8F636D0;
  if (!qword_1E8F636D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F636D0);
  }
  return result;
}

unint64_t sub_183524904()
{
  unint64_t result = qword_1E8F636D8;
  if (!qword_1E8F636D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F636D8);
  }
  return result;
}

unint64_t sub_183524958()
{
  unint64_t result = qword_1E8F636F0;
  if (!qword_1E8F636F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F636F0);
  }
  return result;
}

_OWORD *sub_1835249AC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1835249BC()
{
  return swift_release();
}

unsigned char *_s22RemoteCallReplyMetricsV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x183524A90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s22RemoteCallReplyMetricsV10CodingKeysOMa()
{
  return &_s22RemoteCallReplyMetricsV10CodingKeysON;
}

unint64_t sub_183524ACC()
{
  unint64_t result = qword_1E8F63700;
  if (!qword_1E8F63700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63700);
  }
  return result;
}

unint64_t sub_183524B24()
{
  unint64_t result = qword_1E8F63708;
  if (!qword_1E8F63708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63708);
  }
  return result;
}

unint64_t sub_183524B7C()
{
  unint64_t result = qword_1E8F63710;
  if (!qword_1E8F63710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63710);
  }
  return result;
}

uint64_t sub_183524BD0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ALL && a2 == 0x8000000183E24F60 || (sub_183D4592C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000183E24F80 || (sub_183D4592C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x654D65746F6D6572 && a2 == 0xED00007363697274)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_183D4592C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_183524D40(uint64_t a1)
{
  swift_defaultActor_initialize();
  *(_OWORD *)(v1 + 152) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_WORD *)(v1 + 168) = 256;
  type metadata accessor for NWActivity();
  swift_allocObject();
  uint64_t v3 = NWActivity.init(domain:label:)(0x39uLL, 2uLL);
  *(void *)(v1 + 112) = v3;
  if (a1)
  {
    unsigned int v4 = *(void **)(v3 + 16);
    char v5 = *(void **)(a1 + 16);
    swift_retain();
    nw_activity_set_parent_activity(v4, v5);
    swift_release();
    swift_release();
  }
  else
  {
    nw_activity_set_parent_activity(*(void **)(v3 + 16), 0);
  }
  return v1;
}

unint64_t sub_183524E04()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61D38);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_183D55BD0;
  *(void *)(inited + 32) = 0xD000000000000015;
  *(void *)(inited + 40) = 0x8000000183E24FF0;
  uint64_t v2 = MEMORY[0x1E4FBB550];
  *(void *)(inited + 48) = *(void *)(v0 + 120);
  *(void *)(inited + 72) = v2;
  *(void *)(inited + 80) = 0xD000000000000015;
  *(void *)(inited + 88) = 0x8000000183E25010;
  uint64_t v3 = *(void *)(v0 + 128);
  *(void *)(inited + 120) = v2;
  *(void *)(inited + 96) = v3;
  unint64_t v4 = sub_18359645C(inited);
  if ((*(unsigned char *)(v0 + 169) & 1) == 0)
  {
    char v5 = *(unsigned char *)(v0 + 168);
    uint64_t v6 = *(void *)(v0 + 160);
    char v7 = *(_DWORD *)(v0 + 152);
    long long v12 = *(_OWORD *)(v0 + 136);
    char v13 = v7 & 1;
    uint64_t v14 = v6;
    char v15 = v5 & 1;
    unint64_t v8 = sub_183523E08();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v11 = v4;
    sub_183524354(v8, (uint64_t)sub_183524FA4, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v11);
    unint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_183524F3C()
{
  swift_release();
  swift_defaultActor_destroy();

  return MEMORY[0x1F4188210](v0);
}

uint64_t _s18RemoteCallActivityCMa()
{
  return self;
}

uint64_t sub_183524F98()
{
  return v0;
}

uint64_t sub_183524FA4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  sub_1834F26A8((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;

  return swift_bridgeObjectRetain();
}

unint64_t sub_183524FF8()
{
  void (*v16)(uint64_t *__return_ptr, void *);
  unint64_t v17;
  void v18[2];
  uint64_t v19;

  unint64_t v2 = v0[1];
  unint64_t v1 = v0[2];
  unint64_t v3 = *v0;
  if ((v2 & 0x2000000000000000) != 0) {
    unint64_t v4 = HIBYTE(v2) & 0xF;
  }
  else {
    unint64_t v4 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v5 = v1 >> 14;
  if (v1 >> 14 == 4 * v4)
  {
    int v6 = 0;
    return v6 | ((v5 == 4 * v4) << 8);
  }
  uint64_t v7 = (v3 >> 59) & 1;
  if ((v2 & 0x1000000000000000) == 0) {
    LOBYTE(v7) = 1;
  }
  if ((v0[2] & 0xC) == 4 << v7) {
    unint64_t v1 = sub_183520284(v1, *v0, v0[1]);
  }
  unint64_t v8 = v1 >> 16;
  if (v1 >> 16 >= v4)
  {
    __break(1u);
    goto LABEL_25;
  }
  if ((v2 & 0x1000000000000000) != 0)
  {
LABEL_25:
    char v10 = sub_183D44CFC();
    goto LABEL_17;
  }
  if ((v2 & 0x2000000000000000) != 0)
  {
    v18[0] = v3;
    v18[1] = v2 & 0xFFFFFFFFFFFFFFLL;
    char v10 = *((unsigned char *)v18 + v8);
  }
  else
  {
    if ((v3 & 0x1000000000000000) != 0) {
      uint64_t v9 = (v2 & 0xFFFFFFFFFFFFFFFLL) + 32;
    }
    else {
      uint64_t v9 = sub_183D4557C();
    }
    char v10 = *(unsigned char *)(v9 + v8);
  }
LABEL_17:
  uint64_t v11 = *v0;
  unint64_t v12 = v0[1];
  unint64_t result = v0[2];
  uint64_t v14 = ((unint64_t)*v0 >> 59) & 1;
  if ((v12 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  if ((v0[2] & 0xC) == 4 << v14)
  {
    unint64_t result = sub_183520284(result, *v0, v0[1]);
    if ((v12 & 0x1000000000000000) == 0) {
      goto LABEL_21;
    }
  }
  else if ((v12 & 0x1000000000000000) == 0)
  {
LABEL_21:
    uint64_t v15 = (result & 0xFFFFFFFFFFFF0000) + 65540;
LABEL_22:
    v0[2] = v15;
    char v16 = (void (*)(uint64_t *__return_ptr, void *))v0[3];
    LOBYTE(v18[0]) = v10;
    v16(&v19, v18);
    int v6 = v19;
    return v6 | ((v5 == 4 * v4) << 8);
  }
  int v17 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0) {
    int v17 = v11 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 > result >> 16)
  {
    uint64_t v15 = sub_183D44CBC();
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_183525194@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    sub_1834F26A8(*(void *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(void *)&long long v23 = v13;
    *((void *)&v23 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    unint64_t v16 = *(void *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      uint64_t v9 = (v16 - 1) & v16;
      unint64_t v10 = __clz(__rbit64(v16)) + (v14 << 6);
      int64_t v7 = v14;
      goto LABEL_3;
    }
    int64_t v17 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      unint64_t v16 = *(void *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        int64_t v14 = v17;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        unint64_t v16 = *(void *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          int64_t v14 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v17 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          unint64_t v16 = *(void *)(v4 + 8 * v17);
          if (v16) {
            goto LABEL_10;
          }
          int64_t v14 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            unint64_t v16 = *(void *)(v4 + 8 * v14);
            if (v16) {
              goto LABEL_7;
            }
            int64_t v7 = v15 - 1;
            int64_t v18 = v5 + 6;
            while (v15 != v18)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v18++);
              if (v16)
              {
                int64_t v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  memset(v24, 0, sizeof(v24));
  long long v23 = 0u;
LABEL_23:
  *unint64_t v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  char v19 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_183525370((uint64_t)&v23, (uint64_t)v22);
  if (*((void *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    v21[2] = v22[2];
    v19(v21);
    return sub_1835253D8((uint64_t)v21);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_183525370(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63718);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1835253D8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F63720);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Listener1.__allocating_init(using:ready:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1835261C4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))Listener1.init(using:ready:));
}

void *Listener1.init(using:ready:)(NSObject **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a3;
  int64_t v5 = v3;
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  unint64_t v8 = *a1;
  uint64_t v9 = (uint64_t)v5 + qword_1E8F63730;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63738);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = (char *)v5 + qword_1E8F63740;
  void v11[4] = -4;
  *(_DWORD *)uint64_t v11 = 0;
  uint64_t v12 = (char *)v5 + *(void *)(*v5 + 144);
  uint64_t v25 = *(void *)(v6 + 80);
  long long v13 = *(_OWORD *)(v7 + 104);
  long long v26 = *(_OWORD *)(v7 + 88);
  long long v27 = v13;
  type metadata accessor for Connection1();
  uint64_t v14 = sub_183D4500C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
  uint64_t v15 = *(void *)(*v5 + 152);
  swift_checkMetadataState();
  *(void *)((char *)v5 + v15) = sub_183D44A2C();
  nw_parameters_t v16 = nw_parameters_copy(v8);
  swift_unknownObjectRelease();
  type metadata accessor for NWParameters();
  uint64_t v17 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61EA0);
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + 24) = 0;
  *(void *)(v18 + 16) = v16;
  *(void *)(v17 + 16) = v18;
  LOWORD(v25) = 0;
  type metadata accessor for NWListener();
  swift_allocObject();
  NWListener.init(using:on:)(v17, (unsigned __int16 *)&v25);
  if (v4)
  {
    swift_release();
    sub_183525854(v9);
    uint64_t v20 = sub_183D4536C();
    (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v12, v20);
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    long long v5[2] = v19;
    uint64_t v21 = (void *)swift_allocObject();
    v21[2] = v5;
    _OWORD v21[3] = a2;
    void v21[4] = v28;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_18315ED5C((uint64_t)sub_1835258B8);
    NWListener.stateUpdateHandler.setter((uint64_t)sub_1835258B8, (uint64_t)v21);
    swift_release();
    swift_release();
    swift_retain();
    swift_retain();
    sub_18315ED5C((uint64_t)sub_1835258E8);
    NWListener.newConnectionHandler.setter((uint64_t)sub_1835258E8, (uint64_t)v5);
    swift_release();
    swift_release();
    uint64_t v22 = qword_1E8F62168;
    swift_retain();
    if (v22 != -1) {
      swift_once();
    }
    NWListener.start(queue:)(qword_1E8F7A920);
    swift_release();
    swift_release();
  }
  return v5;
}

uint64_t sub_183525854(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63750);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1835258B8(unsigned int *a1)
{
  return sub_183527128(a1, *(void *)(v1 + 16), *(uint64_t (**)(int *))(v1 + 24), *(void *)(v1 + 32), &qword_1E8F63730, &qword_1E8F63740);
}

uint64_t sub_1835258E8(uint64_t a1)
{
  return sub_183527AAC(a1, v1);
}

uint64_t Listener1.__allocating_init(for:using:)(uint64_t *a1, NSObject **a2)
{
  uint64_t v4 = swift_allocObject();
  Listener1.init(for:using:)(a1, a2);
  return v4;
}

void Listener1.init(for:using:)(uint64_t *a1, NSObject **a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = *v2;
  uint64_t v6 = *v2;
  uint64_t v29 = *a1;
  uint64_t v49 = a1[1];
  uint64_t v28 = a1[2];
  uint64_t v32 = a1[3];
  uint64_t v27 = a1[4];
  uint64_t v33 = a1[5];
  uint64_t v30 = a1[7];
  uint64_t v31 = a1[6];
  uint64_t v7 = *a2;
  uint64_t v8 = (uint64_t)v4 + qword_1E8F63730;
  uint64_t v9 = v6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63738);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  uint64_t v11 = (char *)v4 + qword_1E8F63740;
  void v11[4] = -4;
  *(_DWORD *)uint64_t v11 = 0;
  uint64_t v12 = (char *)v4 + *(void *)(*v4 + 144);
  uint64_t v34 = *(void *)(v5 + 80);
  long long v35 = *(_OWORD *)(v9 + 88);
  long long v36 = *(_OWORD *)(v9 + 104);
  type metadata accessor for Connection1();
  uint64_t v13 = sub_183D4500C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = *(void *)(*v4 + 152);
  swift_checkMetadataState();
  *(void *)((char *)v4 + v14) = sub_183D44A2C();
  nw_parameters_t v15 = nw_parameters_copy(v7);
  swift_unknownObjectRelease();
  type metadata accessor for NWParameters();
  uint64_t v16 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61EA0);
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 24) = 0;
  *(void *)(v17 + 16) = v15;
  *(void *)(v16 + 16) = v17;
  LOWORD(v34) = 0;
  type metadata accessor for NWListener();
  swift_allocObject();
  NWListener.init(using:on:)(v16, (unsigned __int16 *)&v34);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1834C80D8(v31);
    sub_183525854(v8);
    uint64_t v19 = sub_183D4536C();
    (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v12, v19);
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v4[2] = v18;
    if (v31) {
      uint64_t v20 = v30;
    }
    else {
      uint64_t v20 = 0;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v21 = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1834C4654(v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_1834C80D8(v31);
    uint64_t v37 = 0;
    uint64_t v38 = v29;
    uint64_t v39 = v21;
    uint64_t v40 = v28;
    uint64_t v41 = v32;
    uint64_t v42 = v27;
    uint64_t v43 = v33;
    uint64_t v44 = v31;
    uint64_t v45 = v20;
    long long v46 = xmmword_183D54870;
    char v48 = 0;
    __int16 v47 = 768;
    MEMORY[0x1F4188790](v22);
    uint64_t v24 = (uint64_t)&v23[4];
    uint64_t v25 = v23 + 48;
    os_unfair_lock_lock(v23 + 48);
    sub_1834F715C(v24);
    os_unfair_lock_unlock(v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1834C80D8(v31);
    sub_1832E669C(0, 0xF000000000000000);
    swift_release();
    swift_retain();
    swift_retain();
    sub_18315ED5C((uint64_t)sub_183528FF8);
    NWListener.stateUpdateHandler.setter((uint64_t)sub_183528FF8, (uint64_t)v4);
    swift_release();
    swift_release();
    swift_retain();
    swift_retain();
    sub_18315ED5C((uint64_t)sub_1835258E8);
    NWListener.newConnectionHandler.setter((uint64_t)sub_1835258E8, (uint64_t)v4);
    swift_release();
    swift_release();
    uint64_t v26 = qword_1E8F62168;
    swift_retain();
    if (v26 != -1) {
      swift_once();
    }
    NWListener.start(queue:)(qword_1E8F7A920);
    swift_release();
  }
}

uint64_t Listener1.connections.getter@<X0>(void *a1@<X8>)
{
  return sub_183527E5C((uint64_t)sub_183529024, a1);
}

uint64_t Listener1.states.getter@<X0>(void *a1@<X8>)
{
  sub_18355A534((uint64_t)sub_183529064, v1, a1);

  return swift_retain();
}

uint64_t Listener1.makeAsyncIterator()()
{
  uint64_t v1 = *v0;
  v12[1] = *(void *)(*v0 + 80);
  long long v2 = *(_OWORD *)(v1 + 104);
  long long v13 = *(_OWORD *)(v1 + 88);
  long long v14 = v2;
  type metadata accessor for Connection1();
  uint64_t v3 = sub_183D44FDC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v12 - v5;
  uint64_t v7 = sub_183D4504C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v12 - v9;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBD028], v3);
  sub_183D4505C();
  sub_183D4501C();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t Listener1.deinit()
{
  return sub_183528EC0(&qword_1E8F63730);
}

uint64_t Listener1.__deallocating_deinit()
{
  return sub_183526728((void (*)(void))Listener1.deinit);
}

uint64_t sub_183526160()
{
  Listener1.makeAsyncIterator()();

  return swift_release();
}

uint64_t Listener2.__allocating_init(using:ready:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1835261C4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))Listener2.init(using:ready:));
}

uint64_t sub_1835261C4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = swift_allocObject();
  a4(a1, a2, a3);
  return v8;
}

void *Listener2.init(using:ready:)(NSObject **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a3;
  uint64_t v5 = v3;
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  uint64_t v8 = *a1;
  uint64_t v9 = (uint64_t)v5 + qword_1E8F63758;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63738);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = (char *)v5 + qword_1E8F63760;
  void v11[4] = -4;
  *(_DWORD *)uint64_t v11 = 0;
  uint64_t v12 = (char *)v5 + *(void *)(*v5 + 144);
  uint64_t v25 = *(void *)(v6 + 80);
  long long v13 = *(_OWORD *)(v7 + 104);
  long long v26 = *(_OWORD *)(v7 + 88);
  long long v27 = v13;
  type metadata accessor for Connection1();
  uint64_t v14 = sub_183D4500C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
  uint64_t v15 = *(void *)(*v5 + 152);
  swift_checkMetadataState();
  *(void *)((char *)v5 + v15) = sub_183D44A2C();
  nw_parameters_t v16 = nw_parameters_copy(v8);
  swift_unknownObjectRelease();
  type metadata accessor for NWParameters();
  uint64_t v17 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61EA0);
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + 24) = 0;
  *(void *)(v18 + 16) = v16;
  *(void *)(v17 + 16) = v18;
  LOWORD(v25) = 0;
  type metadata accessor for NWListener();
  swift_allocObject();
  NWListener.init(using:on:)(v17, (unsigned __int16 *)&v25);
  if (v4)
  {
    swift_release();
    sub_183525854(v9);
    uint64_t v20 = sub_183D4536C();
    (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v12, v20);
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    long long v5[2] = v19;
    uint64_t v21 = (void *)swift_allocObject();
    v21[2] = v5;
    _OWORD v21[3] = a2;
    void v21[4] = v28;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_18315ED5C((uint64_t)sub_1835290E8);
    NWListener.stateUpdateHandler.setter((uint64_t)sub_1835290E8, (uint64_t)v21);
    swift_release();
    swift_release();
    swift_retain();
    swift_retain();
    sub_18315ED5C((uint64_t)sub_1835258E8);
    NWListener.newConnectionHandler.setter((uint64_t)sub_1835258E8, (uint64_t)v5);
    swift_release();
    swift_release();
    uint64_t v22 = qword_1E8F62168;
    swift_retain();
    if (v22 != -1) {
      swift_once();
    }
    NWListener.start(queue:)(qword_1E8F7A920);
    swift_release();
    swift_release();
  }
  return v5;
}

uint64_t Listener2.__allocating_init(for:using:)(uint64_t a1, uint64_t a2)
{
  return sub_183526BCC(a1, a2, (void (*)(uint64_t, uint64_t))Listener2.init(for:using:));
}

void *Listener2.init(for:using:)(unsigned __int16 *a1, NSObject **a2)
{
  return sub_183527464(a1, a2, &qword_1E8F63758, &qword_1E8F63760, (uint64_t)sub_183529118, (uint64_t)sub_1835258E8);
}

uint64_t Listener2.connections.getter@<X0>(void *a1@<X8>)
{
  return sub_183527E5C((uint64_t)sub_183529144, a1);
}

uint64_t Listener2.states.getter@<X0>(void *a1@<X8>)
{
  sub_18355A534((uint64_t)sub_183529184, v1, a1);

  return swift_retain();
}

uint64_t Listener2.deinit()
{
  return sub_183528EC0(&qword_1E8F63758);
}

uint64_t Listener2.__deallocating_deinit()
{
  return sub_183526728((void (*)(void))Listener2.deinit);
}

uint64_t sub_183526728(void (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t Listener3.__allocating_init(for:ready:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1835261C4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))Listener3.init(for:ready:));
}

void *Listener3.init(for:ready:)(NSObject **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a3;
  uint64_t v5 = v3;
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  uint64_t v8 = *a1;
  uint64_t v9 = (uint64_t)v5 + qword_1E8F63768;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63738);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = (char *)v5 + qword_1E8F63770;
  void v11[4] = -4;
  *(_DWORD *)uint64_t v11 = 0;
  uint64_t v12 = (char *)v5 + *(void *)(*v5 + 144);
  uint64_t v25 = *(void *)(v6 + 80);
  long long v13 = *(_OWORD *)(v7 + 104);
  long long v26 = *(_OWORD *)(v7 + 88);
  long long v27 = v13;
  type metadata accessor for Connection1();
  uint64_t v14 = sub_183D4500C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
  uint64_t v15 = *(void *)(*v5 + 152);
  swift_checkMetadataState();
  *(void *)((char *)v5 + v15) = sub_183D44A2C();
  nw_parameters_t v16 = nw_parameters_copy(v8);
  swift_unknownObjectRelease();
  type metadata accessor for NWParameters();
  uint64_t v17 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61EA0);
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + 24) = 0;
  *(void *)(v18 + 16) = v16;
  *(void *)(v17 + 16) = v18;
  LOWORD(v25) = 0;
  type metadata accessor for NWListener();
  swift_allocObject();
  NWListener.init(using:on:)(v17, (unsigned __int16 *)&v25);
  if (v4)
  {
    swift_release();
    sub_183525854(v9);
    uint64_t v20 = sub_183D4536C();
    (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v12, v20);
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    long long v5[2] = v19;
    uint64_t v21 = (void *)swift_allocObject();
    v21[2] = v5;
    _OWORD v21[3] = a2;
    void v21[4] = v28;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_18315ED5C((uint64_t)sub_1835291C8);
    NWListener.stateUpdateHandler.setter((uint64_t)sub_1835291C8, (uint64_t)v21);
    swift_release();
    swift_release();
    swift_retain();
    swift_retain();
    sub_18315ED5C((uint64_t)sub_1835258E8);
    NWListener.newConnectionHandler.setter((uint64_t)sub_1835258E8, (uint64_t)v5);
    swift_release();
    swift_release();
    uint64_t v22 = qword_1E8F62168;
    swift_retain();
    if (v22 != -1) {
      swift_once();
    }
    NWListener.start(queue:)(qword_1E8F7A920);
    swift_release();
    swift_release();
  }
  return v5;
}

uint64_t Listener3.__allocating_init(on:for:)(uint64_t a1, uint64_t a2)
{
  return sub_183526BCC(a1, a2, (void (*)(uint64_t, uint64_t))Listener3.init(on:for:));
}

uint64_t sub_183526BCC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v6 = swift_allocObject();
  a3(a1, a2);
  return v6;
}

void *Listener3.init(on:for:)(unsigned __int16 *a1, NSObject **a2)
{
  return sub_183527464(a1, a2, &qword_1E8F63768, &qword_1E8F63770, (uint64_t)sub_1835291F8, (uint64_t)sub_1835258E8);
}

uint64_t Listener3.connections.getter@<X0>(void *a1@<X8>)
{
  return sub_183527E5C((uint64_t)sub_183529224, a1);
}

uint64_t Listener3.states.getter@<X0>(void *a1@<X8>)
{
  sub_18355A534((uint64_t)sub_183529264, v1, a1);

  return swift_retain();
}

uint64_t Listener3.deinit()
{
  return sub_183528EC0(&qword_1E8F63768);
}

uint64_t Listener3.__deallocating_deinit()
{
  return sub_183526728((void (*)(void))Listener3.deinit);
}

uint64_t Listener4.__allocating_init(with:ready:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1835261C4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))Listener4.init(with:ready:));
}

void *Listener4.init(with:ready:)(NSObject **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a3;
  uint64_t v5 = v3;
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  uint64_t v8 = *a1;
  uint64_t v9 = (uint64_t)v5 + qword_1E8F63778;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63738);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = (char *)v5 + qword_1E8F63780[0];
  void v11[4] = -4;
  *(_DWORD *)uint64_t v11 = 0;
  uint64_t v12 = (char *)v5 + *(void *)(*v5 + 144);
  uint64_t v25 = *(void *)(v6 + 80);
  long long v13 = *(_OWORD *)(v7 + 104);
  long long v26 = *(_OWORD *)(v7 + 88);
  long long v27 = v13;
  type metadata accessor for Connection1();
  uint64_t v14 = sub_183D4500C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
  uint64_t v15 = *(void *)(*v5 + 152);
  swift_checkMetadataState();
  *(void *)((char *)v5 + v15) = sub_183D44A2C();
  nw_parameters_t v16 = nw_parameters_copy(v8);
  swift_unknownObjectRelease();
  type metadata accessor for NWParameters();
  uint64_t v17 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61EA0);
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + 24) = 0;
  *(void *)(v18 + 16) = v16;
  *(void *)(v17 + 16) = v18;
  LOWORD(v25) = 0;
  type metadata accessor for NWListener();
  swift_allocObject();
  NWListener.init(using:on:)(v17, (unsigned __int16 *)&v25);
  if (v4)
  {
    swift_release();
    sub_183525854(v9);
    uint64_t v20 = sub_183D4536C();
    (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v12, v20);
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    long long v5[2] = v19;
    uint64_t v21 = (void *)swift_allocObject();
    v21[2] = v5;
    _OWORD v21[3] = a2;
    void v21[4] = v28;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_18315ED5C((uint64_t)sub_1835292E8);
    NWListener.stateUpdateHandler.setter((uint64_t)sub_1835292E8, (uint64_t)v21);
    swift_release();
    swift_release();
    swift_retain();
    swift_retain();
    sub_18315ED5C((uint64_t)sub_1835258E8);
    NWListener.newConnectionHandler.setter((uint64_t)sub_1835258E8, (uint64_t)v5);
    swift_release();
    swift_release();
    uint64_t v22 = qword_1E8F62168;
    swift_retain();
    if (v22 != -1) {
      swift_once();
    }
    NWListener.start(queue:)(qword_1E8F7A920);
    swift_release();
    swift_release();
  }
  return v5;
}

uint64_t sub_183527128(unsigned int *a1, uint64_t a2, uint64_t (*a3)(int *), uint64_t a4, void *a5, void *a6)
{
  long long v23 = a6;
  uint64_t v25 = a4;
  long long v26 = a3;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63998);
  uint64_t v9 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63750);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63738);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v19 = *a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32);
  uint64_t v20 = a2 + *a5;
  swift_beginAccess();
  sub_183529B24(v20, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    uint64_t result = sub_183525854((uint64_t)v14);
    uint64_t v22 = a2 + *v23;
    *(unsigned char *)(v22 + 4) = BYTE4(v19);
    *(_DWORD *)uint64_t v22 = v19;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    char v28 = BYTE4(v19);
    int v27 = v19;
    sub_183D44FEC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v24);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  if ((v19 & 0xFFFFFFFFFFLL) == 0x8000000001)
  {
    LOWORD(v27) = nw_listener_get_port(*(nw_listener_t *)(*(void *)(a2 + 16) + 24));
    return v26(&v27);
  }
  return result;
}

uint64_t Listener4.__allocating_init(for:with:)(uint64_t a1, uint64_t a2)
{
  return sub_183526BCC(a1, a2, (void (*)(uint64_t, uint64_t))Listener4.init(for:with:));
}

void *Listener4.init(for:with:)(unsigned __int16 *a1, NSObject **a2)
{
  return sub_183527464(a1, a2, &qword_1E8F63778, qword_1E8F63780, (uint64_t)sub_183529318, (uint64_t)sub_1835258E8);
}

void *sub_183527464(unsigned __int16 *a1, NSObject **a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = v6;
  uint64_t v10 = *v6;
  uint64_t v11 = *v6;
  unsigned int v12 = *a1;
  uint64_t v13 = *a2;
  uint64_t v14 = (uint64_t)v9 + *a3;
  uint64_t v15 = v11;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63738);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v36 = v14;
  v17(v14, 1, 1, v16);
  uint64_t v18 = (char *)v9 + *a4;
  void v18[4] = -4;
  *(_DWORD *)uint64_t v18 = 0;
  unint64_t v19 = (char *)v9 + *(void *)(*v9 + 144);
  uint64_t v33 = *(void *)(v10 + 80);
  long long v20 = *(_OWORD *)(v15 + 104);
  long long v34 = *(_OWORD *)(v15 + 88);
  long long v35 = v20;
  type metadata accessor for Connection1();
  uint64_t v21 = sub_183D4500C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v19, 1, 1, v21);
  uint64_t v22 = *(void *)(*v9 + 152);
  swift_checkMetadataState();
  *(void *)((char *)v9 + v22) = sub_183D44A2C();
  swift_unknownObjectRetain();
  BOOL host_with_numeric_port = nw_endpoint_create_host_with_numeric_port("::", v12);
  nw_parameters_set_local_endpoint(v13, (nw_endpoint_t)host_with_numeric_port);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  nw_parameters_t v24 = nw_parameters_copy(v13);
  swift_unknownObjectRelease();
  type metadata accessor for NWParameters();
  uint64_t v25 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61EA0);
  uint64_t v26 = swift_allocObject();
  *(_DWORD *)(v26 + 24) = 0;
  *(void *)(v26 + 16) = v24;
  *(void *)(v25 + 16) = v26;
  LOWORD(v33) = 0;
  type metadata accessor for NWListener();
  swift_allocObject();
  NWListener.init(using:on:)(v25, (unsigned __int16 *)&v33);
  if (v7)
  {
    sub_183525854(v36);
    uint64_t v28 = sub_183D4536C();
    (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v19, v28);
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    void v9[2] = v27;
    swift_retain();
    swift_retain();
    sub_18315ED5C(a5);
    NWListener.stateUpdateHandler.setter(a5, (uint64_t)v9);
    swift_release();
    swift_release();
    swift_retain();
    swift_retain();
    sub_18315ED5C(a6);
    NWListener.newConnectionHandler.setter(a6, (uint64_t)v9);
    swift_release();
    swift_release();
    uint64_t v29 = qword_1E8F62168;
    swift_retain();
    if (v29 != -1) {
      swift_once();
    }
    NWListener.start(queue:)(qword_1E8F7A920);
    swift_release();
  }
  return v9;
}

uint64_t sub_18352782C(unsigned int *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63998);
  uint64_t v8 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63750);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63738);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = *a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32);
  uint64_t v19 = a2 + *a3;
  swift_beginAccess();
  sub_183529B24(v19, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    uint64_t result = sub_183525854((uint64_t)v13);
    uint64_t v21 = a2 + *a4;
    *(unsigned char *)(v21 + 4) = BYTE4(v18);
    *(_DWORD *)uint64_t v21 = v18;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    char v25 = BYTE4(v18);
    int v24 = v18;
    sub_183D44FEC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  return result;
}

uint64_t sub_183527AAC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v26 = *(void *)(*a2 + 80);
  long long v4 = *(_OWORD *)(v3 + 104);
  long long v27 = *(_OWORD *)(v3 + 88);
  long long v28 = v4;
  type metadata accessor for Connection1();
  uint64_t v5 = sub_183D44FBC();
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v21 = (char *)&v21 - v6;
  uint64_t v7 = sub_183D4500C();
  uint64_t v8 = sub_183D4536C();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v21 - v14;
  swift_checkMetadataState();
  uint64_t v16 = swift_retain();
  uint64_t v17 = Connection1.__allocating_init(using:)(v16);
  uint64_t v18 = (uint64_t)a2 + *(void *)(*a2 + 144);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v18, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    uint64_t v25 = v17;
    swift_beginAccess();
    sub_183D44F0C();
    swift_retain();
    sub_183D44EEC();
    swift_endAccess();
    return swift_release();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v12, v7);
    uint64_t v24 = v17;
    long long v20 = v21;
    sub_183D44FEC();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v7);
  }
}

uint64_t Listener4.connections.getter@<X0>(void *a1@<X8>)
{
  return sub_183527E5C((uint64_t)sub_183529344, a1);
}

uint64_t sub_183527E5C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  type metadata accessor for Connection1();
  sub_18355A534(a1, v2, a2);
  return swift_retain();
}

uint64_t sub_183527F08(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  v30[2] = a3;
  uint64_t v7 = (void *)*a2;
  uint64_t v8 = sub_183D449CC();
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v36 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_183D449EC();
  uint64_t v34 = *(void *)(v10 - 8);
  uint64_t v35 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v33 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v7[10];
  uint64_t v13 = v7[11];
  uint64_t v14 = (uint64_t (*)(uint64_t))v7[12];
  uint64_t v15 = v7[13];
  uint64_t v16 = v7[14];
  uint64_t aBlock = v12;
  uint64_t v41 = v13;
  uint64_t v42 = v14;
  uint64_t v43 = v15;
  v30[0] = v15;
  uint64_t v44 = v16;
  type metadata accessor for Connection1();
  uint64_t v17 = sub_183D4500C();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  long long v20 = (char *)v30 - v19;
  if (qword_1E8F62168 != -1) {
    swift_once();
  }
  v30[1] = qword_1E8F7A920;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, v17);
  unint64_t v21 = (*(unsigned __int8 *)(v18 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = v12;
  *((void *)v22 + 3) = v13;
  uint64_t MetadataPack = swift_allocateMetadataPack();
  uint64_t v24 = v30[0];
  *((void *)v22 + 4) = MetadataPack;
  *((void *)v22 + 5) = v24;
  *((void *)v22 + 6) = swift_allocateWitnessTablePack();
  *((void *)v22 + 7) = a2;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v22[v21], v20, v17);
  uint64_t v44 = v31;
  uint64_t v45 = v22;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v41 = 1107296256;
  uint64_t v42 = sub_183137440;
  uint64_t v43 = v32;
  uint64_t v25 = _Block_copy(&aBlock);
  swift_retain();
  uint64_t v26 = v33;
  sub_183D449DC();
  uint64_t v39 = MEMORY[0x1E4FBC860];
  sub_183529ACC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB2669C0);
  sub_1831389C8();
  long long v27 = v36;
  uint64_t v28 = v38;
  sub_183D453FC();
  MEMORY[0x1853146E0](0, v26, v27, v25);
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v28);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v35);
  return swift_release();
}

uint64_t sub_183528320(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a3;
  uint64_t v33 = a2;
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(*a1 + 80);
  uint64_t v6 = *(void *)(*a1 + 96);
  uint64_t v7 = *(void *)(*a1 + 104);
  uint64_t v8 = *(void *)(*a1 + 112);
  uint64_t v30 = *(void *)(*a1 + 88);
  uint64_t v31 = v5;
  uint64_t v35 = v5;
  uint64_t v36 = v30;
  uint64_t v28 = v7;
  uint64_t v29 = v6;
  uint64_t v37 = v6;
  uint64_t v38 = v7;
  uint64_t v27 = v8;
  uint64_t v39 = v8;
  type metadata accessor for Connection1();
  uint64_t v9 = sub_183D4500C();
  uint64_t v10 = sub_183D4536C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v26 - v15;
  uint64_t v17 = (uint64_t)a1 + *(void *)(v4 + 144);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v16, v17, v10);
  uint64_t v18 = *(void *)(v9 - 8);
  int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v9);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  if (v19 != 1) {
    return sub_183D44FFC();
  }
  uint64_t v20 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v14, v33, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v9);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 40))(v17, v14, v10);
  swift_endAccess();
  unint64_t v21 = (uint64_t *)((char *)a1 + *(void *)(*a1 + 152));
  uint64_t v22 = swift_beginAccess();
  uint64_t v34 = *v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v23 = v30;
  *(&v26 - 6) = v31;
  *(&v26 - 5) = v23;
  uint64_t v24 = v28;
  *(&v26 - 4) = v29;
  *(&v26 - 3) = v24;
  *(&v26 - 2) = v27;
  *(&v26 - 1) = v20;
  sub_183D44F0C();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_183D44DCC();
  swift_bridgeObjectRelease();
  *unint64_t v21 = sub_183D44EAC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1835286E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = a3;
  uint64_t v15 = a4;
  uint64_t v16 = a5;
  uint64_t v17 = a6;
  uint64_t v18 = a7;
  type metadata accessor for Connection1();
  uint64_t v8 = sub_183D44FBC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v13 - v10;
  uint64_t v14 = *a1;
  sub_183D4500C();
  swift_retain();
  sub_183D44FEC();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t Listener4.states.getter@<X0>(void *a1@<X8>)
{
  sub_18355A534((uint64_t)sub_183529384, v1, a1);

  return swift_retain();
}

uint64_t sub_183528858(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  v22[2] = a3;
  uint64_t v7 = (void *)*a2;
  uint64_t v8 = sub_183D449CC();
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_183D449EC();
  uint64_t v25 = *(void *)(v11 - 8);
  uint64_t v26 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63738);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x1F4188790](v14);
  if (qword_1E8F62168 != -1) {
    swift_once();
  }
  v22[1] = qword_1E8F7A920;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v14);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = v7[10];
  *((void *)v18 + 3) = v7[11];
  *((void *)v18 + 4) = swift_allocateMetadataPack();
  *((void *)v18 + 5) = v7[13];
  *((void *)v18 + 6) = swift_allocateWitnessTablePack();
  *((void *)v18 + 7) = a2;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v18[v17], (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
  aBlock[4] = v23;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_183137440;
  aBlock[3] = v24;
  int v19 = _Block_copy(aBlock);
  swift_retain();
  sub_183D449DC();
  uint64_t v29 = MEMORY[0x1E4FBC860];
  sub_183529ACC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB2669C0);
  sub_1831389C8();
  uint64_t v20 = v28;
  sub_183D453FC();
  MEMORY[0x1853146E0](0, v13, v10, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v20);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
  return swift_release();
}

uint64_t sub_183528C14(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v25 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63998);
  uint64_t v24 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63750);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = a1 + *a3;
  swift_beginAccess();
  sub_183529B24(v16, (uint64_t)v15);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63738);
  uint64_t v18 = *(void *)(v17 - 8);
  int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17);
  sub_183525854((uint64_t)v15);
  if (v19 != 1) {
    return sub_183D44FFC();
  }
  uint64_t v20 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v13, a2, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
  swift_beginAccess();
  sub_183529B8C((uint64_t)v13, v16);
  uint64_t result = swift_endAccess();
  uint64_t v22 = (unsigned int *)(a1 + *v25);
  if (*((unsigned __int8 *)v22 + 4) >> 2 <= 0x3EuLL)
  {
    unint64_t v23 = *v22 | ((unint64_t)*((unsigned __int8 *)v22 + 4) << 32);
    int v26 = v23;
    char v27 = BYTE4(v23);
    sub_183D44FEC();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v9, v7);
  }
  return result;
}

uint64_t Listener4.deinit()
{
  return sub_183528EC0(&qword_1E8F63778);
}

uint64_t sub_183528EC0(void *a1)
{
  swift_release();
  sub_183525854(v1 + *a1);
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 144);
  type metadata accessor for Connection1();
  sub_183D4500C();
  uint64_t v4 = sub_183D4536C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t Listener4.__deallocating_deinit()
{
  return sub_183526728((void (*)(void))Listener4.deinit);
}

uint64_t sub_183528FF8(unsigned int *a1)
{
  return sub_18352782C(a1, v1, &qword_1E8F63730, &qword_1E8F63740);
}

uint64_t sub_183529024(uint64_t a1)
{
  return sub_183527F08(a1, v1, (uint64_t)&unk_1ECF63EE0, (uint64_t)sub_183529BF8, (uint64_t)&block_descriptor_63);
}

uint64_t sub_183529064(uint64_t a1)
{
  return sub_183528858(a1, v1, (uint64_t)&unk_1ECF63EB8, (uint64_t)sub_183529E6C, (uint64_t)&block_descriptor_57);
}

uint64_t sub_1835290A4(uint64_t a1)
{
  return sub_183527F08(a1, v1, (uint64_t)&unk_1ECF63E90, (uint64_t)sub_183529BF8, (uint64_t)&block_descriptor_51);
}

uint64_t sub_1835290E8(unsigned int *a1)
{
  return sub_183527128(a1, *(void *)(v1 + 16), *(uint64_t (**)(int *))(v1 + 24), *(void *)(v1 + 32), &qword_1E8F63758, &qword_1E8F63760);
}

uint64_t sub_183529118(unsigned int *a1)
{
  return sub_18352782C(a1, v1, &qword_1E8F63758, &qword_1E8F63760);
}

uint64_t sub_183529144(uint64_t a1)
{
  return sub_183527F08(a1, v1, (uint64_t)&unk_1ECF63E68, (uint64_t)sub_183529BF8, (uint64_t)&block_descriptor_45);
}

uint64_t sub_183529184(uint64_t a1)
{
  return sub_183528858(a1, v1, (uint64_t)&unk_1ECF63E40, (uint64_t)sub_183529D7C, (uint64_t)&block_descriptor_39);
}

uint64_t sub_1835291C8(unsigned int *a1)
{
  return sub_183527128(a1, *(void *)(v1 + 16), *(uint64_t (**)(int *))(v1 + 24), *(void *)(v1 + 32), &qword_1E8F63768, &qword_1E8F63770);
}

uint64_t sub_1835291F8(unsigned int *a1)
{
  return sub_18352782C(a1, v1, &qword_1E8F63768, &qword_1E8F63770);
}

uint64_t sub_183529224(uint64_t a1)
{
  return sub_183527F08(a1, v1, (uint64_t)&unk_1ECF63E18, (uint64_t)sub_183529BF8, (uint64_t)&block_descriptor_33);
}

uint64_t sub_183529264(uint64_t a1)
{
  return sub_183528858(a1, v1, (uint64_t)&unk_1ECF63DF0, (uint64_t)sub_183529C2C, (uint64_t)&block_descriptor_27);
}

uint64_t objectdestroyTm_0()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1835292E8(unsigned int *a1)
{
  return sub_183527128(a1, *(void *)(v1 + 16), *(uint64_t (**)(int *))(v1 + 24), *(void *)(v1 + 32), &qword_1E8F63778, qword_1E8F63780);
}

uint64_t sub_183529318(unsigned int *a1)
{
  return sub_18352782C(a1, v1, &qword_1E8F63778, qword_1E8F63780);
}

uint64_t sub_183529344(uint64_t a1)
{
  return sub_183527F08(a1, v1, (uint64_t)&unk_1ECF63DC8, (uint64_t)sub_183529BF8, (uint64_t)&block_descriptor_21_0);
}

uint64_t sub_183529384(uint64_t a1)
{
  return sub_183528858(a1, v1, (uint64_t)&unk_1ECF63DA0, (uint64_t)sub_183529AB8, (uint64_t)&block_descriptor_8);
}

uint64_t sub_1835293C4()
{
  return swift_getWitnessTable();
}

uint64_t destroy for Service(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

void *initializeWithCopy for Service(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v8 = a2 + 6;
  uint64_t v7 = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v9 = a2[7];
    a1[6] = v7;
    a1[7] = v9;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *v8;
  }
  return a1;
}

void *assignWithCopy for Service(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[6];
  if (!a1[6])
  {
    if (v4)
    {
      a1[6] = v4;
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  if (!v4)
  {
    sub_1834C9554((uint64_t)(a1 + 6));
    goto LABEL_7;
  }
  a1[6] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

void *assignWithTake for Service(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[6];
  if (!a1[6]) {
    goto LABEL_5;
  }
  if (!v7)
  {
    sub_1834C9554((uint64_t)(a1 + 6));
LABEL_5:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  a1[6] = v7;
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Service(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Service(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Service()
{
  return &type metadata for Service;
}

uint64_t type metadata accessor for Listener1()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for Listener1(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Listener1);
}

uint64_t dispatch thunk of Listener1.__allocating_init(using:ready:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of Listener1.__allocating_init(for:using:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

void sub_1835297B8()
{
  if (!qword_1E8F63808[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E8F63738);
    unint64_t v0 = sub_183D4536C();
    if (!v1) {
      atomic_store(v0, qword_1E8F63808);
    }
  }
}

uint64_t type metadata accessor for Listener2()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for Listener2(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Listener2);
}

uint64_t dispatch thunk of Listener2.__allocating_init(using:ready:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of Listener2.__allocating_init(for:using:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t type metadata accessor for Listener3()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for Listener3(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Listener3);
}

uint64_t dispatch thunk of Listener3.__allocating_init(for:ready:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of Listener3.__allocating_init(on:for:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

void sub_183529914()
{
  sub_1835297B8();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Connection1();
    sub_183D4500C();
    sub_183D4536C();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for Listener4()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for Listener4(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Listener4);
}

uint64_t dispatch thunk of Listener4.__allocating_init(with:ready:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of Listener4.__allocating_init(for:with:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t sub_183529AB8()
{
  return sub_183529C40(&qword_1E8F63778, qword_1E8F63780);
}

unint64_t sub_183529ACC()
{
  unint64_t result = qword_1EB2669E0;
  if (!qword_1EB2669E0)
  {
    sub_183D449CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB2669E0);
  }
  return result;
}

uint64_t sub_183529B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_183529B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_183529BF8()
{
  return sub_183529CC0((uint64_t)sub_183529C10);
}

uint64_t sub_183529C10(uint64_t *a1)
{
  return sub_183529D54(a1);
}

uint64_t sub_183529C2C()
{
  return sub_183529C40(&qword_1E8F63768, &qword_1E8F63770);
}

uint64_t sub_183529C40(void *a1, void *a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63738) - 8);
  return sub_183528C14(*(void *)(v2 + 56), v2 + ((*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a1, a2);
}

uint64_t sub_183529CC0(uint64_t a1)
{
  type metadata accessor for Connection1();
  uint64_t v3 = *(void *)(sub_183D4500C() - 8);
  return sub_183528320(*(uint64_t **)(v1 + 56), v1 + ((*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_183529D54(uint64_t *a1)
{
  return sub_1835286E4(a1, v1[7], v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_183529D7C()
{
  return sub_183529C40(&qword_1E8F63758, &qword_1E8F63760);
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63738);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_183529E6C()
{
  return sub_183529C40(&qword_1E8F63730, &qword_1E8F63740);
}

uint64_t objectdestroy_17Tm()
{
  type metadata accessor for Connection1();
  uint64_t v1 = sub_183D4500C();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void static HTTPField.Name.cookie.getter(void *a1@<X8>)
{
  *a1 = 0x65696B6F6F43;
  a1[1] = 0xE600000000000000;
  a1[2] = 0x65696B6F6F63;
  a1[3] = 0xE600000000000000;
}

uint64_t static HTTPField.Name.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_183D4592C();
  }
}

uint64_t sub_183529FF8(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    unint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    unint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    uint64_t v5 = (a1 >> 59) & 1;
    if ((a2 & 0x1000000000000000) == 0) {
      LOBYTE(v5) = 1;
    }
    uint64_t v6 = 4 << v5;
    uint64_t v16 = a2 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
    unint64_t v8 = 15;
    while (1)
    {
      unint64_t v9 = v8 & 0xC;
      unint64_t v10 = v8;
      if (v9 == v6) {
        unint64_t v10 = sub_183520284(v8, a1, a2);
      }
      unint64_t v11 = v10 >> 16;
      if (v10 >> 16 >= v2)
      {
        __break(1u);
LABEL_33:
        __break(1u);
        JUMPOUT(0x18352A1F8);
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        char v13 = sub_183D44CFC();
        if (v9 != v6) {
          goto LABEL_18;
        }
      }
      else if ((a2 & 0x2000000000000000) != 0)
      {
        v15[0] = a1;
        v15[1] = v16;
        char v13 = *((unsigned char *)v15 + v11);
        if (v9 != v6) {
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v12 = v7;
        if ((a1 & 0x1000000000000000) == 0) {
          uint64_t v12 = sub_183D4557C();
        }
        char v13 = *(unsigned char *)(v12 + v11);
        if (v9 != v6)
        {
LABEL_18:
          if ((a2 & 0x1000000000000000) != 0) {
            goto LABEL_22;
          }
          goto LABEL_19;
        }
      }
      unint64_t v8 = sub_183520284(v8, a1, a2);
      if ((a2 & 0x1000000000000000) != 0)
      {
LABEL_22:
        if (v2 <= v8 >> 16) {
          goto LABEL_33;
        }
        unint64_t v8 = sub_183D44CBC();
        goto LABEL_24;
      }
LABEL_19:
      unint64_t v8 = (v8 & 0xFFFFFFFFFFFF0000) + 65540;
LABEL_24:
      switch(v13)
      {
        case '!':
        case '#':
        case '$':
        case '%':
        case '&':
        case '\'':
        case '*':
        case '+':
        case '-':
        case '.':
        case '^':
        case '_':
        case '|':
        case '~':
          goto LABEL_25;
        default:
          if ((v13 - 58) <= 0xF5u
            && (v13 - 91) <= 0xE5u
            && (v13 - 123) < 0xE6u)
          {
            return 0;
          }
LABEL_25:
          if (4 * v2 == v8 >> 14) {
            return 1;
          }
          break;
      }
    }
  }
  return 1;
}

uint64_t sub_18352A370(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v4 = a2 >> 14;
  if (a2 >> 14 == a1 >> 14) {
    return 0;
  }
  uint64_t v9 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v9) = 1;
  }
  uint64_t v10 = 4 << v9;
  if ((a4 & 0x2000000000000000) != 0) {
    unint64_t v11 = HIBYTE(a4) & 0xF;
  }
  else {
    unint64_t v11 = a3 & 0xFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRetain();
  unint64_t v12 = a1;
  while (2)
  {
    char v13 = sub_183D4537C();
    if ((v12 & 0xC) == v10)
    {
      unint64_t v12 = sub_183520284(v12, a3, a4);
      if ((a4 & 0x1000000000000000) == 0)
      {
LABEL_11:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_15;
      }
    }
    else if ((a4 & 0x1000000000000000) == 0)
    {
      goto LABEL_11;
    }
    if (v11 <= v12 >> 16)
    {
      __break(1u);
      JUMPOUT(0x18352A4FCLL);
    }
    unint64_t v12 = sub_183D44CBC();
LABEL_15:
    switch(v13)
    {
      case '!':
      case '#':
      case '$':
      case '%':
      case '&':
      case '\'':
      case '*':
      case '+':
      case '-':
      case '.':
      case '^':
      case '_':
      case '|':
      case '~':
        goto LABEL_16;
      default:
        if ((v13 - 58) > 0xF5u
          || (v13 - 91) > 0xE5u
          || (v13 - 123) >= 0xE6u)
        {
LABEL_16:
          if (v4 == v12 >> 14)
          {
            uint64_t v5 = 1;
            goto LABEL_22;
          }
          continue;
        }
        uint64_t v5 = 0;
LABEL_22:
        swift_bridgeObjectRelease();
        return v5;
    }
  }
}

uint64_t HTTPField.Name.rawName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HTTPField.Name.canonicalName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

double HTTPField.Name.init(_:)@<D0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v5 && (sub_183529FF8(a1, a2) & 1) != 0)
  {
    uint64_t v7 = sub_183D44B8C();
    *a3 = a1;
    a3[1] = a2;
    a3[2] = v7;
    a3[3] = v9;
  }
  else
  {
    swift_bridgeObjectRelease();
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *((_OWORD *)a3 + 1) = 0u;
  }
  return result;
}

uint64_t HTTPField.Name.init(parsed:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
LABEL_26:
    uint64_t result = swift_bridgeObjectRelease();
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  uint64_t v6 = a1;
  char v7 = sub_183D44D1C();
  swift_bridgeObjectRetain();
  if (v7)
  {
    unint64_t v8 = sub_18352BDE8(1uLL, v6, a2);
    unint64_t v10 = v9;
    unint64_t v12 = v11;
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v8 = MEMORY[0x185314760](v6, a2);
    unint64_t v10 = v15;
    unint64_t v12 = v16;
    unint64_t v14 = v17;
  }
  if (v10 >> 14 != v8 >> 14)
  {
    uint64_t v24 = v6;
    uint64_t v25 = a3;
    uint64_t v18 = (v12 >> 59) & 1;
    if ((v14 & 0x1000000000000000) == 0) {
      LOBYTE(v18) = 1;
    }
    uint64_t v19 = 4 << v18;
    if ((v14 & 0x2000000000000000) != 0) {
      unint64_t v20 = HIBYTE(v14) & 0xF;
    }
    else {
      unint64_t v20 = v12 & 0xFFFFFFFFFFFFLL;
    }
    swift_bridgeObjectRetain();
    unint64_t v21 = v8;
    while (2)
    {
      char v22 = sub_183D4537C();
      if ((v21 & 0xC) == v19)
      {
        unint64_t v21 = sub_183520284(v21, v12, v14);
        if ((v14 & 0x1000000000000000) == 0) {
          goto LABEL_16;
        }
      }
      else if ((v14 & 0x1000000000000000) == 0)
      {
LABEL_16:
        unint64_t v21 = (v21 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_20;
      }
      if (v20 <= v21 >> 16)
      {
        __break(1u);
        JUMPOUT(0x18352A9ACLL);
      }
      unint64_t v21 = sub_183D44CBC();
LABEL_20:
      switch(v22)
      {
        case '!':
        case '#':
        case '$':
        case '%':
        case '&':
        case '\'':
        case '*':
        case '+':
        case '-':
        case '.':
        case '^':
        case '_':
        case '|':
        case '~':
          goto LABEL_21;
        default:
          if ((v22 - 58) <= 0xF5u && (v22 - 123) < 0xE6u)
          {
            swift_bridgeObjectRelease_n();
            a3 = v25;
            goto LABEL_26;
          }
LABEL_21:
          if (v10 >> 14 != v21 >> 14) {
            continue;
          }
          swift_bridgeObjectRelease();
          uint64_t v6 = v24;
          a3 = v25;
          break;
      }
      break;
    }
  }
  swift_bridgeObjectRelease();
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + 16) = v6;
  *(void *)(a3 + 24) = a2;

  return swift_bridgeObjectRetain();
}

uint64_t HTTPField.Name.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_183D44C4C();

  return swift_bridgeObjectRelease();
}

uint64_t HTTPField.Name.hashValue.getter()
{
  return sub_183D45B4C();
}

uint64_t sub_18352ABC8()
{
  return sub_183D45B4C();
}

uint64_t sub_18352AC14()
{
  return sub_183D44C4C();
}

uint64_t sub_18352AC1C()
{
  return sub_183D45B4C();
}

uint64_t sub_18352AC64(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_183D4592C();
  }
}

uint64_t sub_18352AC98()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HTTPField.Name.playgroundDescription.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = v3;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_18352ACE0@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = v3;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t HTTPField.Name.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_2(a1, a1[3]);
  sub_183D45BEC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_183D4595C();
  return __swift_destroy_boxed_opaque_existential_2((uint64_t)v2);
}

uint64_t HTTPField.Name.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_2(a1, a1[3]);
  sub_183D45BAC();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_2(v23, v23[3]);
    uint64_t v5 = sub_183D4594C();
    unint64_t v7 = v6;
    if (sub_183D44D1C())
    {
      if (sub_183D44B8C() == v5 && v8 == v7)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v10 = sub_183D4592C();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0) {
          goto LABEL_20;
        }
      }
      swift_bridgeObjectRetain();
      unint64_t v15 = sub_18352BDE8(1uLL, v5, v7);
      unint64_t v17 = v16;
      unint64_t v19 = v18;
      unint64_t v21 = v20;
      swift_bridgeObjectRelease();
      LOBYTE(v15) = sub_18352A370(v15, v17, v19, v21);
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
      {
LABEL_20:
        sub_183D4547C();
        sub_183D44C8C();
LABEL_21:
        sub_183D44C8C();
        swift_bridgeObjectRelease();
        sub_183D44C8C();
        sub_183D4554C();
        swift_allocError();
        sub_183D4550C();
        swift_bridgeObjectRelease();
        swift_willThrow();
        __swift_destroy_boxed_opaque_existential_2((uint64_t)v23);
        return __swift_destroy_boxed_opaque_existential_2((uint64_t)a1);
      }
      swift_bridgeObjectRetain();
      uint64_t v12 = v5;
      unint64_t v14 = v7;
    }
    else
    {
      uint64_t v11 = HIBYTE(v7) & 0xF;
      if ((v7 & 0x2000000000000000) == 0) {
        uint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
      }
      if (!v11 || (sub_183529FF8(v5, v7) & 1) == 0)
      {
        sub_183D4547C();
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
      uint64_t v12 = sub_183D44B8C();
      unint64_t v14 = v13;
    }
    __swift_destroy_boxed_opaque_existential_2((uint64_t)v23);
    *a2 = v5;
    a2[1] = v7;
    a2[2] = v12;
    a2[3] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_2((uint64_t)a1);
}

uint64_t sub_18352B070@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return HTTPField.Name.init(from:)(a1, a2);
}

uint64_t sub_18352B088(void *a1)
{
  __swift_project_boxed_opaque_existential_2(a1, a1[3]);
  sub_183D45BEC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_183D4595C();
  return __swift_destroy_boxed_opaque_existential_2((uint64_t)v2);
}

void static HTTPField.Name.accept.getter(void *a1@<X8>)
{
  *a1 = 0x747065636341;
  a1[1] = 0xE600000000000000;
  a1[2] = 0x747065636361;
  a1[3] = 0xE600000000000000;
}

void static HTTPField.Name.acceptEncoding.getter(void *a1@<X8>)
{
  *a1 = 0x452D747065636341;
  a1[1] = 0xEF676E69646F636ELL;
  a1[2] = 0x652D747065636361;
  a1[3] = 0xEF676E69646F636ELL;
}

void static HTTPField.Name.acceptLanguage.getter(void *a1@<X8>)
{
  *a1 = 0x4C2D747065636341;
  a1[1] = 0xEF65676175676E61;
  a1[2] = 0x6C2D747065636361;
  a1[3] = 0xEF65676175676E61;
}

void static HTTPField.Name.acceptRanges.getter(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
  strcpy((char *)(a1 + 16), "accept-ranges");
  *(_WORD *)(a1 + 30) = -4864;
}

void static HTTPField.Name.accessControlAllowCredentials.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000020;
  a1[1] = 0x8000000183E250F0;
  a1[2] = 0xD000000000000020;
  a1[3] = 0x8000000183E25120;
}

void static HTTPField.Name.accessControlAllowHeaders.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001CLL;
  a1[1] = 0x8000000183E25150;
  a1[2] = 0xD00000000000001CLL;
  a1[3] = 0x8000000183E25170;
}

void static HTTPField.Name.accessControlAllowMethods.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001CLL;
  a1[1] = 0x8000000183E25190;
  a1[2] = 0xD00000000000001CLL;
  a1[3] = 0x8000000183E251B0;
}

void static HTTPField.Name.accessControlAllowOrigin.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001BLL;
  a1[1] = 0x8000000183E251D0;
  a1[2] = 0xD00000000000001BLL;
  a1[3] = 0x8000000183E251F0;
}

void static HTTPField.Name.accessControlExposeHeaders.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001DLL;
  a1[1] = 0x8000000183E25210;
  a1[2] = 0xD00000000000001DLL;
  a1[3] = 0x8000000183E25230;
}

void static HTTPField.Name.accessControlMaxAge.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x8000000183E25250;
  a1[2] = 0xD000000000000016;
  a1[3] = 0x8000000183E25270;
}

void static HTTPField.Name.accessControlRequestHeaders.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001ELL;
  a1[1] = 0x8000000183E25290;
  a1[2] = 0xD00000000000001ELL;
  a1[3] = 0x8000000183E252B0;
}

void static HTTPField.Name.accessControlRequestMethod.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001DLL;
  a1[1] = 0x8000000183E252D0;
  a1[2] = 0xD00000000000001DLL;
  a1[3] = 0x8000000183E252F0;
}

void static HTTPField.Name.age.getter(void *a1@<X8>)
{
  *a1 = 6645569;
  a1[1] = 0xE300000000000000;
  a1[2] = 6645601;
  a1[3] = 0xE300000000000000;
}

void static HTTPField.Name.allow.getter(void *a1@<X8>)
{
  *a1 = 0x776F6C6C41;
  a1[1] = 0xE500000000000000;
  a1[2] = 0x776F6C6C61;
  a1[3] = 0xE500000000000000;
}

void static HTTPField.Name.authenticationInfo.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x8000000183E25310;
  a1[2] = 0xD000000000000013;
  a1[3] = 0x8000000183E25330;
}

void static HTTPField.Name.authorization.getter(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
  strcpy((char *)(a1 + 16), "authorization");
  *(_WORD *)(a1 + 30) = -4864;
}

void static HTTPField.Name.cacheControl.getter(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
  strcpy((char *)(a1 + 16), "cache-control");
  *(_WORD *)(a1 + 30) = -4864;
}

void static HTTPField.Name.connection.getter(void *a1@<X8>)
{
  *a1 = 0x697463656E6E6F43;
  a1[1] = 0xEA00000000006E6FLL;
  a1[2] = 0x697463656E6E6F63;
  a1[3] = 0xEA00000000006E6FLL;
}

void static HTTPField.Name.contentDisposition.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x8000000183E25350;
  a1[2] = 0xD000000000000013;
  a1[3] = 0x8000000183E25370;
}

void static HTTPField.Name.contentEncoding.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x8000000183E25390;
  a1[2] = 0xD000000000000010;
  a1[3] = 0x8000000183E253B0;
}

void static HTTPField.Name.contentLanguage.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x8000000183E253D0;
  a1[2] = 0xD000000000000010;
  a1[3] = 0x8000000183E253F0;
}

void static HTTPField.Name.contentLength.getter(char *a1@<X8>)
{
  a1[15] = -18;
  strcpy(a1 + 16, "content-length");
  a1[31] = -18;
}

void static HTTPField.Name.contentLocation.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x8000000183E25410;
  a1[2] = 0xD000000000000010;
  a1[3] = 0x8000000183E25430;
}

void static HTTPField.Name.contentRange.getter(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
  strcpy((char *)(a1 + 16), "content-range");
  *(_WORD *)(a1 + 30) = -4864;
}

void static HTTPField.Name.contentSecurityPolicy.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000017;
  a1[1] = 0x8000000183E25450;
  a1[2] = 0xD000000000000017;
  a1[3] = 0x8000000183E25470;
}

void static HTTPField.Name.contentSecurityPolicyReportOnly.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000023;
  a1[1] = 0x8000000183E25490;
  a1[2] = 0xD000000000000023;
  a1[3] = 0x8000000183E254C0;
}

void static HTTPField.Name.contentType.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
  strcpy((char *)(a1 + 16), "content-type");
  *(unsigned char *)(a1 + 29) = 0;
  *(_WORD *)(a1 + 30) = -5120;
}

void static HTTPField.Name.crossOriginResourcePolicy.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001CLL;
  a1[1] = 0x8000000183E254F0;
  a1[2] = 0xD00000000000001CLL;
  a1[3] = 0x8000000183E25510;
}

void static HTTPField.Name.date.getter(void *a1@<X8>)
{
  *a1 = 1702125892;
  a1[1] = 0xE400000000000000;
  a1[2] = 1702125924;
  a1[3] = 0xE400000000000000;
}

void static HTTPField.Name.earlyData.getter(void *a1@<X8>)
{
  *a1 = 0x61442D796C726145;
  a1[1] = 0xEA00000000006174;
  a1[2] = 0x61642D796C726165;
  a1[3] = 0xEA00000000006174;
}

void static HTTPField.Name.eTag.getter(void *a1@<X8>)
{
  *a1 = 1734431813;
  a1[1] = 0xE400000000000000;
  a1[2] = 1734440037;
  a1[3] = 0xE400000000000000;
}

void static HTTPField.Name.expect.getter(void *a1@<X8>)
{
  *a1 = 0x746365707845;
  a1[1] = 0xE600000000000000;
  a1[2] = 0x746365707865;
  a1[3] = 0xE600000000000000;
}

void static HTTPField.Name.expires.getter(void *a1@<X8>)
{
  *a1 = 0x73657269707845;
  a1[1] = 0xE700000000000000;
  a1[2] = 0x73657269707865;
  a1[3] = 0xE700000000000000;
}

void static HTTPField.Name.from.getter(void *a1@<X8>)
{
  *a1 = 1836020294;
  a1[1] = 0xE400000000000000;
  a1[2] = 1836020326;
  a1[3] = 0xE400000000000000;
}

void static HTTPField.Name.host.getter(void *a1@<X8>)
{
  *a1 = 1953722184;
  a1[1] = 0xE400000000000000;
  a1[2] = 1953722216;
  a1[3] = 0xE400000000000000;
}

void static HTTPField.Name.ifMatch.getter(void *a1@<X8>)
{
  *a1 = 0x686374614D2D6649;
  a1[1] = 0xE800000000000000;
  a1[2] = 0x686374616D2D6669;
  a1[3] = 0xE800000000000000;
}

void static HTTPField.Name.ifModifiedSince.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x8000000183E25530;
  a1[2] = 0xD000000000000011;
  a1[3] = 0x8000000183E25550;
}

void static HTTPField.Name.ifNoneMatch.getter(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
  strcpy((char *)(a1 + 16), "if-none-match");
  *(_WORD *)(a1 + 30) = -4864;
}

void static HTTPField.Name.ifRange.getter(void *a1@<X8>)
{
  *a1 = 0x65676E61522D6649;
  a1[1] = 0xE800000000000000;
  a1[2] = 0x65676E61722D6669;
  a1[3] = 0xE800000000000000;
}

void static HTTPField.Name.ifUnmodifiedSince.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x8000000183E25570;
  a1[2] = 0xD000000000000013;
  a1[3] = 0x8000000183E25590;
}

void static HTTPField.Name.lastModified.getter(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
  strcpy((char *)(a1 + 16), "last-modified");
  *(_WORD *)(a1 + 30) = -4864;
}

void static HTTPField.Name.location.getter(void *a1@<X8>)
{
  *a1 = 0x6E6F697461636F4CLL;
  a1[1] = 0xE800000000000000;
  a1[2] = 0x6E6F697461636F6CLL;
  a1[3] = 0xE800000000000000;
}

void static HTTPField.Name.maxForwards.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
  strcpy((char *)(a1 + 16), "max-forwards");
  *(unsigned char *)(a1 + 29) = 0;
  *(_WORD *)(a1 + 30) = -5120;
}

void static HTTPField.Name.origin.getter(void *a1@<X8>)
{
  *a1 = 0x6E696769724FLL;
  a1[1] = 0xE600000000000000;
  a1[2] = 0x6E696769726FLL;
  a1[3] = 0xE600000000000000;
}

void static HTTPField.Name.priority.getter(void *a1@<X8>)
{
  *a1 = 0x797469726F697250;
  a1[1] = 0xE800000000000000;
  a1[2] = 0x797469726F697270;
  a1[3] = 0xE800000000000000;
}

void static HTTPField.Name.proxyAuthenticate.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x8000000183E255B0;
  a1[2] = 0xD000000000000012;
  a1[3] = 0x8000000183E255D0;
}

void static HTTPField.Name.proxyAuthenticationInfo.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000019;
  a1[1] = 0x8000000183E255F0;
  a1[2] = 0xD000000000000019;
  a1[3] = 0x8000000183E25610;
}

void static HTTPField.Name.proxyAuthorization.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x8000000183E25630;
  a1[2] = 0xD000000000000013;
  a1[3] = 0x8000000183E25650;
}

void static HTTPField.Name.proxyStatus.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
  strcpy((char *)(a1 + 16), "proxy-status");
  *(unsigned char *)(a1 + 29) = 0;
  *(_WORD *)(a1 + 30) = -5120;
}

void static HTTPField.Name.range.getter(void *a1@<X8>)
{
  *a1 = 0x65676E6152;
  a1[1] = 0xE500000000000000;
  a1[2] = 0x65676E6172;
  a1[3] = 0xE500000000000000;
}

void static HTTPField.Name.referer.getter(void *a1@<X8>)
{
  *a1 = 0x72657265666552;
  a1[1] = 0xE700000000000000;
  a1[2] = 0x72657265666572;
  a1[3] = 0xE700000000000000;
}

void static HTTPField.Name.retryAfter.getter(void *a1@<X8>)
{
  *a1 = 0x66412D7972746552;
  a1[1] = 0xEB00000000726574;
  a1[2] = 0x66612D7972746572;
  a1[3] = 0xEB00000000726574;
}

void static HTTPField.Name.secPurpose.getter(void *a1@<X8>)
{
  *a1 = 0x707275502D636553;
  a1[1] = 0xEB0000000065736FLL;
  a1[2] = 0x707275702D636573;
  a1[3] = 0xEB0000000065736FLL;
}

void static HTTPField.Name.secWebSocketAccept.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000014;
  a1[1] = 0x8000000183E25670;
  a1[2] = 0xD000000000000014;
  a1[3] = 0x8000000183E25690;
}

void static HTTPField.Name.secWebSocketExtensions.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000018;
  a1[1] = 0x8000000183E256B0;
  a1[2] = 0xD000000000000018;
  a1[3] = 0x8000000183E256D0;
}

void static HTTPField.Name.secWebSocketKey.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x8000000183E256F0;
  a1[2] = 0xD000000000000011;
  a1[3] = 0x8000000183E25710;
}

void static HTTPField.Name.secWebSocketProtocol.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x8000000183E25730;
  a1[2] = 0xD000000000000016;
  a1[3] = 0x8000000183E25750;
}

void static HTTPField.Name.secWebSocketVersion.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x8000000183E25770;
  a1[2] = 0xD000000000000015;
  a1[3] = 0x8000000183E25790;
}

void static HTTPField.Name.server.getter(void *a1@<X8>)
{
  *a1 = 0x726576726553;
  a1[1] = 0xE600000000000000;
  a1[2] = 0x726576726573;
  a1[3] = 0xE600000000000000;
}

void static HTTPField.Name.setCookie.getter(void *a1@<X8>)
{
  *a1 = 0x6B6F6F432D746553;
  a1[1] = 0xEA00000000006569;
  a1[2] = 0x6B6F6F632D746573;
  a1[3] = 0xEA00000000006569;
}

void static HTTPField.Name.strictTransportSecurity.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000019;
  a1[1] = 0x8000000183E257B0;
  a1[2] = 0xD000000000000019;
  a1[3] = 0x8000000183E257D0;
}

void static HTTPField.Name.te.getter(void *a1@<X8>)
{
  *a1 = 17748;
  a1[1] = 0xE200000000000000;
  a1[2] = 25972;
  a1[3] = 0xE200000000000000;
}

void static HTTPField.Name.trailer.getter(void *a1@<X8>)
{
  *a1 = 0x72656C69617254;
  a1[1] = 0xE700000000000000;
  a1[2] = 0x72656C69617274;
  a1[3] = 0xE700000000000000;
}

void static HTTPField.Name.transferEncoding.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x8000000183E257F0;
  a1[2] = 0xD000000000000011;
  a1[3] = 0x8000000183E25810;
}

void static HTTPField.Name.upgrade.getter(void *a1@<X8>)
{
  *a1 = 0x65646172677055;
  a1[1] = 0xE700000000000000;
  a1[2] = 0x65646172677075;
  a1[3] = 0xE700000000000000;
}

void static HTTPField.Name.userAgent.getter(void *a1@<X8>)
{
  *a1 = 0x6567412D72657355;
  a1[1] = 0xEA0000000000746ELL;
  a1[2] = 0x6567612D72657375;
  a1[3] = 0xEA0000000000746ELL;
}

void static HTTPField.Name.vary.getter(void *a1@<X8>)
{
  *a1 = 2037539158;
  a1[1] = 0xE400000000000000;
  a1[2] = 2037539190;
  a1[3] = 0xE400000000000000;
}

void static HTTPField.Name.via.getter(void *a1@<X8>)
{
  *a1 = 6383958;
  a1[1] = 0xE300000000000000;
  a1[2] = 6383990;
  a1[3] = 0xE300000000000000;
}

void static HTTPField.Name.wwwAuthenticate.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x8000000183E25830;
  a1[2] = 0xD000000000000010;
  a1[3] = 0x8000000183E25850;
}

void static HTTPField.Name.xContentTypeOptions.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x8000000183E25870;
  a1[2] = 0xD000000000000016;
  a1[3] = 0x8000000183E25890;
}

unint64_t sub_18352BDE8(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  uint64_t result = sub_183D44C7C();
  if (v6) {
    uint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }

  return sub_183D44D4C();
}

unint64_t sub_18352BE9C()
{
  unint64_t result = qword_1E8F639A0;
  if (!qword_1E8F639A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F639A0);
  }
  return result;
}

unint64_t sub_18352BEF4()
{
  unint64_t result = qword_1E8F639A8;
  if (!qword_1E8F639A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F639A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for HTTPField.Name()
{
  return &type metadata for HTTPField.Name;
}

uint64_t dispatch thunk of NWActorPeer.addInterruptionHandler(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_18352BF70(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  char v15 = *((unsigned char *)a1 + 32);
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v9 = sub_183D44D1C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v2[12] + 16;
  if ((v9 & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v12 = *(void *)(*(void *)v10 + 16);
    v16[0] = v4;
    v16[1] = v3;
    void v16[2] = v5;
    v16[3] = v6;
    char v17 = v15;
    uint64_t v18 = v7;
    uint64_t v19 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_18351DF80(v12, v12, (uint64_t)v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(void *)(*(void *)v10 + 16))
  {
    if (v5 == 0x646F6874656D3ALL && v6 == 0xE700000000000000 || (sub_183D4592C() & 1) != 0)
    {
      if (!v2[1])
      {
        *uint64_t v2 = v7;
        v2[1] = v8;
        return swift_bridgeObjectRetain();
      }
    }
    else if (v5 == 0x656D656863733ALL && v6 == 0xE700000000000000 || (sub_183D4592C() & 1) != 0)
    {
      if (!v2[3])
      {
        v2[2] = v7;
        v2[3] = v8;
        return swift_bridgeObjectRetain();
      }
    }
    else if (v5 == 0x69726F687475613ALL && v6 == 0xEA00000000007974 || (sub_183D4592C() & 1) != 0)
    {
      if (!v2[5])
      {
        v2[4] = v7;
        v2[5] = v8;
        return swift_bridgeObjectRetain();
      }
    }
    else if (v5 == 0x687461703ALL && v6 == 0xE500000000000000 || (sub_183D4592C() & 1) != 0)
    {
      if (!v2[7])
      {
        v2[6] = v7;
        v2[7] = v8;
        return swift_bridgeObjectRetain();
      }
    }
    else if (v5 == 0x6F636F746F72703ALL && v6 == 0xE90000000000006CLL || (sub_183D4592C() & 1) != 0)
    {
      if (!v2[9])
      {
        v2[8] = v7;
        v2[9] = v8;
        return swift_bridgeObjectRetain();
      }
    }
    else
    {
      if ((v5 != 0x7375746174733ALL || v6 != 0xE700000000000000) && (sub_183D4592C() & 1) == 0)
      {
        char v11 = 1;
        goto LABEL_36;
      }
      if (!v2[11])
      {
        v2[10] = v7;
        v2[11] = v8;
        return swift_bridgeObjectRetain();
      }
    }
    char v11 = 3;
    goto LABEL_36;
  }
  char v11 = 4;
LABEL_36:
  sub_18352D678();
  swift_allocError();
  char *v14 = v11;
  return swift_willThrow();
}

uint64_t sub_18352C33C()
{
  uint64_t v1 = *(void *)(v0 + 96);
  strcpy((char *)v11, "Content-Length");
  HIBYTE(v11[1]) = -18;
  strcpy((char *)v12, "content-length");
  HIBYTE(v12[1]) = -18;
  uint64_t v13 = v1;
  uint64_t v2 = (void *)HTTPFields.subscript.getter((uint64_t)v11);
  char v3 = sub_18352C4AC(v2);
  swift_bridgeObjectRelease();
  if (v3)
  {
    v11[0] = 0xD000000000000013;
    v11[1] = 0x8000000183E25350;
    v12[0] = 0xD000000000000013;
    v12[1] = 0x8000000183E25370;
    uint64_t v13 = v1;
    uint64_t v4 = (void *)HTTPFields.subscript.getter((uint64_t)v11);
    char v5 = sub_18352C4AC(v4);
    swift_bridgeObjectRelease();
    if (v5)
    {
      strcpy((char *)v11, "Location");
      BYTE1(v11[1]) = 0;
      WORD1(v11[1]) = 0;
      HIDWORD(v11[1]) = -402653184;
      strcpy((char *)v12, "location");
      BYTE1(v12[1]) = 0;
      WORD1(v12[1]) = 0;
      HIDWORD(v12[1]) = -402653184;
      uint64_t v13 = v1;
      uint64_t v6 = (void *)HTTPFields.subscript.getter((uint64_t)v11);
      char v7 = sub_18352C4AC(v6);
      uint64_t result = swift_bridgeObjectRelease();
      if (v7) {
        return result;
      }
      char v9 = 14;
    }
    else
    {
      char v9 = 13;
    }
  }
  else
  {
    char v9 = 12;
  }
  sub_18352D678();
  swift_allocError();
  *uint64_t v10 = v9;
  return swift_willThrow();
}

uint64_t sub_18352C4AC(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return 1;
  }
  uint64_t v2 = v1 - 1;
  if (v1 == 1) {
    return 1;
  }
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  for (uint64_t i = a1 + 7; ; i += 2)
  {
    BOOL v7 = *(i - 1) == v4 && *i == v5;
    if (!v7 && (sub_183D4592C() & 1) == 0) {
      break;
    }
    if (!--v2) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_18352C528@<X0>(uint64_t a1@<X8>)
{
  unint64_t v3 = *(void *)(v1 + 8);
  if (!v3)
  {
    sub_18352D678();
    swift_allocError();
    char v14 = 5;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)v1;
  uint64_t v5 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v5 = *(void *)v1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5) {
    goto LABEL_8;
  }
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v33 = *(void *)(v1 + 16);
  uint64_t v34 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v10 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  long long v35 = *(_OWORD *)(v1 + 72);
  uint64_t v12 = *(void *)(v1 + 88);
  uint64_t v11 = *(void *)(v1 + 96);
  if ((sub_183529FF8(v4, v3) & 1) == 0)
  {
LABEL_8:
    sub_18352D678();
    swift_allocError();
    char v14 = 6;
    goto LABEL_10;
  }
  if (v12)
  {
    sub_18352D678();
    swift_allocError();
    char v14 = 7;
LABEL_10:
    *uint64_t v13 = v14;
    return swift_willThrow();
  }
  uint64_t v16 = v7;
  uint64_t v17 = v9;
  uint64_t v18 = v6;
  uint64_t v19 = v16;
  uint64_t v20 = v17;
  swift_bridgeObjectRetain();
  sub_18352C33C();
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  *(void *)a1 = 0x646F6874656D3ALL;
  *(void *)(a1 + 8) = 0xE700000000000000;
  uint64_t v21 = 0x656D656863733ALL;
  if (v34)
  {
    unint64_t v22 = 0xE700000000000000;
  }
  else
  {
    uint64_t v21 = 0;
    unint64_t v22 = 0;
  }
  if (v34) {
    uint64_t v23 = v33;
  }
  else {
    uint64_t v23 = 0;
  }
  *(void *)(a1 + 16) = 0x646F6874656D3ALL;
  *(void *)(a1 + 24) = 0xE700000000000000;
  uint64_t v24 = 0x69726F687475613ALL;
  *(unsigned char *)(a1 + 32) = 0;
  if (!v8) {
    uint64_t v24 = 0;
  }
  unint64_t v25 = 0xEA00000000007974;
  if (v8)
  {
    uint64_t v26 = v18;
  }
  else
  {
    unint64_t v25 = 0;
    uint64_t v26 = 0;
  }
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v3;
  uint64_t v27 = 0x687461703ALL;
  if (!v10) {
    uint64_t v27 = 0;
  }
  unint64_t v28 = 0xE500000000000000;
  *(void *)(a1 + 56) = v21;
  *(void *)(a1 + 64) = v22;
  if (v10)
  {
    uint64_t v29 = v19;
  }
  else
  {
    unint64_t v28 = 0;
    uint64_t v29 = 0;
  }
  *(void *)(a1 + 72) = v21;
  *(void *)(a1 + 80) = v22;
  uint64_t v30 = 0x6F636F746F72703ALL;
  if (!(void)v35) {
    uint64_t v30 = 0;
  }
  unint64_t v31 = 0xE90000000000006CLL;
  if (!(void)v35) {
    unint64_t v31 = 0;
  }
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = v23;
  if ((void)v35) {
    uint64_t v32 = v20;
  }
  else {
    uint64_t v32 = 0;
  }
  *(void *)(a1 + 104) = v34;
  *(void *)(a1 + 112) = v24;
  *(void *)(a1 + 120) = v25;
  *(void *)(a1 + 128) = v24;
  *(void *)(a1 + 136) = v25;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = v26;
  *(void *)(a1 + 160) = v8;
  *(void *)(a1 + 168) = v27;
  *(void *)(a1 + 176) = v28;
  *(void *)(a1 + 184) = v27;
  *(void *)(a1 + 192) = v28;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = v29;
  *(void *)(a1 + 216) = v10;
  *(void *)(a1 + 224) = v30;
  *(void *)(a1 + 232) = v31;
  *(void *)(a1 + 240) = v30;
  *(void *)(a1 + 248) = v31;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = v32;
  *(void *)(a1 + 272) = v35;
  *(void *)(a1 + 280) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_18352C7E8@<X0>(void *a1@<X8>)
{
  unint64_t v3 = v1[11];
  if (!v3)
  {
    sub_18352D678();
    swift_allocError();
    char v13 = 8;
LABEL_14:
    *uint64_t v12 = v13;
    return swift_willThrow();
  }
  if (v1[1] || v1[3] || v1[5] || v1[7] || v1[9])
  {
    sub_18352D678();
    swift_allocError();
    char v13 = 10;
    goto LABEL_14;
  }
  uint64_t v52 = a1;
  unint64_t v4 = *v1;
  uint64_t v5 = (int *(*)@<X0>(int *@<X0>, int *@<X8>))v1[2];
  unint64_t v6 = v1[4];
  unint64_t v7 = v1[6];
  unint64_t v8 = v1[8];
  unint64_t v9 = v1[10];
  unint64_t v10 = v1[12];
  swift_bridgeObjectRetain();
  if (sub_183D44C5C() != 3 || (sub_18357AD24(v9, v3) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_18352D678();
    swift_allocError();
    char v13 = 9;
    goto LABEL_14;
  }
  unint64_t v39 = v4;
  uint64_t v40 = 0;
  uint64_t v41 = v5;
  uint64_t v42 = 0;
  unint64_t v43 = v6;
  uint64_t v44 = 0;
  unint64_t v45 = v7;
  uint64_t v46 = 0;
  unint64_t v47 = v8;
  uint64_t v48 = 0;
  unint64_t v49 = v9;
  unint64_t v50 = v3;
  unint64_t v51 = v10;
  uint64_t result = sub_18352C33C();
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v14 = HIBYTE(v3) & 0xF;
  uint64_t v15 = v9 & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v16 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v16 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v16)
  {
    swift_bridgeObjectRelease();
    goto LABEL_70;
  }
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_71;
  }
  if ((v3 & 0x2000000000000000) != 0)
  {
    unint64_t v39 = v9;
    uint64_t v40 = v3 & 0xFFFFFFFFFFFFFFLL;
    if (v9 == 43)
    {
      if (!v14) {
        goto LABEL_75;
      }
      if (v14 == 1 || (BYTE1(v9) - 48) > 9u) {
        goto LABEL_45;
      }
      uint64_t v18 = (BYTE1(v9) - 48);
      if (v14 != 2)
      {
        if ((BYTE2(v9) - 48) > 9u) {
          goto LABEL_45;
        }
        uint64_t v18 = 10 * (BYTE1(v9) - 48) + (BYTE2(v9) - 48);
        uint64_t v21 = v14 - 3;
        if (v21)
        {
          unint64_t v22 = (unsigned __int8 *)&v39 + 3;
          while (1)
          {
            unsigned int v23 = *v22 - 48;
            if (v23 > 9) {
              goto LABEL_45;
            }
            uint64_t v24 = 10 * v18;
            if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63) {
              goto LABEL_45;
            }
            uint64_t v18 = v24 + v23;
            if (__OFADD__(v24, v23)) {
              goto LABEL_45;
            }
            unint64_t v9 = 0;
            ++v22;
            if (!--v21) {
              goto LABEL_58;
            }
          }
        }
      }
    }
    else
    {
      if (v9 == 45)
      {
        if (v14)
        {
          if (v14 != 1 && (BYTE1(v9) - 48) <= 9u)
          {
            uint64_t v20 = (BYTE1(v9) - 48);
            if (v14 == 2)
            {
              unint64_t v9 = 0;
              uint64_t v18 = -v20;
              goto LABEL_58;
            }
            if ((BYTE2(v9) - 48) <= 9u)
            {
              uint64_t v18 = -10 * (BYTE1(v9) - 48) - (BYTE2(v9) - 48);
              uint64_t v29 = v14 - 3;
              if (!v29) {
                goto LABEL_57;
              }
              long long v35 = (unsigned __int8 *)&v39 + 3;
              while (1)
              {
                unsigned int v36 = *v35 - 48;
                if (v36 > 9) {
                  break;
                }
                uint64_t v37 = 10 * v18;
                if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63) {
                  break;
                }
                uint64_t v18 = v37 - v36;
                if (__OFSUB__(v37, v36)) {
                  break;
                }
                unint64_t v9 = 0;
                ++v35;
                if (!--v29) {
                  goto LABEL_58;
                }
              }
            }
          }
LABEL_45:
          uint64_t v18 = 0;
          unint64_t v9 = 1;
          goto LABEL_58;
        }
        __break(1u);
LABEL_75:
        __break(1u);
        return result;
      }
      if (!v14 || (v9 - 48) > 9u) {
        goto LABEL_45;
      }
      uint64_t v18 = (v9 - 48);
      if (v14 != 1)
      {
        if ((BYTE1(v9) - 48) > 9u) {
          goto LABEL_45;
        }
        uint64_t v18 = 10 * (v9 - 48) + (BYTE1(v9) - 48);
        uint64_t v25 = v14 - 2;
        if (v25)
        {
          uint64_t v26 = (unsigned __int8 *)&v39 + 2;
          while (1)
          {
            unsigned int v27 = *v26 - 48;
            if (v27 > 9) {
              goto LABEL_45;
            }
            uint64_t v28 = 10 * v18;
            if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63) {
              goto LABEL_45;
            }
            uint64_t v18 = v28 + v27;
            if (__OFADD__(v28, v27)) {
              goto LABEL_45;
            }
            unint64_t v9 = 0;
            ++v26;
            if (!--v25) {
              goto LABEL_58;
            }
          }
        }
      }
    }
LABEL_57:
    unint64_t v9 = 0;
    goto LABEL_58;
  }
  if ((v9 & 0x1000000000000000) == 0) {
    goto LABEL_73;
  }
  for (uint64_t i = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32); ; uint64_t i = (unsigned __int8 *)sub_183D4557C())
  {
    uint64_t v18 = (uint64_t)sub_18352E670(i, v15, 10);
    unint64_t v9 = v19 & 1;
LABEL_58:
    while (1)
    {
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0) {
        break;
      }
LABEL_70:
      __break(1u);
LABEL_71:
      uint64_t v18 = sub_18352DA54(v9, v3, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_18352E670);
      unint64_t v9 = v38;
    }
    if ((unint64_t)v18 <= 0x3E7) {
      break;
    }
    __break(1u);
LABEL_73:
    ;
  }
  unint64_t v30 = sub_18357AEC4(0, 0xE000000000000000);
  if ((v30 & 1) == 0)
  {
    unint64_t v39 = 0;
    uint64_t v40 = 0xE000000000000000;
    uint64_t v41 = sub_18357B538;
    uint64_t v42 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F639B8);
    sub_18352D990();
    unint64_t v30 = sub_183D44C0C();
  }
  MEMORY[0x1F4188790](v30);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_183D44C3C();
  uint64_t v33 = v32;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v34 = v52;
  *uint64_t v52 = 0x7375746174733ALL;
  v34[1] = 0xE700000000000000;
  v34[2] = 0x7375746174733ALL;
  v34[3] = 0xE700000000000000;
  *((unsigned char *)v34 + 32) = 0;
  v34[5] = v31;
  v34[6] = v33;
  v34[7] = 0;
  v34[8] = 0xE000000000000000;
  v34[9] = v10;
  return result;
}

void *HTTPRequest.init(parsed:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  type metadata accessor for HTTPFields._Storage();
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v6 = MEMORY[0x1E4FBC860];
  long long v5[2] = MEMORY[0x1E4FBC860];
  _OWORD v5[3] = sub_1835960A8(v6);
  unint64_t v7 = (_DWORD *)swift_slowAlloc();
  v5[4] = v7;
  *unint64_t v7 = 0;
  uint64_t v25 = v5;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v17 = a2;
    unint64_t v9 = (uint64_t *)(a1 + 80);
    while (1)
    {
      uint64_t v10 = *(v9 - 1);
      uint64_t v11 = *v9;
      char v12 = *((unsigned char *)v9 - 16);
      uint64_t v13 = *(v9 - 4);
      uint64_t v14 = *(v9 - 3);
      uint64_t v15 = *(v9 - 5);
      __src[0] = *(v9 - 6);
      __src[1] = v15;
      void __src[2] = v13;
      __src[3] = v14;
      LOBYTE(__src[4]) = v12;
      __src[5] = v10;
      __src[6] = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_18352BF70(__src);
      if (v2) {
        break;
      }
      v9 += 7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        a2 = v17;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_18352C528((uint64_t)__src);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (!v2) {
      return memcpy(a2, __src, 0x120uLL);
    }
  }
  return result;
}

uint64_t HTTPResponse.init(parsed:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for HTTPFields._Storage();
  memset(v46, 0, sizeof(v46));
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v6 = MEMORY[0x1E4FBC860];
  long long v5[2] = MEMORY[0x1E4FBC860];
  _OWORD v5[3] = sub_1835960A8(v6);
  unint64_t v7 = (_DWORD *)swift_slowAlloc();
  v5[4] = v7;
  *unint64_t v7 = 0;
  unint64_t v47 = v5;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v30 = a2;
    unint64_t v9 = (void *)(a1 + 80);
    while (1)
    {
      uint64_t v10 = *(v9 - 1);
      uint64_t v11 = *v9;
      char v12 = *((unsigned char *)v9 - 16);
      uint64_t v13 = *(v9 - 4);
      uint64_t v14 = *(v9 - 3);
      uint64_t v15 = *(v9 - 5);
      uint64_t v31 = *(v9 - 6);
      *(void *)&long long v32 = v15;
      *((void *)&v32 + 1) = v13;
      *(void *)&long long v33 = v14;
      BYTE8(v33) = v12;
      *(void *)&long long v34 = v10;
      *((void *)&v34 + 1) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_18352BF70(&v31);
      if (v2) {
        break;
      }
      v9 += 7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        long long v16 = *(_OWORD *)&v46[1];
        long long v17 = *(_OWORD *)&v46[3];
        long long v18 = *(_OWORD *)&v46[5];
        long long v19 = *(_OWORD *)&v46[7];
        long long v20 = *(_OWORD *)&v46[9];
        uint64_t v21 = v46[0];
        uint64_t v22 = v46[11];
        uint64_t v5 = v47;
        a2 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = 0;
    uint64_t v21 = 0;
    long long v17 = 0uLL;
    long long v18 = 0uLL;
    long long v19 = 0uLL;
    long long v20 = 0uLL;
    long long v16 = 0uLL;
LABEL_7:
    uint64_t v31 = v21;
    long long v32 = v16;
    long long v33 = v17;
    long long v34 = v18;
    long long v35 = v19;
    long long v36 = v20;
    uint64_t v37 = v22;
    unint64_t v38 = v5;
    sub_18352C7E8(&v39);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v2)
    {
      uint64_t v24 = v40;
      uint64_t v25 = v41;
      char v26 = v42;
      long long v27 = v43;
      uint64_t v28 = v44;
      long long v29 = v45;
      *(_OWORD *)a2 = v39;
      *(void *)(a2 + 16) = v24;
      *(void *)(a2 + 24) = v25;
      *(unsigned char *)(a2 + 32) = v26;
      *(_OWORD *)(a2 + 40) = v27;
      *(void *)(a2 + 56) = v28;
      *(_OWORD *)(a2 + 64) = v29;
    }
  }
  return result;
}

uint64_t HTTPFields.init(parsedTrailerFields:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v44 = a2;
  type metadata accessor for HTTPFields._Storage();
  uint64_t inited = (void *)swift_initStackObject();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  inited[2] = MEMORY[0x1E4FBC860];
  inited[3] = sub_1835960A8(v5);
  uint64_t v6 = (_DWORD *)swift_slowAlloc();
  inited[4] = v6;
  *uint64_t v6 = 0;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  unint64_t v7 = (void *)swift_allocObject();
  v7[2] = v5;
  v7[3] = sub_1835960A8(v5);
  uint64_t v8 = (_DWORD *)swift_slowAlloc();
  v7[4] = v8;
  *uint64_t v8 = 0;
  long long v43 = v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v10 = (void *)(a1 + 80);
    while (1)
    {
      uint64_t v11 = *(v10 - 1);
      uint64_t v12 = *v10;
      char v13 = *((unsigned char *)v10 - 16);
      uint64_t v14 = *(v10 - 4);
      uint64_t v15 = *(v10 - 3);
      uint64_t v16 = *(v10 - 5);
      uint64_t v24 = *(v10 - 6);
      uint64_t v25 = v16;
      uint64_t v26 = v14;
      uint64_t v27 = v15;
      LOBYTE(v28) = v13;
      uint64_t v29 = v11;
      uint64_t v30 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_18352BF70(&v24);
      if (v2) {
        break;
      }
      v10 += 7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = *((void *)&v37 + 1);
        uint64_t v18 = *((void *)&v38 + 1);
        uint64_t v19 = *((void *)&v39 + 1);
        uint64_t v9 = *((void *)&v40 + 1);
        uint64_t v20 = *((void *)&v41 + 1);
        uint64_t v21 = *((void *)&v42 + 1);
        unint64_t v7 = v43;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v44 = (void *)*((void *)&v42 + 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = 0;
  uint64_t v20 = 0;
  uint64_t v19 = 0;
  uint64_t v18 = 0;
  uint64_t v17 = 0;
LABEL_7:
  if (v17 || v18 || v19 || v9 || v20 || v21)
  {
    sub_18352D678();
    swift_allocError();
    *uint64_t v22 = 11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_16;
  }
  uint64_t v24 = v37;
  uint64_t v25 = 0;
  uint64_t v26 = v38;
  uint64_t v27 = 0;
  uint64_t v28 = v39;
  uint64_t v29 = 0;
  uint64_t v30 = v40;
  uint64_t v31 = 0;
  uint64_t v32 = v41;
  uint64_t v33 = 0;
  uint64_t v34 = v42;
  uint64_t v35 = 0;
  long long v36 = v7;
  swift_retain();
  sub_18352C33C();
  if (v2)
  {
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_release();
LABEL_16:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_release();
  *uint64_t v44 = v7;
  return result;
}

unint64_t sub_18352D678()
{
  unint64_t result = qword_1E8F619D0;
  if (!qword_1E8F619D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F619D0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for HTTPParsedFields.ParsingError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HTTPParsedFields.ParsingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *unint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x18352D828);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HTTPParsedFields.ParsingError()
{
  return &type metadata for HTTPParsedFields.ParsingError;
}

unint64_t sub_18352D864()
{
  unint64_t result = qword_1E8F639B0;
  if (!qword_1E8F639B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F639B0);
  }
  return result;
}

unsigned __int8 *sub_18352D8B8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_18352E670(a1, a2, a3);
}

unsigned __int8 *sub_18352D8D0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_18352DE88(a1, a2, a3);
}

unsigned __int8 *sub_18352D8E8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_18352E13C(a1, a2, a3);
}

unsigned __int8 *sub_18352D900(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_18352E3F0(a1, a2, a3);
}

unsigned __int8 *sub_18352D918(unsigned __int8 *a1, uint64_t a2, int64_t a3)
{
  return sub_18352EE14(a1, a2, a3);
}

unsigned __int8 *sub_18352D930(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_183517BFC(a1, a2, a3);
}

unsigned __int8 *sub_18352D948(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_18352E8EC(a1, a2, a3);
}

unsigned __int8 *sub_18352D960(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_18352EB94(a1, a2, a3);
}

uint64_t sub_18352D978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18352DA54(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_18352E670);
}

unint64_t sub_18352D990()
{
  unint64_t result = qword_1E8F639C0;
  if (!qword_1E8F639C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E8F639B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F639C0);
  }
  return result;
}

uint64_t sub_18352D9EC(unsigned char *a1, uint64_t a2)
{
  return sub_18357B3FC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_18352DA0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18352DB7C(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_18352DE88);
}

uint64_t sub_18352DA24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18352DC88(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_18352E13C);
}

uint64_t sub_18352DA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18352DD90(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_18352E3F0);
}

uint64_t sub_18352DA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_183D44D3C();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_18359979C();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (void *)sub_183D4557C();
  }
LABEL_7:
  uint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_18352DB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18352DA54(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_18352EE14);
}

uint64_t sub_18352DB64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18352DB7C(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_183517BFC);
}

uint64_t sub_18352DB7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_183D44D3C();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_18359979C();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (void *)sub_183D4557C();
  }
LABEL_7:
  __int16 v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13 & 0x1FF;
}

uint64_t sub_18352DC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18352DC88(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_18352E8EC);
}

uint64_t sub_18352DC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_183D44D3C();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_18359979C();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (void *)sub_183D4557C();
  }
LABEL_7:
  int v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13 & 0x1FFFF;
}

uint64_t sub_18352DD78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18352DD90(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_18352EB94);
}

uint64_t sub_18352DD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_183D44D3C();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_18359979C();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (void *)sub_183D4557C();
  }
LABEL_7:
  unint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13 | ((HIDWORD(v13) & 1) << 32);
}

unsigned __int8 *sub_18352DE88(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            int v23 = (char)v8 * (char)a3;
            char v24 = v23;
            if ((char)v23 != v23) {
              goto LABEL_72;
            }
            int v8 = (char)v23 + (char)(v21 + v22);
            if ((char)(v24 + v21 + v22) != v8) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          int v13 = 0;
          unsigned __int8 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned __int8 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          LOBYTE(v28) = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            int v31 = (char)v28 * (char)a3;
            char v32 = v31;
            if ((char)v31 != v31) {
              goto LABEL_72;
            }
            int v28 = (char)v31 + (char)(v29 + v30);
            if ((char)(v32 + v29 + v30) != v28) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          int v13 = 0;
          unsigned __int8 v12 = v28;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            int v14 = (char)v8 * (char)a3;
            char v15 = v14;
            if ((char)v14 != v14) {
              goto LABEL_72;
            }
            int v8 = (char)v14 - (char)(v10 + v11);
            if ((char)(v15 - (v10 + v11)) != v8) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned __int8 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_18352E13C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            int v23 = (__int16)v8 * (__int16)a3;
            __int16 v24 = v23;
            if ((__int16)v23 != v23) {
              goto LABEL_72;
            }
            int v8 = (__int16)v23 + (v21 + v22);
            if ((__int16)(v24 + (v21 + v22)) != v8) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          int v13 = 0;
          unsigned __int16 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned __int16 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 16));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          LOWORD(v28) = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            int v31 = (__int16)v28 * (__int16)a3;
            __int16 v32 = v31;
            if ((__int16)v31 != v31) {
              goto LABEL_72;
            }
            int v28 = (__int16)v31 + (v29 + v30);
            if ((__int16)(v32 + (v29 + v30)) != v28) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          int v13 = 0;
          unsigned __int16 v12 = v28;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            int v14 = (__int16)v8 * (__int16)a3;
            __int16 v15 = v14;
            if ((__int16)v14 != v14) {
              goto LABEL_72;
            }
            int v8 = (__int16)v14 - (v10 + v11);
            if ((__int16)(v15 - (v10 + v11)) != v8) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned __int16 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 16));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_18352E3F0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            uint64_t v23 = (int)v8 * (uint64_t)(int)a3;
            if (v23 != (int)v23) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__OFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            uint64_t v31 = (int)v28 * (uint64_t)(int)a3;
            if (v31 != (int)v31) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__OFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            uint64_t v14 = (int)v8 * (uint64_t)(int)a3;
            if (v14 != (int)v14) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (__OFSUB__(v14, v15)) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_18352E670(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unsigned __int8 v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_18352E8EC(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v14 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v15 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = a3 + 55;
        }
        else
        {
          unsigned __int8 v15 = 97;
          unsigned __int8 v16 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v17 = a3 + 48;
        }
        else {
          unsigned __int8 v17 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          unsigned __int8 v18 = result + 1;
          do
          {
            unsigned int v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v19 < 0x61 || v19 >= v15) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v20 = -87;
              }
              else
              {
                char v20 = -55;
              }
            }
            else
            {
              char v20 = -48;
            }
            if ((((unsigned __int16)v8 * (unsigned __int16)a3) & 0xFFFF0000) != 0) {
              goto LABEL_72;
            }
            int v8 = (unsigned __int16)(v8 * a3) + (v19 + v20);
            if ((v8 & 0x10000) != 0) {
              goto LABEL_72;
            }
            ++v18;
            --v14;
          }
          while (v14);
LABEL_48:
          int v13 = 0;
          unsigned __int16 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned __int16 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 16));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v21 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v22 = a3 + 55;
        }
        else
        {
          unsigned __int8 v21 = 97;
          unsigned __int8 v22 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v23 = a3 + 48;
        }
        else {
          unsigned __int8 v23 = 58;
        }
        if (result)
        {
          LOWORD(v24) = 0;
          do
          {
            unsigned int v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v25 < 0x61 || v25 >= v21) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v26 = -87;
              }
              else
              {
                char v26 = -55;
              }
            }
            else
            {
              char v26 = -48;
            }
            if ((((unsigned __int16)v24 * (unsigned __int16)a3) & 0xFFFF0000) != 0) {
              goto LABEL_72;
            }
            int v24 = (unsigned __int16)(v24 * a3) + (v25 + v26);
            if ((v24 & 0x10000) != 0) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          int v13 = 0;
          unsigned __int16 v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            if ((((unsigned __int16)v8 * (unsigned __int16)a3) & 0xFFFF0000) != 0) {
              goto LABEL_72;
            }
            int v8 = (unsigned __int16)(v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFF0000) != 0) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned __int16 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 16));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_18352EB94(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          char v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            unint64_t v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__CFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            unint64_t v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__CFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            unint64_t v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (v14 < v15) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_18352EE14(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v13 = v9 * a3;
              unsigned __int8 v14 = v11 + v12;
              BOOL v15 = v13 >= v14;
              unint64_t v9 = v13 - v14;
              if (!v15) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v25 = a3 + 48;
      unsigned __int8 v26 = a3 + 55;
      unsigned __int8 v27 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v25 = 58;
      }
      else
      {
        unsigned __int8 v27 = 97;
        unsigned __int8 v26 = 65;
      }
      if (result)
      {
        unint64_t v28 = 0;
        do
        {
          unsigned int v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27) {
                return 0;
              }
              char v30 = -87;
            }
            else
            {
              char v30 = -55;
            }
          }
          else
          {
            char v30 = -48;
          }
          if (!is_mul_ok(v28, a3)) {
            return 0;
          }
          unint64_t v31 = v28 * a3;
          unsigned __int8 v32 = v29 + v30;
          BOOL v15 = __CFADD__(v31, v32);
          unint64_t v28 = v31 + v32;
          if (v15) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v16 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v17 = a3 + 48;
  unsigned __int8 v18 = a3 + 55;
  unsigned __int8 v19 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v17 = 58;
  }
  else
  {
    unsigned __int8 v19 = 97;
    unsigned __int8 v18 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  char v20 = result + 1;
  do
  {
    unsigned int v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19) {
          return 0;
        }
        char v22 = -87;
      }
      else
      {
        char v22 = -55;
      }
    }
    else
    {
      char v22 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v23 = v9 * a3;
    unsigned __int8 v24 = v21 + v22;
    BOOL v15 = __CFADD__(v23, v24);
    unint64_t v9 = v23 + v24;
    if (v15) {
      return 0;
    }
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

Swift::Void __swiftcall NWActivity.submitMetrics(_:name:)(Swift::OpaquePointer _, Swift::String name)
{
  if (sub_18352FC64((uint64_t)_._rawValue))
  {
    uint64_t v3 = *(void *)(v2 + 16);
    sub_183D44BAC();
    nw_activity_submit_metrics(v3);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_183D456CC();
    __break(1u);
  }
}

BOOL static NWActivity.ReportingStrategy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t NWActivity.ReportingStrategy.hash(into:)()
{
  return sub_183D45B0C();
}

uint64_t NWActivity.ReportingStrategy.hashValue.getter()
{
  return sub_183D45B4C();
}

uint64_t NWActivity.CompletionReason.description.getter()
{
  if (*((unsigned __int8 *)v0 + 24) >= 2u)
  {
    uint64_t v2 = *v0;
    if (v0[1] | v0[2] | *v0)
    {
      if (*(_OWORD *)(v0 + 1) == 0 && v2 == 2) {
        int v4 = 3;
      }
      else {
        int v4 = 4;
      }
      if (v2 == 1 && *(_OWORD *)(v0 + 1) == 0) {
        int v1 = 2;
      }
      else {
        int v1 = v4;
      }
    }
    else
    {
      int v1 = 1;
    }
  }
  else
  {
    int v1 = 3;
  }
  nw_activity_completion_reason_to_string(v1);

  return sub_183D44C9C();
}

id static NWActivity.CompletionReason.failure(withUnderlyingError:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_domain);
  uint64_t v5 = sub_183D44AFC();
  uint64_t v7 = v6;

  id result = objc_msgSend(a1, sel_code);
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v7;
  *(void *)(a2 + 16) = result;
  *(unsigned char *)(a2 + 24) = 1;
  return result;
}

uint64_t static NWActivity.CompletionReason.failure(withUnderlyingError:)@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = *a1;
  if (*((unsigned char *)a1 + 4))
  {
    uint64_t result = sub_183D44AFC();
    uint64_t v6 = result;
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = sub_183D44AFC();
    uint64_t v8 = v4;
    uint64_t result = sub_183D449BC();
    int v3 = result;
  }
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = v3;
  *(unsigned char *)(a2 + 24) = 1;
  return result;
}

uint64_t sub_18352F37C()
{
  if (*((unsigned __int8 *)v0 + 24) >= 2u)
  {
    uint64_t v2 = *v0;
    if (v0[1] | v0[2] | *v0)
    {
      if (*(_OWORD *)(v0 + 1) == 0 && v2 == 2) {
        int v4 = 3;
      }
      else {
        int v4 = 4;
      }
      if (v2 == 1 && *(_OWORD *)(v0 + 1) == 0) {
        int v1 = 2;
      }
      else {
        int v1 = v4;
      }
    }
    else
    {
      int v1 = 1;
    }
  }
  else
  {
    int v1 = 3;
  }
  nw_activity_completion_reason_to_string(v1);

  return sub_183D44C9C();
}

uint64_t NWActivity.reportingStrategy.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = nw_activity_get_reporting_strategy(*(void **)(v1 + 16));
  if (result >= 4) {
    char v4 = 0;
  }
  else {
    char v4 = result;
  }
  *a1 = v4;
  return result;
}

void sub_18352F428(unsigned __int8 *a1, uint64_t a2)
{
}

void NWActivity.reportingStrategy.setter(unsigned __int8 *a1)
{
  nw_activity_set_reporting_strategy(*(void **)(v1 + 16), *a1);
}

void (*NWActivity.reportingStrategy.modify(uint64_t a1))(uint64_t a1)
{
  int v3 = *(void **)(v1 + 16);
  *(void *)a1 = v3;
  unsigned int reporting_strategy = nw_activity_get_reporting_strategy(v3);
  if (reporting_strategy >= 4) {
    char v5 = 0;
  }
  else {
    char v5 = reporting_strategy;
  }
  *(unsigned char *)(a1 + 8) = v5;
  return sub_18352F49C;
}

void sub_18352F49C(uint64_t a1)
{
}

uint64_t sub_18352F4A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (uint64_t)nw_activity_copy_parent_activity(*(void **)(*(void *)a1 + 16));
  uint64_t v4 = result;
  if (result)
  {
    _OWORD v5[3] = swift_getObjectType();
    v5[0] = v4;
    type metadata accessor for NWActivity();
    uint64_t v4 = swift_allocObject();
    uint64_t result = NWActivity.init(_:)((uint64_t)v5);
  }
  *a2 = v4;
  return result;
}

uint64_t NWActivity.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  NWActivity.init(_:)(a1);
  return v2;
}

void (*NWActivity.parentActivity.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  int v3 = *(void **)(v1 + 16);
  a1[1] = (uint64_t)v3;
  id v4 = nw_activity_copy_parent_activity(v3);
  if (v4)
  {
    id v5 = v4;
    v8[3] = swift_getObjectType();
    v8[0] = v5;
    uint64_t v6 = swift_allocObject();
    NWActivity.init(_:)((uint64_t)v8);
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a1 = v6;
  return sub_18352F610;
}

void sub_18352F610(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    if (v2) {
      int v3 = *(void **)(v2 + 16);
    }
    else {
      int v3 = 0;
    }
    id v4 = (void *)a1[1];
    goto LABEL_8;
  }
  id v4 = (void *)a1[1];
  if (v2)
  {
    int v3 = *(void **)(v2 + 16);
LABEL_8:
    nw_activity_set_parent_activity(v4, v3);
    swift_release();
    return;
  }

  nw_activity_set_parent_activity(v4, 0);
}

uint64_t NWActivity.isRetry.getter()
{
  return nw_activity_get_is_retry(*(void **)(v0 + 16));
}

uint64_t NWActivity.isActivated.getter()
{
  return nw_activity_is_activated(*(void **)(v0 + 16));
}

uint64_t NWActivity.isReported.getter()
{
  return nw_activity_is_selected_for_reporting(*(void **)(v0 + 16));
}

uint64_t NWActivity.isComplete.getter()
{
  return nw_activity_is_complete(*(void **)(v0 + 16));
}

uint64_t NWActivity.completionReason.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = nw_activity_get_completion_reason(*(void **)(v1 + 16));
  uint64_t v4 = (result - 2);
  if (v4 < 3) {
    uint64_t v5 = v4 + 1;
  }
  else {
    uint64_t v5 = 0;
  }
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 24) = 2;
  return result;
}

uint64_t NWActivity.duration.getter()
{
  return 1000000000000000 * nw_activity_get_duration(*(void **)(v0 + 16));
}

uint64_t NWActivity.activationTime.getter()
{
  return nw_activity_get_activation_time(*(void **)(v0 + 16));
}

uint64_t NWActivity.__allocating_init(retryOf:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = nw_activity_create_retry(*(void **)(a1 + 16));
  long long v4 = *(_OWORD *)(a1 + 24);
  swift_release();
  *(_OWORD *)(v2 + 24) = v4;
  return v2;
}

void *NWActivity.init(retryOf:)(uint64_t a1)
{
  v1[2] = nw_activity_create_retry(*(void **)(a1 + 16));
  v1[3] = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  swift_release();
  v1[4] = v3;
  return v1;
}

uint64_t NWActivity.__allocating_init(token:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  NWActivity.init(token:)(a1);
  return v2;
}

uint64_t NWActivity.init(_:)(uint64_t a1)
{
  sub_1834F26A8(a1, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61E90);
  if (swift_dynamicCast())
  {
    v1[2] = v6;
    uint64_t v3 = (void *)swift_unknownObjectRetain();
    v1[3] = nw_activity_get_domain(v3);
    unsigned int label = nw_activity_get_label(v6);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_2(a1);
    v1[4] = label;
    return (uint64_t)v1;
  }
  else
  {
    uint64_t result = sub_183D456CC();
    __break(1u);
  }
  return result;
}

xpc_object_t sub_18352F96C(uint64_t a1)
{
  xpc_object_t v2 = xpc_array_create(0, 0);
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1834F26A8(v4, (uint64_t)v11);
      sub_1834F26A8((uint64_t)v11, (uint64_t)v10);
      if (swift_dynamicCast())
      {
        uint64_t v5 = sub_183D44BAC();
        swift_bridgeObjectRelease();
        xpc_object_t v6 = xpc_string_create((const char *)(v5 + 32));
        swift_release();
        if (!v6) {
          goto LABEL_3;
        }
        goto LABEL_25;
      }
      sub_1834F26A8((uint64_t)v11, (uint64_t)v10);
      if (swift_dynamicCast()) {
        goto LABEL_8;
      }
      sub_1834F26A8((uint64_t)v11, (uint64_t)v10);
      if (swift_dynamicCast())
      {
        xpc_object_t v6 = xpc_uint64_create(value);
        if (!v6) {
          goto LABEL_3;
        }
        goto LABEL_25;
      }
      sub_1834F26A8((uint64_t)v11, (uint64_t)v10);
      if (swift_dynamicCast())
      {
LABEL_8:
        xpc_object_t v6 = xpc_int64_create(value);
        if (!v6) {
          goto LABEL_3;
        }
        goto LABEL_25;
      }
      sub_1834F26A8((uint64_t)v11, (uint64_t)v10);
      if (swift_dynamicCast())
      {
        xpc_object_t v6 = xpc_double_create(*(double *)&value);
        if (!v6) {
          goto LABEL_3;
        }
        goto LABEL_25;
      }
      sub_1834F26A8((uint64_t)v11, (uint64_t)v10);
      if (swift_dynamicCast())
      {
        xpc_object_t v6 = xpc_BOOL_create(value);
        if (!v6) {
          goto LABEL_3;
        }
LABEL_25:
        xpc_array_append_value(v2, v6);
        swift_unknownObjectRelease();
        goto LABEL_3;
      }
      sub_1834F26A8((uint64_t)v11, (uint64_t)v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F639D0);
      if (swift_dynamicCast())
      {
        uint64_t v7 = ((uint64_t (*)())sub_18352F96C)();
      }
      else
      {
        sub_1834F26A8((uint64_t)v11, (uint64_t)v10);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F639D8);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_3;
        }
        uint64_t v7 = ((uint64_t (*)())sub_18352FC64)();
      }
      xpc_object_t v6 = (xpc_object_t)v7;
      swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_25;
      }
LABEL_3:
      __swift_destroy_boxed_opaque_existential_2((uint64_t)v11);
      v4 += 32;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
    }
  }
  return v2;
}

xpc_object_t sub_18352FC64(uint64_t a1)
{
  xpc_object_t v2 = xpc_dictionary_create(0, 0, 0);
  uint64_t v21 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  xpc_object_t xdict = v2;
  int64_t v22 = (unint64_t)(v3 + 63) >> 6;
  xpc_object_t result = (xpc_object_t)swift_bridgeObjectRetain();
  int64_t v7 = 0;
  if (!v5) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v9 = v8 | (v7 << 6);
  while (2)
  {
    uint64_t v10 = *(void *)(a1 + 56);
    unsigned int v11 = (void *)(*(void *)(a1 + 48) + 16 * v9);
    uint64_t v12 = v11[1];
    *(void *)&long long v26 = *v11;
    *((void *)&v26 + 1) = v12;
    sub_1834F26A8(v10 + 32 * v9, (uint64_t)v27);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_183525370((uint64_t)&v26, (uint64_t)v28);
      if (!v28[1])
      {
        swift_release();
        return xdict;
      }
      sub_1835249AC(&v29, &v26);
      sub_1834F26A8((uint64_t)&v26, (uint64_t)v25);
      if (swift_dynamicCast())
      {
        uint64_t v16 = sub_183D44BAC();
        swift_bridgeObjectRelease();
        xpc_object_t v17 = xpc_string_create((const char *)(v16 + 32));
        swift_release();
        if (v17) {
          goto LABEL_36;
        }
        goto LABEL_5;
      }
      sub_1834F26A8((uint64_t)&v26, (uint64_t)v25);
      if (swift_dynamicCast())
      {
LABEL_34:
        xpc_object_t v18 = xpc_int64_create(value);
        goto LABEL_35;
      }
      sub_1834F26A8((uint64_t)&v26, (uint64_t)v25);
      if (swift_dynamicCast())
      {
        xpc_object_t v18 = xpc_uint64_create(value);
        goto LABEL_35;
      }
      sub_1834F26A8((uint64_t)&v26, (uint64_t)v25);
      if (swift_dynamicCast()) {
        goto LABEL_34;
      }
      sub_1834F26A8((uint64_t)&v26, (uint64_t)v25);
      if (swift_dynamicCast())
      {
        xpc_object_t v18 = xpc_double_create(*(double *)&value);
        goto LABEL_35;
      }
      sub_1834F26A8((uint64_t)&v26, (uint64_t)v25);
      if (swift_dynamicCast())
      {
        xpc_object_t v18 = xpc_BOOL_create(value);
LABEL_35:
        xpc_object_t v17 = v18;
        if (v18) {
          goto LABEL_36;
        }
        goto LABEL_5;
      }
      sub_1834F26A8((uint64_t)&v26, (uint64_t)v25);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F639D0);
      if (swift_dynamicCast())
      {
        uint64_t v20 = (uint64_t)sub_18352F96C(value);
      }
      else
      {
        sub_1834F26A8((uint64_t)&v26, (uint64_t)v25);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F639D8);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_5;
        }
        uint64_t v20 = sub_18352FC64();
      }
      xpc_object_t v17 = (xpc_object_t)v20;
      swift_bridgeObjectRelease();
      if (v17)
      {
LABEL_36:
        uint64_t v19 = sub_183D44BAC();
        swift_unknownObjectRetain_n();
        swift_bridgeObjectRelease();
        xpc_dictionary_set_value(xdict, (const char *)(v19 + 32), v17);
        swift_unknownObjectRelease_n();
        __swift_destroy_boxed_opaque_existential_2((uint64_t)&v26);
        xpc_object_t result = (xpc_object_t)swift_release();
        if (v5) {
          goto LABEL_6;
        }
        goto LABEL_8;
      }
LABEL_5:
      swift_bridgeObjectRelease();
      xpc_object_t result = (xpc_object_t)__swift_destroy_boxed_opaque_existential_2((uint64_t)&v26);
      if (v5) {
        goto LABEL_6;
      }
LABEL_8:
      int64_t v13 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
        goto LABEL_50;
      }
      if (v13 < v22)
      {
        unint64_t v14 = *(void *)(v21 + 8 * v13);
        if (v14) {
          goto LABEL_11;
        }
        int64_t v15 = v7 + 2;
        ++v7;
        if (v13 + 1 < v22)
        {
          unint64_t v14 = *(void *)(v21 + 8 * v15);
          if (v14) {
            goto LABEL_14;
          }
          int64_t v7 = v13 + 1;
          if (v13 + 2 < v22)
          {
            unint64_t v14 = *(void *)(v21 + 8 * (v13 + 2));
            if (v14)
            {
              v13 += 2;
              goto LABEL_11;
            }
            int64_t v15 = v13 + 3;
            int64_t v7 = v13 + 2;
            if (v13 + 3 < v22) {
              break;
            }
          }
        }
      }
LABEL_25:
      unint64_t v5 = 0;
      memset(v27, 0, sizeof(v27));
      long long v26 = 0u;
    }
    unint64_t v14 = *(void *)(v21 + 8 * v15);
    if (v14)
    {
LABEL_14:
      int64_t v13 = v15;
LABEL_11:
      unint64_t v5 = (v14 - 1) & v14;
      unint64_t v9 = __clz(__rbit64(v14)) + (v13 << 6);
      int64_t v7 = v13;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v22)
    {
      int64_t v7 = v22 - 1;
      goto LABEL_25;
    }
    unint64_t v14 = *(void *)(v21 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_11;
    }
  }
LABEL_50:
  __break(1u);
  return result;
}

uint64_t NWActivity.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_183530150(uint64_t *a1, uint64_t *a2)
{
  return _s7Network10NWActivityC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t NWActivity.description.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_description);
  uint64_t v2 = sub_183D44AFC();

  return v2;
}

uint64_t NWActivity.debugDescription.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_description);
  uint64_t v2 = sub_183D44AFC();

  return v2;
}

void NWActivity.playgroundDescription.getter(uint64_t *a1@<X8>)
{
  id v3 = objc_msgSend(*(id *)(v1 + 16), sel_description);
  uint64_t v4 = sub_183D44AFC();
  uint64_t v6 = v5;

  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = v4;
  a1[1] = v6;
}

void sub_183530270(uint64_t *a1@<X8>)
{
  id v3 = objc_msgSend(*(id *)(*(void *)v1 + 16), sel_description);
  uint64_t v4 = sub_183D44AFC();
  uint64_t v6 = v5;

  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = v4;
  a1[1] = v6;
}

uint64_t NWConnection.startActivity(_:)(uint64_t a1)
{
  return sub_183530308(a1, (void (*)(uint64_t))nw_connection_start_activity);
}

uint64_t NWConnection.endActivity(_:)(uint64_t a1)
{
  return sub_183530308(a1, (void (*)(uint64_t))nw_connection_end_activity);
}

uint64_t sub_183530308(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = *(void *)(v2 + 16);
  swift_getObjectType();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61E90);
  swift_dynamicCast();
  a2(v4);
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t NSURLSessionTask._nwActivity.getter()
{
  id v1 = objc_msgSend(v0, sel__nw_activity);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  _OWORD v5[3] = swift_getObjectType();
  v5[0] = v2;
  type metadata accessor for NWActivity();
  uint64_t v3 = swift_allocObject();
  NWActivity.init(_:)((uint64_t)v5);
  return v3;
}

id sub_183530428@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel__nw_activity);
  uint64_t v4 = (uint64_t)result;
  if (result)
  {
    _OWORD v5[3] = swift_getObjectType();
    v5[0] = v4;
    type metadata accessor for NWActivity();
    uint64_t v4 = swift_allocObject();
    id result = (id)NWActivity.init(_:)((uint64_t)v5);
  }
  *a2 = v4;
  return result;
}

uint64_t (*NSURLSessionTask._nwActivity.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  id v3 = objc_msgSend(v1, sel__nw_activity);
  if (v3)
  {
    _OWORD v5[3] = swift_getObjectType();
    v5[0] = v3;
    type metadata accessor for NWActivity();
    id v3 = (id)swift_allocObject();
    NWActivity.init(_:)((uint64_t)v5);
  }
  *a1 = v3;
  return sub_183530538;
}

uint64_t sub_183530538(uint64_t *a1, char a2)
{
  if ((a2 & 1) == 0) {
    return NSURLSessionTask._nwActivity.setter(*a1);
  }
  uint64_t v2 = swift_retain();
  NSURLSessionTask._nwActivity.setter(v2);

  return swift_release();
}

uint64_t _s7Network10NWActivityC16CompletionReasonO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v7 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 24);
  if (!*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24))
    {
      sub_18312A3B8(*(void *)a1, v2, v4, 0);
      sub_18312A3B8(v7, v6, v8, 0);
      return v3 == v7 && v2 == v6;
    }
    goto LABEL_46;
  }
  if (v5 != 1)
  {
    uint64_t v15 = v4 | v2;
    if (!(v4 | v2 | v3))
    {
      if (v9 != 2 || (v8 | v6 | v7) != 0) {
        goto LABEL_46;
      }
      sub_18312A3B8(0, 0, 0, 2);
      uint64_t v17 = 0;
      goto LABEL_45;
    }
    if (v3 != 1 || v15 != 0)
    {
      if (v3 != 2 || v15)
      {
        if (v9 != 2 || v7 != 3 || v8 | v6) {
          goto LABEL_46;
        }
        sub_18312A3B8(3, 0, 0, 2);
        uint64_t v17 = 3;
      }
      else
      {
        if (v9 != 2 || v7 != 2 || v8 | v6) {
          goto LABEL_46;
        }
        sub_18312A3B8(2, 0, 0, 2);
        uint64_t v17 = 2;
      }
LABEL_45:
      sub_18312A3B8(v17, 0, 0, 2);
      return 1;
    }
    if (v9 == 2 && v7 == 1 && !(v8 | v6))
    {
      uint64_t v13 = 1;
      sub_18312A3B8(1, 0, 0, 2);
      sub_18312A3B8(1, 0, 0, 2);
      return v13;
    }
LABEL_46:
    sub_18312A3A0(v7, v6, v8, v9);
    sub_18312A3B8(v3, v2, v4, v5);
    sub_18312A3B8(v7, v6, v8, v9);
    return 0;
  }
  if (v9 != 1)
  {
    swift_bridgeObjectRetain();
    goto LABEL_46;
  }
  uint64_t v10 = *(void *)a1;
  if (v3 == v7 && v2 == v6)
  {
    sub_18312A3A0(v10, v2, v8, 1);
    sub_18312A3A0(v3, v2, v4, 1);
    sub_18312A3B8(v3, v2, v4, 1);
    sub_18312A3B8(v3, v2, v8, 1);
  }
  else
  {
    char v12 = sub_183D4592C();
    sub_18312A3A0(v7, v6, v8, 1);
    sub_18312A3A0(v3, v2, v4, 1);
    sub_18312A3B8(v3, v2, v4, 1);
    sub_18312A3B8(v7, v6, v8, 1);
    uint64_t v13 = 0;
    if ((v12 & 1) == 0) {
      return v13;
    }
  }
  return v4 == v8;
}

uint64_t _s7Network10NWActivityC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_183D445FC();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v14 - v9;
  if (nw_activity_is_activated(*(void **)(a1 + 16))
    && nw_activity_is_activated(*(void **)(a2 + 16)))
  {
    NWActivity.token.getter();
    NWActivity.token.getter();
    char v11 = sub_183D445BC();
    char v12 = *(void (**)(char *, uint64_t))(v5 + 8);
    v12(v8, v4);
    v12(v10, v4);
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

unint64_t sub_1835309B4()
{
  unint64_t result = qword_1E8F639C8;
  if (!qword_1E8F639C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F639C8);
  }
  return result;
}

uint64_t sub_183530A08@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = NWActivity.reportingStrategy.getter(&v3);
  *a1 = v3;
  return result;
}

void sub_183530A4C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*(void *)a1) {
    char v3 = *(void **)(*(void *)a1 + 16);
  }
  else {
    char v3 = 0;
  }
  nw_activity_set_parent_activity(*(void **)(v2 + 16), v3);
}

uint64_t sub_183530A74()
{
  uint64_t v0 = swift_retain();
  return NSURLSessionTask._nwActivity.setter(v0);
}

uint64_t method lookup function for NWActivity(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWActivity);
}

uint64_t dispatch thunk of NWActivity.__allocating_init(retryOf:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of NWActivity.__allocating_init(token:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of NWActivity.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

unsigned char *storeEnumTagSinglePayload for NWActivity.ReportingStrategy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x183530BC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NWActivity.ReportingStrategy()
{
  return &type metadata for NWActivity.ReportingStrategy;
}

uint64_t assignWithCopy for NWActivity.CompletionReason(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_18312A3A0(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_18312A3B8(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for NWActivity.CompletionReason(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_18312A3B8(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_183530CB8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t NWProtocolOptions.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t NWProtocol.deinit()
{
  return v0;
}

BOOL static NWProtocolDefinition.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return nw_protocol_definition_is_equal(*(nw_protocol_definition_t *)(a1 + 32), *(nw_protocol_definition_t *)(a2 + 32));
}

uint64_t _s7Network20NWProtocolDefinitionC4nameSSvg_0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NWProtocolDefinition.deinit()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t NWProtocolDefinition.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

BOOL sub_183530DB0(uint64_t a1, uint64_t a2)
{
  return nw_protocol_definition_is_equal(*(nw_protocol_definition_t *)(*(void *)a1 + 32), *(nw_protocol_definition_t *)(*(void *)a2 + 32));
}

uint64_t sub_183530DD8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NWProtocolOptions.nw.getter()
{
  return swift_unknownObjectRetain();
}

void *sub_183530E14()
{
  uint64_t result = sub_183530E34();
  off_1E8F61E00 = result;
  return result;
}

void *sub_183530E34()
{
  sub_183531248();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_183D54840;
  *(void *)(inited + 32) = type metadata accessor for NWProtocolIP.Options();
  *(void *)(inited + 40) = type metadata accessor for NWProtocolQUIC.Options();
  *(void *)(inited + 48) = type metadata accessor for NWProtocolTCP.Options();
  *(void *)(inited + 56) = type metadata accessor for NWProtocolTLS.Options();
  *(void *)(inited + 64) = type metadata accessor for NWProtocolUDP.Options();
  *(void *)(inited + 72) = type metadata accessor for NWProtocolWebSocket.Options();
  *(void *)(inited + 80) = type metadata accessor for NWProtocolFramer.Options();
  *(void *)(inited + 88) = type metadata accessor for NWProtocolHTTP.Options();
  uint64_t v1 = type metadata accessor for NWProtocolHTTPEncoding.Options();
  uint64_t result = sub_1834B4B50((void *)1, 9, 1, (void *)inited);
  result[2] = 9;
  result[12] = v1;
  return result;
}

void sub_183530F34()
{
}

void *sub_183530F94()
{
  uint64_t result = (void *)sub_183530FB4();
  off_1E8F61D68 = result;
  return result;
}

uint64_t sub_183530FB4()
{
  sub_1835311E8();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_183D54840;
  *(void *)(v0 + 32) = type metadata accessor for NWProtocolIP.Metadata();
  *(void *)(v0 + 40) = type metadata accessor for NWProtocolQUIC.Metadata();
  *(void *)(v0 + 48) = type metadata accessor for NWProtocolTCP.Metadata();
  *(void *)(v0 + 56) = type metadata accessor for NWProtocolTLS.Metadata();
  *(void *)(v0 + 64) = type metadata accessor for NWProtocolUDP.Metadata();
  *(void *)(v0 + 72) = type metadata accessor for NWProtocolWebSocket.Metadata();
  *(void *)(v0 + 80) = type metadata accessor for NWProtocolFramer.Message();
  *(void *)(v0 + 88) = type metadata accessor for NWProtocolHTTP.Metadata();
  return v0;
}

void sub_183531064()
{
}

uint64_t NWProtocol.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NWProtocolDefinition()
{
  return self;
}

uint64_t method lookup function for NWProtocolDefinition(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWProtocolDefinition);
}

uint64_t dispatch thunk of NWProtocolDefinition.debugDescription.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t type metadata accessor for NWProtocolOptions()
{
  return self;
}

uint64_t method lookup function for NWProtocolOptions(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWProtocolOptions);
}

uint64_t type metadata accessor for NWProtocolMetadata()
{
  return self;
}

uint64_t method lookup function for NWProtocolMetadata(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWProtocolMetadata);
}

uint64_t type metadata accessor for NWProtocol()
{
  return self;
}

uint64_t method lookup function for NWProtocol(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWProtocol);
}

uint64_t sub_1835311E8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61D80);
  if (swift_isClassType()) {
    uint64_t v1 = v0;
  }
  else {
    uint64_t v1 = 0;
  }
  if (v1) {
    uint64_t v2 = (uint64_t *)&unk_1E8F61E50;
  }
  else {
    uint64_t v2 = (uint64_t *)&unk_1E8F61D88;
  }

  return __swift_instantiateConcreteTypeFromMangledName(v2);
}

uint64_t sub_183531248()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61E08);
  if (swift_isClassType()) {
    uint64_t v1 = v0;
  }
  else {
    uint64_t v1 = 0;
  }
  if (v1) {
    uint64_t v2 = (uint64_t *)&unk_1E8F61E50;
  }
  else {
    uint64_t v2 = (uint64_t *)&unk_1E8F61DE0;
  }

  return __swift_instantiateConcreteTypeFromMangledName(v2);
}

uint64_t sub_1835312A8(uint64_t a1)
{
  if (qword_1E8F61D78 != -1) {
    goto LABEL_13;
  }
  while (1)
  {
    uint64_t v2 = off_1E8F61D68;
    uint64_t v3 = *((void *)off_1E8F61D68 + 2);
    if (!v3) {
      return 0;
    }
    uint64_t v4 = *((void *)off_1E8F61D68 + 4);
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 88);
    swift_bridgeObjectRetain();
    if (v5(a1))
    {
LABEL_8:
      swift_bridgeObjectRelease();
      return v4;
    }
    uint64_t v6 = 0;
    uint64_t v7 = v3 - 1;
    while (1)
    {
      if (v7 == v6)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
      if ((unint64_t)(v6 + 1) >= v2[2]) {
        break;
      }
      uint64_t v4 = v2[v6++ + 5];
      if ((*(uint64_t (**)(uint64_t))(v4 + 88))(a1)) {
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_13:
    swift_once();
  }
}

uint64_t sub_1835313A8(uint64_t a1)
{
  if (qword_1E8F61DD0 != -1) {
    goto LABEL_13;
  }
  while (1)
  {
    uint64_t v2 = off_1E8F61E00;
    uint64_t v3 = *((void *)off_1E8F61E00 + 2);
    if (!v3) {
      return 0;
    }
    uint64_t v4 = *((void *)off_1E8F61E00 + 4);
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 88);
    swift_bridgeObjectRetain();
    if (v5(a1))
    {
LABEL_8:
      swift_bridgeObjectRelease();
      return v4;
    }
    uint64_t v6 = 0;
    uint64_t v7 = v3 - 1;
    while (1)
    {
      if (v7 == v6)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
      if ((unint64_t)(v6 + 1) >= v2[2]) {
        break;
      }
      uint64_t v4 = v2[v6++ + 5];
      if ((*(uint64_t (**)(uint64_t))(v4 + 88))(a1)) {
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_13:
    swift_once();
  }
}

uint64_t NWProtocolFramer.Options.__allocating_init(definition:)(uint64_t a1)
{
  return sub_183531FE4(a1, (uint64_t (*)(uint64_t))nw_framer_create_options);
}

uint64_t NWProtocolFramer.Definition.__allocating_init(implementation:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  NWProtocolFramer.Definition.init(implementation:)(a1, a2);
  return v4;
}

void *NWProtocolFramer.Definition.init(implementation:)(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 8))();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  v14[4] = sub_183531DC4;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  void v14[2] = sub_183531CC0;
  v14[3] = &block_descriptor_9;
  uint64_t v6 = _Block_copy(v14);
  swift_retain();
  swift_release();
  uint64_t v7 = sub_183D44BAC();
  swift_bridgeObjectRelease();
  nw_protocol_definition_t definition = nw_framer_create_definition((const char *)(v7 + 32), 0, v6);
  swift_release();
  _Block_release(v6);
  v2[4] = definition;
  id v9 = objc_msgSend((id)swift_unknownObjectRetain(), sel_description);
  uint64_t v10 = sub_183D44AFC();
  uint64_t v12 = v11;

  swift_unknownObjectRelease();
  v2[2] = v10;
  v2[3] = v12;
  swift_release();
  return v2;
}

uint64_t sub_183531698(NSObject *a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for NWProtocolFramer.Instance();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 16);
  swift_unknownObjectRetain();
  uint64_t v8 = swift_retain();
  uint64_t v9 = v7(v8, a2, a3);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v9;
  v10[3] = a3;
  v10[4] = v6;
  unsigned __int8 v25 = sub_183533D90;
  long long v26 = v10;
  uint64_t v21 = MEMORY[0x1E4F143A8];
  uint64_t v22 = 1107296256;
  unint64_t v23 = sub_183531AB0;
  unsigned __int8 v24 = &block_descriptor_56;
  uint64_t v11 = _Block_copy(&v21);
  swift_retain();
  swift_unknownObjectRetain();
  swift_release();
  nw_framer_set_input_handler(a1, v11);
  _Block_release(v11);
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v9;
  uint64_t v12[3] = a3;
  void v12[4] = v6;
  unsigned __int8 v25 = sub_183533DEC;
  long long v26 = v12;
  uint64_t v21 = MEMORY[0x1E4F143A8];
  uint64_t v22 = 1107296256;
  unint64_t v23 = sub_183531BCC;
  unsigned __int8 v24 = &block_descriptor_62;
  uint64_t v13 = _Block_copy(&v21);
  swift_retain();
  swift_unknownObjectRetain();
  swift_release();
  nw_framer_set_output_handler(a1, v13);
  _Block_release(v13);
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v9;
  v14[3] = a3;
  v14[4] = v6;
  unsigned __int8 v25 = sub_183533DFC;
  long long v26 = v14;
  uint64_t v21 = MEMORY[0x1E4F143A8];
  uint64_t v22 = 1107296256;
  unint64_t v23 = sub_1832E6C64;
  unsigned __int8 v24 = &block_descriptor_68;
  uint64_t v15 = _Block_copy(&v21);
  swift_retain();
  swift_unknownObjectRetain();
  swift_release();
  nw_framer_set_wakeup_handler(a1, v15);
  _Block_release(v15);
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = v9;
  v16[3] = a3;
  void v16[4] = v6;
  unsigned __int8 v25 = sub_183533E58;
  long long v26 = v16;
  uint64_t v21 = MEMORY[0x1E4F143A8];
  uint64_t v22 = 1107296256;
  unint64_t v23 = sub_183531C64;
  unsigned __int8 v24 = &block_descriptor_74;
  uint64_t v17 = _Block_copy(&v21);
  swift_retain();
  swift_unknownObjectRetain();
  swift_release();
  nw_framer_set_stop_handler(a1, v17);
  _Block_release(v17);
  xpc_object_t v18 = (void *)swift_allocObject();
  v18[2] = v9;
  v18[3] = a3;
  void v18[4] = v6;
  unsigned __int8 v25 = sub_183533EF8;
  long long v26 = v18;
  uint64_t v21 = MEMORY[0x1E4F143A8];
  uint64_t v22 = 1107296256;
  unint64_t v23 = sub_1832E6C64;
  unsigned __int8 v24 = &block_descriptor_80;
  uint64_t v19 = _Block_copy(&v21);
  swift_retain();
  swift_unknownObjectRetain();
  swift_release();
  nw_framer_set_cleanup_handler(a1, v19);
  _Block_release(v19);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(a3 + 24))(&v21, v6, a2, a3);
  swift_unknownObjectRelease();
  swift_release();
  if ((_BYTE)v21) {
    return 2;
  }
  else {
    return 1;
  }
}

uint64_t sub_183531AB0(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  uint64_t v3 = v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_183531B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType = swift_getObjectType();
  type metadata accessor for NWProtocolFramer.Message();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 40);
  swift_unknownObjectRetain();
  v14(a7, v13, a3, a4, ObjectType, a6);

  return swift_release();
}

uint64_t sub_183531BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v9(a2, a3, a4, a5);
  swift_release();
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_183531C64(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  LOBYTE(v1) = v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  return v1 & 1;
}

uint64_t sub_183531CC0(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  uint64_t v3 = v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t NWProtocolFramer.Definition.deinit()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t NWProtocolFramer.Definition.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_183531D84(void *a1)
{
  return nw_protocol_options_is_framer(a1);
}

uint64_t NWProtocolFramer.Options.init(definition:)(uint64_t a1)
{
  return sub_18353206C(a1, (uint64_t (*)(uint64_t))nw_framer_create_options);
}

uint64_t sub_183531DB4()
{
  return swift_deallocObject();
}

uint64_t sub_183531DC4(NSObject *a1)
{
  return sub_183531698(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

double sub_183531DCC@<D0>(_OWORD *a1@<X8>)
{
  return sub_183532294((uint64_t (*)(uint64_t, uint64_t))nw_framer_options_copy_object_value, a1);
}

uint64_t sub_183531DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18353233C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))nw_framer_options_set_object_value);
}

uint64_t sub_183531DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61D90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void (*sub_183531E64(void *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  uint64_t v7 = (char *)malloc(0x58uLL);
  *a1 = v7;
  uint64_t v8 = v7 + 32;
  *((void *)v7 + 9) = a3;
  *((void *)v7 + 10) = v3;
  *((void *)v7 + 8) = a2;
  uint64_t v9 = *(NSObject **)(v3 + 16);
  uint64_t v10 = sub_183D44BAC();
  id v11 = nw_framer_options_copy_object_value(v9, (const char *)(v10 + 32));
  swift_release();
  if (v11)
  {
    sub_183D453DC();
    swift_unknownObjectRelease();
  }
  else
  {
    *uint64_t v8 = 0u;
    *((_OWORD *)v7 + 3) = 0u;
  }
  sub_183531F48((uint64_t)v8, (uint64_t)v7);
  return sub_183531F30;
}

void sub_183531F30(uint64_t *a1, char a2)
{
}

uint64_t sub_183531F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61D90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_183531FB4(NSObject *a1)
{
  return nw_protocol_metadata_is_framer_message(a1);
}

uint64_t NWProtocolFramer.Message.__allocating_init(definition:)(uint64_t a1)
{
  return sub_183531FE4(a1, (uint64_t (*)(uint64_t))nw_framer_protocol_create_message);
}

uint64_t sub_183531FE4(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = swift_unknownObjectRetain();
  uint64_t v5 = a2(v4);
  swift_unknownObjectRelease();
  swift_release();
  *(void *)(v3 + 16) = v5;
  return v3;
}

uint64_t NWProtocolFramer.Message.init(definition:)(uint64_t a1)
{
  return sub_18353206C(a1, (uint64_t (*)(uint64_t))nw_framer_protocol_create_message);
}

uint64_t sub_18353206C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = swift_unknownObjectRetain();
  uint64_t v5 = a2(v4);
  swift_unknownObjectRelease();
  swift_release();
  *(void *)(v2 + 16) = v5;
  return v2;
}

uint64_t NWProtocolFramer.Message.__allocating_init(instance:)()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = swift_unknownObjectRetain();
  nw_framer_message_t v2 = nw_framer_message_create(v1);
  swift_unknownObjectRelease();
  swift_release();
  *(void *)(v0 + 16) = v2;
  return v0;
}

uint64_t NWProtocolFramer.Message.init(instance:)()
{
  uint64_t v1 = swift_unknownObjectRetain();
  nw_framer_message_t v2 = nw_framer_message_create(v1);
  swift_unknownObjectRelease();
  swift_release();
  *(void *)(v0 + 16) = v2;
  return v0;
}

double sub_183532184@<D0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, _OWORD *a3@<X8>)
{
  uint64_t v5 = *(void *)(*(void *)a1 + 16);
  uint64_t v6 = sub_183D44BAC();
  uint64_t v7 = a2(v5, v6 + 32);
  swift_release();
  if (v7)
  {
    sub_183D453DC();
    swift_unknownObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_18353221C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t (*a5)(unsigned char *, uint64_t, uint64_t))
{
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  sub_183531DFC(a1, (uint64_t)v9);
  swift_bridgeObjectRetain();
  return a5(v9, v6, v7);
}

double sub_18353227C@<D0>(_OWORD *a1@<X8>)
{
  return sub_183532294((uint64_t (*)(uint64_t, uint64_t))nw_framer_message_copy_object_value, a1);
}

double sub_183532294@<D0>(uint64_t (*a1)(uint64_t, uint64_t)@<X2>, _OWORD *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = sub_183D44BAC();
  uint64_t v7 = a1(v5, v6 + 32);
  swift_release();
  if (v7)
  {
    sub_183D453DC();
    swift_unknownObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_183532324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18353233C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))nw_framer_message_set_object_value);
}

uint64_t sub_18353233C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(v4 + 16);
  sub_183531DFC(a1, (uint64_t)v16);
  uint64_t v8 = v17;
  if (v17)
  {
    uint64_t v9 = __swift_project_boxed_opaque_existential_2(v16, v17);
    uint64_t v10 = *(void *)(v8 - 8);
    MEMORY[0x1F4188790](v9);
    uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v10 + 16))(v12);
    uint64_t v13 = sub_183D4591C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
    __swift_destroy_boxed_opaque_existential_2((uint64_t)v16);
  }
  else
  {
    uint64_t v13 = 0;
  }
  uint64_t v14 = sub_183D44BAC();
  swift_bridgeObjectRelease();
  a4(v7, v14 + 32, v13);
  swift_unknownObjectRelease();
  sub_183138A24(a1, (uint64_t *)&unk_1E8F61D90);
  return swift_release();
}

void (*sub_1835324C8(void *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  uint64_t v7 = (char *)malloc(0x58uLL);
  *a1 = v7;
  uint64_t v8 = v7 + 32;
  *((void *)v7 + 9) = a3;
  *((void *)v7 + 10) = v3;
  *((void *)v7 + 8) = a2;
  uint64_t v9 = *(NSObject **)(v3 + 16);
  uint64_t v10 = sub_183D44BAC();
  id v11 = nw_framer_message_copy_object_value(v9, (const char *)(v10 + 32));
  swift_release();
  if (v11)
  {
    sub_183D453DC();
    swift_unknownObjectRelease();
  }
  else
  {
    *uint64_t v8 = 0u;
    *((_OWORD *)v7 + 3) = 0u;
  }
  sub_183531F48((uint64_t)v8, (uint64_t)v7);
  return sub_183532594;
}

void sub_183532594(uint64_t *a1, char a2)
{
}

void sub_1835325AC(uint64_t *a1, char a2, void (*a3)(void *, uint64_t, uint64_t))
{
  uint64_t v4 = (void *)*a1;
  if (a2)
  {
    uint64_t v5 = v4[9];
    uint64_t v6 = v4[8];
    sub_183531DFC(*a1, (uint64_t)(v4 + 4));
    swift_bridgeObjectRetain();
    a3(v4 + 4, v6, v5);
    sub_183138A24((uint64_t)v4, (uint64_t *)&unk_1E8F61D90);
  }
  else
  {
    uint64_t v7 = v4[9];
    uint64_t v8 = v4[8];
    swift_bridgeObjectRetain();
    a3(v4, v8, v7);
  }

  free(v4);
}

uint64_t NWProtocolFramer.Message.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t NWProtocolFramer.Instance.debugDescription.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_description);
  uint64_t v2 = sub_183D44AFC();

  return v2;
}

Swift::Void __swiftcall NWProtocolFramer.Instance.markReady()()
{
  nw_framer_mark_ready(*(nw_framer_t *)(v0 + 16));
}

void NWProtocolFramer.Instance.markFailed(error:)(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 4) == 255)
  {
    uint64_t v2 = *(NSObject **)(v1 + 16);
    int v3 = 0;
LABEL_5:
    nw_framer_mark_failed_with_error(v2, v3);
    return;
  }
  int v4 = *(_DWORD *)a1;
  if (*(unsigned char *)(a1 + 4))
  {
    uint64_t v2 = *(NSObject **)(v1 + 16);
    int v3 = v4;
    goto LABEL_5;
  }
  uint64_t v5 = *(NSObject **)(v1 + 16);
  swift_unknownObjectRetain();
  int v6 = sub_183D449BC();
  nw_framer_mark_failed_with_error(v5, v6);

  swift_unknownObjectRelease();
}

uint64_t NWProtocolFramer.Instance.parseInput(minimumIncompleteLength:maximumLength:parse:)(size_t a1, size_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(NSObject **)(v4 + 16);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a4;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_183532960;
  *(void *)(v11 + 24) = v10;
  v15[4] = sub_18353299C;
  v15[5] = v11;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 1107296256;
  void v15[2] = sub_1835329C4;
  v15[3] = &block_descriptor_9;
  uint64_t v12 = _Block_copy(v15);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  BOOL v13 = nw_framer_parse_input(v9, a1, a2, 0, v12);
  swift_unknownObjectRelease();
  _Block_release(v12);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v9 & 1) == 0) {
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_183532910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, void, uint64_t))
{
  if (a1) {
    uint64_t v4 = a1 + a2;
  }
  else {
    uint64_t v4 = 0;
  }
  return a4(a1, v4, 0, a3);
}

uint64_t sub_183532950()
{
  return swift_deallocObject();
}

uint64_t sub_183532964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_18353298C()
{
  return swift_deallocObject();
}

uint64_t sub_18353299C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1835329C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a1 + 32))(a2, a3, a4);
}

uint64_t NWProtocolFramer.Instance.deliverInput(data:message:isComplete:)(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  void v22[3] = *MEMORY[0x1E4F143B8];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      swift_retain_n();
      swift_retain_n();
      sub_1832E5D6C(a1, a2);
      sub_183533760((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, v4, a3, a4 & 1);
      sub_1832E5E9C(a1, a2);
      break;
    case 2uLL:
      uint64_t v16 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v17 = *(void *)(a1 + 16);
      uint64_t v18 = *(void *)(a1 + 24);
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      swift_retain();
      sub_183533760(v17, v18, v16, v4, a3, a4 & 1);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v22, 0, 14);
      uint64_t v19 = *(NSObject **)(v4 + 16);
      uint64_t v20 = *(NSObject **)(a3 + 16);
      swift_retain();
      swift_retain();
      BOOL v12 = a4 & 1;
      BOOL v13 = v19;
      size_t v14 = 0;
      uint64_t v15 = v20;
      goto LABEL_5;
    default:
      v22[0] = a1;
      LOWORD(v22[1]) = a2;
      BYTE2(v22[1]) = BYTE2(a2);
      BYTE3(v22[1]) = BYTE3(a2);
      BYTE4(v22[1]) = BYTE4(a2);
      size_t v9 = BYTE6(a2);
      BYTE5(v22[1]) = BYTE5(a2);
      uint64_t v10 = *(NSObject **)(v4 + 16);
      uint64_t v11 = *(NSObject **)(a3 + 16);
      swift_retain();
      swift_retain();
      BOOL v12 = a4 & 1;
      BOOL v13 = v10;
      size_t v14 = v9;
      uint64_t v15 = v11;
LABEL_5:
      nw_framer_deliver_input(v13, (const uint8_t *)v22, v14, v15, v12);
      break;
  }
  swift_release();
  return swift_release();
}

BOOL NWProtocolFramer.Instance.deliverInputNoCopy(length:message:isComplete:)(size_t input_length, uint64_t a2, char a3)
{
  return nw_framer_deliver_input_no_copy(*(nw_framer_t *)(v3 + 16), input_length, *(nw_framer_message_t *)(a2 + 16), a3 & 1);
}

Swift::Void __swiftcall NWProtocolFramer.Instance.passThroughInput()()
{
  nw_framer_pass_through_input(*(nw_framer_t *)(v0 + 16));
}

uint64_t NWProtocolFramer.Instance.parseOutput(minimumIncompleteLength:maximumLength:parse:)(size_t a1, size_t a2, uint64_t a3, uint64_t a4)
{
  size_t v9 = *(NSObject **)(v4 + 16);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a4;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_183532960;
  *(void *)(v11 + 24) = v10;
  v15[4] = sub_183533F70;
  v15[5] = v11;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 1107296256;
  void v15[2] = sub_1835329C4;
  v15[3] = &block_descriptor_19;
  BOOL v12 = _Block_copy(v15);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  BOOL v13 = nw_framer_parse_output(v9, a1, a2, 0, v12);
  swift_unknownObjectRelease();
  _Block_release(v12);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v9 & 1) == 0) {
    return v13;
  }
  __break(1u);
  return result;
}

void NWProtocolFramer.Instance.writeOutput(data:)()
{
  uint64_t v1 = *(NSObject **)(v0 + 16);
  swift_unknownObjectRetain();
  uint64_t v2 = (void *)sub_183D4452C();
  output_data = NWCreateDispatchDataFromNSData(v2, v3);

  if (output_data)
  {
    nw_framer_write_output_data(v1, output_data);
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void NWProtocolFramer.Instance.writeOutput(discontiguousData:)()
{
  uint64_t v1 = *(NSObject **)(v0 + 16);
  swift_unknownObjectRetain();
  uint64_t v2 = sub_183D449FC();
  nw_framer_write_output_data(v1, v2);
  swift_unknownObjectRelease();
}

void NWProtocolFramer.Instance.writeOutput<A>(data:)(void *a1, uint64_t a2, uint64_t a3)
{
  v33[1] = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F62DC0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a2 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v6);
  v33[0] = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  size_t v14 = (char *)v33 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v33 - v15;
  uint64_t v17 = sub_183D44A1C();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = *(NSObject **)(v9 + 16);
  uint64_t v34 = a1;
  ((void (*)(char *, void *, uint64_t))isa)(v16, a1, a2);
  int v22 = swift_dynamicCast();
  unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  if (v22)
  {
    v23(v8, 0, 1, v17);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v8, v17);
    unsigned __int8 v24 = *(NSObject **)(v35 + 16);
    swift_unknownObjectRetain();
    unsigned __int8 v25 = sub_183D449FC();
    nw_framer_write_output_data(v24, v25);
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    return;
  }
  long long v26 = v35;
  v23(v8, 1, 1, v17);
  sub_183138A24((uint64_t)v8, (uint64_t *)&unk_1E8F62DC0);
  unsigned __int8 v27 = v34;
  ((void (*)(char *, void *, uint64_t))isa)(v14, v34, a2);
  if (swift_dynamicCast())
  {
    a2 = v36;
    unint64_t v28 = v37;
    isa = v26[2].isa;
    swift_unknownObjectRetain();
    unsigned __int8 v27 = (void *)sub_183D4452C();
    long long v26 = NWCreateDispatchDataFromNSData(v27, v29);

    if (v26) {
      goto LABEL_7;
    }
    __break(1u);
  }
  ((void (*)(void, void *, uint64_t))isa)(v33[0], v27, a2);
  a2 = sub_183D4457C();
  unint64_t v28 = v30;
  isa = v26[2].isa;
  swift_unknownObjectRetain();
  unint64_t v31 = (void *)sub_183D4452C();
  long long v26 = NWCreateDispatchDataFromNSData(v31, v32);

  if (!v26)
  {
    __break(1u);
    return;
  }
LABEL_7:
  nw_framer_write_output_data(isa, v26);
  swift_unknownObjectRelease();

  sub_1832E5E9C(a2, v28);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> NWProtocolFramer.Instance.writeOutputNoCopy(length:)(Swift::Int length)
{
  if (!nw_framer_write_output_no_copy(*(nw_framer_t *)(v1 + 16), length))
  {
    sub_1834AC424();
    swift_allocError();
    *(_DWORD *)uint64_t v2 = 22;
    *(unsigned char *)(v2 + 4) = 0;
    swift_willThrow();
  }
}

Swift::Void __swiftcall NWProtocolFramer.Instance.passThroughOutput()()
{
  nw_framer_pass_through_output(*(nw_framer_t *)(v0 + 16));
}

void NWProtocolFramer.Instance.scheduleWakeup(wakeupTime:)(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    uint64_t v2 = -1;
  }
  else {
    uint64_t v2 = *(void *)a1;
  }
  nw_framer_schedule_wakeup(*(nw_framer_t *)(v1 + 16), v2);
}

uint64_t NWProtocolFramer.Instance.async(execute:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(NSObject **)(v2 + 16);
  void v6[4] = a1;
  v6[5] = a2;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  _OWORD v6[2] = sub_183137440;
  v6[3] = &block_descriptor_22;
  uint64_t v4 = _Block_copy(v6);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  nw_framer_async(v3, v4);
  _Block_release(v4);
  return swift_unknownObjectRelease();
}

uint64_t NWProtocolFramer.Instance.remote.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1835334B0((uint64_t (*)(void))nw_framer_copy_remote_endpoint, a1);
}

uint64_t NWProtocolFramer.Instance.local.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1835334B0((uint64_t (*)(void))nw_framer_copy_local_endpoint, a1);
}

uint64_t sub_1835334B0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1(*(void *)(v2 + 16));

  return sub_18315A830(v4, a2);
}

uint64_t NWProtocolFramer.Instance.parameters.getter()
{
  nw_parameters_t v1 = nw_framer_copy_parameters(*(nw_framer_t *)(v0 + 16));
  type metadata accessor for NWParameters();
  uint64_t v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61EA0);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 24) = 0;
  *(void *)(v3 + 16) = v1;
  *(void *)(v2 + 16) = v3;
  return v2;
}

uint64_t NWProtocolFramer.Instance.options.getter()
{
  nw_protocol_options_t v1 = nw_framer_copy_options(*(nw_framer_t *)(v0 + 16));
  type metadata accessor for NWProtocolFramer.Options();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t NWProtocolFramer.Instance.prependApplicationProtocol(options:)(uint64_t a1)
{
  return sub_1835335F0(a1, (uint64_t (*)(void, void))nw_framer_prepend_application_protocol);
}

uint64_t NWProtocolFramer.Instance.prependApplicationProtocolUnsafe(options:)(uint64_t a1)
{
  return sub_1835335F0(a1, (uint64_t (*)(void, void))nw_framer_prepend_application_protocol_unsafe);
}

uint64_t sub_1835335F0(uint64_t a1, uint64_t (*a2)(void, void))
{
  uint64_t result = a2(*(void *)(v2 + 16), *(void *)(a1 + 16));
  if (!result)
  {
    sub_1834AC424();
    swift_allocError();
    *(_DWORD *)uint64_t v4 = 22;
    *(unsigned char *)(v4 + 4) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t NWProtocolFramer.Instance.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t NWProtocolFramer.Instance.__deallocating_deinit()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

BOOL static NWProtocolFramer.StartResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t NWProtocolFramer.StartResult.hash(into:)()
{
  return sub_183D45B0C();
}

uint64_t NWProtocolFramer.StartResult.hashValue.getter()
{
  return sub_183D45B4C();
}

uint64_t NWProtocolFramer.deinit()
{
  return v0;
}

uint64_t NWProtocolFramer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_183533760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result = sub_183D4434C();
  uint64_t v12 = (const uint8_t *)result;
  if (result)
  {
    uint64_t result = sub_183D4437C();
    if (__OFSUB__(a1, result))
    {
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
    v12 += a1 - result;
  }
  BOOL v13 = __OFSUB__(a2, a1);
  int64_t v14 = a2 - a1;
  if (v13)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t result = sub_183D4436C();
  if (!v12)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  if (result >= v14) {
    size_t v15 = v14;
  }
  else {
    size_t v15 = result;
  }
  nw_framer_deliver_input(*(nw_framer_t *)(a4 + 16), v12, v15, *(nw_framer_message_t *)(a5 + 16), a6 & 1);
  swift_release();
  return swift_release();
}

uint64_t sub_183533818()
{
  return swift_deallocObject();
}

uint64_t sub_183533828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1) {
    uint64_t v4 = a1 + a2;
  }
  else {
    uint64_t v4 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t))(v3 + 16))(a1, v4, 0, a3);
}

uint64_t sub_183533864()
{
  return swift_deallocObject();
}

uint64_t type metadata accessor for NWProtocolFramer.Options()
{
  return self;
}

unint64_t sub_18353389C()
{
  unint64_t result = qword_1E8F63AA0;
  if (!qword_1E8F63AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63AA0);
  }
  return result;
}

double sub_1835338F0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_183532184(a1, (uint64_t (*)(uint64_t, uint64_t))nw_framer_options_copy_object_value, a2);
}

uint64_t sub_18353391C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_18353221C(a1, a2, a3, a4, (uint64_t (*)(unsigned char *, uint64_t, uint64_t))sub_183531DE4);
}

uint64_t sub_183533948()
{
  return 0;
}

double sub_183533958@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_183532184(a1, (uint64_t (*)(uint64_t, uint64_t))nw_framer_message_copy_object_value, a2);
}

uint64_t sub_183533984(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_18353221C(a1, a2, a3, a4, (uint64_t (*)(unsigned char *, uint64_t, uint64_t))sub_183532324);
}

uint64_t sub_1835339B0()
{
  return 0;
}

uint64_t type metadata accessor for NWProtocolFramer()
{
  return self;
}

uint64_t type metadata accessor for NWProtocolFramer.Definition()
{
  return self;
}

uint64_t method lookup function for NWProtocolFramer.Definition(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWProtocolFramer.Definition);
}

uint64_t dispatch thunk of NWProtocolFramer.Definition.__allocating_init(implementation:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for NWProtocolFramer.Options(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWProtocolFramer.Options);
}

uint64_t dispatch thunk of NWProtocolFramer.Options.__allocating_init(definition:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of NWProtocolFramer.Options.subscript.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of NWProtocolFramer.Options.subscript.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of NWProtocolFramer.Options.subscript.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t type metadata accessor for NWProtocolFramer.Message()
{
  return self;
}

uint64_t method lookup function for NWProtocolFramer.Message(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWProtocolFramer.Message);
}

uint64_t dispatch thunk of NWProtocolFramer.Message.__allocating_init(definition:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of NWProtocolFramer.Message.__allocating_init(instance:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of NWProtocolFramer.Message.subscript.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of NWProtocolFramer.Message.subscript.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of NWProtocolFramer.Message.subscript.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t type metadata accessor for NWProtocolFramer.Instance()
{
  return self;
}

uint64_t method lookup function for NWProtocolFramer.Instance(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWProtocolFramer.Instance);
}

ValueMetadata *type metadata accessor for NWProtocolFramer.Instance.WakeupTime()
{
  return &type metadata for NWProtocolFramer.Instance.WakeupTime;
}

unsigned char *storeEnumTagSinglePayload for NWProtocolFramer.StartResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x183533CB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NWProtocolFramer.StartResult()
{
  return &type metadata for NWProtocolFramer.StartResult;
}

uint64_t dispatch thunk of static NWProtocolFramerImplementation.label.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NWProtocolFramerImplementation.init(framer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of NWProtocolFramerImplementation.start(framer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of NWProtocolFramerImplementation.handleInput(framer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of NWProtocolFramerImplementation.handleOutput(framer:message:messageLength:isComplete:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of NWProtocolFramerImplementation.wakeup(framer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of NWProtocolFramerImplementation.stop(framer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of NWProtocolFramerImplementation.cleanup(framer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_183533D90()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v2, ObjectType, v1);
}

uint64_t sub_183533DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_183531B0C(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

uint64_t sub_183533DFC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, ObjectType, v1);
}

uint64_t sub_183533E58()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 56))(v2, ObjectType, v1) & 1;
}

uint64_t objectdestroy_52Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_183533EF8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 64))(v2, ObjectType, v1);
}

uint64_t sub_183533F90(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1835249AC((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_18359E818(v9, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v8;
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_183D456AC();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_183138A24(a1, (uint64_t *)&unk_1E8F61D90);
    sub_18359AF68(a2, v9);
    uint64_t v7 = sub_183D456AC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
    return sub_183138A24((uint64_t)v9, (uint64_t *)&unk_1E8F61D90);
  }
}

uint64_t sub_1835340B0(uint64_t a1, void *a2)
{
  int v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FC8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NWActorDiscoveryMechanism(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_183138A24(a1, &qword_1E8F62FC8);
    sub_18359B2C0(a2, (uint64_t)v8);
    sub_183537CF4((uint64_t)a2, (uint64_t (*)(void))type metadata accessor for NWActorID);
    return sub_183138A24((uint64_t)v8, &qword_1E8F62FC8);
  }
  else
  {
    sub_183537D54(a1, (uint64_t)v11, type metadata accessor for NWActorDiscoveryMechanism);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    *int v3 = 0x8000000000000000;
    sub_18359ED1C((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *int v3 = v16;
    swift_bridgeObjectRelease();
    return sub_183537CF4((uint64_t)a2, (uint64_t (*)(void))type metadata accessor for NWActorID);
  }
}

uint64_t sub_183534298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FE8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for NWActorSystem.ServerRole();
  MEMORY[0x1F4188790](v11);
  BOOL v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_183138A24(a1, &qword_1E8F62FE8);
    sub_18359B474(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_183138A24((uint64_t)v10, &qword_1E8F62FE8);
  }
  else
  {
    sub_183537D54(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NWActorSystem.ServerRole);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *unsigned int v4 = 0x8000000000000000;
    sub_18359EEC8((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *unsigned int v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_183534468(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1E8F619F0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB266A00);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_183138A24(a1, qword_1E8F619F0);
    unint64_t v13 = sub_18359A5D0(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *int v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1835A0F50();
        uint64_t v17 = v21;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, v9);
      sub_1835509AC(v15, v17);
      *int v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_183138A24((uint64_t)v8, qword_1E8F619F0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *int v3 = 0x8000000000000000;
    sub_18359F05C((uint64_t)v12, a2, v18);
    *int v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1835346C8(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F63C00);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F64A30);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_183138A24(a1, (uint64_t *)&unk_1E8F63C00);
    sub_18359B62C(a2, (uint64_t)v8);
    uint64_t v13 = sub_183D445FC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_183138A24((uint64_t)v8, (uint64_t *)&unk_1E8F63C00);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *int v3 = 0x8000000000000000;
    sub_18359F344((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *int v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_183D445FC();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1835348F8()
{
  uint64_t v0 = sub_183D4498C();
  __swift_allocate_value_buffer(v0, qword_1E8F63B10);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E8F63B10);
  if (qword_1E8F621C0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1E8F7A940);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t NWActorSystemResultHandler.onReturn<A>(value:)(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  swift_conformsToProtocol();
  v3[13] = swift_conformsToProtocol();
  v3[14] = type metadata accessor for ReplyEnvelope();
  v3[15] = swift_task_alloc();
  uint64_t v4 = sub_183D456AC();
  v3[16] = v4;
  v3[17] = *(void *)(v4 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = type metadata accessor for NWFileSerializationContext(0);
  v3[20] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_183534B0C, 0, 0);
}

uint64_t sub_183534B0C()
{
  uint64_t v33 = v0 + 2;
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[12];
  uint64_t v31 = sub_183535114();
  char v30 = v4;
  uint64_t v5 = (int *)type metadata accessor for NWActorSystemResultHandler();
  sub_1834BDE24(v3 + v5[7], v1);
  sub_1835366D4(v3 + v5[6], v1 + *(int *)(v2 + 20), (uint64_t (*)(void))type metadata accessor for NWActorID);
  sub_183D442AC();
  swift_allocObject();
  uint64_t v6 = sub_183D4429C();
  v0[21] = v6;
  if (qword_1E8F621B8 != -1) {
    swift_once();
  }
  uint64_t v8 = v0[19];
  uint64_t v7 = v0[20];
  uint64_t v10 = v0[17];
  uint64_t v9 = v0[18];
  uint64_t v11 = v0[16];
  uint64_t v12 = v0[12];
  uint64_t v32 = v0[11];
  uint64_t v13 = __swift_project_value_buffer(v11, (uint64_t)qword_1E8F7A928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v13, v11);
  v0[5] = v8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v33);
  sub_1835366D4(v7, (uint64_t)boxed_opaque_existential_0, type metadata accessor for NWFileSerializationContext);
  unint64_t v15 = (void (*)(void *, void))sub_183D4428C();
  sub_183533F90((uint64_t)v33, v9);
  v15(v0 + 6, 0);
  sub_183537CF4(v7, type metadata accessor for NWFileSerializationContext);
  uint64_t v16 = sub_183559DE4(v6, *(unsigned __int8 *)(v12 + v5[9]), v32);
  v0[22] = v16;
  v0[23] = v17;
  uint64_t v18 = v16;
  unint64_t v19 = v17;
  uint64_t v20 = (int *)v0[14];
  uint64_t v21 = v0[15];
  uint64_t v22 = v0[12];
  uint64_t v23 = sub_183D445FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  unsigned __int8 v24 = (uint64_t *)(v21 + v20[5]);
  *unsigned __int8 v24 = v18;
  v24[1] = v19;
  uint64_t v25 = v21 + v20[6];
  *(void *)uint64_t v25 = 0;
  *(void *)(v25 + 8) = 0;
  *(void *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = 0x3000000000000000;
  *(unsigned char *)(v25 + 32) = -1;
  uint64_t v26 = v21 + v20[7];
  *(void *)uint64_t v26 = v31;
  *(unsigned char *)(v26 + 8) = v30 & 1;
  __swift_project_boxed_opaque_existential_2((void *)(v22 + v5[5]), *(void *)(v22 + v5[5] + 24));
  sub_1832E5D6C(v18, v19);
  unsigned __int8 v27 = (void *)swift_task_alloc();
  v0[24] = v27;
  *unsigned __int8 v27 = v0;
  v27[1] = sub_183534E84;
  uint64_t v28 = v0[15];
  return sub_18354D0E4(v28);
}

uint64_t sub_183534E84()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_183535058;
  }
  else {
    uint64_t v2 = sub_183534F98;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_183534F98()
{
  uint64_t v1 = v0[22];
  unint64_t v2 = v0[23];
  uint64_t v3 = v0[15];
  swift_release();
  sub_1832E5E9C(v1, v2);
  sub_183537CF4(v3, (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_183535058()
{
  uint64_t v1 = v0[22];
  unint64_t v2 = v0[23];
  uint64_t v3 = v0[15];
  swift_release();
  sub_1832E5E9C(v1, v2);
  sub_183537CF4(v3, (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_183535114()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FF8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_183D4560C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = type metadata accessor for NWActorSystemResultHandler();
  sub_183537C8C(v0 + *(int *)(v11 + 32), (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_183138A24((uint64_t)v3, &qword_1E8F62FF8);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
  sub_183D455EC();
  sub_183D455FC();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  uint64_t result = sub_183D45C1C();
  uint64_t v16 = 1000 * result;
  if ((unsigned __int128)(result * (__int128)1000) >> 64 != (1000 * result) >> 63)
  {
    __break(1u);
    goto LABEL_11;
  }
  double v17 = (double)v15 * 1.0e-14;
  if ((~*(void *)&v17 & 0x7FF0000000000000) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v17 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v17 >= 9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v12 = v16 + (uint64_t)v17;
  if (!__OFADD__(v16, (uint64_t)v17))
  {
    v13(v10, v4);
    return v12;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for NWActorSystemResultHandler()
{
  uint64_t result = qword_1E8F63B60;
  if (!qword_1E8F63B60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t NWActorSystemResultHandler.onReturnVoid()()
{
  v1[2] = v0;
  v1[3] = type metadata accessor for ReplyEnvelope();
  v1[4] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_183535460, 0, 0);
}

uint64_t sub_183535460()
{
  uint64_t v2 = (int *)v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = sub_183535114();
  char v6 = v5;
  uint64_t v7 = sub_183D445FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v1, v3, v7);
  *(_OWORD *)(v1 + v2[5]) = xmmword_183D54880;
  uint64_t v8 = v1 + v2[6];
  *(void *)uint64_t v8 = 0;
  *(void *)(v8 + 8) = 0;
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0x3000000000000000;
  *(unsigned char *)(v8 + 32) = -1;
  uint64_t v9 = v1 + v2[7];
  *(void *)uint64_t v9 = v4;
  *(unsigned char *)(v9 + 8) = v6 & 1;
  uint64_t v10 = type metadata accessor for NWActorSystemResultHandler();
  __swift_project_boxed_opaque_existential_2((void *)(v3 + *(int *)(v10 + 20)), *(void *)(v3 + *(int *)(v10 + 20) + 24));
  uint64_t v11 = (void *)swift_task_alloc();
  v0[5] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1835355B0;
  uint64_t v12 = v0[4];
  return sub_18354D0E4(v12);
}

uint64_t sub_1835355B0()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_183535748;
  }
  else {
    uint64_t v2 = sub_1835356C4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1835356C4()
{
  sub_183537CF4(*(void *)(v0 + 32), (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_183535748()
{
  sub_183537CF4(*(void *)(v0 + 32), (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t NWActorSystemResultHandler.onThrow<A>(error:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[21] = a3;
  v4[22] = v3;
  v4[19] = a1;
  v4[20] = a2;
  v4[23] = type metadata accessor for ReplyEnvelope();
  unsigned char v4[24] = swift_task_alloc();
  v4[25] = *(void *)(a2 - 8);
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  v4[29] = type metadata accessor for NWActorSystemResultHandler();
  v4[30] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_183535938, 0, 0);
}

uint64_t sub_183535938()
{
  uint64_t v74 = v0;
  v73[1] = *MEMORY[0x1E4F143B8];
  uint64_t v71 = sub_183535114();
  char v70 = v1;
  if (qword_1E8F62110 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v72 = (long long *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v4 = *(void *)(v0 + 224);
  uint64_t v5 = *(void *)(v0 + 200);
  uint64_t v6 = *(void *)(v0 + 176);
  uint64_t v7 = *(void *)(v0 + 160);
  uint64_t v8 = sub_183D4498C();
  __swift_project_value_buffer(v8, (uint64_t)qword_1E8F63B10);
  sub_1835366D4(v6, v3, (uint64_t (*)(void))type metadata accessor for NWActorSystemResultHandler);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v9(v4, v2, v7);
  uint64_t v10 = sub_183D4496C();
  os_log_type_t v11 = sub_183D452BC();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 240);
  uint64_t v14 = *(void *)(v0 + 224);
  uint64_t v15 = *(void *)(v0 + 200);
  uint64_t v68 = *(void *)(v0 + 160);
  if (v12)
  {
    os_log_type_t type = v11;
    os_log_t log = v10;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v66 = swift_slowAlloc();
    v73[0] = v66;
    *(_DWORD *)uint64_t v16 = 136315394;
    sub_183D445FC();
    sub_18353688C();
    uint64_t v17 = sub_183D4589C();
    *(void *)(v0 + 136) = sub_1834EFE70(v17, v18, v73);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    sub_183537CF4(v13, (uint64_t (*)(void))type metadata accessor for NWActorSystemResultHandler);
    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v19 = sub_1835BFB90(v14);
    *(void *)(v0 + 144) = sub_1834EFE70(v19, v20, v73);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v21(v14, v68);
    _os_log_impl(&dword_1830D4000, log, type, "CallID %s threw error: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v66, -1, -1);
    MEMORY[0x185318E50](v16, -1, -1);
  }
  else
  {
    sub_183537CF4(v13, (uint64_t (*)(void))type metadata accessor for NWActorSystemResultHandler);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v21(v14, v68);
  }
  v9(*(void *)(v0 + 216), *(void *)(v0 + 152), *(void *)(v0 + 160));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62B28);
  if (swift_dynamicCast())
  {
    sub_1834BDFE8(v72, (_OWORD *)(v0 + 16));
    __swift_project_boxed_opaque_existential_2((void *)(v0 + 16), *(void *)(v0 + 40));
    swift_getDynamicType();
    uint64_t v22 = sub_183D4567C();
    if (v23)
    {
      uint64_t v24 = v22;
      unint64_t v25 = v23;
      __swift_project_boxed_opaque_existential_2((void *)(v0 + 16), *(void *)(v0 + 40));
      sub_183D442AC();
      swift_allocObject();
      sub_183D4429C();
      uint64_t v26 = sub_183D4427C();
      uint64_t v28 = v27;
      swift_release();
      unint64_t v54 = v28 | 0x1000000000000000;
      __swift_destroy_boxed_opaque_existential_2(v0 + 16);
      goto LABEL_21;
    }
    uint64_t v69 = v21;
    __swift_destroy_boxed_opaque_existential_2(v0 + 16);
  }
  else
  {
    uint64_t v69 = v21;
    *(_OWORD *)(v0 + 80) = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
    long long *v72 = 0u;
    sub_183138A24((uint64_t)v72, qword_1E8F63B40);
  }
  long long v29 = v9;
  char v30 = sub_183D4496C();
  os_log_type_t v31 = sub_183D452BC();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl(&dword_1830D4000, v30, v31, "Error is not codable, attempting to convert to NSError", v32, 2u);
    MEMORY[0x185318E50](v32, -1, -1);
  }
  uint64_t v33 = (id *)(v0 + 112);
  uint64_t v34 = *(void *)(v0 + 208);
  uint64_t v35 = *(void *)(v0 + 160);
  uint64_t v36 = *(void *)(v0 + 152);

  v29(v34, v36, v35);
  uint64_t v37 = sub_183D458FC();
  uint64_t v39 = *(void *)(v0 + 200);
  uint64_t v38 = *(void *)(v0 + 208);
  if (v37)
  {
    long long v40 = (void *)v37;
    v69(*(void *)(v0 + 208), *(void *)(v0 + 160));
  }
  else
  {
    uint64_t v41 = *(void *)(v0 + 160);
    long long v40 = (void *)swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v42, v38, v41);
  }
  long long v43 = (void *)sub_183D443BC();

  uint64_t v44 = self;
  *uint64_t v33 = 0;
  id v45 = objc_msgSend(v44, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v43, 1, v0 + 112);
  id v46 = *v33;
  if (v45)
  {
    uint64_t v24 = sub_183D4453C();
    unint64_t v25 = v47;

    uint64_t v26 = 0;
    unint64_t v54 = 0x2000000000000000;
  }
  else
  {
    uint64_t v48 = v46;
    uint64_t v49 = sub_183D443CC();

    swift_willThrow();
    unint64_t v50 = sub_183D4496C();
    os_log_type_t v51 = sub_183D4529C();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      _os_log_impl(&dword_1830D4000, v50, v51, "Failed to archive NSError", v52, 2u);
      MEMORY[0x185318E50](v52, -1, -1);
    }

    *(void *)(v0 + 120) = v49;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63CE0);
    uint64_t v24 = sub_183D44B7C();
    unint64_t v25 = v53;
    uint64_t v26 = 0;
    unint64_t v54 = 0x3000000000000000;
  }
LABEL_21:
  *(void *)(v0 + 264) = v26;
  *(void *)(v0 + 272) = v54;
  *(void *)(v0 + 248) = v24;
  *(void *)(v0 + 256) = v25;
  uint64_t v55 = *(void *)(v0 + 232);
  uint64_t v57 = *(int **)(v0 + 184);
  uint64_t v56 = *(void *)(v0 + 192);
  uint64_t v58 = *(void *)(v0 + 176);
  uint64_t v59 = sub_183D445FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(v56, v58, v59);
  *(_OWORD *)(v56 + v57[5]) = xmmword_183D54880;
  uint64_t v60 = v56 + v57[6];
  *(void *)uint64_t v60 = v24;
  *(void *)(v60 + 8) = v25;
  *(void *)(v60 + 16) = v26;
  *(void *)(v60 + 24) = v54;
  *(unsigned char *)(v60 + 32) = 0;
  uint64_t v61 = v56 + v57[7];
  *(void *)uint64_t v61 = v71;
  *(unsigned char *)(v61 + 8) = v70 & 1;
  __swift_project_boxed_opaque_existential_2((void *)(v58 + *(int *)(v55 + 20)), *(void *)(v58 + *(int *)(v55 + 20) + 24));
  sub_18353673C(v24, v25, v26, v54, 0);
  uint64_t v62 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v62;
  *uint64_t v62 = v0;
  v62[1] = sub_1835361A0;
  uint64_t v63 = *(void *)(v0 + 192);
  return sub_18354D0E4(v63);
}

uint64_t sub_1835361A0()
{
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1835363DC;
  }
  else {
    uint64_t v2 = sub_1835362E0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1835362E0()
{
  uint64_t v1 = v0[24];
  sub_1835367E4(v0[31], v0[32], v0[33], v0[34], 0);
  sub_183537CF4(v1, (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1835363DC()
{
  uint64_t v1 = v0[24];
  sub_1835367E4(v0[31], v0[32], v0[33], v0[34], 0);
  sub_183537CF4(v1, (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1835364D8(uint64_t a1, uint64_t a2)
{
  swift_conformsToProtocol();
  swift_conformsToProtocol();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1834B96A4;
  return NWActorSystemResultHandler.onReturn<A>(value:)(a1, a2);
}

uint64_t sub_18353659C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1834B5EB0;
  return NWActorSystemResultHandler.onReturnVoid()();
}

uint64_t sub_183536628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1834B96A4;
  return NWActorSystemResultHandler.onThrow<A>(error:)(a1, a2, a3);
}

uint64_t sub_1835366D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_18353673C(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  if (a5) {
    int v6 = 4;
  }
  else {
    int v6 = 0;
  }
  switch((a4 >> 60) & 3 | v6)
  {
    case 0uLL:
    case 3uLL:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 1uLL:
      unint64_t v8 = a4 & 0xCFFFFFFFFFFFFFFFLL;
      swift_bridgeObjectRetain();
      uint64_t result = a3;
      a2 = v8;
      goto LABEL_9;
    case 2uLL:
LABEL_9:
      uint64_t result = sub_1832E5D6C(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1835367E4(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  if (a5) {
    int v6 = 4;
  }
  else {
    int v6 = 0;
  }
  switch((a4 >> 60) & 3 | v6)
  {
    case 0uLL:
    case 3uLL:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 1uLL:
      unint64_t v8 = a4 & 0xCFFFFFFFFFFFFFFFLL;
      swift_bridgeObjectRelease();
      uint64_t result = a3;
      a2 = v8;
      goto LABEL_9;
    case 2uLL:
LABEL_9:
      uint64_t result = sub_1832E5E9C(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_18353688C()
{
  unint64_t result = qword_1E8F62F30;
  if (!qword_1E8F62F30)
  {
    sub_183D445FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F62F30);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for NWActorSystemResultHandler(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_183D445FC();
    unint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    long long v10 = *(_OWORD *)&a2[v9 + 24];
    *(_OWORD *)&a1[v9 + 24] = v10;
    (**(void (***)(void))(v10 - 8))();
    uint64_t v11 = a3[6];
    BOOL v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = *(void *)&a2[v11 + 8];
    *(void *)BOOL v12 = *(void *)&a2[v11];
    *((void *)v12 + 1) = v14;
    uint64_t v15 = *(int *)(type metadata accessor for NWActorID() + 20);
    uint64_t v16 = &v12[v15];
    uint64_t v17 = &v13[v15];
    swift_bridgeObjectRetain();
    v8(v16, v17, v7);
    uint64_t v18 = a3[7];
    long long v19 = *(_OWORD *)&a2[v18 + 24];
    *(_OWORD *)&a1[v18 + 24] = v19;
    (**(void (***)(void))(v19 - 8))();
    uint64_t v20 = a3[8];
    uint64_t v21 = &a1[v20];
    uint64_t v22 = &a2[v20];
    uint64_t v23 = sub_183D4560C();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FF8);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    a1[a3[9]] = a2[a3[9]];
  }
  return a1;
}

uint64_t destroy for NWActorSystemResultHandler(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_183D445FC();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  __swift_destroy_boxed_opaque_existential_2(a1 + a2[5]);
  uint64_t v6 = a1 + a2[6];
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for NWActorID();
  v5(v6 + *(int *)(v7 + 20), v4);
  __swift_destroy_boxed_opaque_existential_2(a1 + a2[7]);
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = sub_183D4560C();
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v8, 1, v9);
  if (!result)
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
    return v11(v8, v9);
  }
  return result;
}

uint64_t initializeWithCopy for NWActorSystemResultHandler(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_183D445FC();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  long long v9 = *(_OWORD *)(a2 + v8 + 24);
  *(_OWORD *)(a1 + v8 + 24) = v9;
  (**(void (***)(void))(v9 - 8))();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = a2 + v10;
  uint64_t v13 = *(void *)(a2 + v10 + 8);
  *uint64_t v11 = *(void *)(a2 + v10);
  v11[1] = v13;
  uint64_t v14 = *(int *)(type metadata accessor for NWActorID() + 20);
  uint64_t v15 = (char *)v11 + v14;
  uint64_t v16 = v12 + v14;
  swift_bridgeObjectRetain();
  v7((uint64_t)v15, v16, v6);
  uint64_t v17 = a3[7];
  long long v18 = *(_OWORD *)(a2 + v17 + 24);
  *(_OWORD *)(a1 + v17 + 24) = v18;
  (**(void (***)(void))(v18 - 8))();
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  uint64_t v22 = sub_183D4560C();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FF8);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithCopy for NWActorSystemResultHandler(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_183D445FC();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[5]), (uint64_t *)(a2 + a3[5]));
  uint64_t v8 = a3[6];
  long long v9 = (void *)(a1 + v8);
  uint64_t v10 = a2 + v8;
  *long long v9 = *(void *)(a2 + v8);
  v9[1] = *(void *)(a2 + v8 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = type metadata accessor for NWActorID();
  v7((uint64_t)v9 + *(int *)(v11 + 20), v10 + *(int *)(v11 + 20), v6);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_183D4560C();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FF8);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t initializeWithTake for NWActorSystemResultHandler(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_183D445FC();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  long long v12 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v12;
  *(void *)(v10 + 32) = *(void *)(v11 + 32);
  uint64_t v13 = a1 + v9;
  uint64_t v14 = a2 + v9;
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  uint64_t v15 = type metadata accessor for NWActorID();
  v7(v13 + *(int *)(v15 + 20), v14 + *(int *)(v15 + 20), v6);
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  long long v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  uint64_t v21 = (void *)(a1 + v17);
  uint64_t v22 = (const void *)(a2 + v17);
  uint64_t v23 = sub_183D4560C();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FF8);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for NWActorSystemResultHandler(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_183D445FC();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  __swift_destroy_boxed_opaque_existential_2(a1 + v8);
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *uint64_t v13 = *(void *)(a2 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = type metadata accessor for NWActorID();
  v7((uint64_t)v13 + *(int *)(v16 + 20), v14 + *(int *)(v16 + 20), v6);
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  __swift_destroy_boxed_opaque_existential_2(a1 + v17);
  long long v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = sub_183D4560C();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 40))(v22, v23, v24);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FF8);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v25 + 32))(v22, v23, v24);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_7:
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for NWActorSystemResultHandler(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1835377FC);
}

uint64_t sub_1835377FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_183D445FC();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5] + 24);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v13 = type metadata accessor for NWActorID();
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a2)
    {
      uint64_t v8 = v13;
      uint64_t v10 = a1 + a3[6];
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      goto LABEL_9;
    }
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FF8);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[8];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for NWActorSystemResultHandler(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_183537998);
}

uint64_t sub_183537998(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_183D445FC();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5] + 24) = (a2 - 1);
    return result;
  }
  uint64_t v13 = type metadata accessor for NWActorID();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[6];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FF8);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[8];

  return v16(v18, a2, a2, v17);
}

void sub_183537B20()
{
  sub_183D445FC();
  if (v0 <= 0x3F)
  {
    type metadata accessor for NWActorID();
    if (v1 <= 0x3F)
    {
      sub_183537C34();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_183537C34()
{
  if (!qword_1E8F63B70)
  {
    sub_183D4560C();
    unint64_t v0 = sub_183D4536C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E8F63B70);
    }
  }
}

uint64_t sub_183537C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62FF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_183537CF4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_183537D54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

id sub_183537DBC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  if (a36 < 0)
  {
    return a1;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1834BF9F8(a8, a9);
    sub_1834BF9F8(a15, a16);
    sub_1834BF9F8(a22, a23);
    sub_1834BF9F8(a29, a30);
    return (id)swift_retain();
  }
}

void _s11RequestTypeOwxx(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 240);
  long long v3 = *(_OWORD *)(a1 + 256);
  long long v1 = *(_OWORD *)(a1 + 208);
  sub_183537FEC(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v1,
    *((uint64_t *)&v1 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v2,
    *((uint64_t *)&v2 + 1),
    v3,
    *((uint64_t *)&v3 + 1),
    *(void *)(a1 + 272),
    *(void *)(a1 + 280));
}

void sub_183537FEC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  if (a36 < 0)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1834BFA48(a8, a9);
    sub_1834BFA48(a15, a16);
    sub_1834BFA48(a22, a23);
    sub_1834BFA48(a29, a30);
    swift_release();
  }
}

void *_s11RequestTypeOwcp(void *a1, uint64_t a2)
{
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  uint64_t v19 = *(void *)(a2 + 120);
  uint64_t v20 = *(void *)(a2 + 128);
  uint64_t v21 = *(void *)(a2 + 136);
  uint64_t v22 = *(void *)(a2 + 144);
  uint64_t v23 = *(void *)(a2 + 152);
  uint64_t v24 = *(void *)(a2 + 160);
  uint64_t v25 = *(void *)(a2 + 168);
  uint64_t v26 = *(void *)(a2 + 176);
  uint64_t v27 = *(void *)(a2 + 184);
  uint64_t v28 = *(void *)(a2 + 192);
  uint64_t v29 = *(void *)(a2 + 200);
  uint64_t v30 = *(void *)(a2 + 208);
  uint64_t v31 = *(void *)(a2 + 216);
  uint64_t v32 = *(void *)(a2 + 224);
  uint64_t v33 = *(void *)(a2 + 232);
  uint64_t v34 = *(void *)(a2 + 240);
  uint64_t v35 = *(void *)(a2 + 248);
  uint64_t v36 = *(void *)(a2 + 256);
  uint64_t v37 = *(void *)(a2 + 264);
  uint64_t v38 = *(void *)(a2 + 272);
  uint64_t v39 = *(void *)(a2 + 280);
  uint64_t v3 = *(void *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v4 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 48);
  sub_183537DBC(*(void **)a2, v5, v6, v7, v8, v9, v10, v11, v3, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v3;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  a1[16] = v20;
  a1[17] = v21;
  a1[18] = v22;
  a1[19] = v23;
  a1[20] = v24;
  a1[21] = v25;
  a1[22] = v26;
  a1[23] = v27;
  a1[24] = v28;
  a1[25] = v29;
  a1[26] = v30;
  a1[27] = v31;
  a1[28] = v32;
  a1[29] = v33;
  a1[30] = v34;
  a1[31] = v35;
  a1[32] = v36;
  a1[33] = v37;
  a1[34] = v38;
  a1[35] = v39;
  return a1;
}

uint64_t _s11RequestTypeOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v61 = *(void **)a2;
  uint64_t v62 = *(void *)(a2 + 8);
  uint64_t v59 = *(void *)(a2 + 24);
  uint64_t v60 = *(void *)(a2 + 16);
  uint64_t v57 = *(void *)(a2 + 40);
  uint64_t v58 = *(void *)(a2 + 32);
  uint64_t v55 = *(void *)(a2 + 56);
  uint64_t v56 = *(void *)(a2 + 48);
  uint64_t v36 = *(void *)(a2 + 72);
  uint64_t v37 = *(void *)(a2 + 80);
  uint64_t v38 = *(void *)(a2 + 88);
  uint64_t v39 = *(void *)(a2 + 96);
  uint64_t v40 = *(void *)(a2 + 104);
  uint64_t v41 = *(void *)(a2 + 112);
  uint64_t v42 = *(void *)(a2 + 120);
  uint64_t v43 = *(void *)(a2 + 128);
  uint64_t v3 = *(void *)(a2 + 144);
  uint64_t v4 = *(void *)(a2 + 152);
  uint64_t v5 = *(void *)(a2 + 160);
  uint64_t v6 = *(void *)(a2 + 168);
  uint64_t v7 = *(void *)(a2 + 176);
  uint64_t v8 = *(void *)(a2 + 184);
  uint64_t v9 = *(void *)(a2 + 192);
  uint64_t v10 = *(void *)(a2 + 200);
  uint64_t v44 = *(void *)(a2 + 136);
  uint64_t v45 = *(void *)(a2 + 208);
  uint64_t v46 = *(void *)(a2 + 216);
  uint64_t v47 = *(void *)(a2 + 224);
  uint64_t v48 = *(void *)(a2 + 232);
  uint64_t v49 = *(void *)(a2 + 240);
  uint64_t v50 = *(void *)(a2 + 248);
  uint64_t v51 = *(void *)(a2 + 256);
  uint64_t v52 = *(void *)(a2 + 264);
  uint64_t v53 = *(void *)(a2 + 272);
  uint64_t v54 = *(void *)(a2 + 280);
  uint64_t v11 = *(void *)(a2 + 64);
  sub_183537DBC(*(void **)a2, v62, v60, v59, v58, v57, v56, v55, v11, v36, v37, v38, v39, v40, v41, v42, v43, v44, v3,
    v4,
    v5,
    v6,
    v7,
    v8,
    v9,
    v10,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54);
  uint64_t v12 = *(void **)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  *(void *)a1 = v61;
  *(void *)(a1 + 8) = v62;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v60;
  *(void *)(a1 + 24) = v59;
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v58;
  *(void *)(a1 + 40) = v57;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v56;
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 56) = v55;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v36;
  *(void *)(a1 + 80) = v37;
  *(void *)(a1 + 88) = v38;
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v39;
  *(void *)(a1 + 104) = v40;
  *(void *)(a1 + 112) = v41;
  *(void *)(a1 + 120) = v42;
  long long v24 = *(_OWORD *)(a1 + 128);
  long long v25 = *(_OWORD *)(a1 + 144);
  *(void *)(a1 + 128) = v43;
  *(void *)(a1 + 136) = v44;
  *(void *)(a1 + 144) = v3;
  long long v26 = *(_OWORD *)(a1 + 160);
  long long v27 = *(_OWORD *)(a1 + 176);
  *(void *)(a1 + 152) = v4;
  *(void *)(a1 + 160) = v5;
  *(void *)(a1 + 168) = v6;
  *(void *)(a1 + 176) = v7;
  long long v28 = *(_OWORD *)(a1 + 192);
  long long v29 = *(_OWORD *)(a1 + 208);
  *(void *)(a1 + 184) = v8;
  *(void *)(a1 + 192) = v9;
  *(void *)(a1 + 200) = v10;
  *(void *)(a1 + 208) = v45;
  *(void *)(a1 + 216) = v46;
  long long v30 = *(_OWORD *)(a1 + 224);
  long long v31 = *(_OWORD *)(a1 + 240);
  *(void *)(a1 + 224) = v47;
  *(void *)(a1 + 232) = v48;
  *(void *)(a1 + 240) = v49;
  *(void *)(a1 + 248) = v50;
  long long v32 = *(_OWORD *)(a1 + 256);
  *(void *)(a1 + 256) = v51;
  *(void *)(a1 + 264) = v52;
  uint64_t v33 = *(void *)(a1 + 272);
  uint64_t v34 = *(void *)(a1 + 280);
  *(void *)(a1 + 272) = v53;
  *(void *)(a1 + 280) = v54;
  sub_183537FEC(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    v34);
  return a1;
}

void *__swift_memcpy288_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x120uLL);
}

uint64_t _s11RequestTypeOwta(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 112);
  long long v16 = *(_OWORD *)(a1 + 128);
  long long v17 = *(_OWORD *)(a1 + 144);
  long long v18 = *(_OWORD *)(a1 + 160);
  long long v19 = *(_OWORD *)(a1 + 176);
  long long v20 = *(_OWORD *)(a1 + 192);
  long long v21 = *(_OWORD *)(a1 + 208);
  long long v22 = *(_OWORD *)(a1 + 224);
  long long v23 = *(_OWORD *)(a1 + 240);
  long long v24 = *(_OWORD *)(a1 + 256);
  uint64_t v25 = *(void *)(a1 + 272);
  uint64_t v26 = *(void *)(a1 + 280);
  long long v27 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v27;
  long long v28 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v28;
  long long v29 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v29;
  long long v30 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v30;
  long long v31 = a2[9];
  *(_OWORD *)(a1 + 128) = a2[8];
  *(_OWORD *)(a1 + 144) = v31;
  long long v32 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v32;
  long long v33 = a2[13];
  *(_OWORD *)(a1 + 192) = a2[12];
  *(_OWORD *)(a1 + 208) = v33;
  long long v34 = a2[15];
  *(_OWORD *)(a1 + 224) = a2[14];
  *(_OWORD *)(a1 + 240) = v34;
  long long v35 = a2[17];
  *(_OWORD *)(a1 + 256) = a2[16];
  *(_OWORD *)(a1 + 272) = v35;
  sub_183537FEC(v4, v5, v6, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    v26);
  return a1;
}

uint64_t _s11RequestTypeOwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 288)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 33);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t _s11RequestTypeOwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 288) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(_OWORD *)uint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(void *)(result + 32) = (unint64_t)-a2 << 8;
      *(_OWORD *)(result + 56) = 0u;
      *(_OWORD *)(result + 72) = 0u;
      *(_OWORD *)(result + 88) = 0u;
      *(_OWORD *)(result + 104) = 0u;
      *(_OWORD *)(result + 120) = 0u;
      *(_OWORD *)(result + 136) = 0u;
      *(_OWORD *)(result + 152) = 0u;
      *(_OWORD *)(result + 168) = 0u;
      *(_OWORD *)(result + 184) = 0u;
      *(_OWORD *)(result + 200) = 0u;
      *(_OWORD *)(result + 216) = 0u;
      *(_OWORD *)(result + 232) = 0u;
      *(_OWORD *)(result + 248) = 0u;
      *(void *)(result + 280) = 0;
      *(_OWORD *)(result + 40) = 0u;
      result += 40;
      *(_OWORD *)(result + 224) = 0u;
      return result;
    }
    *(unsigned char *)(result + 288) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_183538848(uint64_t a1)
{
  return *(void *)(a1 + 280) >> 63;
}

uint64_t sub_183538854(uint64_t result)
{
  *(void *)(result + 280) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_183538864(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 280) & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  *(void *)(result + 32) = *(unsigned __int8 *)(result + 32);
  *(void *)(result + 280) = v2;
  return result;
}

ValueMetadata *_s11RequestTypeOMa()
{
  return &_s11RequestTypeON;
}

uint64_t sub_183538890@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61F40);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_183D4447C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v40 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v39 = (char *)&v35 - v11;
  id v12 = objc_msgSend(a1, sel_HTTPMethod);
  if (!v12)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  long long v13 = v12;
  uint64_t v14 = sub_183D44AFC();
  uint64_t v16 = v15;

  if ((v16 & 0x1000000000000000) != 0)
  {
    uint64_t v14 = sub_18359979C();
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v16 = v18;
    if ((v18 & 0x2000000000000000) == 0) {
      goto LABEL_4;
    }
LABEL_7:
    v43[0] = v14;
    v43[1] = v16 & 0xFFFFFFFFFFFFFFLL;
    goto LABEL_8;
  }
  if ((v16 & 0x2000000000000000) != 0) {
    goto LABEL_7;
  }
LABEL_4:
  if ((v14 & 0x1000000000000000) == 0) {
    goto LABEL_17;
  }
LABEL_8:
  while (1)
  {
    uint64_t v37 = sub_183D44C1C();
    unint64_t v20 = v19;
    id v21 = objc_msgSend(a1, sel_URL);
    if (!v21) {
      break;
    }
    long long v22 = v21;
    uint64_t v38 = a1;
    uint64_t v36 = a2;
    long long v23 = v40;
    sub_183D4443C();

    long long v24 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v24(v6, v23, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
    if (result == 1) {
      goto LABEL_21;
    }
    v24(v39, v6, v7);
    type metadata accessor for HTTPFields._Storage();
    uint64_t v26 = (void *)swift_allocObject();
    uint64_t v27 = MEMORY[0x1E4FBC860];
    v26[2] = MEMORY[0x1E4FBC860];
    v26[3] = sub_1835960A8(v27);
    long long v28 = (_DWORD *)swift_slowAlloc();
    uint64_t v26[4] = v28;
    *long long v28 = 0;
    uint64_t v44 = (uint64_t)v26;
    uint64_t v29 = self;
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = &v44;
    uint64_t v6 = (char *)swift_allocObject();
    *((void *)v6 + 2) = sub_18353ACB4;
    *((void *)v6 + 3) = v30;
    v43[4] = sub_18353ACCC;
    v43[5] = v6;
    v43[0] = MEMORY[0x1E4F143A8];
    v43[1] = 1107296256;
    v43[2] = sub_1835395A4;
    v43[3] = &block_descriptor_10;
    a2 = _Block_copy(v43);
    swift_retain();
    swift_release();
    a1 = v38;
    objc_msgSend((id)v29, sel__enumerateHTTPHeaderFieldsWithRequest_usingBlock_, v38, a2);
    _Block_release(a2);
    LOBYTE(v29) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v29 & 1) == 0)
    {
      unint64_t v31 = HIBYTE(v20) & 0xF;
      uint64_t v32 = v37;
      if ((v20 & 0x2000000000000000) == 0) {
        unint64_t v31 = v37 & 0xFFFFFFFFFFFFLL;
      }
      if (v31)
      {
        uint64_t v6 = 0;
        if (sub_183529FF8(v37, v20))
        {
          swift_bridgeObjectRelease();
          v42[0] = v32;
          v42[1] = v20;
          long long v33 = v39;
          uint64_t v34 = (uint64_t)v40;
          (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v40, v39, v7);
          uint64_t v41 = v44;
          swift_retain();
          HTTPRequest.init(method:url:headerFields:)(v42, v34, &v41, v43);

          (*(void (**)(char *, uint64_t))(v8 + 8))(v33, v7);
          memcpy(v36, v43, 0x120uLL);
          swift_release();
          return swift_release();
        }
      }
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_19;
    }
    __break(1u);
LABEL_17:
    sub_183D4557C();
  }
LABEL_20:
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_183538D88(uint64_t *a1, uint64_t *a2, char *a3, uint64_t a4, unsigned __int8 *(*a5)@<X0>(unsigned __int8 *result@<X0>, _DWORD *a2@<X8>), uint64_t a6)
{
  uint64_t v11 = *a1;
  unint64_t v12 = a1[1];
  if ((v12 & 0x1000000000000000) == 0)
  {
    if ((v12 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v14 = HIBYTE(v12) & 0xF;
    v19[0] = v11;
    v19[1] = v12 & 0xFFFFFFFFFFFFFFLL;
    long long v13 = (char *)v19;
    goto LABEL_7;
  }
  uint64_t v11 = sub_18359979C();
  uint64_t v18 = v16;
  swift_bridgeObjectRelease();
  unint64_t v12 = v18;
  *a1 = v11;
  a1[1] = v18;
  if ((v18 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v11 & 0x1000000000000000) != 0)
  {
    long long v13 = (char *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v14 = v11 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    long long v13 = (char *)sub_183D4557C();
  }
LABEL_7:
  sub_1835393E0(v13, v14, a2, a3, a4, a5, a6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_183538E94(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, uint64_t *a5)
{
  swift_bridgeObjectRetain();
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    *(void *)&long long v53 = a1;
    *((void *)&v53 + 1) = a2 & 0xFFFFFFFFFFFFFFLL;
    goto LABEL_7;
  }
  a1 = sub_18359979C();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  a2 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((a1 & 0x1000000000000000) == 0) {
    sub_183D4557C();
  }
LABEL_7:
  unint64_t v11 = sub_183D44C1C();
  long long v13 = (char *)v11;
  uint64_t v14 = v12;
  uint64_t v15 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0) {
    uint64_t v15 = v11 & 0xFFFFFFFFFFFFLL;
  }
  if (v15 && (sub_183529FF8(v11, v12) & 1) != 0)
  {
    uint64_t v16 = sub_183D44B8C();
    uint64_t v18 = v17;
    uint64_t v40 = (unsigned __int8 *(*)@<X0>(unsigned __int8 *@<X0>, _DWORD *@<X8>))v16;
    if (v16 == 0x65696B6F6F63 && v17 == 0xE600000000000000 || (sub_183D4592C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      *(void *)&long long v53 = a3;
      *((void *)&v53 + 1) = a4;
      *(void *)&long long v43 = 8251;
      *((void *)&v43 + 1) = 0xE200000000000000;
      sub_183521DD8();
      uint64_t v19 = sub_183D451FC();
      uint64_t v20 = *(void *)(v19 + 16);
      if (v20)
      {
        uint64_t v38 = v18;
        for (uint64_t i = (uint64_t *)(v19 + 56); ; i += 4)
        {
          uint64_t v27 = v14;
          long long v28 = v13;
          uint64_t v29 = *(i - 3);
          uint64_t v30 = *(i - 2);
          uint64_t v31 = *(i - 1);
          uint64_t v32 = *i;
          swift_bridgeObjectRetain();
          uint64_t v22 = MEMORY[0x185313F90](v29, v30, v31, v32);
          unint64_t v24 = v33;
          swift_bridgeObjectRelease();
          if (!_s7Network9HTTPFieldV12isValidValueySbSSFZ_0(v22, v24))
          {
            *(void *)&long long v53 = v22;
            *((void *)&v53 + 1) = v24;
            uint64_t v54 = sub_1834FA7A8;
            uint64_t v55 = 0;
            uint64_t v56 = sub_1834FA7E4;
            uint64_t v57 = 0;
            uint64_t v58 = sub_1834FC554;
            uint64_t v59 = 0;
            long long v43 = v53;
            long long v44 = (unint64_t)sub_1834FA7A8;
            long long v45 = (unint64_t)sub_1834FA7E4;
            long long v46 = (unint64_t)sub_1834FC554;
            swift_bridgeObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63158);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644A0);
            if ((swift_dynamicCast() & 1) == 0)
            {
              uint64_t v42 = 0;
              memset(v41, 0, sizeof(v41));
              sub_1834FC4F4((uint64_t)v41);
              goto LABEL_24;
            }
            sub_1834D9964(v41, (uint64_t)v47);
            __swift_project_boxed_opaque_existential_2(v47, v48);
            if ((sub_183D4573C() & 1) == 0)
            {
              __swift_destroy_boxed_opaque_existential_2((uint64_t)v47);
LABEL_24:
              long long v13 = v28;
              uint64_t v22 = sub_18353A7A0(&v53);
              unint64_t v35 = v34;
              swift_bridgeObjectRelease();
              unint64_t v24 = v35;
              goto LABEL_18;
            }
            __swift_project_boxed_opaque_existential_2(v47, v48);
            sub_183D4572C();
            unint64_t v23 = *((void *)&v43 + 1);
            uint64_t v22 = v43;
            __swift_destroy_boxed_opaque_existential_2((uint64_t)v47);
            swift_bridgeObjectRelease();
            unint64_t v24 = v23;
          }
          long long v13 = v28;
LABEL_18:
          uint64_t v14 = v27;
          uint64_t v25 = *a5;
          swift_beginAccess();
          uint64_t v26 = *(void *)(*(void *)(v25 + 16) + 16);
          v49[0] = v13;
          v49[1] = v27;
          _OWORD v49[2] = v40;
          v49[3] = v38;
          char v50 = 0;
          uint64_t v51 = v22;
          unint64_t v52 = v24;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_18351DF80(v26, v26, (uint64_t)v49);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!--v20)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
        }
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      if (sub_1834BF534(a3, a4))
      {
        *(void *)&long long v53 = a3;
        *((void *)&v53 + 1) = a4;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_183538D88((uint64_t *)&v53, a5, v13, v14, v40, v18);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1835A3FAC(a3, a4, a5, v13, v14, v40, v18, v36);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  __break(1u);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  __break(1u);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1835393E0(char *a1, uint64_t a2, uint64_t *a3, char *a4, uint64_t a5, unsigned __int8 *(*a6)@<X0>(unsigned __int8 *result@<X0>, _DWORD *a2@<X8>), uint64_t a7)
{
  if (!a1 || !a2) {
    goto LABEL_10;
  }
  if (*a1 < 0) {
    goto LABEL_11;
  }
  if (a2 == 1) {
    goto LABEL_10;
  }
  if (a1[1] < 0)
  {
LABEL_11:
    uint64_t v22 = a1;
    uint64_t v23 = a2;
    unint64_t v24 = sub_1835A3780;
    uint64_t v25 = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63B78);
    sub_1834FBEF8((unint64_t *)&unk_1E8F63B80, &qword_1E8F63B78);
    sub_183D44C0C();
    unint64_t v13 = 0;
    unint64_t v15 = 0xE000000000000000;
    goto LABEL_12;
  }
  if (a2 != 2)
  {
    uint64_t v12 = 2;
    while ((a1[v12] & 0x80000000) == 0)
    {
      if (a2 == ++v12) {
        goto LABEL_10;
      }
    }
    goto LABEL_11;
  }
LABEL_10:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_183D44C1C();
  unint64_t v15 = v14;
LABEL_12:
  uint64_t v16 = sub_1834FBC78(v13, v15);
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = *a3;
  swift_beginAccess();
  uint64_t v20 = *(void *)(*(void *)(v19 + 16) + 16);
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  unint64_t v24 = a6;
  uint64_t v25 = a7;
  char v26 = 0;
  uint64_t v27 = v16;
  uint64_t v28 = v18;
  sub_18351DF80(v20, v20, (uint64_t)&v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1835395A4(uint64_t a1)
{
  long long v1 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  uint64_t v2 = sub_183D44AFC();
  uint64_t v4 = v3;
  uint64_t v5 = sub_183D44AFC();
  v1(v2, v4, v5, v6);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_183539628(uint64_t a1, uint64_t a2, const __CFURL *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61F40);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *((void *)v3 + 5);
  uint64_t v8 = *((void *)v3 + 6);
  uint64_t v10 = *((void *)v3 + 35);
  CFURLRef v66 = a3;
  uint64_t v67 = v10;
  if (!a3)
  {
    char v11 = *((unsigned char *)v3 + 32);
    uint64_t v13 = *((void *)v3 + 2);
    uint64_t v12 = *((void *)v3 + 3);
    long long v70 = *v3;
    uint64_t v71 = v13;
    uint64_t v72 = v12;
    char v73 = v11;
    *(_DWORD *)uint64_t v74 = *(_DWORD *)((char *)v3 + 33);
    *(_DWORD *)&v74[3] = *((_DWORD *)v3 + 9);
    uint64_t v75 = v9;
    uint64_t v76 = v8;
    long long v90 = *(long long *)((char *)v3 + 264);
    long long v87 = *(long long *)((char *)v3 + 216);
    long long v88 = *(long long *)((char *)v3 + 232);
    long long v89 = *(long long *)((char *)v3 + 248);
    long long v83 = *(long long *)((char *)v3 + 152);
    long long v84 = *(long long *)((char *)v3 + 168);
    long long v85 = *(long long *)((char *)v3 + 184);
    long long v86 = *(long long *)((char *)v3 + 200);
    long long v14 = *(long long *)((char *)v3 + 104);
    long long v79 = *(long long *)((char *)v3 + 88);
    long long v80 = v14;
    long long v81 = *(long long *)((char *)v3 + 120);
    long long v82 = *(long long *)((char *)v3 + 136);
    long long v15 = *(long long *)((char *)v3 + 72);
    long long v77 = *(long long *)((char *)v3 + 56);
    long long v78 = v15;
    uint64_t v91 = v67;
    HTTPRequest.url.getter((uint64_t)v7);
    uint64_t v16 = sub_183D4447C();
    uint64_t v17 = *(void *)(v16 - 8);
    int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v7, 1, v16);
    CFURLRef v66 = 0;
    if (v18 == 1) {
      goto LABEL_5;
    }
    CFURLRef v19 = (const __CFURL *)sub_183D4441C();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v16);
    CFURLRef v66 = v19;
    CFURLRef v20 = v19;
  }
  CFURLRef v21 = a3;
LABEL_5:
  CFAllocatorRef v22 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  swift_bridgeObjectRetain();
  uint64_t v23 = (__CFString *)sub_183D44AEC();
  swift_bridgeObjectRelease();
  unint64_t v24 = (__CFString *)sub_183D44AEC();
  CFAllocatorRef v64 = v22;
  CFHTTPMessageRef Request = CFHTTPMessageCreateRequest(v22, v23, v66, v24);

  uint64_t v26 = v67;
  swift_retain();
  uint64_t v68 = (uint64_t *)(v26 + 16);
  swift_beginAccess();
  uint64_t v27 = *(void *)(v26 + 16);
  unint64_t v28 = *(void *)(v27 + 16);
  if (v28)
  {
    uint64_t v29 = 0;
    LODWORD(v65) = 1;
    do
    {
      uint64_t v34 = v29++ << 6;
      uint64_t v35 = v34 + 80;
      while (1)
      {
        if (v29 - 1 >= v28)
        {
          __break(1u);
          goto LABEL_33;
        }
        uint64_t v36 = (uint64_t *)(v27 + v35);
        uint64_t v37 = *(v36 - 6);
        uint64_t v38 = *(v36 - 5);
        uint64_t v39 = *v36;
        BOOL v40 = *(v36 - 4) == 0x65696B6F6F63 && *(v36 - 3) == 0xE600000000000000;
        if (v40 || (sub_183D4592C() & 1) != 0) {
          break;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v41 = Request;
        uint64_t v42 = v29;
        long long v43 = (void *)sub_183D44AEC();
        long long v44 = (void *)sub_183D44AEC();
        _CFHTTPMessageAddHeaderFieldValue();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v27 = *v68;
        unint64_t v28 = *(void *)(*v68 + 16);
        uint64_t v29 = v42 + 1;
        v35 += 64;
        if (v42 == v28) {
          goto LABEL_30;
        }
      }
      if (v65)
      {
        uint64_t v65 = v37;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v45 = sub_18351A02C();
        uint64_t v46 = *(void *)(v45 + 16);
        uint64_t v63 = v29;
        if (v46 && (uint64_t v47 = sub_18359A408(0x65696B6F6F63, 0xE600000000000000), (v48 & 1) != 0)) {
          unsigned __int16 v49 = *(_WORD *)(*(void *)(v45 + 56) + 4 * v47);
        }
        else {
          unsigned __int16 v49 = -1;
        }
        swift_bridgeObjectRelease();
        uint64_t v50 = swift_bridgeObjectRetain();
        uint64_t v51 = sub_1835204B0(v50, v49);
        swift_release();
        swift_bridgeObjectRelease();
        int64_t v52 = *(void *)(v51 + 16);
        if (v52)
        {
          v61[1] = v39;
          v61[2] = v38;
          uint64_t v62 = Request;
          uint64_t v69 = MEMORY[0x1E4FBC860];
          sub_1835AF3E4(0, v52, 0);
          uint64_t v53 = v69;
          v61[0] = v51;
          uint64_t v54 = (uint64_t *)(v51 + 80);
          do
          {
            uint64_t v56 = *(v54 - 1);
            uint64_t v55 = *v54;
            uint64_t v69 = v53;
            unint64_t v58 = *(void *)(v53 + 16);
            unint64_t v57 = *(void *)(v53 + 24);
            swift_bridgeObjectRetain();
            if (v58 >= v57 >> 1)
            {
              sub_1835AF3E4(v57 > 1, v58 + 1, 1);
              uint64_t v53 = v69;
            }
            *(void *)(v53 + 16) = v58 + 1;
            uint64_t v59 = v53 + 16 * v58;
            *(void *)(v59 + 32) = v56;
            *(void *)(v59 + 40) = v55;
            v54 += 7;
            --v52;
          }
          while (v52);
          swift_release();
          CFHTTPMessageRef Request = v62;
        }
        else
        {
          swift_release();
          uint64_t v53 = MEMORY[0x1E4FBC860];
        }
        uint64_t v69 = v53;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61F60);
        sub_1834FBEF8((unint64_t *)&qword_1E8F61F68, &qword_1E8F61F60);
        sub_183D44A8C();
        swift_bridgeObjectRelease();
        uint64_t v30 = Request;
        uint64_t v31 = Request;
        uint64_t v32 = (void *)sub_183D44AEC();
        unint64_t v33 = (void *)sub_183D44AEC();
        swift_bridgeObjectRelease();
        _CFHTTPMessageAddHeaderFieldValue();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        CFHTTPMessageRef Request = v31;
        uint64_t v29 = v63;
      }
      LODWORD(v65) = 0;
      uint64_t v27 = *v68;
      unint64_t v28 = *(void *)(*v68 + 16);
    }
    while (v28 != v29);
  }
LABEL_30:
  swift_release();
  if (CFURLRequestCreateHTTPRequest())
  {

    CFURLRef v60 = v66;
  }
  else
  {
LABEL_33:
    __break(1u);
  }
}

uint64_t sub_183539C60(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  sub_1835AF404(0, v2, 0);
  uint64_t v3 = v10;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_1834F26A8(i, (uint64_t)v9);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1835AF404(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v10;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      unint64_t v5 = *(void *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1835AF404(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v10;
      }
      *(void *)(v3 + 16) = v6 + 1;
      *(void *)(v3 + 8 * v6 + 32) = v8;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    return 0;
  }
  return v3;
}

uint64_t sub_183539DA0(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61F40);
  MEMORY[0x1F4188790](v4 - 8);
  v61[0] = (uint64_t)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18353A700(a1, v82);
  uint64_t v6 = *((void *)v1 + 2);
  uint64_t v7 = *((void *)v1 + 3);
  char v8 = *((unsigned char *)v1 + 32);
  long long v9 = *(long long *)((char *)v1 + 40);
  uint64_t v10 = *((void *)v1 + 7);
  uint64_t v11 = *((void *)v1 + 8);
  uint64_t v12 = *((void *)v1 + 9);
  long long v83 = *v1;
  uint64_t v84 = v6;
  uint64_t v85 = v7;
  char v86 = v8;
  long long v87 = v9;
  uint64_t v88 = v10;
  uint64_t v89 = v11;
  uint64_t v62 = v12;
  uint64_t v90 = v12;
  HTTPResponse.status.getter(&v76);
  CFIndex v13 = v76;
  CFAllocatorRef v14 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  swift_bridgeObjectRetain();
  long long v15 = (__CFString *)sub_183D44AEC();
  swift_bridgeObjectRelease();
  uint64_t v16 = (__CFString *)sub_183D44AEC();
  v61[1] = (uint64_t)v14;
  CFHTTPMessageRef Response = CFHTTPMessageCreateResponse(v14, v13, v15, v16);

  swift_bridgeObjectRelease();
  sub_18353A700(v82, &v83);
  if (sub_183538848((uint64_t)&v83) == 1)
  {
    uint64_t v17 = *(void **)sub_183538854((uint64_t)&v83);
    sub_18353A700(v82, &v76);
    int v18 = *(void **)sub_183538854((uint64_t)&v76);
    sub_18353A714((uint64_t)v82, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_183537DBC);
    id v19 = v18;
    id v20 = objc_msgSend(v17, sel_contentDispositionEncodingFallbackArray);
    if (v20)
    {
      CFURLRef v21 = v20;
      uint64_t v22 = sub_183D44E4C();

      uint64_t v23 = sub_183539C60(v22);
      sub_18353A714((uint64_t)v82, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_183537FEC);
      uint64_t v24 = v23;
      swift_bridgeObjectRelease();
      sub_18353A714((uint64_t)v82, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_183537FEC);
      goto LABEL_7;
    }
    sub_18353A714((uint64_t)v82, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_183537FEC);
    sub_18353A714((uint64_t)v82, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_183537FEC);
  }
  else
  {
    sub_183538854((uint64_t)&v83);
  }
  uint64_t v24 = 0;
LABEL_7:
  uint64_t v25 = v62;
  swift_retain();
  swift_beginAccess();
  uint64_t v26 = *(void *)(v25 + 16);
  uint64_t v27 = *(void **)(v26 + 16);
  if (!v27)
  {
LABEL_49:
    swift_bridgeObjectRelease();
    swift_release();
    sub_18353A700(v82, &v76);
    if (sub_183538848((uint64_t)&v76) == 1)
    {
      id v53 = objc_msgSend(*(id *)sub_183538854((uint64_t)&v76), sel_URL);
      if (v53)
      {
LABEL_54:
        uint64_t v59 = CFURLResponseCreateWithHTTPResponse();

        if (!v59) {
          goto LABEL_59;
        }

        self;
        return swift_dynamicCastObjCClassUnconditional();
      }
      __break(1u);
    }
    uint64_t v54 = (const void *)sub_183538854((uint64_t)&v76);
    memcpy(v74, v54, sizeof(v74));
    sub_18353A700(v82, v75);
    uint64_t v55 = (void *)sub_183538854((uint64_t)v75);
    sub_18350BA8C(v55);
    uint64_t v56 = v61[0];
    HTTPRequest.url.getter(v61[0]);
    uint64_t v57 = sub_183D4447C();
    uint64_t v58 = *(void *)(v57 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57) == 1) {
      goto LABEL_60;
    }
    id v53 = (id)sub_183D4441C();
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v56, v57);
    sub_18353A714((uint64_t)v82, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_183537FEC);
    goto LABEL_54;
  }
  unint64_t v2 = 0;
  uint64_t v70 = 0;
  uint64_t v71 = (uint64_t *)(v25 + 16);
  uint64_t v63 = "Content-Disposition";
  uint64_t v64 = v24;
  unint64_t v65 = 0x8000000183E25370;
  while (v2 < (unint64_t)v27)
  {
    uint64_t v33 = v26 + (v2 << 6);
    uint64_t v35 = *(void *)(v33 + 32);
    uint64_t v34 = *(void *)(v33 + 40);
    uint64_t v36 = *(void *)(v33 + 48);
    uint64_t v37 = *(void *)(v33 + 56);
    char v38 = *(unsigned char *)(v33 + 64);
    unint64_t v40 = *(void *)(v33 + 72);
    unint64_t v39 = *(void *)(v33 + 80);
    v78[0] = v35;
    v78[1] = v34;
    v78[2] = v36;
    v78[3] = v37;
    char v79 = v38;
    unint64_t v80 = v40;
    unint64_t v81 = v39;
    if (!v24 || (v36 != 0xD000000000000013 || v37 != v65) && (sub_183D4592C() & 1) == 0)
    {
      uint64_t v28 = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_10;
    }
    uint64_t v66 = v35;
    uint64_t v67 = v37;
    uint64_t v68 = v34;
    unint64_t v69 = v2;
    if ((v39 & 0x2000000000000000) != 0) {
      unint64_t v41 = HIBYTE(v39) & 0xF;
    }
    else {
      unint64_t v41 = v40 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v42 = (v40 >> 59) & 1;
    if ((v39 & 0x1000000000000000) == 0) {
      LOBYTE(v42) = 1;
    }
    uint64_t v43 = 4 << v42;
    uint64_t v73 = v39 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v44 = 15;
    do
    {
      while (1)
      {
        if (4 * v41 == v44 >> 14)
        {
          CFIndex v76 = v40;
          unint64_t v77 = v39;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          uint64_t v48 = v64;
          swift_bridgeObjectRetain_n();
          unint64_t v2 = Response;
          uint64_t v49 = v70;
          char v50 = sub_18353A9A8(&v76, v48);
          swift_bridgeObjectRelease();
          uint64_t v70 = v49;
          if (v49) {
            goto LABEL_61;
          }

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          goto LABEL_46;
        }
        unint64_t v45 = v44 & 0xC;
        unint64_t v46 = v44;
        if (v45 == v43) {
          unint64_t v46 = sub_183520284(v44, v40, v39);
        }
        unint64_t v2 = v46 >> 16;
        if (v46 >> 16 >= v41)
        {
          __break(1u);
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        if ((v39 & 0x1000000000000000) == 0) {
          break;
        }
        unint64_t v2 = sub_183D44CFC();
        if (v45 == v43) {
          goto LABEL_33;
        }
LABEL_36:
        if ((v39 & 0x1000000000000000) != 0) {
          goto LABEL_37;
        }
LABEL_23:
        unint64_t v44 = (v44 & 0xFFFFFFFFFFFF0000) + 65540;
        if ((v2 & 0x80) != 0) {
          goto LABEL_44;
        }
      }
      if ((v39 & 0x2000000000000000) != 0)
      {
        CFIndex v76 = v40;
        unint64_t v77 = v73;
        unint64_t v2 = *((unsigned __int8 *)&v76 + v2);
        if (v45 == v43) {
          goto LABEL_33;
        }
        goto LABEL_36;
      }
      uint64_t v47 = (v39 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((v40 & 0x1000000000000000) == 0) {
        uint64_t v47 = sub_183D4557C();
      }
      unint64_t v2 = *(unsigned __int8 *)(v47 + v2);
      if (v45 != v43) {
        goto LABEL_36;
      }
LABEL_33:
      unint64_t v44 = sub_183520284(v44, v40, v39);
      if ((v39 & 0x1000000000000000) == 0) {
        goto LABEL_23;
      }
LABEL_37:
      if (v41 <= v44 >> 16) {
        goto LABEL_57;
      }
      unint64_t v44 = sub_183D44CBC();
    }
    while ((v2 & 0x80) == 0);
LABEL_44:
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v51 = v64;
    swift_bridgeObjectRetain_n();
    unint64_t v2 = Response;
    uint64_t v52 = v70;
    char v50 = sub_1835A5A40(v40, v39, v51, (void *)v2, (uint64_t)v78);
    uint64_t v48 = v51;
    swift_bridgeObjectRelease_n();

    uint64_t v70 = v52;
    if (v52) {
      goto LABEL_62;
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
LABEL_46:
    uint64_t v24 = v48;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v32 = v71;
    unint64_t v2 = v69;
    if (v50)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    uint64_t v28 = v24;
LABEL_10:
    uint64_t v29 = Response;
    uint64_t v30 = (void *)sub_183D44AEC();
    uint64_t v31 = (void *)sub_183D44AEC();
    _CFHTTPMessageAddHeaderFieldValue();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v24 = v28;
    uint64_t v32 = v71;
LABEL_11:
    ++v2;
    swift_beginAccess();
    uint64_t v26 = *v32;
    uint64_t v27 = *(void **)(*v32 + 16);
    if ((void *)v2 == v27) {
      goto LABEL_49;
    }
  }
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  sub_18353A714((uint64_t)v82, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_183537FEC);
  __break(1u);
LABEL_61:
  swift_bridgeObjectRelease_n();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_62:

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_bridgeObjectRelease_n();
  __break(1u);
  return result;
}

void *sub_18353A700(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x120uLL);
}

uint64_t sub_18353A714(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v5 = *(_OWORD *)(a1 + 240);
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v4 = *(_OWORD *)(a1 + 208);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    *(void *)(a1 + 272),
    *(void *)(a1 + 280));
  return a1;
}

uint64_t sub_18353A7A0(long long *a1)
{
  long long v3 = *a1;
  sub_18353ACF4((uint64_t)&v3);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1835206FC();
  sub_18353AD20((uint64_t)&v3);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = sub_183D44C1C();
  swift_release();
  return v1;
}

uint64_t sub_18353A85C(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1835208CC(a1, a2);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_183D44C1C();
  swift_release();
  return v4;
}

uint64_t sub_18353A8F4(uint64_t a1, unint64_t a2)
{
  sub_1832E5D6C(a1, a2);
  sub_183517F48(a1, a2);
  sub_1832E5E9C(a1, a2);
  uint64_t v4 = sub_183D44C1C();
  swift_release();
  return v4;
}

uint64_t sub_18353A96C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_183D44C1C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_18353A9A8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_183D44B6C();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  if ((v5 & 0x1000000000000000) == 0)
  {
    if ((v5 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_11:
    uint64_t v14 = *(void *)(a2 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = 0;
      while (1)
      {
        sub_183D44B5C();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61CD0);
        sub_1834FBEF8((unint64_t *)&qword_1E8F61CD8, &qword_1E8F61CD0);
        sub_183D44B2C();
        if (v16) {
          break;
        }
        if (v14 == ++v15)
        {
LABEL_15:
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      swift_bridgeObjectRelease();
      int v18 = (void *)sub_183D44AEC();
      id v19 = (void *)sub_183D44AEC();
      swift_bridgeObjectRelease();
      _CFHTTPMessageAddHeaderFieldValue();

      return 1;
    }
    return 0;
  }
  uint64_t v6 = sub_18359979C();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  *a1 = v6;
  a1[1] = v13;
  if ((v13 & 0x2000000000000000) != 0) {
    goto LABEL_11;
  }
LABEL_3:
  if ((v6 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 16);
    if (v7) {
      goto LABEL_5;
    }
  }
  else
  {
    sub_183D4557C();
    uint64_t v7 = *(void *)(a2 + 16);
    if (v7)
    {
LABEL_5:
      swift_bridgeObjectRetain();
      uint64_t v8 = 0;
      while (1)
      {
        sub_183D44B5C();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61CD0);
        sub_1834FBEF8((unint64_t *)&qword_1E8F61CD8, &qword_1E8F61CD0);
        sub_183D44B2C();
        if (v9) {
          break;
        }
        if (v7 == ++v8) {
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v10 = (void *)sub_183D44AEC();
      uint64_t v11 = (void *)sub_183D44AEC();
      swift_bridgeObjectRelease();
      _CFHTTPMessageAddHeaderFieldValue();

      return 1;
    }
  }
  return 0;
}

uint64_t sub_18353ACA4()
{
  return swift_deallocObject();
}

uint64_t sub_18353ACB4(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  return sub_183538E94(a1, a2, a3, a4, *(uint64_t **)(v4 + 16));
}

uint64_t sub_18353ACBC()
{
  return swift_deallocObject();
}

uint64_t sub_18353ACCC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_18353ACF4(uint64_t a1)
{
  return a1;
}

uint64_t sub_18353AD20(uint64_t a1)
{
  return a1;
}

uint64_t sub_18353AD4C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CB18]), sel_init);
  *(void *)&v5[0] = 6256494;
  *((void *)&v5[0] + 1) = 0xE300000000000000;
  sub_183D44C8C();
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)sub_183D44AEC();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_valueForKey_, v1);

  if (v2)
  {
    sub_183D453DC();

    swift_unknownObjectRelease();
    sub_1835249AC(&v4, v5);
  }
  else
  {

    memset(v5, 0, sizeof(v5));
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61D90);
  if (swift_dynamicCast()) {
    return v4;
  }
  else {
    return 2;
  }
}

uint64_t sub_18353AEA0()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CB18]), sel_init);
  *(void *)&v7[0] = 6256494;
  *((void *)&v7[0] + 1) = 0xE300000000000000;
  sub_183D44C8C();
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)sub_183D44AEC();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_valueForKey_, v1);

  if (v2)
  {
    sub_183D453DC();

    swift_unknownObjectRelease();
    sub_1835249AC(&v6, v7);
  }
  else
  {

    memset(v7, 0, sizeof(v7));
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61D90);
  int v3 = swift_dynamicCast();
  uint64_t v4 = v6;
  if (!v3) {
    return 0;
  }
  return v4;
}

uint64_t sub_18353AFF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F63BF0);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v52 = (uint64_t)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v51 = (char *)&v49 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F64A30);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v56 = (char *)&v49 - v11;
  if (qword_1E8F62118 != -1) {
LABEL_36:
  }
    swift_once();
  uint64_t v12 = sub_183D4498C();
  __swift_project_value_buffer(v12, (uint64_t)qword_1E8F63B90);
  swift_retain_n();
  uint64_t v13 = sub_183D4496C();
  os_log_type_t v14 = sub_183D452BC();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v53 = v1;
  if (v15)
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315138;
    *(void *)&long long v57 = v16 + 4;
    uint64_t v59 = 67;
    unint64_t v60 = 0xE100000000000000;
    uint64_t v61 = v17;
    uint64_t id = nw_connection_get_id(*(void **)(*(void *)(v1 + 16) + 16));
    sub_183D4589C();
    sub_183D44C8C();
    uint64_t v1 = v53;
    swift_bridgeObjectRelease();
    uint64_t v59 = sub_1834EFE70(v59, v60, &v61);
    sub_183D453AC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1830D4000, v13, v14, "%s: Invalidating", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v17, -1, -1);
    MEMORY[0x185318E50](v16, -1, -1);
  }
  else
  {

    uint64_t v18 = swift_release_n();
  }
  MEMORY[0x1F4188790](v18);
  *(&v49 - 2) = (uint64_t)sub_1835540C0;
  *(&v49 - 1) = v1;
  id v20 = v19 + 4;
  os_unfair_lock_lock(v19 + 4);
  sub_1834F0668(&v59);
  os_unfair_lock_unlock(v20);
  nw_connection_cancel(*(nw_connection_t *)(v59 + 16));
  uint64_t v21 = swift_release();
  MEMORY[0x1F4188790](v21);
  *(&v49 - 2) = (uint64_t)sub_1835540E0;
  *(&v49 - 1) = v1;
  os_unfair_lock_lock(v20);
  sub_1834F0460(&v59);
  uint64_t v49 = 0;
  os_unfair_lock_t v50 = v20;
  os_unfair_lock_unlock(v20);
  uint64_t v22 = v59;
  uint64_t v23 = *(void *)(v1 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_sendingFileTransferSession);
  if (v23) {
    objc_msgSend(*(id *)(v23 + 32), sel_invalidate);
  }
  uint64_t v24 = *(void *)(v1 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_receivingFileTransferSession);
  if (v24) {
    objc_msgSend(*(id *)(v24 + 32), sel_invalidate);
  }
  int64_t v25 = 0;
  uint64_t v26 = *(void *)(v22 + 64);
  uint64_t v54 = v22 + 64;
  uint64_t v27 = 1 << *(unsigned char *)(v22 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v26;
  int64_t v55 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v1 = v7 + 8;
  long long v57 = xmmword_183D584E0;
  while (1)
  {
    if (v29)
    {
      unint64_t v30 = __clz(__rbit64(v29));
      v29 &= v29 - 1;
      unint64_t v31 = v30 | (v25 << 6);
      goto LABEL_13;
    }
    int64_t v35 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v35 >= v55) {
      goto LABEL_31;
    }
    unint64_t v36 = *(void *)(v54 + 8 * v35);
    ++v25;
    if (!v36)
    {
      int64_t v25 = v35 + 1;
      if (v35 + 1 >= v55) {
        goto LABEL_31;
      }
      unint64_t v36 = *(void *)(v54 + 8 * v25);
      if (!v36)
      {
        int64_t v25 = v35 + 2;
        if (v35 + 2 >= v55) {
          goto LABEL_31;
        }
        unint64_t v36 = *(void *)(v54 + 8 * v25);
        if (!v36)
        {
          int64_t v25 = v35 + 3;
          if (v35 + 3 >= v55) {
            goto LABEL_31;
          }
          unint64_t v36 = *(void *)(v54 + 8 * v25);
          if (!v36) {
            break;
          }
        }
      }
    }
LABEL_30:
    unint64_t v29 = (v36 - 1) & v36;
    unint64_t v31 = __clz(__rbit64(v36)) + (v25 << 6);
LABEL_13:
    uint64_t v32 = v56;
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v56, *(void *)(v22 + 56) + *(void *)(v7 + 72) * v31, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v32, v6);
    sub_1834F0498();
    uint64_t v33 = swift_allocError();
    *(_OWORD *)uint64_t v34 = v57;
    *(void *)(v34 + 16) = 0xB000000000000000;
    uint64_t v59 = v33;
    sub_183D44F3C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  int64_t v37 = v35 + 4;
  if (v37 < v55)
  {
    unint64_t v36 = *(void *)(v54 + 8 * v37);
    if (!v36)
    {
      while (1)
      {
        int64_t v25 = v37 + 1;
        if (__OFADD__(v37, 1)) {
          goto LABEL_35;
        }
        if (v25 >= v55) {
          goto LABEL_31;
        }
        unint64_t v36 = *(void *)(v54 + 8 * v25);
        ++v37;
        if (v36) {
          goto LABEL_30;
        }
      }
    }
    int64_t v25 = v37;
    goto LABEL_30;
  }
LABEL_31:
  uint64_t v38 = swift_release();
  MEMORY[0x1F4188790](v38);
  uint64_t v39 = v53;
  *(&v49 - 2) = (uint64_t)sub_183553978;
  *(&v49 - 1) = v39;
  unint64_t v40 = v50;
  os_unfair_lock_lock(v50);
  uint64_t v41 = (uint64_t)v51;
  sub_183554138(v42);
  os_unfair_lock_unlock(v40);
  uint64_t v43 = v52;
  sub_183138900(v41, v52, (uint64_t *)&unk_1E8F63BF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61C90);
  uint64_t v45 = *(void *)(v44 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44) == 1)
  {
    sub_183138A24(v41, (uint64_t *)&unk_1E8F63BF0);
    return sub_183138A24(v43, (uint64_t *)&unk_1E8F63BF0);
  }
  else
  {
    sub_1834F0498();
    uint64_t v47 = swift_allocError();
    *(_OWORD *)uint64_t v48 = v57;
    *(void *)(v48 + 16) = 0xB000000000000000;
    uint64_t v59 = v47;
    sub_183D44F3C();
    sub_183138A24(v41, (uint64_t *)&unk_1E8F63BF0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
  }
}

uint64_t sub_18353B770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 152) = v20;
  *(void *)(v9 + 160) = v8;
  *(void *)(v9 + 136) = a7;
  *(void *)(v9 + 144) = v19;
  *(void *)(v9 + 120) = a2;
  *(void *)(v9 + 128) = a4;
  *(void *)(v9 + 112) = a1;
  *(void *)(v9 + 168) = *v8;
  *(void *)(v9 + 176) = type metadata accessor for NWFileSerializationContext(0);
  *(void *)(v9 + 184) = swift_task_alloc();
  uint64_t v15 = sub_183D4536C();
  *(void *)(v9 + 192) = v15;
  *(void *)(v9 + 200) = *(void *)(v15 - 8);
  *(void *)(v9 + 208) = swift_task_alloc();
  *(void *)(v9 + 216) = *(void *)(v19 - 8);
  *(void *)(v9 + 224) = swift_task_alloc();
  *(_OWORD *)(v9 + 96) = *a6;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v9 + 232) = v16;
  *uint64_t v16 = v9;
  v16[1] = sub_18353B968;
  return sub_18353CFE8(a3, a4, a5, (_OWORD *)(v9 + 96), a8);
}

uint64_t sub_18353B968(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[30] = a1;
  v4[31] = a2;
  v4[32] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_18353BF44;
  }
  else {
    uint64_t v5 = sub_18353BA80;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_18353BA80()
{
  uint64_t v38 = v0;
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[20];
  uint64_t v3 = *(os_unfair_lock_s **)(v2 + 80);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = sub_183554118;
  *(void *)(v4 + 24) = v2;
  os_unfair_lock_lock(v3 + 4);
  sub_183551478(v37);
  os_unfair_lock_unlock(v3 + 4);
  if (v1)
  {
    return swift_task_dealloc();
  }
  char v6 = v37[0];
  swift_task_dealloc();
  if ((v6 & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v7 = v0[17];
  uint64_t v8 = swift_conformsToProtocol2();
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  if (!v8) {
    uint64_t v7 = 0;
  }
  if (!v7) {
    goto LABEL_15;
  }
  uint64_t v11 = v0[30];
  unint64_t v10 = v0[31];
  uint64_t v12 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v9 + 24);
  v0[5] = v7;
  v0[6] = v9;
  __swift_allocate_boxed_opaque_existential_0(v0 + 2);
  sub_1832E5D6C(v11, v10);
  v12(v11, v10, v7, v9);
  uint64_t v13 = v0[27];
  sub_1834BDE24((uint64_t)(v0 + 2), (uint64_t)(v0 + 7));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63D30);
  int v14 = swift_dynamicCast();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (!v14)
  {
    uint64_t v25 = v0[25];
    uint64_t v24 = v0[26];
    uint64_t v26 = v0[24];
    v15(v24, 1, 1, v0[18]);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    uint64_t v27 = sub_183D4554C();
    uint64_t v28 = (void *)swift_allocError();
    unint64_t v30 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63D38);
    __swift_project_boxed_opaque_existential_2(v0 + 2, v0[5]);
    uint64_t *v30 = swift_getDynamicType();
    sub_183D4553C();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v30, *MEMORY[0x1E4FBBA70], v27);
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_2((uint64_t)(v0 + 2));

LABEL_15:
    uint64_t v31 = v0[22];
    uint64_t v32 = (void *)v0[23];
    uint64_t v33 = v0[20];
    uint64_t v34 = v0[16];
    uint64_t v35 = v0[15];
    v32[3] = v0[21];
    v32[4] = &off_1ECF5B4A8;
    *uint64_t v32 = v33;
    sub_1835539B4(v34, (uint64_t)v32 + *(int *)(v31 + 20), (uint64_t (*)(void))type metadata accessor for NWActorID);
    swift_retain();
    sub_1834BE000(v35, (uint64_t)v32);
    sub_183553108((uint64_t)v32, type metadata accessor for NWFileSerializationContext);
    sub_183D4423C();
    swift_release();
    sub_1832E5E9C(v0[30], v0[31]);
    goto LABEL_16;
  }
  uint64_t v17 = v0[30];
  unint64_t v16 = v0[31];
  uint64_t v19 = v0[27];
  uint64_t v18 = v0[28];
  uint64_t v20 = v0[26];
  uint64_t v21 = v0[18];
  uint64_t v22 = v0[14];
  v15(v20, 0, 1, v21);
  sub_1832E5E9C(v17, v16);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32);
  v23(v18, v20, v21);
  v23(v22, v18, v21);
  __swift_destroy_boxed_opaque_existential_2((uint64_t)(v0 + 2));
LABEL_16:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v36 = (uint64_t (*)(void))v0[1];
  return v36();
}

uint64_t sub_18353BF44()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_18353BFC8(void *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

uint64_t sub_18353BFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (os_unfair_lock_s *)(*(void *)(v2 + 80) + 16);
  os_unfair_lock_lock(v4);
  sub_183554138(v5);
  os_unfair_lock_unlock(v4);
  type metadata accessor for NWActivity();
  swift_allocObject();
  char v6 = *(void **)(NWActivity.init(domain:label:)(0x39uLL, 1uLL) + 16);
  nw_activity_set_parent_activity(v6, *(void **)(*(void *)(a2 + 112) + 16));
  nw_activity_activate(v6);
  os_unfair_lock_lock(v4);
  sub_183554138(v7);
  os_unfair_lock_unlock(v4);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_18315ED5C((uint64_t)sub_183553650);
  NWConnection.stateUpdateHandler.setter((uint64_t)sub_183553650, v8);
  swift_release_n();
  if (qword_1E8F62128 != -1) {
    swift_once();
  }
  NWConnection.start(queue:)(qword_1E8F63BC0);
  return swift_release();
}

uint64_t sub_18353C19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_183D44FAC();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_183D44F9C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_183138A24(a1, &qword_1E8F63038);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_183D44F2C();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_18353C348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_183D44FAC();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_183D44F9C();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_183138A24(a1, &qword_1E8F63038);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_183D44F2C();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_18353C4D0()
{
  uint64_t v0 = sub_183D4498C();
  __swift_allocate_value_buffer(v0, qword_1E8F63B90);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E8F63B90);
  if (qword_1E8F621C0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1E8F7A940);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_18353C598()
{
  uint64_t v0 = sub_183D4498C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_183D4490C();
  __swift_allocate_value_buffer(v4, qword_1E8F63BA8);
  __swift_project_value_buffer(v4, (uint64_t)qword_1E8F63BA8);
  if (qword_1E8F62118 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)qword_1E8F63B90);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return sub_183D448EC();
}

uint64_t sub_18353C6D4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection__associatedActorIDs);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_18353C738()
{
  uint64_t v0 = sub_183D452EC();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_183D452DC();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_183D449EC();
  MEMORY[0x1F4188790](v5 - 8);
  sub_183553E5C(0, (unint64_t *)&qword_1E8F63D40);
  sub_183D449DC();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_183553930(&qword_1E8F62ED8, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F63D50);
  sub_1834E06D0();
  sub_183D453FC();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t result = sub_183D4531C();
  qword_1E8F63BC0 = result;
  return result;
}

uint64_t sub_18353C978()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63C60);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v14 - v5;
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_megabytes);
  sub_183553E5C(0, (unint64_t *)&unk_1E8F63C68);
  sub_183D442BC();
  id v9 = objc_msgSend(v7, sel_bytes);
  sub_183D442DC();

  unint64_t v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  sub_183D442CC();
  double v12 = v11;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v10)(v6, v0);
  if ((~*(void *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v12 < 9.22337204e18)
  {
    qword_1E8F63BC8 = (uint64_t)v12;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_18353CB5C()
{
  uint64_t result = os_variant_has_internal_content();
  byte_1E8F63BD0 = result;
  return result;
}

uint64_t sub_18353CB84()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63C58);
  swift_allocObject();
  uint64_t result = sub_183D45C5C();
  qword_1E8F63BD8 = result;
  return result;
}

uint64_t sub_18353CBD8(uint64_t a1, char a2)
{
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 24) = 0u;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61DC0);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  uint64_t v6 = MEMORY[0x1E4FBC868];
  *(void *)(v2 + 80) = v5;
  *(void *)(v2 + 88) = v6;
  *(void *)(v2 + 96) = v6;
  uint64_t v7 = v2 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_resolvedActorIDContinuation;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61C90);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  *(void *)(v2 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection__associatedActorIDs) = MEMORY[0x1E4FBC860];
  *(void *)(v2 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_sendingFileTransferSession) = 0;
  *(void *)(v2 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_receivingFileTransferSession) = 0;
  *(void *)(v2 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_incomingFiles) = v9;
  *(unsigned char *)(v2 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_isDisconnected) = 0;
  *(void *)(v2 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_interruptionHandlers) = v9;
  *(unsigned char *)(v2 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_supportsCustomSerialization) = 0;
  *(void *)(v2 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_connectionEstablishedActivity) = 0;
  *(void *)(v2 + 16) = a1;
  *(unsigned char *)(v2 + 72) = a2;
  *(unsigned char *)(v2 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_allowCustomSerialization) = sub_18353AD4C() & 1;
  return v2;
}

void sub_18353CD1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(a2 + 80) + 16);
  os_unfair_lock_lock(v2);
  sub_183554138(v3);
  os_unfair_lock_unlock(v2);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_18315ED5C((uint64_t)sub_183553650);
  NWConnection.stateUpdateHandler.setter((uint64_t)sub_183553650, v4);
  swift_release_n();
  if (qword_1E8F62128 != -1) {
    swift_once();
  }
  NWConnection.start(queue:)(qword_1E8F63BC0);
}

uint64_t sub_18353CE30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F63BF0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61C90);
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  uint64_t v9 = a1 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_resolvedActorIDContinuation;
  swift_beginAccess();
  sub_183553DB4((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_18353CF6C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 88);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 88) = sub_1835965A8(MEMORY[0x1E4FBC860]);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_18353CFE8(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, uint64_t a5)
{
  *(void *)(v6 + 136) = a5;
  *(void *)(v6 + 144) = v5;
  *(void *)(v6 + 120) = a2;
  *(void *)(v6 + 128) = a3;
  *(void *)(v6 + 112) = a1;
  *(void *)(v6 + 152) = *v5;
  *(void *)(v6 + 160) = type metadata accessor for RemoteCallEnvelope(0);
  *(void *)(v6 + 168) = swift_task_alloc();
  *(_OWORD *)(v6 + 176) = *a4;
  return MEMORY[0x1F4188298](sub_18353D0B8, 0, 0);
}

uint64_t sub_18353D0B8()
{
  uint64_t v33 = v0;
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(*(void *)(v0 + 136) + 112);
  uint64_t v3 = *(void **)(*(void *)(v1 + 16) + 16);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t ObjectType = swift_getObjectType();
  *(void *)(v0 + 56) = v4;
  *(void *)(v0 + 80) = ObjectType;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61E90);
  swift_dynamicCast();
  nw_connection_start_activity(v3, *(void **)(v0 + 104));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v6 = *(os_unfair_lock_s **)(v1 + 80);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v7 + 16) = sub_183554118;
  *(void *)(v7 + 24) = v1;
  os_unfair_lock_lock(v6 + 4);
  sub_183551478(&v32);
  os_unfair_lock_unlock(v6 + 4);
  uint64_t v8 = *(void *)(v0 + 144);
  uint64_t v9 = *(void *)(v0 + 152);
  uint64_t v10 = *(void *)(v0 + 120);
  int v11 = v32;
  *(unsigned char *)(v0 + 248) = v32;
  long long v31 = *(_OWORD *)(v0 + 176);
  swift_task_dealloc();
  long long v32 = v31;
  *(void *)(v0 + 40) = v9;
  *(void *)(v0 + 48) = &off_1ECF5B4A8;
  *(void *)(v0 + 16) = v8;
  swift_retain();
  double v12 = sub_1834BD91C(v0 + 16, v10, v11);
  uint64_t v13 = *(void *)(v0 + 168);
  uint64_t v14 = *(void *)(v0 + 176);
  uint64_t v15 = *(int **)(v0 + 160);
  uint64_t v16 = *(void *)(v0 + 120);
  uint64_t v17 = *(void *)(v0 + 112);
  __swift_destroy_boxed_opaque_existential_2(v0 + 16);
  uint64_t is_selected_for_reporting = nw_activity_is_selected_for_reporting(*(void **)(v2 + 16));
  uint64_t v19 = sub_183D445FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v13, v17, v19);
  sub_1835539B4(v16, v13 + v15[5], (uint64_t (*)(void))type metadata accessor for NWActorID);
  uint64_t v20 = sub_183D4464C();
  uint64_t v21 = (uint64_t *)(v13 + v15[6]);
  *uint64_t v21 = v20;
  v21[1] = v22;
  *(void *)(v13 + v15[7]) = v14;
  *(void *)(v13 + v15[8]) = v12;
  *(void *)(v13 + v15[9]) = is_selected_for_reporting;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1835B2CA4();
  *(void *)(v0 + 192) = v23;
  *(void *)(v0 + 200) = v24;
  uint64_t v25 = 0;
  switch(v24 >> 62)
  {
    case 1uLL:
      LODWORD(v25) = HIDWORD(v23) - v23;
      if (__OFSUB__(HIDWORD(v23), v23))
      {
        __break(1u);
LABEL_10:
        __break(1u);
        JUMPOUT(0x18353D440);
      }
      uint64_t v25 = (int)v25;
LABEL_6:
      *(void *)(v0 + 208) = v25;
      uint64_t v29 = *(void *)(v0 + 136);
      return MEMORY[0x1F4188298](sub_18353D450, v29, 0);
    case 2uLL:
      uint64_t v27 = *(void *)(v23 + 16);
      uint64_t v26 = *(void *)(v23 + 24);
      BOOL v28 = __OFSUB__(v26, v27);
      uint64_t v25 = v26 - v27;
      if (!v28) {
        goto LABEL_6;
      }
      goto LABEL_10;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v25 = BYTE6(v24);
      goto LABEL_6;
  }
}

uint64_t sub_18353D450()
{
  *(void *)(*(void *)(v0 + 136) + 120) = *(void *)(v0 + 208);
  return MEMORY[0x1F4188298](sub_18353D478, 0, 0);
}

uint64_t sub_18353D478()
{
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v1 = *(void *)(v0 + 200);
  char v3 = *(unsigned char *)(v0 + 248);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v8 = *(void *)(v0 + 112);
  uint64_t v9 = swift_task_alloc();
  *(void *)(v0 + 216) = v9;
  *(void *)(v9 + 16) = v5;
  *(void *)(v9 + 24) = v8;
  *(void *)(v9 + 32) = v6;
  *(void *)(v9 + 40) = v2;
  *(void *)(v9 + 48) = v1;
  *(unsigned char *)(v9 + 56) = 6;
  *(unsigned char *)(v9 + 57) = v3;
  *(void *)(v9 + 64) = v7;
  *(void *)(v9 + 72) = v4;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v10;
  v10[2] = v8;
  v10[3] = v5;
  v10[4] = v6;
  int v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v11;
  *int v11 = v0;
  v11[1] = sub_18353D5D0;
  uint64_t v12 = MEMORY[0x1E4F277C0];
  return MEMORY[0x1F4188148](v0 + 88, &unk_1E8F63CB0, v9, sub_183553260, v10, 0, 0, v12);
}

uint64_t sub_18353D5D0()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_18353D7D8;
  }
  else {
    uint64_t v2 = sub_18353D720;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_18353D720()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[18];
  sub_1832E5E9C(v0[24], v0[25]);
  sub_183553108(v1, type metadata accessor for RemoteCallEnvelope);
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  sub_18353D870(v2);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v5(v3, v4);
}

uint64_t sub_18353D7D8()
{
  uint64_t v1 = v0[21];
  sub_1832E5E9C(v0[24], v0[25]);
  sub_183553108(v1, type metadata accessor for RemoteCallEnvelope);
  sub_18353D870(v0[18]);
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_18353D870(uint64_t a1)
{
  uint64_t v1 = *(void **)(*(void *)(a1 + 16) + 16);
  swift_getObjectType();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61E90);
  swift_dynamicCast();
  nw_connection_end_activity(v1, v3);
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_18353D910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  *(void *)(v8 + 320) = v13;
  *(void *)(v8 + 328) = v14;
  *(unsigned char *)(v8 + 67) = a8;
  *(unsigned char *)(v8 + 66) = a7;
  *(void *)(v8 + 304) = a5;
  *(void *)(v8 + 312) = a6;
  *(void *)(v8 + 288) = a3;
  *(void *)(v8 + 296) = a4;
  *(void *)(v8 + 272) = a1;
  *(void *)(v8 + 280) = a2;
  uint64_t v9 = sub_183D445FC();
  *(void *)(v8 + 336) = v9;
  *(void *)(v8 + 344) = *(void *)(v9 - 8);
  *(void *)(v8 + 352) = swift_task_alloc();
  uint64_t v10 = sub_183D4465C();
  *(void *)(v8 + 360) = v10;
  *(void *)(v8 + 368) = *(void *)(v10 - 8);
  *(void *)(v8 + 376) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_18353DA48, 0, 0);
}

uint64_t sub_18353DA48()
{
  uint64_t v1 = *(void *)(v0 + 328);
  char v2 = *(unsigned char *)(v0 + 67);
  char v3 = *(unsigned char *)(v0 + 66);
  uint64_t v5 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 312);
  uint64_t v7 = *(void *)(v0 + 288);
  uint64_t v6 = *(void *)(v0 + 296);
  uint64_t v8 = *(void *)(v0 + 280);
  uint64_t v9 = swift_task_alloc();
  *(void *)(v0 + 384) = v9;
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v8;
  *(void *)(v9 + 32) = v5;
  *(void *)(v9 + 40) = v4;
  *(void *)(v9 + 48) = v7;
  *(unsigned char *)(v9 + 56) = v3;
  *(unsigned char *)(v9 + 57) = v2;
  *(void *)(v9 + 64) = v1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 392) = v10;
  v10[2] = v8;
  v10[3] = v7;
  v10[4] = sub_18355344C;
  v10[5] = v9;
  int v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 400) = v11;
  *int v11 = v0;
  v11[1] = sub_18353DBB0;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000024, 0x8000000183E25FB0, sub_183553488, v10, &_s15ActorConnectionC11ReplyResultVN);
}

uint64_t sub_18353DBB0()
{
  *(void *)(*(void *)v1 + 408) = v0;
  swift_task_dealloc();
  if (v0)
  {
    char v2 = sub_18353DCCC;
  }
  else
  {
    swift_task_dealloc();
    char v2 = sub_18353DF78;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_18353DCCC()
{
  uint64_t v1 = *(void **)(v0 + 408);
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)(v0 + 248) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63CE0);
  if (!swift_dynamicCast()) {
    goto LABEL_16;
  }
  char v3 = *(void **)(v0 + 200);
  unint64_t v4 = *(void *)(v0 + 208);
  unint64_t v5 = *(void *)(v0 + 216);
  if (v5 >> 60 != 11 || v3 != (void *)4 || v4 || v5 != 0xB000000000000000) {
    goto LABEL_15;
  }
  uint64_t v6 = *(void **)(v0 + 408);
  *(void *)(v0 + 224) = v6;
  id v7 = v6;
  if (!swift_dynamicCast())
  {
LABEL_16:
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    char v13 = 2;
    uint64_t v14 = 1;
    goto LABEL_17;
  }
  char v3 = *(void **)(v0 + 176);
  unint64_t v4 = *(void *)(v0 + 184);
  unint64_t v5 = *(void *)(v0 + 192);
  if (v5 >> 60 != 11 || v3 != (void *)5 || v4 || v5 != 0xB000000000000000)
  {
LABEL_15:
    sub_183553494(v3, v4, v5);
    goto LABEL_16;
  }
  uint64_t v8 = *(void **)(v0 + 408);
  *(void *)(v0 + 232) = v8;
  id v9 = v8;
  if (!swift_dynamicCast()) {
    goto LABEL_16;
  }
  unint64_t v10 = *(void *)(v0 + 168);
  sub_183553494(*(void **)(v0 + 152), *(void *)(v0 + 160), v10);
  if (v10 >> 60 != 8) {
    goto LABEL_16;
  }
  int v11 = *(void **)(v0 + 408);
  *(void *)(v0 + 240) = v11;
  id v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63CE8);
  if (swift_dynamicCast())
  {
    sub_1834D9964((long long *)(v0 + 72), v0 + 112);
    __swift_project_boxed_opaque_existential_2((void *)(v0 + 112), *(void *)(v0 + 136));
    char v13 = 1;
    swift_getDynamicType();
    uint64_t v14 = sub_183D442EC();
    uint64_t v16 = v15;
    __swift_project_boxed_opaque_existential_2((void *)(v0 + 112), *(void *)(v0 + 136));
    uint64_t v17 = sub_183D442FC();
    __swift_destroy_boxed_opaque_existential_2(v0 + 112);
  }
  else
  {
    *(void *)(v0 + 104) = 0;
    *(_OWORD *)(v0 + 72) = 0u;
    *(_OWORD *)(v0 + 88) = 0u;
    sub_183138A24(v0 + 72, (uint64_t *)&unk_1E8F63CF0);
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v14 = 2;
    char v13 = 2;
  }
LABEL_17:
  *(unsigned char *)(v0 + 69) = v13;
  *(void *)(v0 + 472) = v16;
  *(void *)(v0 + 480) = v17;
  *(void *)(v0 + 464) = v14;
  uint64_t v18 = *(void *)(v0 + 296);
  return MEMORY[0x1F4188298](sub_18353E4C4, v18, 0);
}

uint64_t sub_18353DF78()
{
  uint64_t v32 = v0;
  long long v1 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 416) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 432) = v1;
  *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 48);
  *(unsigned char *)(v0 + 68) = *(unsigned char *)(v0 + 64);
  char v30 = *(unsigned char *)(v0 + 65);
  swift_task_dealloc();
  if (qword_1E8F62118 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v2 = *(void *)(v0 + 376);
  uint64_t v5 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v6 = *(void *)(v0 + 336);
  uint64_t v7 = *(void *)(v0 + 344);
  uint64_t v8 = *(void *)(v0 + 320);
  uint64_t v9 = *(void *)(v0 + 288);
  uint64_t v10 = sub_183D4498C();
  __swift_project_value_buffer(v10, (uint64_t)qword_1E8F63B90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v8, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v9, v6);
  int v11 = sub_183D4496C();
  os_log_type_t v12 = sub_183D452BC();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v15 = *(void *)(v0 + 368);
  uint64_t v14 = *(void *)(v0 + 376);
  uint64_t v16 = *(void *)(v0 + 352);
  uint64_t v17 = *(void *)(v0 + 360);
  uint64_t v19 = *(void *)(v0 + 336);
  uint64_t v18 = *(void *)(v0 + 344);
  if (v13)
  {
    os_log_type_t type = v12;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v31 = v29;
    *(_DWORD *)uint64_t v20 = 136315394;
    sub_183553930(&qword_1E8F62F50, MEMORY[0x1E4FBCCE8]);
    uint64_t v21 = sub_183D4589C();
    *(void *)(v0 + 256) = sub_1834EFE70(v21, v22, &v31);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v17);
    *(_WORD *)(v20 + 12) = 2080;
    sub_183553930((unint64_t *)&qword_1E8F62F30, MEMORY[0x1E4F27990]);
    uint64_t v23 = sub_183D4589C();
    *(void *)(v0 + 264) = sub_1834EFE70(v23, v24, &v31);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v19);
    _os_log_impl(&dword_1830D4000, v11, type, "Completed call: %s callID: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v29, -1, -1);
    MEMORY[0x185318E50](v20, -1, -1);
  }
  else
  {
    (*(void (**)(void, void))(v15 + 8))(*(void *)(v0 + 376), *(void *)(v0 + 360));
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v19);
  }

  uint64_t v25 = *(void *)(v0 + 296);
  if (v30) {
    uint64_t v26 = sub_18353E334;
  }
  else {
    uint64_t v26 = sub_18353E2FC;
  }
  return MEMORY[0x1F4188298](v26, v25, 0);
}

uint64_t sub_18353E2FC()
{
  unsigned __int8 v1 = *(unsigned char *)(v0 + 68);
  uint64_t v2 = *(void *)(v0 + 296);
  long long v3 = *(_OWORD *)(v0 + 448);
  *(_OWORD *)(v2 + 136) = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v2 + 152) = v3;
  *(_WORD *)(v2 + 168) = v1;
  return MEMORY[0x1F4188298](sub_18353E334, *(void *)(v0 + 296), 0);
}

uint64_t sub_18353E334()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 296) + 112);
  unint64_t v2 = sub_183524E04();
  if (!sub_18352FC64(v2)) {
    return sub_183D456CC();
  }
  nw_activity_submit_metrics(*(void *)(v1 + 16));
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  nw_activity_complete_with_reason(*(void **)(v1 + 16), 2u);
  return MEMORY[0x1F4188298](sub_18353E448, 0, 0);
}

uint64_t sub_18353E448()
{
  *(_OWORD *)*(void *)(v0 + 272) = *(_OWORD *)(v0 + 416);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_18353E4C4()
{
  uint64_t v10 = v0;
  uint64_t v1 = *(void *)(*(void *)(v0 + 296) + 112);
  unint64_t v2 = sub_183524E04();
  if (!sub_18352FC64(v2)) {
    return sub_183D456CC();
  }
  uint64_t v4 = *(void *)(v0 + 472);
  uint64_t v3 = *(void *)(v0 + 480);
  uint64_t v5 = *(void *)(v0 + 464);
  char v6 = *(unsigned char *)(v0 + 69);
  nw_activity_submit_metrics(*(void *)(v1 + 16));
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v8[0] = v5;
  v8[1] = v4;
  void v8[2] = v3;
  char v9 = v6;
  NWActivity.complete(reason:)((uint64_t)v8);
  sub_18312A3B8(v5, v4, v3, v6);
  return MEMORY[0x1F4188298](sub_18353E61C, 0, 0);
}

uint64_t sub_18353E61C()
{
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_18353E6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v31 = a5;
  int v29 = a7;
  int v30 = a8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63038);
  MEMORY[0x1F4188790](v11 - 8);
  BOOL v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62DD0);
  uint64_t v28 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v28 + 64);
  uint64_t v16 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v28 - v18;
  if (qword_1E8F62140 != -1) {
    swift_once();
  }
  uint64_t v32 = a2;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63D00);
  swift_task_localValuePush();
  sub_18353E9D0();
  uint64_t v20 = sub_183D445FC();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, a6, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v19, 0, 1, v20);
  uint64_t v22 = sub_183D44FAC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v13, 1, 1, v22);
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  sub_183138900((uint64_t)v19, (uint64_t)v17, &qword_1E8F62DD0);
  unint64_t v24 = (*(unsigned __int8 *)(v28 + 80) + 58) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = 0;
  *(void *)(v25 + 32) = v23;
  *(void *)(v25 + 40) = a4;
  unint64_t v26 = v31;
  *(void *)(v25 + 48) = v31;
  *(unsigned char *)(v25 + 56) = v29;
  *(unsigned char *)(v25 + 57) = v30 & 1;
  sub_183138964((uint64_t)v17, v25 + v24, &qword_1E8F62DD0);
  sub_1832E5D6C(a4, v26);
  sub_18353C19C((uint64_t)v13, (uint64_t)&unk_1E8F63D08, v25);
  swift_release();
  sub_183138A24((uint64_t)v19, &qword_1E8F62DD0);
  return swift_task_localValuePop();
}

uint64_t sub_18353E9D0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63038);
  *(double *)&uint64_t result = COERCE_DOUBLE(MEMORY[0x1F4188790](v1 - 8));
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E8F62138 != -1) {
    *(double *)&uint64_t result = COERCE_DOUBLE(swift_once());
  }
  if (byte_1E8F63BD0 == 1)
  {
    *(double *)&uint64_t result = COERCE_DOUBLE(sub_18353AEA0());
    if ((v5 & 1) == 0)
    {
      double v6 = *(double *)&result;
      if (*(double *)&result > 0.0)
      {
        *(double *)&uint64_t result = COERCE_DOUBLE(sub_1835513A8(0x64uLL));
        double v7 = v6 * 100.0;
        if ((~COERCE__INT64(v6 * 100.0) & 0x7FF0000000000000) != 0)
        {
          if (v7 > -9.22337204e18)
          {
            if (v7 < 9.22337204e18)
            {
              if (result + 1 <= (uint64_t)v7)
              {
                uint64_t v8 = sub_183D44FAC();
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
                char v9 = (void *)swift_allocObject();
                _OWORD v9[2] = 0;
                v9[3] = 0;
                uint64_t v9[4] = v0;
                swift_retain();
                sub_18353C348((uint64_t)v4, (uint64_t)&unk_1E8F63D18, (uint64_t)v9);
                *(double *)&uint64_t result = COERCE_DOUBLE(swift_release());
              }
              return result;
            }
LABEL_14:
            __break(1u);
            return result;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_14;
      }
    }
  }
  return result;
}

uint64_t sub_18353EB90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63038);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_183D445FC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E8F62118 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_183D4498C();
  __swift_project_value_buffer(v13, (uint64_t)qword_1E8F63B90);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  uint64_t v14 = sub_183D4496C();
  os_log_type_t v15 = sub_183D452BC();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    v26[1] = a2;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v28 = a3;
    uint64_t v19 = v18;
    uint64_t v30 = v18;
    v26[0] = a1;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v27 = v8;
    sub_183553930((unint64_t *)&qword_1E8F62F30, MEMORY[0x1E4F27990]);
    uint64_t v20 = sub_183D4589C();
    uint64_t v29 = sub_1834EFE70(v20, v21, &v30);
    uint64_t v8 = v27;
    a1 = v26[0];
    sub_183D453AC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _os_log_impl(&dword_1830D4000, v14, v15, "Task was cancelled for callID: %s", v17, 0xCu);
    swift_arrayDestroy();
    uint64_t v22 = v19;
    a3 = v28;
    MEMORY[0x185318E50](v22, -1, -1);
    MEMORY[0x185318E50](v17, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  sub_18353EF24(a1);
  uint64_t v23 = sub_183D44FAC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v8, 1, 1, v23);
  unint64_t v24 = (void *)swift_allocObject();
  _OWORD v24[2] = 0;
  v24[3] = 0;
  v24[4] = a3;
  swift_retain();
  sub_18353C19C((uint64_t)v8, (uint64_t)&unk_1E8F63CC0, (uint64_t)v24);
  return swift_release();
}

uint64_t sub_18353EF24(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F63C00);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F64A30);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62DD0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = &v24[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for CancelRemoteCall(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = &v24[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_183D445FC();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v18 + 16))(v16, a1, v17);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v13, 1, 1, v17);
  sub_18355151C((uint64_t)v16, (uint64_t)v13, 4, v2);
  sub_183138A24((uint64_t)v13, &qword_1E8F62DD0);
  uint64_t v19 = *(os_unfair_lock_s **)(v2 + 80);
  uint64_t v28 = v2;
  uint64_t v29 = a1;
  uint64_t v25 = sub_183554168;
  unint64_t v26 = &v27;
  uint64_t v20 = v19 + 4;
  os_unfair_lock_lock(v19 + 4);
  sub_183554138(v21);
  os_unfair_lock_unlock(v20);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_183553108((uint64_t)v16, type metadata accessor for CancelRemoteCall);
    return sub_183138A24((uint64_t)v6, (uint64_t *)&unk_1E8F63C00);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v10, v6, v7);
    sub_183D44F6C();
    sub_183553930((unint64_t *)&qword_1E8F635D8, MEMORY[0x1E4FBCF50]);
    uint64_t v23 = swift_allocError();
    sub_183D44A3C();
    uint64_t v30 = v23;
    sub_183D44F3C();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    return sub_183553108((uint64_t)v16, type metadata accessor for CancelRemoteCall);
  }
}

uint64_t sub_18353F2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x1F4188298](sub_18353F2E0, a4, 0);
}

uint64_t sub_18353F2E0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 112);
  unint64_t v2 = sub_183524E04();
  if (!sub_18352FC64(v2)) {
    return sub_183D456CC();
  }
  nw_activity_submit_metrics(*(void *)(v1 + 16));
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  nw_activity_complete_with_reason(*(void **)(v1 + 16), 4u);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_18353F3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWActorID();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1835539B4(a2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for NWActorID);
  uint64_t v8 = (unint64_t *)(a1 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection__associatedActorIDs);
  swift_beginAccess();
  unint64_t v9 = *v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v8 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v9 = sub_1834B4C64(0, *(void *)(v9 + 16) + 1, 1, v9);
    *uint64_t v8 = v9;
  }
  unint64_t v12 = *(void *)(v9 + 16);
  unint64_t v11 = *(void *)(v9 + 24);
  if (v12 >= v11 >> 1)
  {
    unint64_t v9 = sub_1834B4C64(v11 > 1, v12 + 1, 1, v9);
    *uint64_t v8 = v9;
  }
  *(void *)(v9 + 16) = v12 + 1;
  sub_183554058((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v12, (uint64_t (*)(void))type metadata accessor for NWActorID);
  return swift_endAccess();
}

void sub_18353F594(unsigned int *a1)
{
  uint64_t v1 = *((unsigned __int8 *)a1 + 4);
  uint64_t v2 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v4 = Strong;
  unint64_t v5 = v2 | (v1 << 32);
  if (qword_1E8F62118 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_183D4498C();
  __swift_project_value_buffer(v6, (uint64_t)qword_1E8F63B90);
  swift_retain_n();
  uint64_t v7 = sub_183D4496C();
  os_log_type_t v8 = sub_183D452BC();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v41 = v10;
    uint64_t v42 = 67;
    unint64_t v43 = 0xE100000000000000;
    nw_connection_get_id(*(void **)(*(void *)(v4 + 16) + 16));
    sub_183D4589C();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    uint64_t v42 = sub_1834EFE70(67, 0xE100000000000000, &v41);
    sub_183D453AC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    BYTE4(v42) = (v2 | (unint64_t)(v1 << 32)) >> 32;
    LODWORD(v42) = v2;
    uint64_t v11 = sub_183D44B9C();
    uint64_t v42 = sub_1834EFE70(v11, v12, &v41);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1830D4000, v7, v8, "%s: State changed to %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v10, -1, -1);
    MEMORY[0x185318E50](v9, -1, -1);

    uint64_t v13 = (v5 >> 38) & 3;
    if (v13) {
      goto LABEL_6;
    }
LABEL_11:
    swift_retain_n();
    uint64_t v21 = sub_183D4496C();
    os_log_type_t v22 = sub_183D4529C();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315394;
      uint64_t v41 = v24;
      uint64_t v42 = 67;
      unint64_t v43 = 0xE100000000000000;
      nw_connection_get_id(*(void **)(*(void *)(v4 + 16) + 16));
      sub_183D4589C();
      sub_183D44C8C();
      swift_bridgeObjectRelease();
      uint64_t v42 = sub_1834EFE70(v42, v43, &v41);
      sub_183D453AC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      LODWORD(v42) = v2;
      BYTE4(v42) = (v2 | (unint64_t)(v1 << 32)) >> 32;
      uint64_t v25 = sub_183D44B9C();
      uint64_t v42 = sub_1834EFE70(v25, v26, &v41);
      sub_183D453AC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1830D4000, v21, v22, "%s moved to waiting state with error: %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x185318E50](v24, -1, -1);
      MEMORY[0x185318E50](v23, -1, -1);

      if (BYTE4(v5))
      {
LABEL_13:
        uint64_t v36 = sub_183D44AFC();
        unint64_t v38 = v37;
        goto LABEL_21;
      }
    }
    else
    {

      swift_release_n();
      if (BYTE4(v5)) {
        goto LABEL_13;
      }
    }
    uint64_t v36 = sub_183D44AFC();
    unint64_t v38 = v28;
    LODWORD(v5) = sub_183D449BC();
LABEL_21:
    uint64_t v42 = v36;
    unint64_t v43 = v38;
    uint64_t v44 = (int)v5;
    char v45 = 1;
    sub_18353FDD4(&v42, v4);
    swift_bridgeObjectRelease();
LABEL_22:
    swift_release();
    return;
  }

  swift_release_n();
  uint64_t v13 = (v5 >> 38) & 3;
  if (!v13) {
    goto LABEL_11;
  }
LABEL_6:
  if (v13 != 1)
  {
    switch(v5 & 0xFFFFFFFFFFLL)
    {
      case 0x8000000002uLL:
        unint64_t v43 = 0;
        uint64_t v44 = 0;
        uint64_t v42 = 1;
        char v45 = 2;
        sub_18353FDD4(&v42, v4);
        sub_18353FE88();
        goto LABEL_22;
      case 0x8000000003uLL:
        unint64_t v43 = 0;
        uint64_t v44 = 0;
        uint64_t v42 = 3;
        char v45 = 2;
        sub_18353FDD4(&v42, v4);
        sub_1834F0498();
        uint64_t v39 = swift_allocError();
        *(_OWORD *)uint64_t v40 = xmmword_183D584E0;
        *(void *)(v40 + 16) = 0xB000000000000000;
        sub_18354017C(v39);
        swift_release();
        uint64_t v35 = (void *)v39;
        goto LABEL_24;
      default:
        goto LABEL_22;
    }
  }
  uint64_t v14 = HIDWORD(v5) & 0x3F;
  swift_retain_n();
  uint64_t v15 = sub_183D4496C();
  os_log_type_t v16 = sub_183D4529C();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v41 = v18;
    uint64_t v42 = 67;
    unint64_t v43 = 0xE100000000000000;
    nw_connection_get_id(*(void **)(*(void *)(v4 + 16) + 16));
    sub_183D4589C();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    uint64_t v42 = sub_1834EFE70(v42, v43, &v41);
    sub_183D453AC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    LODWORD(v42) = v2;
    BYTE4(v42) = BYTE4(v5) & 0x3F;
    uint64_t v19 = sub_183D44B9C();
    uint64_t v42 = sub_1834EFE70(v19, v20, &v41);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1830D4000, v15, v16, "%s moved to failed state with error: %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v18, -1, -1);
    MEMORY[0x185318E50](v17, -1, -1);

    if (v14)
    {
LABEL_9:
      uint64_t v29 = sub_183D44AFC();
      unint64_t v31 = v30;
      int v32 = v5;
      goto LABEL_20;
    }
  }
  else
  {

    swift_release_n();
    if (v14) {
      goto LABEL_9;
    }
  }
  uint64_t v29 = sub_183D44AFC();
  unint64_t v31 = v27;
  int v32 = sub_183D449BC();
LABEL_20:
  uint64_t v42 = v29;
  unint64_t v43 = v31;
  uint64_t v44 = v32;
  char v45 = 1;
  sub_18353FDD4(&v42, v4);
  swift_bridgeObjectRelease();
  sub_1834AC424();
  uint64_t v33 = swift_allocError();
  *(_DWORD *)uint64_t v34 = v5;
  *(unsigned char *)(v34 + 4) = BYTE4(v5) & 0x3F;
  sub_18354017C(v33);
  swift_release();
  uint64_t v35 = (void *)v33;
LABEL_24:
}

void sub_18353FDD4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  char v5 = *((unsigned char *)a1 + 24);
  uint64_t v6 = (os_unfair_lock_s *)(*(void *)(a2 + 80) + 16);
  os_unfair_lock_lock(v6);
  sub_1834F0460(v7);
  os_unfair_lock_unlock(v6);
  if (v7[0])
  {
    v7[0] = v2;
    v7[1] = v3;
    void v7[2] = v4;
    char v8 = v5;
    swift_retain();
    NWActivity.complete(reason:)((uint64_t)v7);
    swift_release_n();
  }
}

uint64_t sub_18353FE88()
{
  if (qword_1E8F62118 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_183D4498C();
  __swift_project_value_buffer(v1, (uint64_t)qword_1E8F63B90);
  swift_retain_n();
  uint64_t v2 = sub_183D4496C();
  os_log_type_t v3 = sub_183D4528C();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v12 = v5;
    uint64_t aBlock = 67;
    unint64_t v14 = 0xE100000000000000;
    nw_connection_get_id(*(void **)(*(void *)(v0 + 16) + 16));
    sub_183D4589C();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    uint64_t aBlock = sub_1834EFE70(67, 0xE100000000000000, &v12);
    sub_183D453AC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1830D4000, v2, v3, "%s: Receiving message", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v5, -1, -1);
    MEMORY[0x185318E50](v4, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  char v8 = *(NSObject **)(v6 + 16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_183553658;
  *(void *)(v9 + 24) = v7;
  uint64_t v17 = sub_1832E5E74;
  uint64_t v18 = v9;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v14 = 1107296256;
  uint64_t v15 = sub_1832E5DC4;
  os_log_type_t v16 = &block_descriptor_11;
  uint64_t v10 = _Block_copy(&aBlock);
  swift_retain_n();
  swift_unknownObjectRetain();
  swift_release();
  nw_connection_receive_message(v8, v10);
  _Block_release(v10);
  swift_release_n();
  return swift_unknownObjectRelease();
}

void sub_18354017C(uint64_t a1)
{
  os_log_type_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 80) + 16);
  os_unfair_lock_lock(v3);
  sub_183551478(v9);
  os_unfair_lock_unlock(v3);
  if ((v9[0] & 1) == 0)
  {
    MEMORY[0x1F4188790](v4);
    os_unfair_lock_lock(v3);
    sub_1834F0460(v9);
    os_unfair_lock_unlock(v3);
    uint64_t v5 = *(void *)(v9[0] + 16);
    if (v5)
    {
      uint64_t v6 = v9[0] + 40;
      do
      {
        uint64_t v7 = *(void (**)(void *))(v6 - 8);
        v9[0] = a1;
        swift_retain();
        v7(v9);
        swift_release();
        v6 += 16;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
    char v8 = *(void (**)(uint64_t))(v1 + 40);
    if (v8)
    {
      swift_retain();
      v8(a1);
      sub_18313D870((uint64_t)v8);
    }
    sub_18353AFF8();
  }
}

uint64_t sub_1835402D4(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t (*a4)(NSObject *), uint64_t a5)
{
  uint64_t v72 = a5;
  uint64_t v73 = a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F63C00);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v68 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v61 - v11;
  uint64_t v13 = sub_183D445FC();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v71 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v61 - v17;
  uint64_t v19 = *(os_unfair_lock_s **)(a2 + 80);
  uint64_t v78 = a2;
  char v79 = a3;
  uint64_t v80 = a1;
  uint64_t v75 = sub_183553538;
  CFIndex v76 = &v77;
  unint64_t v20 = v19 + 4;
  os_unfair_lock_lock(v19 + 4);
  sub_183554138(v21);
  uint64_t v74 = 0;
  unint64_t v65 = v20;
  os_unfair_lock_unlock(v20);
  if (qword_1E8F62118 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_183D4498C();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1E8F63B90);
  unint64_t v69 = *(void (**)(char *, NSObject *, uint64_t))(v14 + 16);
  v69(v18, a3, v13);
  swift_retain_n();
  uint64_t v24 = sub_183D4496C();
  uint64_t v25 = v13;
  os_log_type_t v26 = sub_183D452BC();
  BOOL v27 = os_log_type_enabled(v24, v26);
  uint64_t v67 = v12;
  uint64_t v64 = v14;
  uint64_t v70 = a2;
  if (v27)
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v66 = a3;
    uint64_t v29 = v28;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v62 = v30;
    *(_DWORD *)uint64_t v29 = 136315394;
    uint64_t v63 = v23;
    uint64_t v82 = 67;
    unint64_t v83 = 0xE100000000000000;
    v84[0] = v30;
    uint64_t id = nw_connection_get_id(*(void **)(*(void *)(a2 + 16) + 16));
    os_log_t v61 = v24;
    sub_183D4589C();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    uint64_t v82 = sub_1834EFE70(v82, v83, v84);
    sub_183D453AC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    sub_183553930((unint64_t *)&qword_1E8F62F30, MEMORY[0x1E4F27990]);
    uint64_t v31 = sub_183D4589C();
    uint64_t v82 = sub_1834EFE70(v31, v32, v84);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void (**)(char *, uint64_t))(v14 + 8);
    v33(v18, v25);
    os_log_t v34 = v61;
    _os_log_impl(&dword_1830D4000, v61, v26, "%s: Stored callID (%s)", (uint8_t *)v29, 0x16u);
    uint64_t v35 = v62;
    swift_arrayDestroy();
    MEMORY[0x185318E50](v35, -1, -1);
    uint64_t v36 = v29;
    a3 = v66;
    MEMORY[0x185318E50](v36, -1, -1);
  }
  else
  {
    swift_release_n();
    uint64_t v33 = *(void (**)(char *, uint64_t))(v14 + 8);
    v33(v18, v25);
  }
  uint64_t v37 = v25;
  unint64_t v38 = (void *)v74;
  uint64_t result = v73(a3);
  if (v38)
  {
    uint64_t v40 = v38;
    uint64_t v41 = v71;
    v69(v71, a3, v37);
    uint64_t v42 = v70;
    swift_retain_n();
    unint64_t v43 = sub_183D4496C();
    os_log_type_t v44 = sub_183D4529C();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v73 = (uint64_t (*))v33;
      uint64_t v74 = v46;
      *(_DWORD *)uint64_t v45 = 136315394;
      uint64_t v82 = 67;
      unint64_t v83 = 0xE100000000000000;
      v84[0] = v46;
      uint64_t id = nw_connection_get_id(*((void **)v42[2].isa + 2));
      sub_183D4589C();
      uint64_t v66 = a3;
      sub_183D44C8C();
      swift_bridgeObjectRelease();
      uint64_t v82 = sub_1834EFE70(v82, v83, v84);
      sub_183D453AC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2080;
      sub_183553930((unint64_t *)&qword_1E8F62F30, MEMORY[0x1E4F27990]);
      uint64_t v47 = v71;
      uint64_t v48 = sub_183D4589C();
      uint64_t v82 = sub_1834EFE70(v48, v49, v84);
      a3 = v66;
      sub_183D453AC();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v73)(v47, v37);
      _os_log_impl(&dword_1830D4000, v43, v44, "%s: callID (%s) failed", (uint8_t *)v45, 0x16u);
      uint64_t v50 = v74;
      swift_arrayDestroy();
      MEMORY[0x185318E50](v50, -1, -1);
      MEMORY[0x185318E50](v45, -1, -1);
    }
    else
    {
      swift_release_n();
      v33(v41, v37);
    }

    uint64_t v51 = (uint64_t)v68;
    uint64_t v52 = (uint64_t)v67;
    uint64_t v53 = v65;
    uint64_t v55 = MEMORY[0x1F4188790](v54);
    *(&v61 - 2) = v42;
    *(&v61 - 1) = a3;
    MEMORY[0x1F4188790](v55);
    *(&v61 - 2) = (os_log_t)sub_183554168;
    *(&v61 - 1) = v56;
    os_unfair_lock_lock(v53);
    sub_183554138(v57);
    os_unfair_lock_unlock(v53);
    sub_183138900(v52, v51, (uint64_t *)&unk_1E8F63C00);
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F64A30);
    uint64_t v59 = *(void *)(v58 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v51, 1, v58) == 1)
    {
      sub_183138A24(v52, (uint64_t *)&unk_1E8F63C00);

      return sub_183138A24(v51, (uint64_t *)&unk_1E8F63C00);
    }
    else
    {
      uint64_t v82 = (uint64_t)v40;
      id v60 = v40;
      sub_183D44F3C();

      sub_183138A24(v52, (uint64_t *)&unk_1E8F63C00);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 8))(v51, v58);
    }
  }
  return result;
}

uint64_t sub_183540B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F63C00);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_183D445FC();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v11 + 16))(v10, a2);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F64A30);
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v7, a3, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
  swift_beginAccess();
  sub_1835346C8((uint64_t)v7, (uint64_t)v10);
  return swift_endAccess();
}

uint64_t *sub_183540D2C()
{
  swift_release();
  sub_18313D870(v0[3]);
  sub_18313D870(v0[5]);
  sub_18313D870(v0[7]);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_183138A24((uint64_t)v0 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_resolvedActorIDContinuation, (uint64_t *)&unk_1E8F63BF0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_183540DF4()
{
  sub_183540D2C();

  return swift_deallocClassInstance();
}

uint64_t sub_183540E4C()
{
  return _s15ActorConnectionCMa(0);
}

uint64_t _s15ActorConnectionCMa(uint64_t a1)
{
  return sub_18315A7F8(a1, (uint64_t *)&unk_1E8F61C28);
}

void sub_183540E74()
{
  sub_183540F58();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_183540F58()
{
  if (!qword_1E8F61C98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E8F61C90);
    unint64_t v0 = sub_183D4536C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E8F61C98);
    }
  }
}

uint64_t _s15ActorConnectionC11ReplyResultVwxx(uint64_t a1)
{
  return sub_1832E5E9C(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t _s15ActorConnectionC11ReplyResultVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1832E5D6C(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  return a1;
}

uint64_t _s15ActorConnectionC11ReplyResultVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1832E5D6C(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_1832E5E9C(v6, v7);
  long long v8 = *(_OWORD *)(a2 + 16);
  long long v9 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 32) = v9;
  return a1;
}

__n128 __swift_memcpy50_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s15ActorConnectionC11ReplyResultVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1832E5E9C(v4, v5);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  return a1;
}

uint64_t _s15ActorConnectionC11ReplyResultVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 50)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s15ActorConnectionC11ReplyResultVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 50) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 50) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *_s15ActorConnectionC11ReplyResultVMa()
{
  return &_s15ActorConnectionC11ReplyResultVN;
}

char *sub_18354119C(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_183D445FC();
    long long v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    long long v9 = (int *)type metadata accessor for RemoteCallEnvelope(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = *(void *)&a2[v10 + 8];
    *(void *)uint64_t v11 = *(void *)&a2[v10];
    *((void *)v11 + 1) = v13;
    uint64_t v14 = *(int *)(type metadata accessor for NWActorID() + 20);
    uint64_t v15 = &v11[v14];
    uint64_t v16 = &v12[v14];
    swift_bridgeObjectRetain();
    v8(v15, v16, v7);
    uint64_t v17 = v9[6];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)uint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    *(void *)&a1[v9[7]] = *(void *)&a2[v9[7]];
    *(void *)&a1[v9[8]] = *(void *)&a2[v9[8]];
    *(void *)&a1[v9[9]] = *(void *)&a2[v9[9]];
    uint64_t v21 = *(int *)(a3 + 24);
    a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
    a1[v21] = a2[v21];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_18354132C(uint64_t a1)
{
  uint64_t v2 = sub_183D445FC();
  unsigned int v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(a1, v2);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for RemoteCallEnvelope(0) + 20);
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for NWActorID();
  v3(v4 + *(int *)(v5 + 20), v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_183541408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_183D445FC();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  long long v8 = (int *)type metadata accessor for RemoteCallEnvelope(0);
  uint64_t v9 = v8[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = a2 + v9;
  uint64_t v12 = *(void *)(a2 + v9 + 8);
  *uint64_t v10 = *(void *)(a2 + v9);
  v10[1] = v12;
  uint64_t v13 = *(int *)(type metadata accessor for NWActorID() + 20);
  uint64_t v14 = (char *)v10 + v13;
  uint64_t v15 = v11 + v13;
  swift_bridgeObjectRetain();
  v7((uint64_t)v14, v15, v6);
  uint64_t v16 = v8[6];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  *(void *)(a1 + v8[9]) = *(void *)(a2 + v8[9]);
  uint64_t v20 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_183541548(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_183D445FC();
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  long long v8 = (int *)type metadata accessor for RemoteCallEnvelope(0);
  uint64_t v9 = v8[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = a2 + v9;
  *(void *)uint64_t v10 = *(void *)(a2 + v9);
  *((void *)v10 + 1) = *(void *)(a2 + v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = type metadata accessor for NWActorID();
  v7(&v10[*(int *)(v12 + 20)], v11 + *(int *)(v12 + 20), v6);
  uint64_t v13 = v8[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = (void *)(a2 + v13);
  *(void *)uint64_t v14 = *v15;
  *((void *)v14 + 1) = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[v8[7]] = *(void *)(a2 + v8[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[v8[8]] = *(void *)(a2 + v8[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[v8[9]] = *(void *)(a2 + v8[9]);
  a1[*(int *)(a3 + 20)] = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  a1[*(int *)(a3 + 24)] = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1835416B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_183D445FC();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  long long v8 = (int *)type metadata accessor for RemoteCallEnvelope(0);
  uint64_t v9 = v8[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  uint64_t v12 = type metadata accessor for NWActorID();
  v7(v10 + *(int *)(v12 + 20), v11 + *(int *)(v12 + 20), v6);
  *(_OWORD *)(a1 + v8[6]) = *(_OWORD *)(a2 + v8[6]);
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  *(void *)(a1 + v8[9]) = *(void *)(a2 + v8[9]);
  uint64_t v13 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  return a1;
}

char *sub_1835417CC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_183D445FC();
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  long long v8 = (int *)type metadata accessor for RemoteCallEnvelope(0);
  uint64_t v9 = v8[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = a2 + v9;
  uint64_t v12 = *(void *)(a2 + v9 + 8);
  *(void *)uint64_t v10 = *(void *)(a2 + v9);
  *((void *)v10 + 1) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = type metadata accessor for NWActorID();
  v7(&v10[*(int *)(v13 + 20)], v11 + *(int *)(v13 + 20), v6);
  uint64_t v14 = v8[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *(void *)uint64_t v15 = v18;
  *((void *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  *(void *)&a1[v8[7]] = *(void *)(a2 + v8[7]);
  swift_bridgeObjectRelease();
  *(void *)&a1[v8[8]] = *(void *)(a2 + v8[8]);
  swift_bridgeObjectRelease();
  *(void *)&a1[v8[9]] = *(void *)(a2 + v8[9]);
  uint64_t v19 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  a1[v19] = *(unsigned char *)(a2 + v19);
  return a1;
}

uint64_t sub_183541908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_18354191C);
}

uint64_t sub_18354191C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RemoteCallEnvelope(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1835419EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_183541A00);
}

uint64_t sub_183541A00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for RemoteCallEnvelope(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t _s15ActorConnectionC20RemoteCallInvocationVMa(uint64_t a1)
{
  return sub_18315A7F8(a1, (uint64_t *)&unk_1E8F63BE0);
}

uint64_t sub_183541ADC()
{
  uint64_t result = type metadata accessor for RemoteCallEnvelope(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_183541B74(uint64_t a1, unint64_t a2, unsigned __int8 a3)
{
  if (a3 >= 6u)
  {
    uint64_t v5 = 0;
    switch(a2 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(a1), a1))
        {
          __break(1u);
LABEL_23:
          __break(1u);
          JUMPOUT(0x183541ECCLL);
        }
        uint64_t v5 = HIDWORD(a1) - (int)a1;
LABEL_7:
        if (qword_1E8F62130 != -1) {
          swift_once();
        }
        if (qword_1E8F63BC8 < v5)
        {
          if (qword_1E8F62118 != -1) {
            swift_once();
          }
          uint64_t v8 = sub_183D4498C();
          __swift_project_value_buffer(v8, (uint64_t)qword_1E8F63B90);
          swift_retain_n();
          uint64_t v9 = sub_183D4496C();
          os_log_type_t v10 = sub_183D452AC();
          if (os_log_type_enabled(v9, v10))
          {
            uint64_t v11 = swift_slowAlloc();
            uint64_t v14 = swift_slowAlloc();
            *(_DWORD *)uint64_t v11 = 136315906;
            uint64_t v15 = v14;
            nw_connection_get_id(*(void **)(*(void *)(v3 + 16) + 16));
            sub_183D4589C();
            sub_183D44C8C();
            swift_bridgeObjectRelease();
            sub_1834EFE70(67, 0xE100000000000000, &v15);
            sub_183D453AC();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v11 + 12) = 2048;
            sub_183D453AC();
            *(_WORD *)(v11 + 22) = 2048;
            sub_183D453AC();
            *(_WORD *)(v11 + 32) = 2080;
            if (a3 == 7) {
              uint64_t v12 = 0x6F7250796C706572;
            }
            else {
              uint64_t v12 = 0xD000000000000012;
            }
            if (a3 == 7) {
              unint64_t v13 = 0xED00006675626F74;
            }
            else {
              unint64_t v13 = 0x8000000183E25E70;
            }
            sub_1834EFE70(v12, v13, &v15);
            sub_183D453AC();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1830D4000, v9, v10, "%s: Outbound payload size %ld exceeds limit %ld for type %s", (uint8_t *)v11, 0x2Au);
            swift_arrayDestroy();
            MEMORY[0x185318E50](v14, -1, -1);
            MEMORY[0x185318E50](v11, -1, -1);
          }
          else
          {

            swift_release_n();
          }
        }
        break;
      case 2uLL:
        uint64_t v7 = *(void *)(a1 + 16);
        uint64_t v6 = *(void *)(a1 + 24);
        uint64_t v5 = v6 - v7;
        if (!__OFSUB__(v6, v7)) {
          goto LABEL_7;
        }
        goto LABEL_23;
      case 3uLL:
        goto LABEL_7;
      default:
        uint64_t v5 = BYTE6(a2);
        goto LABEL_7;
    }
  }
}

uint64_t sub_183541EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  *(unsigned char *)(v8 + 153) = a8;
  *(unsigned char *)(v8 + 152) = a7;
  *(void *)(v8 + 64) = a6;
  *(void *)(v8 + 72) = v12;
  *(void *)(v8 + 48) = a4;
  *(void *)(v8 + 56) = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62DD0);
  *(void *)(v8 + 80) = swift_task_alloc();
  uint64_t v9 = sub_183D445FC();
  *(void *)(v8 + 88) = v9;
  *(void *)(v8 + 96) = *(void *)(v9 - 8);
  *(void *)(v8 + 104) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F63C00);
  *(void *)(v8 + 112) = swift_task_alloc();
  *(void *)(v8 + 120) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_183542020, 0, 0);
}

uint64_t sub_183542020()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 128) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_183542150;
    char v3 = *(unsigned char *)(v0 + 153);
    uint64_t v5 = *(void *)(v0 + 56);
    uint64_t v4 = *(void *)(v0 + 64);
    char v6 = *(unsigned char *)(v0 + 152);
    return sub_18354260C(v5, v4, v6, v3);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_183542150()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1835422F4;
  }
  else {
    uint64_t v2 = sub_183542264;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_183542264()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1835422F4()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 80);
  sub_183138900(*(void *)(v0 + 72), v3, &qword_1E8F62DD0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 80);

    swift_release();
    uint64_t v5 = &qword_1E8F62DD0;
    uint64_t v6 = v4;
LABEL_3:
    sub_183138A24(v6, v5);
    goto LABEL_4;
  }
  uint64_t v9 = *(void *)(v0 + 128);
  uint64_t v10 = *(void *)(v0 + 104);
  (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 96) + 32))(v10, *(void *)(v0 + 80), *(void *)(v0 + 88));
  uint64_t v11 = *(os_unfair_lock_s **)(v9 + 80);
  uint64_t v12 = swift_task_alloc();
  *(void *)(v12 + 16) = v9;
  *(void *)(v12 + 24) = v10;
  uint64_t v13 = swift_task_alloc();
  *(void *)(v13 + 16) = sub_183554168;
  *(void *)(v13 + 24) = v12;
  swift_retain();
  os_unfair_lock_lock(v11 + 4);
  sub_183554138(v14);
  os_unfair_lock_unlock(v11 + 4);
  uint64_t v16 = *(void *)(v0 + 112);
  uint64_t v15 = *(void *)(v0 + 120);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_183138900(v15, v16, (uint64_t *)&unk_1E8F63C00);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F64A30);
  uint64_t v18 = *(void *)(v17 - 8);
  int v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17);
  uint64_t v20 = *(void **)(v0 + 144);
  uint64_t v21 = *(void *)(v0 + 120);
  uint64_t v23 = *(void *)(v0 + 104);
  uint64_t v22 = *(void *)(v0 + 112);
  uint64_t v25 = *(void *)(v0 + 88);
  uint64_t v24 = *(void *)(v0 + 96);
  if (v19 == 1)
  {
    sub_183138A24(*(void *)(v0 + 120), (uint64_t *)&unk_1E8F63C00);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    uint64_t v6 = v22;
    uint64_t v5 = (uint64_t *)&unk_1E8F63C00;
    goto LABEL_3;
  }
  uint64_t v27 = *(void *)(v0 + 104);
  *(void *)(v0 + 40) = v20;
  id v26 = v20;
  sub_183D44F3C();
  swift_release();

  sub_183138A24(v21, (uint64_t *)&unk_1E8F63C00);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v27, v25);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v22, v17);
LABEL_4:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_18354260C(uint64_t a1, uint64_t a2, char a3, char a4)
{
  *(void *)(v5 + 200) = a2;
  *(void *)(v5 + 208) = v4;
  *(unsigned char *)(v5 + 82) = a4;
  *(unsigned char *)(v5 + 81) = a3;
  *(void *)(v5 + 192) = a1;
  uint64_t v6 = sub_183D448DC();
  *(void *)(v5 + 216) = v6;
  *(void *)(v5 + 224) = *(void *)(v6 - 8);
  *(void *)(v5 + 232) = swift_task_alloc();
  *(void *)(v5 + 240) = swift_task_alloc();
  *(void *)(v5 + 248) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_183542720, 0, 0);
}

uint64_t sub_183542720()
{
  uint64_t v73 = v0;
  uint64_t v72 = *MEMORY[0x1E4F143B8];
  int v1 = *(unsigned __int8 *)(v0 + 81);
  if ((v1 - 2) < 4 || v1 == 0)
  {
    sub_1832E5D6C(*(void *)(v0 + 192), *(void *)(v0 + 200));
    int v3 = 0;
    uint64_t v4 = *(void *)(v0 + 192);
    unint64_t v5 = *(void *)(v0 + 200);
    goto LABEL_7;
  }
  uint64_t v14 = (void *)sub_183D4452C();
  *(void *)(v0 + 184) = 0;
  id v15 = objc_msgSend(v14, sel_compressedDataUsingAlgorithm_error_, 0, v0 + 184);

  id v16 = *(id *)(v0 + 184);
  if (v15)
  {
    uint64_t v4 = sub_183D4453C();
    unint64_t v5 = v17;

    int v3 = 1;
LABEL_7:
    *(void *)(v0 + 256) = v4;
    *(void *)(v0 + 264) = v5;
    *(unsigned char *)(v0 + 83) = v3;
    sub_183541B74(v4, v5, *(unsigned char *)(v0 + 81));
    if (qword_1E8F62118 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_183D4498C();
    __swift_project_value_buffer(v6, (uint64_t)qword_1E8F63B90);
    swift_retain();
    sub_1832E5D6C(v4, v5);
    swift_retain();
    sub_1832E5D6C(v4, v5);
    uint64_t v7 = sub_183D4496C();
    os_log_type_t v8 = sub_183D452BC();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = *(void *)(v0 + 208);
    if (v9)
    {
      os_log_type_t v65 = v8;
      int v67 = v3;
      uint64_t v62 = *(unsigned __int8 *)(v0 + 81);
      uint64_t v11 = swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315906;
      uint64_t v69 = v64;
      uint64_t v70 = 67;
      unint64_t v71 = 0xE100000000000000;
      *(void *)(v0 + 152) = nw_connection_get_id(*(void **)(*(void *)(v10 + 16) + 16));
      sub_183D4589C();
      sub_183D44C8C();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 160) = sub_1834EFE70(v70, v71, &v69);
      sub_183D453AC();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v11 + 12) = 2080;
      unint64_t v12 = 0xE700000000000000;
      uint64_t v13 = 0x64696C61766E69;
      switch(v62)
      {
        case 1:
          uint64_t v13 = 0x614365746F6D6572;
          unint64_t v12 = 0xEA00000000006C6CLL;
          break;
        case 2:
          uint64_t v13 = 0xD000000000000013;
          uint64_t v21 = "fileTransferRequest";
          goto LABEL_24;
        case 3:
          uint64_t v13 = 0xD000000000000014;
          uint64_t v21 = "fileTransferResponse";
          goto LABEL_24;
        case 4:
          uint64_t v22 = "cancelRemoteCall";
          goto LABEL_22;
        case 5:
          uint64_t v22 = "terminateProcess";
LABEL_22:
          unint64_t v12 = (unint64_t)(v22 - 32) | 0x8000000000000000;
          uint64_t v13 = 0xD000000000000010;
          break;
        case 6:
          uint64_t v13 = 0xD000000000000012;
          uint64_t v21 = "remoteCallProtobuf";
LABEL_24:
          unint64_t v12 = (unint64_t)(v21 - 32) | 0x8000000000000000;
          break;
        case 7:
          uint64_t v13 = 0x6F7250796C706572;
          unint64_t v12 = 0xED00006675626F74;
          break;
        default:
          break;
      }
      *(void *)(v0 + 168) = sub_1834EFE70(v13, v12, &v69);
      sub_183D453AC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 22) = 2080;
      sub_1832E5D6C(v4, v5);
      uint64_t v23 = sub_183D444BC();
      unint64_t v25 = v24;
      sub_1832E5E9C(v4, v5);
      *(void *)(v0 + 176) = sub_1834EFE70(v23, v25, &v69);
      sub_183D453AC();
      swift_bridgeObjectRelease();
      sub_1832E5E9C(v4, v5);
      sub_1832E5E9C(v4, v5);
      *(_WORD *)(v11 + 32) = 1024;
      *(_DWORD *)(v0 + 84) = v67;
      sub_183D453AC();
      _os_log_impl(&dword_1830D4000, v7, v65, "%s Sending message of type %s, data: %s, compressed: %{BOOL}d", (uint8_t *)v11, 0x26u);
      swift_arrayDestroy();
      MEMORY[0x185318E50](v64, -1, -1);
      MEMORY[0x185318E50](v11, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_1832E5E9C(v4, v5);
      sub_1832E5E9C(v4, v5);
    }
    if (qword_1E8F62140 != -1) {
      swift_once();
    }
    sub_183D45C6C();
    uint64_t v26 = *(void *)(v0 + 128);
    *(void *)(v0 + 272) = v26;
    if (v26)
    {
      uint64_t v27 = 0;
      switch(v5 >> 62)
      {
        case 1uLL:
          LODWORD(v27) = HIDWORD(v4) - v4;
          if (__OFSUB__(HIDWORD(v4), v4))
          {
            __break(1u);
LABEL_68:
            __break(1u);
          }
          uint64_t v27 = (int)v27;
LABEL_41:
          *(void *)(v0 + 280) = v27;
          uint64_t result = MEMORY[0x1F4188298](sub_183543320, v26, 0);
          break;
        case 2uLL:
          uint64_t v38 = *(void *)(v4 + 16);
          uint64_t v37 = *(void *)(v4 + 24);
          BOOL v39 = __OFSUB__(v37, v38);
          uint64_t v27 = v37 - v38;
          if (!v39) {
            goto LABEL_41;
          }
          goto LABEL_68;
        case 3uLL:
          goto LABEL_41;
        default:
          uint64_t v27 = BYTE6(v5);
          goto LABEL_41;
      }
      return result;
    }
    if (qword_1E8F62120 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_183D4490C();
    __swift_project_value_buffer(v28, (uint64_t)qword_1E8F63BA8);
    sub_183D448FC();
    sub_183D448AC();
    swift_retain_n();
    uint64_t v29 = sub_183D448FC();
    os_signpost_type_t v30 = sub_183D4533C();
    if (sub_183D4535C())
    {
      uint64_t v31 = 0x64696C61766E69;
      uint64_t v32 = *(unsigned __int8 *)(v0 + 81);
      uint64_t v68 = *(void (**)(void, void, void))(*(void *)(v0 + 224) + 16);
      v68(*(void *)(v0 + 240), *(void *)(v0 + 248), *(void *)(v0 + 216));
      uint64_t v33 = swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      uint64_t v70 = v66;
      *(_DWORD *)uint64_t v33 = 136315394;
      unint64_t v34 = 0xE700000000000000;
      switch(v32)
      {
        case 1:
          uint64_t v31 = 0x614365746F6D6572;
          unint64_t v34 = 0xEA00000000006C6CLL;
          break;
        case 2:
          uint64_t v31 = 0xD000000000000013;
          uint64_t v40 = "fileTransferRequest";
          goto LABEL_50;
        case 3:
          uint64_t v31 = 0xD000000000000014;
          uint64_t v40 = "fileTransferResponse";
          goto LABEL_50;
        case 4:
          uint64_t v41 = "cancelRemoteCall";
          goto LABEL_48;
        case 5:
          uint64_t v41 = "terminateProcess";
LABEL_48:
          unint64_t v34 = (unint64_t)(v41 - 32) | 0x8000000000000000;
          uint64_t v31 = 0xD000000000000010;
          break;
        case 6:
          uint64_t v31 = 0xD000000000000012;
          uint64_t v40 = "remoteCallProtobuf";
LABEL_50:
          unint64_t v34 = (unint64_t)(v40 - 32) | 0x8000000000000000;
          break;
        case 7:
          uint64_t v31 = 0x6F7250796C706572;
          unint64_t v34 = 0xED00006675626F74;
          break;
        default:
          break;
      }
      uint64_t v42 = *(void *)(v0 + 240);
      uint64_t v43 = *(void *)(v0 + 224);
      uint64_t v63 = *(void *)(v0 + 216);
      uint64_t v44 = *(void *)(v0 + 208);
      *(void *)(v0 + 136) = sub_1834EFE70(v31, v34, &v70);
      sub_183D453AC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2048;
      uint64_t id = nw_connection_get_id(*(void **)(*(void *)(v44 + 16) + 16));
      swift_release();
      *(void *)(v0 + 144) = id;
      sub_183D453AC();
      swift_release();
      os_signpost_id_t v46 = sub_183D448BC();
      _os_signpost_emit_with_name_impl(&dword_1830D4000, v29, v30, v46, "sendData", "Sending %s on %llu", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x185318E50](v66, -1, -1);
      MEMORY[0x185318E50](v33, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v63);
      uint64_t v36 = v68;
    }
    else
    {
      uint64_t v35 = *(void *)(v0 + 224);
      swift_release_n();

      uint64_t v36 = *(void (**)(void, void, void))(v35 + 16);
    }
    uint64_t v47 = *(void *)(v0 + 208);
    v36(*(void *)(v0 + 232), *(void *)(v0 + 248), *(void *)(v0 + 216));
    sub_183D4494C();
    swift_allocObject();
    uint64_t v48 = sub_183D4493C();
    *(void *)(v0 + 288) = v48;
    if (*(unsigned char *)(v47 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_allowCustomSerialization))
    {
      if (*(unsigned char *)(v0 + 83)) {
        int v49 = 7;
      }
      else {
        int v49 = 6;
      }
      if (!*(unsigned char *)(v0 + 82)) {
        goto LABEL_64;
      }
    }
    else
    {
      if (*(unsigned char *)(v0 + 83)) {
        int v49 = 3;
      }
      else {
        int v49 = 2;
      }
      if ((*(unsigned char *)(v0 + 82) & 1) == 0) {
        goto LABEL_64;
      }
    }
    v49 |= 8u;
LABEL_64:
    uint64_t v51 = *(void *)(v0 + 256);
    uint64_t v50 = *(void *)(v0 + 264);
    uint64_t v52 = *(void *)(v0 + 208);
    char v53 = *(unsigned char *)(v0 + 81);
    uint64_t v54 = sub_183557394(v53, v49);
    *(void *)(v0 + 296) = v54;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61E50);
    uint64_t inited = swift_initStackObject();
    *(void *)(v0 + 304) = inited;
    *(_OWORD *)(inited + 16) = xmmword_183D569A0;
    *(void *)(inited + 32) = v54;
    uint64_t v70 = inited;
    sub_183D44E6C();
    unint64_t v56 = v70;
    type metadata accessor for NWConnection.ContentContext();
    *(void *)(v0 + 312) = swift_initStackObject();
    swift_retain();
    NWConnection.ContentContext.init(identifier:expiration:priority:isFinal:antecedent:metadata:)(0x614365746F6D6552, 0xEA00000000006C6CLL, 0, 0, 0, v56, 0.5);
    uint64_t v58 = v57;
    *(void *)(v0 + 320) = v57;
    uint64_t v59 = swift_task_alloc();
    *(void *)(v0 + 328) = v59;
    *(void *)(v59 + 16) = v52;
    *(void *)(v59 + 24) = v51;
    *(void *)(v59 + 32) = v50;
    *(void *)(v59 + 40) = v58;
    *(void *)(v59 + 48) = v48;
    *(unsigned char *)(v59 + 56) = v53;
    id v60 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v60;
    *id v60 = v0;
    v60[1] = sub_183543968;
    uint64_t v61 = MEMORY[0x1E4FBC848] + 8;
    return MEMORY[0x1F4188160](v60, 0, 0, 0xD00000000000002ELL, 0x8000000183E25E30, sub_183552A88, v59, v61);
  }
  uint64_t v18 = v16;
  sub_183D443CC();

  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_183543320()
{
  *(void *)(*(void *)(v0 + 272) + 128) = *(void *)(v0 + 280);
  return MEMORY[0x1F4188298](sub_1835433B4, 0, 0);
}

uint64_t sub_1835433B4()
{
  uint64_t v38 = v0;
  v37[1] = *MEMORY[0x1E4F143B8];
  swift_release();
  if (qword_1E8F62120 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_183D4490C();
  __swift_project_value_buffer(v1, (uint64_t)qword_1E8F63BA8);
  sub_183D448FC();
  sub_183D448AC();
  swift_retain_n();
  uint64_t v2 = sub_183D448FC();
  os_signpost_type_t v3 = sub_183D4533C();
  if (sub_183D4535C())
  {
    os_signpost_type_t v35 = v3;
    uint64_t v4 = *(unsigned __int8 *)(v0 + 81);
    uint64_t v36 = *(void (**)(void, void, void))(*(void *)(v0 + 224) + 16);
    v36(*(void *)(v0 + 240), *(void *)(v0 + 248), *(void *)(v0 + 216));
    uint64_t v5 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    v37[0] = v34;
    *(_DWORD *)uint64_t v5 = 136315394;
    unint64_t v6 = 0xE700000000000000;
    uint64_t v7 = 0x64696C61766E69;
    switch(v4)
    {
      case 1:
        uint64_t v7 = 0x614365746F6D6572;
        unint64_t v6 = 0xEA00000000006C6CLL;
        break;
      case 2:
        uint64_t v7 = 0xD000000000000013;
        uint64_t v10 = "fileTransferRequest";
        goto LABEL_14;
      case 3:
        uint64_t v7 = 0xD000000000000014;
        uint64_t v10 = "fileTransferResponse";
        goto LABEL_14;
      case 4:
        uint64_t v11 = "cancelRemoteCall";
        goto LABEL_12;
      case 5:
        uint64_t v11 = "terminateProcess";
LABEL_12:
        unint64_t v6 = (unint64_t)(v11 - 32) | 0x8000000000000000;
        uint64_t v7 = 0xD000000000000010;
        break;
      case 6:
        uint64_t v7 = 0xD000000000000012;
        uint64_t v10 = "remoteCallProtobuf";
LABEL_14:
        unint64_t v6 = (unint64_t)(v10 - 32) | 0x8000000000000000;
        break;
      case 7:
        unint64_t v6 = 0xED00006675626F74;
        uint64_t v7 = 0x6F7250796C706572;
        break;
      default:
        break;
    }
    uint64_t v12 = *(void *)(v0 + 240);
    uint64_t v13 = *(void *)(v0 + 224);
    uint64_t v33 = *(void *)(v0 + 216);
    uint64_t v14 = *(void *)(v0 + 208);
    *(void *)(v0 + 136) = sub_1834EFE70(v7, v6, v37);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    uint64_t id = nw_connection_get_id(*(void **)(*(void *)(v14 + 16) + 16));
    swift_release();
    *(void *)(v0 + 144) = id;
    sub_183D453AC();
    swift_release();
    os_signpost_id_t v16 = sub_183D448BC();
    _os_signpost_emit_with_name_impl(&dword_1830D4000, v2, v35, v16, "sendData", "Sending %s on %llu", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v34, -1, -1);
    MEMORY[0x185318E50](v5, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v33);
    BOOL v9 = v36;
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 224);
    swift_release_n();

    BOOL v9 = *(void (**)(void, void, void))(v8 + 16);
  }
  uint64_t v17 = *(void *)(v0 + 208);
  v9(*(void *)(v0 + 232), *(void *)(v0 + 248), *(void *)(v0 + 216));
  sub_183D4494C();
  swift_allocObject();
  uint64_t v18 = sub_183D4493C();
  *(void *)(v0 + 288) = v18;
  if (*(unsigned char *)(v17 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_allowCustomSerialization))
  {
    if (*(unsigned char *)(v0 + 83)) {
      int v19 = 7;
    }
    else {
      int v19 = 6;
    }
    if (!*(unsigned char *)(v0 + 82)) {
      goto LABEL_27;
    }
  }
  else
  {
    if (*(unsigned char *)(v0 + 83)) {
      int v19 = 3;
    }
    else {
      int v19 = 2;
    }
    if ((*(unsigned char *)(v0 + 82) & 1) == 0) {
      goto LABEL_27;
    }
  }
  v19 |= 8u;
LABEL_27:
  uint64_t v21 = *(void *)(v0 + 256);
  uint64_t v20 = *(void *)(v0 + 264);
  uint64_t v22 = *(void *)(v0 + 208);
  char v23 = *(unsigned char *)(v0 + 81);
  uint64_t v24 = sub_183557394(v23, v19);
  *(void *)(v0 + 296) = v24;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61E50);
  uint64_t inited = swift_initStackObject();
  *(void *)(v0 + 304) = inited;
  *(_OWORD *)(inited + 16) = xmmword_183D569A0;
  *(void *)(inited + 32) = v24;
  v37[0] = inited;
  sub_183D44E6C();
  unint64_t v26 = v37[0];
  type metadata accessor for NWConnection.ContentContext();
  *(void *)(v0 + 312) = swift_initStackObject();
  swift_retain();
  NWConnection.ContentContext.init(identifier:expiration:priority:isFinal:antecedent:metadata:)(0x614365746F6D6552, 0xEA00000000006C6CLL, 0, 0, 0, v26, 0.5);
  uint64_t v28 = v27;
  *(void *)(v0 + 320) = v27;
  uint64_t v29 = swift_task_alloc();
  *(void *)(v0 + 328) = v29;
  *(void *)(v29 + 16) = v22;
  *(void *)(v29 + 24) = v21;
  *(void *)(v29 + 32) = v20;
  *(void *)(v29 + 40) = v28;
  *(void *)(v29 + 48) = v18;
  *(unsigned char *)(v29 + 56) = v23;
  os_signpost_type_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 336) = v30;
  void *v30 = v0;
  v30[1] = sub_183543968;
  uint64_t v31 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188160](v30, 0, 0, 0xD00000000000002ELL, 0x8000000183E25E30, sub_183552A88, v29, v31);
}

uint64_t sub_183543968()
{
  *(void *)(*(void *)v1 + 344) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_183543BD8;
  }
  else {
    uint64_t v2 = sub_183543AC8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_183543AC8()
{
  uint64_t v2 = v0[32];
  unint64_t v1 = v0[33];
  uint64_t v3 = v0[31];
  uint64_t v4 = v0[28];
  uint64_t v5 = v0[27];
  swift_release();
  swift_release();
  swift_release();
  sub_1832E5E9C(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_183543BD8()
{
  uint64_t v2 = v0[32];
  unint64_t v1 = v0[33];
  uint64_t v3 = v0[31];
  uint64_t v4 = v0[27];
  uint64_t v5 = v0[28];
  swift_release();
  swift_release();
  swift_release();
  sub_1832E5E9C(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_183543CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v22 = a7;
  uint64_t v23 = a5;
  v21[0] = a4;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(void *)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = v15 + v13;
  uint64_t v17 = swift_allocObject();
  unint64_t v18 = (v16 & 0xFFFFFFFFFFFFFFF8) + v17;
  *(void *)(v17 + 16) = a6;
  *(void *)(v17 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v15, v14, v11);
  *(unsigned char *)(v17 + v16) = v22;
  unint64_t v19 = v21[0];
  *(void *)(v18 + 8) = a3;
  *(void *)(v18 + 16) = v19;
  v24[0] = (uint64_t)sub_183552B90;
  v24[1] = v17;
  swift_retain();
  swift_retain();
  sub_1832E5D6C(a3, v19);
  NWConnection.send(content:contentContext:isComplete:completion:)(a3, v19, v23, 1, v24);
  return swift_release();
}

uint64_t sub_183543E98(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  unint64_t v61 = a7;
  uint64_t v62 = a3;
  uint64_t v63 = a6;
  uint64_t v64 = a4;
  uint64_t v59 = a5;
  uint64_t v8 = sub_183D4491C();
  uint64_t v60 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_183D448DC();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v58 - v16;
  uint64_t v18 = *((unsigned __int8 *)a1 + 4);
  uint64_t v19 = *a1;
  if (qword_1E8F62120 != -1) {
    swift_once();
  }
  unint64_t v65 = v19 | (v18 << 32);
  uint64_t v20 = sub_183D4490C();
  __swift_project_value_buffer(v20, (uint64_t)qword_1E8F63BA8);
  uint64_t v21 = sub_183D448FC();
  sub_183D4492C();
  os_signpost_type_t v22 = sub_183D4532C();
  if (sub_183D4535C())
  {
    swift_retain();
    sub_183D4495C();
    swift_release();
    uint64_t v23 = v60;
    if ((*(unsigned int (**)(char *, uint64_t))(v60 + 88))(v10, v8) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v24 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v8);
      uint64_t v24 = "";
    }
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    unint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v25 = 0;
    os_signpost_id_t v26 = sub_183D448BC();
    _os_signpost_emit_with_name_impl(&dword_1830D4000, v21, v22, v26, "sendData", v24, v25, 2u);
    MEMORY[0x185318E50](v25, -1, -1);

    uint64_t v27 = *(void (**)(char *, uint64_t))(v12 + 8);
    v27(v17, v11);
    v27(v15, v11);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  unint64_t v28 = v65;
  unint64_t v29 = HIDWORD(v65);
  uint64_t v30 = v62;
  uint64_t v31 = v63;
  if (HIDWORD(v65) <= 0xFE)
  {
    if (qword_1E8F62118 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_183D4498C();
    __swift_project_value_buffer(v40, (uint64_t)qword_1E8F63B90);
    swift_retain_n();
    uint64_t v41 = sub_183D4496C();
    os_log_type_t v42 = sub_183D4529C();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v63 = v28;
      uint64_t v43 = v30;
      uint64_t v44 = swift_slowAlloc();
      uint64_t v45 = (void *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 136315394;
      uint64_t v67 = 67;
      unint64_t v68 = 0xE100000000000000;
      uint64_t v69 = v46;
      uint64_t id = nw_connection_get_id(*(void **)(*(void *)(v43 + 16) + 16));
      sub_183D4589C();
      sub_183D44C8C();
      swift_bridgeObjectRelease();
      uint64_t v67 = sub_1834EFE70(v67, v68, &v69);
      sub_183D453AC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2112;
      sub_1834AC424();
      swift_allocError();
      *(_DWORD *)uint64_t v47 = v63;
      *(unsigned char *)(v47 + 4) = v29;
      uint64_t v48 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v67 = v48;
      unint64_t v28 = v65;
      sub_183D453AC();
      *uint64_t v45 = v48;
      _os_log_impl(&dword_1830D4000, v41, v42, "%s: Failed to send: %@", (uint8_t *)v44, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61A60);
      swift_arrayDestroy();
      MEMORY[0x185318E50](v45, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x185318E50](v46, -1, -1);
      MEMORY[0x185318E50](v44, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    sub_1834F0498();
    uint64_t v49 = swift_allocError();
    *(void *)uint64_t v50 = v28;
    *(_OWORD *)(v50 + 8) = xmmword_183D58500;
    uint64_t v67 = v49;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
    return sub_183D44F3C();
  }
  else
  {
    if (qword_1E8F62118 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_183D4498C();
    __swift_project_value_buffer(v32, (uint64_t)qword_1E8F63B90);
    swift_retain();
    unint64_t v33 = v61;
    sub_1832E5D6C(v31, v61);
    swift_retain();
    sub_1832E5D6C(v31, v33);
    uint64_t v34 = sub_183D4496C();
    os_log_type_t v35 = sub_183D452BC();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      unint64_t v65 = v37;
      *(_DWORD *)uint64_t v36 = 136315650;
      uint64_t v67 = 67;
      unint64_t v68 = 0xE100000000000000;
      uint64_t v69 = v37;
      uint64_t id = nw_connection_get_id(*(void **)(*(void *)(v30 + 16) + 16));
      sub_183D4589C();
      sub_183D44C8C();
      swift_bridgeObjectRelease();
      uint64_t v67 = sub_1834EFE70(v67, v68, &v69);
      sub_183D453AC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2080;
      unint64_t v38 = 0xE700000000000000;
      uint64_t v39 = 0x64696C61766E69;
      switch((char)v59)
      {
        case 1:
          unint64_t v38 = 0xEA00000000006C6CLL;
          uint64_t v39 = 0x614365746F6D6572;
          break;
        case 2:
          uint64_t v39 = 0xD000000000000013;
          uint64_t v52 = "fileTransferRequest";
          goto LABEL_28;
        case 3:
          uint64_t v39 = 0xD000000000000014;
          uint64_t v52 = "fileTransferResponse";
          goto LABEL_28;
        case 4:
          char v53 = "cancelRemoteCall";
          goto LABEL_26;
        case 5:
          char v53 = "terminateProcess";
LABEL_26:
          unint64_t v38 = (unint64_t)(v53 - 32) | 0x8000000000000000;
          uint64_t v39 = 0xD000000000000010;
          break;
        case 6:
          uint64_t v39 = 0xD000000000000012;
          uint64_t v52 = "remoteCallProtobuf";
LABEL_28:
          unint64_t v38 = (unint64_t)(v52 - 32) | 0x8000000000000000;
          break;
        case 7:
          unint64_t v38 = 0xED00006675626F74;
          uint64_t v39 = 0x6F7250796C706572;
          break;
        default:
          break;
      }
      uint64_t v67 = sub_1834EFE70(v39, v38, &v69);
      sub_183D453AC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 22) = 2080;
      sub_1832E5D6C(v31, v33);
      uint64_t v54 = sub_183D444BC();
      unint64_t v56 = v55;
      sub_1832E5E9C(v31, v33);
      uint64_t v67 = sub_1834EFE70(v54, v56, &v69);
      sub_183D453AC();
      swift_bridgeObjectRelease();
      sub_1832E5E9C(v31, v33);
      sub_1832E5E9C(v31, v33);
      _os_log_impl(&dword_1830D4000, v34, v35, "%s: Successfully sent data of type %s, data: %s", (uint8_t *)v36, 0x20u);
      unint64_t v57 = v65;
      swift_arrayDestroy();
      MEMORY[0x185318E50](v57, -1, -1);
      MEMORY[0x185318E50](v36, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_1832E5E9C(v31, v33);
      sub_1832E5E9C(v31, v33);
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
    return sub_183D44F4C();
  }
}

uint64_t sub_183544830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 32) = a4;
  return MEMORY[0x1F4188298](sub_183544850, 0, 0);
}

uint64_t sub_183544850()
{
  uint64_t v16 = v0;
  if (qword_1E8F62118 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_183D4498C();
  __swift_project_value_buffer(v1, (uint64_t)qword_1E8F63B90);
  swift_retain_n();
  uint64_t v2 = sub_183D4496C();
  os_log_type_t v3 = sub_183D452BC();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[4];
  if (v4)
  {
    unint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)unint64_t v6 = 136315138;
    uint64_t v13 = v7;
    uint64_t v14 = 67;
    unint64_t v15 = 0xE100000000000000;
    v0[2] = nw_connection_get_id(*(void **)(*(void *)(v5 + 16) + 16));
    sub_183D4589C();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    v0[3] = sub_1834EFE70(v14, v15, &v13);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1830D4000, v2, v3, "%s: Sending terminate process message", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v7, -1, -1);
    MEMORY[0x185318E50](v6, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  uint64_t v8 = sub_1834D81D4((uint64_t)&unk_1ECF62838);
  uint64_t v10 = v9;
  v0[5] = v8;
  v0[6] = v9;
  uint64_t v11 = (void *)swift_task_alloc();
  v0[7] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_183544AE8;
  return sub_18354260C(v8, v10, 5, 0);
}

uint64_t sub_183544AE8()
{
  uint64_t v2 = (void *)*v1;
  v2[8] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_183544C24, 0, 0);
  }
  else
  {
    sub_1832E5E9C(v2[5], v2[6]);
    os_log_type_t v3 = (uint64_t (*)(void))v2[1];
    return v3();
  }
}

uint64_t sub_183544C24()
{
  sub_1832E5E9C(v0[5], v0[6]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_183544C88(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unsigned int *a5)
{
  uint64_t v198 = a3;
  unint64_t v199 = a1;
  unint64_t v196 = a2;
  uint64_t v207 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_183D4491C();
  uint64_t v194 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  v193 = (char *)&v175 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_183D448DC();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v175 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  v195 = (char *)&v175 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v175 - v16;
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  unint64_t v200 = (unint64_t)&v175 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v175 - v20;
  uint64_t v22 = *((unsigned __int8 *)a5 + 4);
  uint64_t v23 = *a5;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    unint64_t v25 = Strong;
    v190 = v12;
    if (qword_1E8F62120 != -1) {
      swift_once();
    }
    unint64_t v197 = v23 | (v22 << 32);
    uint64_t v26 = sub_183D4490C();
    uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1E8F63BA8);
    swift_retain();
    sub_183D448CC();
    uint64_t v191 = v27;
    unint64_t v28 = sub_183D448FC();
    os_signpost_type_t v29 = sub_183D4534C();
    char v30 = sub_183D4535C();
    v192 = v17;
    uint64_t v189 = v6;
    if (v30)
    {
      uint64_t v31 = (char *)v200;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 16))(v200, v21, v8);
      uint64_t v32 = v9;
      uint64_t v33 = v8;
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 134217984;
      uint64_t id = nw_connection_get_id(*((void **)v25[2].isa + 2));
      sub_183D453AC();
      swift_release();
      os_signpost_id_t v35 = sub_183D448BC();
      _os_signpost_emit_with_name_impl(&dword_1830D4000, v28, v29, v35, "receiveNextMessage", "Receive message from %llu", v34, 0xCu);
      uint64_t v36 = v34;
      uint64_t v8 = v33;
      uint64_t v9 = v32;
      MEMORY[0x185318E50](v36, -1, -1);

      uint64_t v37 = *(void (**)(char *, uint64_t))(v32 + 8);
      v37(v21, v8);
      v37(v31, v8);
    }
    else
    {
      swift_release();

      uint64_t v37 = *(void (**)(char *, uint64_t))(v9 + 8);
      v37(v21, v8);
    }
    unsigned int v38 = v197;
    unint64_t v39 = HIDWORD(v197);
    if (HIDWORD(v197) > 0xFE)
    {
      if (qword_1E8F62118 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_183D4498C();
      uint64_t v41 = __swift_project_value_buffer(v40, (uint64_t)qword_1E8F63B90);
      swift_retain_n();
      os_log_type_t v42 = sub_183D4496C();
      os_log_type_t v43 = sub_183D4528C();
      BOOL v44 = os_log_type_enabled(v42, v43);
      uint64_t v187 = v37;
      if (v44)
      {
        uint64_t v45 = swift_slowAlloc();
        uint64_t v188 = v8;
        uint64_t v46 = (uint8_t *)v45;
        unint64_t v197 = swift_slowAlloc();
        *(void *)&long long v202 = v197;
        *(_DWORD *)uint64_t v46 = 136315138;
        unint64_t v186 = (unint64_t)(v46 + 4);
        uint64_t id = 67;
        unint64_t v205 = 0xE100000000000000;
        uint64_t v201 = nw_connection_get_id(*((void **)v25[2].isa + 2));
        sub_183D4589C();
        sub_183D44C8C();
        swift_bridgeObjectRelease();
        uint64_t id = sub_1834EFE70(id, v205, (uint64_t *)&v202);
        sub_183D453AC();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1830D4000, v42, v43, "%s: Received message", v46, 0xCu);
        unint64_t v47 = v197;
        swift_arrayDestroy();
        MEMORY[0x185318E50](v47, -1, -1);
        uint64_t v48 = v46;
        uint64_t v8 = v188;
        MEMORY[0x185318E50](v48, -1, -1);

        uint64_t v49 = v198;
        uint64_t v50 = v199;
        if (v198) {
          goto LABEL_12;
        }
      }
      else
      {

        swift_release_n();
        uint64_t v49 = v198;
        uint64_t v50 = v199;
        if (v198)
        {
LABEL_12:
          BOOL is_final = nw_content_context_get_is_final(*(nw_content_context_t *)(v49 + 16));
          if (qword_1E8F62150 != -1) {
            swift_once();
          }
          nw_protocol_metadata_t v52 = nw_content_context_copy_protocol_metadata(*(nw_content_context_t *)(v49 + 16), *(nw_protocol_definition_t *)(qword_1E8F7A908 + 32));
          if (v52)
          {
            nw_protocol_metadata_t v53 = v52;
            uint64_t v54 = sub_1835312A8((uint64_t)v52);
            if (v54)
            {
              uint64_t v55 = (*(uint64_t (**)(nw_protocol_metadata_t))(v54 + 96))(v53);
              type metadata accessor for NWProtocolFramer.Message();
              uint64_t v56 = swift_dynamicCastClass();
              if (v56)
              {
                if (v196 >> 60 == 15)
                {
                  swift_retain_n();
                  uint64_t v57 = (uint64_t)v25;
                  uint64_t v58 = sub_183D4496C();
                  os_log_type_t v59 = sub_183D4529C();
                  if (os_log_type_enabled(v58, v59))
                  {
                    uint64_t v60 = swift_slowAlloc();
                    LODWORD(v198) = is_final;
                    uint64_t v184 = v55;
                    unint64_t v61 = (uint8_t *)v60;
                    uint64_t v62 = swift_slowAlloc();
                    *(void *)&long long v202 = v62;
                    *(_DWORD *)unint64_t v61 = 136315138;
                    uint64_t id = 67;
                    unint64_t v205 = 0xE100000000000000;
                    uint64_t v201 = nw_connection_get_id(*(void **)(*(void *)(v57 + 16) + 16));
                    sub_183D4589C();
                    sub_183D44C8C();
                    swift_bridgeObjectRelease();
                    uint64_t id = sub_1834EFE70(id, v205, (uint64_t *)&v202);
                    sub_183D453AC();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    _os_log_impl(&dword_1830D4000, v58, v59, "%s No content in message", v61, 0xCu);
                    swift_arrayDestroy();
                    MEMORY[0x185318E50](v62, -1, -1);
                    LOBYTE(is_final) = v198;
                    MEMORY[0x185318E50](v61, -1, -1);

                    swift_release();
LABEL_33:
                    sub_183546BA8(is_final, v57);
LABEL_34:
                    swift_release();
                    return;
                  }

                  swift_release();
                  goto LABEL_32;
                }
                uint64_t v76 = v56;
                uint64_t v181 = v41;
                uint64_t v184 = v55;
                LODWORD(v198) = is_final;
                unint64_t v180 = v196 >> 62;
                sub_1832E5D6C(v50, v196);
                uint64_t v185 = v76;
                uint64_t v77 = sub_183556EC0();
                sub_183D448FC();
                uint64_t v78 = v192;
                sub_183D448AC();
                swift_retain_n();
                char v79 = sub_183D448FC();
                int v80 = sub_183D4533C();
                char v81 = sub_183D4535C();
                unint64_t v186 = v77;
                uint64_t v182 = v9;
                if (v81)
                {
                  LODWORD(v179) = v80;
                  unint64_t v197 = (unint64_t)v79;
                  uint64_t v82 = 0x64696C61766E69;
                  unint64_t v83 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
                  unint64_t v183 = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
                  v83(v195, v78, v8);
                  uint64_t v84 = swift_slowAlloc();
                  uint64_t v85 = swift_slowAlloc();
                  uint64_t id = v85;
                  *(_DWORD *)uint64_t v84 = 136315394;
                  unint64_t v86 = 0xE700000000000000;
                  uint64_t v87 = v85;
                  switch((char)v77)
                  {
                    case 1:
                      uint64_t v82 = 0x614365746F6D6572;
                      unint64_t v86 = 0xEA00000000006C6CLL;
                      break;
                    case 2:
                      uint64_t v82 = 0xD000000000000013;
                      uint64_t v90 = "fileTransferRequest";
                      goto LABEL_47;
                    case 3:
                      uint64_t v82 = 0xD000000000000014;
                      uint64_t v90 = "fileTransferResponse";
                      goto LABEL_47;
                    case 4:
                      uint64_t v91 = "cancelRemoteCall";
                      goto LABEL_45;
                    case 5:
                      uint64_t v91 = "terminateProcess";
LABEL_45:
                      unint64_t v86 = (unint64_t)(v91 - 32) | 0x8000000000000000;
                      uint64_t v82 = 0xD000000000000010;
                      break;
                    case 6:
                      uint64_t v82 = 0xD000000000000012;
                      uint64_t v90 = "remoteCallProtobuf";
LABEL_47:
                      unint64_t v86 = (unint64_t)(v90 - 32) | 0x8000000000000000;
                      break;
                    case 7:
                      uint64_t v82 = 0x6F7250796C706572;
                      unint64_t v86 = 0xED00006675626F74;
                      break;
                    default:
                      break;
                  }
                  *(void *)&long long v202 = sub_1834EFE70(v82, v86, &id);
                  sub_183D453AC();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v84 + 12) = 2048;
                  uint64_t v88 = v25;
                  uint64_t v92 = nw_connection_get_id(*((void **)v25[2].isa + 2));
                  swift_release();
                  *(void *)&long long v202 = v92;
                  sub_183D453AC();
                  swift_release();
                  uint64_t v93 = v195;
                  os_signpost_id_t v94 = sub_183D448BC();
                  os_log_t v95 = (os_log_t)v197;
                  _os_signpost_emit_with_name_impl(&dword_1830D4000, (os_log_t)v197, (os_signpost_type_t)v179, v94, "handleMessage", "Handling %s on %llu", (uint8_t *)v84, 0x16u);
                  swift_arrayDestroy();
                  MEMORY[0x185318E50](v87, -1, -1);
                  MEMORY[0x185318E50](v84, -1, -1);

                  v187(v93, v8);
                  unint64_t v89 = v183;
                }
                else
                {

                  swift_release_n();
                  uint64_t v88 = v25;
                  unint64_t v83 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
                  unint64_t v89 = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
                }
                uint64_t v179 = (void (*)(unint64_t, uint64_t, uint64_t))v83;
                unint64_t v183 = v89;
                v83((char *)v200, v192, v8);
                sub_183D4494C();
                swift_allocObject();
                int v96 = 1;
                v195 = (char *)sub_183D4493C();
                isa = (os_unfair_lock_s *)v88[10].isa;
                uint64_t v98 = MEMORY[0x1F4188790](v195);
                unint64_t v197 = (unint64_t)v88;
                uint64_t v99 = v185;
                *(&v175 - 2) = (uint64_t)v88;
                *(&v175 - 1) = v99;
                MEMORY[0x1F4188790](v98);
                *(&v175 - 2) = (uint64_t)sub_183553660;
                *(&v175 - 1) = v100;
                swift_retain();
                os_unfair_lock_lock(isa + 4);
                sub_183554138(v101);
                unint64_t v178 = 0;
                os_unfair_lock_unlock(isa + 4);
                swift_release();
                if (((1 << v186) & 0x3D) != 0)
                {
                  int v96 = 0;
                  int v102 = 0;
                  unint64_t v104 = v196;
                  unint64_t v103 = v197;
                  goto LABEL_62;
                }
                int v102 = 0;
                unint64_t v104 = v196;
                unint64_t v103 = v197;
                if (((1 << v186) & 0xC0) == 0)
                {
LABEL_62:
                  swift_retain();
                  sub_1834D7FF8(v50, v104);
                  swift_retain();
                  sub_1834D7FF8(v50, v104);
                  uLong v106 = sub_183D4496C();
                  int v107 = sub_183D452BC();
                  BOOL v108 = os_log_type_enabled(v106, (os_log_type_t)v107);
                  uint64_t v188 = v8;
                  if (v108)
                  {
                    int v177 = v107;
                    uint64_t v109 = 0x64696C61766E69;
                    uint64_t v110 = swift_slowAlloc();
                    uint64_t v176 = swift_slowAlloc();
                    *(void *)&long long v202 = v176;
                    *(_DWORD *)uint64_t v110 = 136315906;
                    uint64_t id = 67;
                    unint64_t v205 = 0xE100000000000000;
                    uint64_t v201 = nw_connection_get_id(*(void **)(*(void *)(v103 + 16) + 16));
                    sub_183D4589C();
                    sub_183D44C8C();
                    swift_bridgeObjectRelease();
                    uint64_t id = sub_1834EFE70(id, v205, (uint64_t *)&v202);
                    sub_183D453AC();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v110 + 12) = 2080;
                    unint64_t v111 = 0xE700000000000000;
                    switch((char)v186)
                    {
                      case 1:
                        uint64_t v109 = 0x614365746F6D6572;
                        unint64_t v111 = 0xEA00000000006C6CLL;
                        break;
                      case 2:
                        uint64_t v109 = 0xD000000000000013;
                        uLong v112 = "fileTransferRequest";
                        goto LABEL_72;
                      case 3:
                        uint64_t v109 = 0xD000000000000014;
                        uLong v112 = "fileTransferResponse";
                        goto LABEL_72;
                      case 4:
                        uInt v113 = "cancelRemoteCall";
                        goto LABEL_70;
                      case 5:
                        uInt v113 = "terminateProcess";
LABEL_70:
                        unint64_t v111 = (unint64_t)(v113 - 32) | 0x8000000000000000;
                        uint64_t v109 = 0xD000000000000010;
                        break;
                      case 6:
                        uint64_t v109 = 0xD000000000000012;
                        uLong v112 = "remoteCallProtobuf";
LABEL_72:
                        unint64_t v111 = (unint64_t)(v112 - 32) | 0x8000000000000000;
                        break;
                      case 7:
                        uint64_t v109 = 0x6F7250796C706572;
                        unint64_t v111 = 0xED00006675626F74;
                        break;
                      default:
                        break;
                    }
                    uint64_t id = sub_1834EFE70(v109, v111, (uint64_t *)&v202);
                    sub_183D453AC();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v110 + 22) = 2048;
                    uint64_t v50 = v199;
                    uint64_t v8 = v188;
                    switch((int)v180)
                    {
                      case 1:
                        unint64_t v115 = HIDWORD(v199);
                        sub_1832E669C(v199, v196);
                        LODWORD(v114) = v115 - v50;
                        if (__OFSUB__(v115, v50))
                        {
                          __break(1u);
LABEL_135:
                          __break(1u);
                        }
                        uint64_t v114 = (int)v114;
LABEL_79:
                        unint64_t v104 = v196;
LABEL_81:
                        uint64_t id = v114;
                        sub_183D453AC();
                        sub_1832E669C(v50, v104);
                        *(_WORD *)(v110 + 32) = 1024;
                        LODWORD(id) = v96;
                        sub_183D453AC();
                        _os_log_impl(&dword_1830D4000, v106, (os_log_type_t)v177, "%s: Handling message of type %s length: %ld isCompressed: %{BOOL}d", (uint8_t *)v110, 0x26u);
                        uint64_t v118 = v176;
                        swift_arrayDestroy();
                        MEMORY[0x185318E50](v118, -1, -1);
                        MEMORY[0x185318E50](v110, -1, -1);

                        break;
                      case 2:
                        uint64_t v117 = *(void *)(v199 + 16);
                        uint64_t v116 = *(void *)(v199 + 24);
                        sub_1832E669C(v199, v196);
                        uint64_t v114 = v116 - v117;
                        if (!__OFSUB__(v116, v117)) {
                          goto LABEL_79;
                        }
                        goto LABEL_135;
                      case 3:
                        unint64_t v104 = v196;
                        sub_1832E669C(v199, v196);
                        uint64_t v114 = 0;
                        goto LABEL_81;
                      default:
                        unint64_t v104 = v196;
                        sub_1832E669C(v199, v196);
                        uint64_t v114 = BYTE6(v104);
                        goto LABEL_81;
                    }
                  }
                  else
                  {
                    sub_1832E669C(v50, v104);
                    swift_release_n();
                    sub_1832E669C(v50, v104);
                  }
                  if (v96)
                  {
                    if (v102)
                    {
                      uLong v119 = (void *)sub_183D4452C();
                      uint64_t id = 0;
                      id v120 = objc_msgSend(v119, sel_decompressedDataUsingAlgorithm_error_, 0, &id);

                      id v121 = (id)id;
                      if (v120)
                      {
                        uint64_t v122 = sub_183D4453C();
                        unint64_t v124 = v123;

                        goto LABEL_96;
                      }
                      uint64_t v137 = v121;
                      unint64_t v129 = v104;
                      uint64_t v132 = (void *)sub_183D443CC();

                      swift_willThrow();
                    }
                    else
                    {
                      unint64_t v129 = v104;
                      uLong v106 = v178;
                      uint64_t v130 = sub_183508518(47, v50, v104);
                      uint64_t v132 = v106;
                      if (!v106)
                      {
                        uint64_t v122 = v130;
                        unint64_t v124 = v131;
                        uint64_t v8 = v188;
LABEL_96:
                        unint64_t v125 = 0;
                        switch((int)v180)
                        {
                          case 1:
                            if (__OFSUB__(HIDWORD(v50), v50))
                            {
                              __break(1u);
                              JUMPOUT(0x183546B28);
                            }
                            unint64_t v125 = HIDWORD(v50) - (int)v50;
                            goto LABEL_87;
                          case 2:
                            uint64_t v174 = *(void *)(v50 + 16);
                            uint64_t v173 = *(void *)(v50 + 24);
                            unint64_t v125 = v173 - v174;
                            if (!__OFSUB__(v173, v174)) {
                              goto LABEL_87;
                            }
                            __break(1u);
LABEL_132:
                            sub_1832E5E9C(v185, v124);

                            swift_release_n();
LABEL_133:
                            unint64_t v149 = v196;
                            uint64_t v8 = v188;
                            break;
                          case 3:
                            goto LABEL_87;
                          default:
                            unint64_t v125 = BYTE6(v104);
                            goto LABEL_87;
                        }
                        goto LABEL_117;
                      }
                    }
                    unint64_t v138 = v197;
                    swift_retain();
                    id v139 = v132;
                    swift_retain();
                    id v140 = v132;
                    uint64_t v141 = sub_183D4496C();
                    os_log_type_t v142 = sub_183D4529C();
                    int v143 = v142;
                    if (os_log_type_enabled(v141, v142))
                    {
                      uint64_t v144 = swift_slowAlloc();
                      unint64_t v199 = swift_slowAlloc();
                      *(void *)&long long v202 = v199;
                      *(_DWORD *)uint64_t v144 = 136315394;
                      LODWORD(v186) = v143;
                      uint64_t id = 67;
                      unint64_t v205 = 0xE100000000000000;
                      uint64_t v201 = nw_connection_get_id(*(void **)(*(void *)(v138 + 16) + 16));
                      sub_183D4589C();
                      sub_183D44C8C();
                      swift_bridgeObjectRelease();
                      uint64_t id = sub_1834EFE70(id, v205, (uint64_t *)&v202);
                      sub_183D453AC();
                      swift_release_n();
                      swift_bridgeObjectRelease();
                      *(_WORD *)(v144 + 12) = 2080;
                      uint64_t id = (uint64_t)v132;
                      id v145 = v132;
                      __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63CE0);
                      uint64_t v146 = sub_183D44B9C();
                      uint64_t id = sub_1834EFE70(v146, v147, (uint64_t *)&v202);
                      sub_183D453AC();
                      swift_bridgeObjectRelease();

                      _os_log_impl(&dword_1830D4000, v141, (os_log_type_t)v186, "%s: Failed to unzip data: %s", (uint8_t *)v144, 0x16u);
                      unint64_t v148 = v199;
                      swift_arrayDestroy();
                      MEMORY[0x185318E50](v148, -1, -1);
                      MEMORY[0x185318E50](v144, -1, -1);
                    }
                    else
                    {

                      swift_release_n();
                    }
                    unint64_t v149 = v129;
                    uint64_t v8 = v188;
                    uint64_t v122 = (uint64_t)v190;
                  }
                  else
                  {
                    sub_1832E5D6C(v50, v104);
                    unint64_t v125 = 0;
                    uint64_t v122 = v50;
                    unint64_t v124 = v104;
LABEL_87:
                    if (nw_framer_message_copy_object_value(*(nw_framer_message_t *)(v185 + 16), "NWActorSystemOptions"))
                    {
                      sub_183D453DC();
                      swift_unknownObjectRelease();
                    }
                    else
                    {
                      long long v202 = 0u;
                      long long v203 = 0u;
                    }
                    uint64_t v185 = v122;
                    int v126 = v96 ^ 1;
                    sub_183138964((uint64_t)&v202, (uint64_t)&id, (uint64_t *)&unk_1E8F61D90);
                    if (v206)
                    {
                      char v127 = swift_dynamicCast();
                      uint64_t v122 = (uint64_t)v190;
                      if (v127) {
                        unsigned int v128 = (v202 >> 3) & 1;
                      }
                      else {
                        unsigned int v128 = 0;
                      }
                    }
                    else
                    {
                      sub_183138A24((uint64_t)&id, (uint64_t *)&unk_1E8F61D90);
                      unsigned int v128 = 0;
                      uint64_t v122 = (uint64_t)v190;
                    }
                    switch((char)v186)
                    {
                      case 1:
                        unint64_t v149 = v104;
                        uint64_t v150 = v185;
                        uint64_t v151 = v185;
                        unint64_t v152 = v124;
                        int v153 = 0;
                        goto LABEL_114;
                      case 2:
                        unint64_t v149 = v104;
                        uint64_t v154 = v185;
                        sub_1835479C8(v185, v124);
                        uint64_t v155 = v154;
                        break;
                      case 3:
                        unint64_t v149 = v104;
                        uint64_t v156 = v185;
                        sub_183548174(v185, v124);
                        uint64_t v155 = v156;
                        break;
                      case 4:
                        unint64_t v149 = v104;
                        sub_1835486EC(v50, v104);
                        goto LABEL_112;
                      case 5:
                        unint64_t v149 = v104;
                        sub_183552CA4();
LABEL_112:
                        uint64_t v155 = v185;
                        break;
                      case 6:
                        unint64_t v149 = v104;
                        uint64_t v150 = v185;
                        uint64_t v151 = v185;
                        unint64_t v152 = v124;
                        int v153 = 1;
LABEL_114:
                        sub_183546E94(v151, v152, v153, v128);
                        uint64_t v155 = v150;
                        break;
                      case 7:
                        unint64_t v149 = v104;
                        uint64_t v157 = v185;
                        sub_183548EC4(v185, v124, v125, v126);
                        uint64_t v155 = v157;
                        break;
                      default:
                        unint64_t v133 = v197;
                        swift_retain_n();
                        uLong v106 = sub_183D4496C();
                        os_log_type_t v134 = sub_183D4529C();
                        if (!os_log_type_enabled(v106, v134)) {
                          goto LABEL_132;
                        }
                        uint64_t v135 = (uint8_t *)swift_slowAlloc();
                        uint64_t v136 = swift_slowAlloc();
                        *(void *)&long long v202 = v136;
                        unint64_t v186 = v124;
                        *(_DWORD *)uint64_t v135 = 136315138;
                        uint64_t id = 67;
                        unint64_t v205 = 0xE100000000000000;
                        uint64_t v201 = nw_connection_get_id(*(void **)(*(void *)(v133 + 16) + 16));
                        sub_183D4589C();
                        sub_183D44C8C();
                        uint64_t v122 = (uint64_t)v190;
                        swift_bridgeObjectRelease();
                        uint64_t id = sub_1834EFE70(id, v205, (uint64_t *)&v202);
                        uint64_t v50 = v199;
                        sub_183D453AC();
                        swift_release_n();
                        swift_bridgeObjectRelease();
                        _os_log_impl(&dword_1830D4000, v106, v134, "%s: Received invalid message", v135, 0xCu);
                        swift_arrayDestroy();
                        MEMORY[0x185318E50](v136, -1, -1);
                        MEMORY[0x185318E50](v135, -1, -1);

                        sub_1832E5E9C(v185, v186);
                        goto LABEL_133;
                    }
                    sub_1832E5E9C(v155, v124);
                  }
LABEL_117:
                  int v158 = sub_183D448FC();
                  sub_183D4492C();
                  os_signpost_type_t v159 = sub_183D4532C();
                  if (sub_183D4535C())
                  {
                    swift_retain();
                    uint64_t v160 = v193;
                    sub_183D4495C();
                    uint64_t v161 = v160;
                    swift_release();
                    uint64_t v162 = v194;
                    uint64_t v163 = v160;
                    uint64_t v164 = v189;
                    if ((*(unsigned int (**)(char *, uint64_t))(v194 + 88))(v163, v189) == *MEMORY[0x1E4FBD340])
                    {
                      char v165 = "[Error] Interval already ended";
                    }
                    else
                    {
                      (*(void (**)(char *, uint64_t))(v162 + 8))(v161, v164);
                      char v165 = "";
                    }
                    uint64_t v168 = (char *)v200;
                    v179(v200, v122, v8);
                    uint64_t v169 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)uint64_t v169 = 0;
                    os_signpost_id_t v170 = sub_183D448BC();
                    _os_signpost_emit_with_name_impl(&dword_1830D4000, v158, v159, v170, "handleMessage", v165, v169, 2u);
                    MEMORY[0x185318E50](v169, -1, -1);

                    uint64_t v166 = (uint64_t (*)(char *, uint64_t))v187;
                    v187((char *)v122, v8);
                    uint64_t v167 = v166(v168, v8);
                  }
                  else
                  {

                    uint64_t v166 = (uint64_t (*)(char *, uint64_t))v187;
                    uint64_t v167 = ((uint64_t (*)(uint64_t, uint64_t))v187)(v122, v8);
                  }
                  os_log_t v171 = (os_log_t)v197;
                  char v172 = v198;
                  if (v198)
                  {
                    v166(v192, v8);
                    swift_release();
                    sub_1832E669C(v50, v149);
                    swift_release();
                  }
                  else
                  {
                    sub_18353FE88(v167);
                    swift_release();
                    swift_release();
                    sub_1832E669C(v50, v149);
                    v166(v192, v8);
                  }
                  sub_183546BA8(v172, (uint64_t)v171);
                  goto LABEL_34;
                }
                if (nw_framer_message_copy_object_value(*(nw_framer_message_t *)(v185 + 16), "NWActorSystemOptions"))
                {
                  sub_183D453DC();
                  swift_unknownObjectRelease();
                }
                else
                {
                  long long v202 = 0u;
                  long long v203 = 0u;
                }
                sub_183138964((uint64_t)&v202, (uint64_t)&id, (uint64_t *)&unk_1E8F61D90);
                if (v206)
                {
                  if (swift_dynamicCast())
                  {
                    char v105 = v202;
LABEL_61:
                    int v96 = v105 & 1;
                    int v102 = 1;
                    goto LABEL_62;
                  }
                }
                else
                {
                  sub_183138A24((uint64_t)&id, (uint64_t *)&unk_1E8F61D90);
                }
                char v105 = 0;
                goto LABEL_61;
              }
              swift_release();
            }
            else
            {
              swift_unknownObjectRelease();
            }
          }
LABEL_29:
          swift_retain_n();
          uint64_t v57 = (uint64_t)v25;
          unint64_t v71 = sub_183D4496C();
          os_log_type_t v72 = sub_183D4529C();
          if (os_log_type_enabled(v71, v72))
          {
            uint64_t v73 = swift_slowAlloc();
            LODWORD(v198) = is_final;
            uint64_t v74 = (uint8_t *)v73;
            uint64_t v75 = swift_slowAlloc();
            *(void *)&long long v202 = v75;
            *(_DWORD *)uint64_t v74 = 136315138;
            uint64_t id = 67;
            unint64_t v205 = 0xE100000000000000;
            uint64_t v201 = nw_connection_get_id(*(void **)(*(void *)(v57 + 16) + 16));
            sub_183D4589C();
            sub_183D44C8C();
            swift_bridgeObjectRelease();
            uint64_t id = sub_1834EFE70(id, v205, (uint64_t *)&v202);
            sub_183D453AC();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1830D4000, v71, v72, "%s Failed to determine message type", v74, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x185318E50](v75, -1, -1);
            LOBYTE(is_final) = v198;
            MEMORY[0x185318E50](v74, -1, -1);

            goto LABEL_33;
          }

LABEL_32:
          swift_release_n();
          goto LABEL_33;
        }
      }
      BOOL is_final = 0;
      goto LABEL_29;
    }
    if (qword_1E8F62118 != -1) {
      swift_once();
    }
    uint64_t v63 = sub_183D4498C();
    __swift_project_value_buffer(v63, (uint64_t)qword_1E8F63B90);
    swift_retain_n();
    uint64_t v64 = sub_183D4496C();
    os_log_type_t v65 = sub_183D4529C();
    if (os_log_type_enabled(v64, v65))
    {
      unint64_t v200 = v38;
      uint64_t v66 = swift_slowAlloc();
      uint64_t v67 = (void *)swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      *(void *)&long long v202 = v68;
      *(_DWORD *)uint64_t v66 = 136315394;
      uint64_t id = 67;
      unint64_t v205 = 0xE100000000000000;
      uint64_t v201 = nw_connection_get_id(*((void **)v25[2].isa + 2));
      sub_183D4589C();
      sub_183D44C8C();
      swift_bridgeObjectRelease();
      uint64_t id = sub_1834EFE70(id, v205, (uint64_t *)&v202);
      sub_183D453AC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v66 + 12) = 2112;
      sub_1834AC424();
      swift_allocError();
      *(_DWORD *)uint64_t v69 = v200;
      *(unsigned char *)(v69 + 4) = v39;
      uint64_t v70 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t id = v70;
      sub_183D453AC();
      *uint64_t v67 = v70;
      _os_log_impl(&dword_1830D4000, v64, v65, "%s: Failed to receive message: %@", (uint8_t *)v66, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61A60);
      swift_arrayDestroy();
      MEMORY[0x185318E50](v67, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x185318E50](v68, -1, -1);
      MEMORY[0x185318E50](v66, -1, -1);
      swift_release();
    }
    else
    {

      swift_release_n();
    }
  }
}

void sub_183546BA8(char a1, uint64_t a2)
{
  if (a1)
  {
    if (qword_1E8F62118 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_183D4498C();
    __swift_project_value_buffer(v3, (uint64_t)qword_1E8F63B90);
    swift_retain_n();
    BOOL v4 = sub_183D4496C();
    os_log_type_t v5 = sub_183D452BC();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      uint64_t v8 = v7;
      nw_connection_get_id(*(void **)(*(void *)(a2 + 16) + 16));
      sub_183D4589C();
      sub_183D44C8C();
      swift_bridgeObjectRelease();
      sub_1834EFE70(67, 0xE100000000000000, &v8);
      sub_183D453AC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1830D4000, v4, v5, "%s: Message is final, connection has ended", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x185318E50](v7, -1, -1);
      MEMORY[0x185318E50](v6, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    sub_18354017C(0);
  }
}

uint64_t sub_183546DB0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_supportsCustomSerialization;
  if ((*(unsigned char *)(result + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_supportsCustomSerialization) & 1) == 0)
  {
    uint64_t v3 = result;
    if (nw_framer_message_copy_object_value(*(nw_framer_message_t *)(a2 + 16), "NWActorSystemOptions"))
    {
      sub_183D453DC();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v5, 0, sizeof(v5));
    }
    sub_183138964((uint64_t)v5, (uint64_t)v6, (uint64_t *)&unk_1E8F61D90);
    if (v7)
    {
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        int v4 = (LODWORD(v5[0]) >> 2) & 1;
LABEL_10:
        *(unsigned char *)(v3 + v2) = v4;
        return result;
      }
    }
    else
    {
      uint64_t result = sub_183138A24((uint64_t)v6, (uint64_t *)&unk_1E8F61D90);
    }
    LOBYTE(v4) = 0;
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_183546E94(uint64_t a1, unint64_t a2, int a3, int a4)
{
  int v81 = a4;
  LODWORD(v85) = a3;
  unint64_t v86 = a2;
  uint64_t v5 = type metadata accessor for NWActorID();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v74 = (uint64_t)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61C90);
  uint64_t v78 = *(void *)(v7 - 8);
  uint64_t v79 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v73 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F63BF0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v77 = (uint64_t)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  int v80 = (char *)&v73 - v12;
  uint64_t v13 = sub_183D448DC();
  uint64_t v88 = *(void *)(v13 - 8);
  uint64_t v89 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_183D4490C();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for RemoteCallEnvelope(0);
  uint64_t v20 = MEMORY[0x1F4188790](v83);
  uint64_t v22 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v82 = (char *)&v73 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v75 = (uint64_t)&v73 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v76 = (uint64_t)&v73 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v31 = (char *)&v73 - v30;
  MEMORY[0x1F4188790](v29);
  uint64_t v84 = (uint64_t)&v73 - v32;
  if (qword_1E8F62120 != -1) {
    swift_once();
  }
  uint64_t v33 = __swift_project_value_buffer(v16, (uint64_t)qword_1E8F63BA8);
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v87 = v16;
  v34(v19, v33, v16);
  sub_183D448CC();
  os_signpost_id_t v35 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)os_signpost_id_t v35 = 0;
  uint64_t v36 = sub_183D448FC();
  os_signpost_type_t v37 = sub_183D4533C();
  os_signpost_id_t v38 = sub_183D448BC();
  _os_signpost_emit_with_name_impl(&dword_1830D4000, v36, v37, v38, "decodeRemoteCallEnvelope", "", v35, 2u);
  if (v85)
  {
    unint64_t v39 = v86;
    sub_1832E5D6C(a1, v86);
    uint64_t v40 = v82;
    sub_1835B2F98(a1, v39, v82);
    uint64_t v85 = (uint64_t)v31;
  }
  else
  {
    uint64_t v85 = (uint64_t)v31;
    sub_183D4426C();
    swift_allocObject();
    uint64_t v41 = a1;
    uint64_t v42 = a1;
    unint64_t v43 = v86;
    sub_1832E5D6C(v41, v86);
    sub_183D4425C();
    sub_183553930(&qword_1E8F63D88, (void (*)(uint64_t))type metadata accessor for RemoteCallEnvelope);
    sub_183D4423C();
    sub_1832E5E9C(v42, v43);
    swift_release();
    uint64_t v44 = (uint64_t)v22;
    uint64_t v40 = v82;
    sub_183554058(v44, (uint64_t)v82, type metadata accessor for RemoteCallEnvelope);
  }
  uint64_t v45 = (uint64_t)v40;
  uint64_t v46 = v75;
  sub_183554058(v45, v75, type metadata accessor for RemoteCallEnvelope);
  os_signpost_type_t v47 = sub_183D4532C();
  os_signpost_id_t v48 = sub_183D448BC();
  _os_signpost_emit_with_name_impl(&dword_1830D4000, v36, v47, v48, "decodeRemoteCallEnvelope", "", v35, 2u);

  uint64_t v49 = v76;
  sub_183554058(v46, v76, type metadata accessor for RemoteCallEnvelope);
  MEMORY[0x185318E50](v35, -1, -1);
  uint64_t v50 = v49;
  uint64_t v51 = v85;
  sub_183554058(v50, v85, type metadata accessor for RemoteCallEnvelope);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v15, v89);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v87);
  uint64_t v52 = v84;
  uint64_t v53 = sub_183554058(v51, v84, type metadata accessor for RemoteCallEnvelope);
  uint64_t v54 = v90;
  MEMORY[0x1F4188790](v53);
  *(&v73 - 2) = (char *)sub_183553978;
  *(&v73 - 1) = v54;
  uint64_t v56 = v55 + 4;
  os_unfair_lock_lock(v55 + 4);
  uint64_t v57 = (uint64_t)v80;
  sub_1835071D4(v58);
  os_unfair_lock_unlock(v56);
  uint64_t v59 = v77;
  sub_183138900(v57, v77, (uint64_t *)&unk_1E8F63BF0);
  uint64_t v61 = v78;
  uint64_t v60 = v79;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v59, 1, v79) == 1)
  {
    uint64_t v62 = sub_183138A24(v59, (uint64_t *)&unk_1E8F63BF0);
  }
  else
  {
    uint64_t v63 = v73;
    uint64_t v64 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 32))(v73, v59, v60);
    uint64_t v65 = v84 + *(int *)(v83 + 20);
    uint64_t v66 = MEMORY[0x1F4188790](v64);
    *(&v73 - 2) = v54;
    *(&v73 - 1) = (char *)v65;
    MEMORY[0x1F4188790](v66);
    *(&v73 - 2) = (char *)sub_183554198;
    *(&v73 - 1) = v67;
    os_unfair_lock_lock(v56);
    sub_183554138(v68);
    os_unfair_lock_unlock(v56);
    uint64_t v52 = v84;
    sub_1835539B4(v65, v74, (uint64_t (*)(void))type metadata accessor for NWActorID);
    sub_183D44F4C();
    uint64_t v62 = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v63, v60);
  }
  uint64_t v69 = MEMORY[0x1F4188790](v62);
  *(&v73 - 4) = v54;
  *(&v73 - 3) = (char *)v52;
  *((unsigned char *)&v73 - 16) = v81 & 1;
  MEMORY[0x1F4188790](v69);
  *(&v73 - 2) = (char *)sub_183553994;
  *(&v73 - 1) = v70;
  os_unfair_lock_lock(v56);
  sub_183554138(v71);
  os_unfair_lock_unlock(v56);
  sub_183138A24(v57, (uint64_t *)&unk_1E8F63BF0);
  return sub_183553108(v52, type metadata accessor for RemoteCallEnvelope);
}

void sub_1835479C8(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62DD0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_183D4426C();
  swift_allocObject();
  sub_1832E5D6C(a1, a2);
  sub_183D4425C();
  sub_18355367C();
  sub_183D4423C();
  sub_1832E5E9C(a1, a2);
  swift_release();
  long long v47 = v44;
  long long v48 = v45;
  long long v49 = v46;
  if (qword_1E8F62118 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_183D4498C();
  __swift_project_value_buffer(v9, (uint64_t)qword_1E8F63B90);
  swift_retain();
  sub_183552758(&v47);
  swift_retain();
  sub_183552758(&v47);
  uint64_t v10 = sub_183D4496C();
  os_log_type_t v11 = sub_183D452BC();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v42[0] = v8;
    uint64_t v14 = v13;
    v43[0] = v13;
    *(_DWORD *)uint64_t v12 = 136315394;
    *(void *)&long long v44 = 67;
    *((void *)&v44 + 1) = 0xE100000000000000;
    v42[1] = nw_connection_get_id(*(void **)(*(void *)(v2 + 16) + 16));
    sub_183D4589C();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    *(void *)&long long v44 = sub_1834EFE70(v44, *((unint64_t *)&v44 + 1), v43);
    sub_183D453AC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    long long v44 = v47;
    long long v45 = v48;
    long long v46 = v49;
    sub_183552758(&v47);
    uint64_t v15 = sub_183D44B9C();
    *(void *)&long long v44 = sub_1834EFE70(v15, v16, v43);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    sub_183552808(&v47);
    sub_183552808(&v47);
    _os_log_impl(&dword_1830D4000, v10, v11, "%s: Got file transfer request: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    uint64_t v17 = v14;
    uint64_t v8 = (char *)v42[0];
    MEMORY[0x185318E50](v17, -1, -1);
    MEMORY[0x185318E50](v12, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_183552808(&v47);
    sub_183552808(&v47);
  }

  uint64_t v19 = MEMORY[0x1F4188790](v18);
  v42[-2] = v2;
  v42[-1] = &v47;
  MEMORY[0x1F4188790](v19);
  v42[-2] = sub_1835536D0;
  v42[-1] = v20;
  uint64_t v22 = v21 + 4;
  os_unfair_lock_lock(v21 + 4);
  sub_183554138(v23);
  os_unfair_lock_unlock(v22);
  uint64_t v24 = *(void *)(v2 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_receivingFileTransferSession);
  if (v24)
  {
    uint64_t v25 = *(void **)(v24 + 32);
    swift_retain();
    id v26 = objc_msgSend(v25, sel_selfPublicKey);
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v28 = sub_183D4453C();
      unint64_t v30 = v29;
      swift_release();

      uint64_t v31 = *(void *)(v3 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_sendingFileTransferSession);
      if (v31)
      {
        uint64_t v32 = *(void **)(v31 + 32);
        swift_retain();
        id v33 = objc_msgSend(v32, sel_selfPublicKey);
        if (v33)
        {
          uint64_t v34 = v33;
          uint64_t v35 = sub_183D4453C();
          unint64_t v37 = v36;
          swift_release();

          uint64_t v38 = sub_183D445FC();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v8, 1, 1, v38);
          sub_1832E5D6C(v28, v30);
          sub_1832E5D6C(v35, v37);
          sub_1832E5D6C(v28, v30);
          sub_1832E5D6C(v35, v37);
          sub_183551B7C(v28, v30, v35, v37, (uint64_t)v8, 3, v3);
          sub_1832E5E9C(v28, v30);
          sub_1832E5E9C(v35, v37);
          sub_1832E5E9C(v35, v37);
          sub_1832E5E9C(v28, v30);
          sub_183552808(&v47);
          sub_183138A24((uint64_t)v8, &qword_1E8F62DD0);
          sub_1832E5E9C(v28, v30);
          sub_1832E5E9C(v35, v37);
          return;
        }
        swift_release();
      }
      sub_1832E5E9C(v28, v30);
    }
    else
    {
      swift_release();
    }
  }
  unint64_t v39 = sub_183D4496C();
  os_log_type_t v40 = sub_183D4529C();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v41 = 0;
    _os_log_impl(&dword_1830D4000, v39, v40, "Missing public key for file transfer", v41, 2u);
    MEMORY[0x185318E50](v41, -1, -1);

    sub_183552808(&v47);
  }
  else
  {
    sub_183552808(&v47);
  }
}

uint64_t sub_183548174(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  sub_183D4426C();
  swift_allocObject();
  sub_1832E5D6C(a1, a2);
  sub_183D4425C();
  sub_18355387C();
  sub_183D4423C();
  sub_1832E5E9C(a1, a2);
  swift_release();
  uint64_t v6 = v19;
  unint64_t v7 = v20;
  uint64_t v8 = v21;
  unint64_t v9 = v22;
  if (qword_1E8F62118 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_183D4498C();
  __swift_project_value_buffer(v10, (uint64_t)qword_1E8F63B90);
  swift_retain();
  sub_1832E5D6C(v19, v20);
  sub_1832E5D6C(v21, v22);
  swift_retain();
  sub_1832E5D6C(v19, v20);
  sub_1832E5D6C(v21, v22);
  os_log_type_t v11 = sub_183D4496C();
  os_log_type_t v12 = sub_183D452BC();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    v18[0] = v17;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v19 = 67;
    unint64_t v20 = 0xE100000000000000;
    nw_connection_get_id(*(void **)(*(void *)(v3 + 16) + 16));
    sub_183D4589C();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_1834EFE70(67, 0xE100000000000000, v18);
    sub_183D453AC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v19 = v6;
    unint64_t v20 = v7;
    uint64_t v21 = v8;
    unint64_t v22 = v9;
    sub_1832E5D6C(v6, v7);
    sub_1832E5D6C(v8, v9);
    uint64_t v14 = sub_183D44B9C();
    uint64_t v19 = sub_1834EFE70(v14, v15, v18);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    sub_1832E5E9C(v6, v7);
    sub_1832E5E9C(v8, v9);
    sub_1832E5E9C(v6, v7);
    sub_1832E5E9C(v8, v9);
    _os_log_impl(&dword_1830D4000, v11, v12, "%s: Got file transfer response: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v17, -1, -1);
    MEMORY[0x185318E50](v13, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_1832E5E9C(v19, v20);
    sub_1832E5E9C(v21, v22);
    sub_1832E5E9C(v19, v20);
    sub_1832E5E9C(v21, v22);
  }

  sub_1832E5D6C(v8, v9);
  sub_18354D020(1, 0, 0, v8, v9);
  sub_1832E5E9C(v8, v9);
  sub_1832E5D6C(v6, v7);
  sub_18354D020(0, 0, 0, v6, v7);
  sub_1832E5E9C(v6, v7);
  sub_1832E5E9C(v6, v7);
  return sub_1832E5E9C(v8, v9);
}

uint64_t sub_1835486EC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for CancelRemoteCall(0);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  os_log_type_t v11 = (char *)&v37 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v37 - v13;
  MEMORY[0x1F4188790](v12);
  unint64_t v16 = (uint8_t *)&v37 - v15;
  sub_183D4426C();
  swift_allocObject();
  sub_1832E5D6C(a1, a2);
  sub_183D4425C();
  sub_183553930(&qword_1E8F63D80, (void (*)(uint64_t))type metadata accessor for CancelRemoteCall);
  sub_183D4423C();
  sub_1832E5E9C(a1, a2);
  swift_release();
  uint64_t v17 = sub_183554058((uint64_t)v14, (uint64_t)v16, type metadata accessor for CancelRemoteCall);
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  *(&v37 - 2) = v2;
  *(&v37 - 1) = v16;
  MEMORY[0x1F4188790](v18);
  *(&v37 - 2) = (uint8_t *)sub_183553914;
  *(&v37 - 1) = v19;
  uint64_t v21 = v20 + 4;
  os_unfair_lock_lock(v20 + 4);
  sub_183554150(v39);
  os_unfair_lock_unlock(v21);
  if (v39[0])
  {
    if (qword_1E8F62118 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_183D4498C();
    __swift_project_value_buffer(v22, (uint64_t)qword_1E8F63B90);
    sub_1835539B4((uint64_t)v16, (uint64_t)v11, type metadata accessor for CancelRemoteCall);
    uint64_t v23 = sub_183D4496C();
    os_log_type_t v24 = sub_183D452BC();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      v39[0] = v26;
      *(_DWORD *)uint64_t v25 = 136315138;
      unint64_t v37 = v25 + 4;
      sub_183D445FC();
      sub_183553930((unint64_t *)&qword_1E8F62F30, MEMORY[0x1E4F27990]);
      uint64_t v27 = sub_183D4589C();
      uint64_t v38 = sub_1834EFE70(v27, v28, v39);
      sub_183D453AC();
      swift_bridgeObjectRelease();
      sub_183553108((uint64_t)v11, type metadata accessor for CancelRemoteCall);
      _os_log_impl(&dword_1830D4000, v23, v24, "Cancelling call ID: %s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x185318E50](v26, -1, -1);
      MEMORY[0x185318E50](v25, -1, -1);
    }
    else
    {
      sub_183553108((uint64_t)v11, type metadata accessor for CancelRemoteCall);
    }

    sub_183D4506C();
    swift_release();
  }
  else
  {
    if (qword_1E8F62118 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_183D4498C();
    __swift_project_value_buffer(v29, (uint64_t)qword_1E8F63B90);
    sub_1835539B4((uint64_t)v16, (uint64_t)v8, type metadata accessor for CancelRemoteCall);
    unint64_t v30 = sub_183D4496C();
    os_log_type_t v31 = sub_183D4529C();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      v39[0] = v33;
      *(_DWORD *)uint64_t v32 = 136315138;
      sub_183D445FC();
      sub_183553930((unint64_t *)&qword_1E8F62F30, MEMORY[0x1E4F27990]);
      uint64_t v34 = sub_183D4589C();
      uint64_t v38 = sub_1834EFE70(v34, v35, v39);
      sub_183D453AC();
      swift_bridgeObjectRelease();
      sub_183553108((uint64_t)v8, type metadata accessor for CancelRemoteCall);
      _os_log_impl(&dword_1830D4000, v30, v31, "Could not find task for call ID: %s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x185318E50](v33, -1, -1);
      MEMORY[0x185318E50](v32, -1, -1);
    }
    else
    {
      sub_183553108((uint64_t)v8, type metadata accessor for CancelRemoteCall);
    }
  }
  return sub_183553108((uint64_t)v16, type metadata accessor for CancelRemoteCall);
}

uint64_t sub_183548EC4(uint64_t a1, unint64_t a2, unint64_t a3, int a4)
{
  unint64_t v181 = a3;
  LODWORD(v180) = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F63C00);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v168 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F64A30);
  uint64_t v183 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  os_log_type_t v11 = (char *)&v168 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ReplyEnvelope();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t *)((char *)&v168 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v168 - v17;
  MEMORY[0x1F4188790](v16);
  unint64_t v20 = (char *)&v168 - v19;
  sub_1832E5D6C(a1, a2);
  uint64_t v21 = sub_1835B9F28(a1, a2, v20);
  uint64_t v175 = (int *)v12;
  unint64_t v176 = a2;
  int v177 = v15;
  unint64_t v178 = v11;
  uint64_t v174 = v18;
  uint64_t v179 = v9;
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  *(&v168 - 2) = v23;
  *(&v168 - 1) = (uint64_t)v20;
  uint64_t v182 = v20;
  MEMORY[0x1F4188790](v22);
  *(&v168 - 2) = (uint64_t)sub_183553E1C;
  *(&v168 - 1) = v24;
  uint64_t v26 = v25 + 4;
  os_unfair_lock_lock(v25 + 4);
  sub_183554138(v27);
  os_unfair_lock_unlock(v26);
  uint64_t v28 = v183;
  uint64_t v29 = v179;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v183 + 48))(v8, 1, v179) == 1)
  {
    sub_183138A24((uint64_t)v8, (uint64_t *)&unk_1E8F63C00);
    if (qword_1E8F62118 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_183D4498C();
    __swift_project_value_buffer(v30, (uint64_t)qword_1E8F63B90);
    uint64_t v31 = (uint64_t)v182;
    uint64_t v32 = (uint64_t)v177;
    sub_1835539B4((uint64_t)v182, (uint64_t)v177, (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
    uint64_t v33 = sub_183D4496C();
    os_log_type_t v34 = sub_183D4529C();
    if (os_log_type_enabled(v33, v34))
    {
      unint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v184 = v36;
      *(_DWORD *)unint64_t v35 = 136315138;
      sub_183D445FC();
      sub_183553930((unint64_t *)&qword_1E8F62F30, MEMORY[0x1E4F27990]);
      uint64_t v37 = sub_183D4589C();
      v191[0] = sub_1834EFE70(v37, v38, &v184);
      uint64_t v31 = (uint64_t)v182;
      sub_183D453AC();
      swift_bridgeObjectRelease();
      sub_183553108(v32, (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
      _os_log_impl(&dword_1830D4000, v33, v34, "No continuation for reply with call ID: %s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x185318E50](v36, -1, -1);
      MEMORY[0x185318E50](v35, -1, -1);
    }
    else
    {
      sub_183553108(v32, (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
    }

    uint64_t v45 = v31;
  }
  else
  {
    int v177 = 0;
    unint64_t v39 = v180 & 1;
    unsigned __int8 v40 = BYTE6(v176);
    unint64_t v41 = v176 >> 62;
    uint64_t v42 = v178;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v178, v8, v29);
    uint64_t v43 = 0;
    uint64_t v44 = (uint64_t)v182;
    switch((int)v41)
    {
      case 1:
        LODWORD(v43) = HIDWORD(a1) - a1;
        if (__OFSUB__(HIDWORD(a1), a1))
        {
          __break(1u);
LABEL_59:
          __break(1u);
          JUMPOUT(0x18354A684);
        }
        uint64_t v43 = (int)v43;
LABEL_13:
        long long v49 = &v182[v175[6]];
        uint64_t v50 = *(void *)v49;
        unint64_t v51 = *((void *)v49 + 1);
        uint64_t v52 = *((void *)v49 + 2);
        int v53 = v49[32];
        unint64_t v180 = *((void *)v49 + 3);
        if ((~v180 & 0x3000000000000000) != 0 || v53 != 255)
        {
          int v59 = v53 & 1;
          unint64_t v60 = v180;
          unint64_t v181 = (v180 >> 60) & 3;
          uint64_t v61 = v52;
          sub_18353673C(v50, v51, v52, v180, v53 & 1);
          if (qword_1E8F62118 != -1) {
            swift_once();
          }
          LODWORD(v175) = 4 * v59;
          uint64_t v62 = sub_183D4498C();
          uint64_t v63 = __swift_project_value_buffer(v62, (uint64_t)qword_1E8F63B90);
          uint64_t v64 = (uint64_t)v174;
          sub_1835539B4((uint64_t)v182, (uint64_t)v174, (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
          sub_183553E38(v50, v51, v61, v60, v53);
          sub_18353673C(v50, v51, v61, v60, v53 & 1);
          uint64_t v172 = v63;
          uint64_t v65 = sub_183D4496C();
          os_log_type_t v66 = sub_183D4529C();
          int v173 = v66;
          BOOL v67 = os_log_type_enabled(v65, v66);
          unint64_t v176 = v61;
          if (v67)
          {
            BOOL v169 = v59 != 0;
            uint64_t v68 = swift_slowAlloc();
            uint64_t v171 = swift_slowAlloc();
            v191[0] = v171;
            *(_DWORD *)uint64_t v68 = 136315394;
            sub_183D445FC();
            sub_183553930((unint64_t *)&qword_1E8F62F30, MEMORY[0x1E4F27990]);
            os_log_t v170 = v65;
            uint64_t v69 = sub_183D4589C();
            uint64_t v184 = sub_1834EFE70(v69, v70, v191);
            sub_183D453AC();
            swift_bridgeObjectRelease();
            sub_183553108(v64, (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
            *(_WORD *)(v68 + 12) = 2080;
            uint64_t v184 = v50;
            unint64_t v185 = v51;
            uint64_t v186 = v61;
            uint64_t v187 = v180;
            LOBYTE(v188) = v169;
            sub_18353673C(v50, v51, v61, v180, v53 & 1);
            uint64_t v71 = sub_183D44B9C();
            uint64_t v184 = sub_1834EFE70(v71, v72, v191);
            uint64_t v28 = v183;
            sub_183D453AC();
            uint64_t v29 = v179;
            swift_bridgeObjectRelease();
            sub_183553D90(v50, v51, v61, v180, v53);
            sub_183553D90(v50, v51, v61, v180, v53);
            uint64_t v65 = v170;
            _os_log_impl(&dword_1830D4000, v170, (os_log_type_t)v173, "Reply %s failed: %s", (uint8_t *)v68, 0x16u);
            uint64_t v73 = v171;
            swift_arrayDestroy();
            MEMORY[0x185318E50](v73, -1, -1);
            uint64_t v74 = v68;
            unint64_t v60 = v180;
            MEMORY[0x185318E50](v74, -1, -1);
          }
          else
          {
            sub_183553108(v64, (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
            sub_183553D90(v50, v51, v61, v60, v53);
            sub_183553D90(v50, v51, v61, v60, v53);
          }

          switch(v181 | v175)
          {
            case 1u:
              unint64_t v78 = v60 & 0xCFFFFFFFFFFFFFFFLL;
              sub_1832E5D6C(v176, v60 & 0xCFFFFFFFFFFFFFFFLL);
              uint64_t v79 = sub_183D4549C();
              uint64_t v168 = v50;
              if (!v79 || (uint64_t v80 = dynamic_cast_existential_2_conditional(v79)) == 0)
              {
                LODWORD(v181) = v53;
                uint64_t v184 = 0;
                unint64_t v185 = 0xE000000000000000;
                sub_183D4547C();
                swift_bridgeObjectRelease();
                uint64_t v184 = 0xD00000000000001FLL;
                unint64_t v185 = 0x8000000183E261B0;
                sub_183D44C8C();
                uint64_t v110 = v184;
                unint64_t v111 = v185;
                swift_bridgeObjectRetain_n();
                uLong v112 = sub_183D4496C();
                os_log_type_t v113 = sub_183D4529C();
                if (os_log_type_enabled(v112, v113))
                {
                  int v177 = (uint64_t *)v78;
                  uint64_t v114 = (uint8_t *)swift_slowAlloc();
                  uint64_t v115 = swift_slowAlloc();
                  uint64_t v184 = v115;
                  *(_DWORD *)uint64_t v114 = 136315138;
                  swift_bridgeObjectRetain();
                  v191[0] = sub_1834EFE70(v110, v111, &v184);
                  unint64_t v78 = (unint64_t)v177;
                  sub_183D453AC();
                  swift_bridgeObjectRelease_n();
                  _os_log_impl(&dword_1830D4000, v112, v113, "%s", v114, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x185318E50](v115, -1, -1);
                  MEMORY[0x185318E50](v114, -1, -1);
                }
                else
                {

                  swift_bridgeObjectRelease_n();
                }
                uint64_t v130 = (uint64_t)v182;
                unint64_t v131 = v178;
                sub_1834F0498();
                uint64_t v132 = swift_allocError();
                *unint64_t v133 = v110;
                v133[1] = v111;
                v133[2] = 0x8000000000000000;
                uint64_t v134 = swift_allocError();
                *(void *)uint64_t v135 = v132;
                *(_OWORD *)(v135 + 8) = xmmword_183D584F0;
                uint64_t v184 = v134;
                swift_bridgeObjectRetain();
                uint64_t v136 = v179;
                sub_183D44F3C();
                uint64_t v137 = v176;
                sub_1832E5E9C(v176, v78);
                sub_183553D90(v168, v51, v137, v180, v181);
                swift_bridgeObjectRelease();
                (*(void (**)(char *, uint64_t))(v28 + 8))(v131, v136);
                uint64_t v45 = v130;
                return sub_183553108(v45, (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
              }
              uint64_t v83 = v80;
              unint64_t v84 = v81;
              uint64_t v85 = v82;
              sub_183D4426C();
              swift_allocObject();
              sub_183D4425C();
              uint64_t v187 = v83;
              unint64_t v188 = v84;
              uint64_t v189 = v85;
              __swift_allocate_boxed_opaque_existential_0(&v184);
              unint64_t v86 = v177;
              sub_183D4423C();
              if (v86)
              {
                swift_release();
                __swift_deallocate_boxed_opaque_existential_1Tm((uint64_t)&v184);
                uint64_t v87 = v86;
                uint64_t v88 = v86;
                uint64_t v89 = sub_183D4496C();
                os_log_type_t v90 = sub_183D4529C();
                if (os_log_type_enabled(v89, v90))
                {
                  uint64_t v91 = swift_slowAlloc();
                  uint64_t v92 = swift_slowAlloc();
                  uint64_t v184 = v92;
                  *(_DWORD *)uint64_t v91 = 136315394;
                  LODWORD(v181) = v53;
                  uint64_t v93 = sub_183D45C8C();
                  v191[0] = sub_1834EFE70(v93, v94, &v184);
                  sub_183D453AC();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v91 + 12) = 2080;
                  v191[0] = (uint64_t)v86;
                  os_log_t v95 = v86;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63CE0);
                  uint64_t v96 = sub_183D44B9C();
                  v191[0] = sub_1834EFE70(v96, v97, &v184);
                  sub_183D453AC();
                  LOBYTE(v53) = v181;
                  swift_bridgeObjectRelease();

                  _os_log_impl(&dword_1830D4000, v89, v90, "Failed to decode value to %s: %s", (uint8_t *)v91, 0x16u);
                  swift_arrayDestroy();
                  MEMORY[0x185318E50](v92, -1, -1);
                  MEMORY[0x185318E50](v91, -1, -1);
                }
                else
                {
                }
                uint64_t v44 = (uint64_t)v182;
                os_signpost_type_t v159 = v178;
                sub_1834F0498();
                uint64_t v160 = swift_allocError();
                *(void *)uint64_t v161 = v86;
                *(_OWORD *)(v161 + 8) = xmmword_183D584F0;
                uint64_t v184 = v160;
                uint64_t v162 = v86;
                uint64_t v163 = v179;
                sub_183D44F3C();
                uint64_t v164 = v176;
                sub_1832E5E9C(v176, v78);
                sub_183553D90(v168, v51, v164, v180, v53);

                (*(void (**)(char *, uint64_t))(v28 + 8))(v159, v163);
                goto LABEL_16;
              }
              unint64_t v138 = v78;
              LODWORD(v181) = v53;
              swift_release();
              uint64_t v139 = v187;
              id v140 = __swift_project_boxed_opaque_existential_2(&v184, v187);
              int v177 = &v168;
              uint64_t v141 = *(void *)(v139 - 8);
              MEMORY[0x1F4188790](v140);
              int v143 = (char *)&v168 - ((v142 + 15) & 0xFFFFFFFFFFFFFFF0);
              (*(void (**)(char *))(v141 + 16))(v143);
              uint64_t v144 = sub_183D458FC();
              uint64_t v145 = (uint64_t)v182;
              uint64_t v146 = v178;
              if (v144)
              {
                uint64_t v147 = v144;
                (*(void (**)(char *, uint64_t))(v141 + 8))(v143, v139);
              }
              else
              {
                uint64_t v147 = swift_allocError();
                (*(void (**)(uint64_t, char *, uint64_t))(v141 + 32))(v165, v143, v139);
              }
              v191[0] = v147;
              uint64_t v166 = v179;
              sub_183D44F3C();
              uint64_t v167 = v176;
              sub_1832E5E9C(v176, v138);
              sub_183553D90(v168, v51, v167, v180, v181);
              (*(void (**)(char *, uint64_t))(v28 + 8))(v146, v166);
              sub_183553108(v145, (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
              return __swift_destroy_boxed_opaque_existential_2((uint64_t)&v184);
            case 2u:
              sub_183553E5C(0, &qword_1E8F63DC0);
              sub_183553E5C(0, &qword_1E8F63DC8);
              sub_18353673C(v50, v51, v176, v60, v53 & 1);
              uint64_t v168 = v50;
              uint64_t v98 = v177;
              uint64_t v99 = (void *)sub_183D452CC();
              if (v98)
              {
                uint64_t v100 = v98;
                uint64_t v101 = v98;
                int v102 = sub_183D4496C();
                os_log_type_t v103 = sub_183D4529C();
                if (os_log_type_enabled(v102, v103))
                {
                  unint64_t v104 = (uint8_t *)swift_slowAlloc();
                  uint64_t v105 = swift_slowAlloc();
                  uint64_t v184 = v105;
                  *(_DWORD *)unint64_t v104 = 136315138;
                  v191[0] = (uint64_t)v98;
                  uLong v106 = v98;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63CE0);
                  uint64_t v107 = sub_183D44B9C();
                  v191[0] = sub_1834EFE70(v107, v108, &v184);
                  sub_183D453AC();
                  swift_bridgeObjectRelease();

                  _os_log_impl(&dword_1830D4000, v102, v103, "Failed to decode data to NSError: %s", v104, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x185318E50](v105, -1, -1);
                  MEMORY[0x185318E50](v104, -1, -1);
                }
                else
                {
                }
                uint64_t v44 = (uint64_t)v182;
                uint64_t v122 = v178;
                sub_1834F0498();
                uint64_t v123 = swift_allocError();
                *(void *)uint64_t v124 = v98;
                *(_OWORD *)(v124 + 8) = xmmword_183D584F0;
                uint64_t v184 = v123;
                unint64_t v125 = v98;
                uint64_t v126 = v179;
                sub_183D44F3C();
                uint64_t v127 = v168;
                uint64_t v128 = v176;
                unint64_t v129 = v180;
                sub_183553D90(v168, v51, v176, v180, v53);
                sub_183553D90(v127, v51, v128, v129, v53);

                (*(void (**)(char *, uint64_t))(v183 + 8))(v122, v126);
                goto LABEL_16;
              }
              if (v99)
              {
                uint64_t v184 = (uint64_t)v99;
                id v116 = v99;
                uint64_t v117 = v178;
                sub_183D44F3C();
                uint64_t v118 = v168;
                uint64_t v119 = v176;
                sub_183553D90(v168, v51, v176, v60, v53);
                sub_183553D90(v118, v51, v119, v60, v53);
              }
              else
              {
                unint64_t v148 = sub_183D4496C();
                os_log_type_t v149 = sub_183D4529C();
                if (os_log_type_enabled(v148, v149))
                {
                  uint64_t v150 = (uint8_t *)swift_slowAlloc();
                  uint64_t v151 = swift_slowAlloc();
                  uint64_t v184 = v151;
                  *(_DWORD *)uint64_t v150 = 136315138;
                  v191[0] = sub_1834EFE70(0xD000000000000027, 0x8000000183E26180, &v184);
                  unint64_t v60 = v180;
                  sub_183D453AC();
                  _os_log_impl(&dword_1830D4000, v148, v149, "%s", v150, 0xCu);
                  swift_arrayDestroy();
                  uint64_t v152 = v151;
                  uint64_t v29 = v179;
                  MEMORY[0x185318E50](v152, -1, -1);
                  MEMORY[0x185318E50](v150, -1, -1);
                }

                sub_1834F0498();
                uint64_t v153 = swift_allocError();
                *uint64_t v154 = 0xD000000000000027;
                v154[1] = 0x8000000183E26180;
                v154[2] = 0x8000000000000000;
                uint64_t v155 = swift_allocError();
                *(void *)uint64_t v156 = v153;
                *(_OWORD *)(v156 + 8) = xmmword_183D584F0;
                uint64_t v184 = v155;
                uint64_t v117 = v178;
                sub_183D44F3C();
                uint64_t v157 = v168;
                uint64_t v158 = v176;
                sub_183553D90(v168, v51, v176, v60, v53);
                sub_183553D90(v157, v51, v158, v60, v53);
              }
              (*(void (**)(char *, uint64_t))(v183 + 8))(v117, v29);
              goto LABEL_42;
            case 3u:
              sub_1834F0498();
              uint64_t v75 = swift_allocError();
              *uint64_t v76 = v50;
              v76[1] = v51;
              unint64_t v77 = 0xA000000000000000;
              goto LABEL_41;
            case 4u:
              if (v176 | v51 | v50 | v60)
              {
                sub_1834F0498();
                uint64_t v75 = swift_allocError();
                long long v109 = xmmword_183D58510;
              }
              else
              {
                sub_1834F0498();
                uint64_t v75 = swift_allocError();
                long long v109 = xmmword_183D55330;
              }
              *(_OWORD *)uint64_t v76 = v109;
              unint64_t v77 = 0xB000000000000000;
              goto LABEL_41;
            default:
              sub_1834F0498();
              uint64_t v75 = swift_allocError();
              *uint64_t v76 = v50;
              v76[1] = v51;
              unint64_t v77 = 0x8000000000000000;
LABEL_41:
              v76[2] = v77;
              uint64_t v184 = v75;
              id v120 = v178;
              sub_183D44F3C();
              (*(void (**)(char *, uint64_t))(v28 + 8))(v120, v29);
LABEL_42:
              uint64_t v45 = (uint64_t)v182;
              break;
          }
        }
        else
        {
          uint64_t v54 = &v182[v175[7]];
          unsigned __int8 v55 = v54[8];
          uint64_t v56 = *(void *)v54;
          uint64_t v57 = (uint64_t *)&v182[v175[5]];
          unint64_t v58 = v57[1];
          uint64_t v184 = *v57;
          unint64_t v185 = v58;
          uint64_t v186 = v43;
          uint64_t v187 = v181;
          unint64_t v188 = v39;
          uint64_t v189 = v56;
          __int16 v190 = v55;
          sub_1832E5D6C(v184, v58);
          sub_183D44F4C();
          (*(void (**)(char *, uint64_t))(v28 + 8))(v42, v29);
LABEL_16:
          uint64_t v45 = v44;
        }
        break;
      case 2:
        uint64_t v47 = *(void *)(a1 + 16);
        uint64_t v46 = *(void *)(a1 + 24);
        BOOL v48 = __OFSUB__(v46, v47);
        uint64_t v43 = v46 - v47;
        if (!v48) {
          goto LABEL_13;
        }
        goto LABEL_59;
      case 3:
        goto LABEL_13;
      default:
        uint64_t v43 = v40;
        goto LABEL_13;
    }
  }
  return sub_183553108(v45, (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
}

uint64_t sub_18354A6A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F63BF0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_resolvedActorIDContinuation;
  swift_beginAccess();
  sub_183138900(v7, a2, (uint64_t *)&unk_1E8F63BF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61C90);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  swift_beginAccess();
  sub_183553DB4((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t sub_18354A7D4(uint64_t a1, uint64_t a2, int a3)
{
  int v23 = a3;
  uint64_t v5 = type metadata accessor for RemoteCallEnvelope(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63038);
  MEMORY[0x1F4188790](v9 - 8);
  os_log_type_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_183D445FC();
  uint64_t v12 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v12 + 16))(v14, a2);
  uint64_t v15 = sub_183D44FAC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v11, 1, 1, v15);
  sub_1835539B4(a2, (uint64_t)v8, type metadata accessor for RemoteCallEnvelope);
  unint64_t v16 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v17 = v16 + v7;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0;
  *(void *)(v18 + 24) = 0;
  sub_183554058((uint64_t)v8, v18 + v16, type metadata accessor for RemoteCallEnvelope);
  *(unsigned char *)(v18 + v17) = v23;
  *(void *)((v17 & 0xFFFFFFFFFFFFFFF8) + v18 + 8) = a1;
  swift_retain();
  uint64_t v19 = sub_18353C19C((uint64_t)v11, (uint64_t)&unk_1E8F63D98, v18);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v24 = *(void *)(a1 + 96);
  *(void *)(a1 + 96) = 0x8000000000000000;
  sub_18359F54C(v19, (uint64_t)v14, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + 96) = v24;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v22);
  return swift_endAccess();
}

uint64_t sub_18354AAD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  *(unsigned char *)(v6 + 372) = a5;
  *(void *)(v6 + 168) = a4;
  *(void *)(v6 + 176) = a6;
  *(void *)(v6 + 184) = *a6;
  uint64_t v7 = sub_183D4461C();
  *(void *)(v6 + 192) = v7;
  *(void *)(v6 + 200) = *(void *)(v7 - 8);
  *(void *)(v6 + 208) = swift_task_alloc();
  *(void *)(v6 + 216) = type metadata accessor for NWActorID();
  *(void *)(v6 + 224) = swift_task_alloc();
  *(void *)(v6 + 232) = type metadata accessor for ReplyEnvelope();
  *(void *)(v6 + 240) = swift_task_alloc();
  *(void *)(v6 + 248) = type metadata accessor for RemoteCallEnvelope(0);
  *(void *)(v6 + 256) = swift_task_alloc();
  *(void *)(v6 + 264) = swift_task_alloc();
  *(void *)(v6 + 272) = swift_task_alloc();
  *(void *)(v6 + 280) = swift_task_alloc();
  *(void *)(v6 + 288) = swift_task_alloc();
  *(void *)(v6 + 296) = swift_task_alloc();
  *(void *)(v6 + 304) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_18354ACA0, 0, 0);
}

uint64_t sub_18354ACA0()
{
  uint64_t v24 = v0;
  if (qword_1E8F62118 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v3 = sub_183D4498C();
  *(void *)(v0 + 312) = __swift_project_value_buffer(v3, (uint64_t)qword_1E8F63B90);
  sub_1835539B4(v1, v2, type metadata accessor for RemoteCallEnvelope);
  uint64_t v4 = sub_183D4496C();
  os_log_type_t v5 = sub_183D452BC();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 304);
  if (v6)
  {
    int v22 = *(unsigned __int8 *)(v0 + 372);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v23[0] = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    sub_183D445FC();
    sub_183553930((unint64_t *)&qword_1E8F62F30, MEMORY[0x1E4F27990]);
    uint64_t v10 = sub_183D4589C();
    *(void *)(v0 + 160) = sub_1834EFE70(v10, v11, v23);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    sub_183553108(v7, type metadata accessor for RemoteCallEnvelope);
    *(_WORD *)(v8 + 12) = 1024;
    *(_DWORD *)(v0 + 368) = v22;
    sub_183D453AC();
    _os_log_impl(&dword_1830D4000, v4, v5, "Performing remote call for call ID %s %{BOOL}d", (uint8_t *)v8, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v9, -1, -1);
    MEMORY[0x185318E50](v8, -1, -1);
  }
  else
  {
    sub_183553108(*(void *)(v0 + 304), type metadata accessor for RemoteCallEnvelope);
  }

  uint64_t v12 = *(void *)(v0 + 176);
  uint64_t v13 = *(os_unfair_lock_s **)(v12 + 80);
  uint64_t v14 = swift_task_alloc();
  *(void *)(v14 + 16) = sub_183553CB4;
  *(void *)(v14 + 24) = v12;
  os_unfair_lock_lock(v13 + 4);
  sub_183551478(v23);
  os_unfair_lock_unlock(v13 + 4);
  char v15 = v23[0];
  swift_task_dealloc();
  if (qword_1E8F62158 != -1) {
    swift_once();
  }
  uint64_t v16 = *(void *)(v0 + 176);
  char v17 = *(unsigned char *)(v0 + 372);
  uint64_t v18 = *(void *)(v0 + 168);
  *(void *)(v0 + 40) = *(void *)(v0 + 184);
  *(void *)(v0 + 48) = &off_1ECF5B498;
  *(void *)(v0 + 16) = v16;
  uint64_t v19 = swift_task_alloc();
  *(void *)(v0 + 320) = v19;
  *(void *)(v19 + 16) = v18;
  *(unsigned char *)(v19 + 24) = v15;
  *(unsigned char *)(v19 + 25) = v17;
  *(void *)(v19 + 32) = v16;
  swift_retain();
  unint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v20;
  *unint64_t v20 = v0;
  v20[1] = sub_18354B0D4;
  uint64_t v26 = 602;
  uint64_t v27 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F41881B8](v20, v0 + 16, &unk_1E8F63DA8, v19, 0, 0, 0xD00000000000002BLL, 0x8000000183E26150);
}

uint64_t sub_18354B0D4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 336) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_18354B51C;
  }
  else
  {
    sub_183138A24(v2 + 16, &qword_1E8F63DB0);
    uint64_t v3 = sub_18354B20C;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_18354B20C()
{
  if (sub_183D4507C()) {
    sub_183553D90(0, 0, 0, 0x3000000000000000uLL, 0xFFu);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_18354B30C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_18354B408, 0, 0);
}

uint64_t sub_18354B408()
{
  uint64_t v1 = *(void *)(v0 + 240);
  sub_183553D90(*(void *)(v0 + 344), *(void *)(v0 + 352), 0, 0, *(unsigned char *)(v0 + 373));
  sub_183553108(v1, (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_18354B51C()
{
  uint64_t v72 = v0;
  uint64_t v1 = *(void **)(v0 + 336);
  sub_183138A24(v0 + 16, &qword_1E8F63DB0);
  *(void *)(v0 + 80) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63CE0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void **)(v0 + 56);
    unint64_t v4 = *(void *)(v0 + 64);
    unint64_t v5 = *(void *)(v0 + 72);
    if (v5 >> 60 == 11 && v3 == (void *)4 && !v4 && v5 == 0xB000000000000000)
    {
      uint64_t v7 = *(void *)(v0 + 288);
      uint64_t v6 = *(void *)(v0 + 296);
      uint64_t v8 = *(void *)(v0 + 168);

      sub_1835539B4(v8, v6, type metadata accessor for RemoteCallEnvelope);
      sub_1835539B4(v8, v7, type metadata accessor for RemoteCallEnvelope);
      uint64_t v9 = sub_183D4496C();
      os_log_type_t v10 = sub_183D452BC();
      BOOL v11 = os_log_type_enabled(v9, v10);
      uint64_t v12 = *(void *)(v0 + 288);
      uint64_t v13 = *(void *)(v0 + 296);
      if (v11)
      {
        os_log_type_t type = v10;
        uint64_t v14 = *(void *)(v0 + 248);
        uint64_t v15 = *(void *)(v0 + 224);
        uint64_t v16 = swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        uint64_t v70 = v66;
        *(_DWORD *)uint64_t v16 = 136315394;
        sub_1835539B4(v13 + *(int *)(v14 + 20), v15, (uint64_t (*)(void))type metadata accessor for NWActorID);
        sub_183D4547C();
        swift_bridgeObjectRelease();
        v71[0] = 0x49726F746341574ELL;
        v71[1] = 0xEA00000000002844;
        swift_bridgeObjectRetain();
        sub_183D44C8C();
        swift_bridgeObjectRelease();
        sub_183D44C8C();
        sub_183D445FC();
        sub_183553930((unint64_t *)&qword_1E8F62F30, MEMORY[0x1E4F27990]);
        sub_183D4589C();
        sub_183D44C8C();
        swift_bridgeObjectRelease();
        sub_183D44C8C();
        sub_183553108(v15, (uint64_t (*)(void))type metadata accessor for NWActorID);
        *(void *)(v0 + 144) = sub_1834EFE70(0x49726F746341574ELL, 0xEA00000000002844, &v70);
        sub_183D453AC();
        swift_bridgeObjectRelease();
        sub_183553108(v13, type metadata accessor for RemoteCallEnvelope);
        *(_WORD *)(v16 + 12) = 2080;
        uint64_t v17 = sub_183D4589C();
        *(void *)(v0 + 152) = sub_1834EFE70(v17, v18, &v70);
        sub_183D453AC();
        swift_bridgeObjectRelease();
        sub_183553108(v12, type metadata accessor for RemoteCallEnvelope);
        _os_log_impl(&dword_1830D4000, v9, type, "Failed to resolve actor with ID %s for callID %s", (uint8_t *)v16, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x185318E50](v66, -1, -1);
        MEMORY[0x185318E50](v16, -1, -1);
      }
      else
      {
        sub_183553108(*(void *)(v0 + 296), type metadata accessor for RemoteCallEnvelope);
        sub_183553108(v12, type metadata accessor for RemoteCallEnvelope);
      }
      uint64_t v53 = 0;
      unint64_t v52 = 0;
LABEL_20:
      char v55 = 1;
      goto LABEL_21;
    }
    sub_183553494(v3, v4, v5);
  }
  uint64_t v19 = *(void **)(v0 + 336);

  *(void *)(v0 + 88) = v19;
  id v20 = v19;
  int v21 = swift_dynamicCast();
  int v22 = *(void **)(v0 + 336);
  if (v21)
  {
    uint64_t v24 = *(void *)(v0 + 272);
    uint64_t v23 = *(void *)(v0 + 280);
    uint64_t v25 = *(void *)(v0 + 168);

    sub_1835539B4(v25, v23, type metadata accessor for RemoteCallEnvelope);
    sub_1835539B4(v25, v24, type metadata accessor for RemoteCallEnvelope);
    uint64_t v26 = sub_183D4496C();
    os_log_type_t v27 = sub_183D4529C();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v29 = *(void *)(v0 + 272);
    uint64_t v30 = *(void *)(v0 + 280);
    if (v28)
    {
      uint64_t v31 = *(void *)(v0 + 264);
      uint64_t v32 = swift_slowAlloc();
      uint64_t v67 = swift_slowAlloc();
      v71[0] = v67;
      *(_DWORD *)uint64_t v32 = 136315394;
      sub_1835539B4(v30, v31, type metadata accessor for RemoteCallEnvelope);
      uint64_t v33 = sub_183D44B9C();
      *(void *)(v0 + 128) = sub_1834EFE70(v33, v34, v71);
      sub_183D453AC();
      swift_bridgeObjectRelease();
      sub_183553108(v30, type metadata accessor for RemoteCallEnvelope);
      *(_WORD *)(v32 + 12) = 2080;
      sub_183D445FC();
      sub_183553930((unint64_t *)&qword_1E8F62F30, MEMORY[0x1E4F27990]);
      uint64_t v35 = sub_183D4589C();
      *(void *)(v0 + 136) = sub_1834EFE70(v35, v36, v71);
      sub_183D453AC();
      swift_bridgeObjectRelease();
      sub_183553108(v29, type metadata accessor for RemoteCallEnvelope);
      _os_log_impl(&dword_1830D4000, v26, v27, "Failed to execute distributed target: %s for callID %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x185318E50](v67, -1, -1);
      MEMORY[0x185318E50](v32, -1, -1);
    }
    else
    {
      sub_183553108(*(void *)(v0 + 280), type metadata accessor for RemoteCallEnvelope);
      sub_183553108(v29, type metadata accessor for RemoteCallEnvelope);
    }

    (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));
    unint64_t v52 = 0;
    uint64_t v53 = 1;
    goto LABEL_20;
  }
  uint64_t v37 = *(void *)(v0 + 256);
  uint64_t v38 = *(void *)(v0 + 168);

  sub_1835539B4(v38, v37, type metadata accessor for RemoteCallEnvelope);
  id v39 = v22;
  id v40 = v22;
  unint64_t v41 = sub_183D4496C();
  os_log_type_t v42 = sub_183D4529C();
  BOOL v43 = os_log_type_enabled(v41, v42);
  uint64_t v44 = *(void **)(v0 + 336);
  uint64_t v45 = *(void *)(v0 + 256);
  if (v43)
  {
    uint64_t v46 = swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    v71[0] = v68;
    *(_DWORD *)uint64_t v46 = 136315394;
    *(void *)(v0 + 104) = v44;
    id v47 = v44;
    uint64_t v48 = sub_183D44B9C();
    *(void *)(v0 + 112) = sub_1834EFE70(v48, v49, v71);
    sub_183D453AC();
    swift_bridgeObjectRelease();

    *(_WORD *)(v46 + 12) = 2080;
    sub_183D445FC();
    sub_183553930((unint64_t *)&qword_1E8F62F30, MEMORY[0x1E4F27990]);
    uint64_t v50 = sub_183D4589C();
    *(void *)(v0 + 120) = sub_1834EFE70(v50, v51, v71);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    sub_183553108(v45, type metadata accessor for RemoteCallEnvelope);
    _os_log_impl(&dword_1830D4000, v41, v42, "Failed to execute distributed target, underlying error: %s for callID %s", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v68, -1, -1);
    MEMORY[0x185318E50](v46, -1, -1);
  }
  else
  {

    sub_183553108(v45, type metadata accessor for RemoteCallEnvelope);
  }

  *(void *)(v0 + 96) = *(void *)(v0 + 336);
  uint64_t v53 = sub_183D44B7C();
  unint64_t v52 = v54;
  char v55 = 0;
LABEL_21:
  *(unsigned char *)(v0 + 373) = v55;
  *(void *)(v0 + 344) = v53;
  *(void *)(v0 + 352) = v52;
  if (sub_183D4507C())
  {
    sub_183553D90(v53, v52, 0, 0, v55);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v56 = *(uint64_t (**)(void))(v0 + 8);
    return v56();
  }
  else
  {
    int v59 = *(int **)(v0 + 232);
    uint64_t v58 = *(void *)(v0 + 240);
    uint64_t v60 = *(void *)(v0 + 168);
    uint64_t v61 = sub_183D445FC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 16))(v58, v60, v61);
    *(_OWORD *)(v58 + v59[5]) = xmmword_183D54880;
    uint64_t v62 = v58 + v59[6];
    *(void *)uint64_t v62 = v53;
    *(void *)(v62 + 8) = v52;
    *(void *)(v62 + 16) = 0;
    *(void *)(v62 + 24) = 0;
    *(unsigned char *)(v62 + 32) = v55;
    uint64_t v63 = v58 + v59[7];
    *(void *)uint64_t v63 = 0;
    *(unsigned char *)(v63 + 8) = 1;
    sub_18353673C(v53, v52, 0, 0, v55);
    uint64_t v64 = (void *)swift_task_alloc();
    *(void *)(v0 + 360) = v64;
    *uint64_t v64 = v0;
    v64[1] = sub_18354B30C;
    uint64_t v65 = *(void *)(v0 + 240);
    return sub_18354C4C8(v65);
  }
}

uint64_t sub_18354C034(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5)
{
  *(unsigned char *)(v5 + 81) = a4;
  *(unsigned char *)(v5 + 80) = a3;
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a5;
  *(void *)(v5 + 32) = _s15ActorConnectionC20RemoteCallInvocationVMa(0);
  *(void *)(v5 + 40) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_18354C0D0, 0, 0);
}

uint64_t sub_18354C0D0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  char v3 = *(unsigned char *)(v0 + 81);
  char v4 = *(unsigned char *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 24);
  sub_1835539B4(*(void *)(v0 + 16), v2, type metadata accessor for RemoteCallEnvelope);
  *(unsigned char *)(v2 + *(int *)(v1 + 20)) = v4;
  *(unsigned char *)(v2 + *(int *)(v1 + 24)) = v3;
  uint64_t v6 = *(int **)(v5 + 24);
  *(void *)(v0 + 48) = v6;
  if (v6)
  {
    *(void *)(v0 + 56) = *(void *)(*(void *)(v0 + 24) + 32);
    BOOL v11 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
    swift_retain();
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_18354C270;
    uint64_t v8 = *(void *)(v0 + 40);
    return v11(v8);
  }
  else
  {
    sub_183553108(*(void *)(v0 + 40), _s15ActorConnectionC20RemoteCallInvocationVMa);
    swift_task_dealloc();
    os_log_type_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_18354C270()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 48);
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  sub_18313D870(v2);
  if (v0) {
    char v3 = sub_18354C444;
  }
  else {
    char v3 = sub_18354C3C0;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_18354C3C0()
{
  sub_183553108(*(void *)(v0 + 40), _s15ActorConnectionC20RemoteCallInvocationVMa);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_18354C444()
{
  sub_183553108(*(void *)(v0 + 40), _s15ActorConnectionC20RemoteCallInvocationVMa);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_18354C4C8(uint64_t a1)
{
  v1[4] = a1;
  type metadata accessor for ReplyEnvelope();
  v1[5] = swift_task_alloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[6] = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_18354C58C;
  return sub_18354D0E4(a1);
}

uint64_t sub_18354C58C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_18354C6C8, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_18354C6C8()
{
  uint64_t v23 = v0;
  if (qword_1E8F62118 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)v0[7];
  uint64_t v3 = v0[5];
  uint64_t v4 = sub_183D4498C();
  __swift_project_value_buffer(v4, (uint64_t)qword_1E8F63B90);
  sub_1835539B4(v1, v3, (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
  id v5 = v2;
  id v6 = v2;
  uint64_t v7 = sub_183D4496C();
  os_log_type_t v8 = sub_183D4529C();
  BOOL v9 = os_log_type_enabled(v7, v8);
  os_log_type_t v10 = (void *)v0[7];
  uint64_t v11 = v0[5];
  if (v9)
  {
    uint64_t v12 = swift_slowAlloc();
    id v20 = (void *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = v21;
    *(_DWORD *)uint64_t v12 = 136315394;
    sub_183D445FC();
    os_log_t log = v7;
    sub_183553930((unint64_t *)&qword_1E8F62F30, MEMORY[0x1E4F27990]);
    uint64_t v13 = sub_183D4589C();
    v0[2] = sub_1834EFE70(v13, v14, &v22);
    sub_183D453AC();
    swift_bridgeObjectRelease();
    sub_183553108(v11, (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
    *(_WORD *)(v12 + 12) = 2112;
    id v15 = v10;
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v16;
    sub_183D453AC();
    *id v20 = v16;

    _os_log_impl(&dword_1830D4000, log, v8, "Failed to send reply to %s: %@", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61A60);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v20, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v21, -1, -1);
    MEMORY[0x185318E50](v12, -1, -1);
  }
  else
  {

    sub_183553108(v11, (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
  }
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_18354CA08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v5 = (uint64_t *)(a1 + 88);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_18359A614(a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if (a2)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v5;
    uint64_t v17 = *v5;
    *id v5 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1835A13CC();
      uint64_t v9 = v17;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_183D445FC();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v17 + 56);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F64A30);
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a3, v12 + *(void *)(v14 + 72) * v6, v13);
    sub_183550B8C(v6, v17);
    *id v5 = v17;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F64A30);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
  return swift_endAccess();
}

uint64_t sub_18354CC0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_18354CCB0(1, *a2, v4, a2[4], a2[5]);
  swift_bridgeObjectRetain();
  sub_183D44C8C();
  sub_18354CCB0(0, v3, v4, a2[2], a2[3]);
  return swift_bridgeObjectRelease();
}

uint64_t sub_18354CCB0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6 = v5;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(*(void *)(v6 + 80) + 16));
  uint64_t v12 = &OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_sendingFileTransferSession;
  if (a1) {
    uint64_t v13 = &OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_receivingFileTransferSession;
  }
  else {
    uint64_t v13 = &OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_sendingFileTransferSession;
  }
  if (*(void *)(v6 + *v13))
  {
    uint64_t v14 = qword_1E8F62118;
    swift_retain();
    if (v14 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_183D4498C();
    __swift_project_value_buffer(v15, (uint64_t)qword_1E8F63B90);
    uint64_t v16 = sub_183D4496C();
    os_log_type_t v17 = sub_183D4529C();
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v18 = 0;
      _os_log_impl(&dword_1830D4000, v16, v17, "Attempting to start file transfer when an active one exists", v18, 2u);
      MEMORY[0x185318E50](v18, -1, -1);
    }

    return swift_release();
  }
  else
  {
    unint64_t v29 = a5;
    if (qword_1E8F62118 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_183D4498C();
    __swift_project_value_buffer(v20, (uint64_t)qword_1E8F63B90);
    uint64_t v21 = sub_183D4496C();
    os_log_type_t v22 = sub_183D452BC();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 67109120;
      sub_183D453AC();
      _os_log_impl(&dword_1830D4000, v21, v22, "Creating file transfer session, receiving: %{BOOL}d", v23, 8u);
      MEMORY[0x185318E50](v23, -1, -1);
    }

    uint64_t v24 = swift_allocObject();
    swift_weakInit();
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v24;
    *(unsigned char *)(v25 + 24) = a1 & 1;
    if (a1) {
      uint64_t v12 = &OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_receivingFileTransferSession;
    }
    _s19FileTransferSessionCMa();
    swift_allocObject();
    uint64_t v26 = sub_1835058A8(a1 & 1, (uint64_t)sub_183552C70, v25);
    *(void *)(v6 + *v12) = v26;
    swift_retain();
    swift_release();
    uint64_t v27 = swift_allocObject();
    swift_weakInit();
    uint64_t v28 = *(void *)(v26 + 64);
    *(void *)(v26 + 64) = sub_183552C7C;
    *(void *)(v26 + 72) = v27;
    sub_18313D870(v28);
    objc_msgSend(*(id *)(v26 + 32), sel_prepare);
    sub_183505E0C(a2, a3, a4, v29);
    return swift_release();
  }
}

void sub_18354D020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10 = (os_unfair_lock_s *)(*(void *)(v5 + 80) + 16);
  os_unfair_lock_lock(v10);
  sub_1834F0460(&v11);
  os_unfair_lock_unlock(v10);
  if (v11)
  {
    swift_retain();
    sub_183505E0C(a2, a3, a4, a5);
    swift_release_n();
  }
}

uint64_t sub_18354D0E4(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  type metadata accessor for ReplyEnvelope();
  v2[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_18354D174, 0, 0);
}

uint64_t sub_18354D174()
{
  unint64_t v29 = v0;
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = *(os_unfair_lock_s **)(v2 + 80);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = sub_183554180;
  *(void *)(v5 + 24) = v4;
  v3 += 4;
  os_unfair_lock_lock(v3);
  sub_1835530EC(&v27);
  os_unfair_lock_unlock(v3);
  uint64_t v6 = v27;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  if (v6)
  {
    if (qword_1E8F62118 != -1) {
      swift_once();
    }
    uint64_t v7 = v0[7];
    uint64_t v8 = v0[5];
    uint64_t v9 = sub_183D4498C();
    __swift_project_value_buffer(v9, (uint64_t)qword_1E8F63B90);
    sub_1835539B4(v8, v7, (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
    swift_retain_n();
    uint64_t v10 = sub_183D4496C();
    os_log_type_t v11 = sub_183D452BC();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v14 = v0[6];
    uint64_t v13 = v0[7];
    if (v12)
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315394;
      uint64_t v26 = v25;
      uint64_t v27 = 67;
      unint64_t v28 = 0xE100000000000000;
      v0[2] = nw_connection_get_id(*(void **)(*(void *)(v14 + 16) + 16));
      sub_183D4589C();
      sub_183D44C8C();
      swift_bridgeObjectRelease();
      v0[3] = sub_1834EFE70(v27, v28, &v26);
      sub_183D453AC();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v15 + 12) = 2080;
      sub_183D445FC();
      sub_183553930((unint64_t *)&qword_1E8F62F30, MEMORY[0x1E4F27990]);
      uint64_t v16 = sub_183D4589C();
      v0[4] = sub_1834EFE70(v16, v17, &v26);
      sub_183D453AC();
      swift_bridgeObjectRelease();
      sub_183553108(v13, (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
      _os_log_impl(&dword_1830D4000, v10, v11, "%s: Sending reply for %s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x185318E50](v25, -1, -1);
      MEMORY[0x185318E50](v15, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_183553108(v13, (uint64_t (*)(void))type metadata accessor for ReplyEnvelope);
    }

    uint64_t v19 = sub_1835BB358();
    v0[8] = v19;
    v0[9] = v20;
    uint64_t v22 = v19;
    uint64_t v23 = v20;
    uint64_t v24 = (void *)swift_task_alloc();
    v0[10] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_18354D60C;
    return sub_18354260C(v22, v23, 7, 0);
  }
  else
  {
    swift_task_dealloc();
    unint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_18354D60C()
{
  uint64_t v2 = (void *)*v1;
  v2[11] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_18354D750, 0, 0);
  }
  else
  {
    sub_1832E5E9C(v2[8], v2[9]);
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v2[1];
    return v3();
  }
}

uint64_t sub_18354D750()
{
  sub_1832E5E9C(v0[8], v0[9]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_18354D7BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = (uint64_t *)(a1 + 96);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_18359A614(a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = 0;
  if (a2)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v5;
    uint64_t v14 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1835A1778();
      uint64_t v10 = v14;
    }
    uint64_t v11 = *(void *)(v10 + 48);
    uint64_t v12 = sub_183D445FC();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11 + *(void *)(*(void *)(v12 - 8) + 72) * v6, v12);
    uint64_t v8 = *(void *)(*(void *)(v14 + 56) + 8 * v6);
    sub_183550ED8(v6, v14);
    *uint64_t v5 = v14;
    swift_bridgeObjectRelease();
  }
  *a3 = v8;
  return swift_endAccess();
}

void sub_18354D8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62DD0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *(os_unfair_lock_s **)(v2 + 80);
  uint64_t v32 = v2;
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  unint64_t v29 = sub_183552738;
  uint64_t v30 = &v31;
  uint64_t v10 = v9 + 4;
  os_unfair_lock_lock(v9 + 4);
  sub_183551478(&v35);
  os_unfair_lock_unlock(v10);
  if (v35 == 1)
  {
    uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_receivingFileTransferSession);
    if (v11)
    {
      uint64_t v12 = *(void **)(v11 + 32);
      swift_retain();
      id v13 = objc_msgSend(v12, sel_selfPublicKey);
      if (!v13)
      {
        swift_release();
        return;
      }
      uint64_t v14 = v13;
      uint64_t v15 = sub_183D4453C();
      unint64_t v17 = v16;
      swift_release();

      uint64_t v18 = *(void *)(v3 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_sendingFileTransferSession);
      if (v18)
      {
        uint64_t v19 = *(void **)(v18 + 32);
        swift_retain();
        id v20 = objc_msgSend(v19, sel_selfPublicKey);
        if (v20)
        {
          uint64_t v21 = v20;
          uint64_t v22 = sub_183D4453C();
          unint64_t v24 = v23;
          swift_release();

          *(void *)&long long v35 = a1;
          *((void *)&v35 + 1) = a2;
          uint64_t v36 = v15;
          unint64_t v37 = v17;
          uint64_t v38 = v22;
          unint64_t v39 = v24;
          uint64_t v25 = sub_183D445FC();
          (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v8, 1, 1, v25);
          swift_bridgeObjectRetain();
          sub_1832E5D6C(v15, v17);
          sub_1832E5D6C(v22, v24);
          swift_bridgeObjectRetain();
          sub_1832E5D6C(v15, v17);
          sub_1832E5D6C(v22, v24);
          sub_18355216C(&v35, (uint64_t)v8, 2, v3);
          swift_bridgeObjectRelease();
          sub_1832E5E9C(v15, v17);
          sub_1832E5E9C(v22, v24);
          sub_1832E5E9C(v22, v24);
          sub_1832E5E9C(v15, v17);
          sub_183138A24((uint64_t)v8, &qword_1E8F62DD0);
          swift_bridgeObjectRelease();
          sub_1832E5E9C(v15, v17);
          uint64_t v26 = v22;
          unint64_t v27 = v24;
LABEL_10:
          sub_1832E5E9C(v26, v27);
          return;
        }
        swift_release();
      }
      uint64_t v26 = v15;
      unint64_t v27 = v17;
      goto LABEL_10;
    }
  }
}

uint64_t sub_18354DBA0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  if (*(void *)(result + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_receivingFileTransferSession))
  {
    char v5 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_183D44C8C();
    char v5 = 1;
    sub_18354CCB0(1, a2, a3, 0, 0xF000000000000000);
    swift_bridgeObjectRelease();
    uint64_t result = sub_18354CCB0(0, a2, a3, 0, 0xF000000000000000);
  }
  *a4 = v5;
  return result;
}

uint64_t sub_18354DC74()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = MEMORY[0x1F4188790](result);
    MEMORY[0x1F4188790](v4);
    uint64_t v2 = v1 + 4;
    os_unfair_lock_lock(v1 + 4);
    sub_1835071D4(v3);
    os_unfair_lock_unlock(v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_18354DD64()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = MEMORY[0x1F4188790](result);
    MEMORY[0x1F4188790](v3);
    uint64_t v2 = v1 + 4;
    os_unfair_lock_lock(v1 + 4);
    sub_1834F0460(&v4);
    os_unfair_lock_unlock(v2);
    if (v4)
    {
      swift_retain();
      sub_1835B5958(0);
      swift_release();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_18354DE84@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v6 = swift_bridgeObjectRetain();
  unint64_t v7 = sub_183552F18(v6, a1, a2);
  char v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = 0;
  if ((v9 & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v11 = sub_18354DF68(v7);
    uint64_t result = swift_endAccess();
  }
  *a3 = v11;
  return result;
}

uint64_t sub_18354DF68(unint64_t a1)
{
  unint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_183517ECC(v3);
    unint64_t v3 = v5;
    *uint64_t v1 = v5;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void *)(v6 + 16);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    uint64_t v9 = v7 - 1 - a1;
    if (v9 >= 0)
    {
      uint64_t v10 = v6 + 8 * a1;
      uint64_t v11 = *(void *)(v10 + 32);
      memmove((void *)(v10 + 32), (const void *)(v10 + 40), 8 * v9);
      *(void *)(v6 + 16) = v8;
      sub_183D44E6C();
      return v11;
    }
  }
  uint64_t result = sub_183D4571C();
  __break(1u);
  return result;
}

uint64_t sub_18354E04C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, char *, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v114 = a4;
  uint64_t v115 = a3;
  uint64_t v109 = a2;
  uint64_t v110 = a5;
  uint64_t v134 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_183D443FC();
  uint64_t v111 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v108 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NWActorID();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_183D4447C();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v107 = (char *)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v122 = (char *)&v103 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uLong v112 = (char *)&v103 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v103 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61F40);
  uint64_t v23 = MEMORY[0x1F4188790](v22 - 8);
  id v120 = (void (*)(char *, uint64_t, uint64_t))((char *)&v103 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v121 = (uint64_t)&v103 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v113 = (uint64_t)&v103 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v119 = (char *)&v103 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v33 = (char *)&v103 - v32;
  MEMORY[0x1F4188790](v31);
  long long v35 = (char *)&v103 - v34;
  uint64_t v36 = *(void *)(v5 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_receivingFileTransferSession);
  if (!v36)
  {
    if (qword_1E8F62118 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_183D4498C();
    __swift_project_value_buffer(v43, (uint64_t)qword_1E8F63B90);
    uint64_t v44 = sub_183D4496C();
    os_log_type_t v45 = sub_183D4529C();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl(&dword_1830D4000, v44, v45, "No receiving file transfer session", v46, 2u);
      MEMORY[0x185318E50](v46, -1, -1);
    }

    sub_1834F0498();
    swift_allocError();
    *id v47 = 0xD000000000000025;
    v47[1] = 0x8000000183E25F10;
    _OWORD v47[2] = 0x9000000000000000;
    return swift_willThrow();
  }
  uint64_t v104 = a1;
  uint64_t v105 = v7;
  unint64_t v37 = *(void **)(v36 + 32);
  uint64_t v123 = v36;
  swift_retain();
  id v38 = objc_msgSend(v37, sel_temporaryDirectoryURL);
  if (v38)
  {
    unint64_t v39 = v38;
    sub_183D4443C();

    id v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
    unint64_t v41 = v33;
    uint64_t v42 = 0;
  }
  else
  {
    id v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
    unint64_t v41 = v33;
    uint64_t v42 = 1;
  }
  uint64_t v118 = v40;
  v40((uint64_t)v41, v42, 1, v12);
  sub_183138964((uint64_t)v33, (uint64_t)v35, &qword_1E8F61F40);
  unint64_t v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  uint64_t v117 = v13 + 48;
  id v116 = v49;
  unsigned int v50 = v49((uint64_t)v35, 1, v12);
  sub_183138A24((uint64_t)v35, &qword_1E8F61F40);
  uint64_t v51 = v123;
  if (v50 == 1)
  {
    sub_183138900(v114, (uint64_t)&v125, &qword_1E8F63C78);
    sub_1835539B4((uint64_t)v115, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for NWActorID);
    uLong v106 = v21;
    if (v126)
    {
      sub_183553108((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for NWActorID);
      sub_1834D9964(&v125, (uint64_t)&v127);
      uint64_t v52 = v12;
      goto LABEL_20;
    }
    swift_beginAccess();
    uint64_t v53 = *(uint64_t (**)(char *))(v5 + 56);
    if (v53)
    {
      swift_endAccess();
      swift_retain();
      unint64_t v54 = (void *)v53(v11);
      uint64_t v56 = v55;
      sub_18313D870((uint64_t)v53);
      sub_183553108((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for NWActorID);
      if (v54)
      {
        v124[0] = v54;
        v124[1] = v56;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63C80);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63C88);
        if (swift_dynamicCast())
        {
LABEL_19:
          uint64_t v52 = v12;
          sub_183138A24((uint64_t)&v125, &qword_1E8F63C78);
          if (!*((void *)&v128 + 1))
          {
            sub_183138A24((uint64_t)&v127, &qword_1E8F63C78);
            id v98 = objc_msgSend(self, sel_defaultManager);
            v124[0] = 0;
            id v99 = objc_msgSend(v98, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 13, 1, 0, 1, v124);

            id v100 = v124[0];
            if (!v99)
            {
              id v102 = v124[0];
              sub_183D443CC();

              goto LABEL_35;
            }
            sub_183D4443C();
            id v101 = v100;

            goto LABEL_21;
          }
LABEL_20:
          sub_1834D9964(&v127, (uint64_t)&v130);
          uint64_t v57 = v132;
          uint64_t v58 = v133;
          __swift_project_boxed_opaque_existential_2(&v130, v132);
          (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v58);
          __swift_destroy_boxed_opaque_existential_2((uint64_t)&v130);
LABEL_21:
          int v59 = v112;
          if (qword_1E8F62118 != -1) {
            swift_once();
          }
          uint64_t v60 = sub_183D4498C();
          __swift_project_value_buffer(v60, (uint64_t)qword_1E8F63B90);
          uint64_t v115 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
          v115(v59, v106, v52);
          uint64_t v61 = sub_183D4496C();
          os_log_type_t v62 = sub_183D452BC();
          if (os_log_type_enabled(v61, v62))
          {
            uint64_t v63 = swift_slowAlloc();
            uint64_t v114 = v13;
            uint64_t v64 = (uint8_t *)v63;
            uint64_t v65 = swift_slowAlloc();
            uint64_t v130 = v65;
            *(_DWORD *)uint64_t v64 = 136315138;
            os_log_type_t v103 = v64 + 4;
            sub_183553930(&qword_1E8F62DE0, MEMORY[0x1E4F276F0]);
            uint64_t v66 = sub_183D4589C();
            *(void *)&long long v127 = sub_1834EFE70(v66, v67, &v130);
            sub_183D453AC();
            swift_bridgeObjectRelease();
            uint64_t v68 = *(void (**)(char *, uint64_t))(v114 + 8);
            v68(v59, v12);
            _os_log_impl(&dword_1830D4000, v61, v62, "Setting receive file transfer directory to %s", v64, 0xCu);
            swift_arrayDestroy();
            uint64_t v69 = v65;
            uint64_t v52 = v12;
            MEMORY[0x185318E50](v69, -1, -1);
            uint64_t v70 = v64;
            uint64_t v13 = v114;
            MEMORY[0x185318E50](v70, -1, -1);
          }
          else
          {
            uint64_t v68 = *(void (**)(char *, uint64_t))(v13 + 8);
            v68(v59, v52);
          }

          uint64_t v71 = (uint64_t)v119;
          uint64_t v72 = v106;
          v115(v119, v106, v52);
          v118(v71, 0, 1, v52);
          uint64_t v51 = v123;
          uint64_t v73 = *(void **)(v123 + 32);
          uint64_t v74 = v113;
          sub_183138900(v71, v113, &qword_1E8F61F40);
          if (v116(v74, 1, v52) == 1)
          {
            uint64_t v75 = 0;
          }
          else
          {
            uint64_t v75 = (void *)sub_183D4441C();
            v68((char *)v74, v52);
          }
          objc_msgSend(v73, sel_setTemporaryDirectoryURL_, v75);

          sub_183138A24((uint64_t)v119, &qword_1E8F61F40);
          sub_183505FD4();
          v68(v72, v52);
          goto LABEL_30;
        }
      }
    }
    else
    {
      sub_183553108((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for NWActorID);
      swift_endAccess();
    }
    uint64_t v129 = 0;
    long long v127 = 0u;
    long long v128 = 0u;
    goto LABEL_19;
  }
LABEL_30:
  id v76 = objc_msgSend(*(id *)(v51 + 32), sel_temporaryDirectoryURL);
  if (v76)
  {
    unint64_t v77 = v76;
    uint64_t v78 = (uint64_t)v120;
    sub_183D4443C();

    uint64_t v79 = 0;
    uint64_t v80 = v122;
    uint64_t v81 = v12;
  }
  else
  {
    uint64_t v79 = 1;
    uint64_t v80 = v122;
    uint64_t v81 = v12;
    uint64_t v78 = (uint64_t)v120;
  }
  v118(v78, v79, 1, v81);
  uint64_t v82 = v121;
  sub_183138964(v78, v121, &qword_1E8F61F40);
  if (v116(v82, 1, v81) == 1)
  {
    sub_183138A24(v82, &qword_1E8F61F40);
    sub_1834F0498();
    swift_allocError();
    *uint64_t v83 = 0xD00000000000002BLL;
    v83[1] = 0x8000000183E25F40;
    v83[2] = 0x9000000000000000;
LABEL_35:
    swift_willThrow();
    return swift_release();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v80, v82, v81);
  id v84 = objc_msgSend(*(id *)(v51 + 32), sel_targetID);
  if (v84)
  {
    uint64_t v85 = v84;
    uint64_t v86 = sub_183D44AFC();
    uint64_t v88 = v87;

    uint64_t v130 = v86;
    uint64_t v131 = v88;
    sub_183D44C8C();
    uint64_t v89 = *MEMORY[0x1E4F276A8];
    uint64_t v90 = v111;
    uint64_t v121 = v81;
    id v120 = *(void (**)(char *, uint64_t, uint64_t))(v111 + 104);
    uint64_t v91 = v108;
    uint64_t v92 = v105;
    v120(v108, v89, v105);
    sub_1834D7EAC();
    uint64_t v93 = v107;
    sub_183D4446C();
    unint64_t v94 = *(void (**)(char *, uint64_t))(v90 + 8);
    v94(v91, v92);
    swift_bridgeObjectRelease();
    uint64_t v130 = v104;
    uint64_t v131 = v109;
    v120(v91, *MEMORY[0x1E4F276C0], v92);
    sub_183D4446C();
    swift_release();
    v94(v91, v92);
    os_log_t v95 = *(void (**)(char *, uint64_t))(v13 + 8);
    uint64_t v96 = v121;
    v95(v93, v121);
    return ((uint64_t (*)(char *, uint64_t))v95)(v122, v96);
  }
  else
  {
    sub_1834F0498();
    swift_allocError();
    *unint64_t v97 = 0xD00000000000001FLL;
    v97[1] = 0x8000000183E25F70;
    v97[2] = 0x9000000000000000;
    swift_willThrow();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v80, v81);
  }
}

void sub_18354EECC()
{
  if (qword_1E8F62118 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_183D4498C();
  __swift_project_value_buffer(v1, (uint64_t)qword_1E8F63B90);
  swift_retain_n();
  swift_retain_n();
  uint64_t v2 = sub_183D4496C();
  os_log_type_t v3 = sub_183D452BC();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    v13[0] = v5;
    nw_connection_get_id(*(void **)(*(void *)(v0 + 16) + 16));
    sub_183D4589C();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    sub_1834EFE70(67, 0xE100000000000000, v13);
    sub_183D453AC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    type metadata accessor for NWFile1(0);
    swift_retain();
    uint64_t v6 = sub_183D44B9C();
    sub_1834EFE70(v6, v7, v13);
    sub_183D453AC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1830D4000, v2, v3, "%s: Incoming file reported: %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v5, -1, -1);
    MEMORY[0x185318E50](v4, -1, -1);
  }
  else
  {

    swift_release_n();
    uint64_t v8 = swift_release_n();
  }
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = v10 + 4;
  os_unfair_lock_lock(v10 + 4);
  sub_183554138(v12);
  os_unfair_lock_unlock(v11);
}

uint64_t sub_18354F1B8(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_incomingFiles);
  swift_beginAccess();
  uint64_t v2 = swift_retain();
  MEMORY[0x185314200](v2);
  if (*(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_183D44E9C();
  }
  sub_183D44EDC();
  sub_183D44E6C();
  return swift_endAccess();
}

void sub_18354F260(uint64_t a1)
{
  if (qword_1E8F62118 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_183D4498C();
  __swift_project_value_buffer(v3, (uint64_t)qword_1E8F63B90);
  swift_retain_n();
  swift_retain_n();
  uint64_t v4 = sub_183D4496C();
  os_log_type_t v5 = sub_183D452BC();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    v15[0] = 67;
    v15[1] = 0xE100000000000000;
    v16[0] = v7;
    nw_connection_get_id(*(void **)(*(void *)(v1 + 16) + 16));
    sub_183D4589C();
    sub_183D44C8C();
    swift_bridgeObjectRelease();
    sub_1834EFE70(67, 0xE100000000000000, v16);
    sub_183D453AC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    type metadata accessor for NWFile1(0);
    swift_retain();
    uint64_t v8 = sub_183D44B9C();
    v15[0] = sub_1834EFE70(v8, v9, v16);
    sub_183D453AC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1830D4000, v4, v5, "%s: Outgoing file reported: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x185318E50](v7, -1, -1);
    MEMORY[0x185318E50](v6, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  type metadata accessor for NWActorID();
  uint64_t v10 = sub_183D445AC();
  sub_18354D8E8(v10, v11);
  uint64_t v12 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = v13 + 4;
  os_unfair_lock_lock(v13 + 4);
  sub_1834F0460(v15);
  os_unfair_lock_unlock(v14);
  if (v15[0])
  {
    swift_retain();
    sub_183505FD4();
    swift_release();
    swift_retain();
    sub_18350605C(a1);
    swift_release_n();
  }
}

void sub_18354F59C(void (*a1)(void))
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 80) + 16);
  os_unfair_lock_lock(v3);
  sub_183551478(&v4);
  os_unfair_lock_unlock(v3);
  if (v4 == 1) {
    a1(0);
  }
}

uint64_t sub_18354F63C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v5 = OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_isDisconnected;
  if (*(unsigned char *)(result + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_isDisconnected))
  {
    char v6 = 1;
  }
  else
  {
    uint64_t v9 = result;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a2;
    *(void *)(v10 + 24) = a3;
    uint64_t v11 = (void **)(v9 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_interruptionHandlers);
    swift_beginAccess();
    uint64_t v12 = *v11;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v11 = v12;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v12 = sub_1834B4C98(0, v12[2] + 1, 1, v12);
      *uint64_t v11 = v12;
    }
    unint64_t v15 = v12[2];
    unint64_t v14 = v12[3];
    if (v15 >= v14 >> 1)
    {
      uint64_t v12 = sub_1834B4C98((void *)(v14 > 1), v15 + 1, 1, v12);
      *uint64_t v11 = v12;
    }
    void v12[2] = v15 + 1;
    uint64_t v16 = &v12[2 * v15];
    void v16[4] = sub_1835514C8;
    v16[5] = v10;
    uint64_t result = swift_endAccess();
    char v6 = *(unsigned char *)(v9 + v5);
  }
  *a4 = v6;
  return result;
}

void sub_18354F78C(void (*a1)(void))
{
}

uint64_t sub_18354F7B0@<X0>(char *a1@<X8>)
{
  return sub_18354F63C(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_18354F7D0(uint64_t a1, int *a2)
{
  char v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  char v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *char v4 = v2;
  v4[1] = sub_18350F178;
  return v6(a1);
}

unint64_t sub_18354F8AC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_183D4540C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_183D45AFC();
        sub_183D44B8C();
        swift_bridgeObjectRetain();
        sub_183D44C4C();
        swift_bridgeObjectRelease();
        uint64_t v10 = sub_183D45B4C();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          unint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = v15 + 24 * v3;
          uint64_t v17 = (long long *)(v15 + 24 * v6);
          if (24 * v3 < (uint64_t)(24 * v6) || v16 >= (unint64_t)v17 + 24 || (v18 = v3 == v6, int64_t v3 = v6, !v18))
          {
            long long v9 = *v17;
            *(void *)(v16 + 16) = *((void *)v17 + 2);
            *(_OWORD *)unint64_t v16 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_18354FAC8(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_183D456AC();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v38 = a2 + 64;
    unint64_t result = sub_183D4540C();
    uint64_t v12 = v38;
    if ((*(void *)(v38 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v36 = (result + 1) & v11;
      unint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      long long v35 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v37 = v13;
      unint64_t v16 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v10;
        v35(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        uint64_t v18 = sub_183D44A6C();
        unint64_t result = (*v16)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_17:
            uint64_t v22 = *(void *)(a2 + 48);
            unint64_t result = v22 + v15 * a1;
            unint64_t v23 = v22 + v17 + v15;
            if (v15 * a1 < v17 || result >= v23)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v17)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v25 = *(void *)(a2 + 56);
            uint64_t v26 = (_OWORD *)(v25 + 32 * a1);
            uint64_t v27 = (_OWORD *)(v25 + 32 * v10);
            uint64_t v12 = v38;
            if (a1 != v10 || (a1 = v10, v26 >= v27 + 2))
            {
              long long v28 = v27[1];
              *uint64_t v26 = *v27;
              v26[1] = v28;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_17;
        }
        uint64_t v12 = v38;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v29 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v29 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *uint64_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_18354FD84(int64_t a1, uint64_t a2)
{
  uint64_t v31 = type metadata accessor for NWActorID();
  uint64_t v4 = *(void *)(v31 - 8);
  unint64_t result = MEMORY[0x1F4188790](v31);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 64;
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    unint64_t result = sub_183D4540C();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v30 = (result + 1) & v11;
      uint64_t v12 = *(void *)(v4 + 72);
      uint64_t v13 = v11;
      do
      {
        uint64_t v14 = v12;
        int64_t v15 = v12 * v10;
        uint64_t v16 = v13;
        sub_1835539B4(*(void *)(a2 + 48) + v12 * v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for NWActorID);
        sub_183D45AFC();
        sub_183D44C4C();
        sub_183D445FC();
        sub_183553930((unint64_t *)&qword_1E8F649C0, MEMORY[0x1E4F27990]);
        sub_183D44A7C();
        uint64_t v17 = sub_183D45B4C();
        unint64_t result = sub_183553108((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for NWActorID);
        uint64_t v13 = v16;
        unint64_t v18 = v17 & v16;
        if (a1 >= (uint64_t)v30)
        {
          if (v18 < v30)
          {
            uint64_t v12 = v14;
          }
          else
          {
            uint64_t v12 = v14;
            if (a1 >= (uint64_t)v18) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v12 = v14;
          if (v18 >= v30 || a1 >= (uint64_t)v18)
          {
LABEL_12:
            uint64_t v19 = *(void *)(a2 + 48);
            unint64_t result = v19 + v12 * a1;
            if (v12 * a1 < v15 || result >= v19 + v15 + v12)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
LABEL_17:
              uint64_t v13 = v16;
            }
            else if (v12 * a1 != v15)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_17;
            }
            uint64_t v20 = *(void *)(a2 + 56);
            uint64_t v21 = (void *)(v20 + 8 * a1);
            uint64_t v22 = (void *)(v20 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v21 >= v22 + 1))
            {
              *uint64_t v21 = *v22;
              a1 = v10;
            }
          }
        }
        unint64_t v10 = (v10 + 1) & v13;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    unint64_t v23 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << a1) - 1;
  }
  else
  {
    unint64_t v23 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << a1) - 1;
  }
  *unint64_t v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1835500C8(int64_t a1, uint64_t a2)
{
  uint64_t v31 = type metadata accessor for NWActorID();
  uint64_t v4 = *(void *)(v31 - 8);
  unint64_t result = MEMORY[0x1F4188790](v31);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 64;
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    unint64_t result = sub_183D4540C();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v30 = (result + 1) & v11;
      uint64_t v12 = *(void *)(v4 + 72);
      uint64_t v13 = v11;
      do
      {
        uint64_t v14 = v12;
        int64_t v15 = v12 * v10;
        uint64_t v16 = v13;
        sub_1835539B4(*(void *)(a2 + 48) + v12 * v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for NWActorID);
        sub_183D45AFC();
        sub_183D44C4C();
        sub_183D445FC();
        sub_183553930((unint64_t *)&qword_1E8F649C0, MEMORY[0x1E4F27990]);
        sub_183D44A7C();
        uint64_t v17 = sub_183D45B4C();
        unint64_t result = sub_183553108((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for NWActorID);
        uint64_t v13 = v16;
        unint64_t v18 = v17 & v16;
        if (a1 >= (uint64_t)v30)
        {
          if (v18 < v30)
          {
            uint64_t v12 = v14;
          }
          else
          {
            uint64_t v12 = v14;
            if (a1 >= (uint64_t)v18) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v12 = v14;
          if (v18 >= v30 || a1 >= (uint64_t)v18)
          {
LABEL_12:
            uint64_t v19 = *(void *)(a2 + 48);
            unint64_t result = v19 + v12 * a1;
            if (v12 * a1 < v15 || result >= v19 + v15 + v12)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
LABEL_17:
              uint64_t v13 = v16;
            }
            else if (v12 * a1 != v15)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_17;
            }
            uint64_t v20 = *(void *)(a2 + 56);
            uint64_t v21 = (_OWORD *)(v20 + 16 * a1);
            uint64_t v22 = (_OWORD *)(v20 + 16 * v10);
            if (a1 != v10 || (a1 = v10, v21 >= v22 + 1))
            {
              *uint64_t v21 = *v22;
              a1 = v10;
            }
          }
        }
        unint64_t v10 = (v10 + 1) & v13;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    unint64_t v23 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << a1) - 1;
  }
  else
  {
    unint64_t v23 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << a1) - 1;
  }
  *unint64_t v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_18355040C(int64_t a1, uint64_t a2)
{
  uint64_t v34 = type metadata accessor for NWActorID();
  uint64_t v4 = *(void *)(v34 - 8);
  unint64_t result = MEMORY[0x1F4188790](v34);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 64;
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    unint64_t result = sub_183D4540C();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (result + 1) & v11;
      uint64_t v12 = *(void *)(v4 + 72);
      uint64_t v13 = v11;
      do
      {
        uint64_t v14 = v12;
        int64_t v15 = v12 * v10;
        uint64_t v16 = v13;
        sub_1835539B4(*(void *)(a2 + 48) + v12 * v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for NWActorID);
        sub_183D45AFC();
        sub_183D44C4C();
        sub_183D445FC();
        sub_183553930((unint64_t *)&qword_1E8F649C0, MEMORY[0x1E4F27990]);
        sub_183D44A7C();
        uint64_t v17 = sub_183D45B4C();
        unint64_t result = sub_183553108((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for NWActorID);
        uint64_t v13 = v16;
        unint64_t v18 = v17 & v16;
        if (a1 >= (uint64_t)v33)
        {
          if (v18 < v33)
          {
            uint64_t v12 = v14;
          }
          else
          {
            uint64_t v12 = v14;
            if (a1 >= (uint64_t)v18) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v12 = v14;
          if (v18 >= v33 || a1 >= (uint64_t)v18)
          {
LABEL_12:
            if (v12 * a1 < v15
              || *(void *)(a2 + 48) + v12 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v15 + v12))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v12 * a1 != v15)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = *(void *)(*(void *)(type metadata accessor for NWActorDiscoveryMechanism(0) - 8) + 72);
            int64_t v21 = v20 * a1;
            unint64_t result = v19 + v20 * a1;
            int64_t v22 = v20 * v10;
            unint64_t v23 = v19 + v20 * v10 + v20;
            if (v21 < v22 || result >= v23)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              uint64_t v12 = v14;
              uint64_t v13 = v16;
            }
            else
            {
              a1 = v10;
              BOOL v25 = v21 == v22;
              uint64_t v12 = v14;
              uint64_t v13 = v16;
              if (!v25)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                uint64_t v13 = v16;
                a1 = v10;
              }
            }
          }
        }
        unint64_t v10 = (v10 + 1) & v13;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v26;
    uint64_t v28 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v28 = *v26;
    uint64_t v27 = (-1 << a1) - 1;
  }
  *uint64_t v26 = v28 & v27;
  uint64_t v29 = *(void *)(a2 + 16);
  BOOL v30 = __OFSUB__(v29, 1);
  uint64_t v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_18355079C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_183D4540C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_183D45AFC();
        swift_bridgeObjectRetain();
        sub_183D44C4C();
        uint64_t v9 = sub_183D45B4C();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for NWActorSystem.ServerRole() - 8) + 72);
        int64_t v16 = v15 * v3;
        unint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1835509AC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_183D4540C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        unint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = sub_183D45AEC();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        uint64_t v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          void *v14 = *v10;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB266A00) - 8) + 72);
        int64_t v17 = v16 * v3;
        unint64_t result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_183550B8C(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_183D445FC();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    unint64_t result = sub_183D4540C();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v39 = (result + 1) & v12;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v40 = v13;
      uint64_t v37 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      uint64_t v38 = v14;
      uint64_t v36 = v12;
      do
      {
        uint64_t v16 = v9;
        uint64_t v17 = v15;
        int64_t v18 = v15 * v11;
        v38(v8, *(void *)(a2 + 48) + v15 * v11, v4);
        sub_183553930((unint64_t *)&qword_1E8F649C0, MEMORY[0x1E4F27990]);
        uint64_t v19 = sub_183D44A6C();
        unint64_t result = (*v37)(v8, v4);
        unint64_t v20 = v19 & v12;
        if (a1 >= (uint64_t)v39)
        {
          if (v20 >= v39 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            if (v17 * a1 < v18
              || *(void *)(a2 + 48) + v17 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v17))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v17 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v23 = *(void *)(a2 + 56);
            uint64_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F64A30) - 8) + 72);
            int64_t v25 = v24 * a1;
            unint64_t result = v23 + v24 * a1;
            int64_t v26 = v24 * v11;
            unint64_t v27 = v23 + v24 * v11 + v24;
            BOOL v28 = v25 < v26 || result >= v27;
            uint64_t v9 = v16;
            if (v28)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v11;
              uint64_t v12 = v36;
            }
            else
            {
              a1 = v11;
              uint64_t v12 = v36;
              if (v25 != v26)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v11;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v39 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v16;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
        uint64_t v15 = v17;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    uint64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *uint64_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_183550ED8(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_183D445FC();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = sub_183D4540C();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_183553930((unint64_t *)&qword_1E8F649C0, MEMORY[0x1E4F27990]);
        uint64_t v17 = sub_183D44A6C();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (void *)(v22 + 8 * a1);
            uint64_t v24 = (void *)(v22 + 8 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *uint64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    int64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    int64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *int64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1835511D0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_183D4540C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_183D45AFC();
        swift_bridgeObjectRetain();
        sub_183D44C4C();
        uint64_t v9 = sub_183D45B4C();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          int64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1835513A8(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t __buf = 0;
    arc4random_buf(&__buf, 8uLL);
    unint64_t result = (__buf * (unsigned __int128)v1) >> 64;
    if (__buf * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > __buf * v1)
      {
        do
        {
          unint64_t __buf = 0;
          arc4random_buf(&__buf, 8uLL);
        }
        while (v2 > __buf * v1);
        return (__buf * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_183551434@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X1>, unsigned char *a2@<X8>)
{
  unint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

void *sub_183551478@<X0>(unsigned char *a1@<X8>)
{
  return sub_183553F90(a1);
}

uint64_t sub_183551490()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1835514C8(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1835514F4@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_sendingFileTransferSession);
  return swift_retain();
}

uint64_t sub_18355151C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v34 = a4;
  uint64_t v35 = a2;
  int v31 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F63C00);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  v29[3] = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  v29[2] = (char *)v29 - v8;
  uint64_t v9 = sub_183D445FC();
  uint64_t v32 = *(void *)(v9 - 8);
  uint64_t v33 = v9;
  MEMORY[0x1F4188790](v9);
  v29[1] = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62DD0);
  uint64_t v30 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v29 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63038);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for CancelRemoteCall(0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1835539B4(a1, (uint64_t)v20, type metadata accessor for CancelRemoteCall);
  sub_183D442AC();
  swift_allocObject();
  sub_183D4429C();
  sub_183553930(&qword_1E8F63CD0, (void (*)(uint64_t))type metadata accessor for CancelRemoteCall);
  uint64_t v21 = sub_183D4427C();
  unint64_t v23 = v22;
  swift_release();
  uint64_t v24 = sub_183D44FAC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v17, 1, 1, v24);
  uint64_t v25 = swift_allocObject();
  swift_weakInit();
  sub_183138900(v35, (uint64_t)v14, &qword_1E8F62DD0);
  unint64_t v26 = (*(unsigned __int8 *)(v30 + 80) + 58) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = 0;
  *(void *)(v27 + 24) = 0;
  *(void *)(v27 + 32) = v25;
  *(void *)(v27 + 40) = v21;
  *(void *)(v27 + 48) = v23;
  *(unsigned char *)(v27 + 56) = v31;
  *(unsigned char *)(v27 + 57) = 0;
  sub_183138964((uint64_t)v14, v27 + v26, &qword_1E8F62DD0);
  sub_1832E5D6C(v21, v23);
  sub_18353C19C((uint64_t)v17, (uint64_t)&unk_1E8F63CD8, v27);
  swift_release();
  sub_1832E5E9C(v21, v23);
  return sub_183553108((uint64_t)v20, type metadata accessor for CancelRemoteCall);
}

uint64_t sub_183551B7C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v36 = a7;
  uint64_t v37 = a5;
  int v34 = a6;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F63C00);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  v32[3] = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  v32[2] = (char *)v32 - v14;
  uint64_t v15 = sub_183D445FC();
  uint64_t v35 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  v32[1] = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62DD0);
  uint64_t v33 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v32 - v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63038);
  MEMORY[0x1F4188790](v21 - 8);
  unint64_t v23 = (char *)v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a1;
  unint64_t v43 = a2;
  uint64_t v44 = a3;
  unint64_t v45 = a4;
  sub_183D442AC();
  swift_allocObject();
  uint64_t v38 = a1;
  unint64_t v39 = a2;
  sub_1832E5D6C(a1, a2);
  uint64_t v40 = a3;
  unint64_t v41 = a4;
  sub_1832E5D6C(a3, a4);
  sub_183D4429C();
  sub_1835536EC();
  uint64_t v24 = sub_183D4427C();
  unint64_t v26 = v25;
  swift_release();
  uint64_t v27 = sub_183D44FAC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v23, 1, 1, v27);
  uint64_t v28 = swift_allocObject();
  swift_weakInit();
  sub_183138900(v37, (uint64_t)v20, &qword_1E8F62DD0);
  unint64_t v29 = (*(unsigned __int8 *)(v33 + 80) + 58) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = 0;
  *(void *)(v30 + 24) = 0;
  *(void *)(v30 + 32) = v28;
  *(void *)(v30 + 40) = v24;
  *(void *)(v30 + 48) = v26;
  *(unsigned char *)(v30 + 56) = v34;
  *(unsigned char *)(v30 + 57) = 0;
  sub_183138964((uint64_t)v20, v30 + v29, &qword_1E8F62DD0);
  sub_1832E5D6C(v24, v26);
  sub_18353C19C((uint64_t)v23, (uint64_t)&unk_1E8F63D70, v30);
  swift_release();
  sub_1832E5E9C(v24, v26);
  sub_1832E5E9C(v38, v39);
  return sub_1832E5E9C(v40, v41);
}

void *sub_18355216C(long long *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v32 = a4;
  uint64_t v33 = a2;
  int v29 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F63C00);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  _OWORD v27[2] = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  v27[1] = (char *)v27 - v8;
  uint64_t v9 = sub_183D445FC();
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t v31 = v9;
  MEMORY[0x1F4188790](v9);
  v27[0] = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62DD0);
  uint64_t v28 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v27 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63038);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v18 = a1[1];
  long long v34 = *a1;
  long long v35 = v18;
  long long v36 = a1[2];
  sub_183D442AC();
  swift_allocObject();
  sub_183552758(a1);
  sub_183D4429C();
  sub_1835527B4();
  uint64_t v19 = sub_183D4427C();
  unint64_t v21 = v20;
  swift_release();
  uint64_t v22 = sub_183D44FAC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v17, 1, 1, v22);
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  sub_183138900(v33, (uint64_t)v14, &qword_1E8F62DD0);
  unint64_t v24 = (*(unsigned __int8 *)(v28 + 80) + 58) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = 0;
  *(void *)(v25 + 32) = v23;
  *(void *)(v25 + 40) = v19;
  *(void *)(v25 + 48) = v21;
  *(unsigned char *)(v25 + 56) = v29;
  *(unsigned char *)(v25 + 57) = 0;
  sub_183138964((uint64_t)v14, v25 + v24, &qword_1E8F62DD0);
  sub_1832E5D6C(v19, v21);
  sub_18353C19C((uint64_t)v17, (uint64_t)&unk_1E8F63C28, v25);
  swift_release();
  sub_1832E5E9C(v19, v21);
  return sub_183552808(a1);
}

uint64_t sub_183552738@<X0>(char *a1@<X8>)
{
  return sub_18354DBA0(v1[2], v1[3], v1[4], a1);
}

void *sub_183552758(void *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  swift_bridgeObjectRetain();
  sub_1832E5D6C(v2, v3);
  sub_1832E5D6C(v4, v5);
  return a1;
}

unint64_t sub_1835527B4()
{
  unint64_t result = qword_1E8F63C10;
  if (!qword_1E8F63C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63C10);
  }
  return result;
}

void *sub_183552808(void *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  swift_bridgeObjectRelease();
  sub_1832E5E9C(v2, v3);
  sub_1832E5E9C(v4, v5);
  return a1;
}

uint64_t sub_183552864()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1835528A0(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62DD0);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 57);
  char v10 = *(unsigned char *)(v1 + 56);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1834B96A4;
  return sub_183541EDC(a1, v4, v5, v6, v7, v8, v10, v9);
}

uint64_t sub_1835529D0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1834B96A4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E8F63C30 + dword_1E8F63C30);
  return v6(a1, v4);
}

uint64_t sub_183552A88(uint64_t a1)
{
  return sub_183543CE0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56));
}

uint64_t sub_183552A9C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = ((v3 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0;
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_1832E5E9C(*(void *)(v4 + 8), *(void *)(v4 + 16));

  return swift_deallocObject();
}

uint64_t sub_183552B90(unsigned int *a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  uint64_t v6 = (v5 & 0xFFFFFFFFFFFFFFF8) + v1;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v6 + 8);
  unint64_t v10 = *(void *)(v6 + 16);
  uint64_t v11 = *(unsigned __int8 *)(v1 + v5);

  return sub_183543E98(a1, v7, v8, v1 + v4, v11, v9, v10);
}

uint64_t sub_183552C38()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_183552C70()
{
  return sub_18354DC74();
}

uint64_t sub_183552C7C()
{
  return sub_18354DD64();
}

uint64_t sub_183552C84@<X0>(uint64_t *a1@<X8>)
{
  return sub_18354DE84(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

void sub_183552CA4()
{
  if (qword_1E8F62118 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_183D4498C();
  __swift_project_value_buffer(v0, (uint64_t)qword_1E8F63B90);
  uint64_t v1 = sub_183D4496C();
  os_log_type_t v2 = sub_183D452BC();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1830D4000, v1, v2, "Received terminate process message", v3, 2u);
    MEMORY[0x185318E50](v3, -1, -1);
  }

  if (qword_1E8F62138 != -1) {
    swift_once();
  }
  if (byte_1E8F63BD0 != 1)
  {
    osos_log_t log = sub_183D4496C();
    os_log_type_t v7 = sub_183D4529C();
    if (!os_log_type_enabled(oslog, v7)) {
      goto LABEL_15;
    }
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    uint64_t v9 = "Terminate process not supported";
    goto LABEL_14;
  }
  double v4 = COERCE_DOUBLE(sub_18353AEA0());
  char v6 = v5;
  osos_log_t log = sub_183D4496C();
  if ((v6 & 1) == 0 && v4 > 0.0)
  {
    os_log_type_t v10 = sub_183D452BC();
    if (os_log_type_enabled(oslog, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_1830D4000, oslog, v10, "Terminating process", v11, 2u);
      MEMORY[0x185318E50](v11, -1, -1);
    }

    exit(1);
  }
  os_log_type_t v7 = sub_183D4529C();
  if (os_log_type_enabled(oslog, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    uint64_t v9 = "Terminate process frequency not set";
LABEL_14:
    _os_log_impl(&dword_1830D4000, oslog, v7, v9, v8, 2u);
    MEMORY[0x185318E50](v8, -1, -1);
  }
LABEL_15:
}

uint64_t sub_183552F18(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v6)
  {
    for (uint64_t i = 0; ; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        MEMORY[0x1853148B0](i, a1);
      }
      else {
        swift_retain();
      }
      if (sub_183D4440C() == a2 && v8 == a3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return i;
      }
      char v10 = sub_183D4592C();
      swift_release();
      swift_bridgeObjectRelease();
      if (v10) {
        return i;
      }
      uint64_t v11 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      if (v11 == v6) {
        return 0;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_183D456DC();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_18355307C()
{
  if (*(unsigned char *)(v0 + 16)) {
    uint64_t v1 = &OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_receivingFileTransferSession;
  }
  else {
    uint64_t v1 = &OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_sendingFileTransferSession;
  }
  *(void *)(*(void *)(v0 + 24) + *v1) = 0;
  return swift_release();
}

uint64_t sub_1835530D0()
{
  return sub_18354F1B8(*(void *)(v0 + 16));
}

void *sub_1835530EC@<X0>(void *a1@<X8>)
{
  return sub_1835070C0(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_183553108(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_183553168(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v12 = *(unsigned char *)(v1 + 57);
  char v9 = *(unsigned char *)(v1 + 56);
  char v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *char v10 = v2;
  v10[1] = sub_1834B96A4;
  return sub_18353D910(a1, v4, v5, v6, v7, v8, v9, v12);
}

uint64_t sub_183553260()
{
  return sub_18353EB90(v0[2], v0[3], v0[4]);
}

uint64_t sub_183553270()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1834B96A4;
  v3[2] = v2;
  return MEMORY[0x1F4188298](sub_18353F2E0, v2, 0);
}

uint64_t sub_18355331C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62DD0);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 57);
  char v10 = *(unsigned char *)(v1 + 56);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1834B5EB0;
  return sub_183541EDC(a1, v4, v5, v6, v7, v8, v10, v9);
}

uint64_t sub_18355344C(uint64_t a1)
{
  return sub_18353E6A0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(unsigned __int8 *)(v1 + 57));
}

uint64_t sub_183553488(uint64_t a1)
{
  return sub_1835402D4(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24), *(uint64_t (**))(v1 + 32), *(void *)(v1 + 40));
}

void sub_183553494(void *a1, unint64_t a2, unint64_t a3)
{
  switch(a3 >> 60)
  {
    case 2uLL:
      uint64_t v4 = a3 & 0xFFFFFFFFFFFFFFFLL;
      sub_1832E5E9C((uint64_t)a1, a2);
      a1 = (void *)v4;
      goto LABEL_6;
    case 3uLL:
LABEL_6:

      break;
    case 4uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t sub_183553538()
{
  return sub_183540B5C(v0[2], v0[3], v0[4]);
}

uint64_t sub_183553560()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1834B96A4;
  v3[4] = v2;
  return MEMORY[0x1F4188298](sub_183544850, 0, 0);
}

uint64_t sub_18355360C()
{
  *(void *)(*(void *)(v0 + 16)
            + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_connectionEstablishedActivity) = *(void *)(v0 + 24);
  swift_release();
  return swift_retain();
}

void sub_183553650(unsigned int *a1)
{
}

void sub_183553658(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unsigned int *a5)
{
}

uint64_t sub_183553660()
{
  return sub_183546DB0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_18355367C()
{
  unint64_t result = qword_1E8F63D60;
  if (!qword_1E8F63D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63D60);
  }
  return result;
}

uint64_t sub_1835536D0()
{
  return sub_18354CC0C(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

unint64_t sub_1835536EC()
{
  unint64_t result = qword_1E8F63D68;
  if (!qword_1E8F63D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63D68);
  }
  return result;
}

uint64_t objectdestroy_12Tm()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62DD0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 58) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();
  swift_release();
  sub_1832E5E9C(*(void *)(v0 + 40), *(void *)(v0 + 48));
  uint64_t v3 = sub_183D445FC();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }

  return swift_deallocObject();
}

unint64_t sub_18355387C()
{
  unint64_t result = qword_1E8F63D78;
  if (!qword_1E8F63D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63D78);
  }
  return result;
}

uint64_t sub_1835538D0@<X0>(void *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 16)) {
    unint64_t v2 = &OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_receivingFileTransferSession;
  }
  else {
    unint64_t v2 = &OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_sendingFileTransferSession;
  }
  *a1 = *(void *)(*(void *)(v1 + 24) + *v2);
  return swift_retain();
}

uint64_t sub_183553914@<X0>(void *a1@<X8>)
{
  return sub_18354D7BC(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_183553930(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_183553978@<X0>(uint64_t a1@<X8>)
{
  return sub_18354A6A8(v1, a1);
}

uint64_t sub_183553994()
{
  return sub_18354A7D4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_1835539B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_183553A1C()
{
  uint64_t v1 = (int *)(type metadata accessor for RemoteCallEnvelope(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_183D445FC();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  uint64_t v6 = v3 + v1[7];
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for NWActorID();
  v5(v6 + *(int *)(v7 + 20), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_183553B88(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for RemoteCallEnvelope(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  uint64_t v7 = (v6 & 0xFFFFFFFFFFFFFFF8) + v1;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = v1 + v5;
  char v11 = *(unsigned char *)(v1 + v6);
  char v12 = *(void **)(v7 + 8);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1834B96A4;
  return sub_18354AAD8(a1, v8, v9, v10, v11, v12);
}

void sub_183553CB4(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_supportsCustomSerialization);
}

uint64_t sub_183553CC8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 25);
  uint64_t v7 = *(void *)(v1 + 32);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1834B5EB0;
  return sub_18354C034(a1, v4, v5, v6, v7);
}

uint64_t sub_183553D90(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, unsigned __int8 a5)
{
  if ((~a4 & 0x3000000000000000) != 0 || a5 != 255) {
    return sub_1835367E4(result, a2, a3, a4, a5 & 1);
  }
  return result;
}

uint64_t sub_183553DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F63BF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_183553E1C@<X0>(uint64_t a1@<X8>)
{
  return sub_18354CA08(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_183553E38(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, unsigned __int8 a5)
{
  if ((~a4 & 0x3000000000000000) != 0 || a5 != 255) {
    return sub_18353673C(result, a2, a3, a4, a5 & 1);
  }
  return result;
}

uint64_t sub_183553E5C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t dynamic_cast_existential_2_conditional(uint64_t a1)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    if (swift_conformsToProtocol2()) {
      return a1;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1Tm(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x185318E50);
  }
  return result;
}

void sub_183553F74(unsigned char *a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_isDisconnected);
  *(unsigned char *)(v1 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_isDisconnected) = 1;
  *a1 = v2;
}

void *sub_183553F90@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_183553FD4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_interruptionHandlers);
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *v3;
  *uint64_t v3 = MEMORY[0x1E4FBC860];
  *a1 = v5;
  return result;
}

void sub_183554040(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_connectionEstablishedActivity);
  *(void *)(v1 + OBJC_IVAR____TtCC7Network13NWActorSystem15ActorConnection_connectionEstablishedActivity) = 0;
  *a1 = v2;
}

uint64_t sub_183554058(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1835540C0@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_retain();
}

uint64_t sub_1835540E0@<X0>(void *a1@<X8>)
{
  return sub_18353CF6C(v1, a1);
}

uint64_t sub_1835540FC()
{
  return sub_18353CE30(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_183554118(unsigned char *a1@<X8>)
{
}

uint64_t sub_183554138(uint64_t a1)
{
  return sub_1835071D4(a1);
}

void *sub_183554150@<X0>(void *a1@<X8>)
{
  return sub_1835530EC(a1);
}

uint64_t sub_183554168@<X0>(uint64_t a1@<X8>)
{
  return sub_183553E1C(a1);
}

uint64_t sub_183554180@<X0>(void *a1@<X8>)
{
  return sub_183553914(a1);
}

uint64_t sub_183554198()
{
  return sub_1834F268C();
}

uint64_t sub_1835541B0()
{
  nw_protocol_definition_t v0 = nw_protocol_copy_udp_definition();
  type metadata accessor for NWProtocolDefinition();
  uint64_t v1 = (void *)swift_allocObject();
  v1[4] = v0;
  id v2 = objc_msgSend((id)swift_unknownObjectRetain(), sel_description);
  uint64_t v3 = sub_183D44AFC();
  uint64_t v5 = v4;

  uint64_t result = swift_unknownObjectRelease();
  v1[2] = v3;
  v1[3] = v5;
  qword_1E8F63DD0 = (uint64_t)v1;
  return result;
}

uint64_t static NWProtocolUDP.definition.getter()
{
  if (qword_1E8F62148 != -1) {
    swift_once();
  }

  return swift_retain();
}

void sub_1835542A0(char a1)
{
  nw_udp_options_set_prefer_no_checksum(*(nw_protocol_options_t *)(v1 + 16), a1 & 1);
}

BOOL sub_1835542B0()
{
  return nw_udp_options_get_prefer_no_checksum(*(void **)(v0 + 16));
}

void (*sub_1835542CC(uint64_t a1))(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = nw_udp_options_get_prefer_no_checksum(v3);
  return sub_183554318;
}

void sub_183554318(uint64_t a1)
{
}

BOOL sub_183554328(NSObject *a1)
{
  uint64_t v1 = nw_protocol_options_copy_definition(a1);
  id v2 = nw_protocol_copy_udp_definition();
  BOOL is_equal = nw_protocol_definition_is_equal(v1, v2);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return is_equal;
}

uint64_t NWProtocolUDP.Options.__allocating_init()()
{
  return sub_18355440C((uint64_t (*)(void))nw_udp_create_options);
}

uint64_t NWProtocolUDP.Options.init()()
{
  *(void *)(v0 + 16) = nw_udp_create_options();
  return v0;
}

uint64_t NWProtocolUDP.Options.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

BOOL sub_1835543DC(NSObject *a1)
{
  return nw_protocol_metadata_is_udp(a1);
}

uint64_t NWProtocolUDP.Metadata.__allocating_init()()
{
  return sub_18355440C((uint64_t (*)(void))nw_udp_create_metadata);
}

uint64_t sub_18355440C(uint64_t (*a1)(void))
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1();
  return v2;
}

uint64_t NWProtocolUDP.Metadata.init()()
{
  *(void *)(v0 + 16) = nw_udp_create_metadata();
  return v0;
}

uint64_t NWProtocolUDP.deinit()
{
  return v0;
}

uint64_t NWProtocolUDP.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

BOOL sub_18355448C@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = nw_udp_options_get_prefer_no_checksum(*(void **)(*(void *)a1 + 16));
  *a2 = result;
  return result;
}

void sub_1835544BC(BOOL *a1, uint64_t a2)
{
}

uint64_t type metadata accessor for NWProtocolUDP()
{
  return self;
}

uint64_t type metadata accessor for NWProtocolUDP.Options()
{
  return self;
}

uint64_t method lookup function for NWProtocolUDP.Options(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWProtocolUDP.Options);
}

uint64_t dispatch thunk of NWProtocolUDP.Options.preferNoChecksum.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of NWProtocolUDP.Options.preferNoChecksum.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of NWProtocolUDP.Options.preferNoChecksum.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of NWProtocolUDP.Options.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t type metadata accessor for NWProtocolUDP.Metadata()
{
  return self;
}

uint64_t method lookup function for NWProtocolUDP.Metadata(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWProtocolUDP.Metadata);
}

uint64_t dispatch thunk of NWProtocolUDP.Metadata.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_183554604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t sub_18355463C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_183554604(a1, *(void *)(a2 + 16), a3);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);

  return v5(a3, 0, 1, a2);
}

uint64_t sub_1835546AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t NWDomainSequence.ScopedDomain.domain.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NWDomainSequence.ScopedDomain.interface.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *a1 = v2;
  return sub_18315E9D4(v2);
}

uint64_t NWDomainSequence.ScopedDomain.hash(into:)()
{
  uint64_t v1 = *(NSObject **)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_183D44C4C();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    return sub_183D45B1C();
  }
  sub_183D45B1C();
  if (v1)
  {
    nw_interface_get_index(v1);
    sub_183D45B0C();
    uint64_t v3 = swift_unknownObjectRetain();
    nw_interface_get_name(v3);
    sub_183D44C9C();
  }
  else
  {
    sub_183D45B0C();
  }
  sub_18315E51C((uint64_t)v1);
  sub_183D44C4C();

  return swift_bridgeObjectRelease();
}

uint64_t NWDomainSequence.ScopedDomain.hashValue.getter()
{
  uint64_t v1 = *(NSObject **)(v0 + 16);
  sub_183D45AFC();
  sub_183D44C4C();
  if (v1 == 1)
  {
    sub_183D45B1C();
  }
  else
  {
    sub_183D45B1C();
    if (v1)
    {
      nw_interface_get_index(v1);
      sub_183D45B0C();
      uint64_t v2 = swift_unknownObjectRetain();
      nw_interface_get_name(v2);
      sub_183D44C9C();
    }
    else
    {
      sub_183D45B0C();
    }
    sub_18315E51C((uint64_t)v1);
    sub_183D44C4C();
    swift_bridgeObjectRelease();
  }
  return sub_183D45B4C();
}

uint64_t sub_18355491C()
{
  uint64_t v1 = *(NSObject **)(v0 + 16);
  sub_183D44C4C();
  if (v1 == 1) {
    return sub_183D45B1C();
  }
  sub_183D45B1C();
  if (v1)
  {
    nw_interface_get_index(v1);
    sub_183D45B0C();
    uint64_t v3 = swift_unknownObjectRetain();
    nw_interface_get_name(v3);
    sub_183D44C9C();
  }
  else
  {
    sub_183D45B0C();
  }
  sub_18315E51C((uint64_t)v1);
  sub_183D44C4C();

  return swift_bridgeObjectRelease();
}

uint64_t sub_183554A0C()
{
  uint64_t v1 = *(NSObject **)(v0 + 16);
  sub_183D45AFC();
  sub_183D44C4C();
  if (v1 == 1)
  {
    sub_183D45B1C();
  }
  else
  {
    sub_183D45B1C();
    if (v1)
    {
      nw_interface_get_index(v1);
      sub_183D45B0C();
      uint64_t v2 = swift_unknownObjectRetain();
      nw_interface_get_name(v2);
      sub_183D44C9C();
    }
    else
    {
      sub_183D45B0C();
    }
    sub_18315E51C((uint64_t)v1);
    sub_183D44C4C();
    swift_bridgeObjectRelease();
  }
  return sub_183D45B4C();
}

uint64_t NWDomainSequence.Event.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return sub_18355588C(v2, v3, v4);
}

uint64_t NWDomainSequence.Event.primary.getter()
{
  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t NWDomainSequence.Event.moreComing.getter()
{
  return *(unsigned __int8 *)(v0 + 26);
}

void sub_183554B24(uint64_t a1, DNSServiceFlags a2, NSObject *a3)
{
  sdRef[1] = *(DNSServiceRef *)MEMORY[0x1E4F143B8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63E40);
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  uint64_t v9 = (void *)sub_183D45A2C();
  sdRef[0] = 0;
  if (a3 == 1)
  {
    uint32_t index = 0;
  }
  else
  {
    if (!a3)
    {
      sub_18315E51C(0);
      sub_183D456BC();
      __break(1u);
      return;
    }
    uint32_t index = nw_interface_get_index(a3);
  }
  DNSServiceErrorType v11 = DNSServiceEnumerateDomains(sdRef, a2, index, (DNSServiceDomainEnumReply)sub_183554D90, v9);
  char v12 = sdRef[0];
  if (sdRef[0])
  {
    id v13 = nw_context_copy_implicit_context();
    BOOL v14 = nw_context_copy_workloop(v13);
    swift_unknownObjectRelease();
    uint64_t v15 = (id)v14;
    DNSServiceSetDispatchQueue(v12, v15);
    uint64_t v16 = (void *)swift_allocObject();
    uint64_t v16[2] = v15;
    void v16[3] = v12;
    void v16[4] = v9;
    sub_183D450DC();
  }
  else
  {
    DNSServiceErrorType v17 = v11;
    swift_unknownObjectRelease();
    sub_1834AC424();
    uint64_t v18 = swift_allocError();
    *(_DWORD *)uint64_t v19 = v17;
    *(unsigned char *)(v19 + 4) = 1;
    v20[1] = v18;
    sub_183D4510C();
  }
}

uint64_t sub_183554D90(uint64_t a1, char a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6)
{
  return sub_183556C40(a2, a3, a4, a5, a6);
}

uint64_t sub_183554DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_183D449CC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_183D449EC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a3;
  *(void *)(v14 + 24) = a4;
  aBlock[4] = sub_183556BC0;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_183137440;
  aBlock[3] = &block_descriptor_12;
  uint64_t v15 = _Block_copy(aBlock);
  sub_183D449DC();
  v17[1] = MEMORY[0x1E4FBC860];
  sub_183556BF8((unint64_t *)&qword_1EB2669E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB2669C0);
  sub_1831389C8();
  sub_183D453FC();
  MEMORY[0x1853146E0](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t NWDomainSequence.DomainIterator.next()(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63DE0);
  *uint64_t v3 = v1;
  v3[1] = sub_1834B5EB0;
  return MEMORY[0x1F4187EE0](a1, v4);
}

uint64_t sub_1835550F0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63DE0);
  *uint64_t v3 = v1;
  v3[1] = sub_1834B96A4;
  return MEMORY[0x1F4187EE0](a1, v4);
}

uint64_t sub_1835551A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[3] = a2;
  uint64_t v6 = (void *)swift_task_alloc();
  v4[6] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63DE0);
  *uint64_t v6 = v4;
  v6[1] = sub_183555260;
  return MEMORY[0x1F4187EE0](a1, v7);
}

uint64_t sub_183555260()
{
  uint64_t v2 = (void *)*v1;
  v2[7] = v0;
  swift_task_dealloc();
  if (v0)
  {
    if (v2[3])
    {
      swift_getObjectType();
      uint64_t v3 = sub_183D44F2C();
      uint64_t v5 = v4;
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v5 = 0;
    }
    return MEMORY[0x1F4188298](sub_1835553D0, v3, v5);
  }
  else
  {
    uint64_t v6 = (uint64_t (*)(void))v2[1];
    return v6();
  }
}

uint64_t sub_1835553D0()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = (void *)v0[5];
  v0[2] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63CE0);
  swift_willThrowTypedImpl();
  *uint64_t v2 = v1;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t NWDomainSequence.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63DE0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63DE8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v2, v8);
  sub_183D4501C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v7, v4);
  return sub_1835558C8(v2);
}

uint64_t sub_183555608@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63DE0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63DE8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v2, v8);
  sub_183D4501C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v7, v4);
  return sub_1835558C8(v2);
}

BOOL _s7Network16NWDomainSequenceV12ScopedDomainV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_183D4592C(), result = 0, (v5 & 1) != 0))
  {
    if (v2 == 1)
    {
      if (v3 == 1) {
        return 1;
      }
    }
    else
    {
      nw_interface_t v9 = v2;
      if (v3 != 1)
      {
        nw_interface_t v8 = v3;
        sub_18315E9D4((uint64_t)v2);
        swift_unknownObjectRetain();
        char v7 = _s7Network11NWInterfaceV2eeoiySbAC_ACtFZ_0(&v9, &v8);
        swift_unknownObjectRelease();
        sub_18315E51C((uint64_t)v2);
        return (v7 & 1) != 0;
      }
      swift_unknownObjectRetain();
    }
    sub_18315E9D4((uint64_t)v3);
    sub_18315E51C((uint64_t)v2);
    sub_18315E51C((uint64_t)v3);
    return 0;
  }
  return result;
}

uint64_t sub_18355588C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();

  return sub_18315E9D4(a3);
}

uint64_t sub_1835558C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NWDomainSequence(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for NWDomainSequence(uint64_t a1)
{
  return sub_18315A7F8(a1, (uint64_t *)&unk_1E8F63E10);
}

unint64_t sub_183555948()
{
  unint64_t result = qword_1E8F63DF0[0];
  if (!qword_1E8F63DF0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E8F63DF0);
  }
  return result;
}

uint64_t sub_18355599C()
{
  return MEMORY[0x1E4FBC0F0];
}

uint64_t sub_1835559A8()
{
  return sub_183556BF8(&qword_1E8F63E08, (void (*)(uint64_t))type metadata accessor for NWDomainSequence.DomainIterator);
}

uint64_t type metadata accessor for NWDomainSequence.DomainIterator(uint64_t a1)
{
  return sub_18315A7F8(a1, (uint64_t *)&unk_1E8F63E28);
}

uint64_t initializeBufferWithCopyOfBuffer for NWDomainSequence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_183556148(a1, a2, a3, &qword_1E8F63DE8);
}

uint64_t destroy for NWDomainSequence(uint64_t a1, uint64_t a2)
{
  return sub_1835561C0(a1, a2, &qword_1E8F63DE8);
}

uint64_t initializeWithCopy for NWDomainSequence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_183556230(a1, a2, a3, &qword_1E8F63DE8);
}

uint64_t assignWithCopy for NWDomainSequence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1835562A0(a1, a2, a3, &qword_1E8F63DE8);
}

uint64_t initializeWithTake for NWDomainSequence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_183556310(a1, a2, a3, &qword_1E8F63DE8);
}

uint64_t assignWithTake for NWDomainSequence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_183556380(a1, a2, a3, &qword_1E8F63DE8);
}

uint64_t getEnumTagSinglePayload for NWDomainSequence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_183555A6C);
}

uint64_t sub_183555A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_1E8F63DE8);
}

uint64_t storeEnumTagSinglePayload for NWDomainSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_183555A8C);
}

uint64_t sub_183555A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_1E8F63DE8);
}

void sub_183555A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t destroy for NWDomainSequence.ScopedDomain(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 16);
  if (result != 1)
  {
    return swift_unknownObjectRelease();
  }
  return result;
}

void *_s7Network16NWDomainSequenceV12ScopedDomainVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[2];
  swift_bridgeObjectRetain();
  if (v4 != 1) {
    swift_unknownObjectRetain();
  }
  a1[2] = v4;
  return a1;
}

void *assignWithCopy for NWDomainSequence.ScopedDomain(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 2;
  uint64_t v5 = a2[2];
  if (a1[2] == 1)
  {
    if (v5 != 1)
    {
      *uint64_t v4 = v5;
      swift_unknownObjectRetain();
      return a1;
    }
    uint64_t v6 = 1;
  }
  else
  {
    if (v5 != 1)
    {
      *uint64_t v4 = v5;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      return a1;
    }
    sub_1834D8BDC((uint64_t)(a1 + 2));
    uint64_t v6 = a2[2];
  }
  *uint64_t v4 = v6;
  return a1;
}

void *assignWithTake for NWDomainSequence.ScopedDomain(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + 2;
  uint64_t v6 = a2[2];
  if (a1[2] != 1)
  {
    if (v6 != 1)
    {
      *uint64_t v5 = v6;
      swift_unknownObjectRelease();
      return a1;
    }
    sub_1834D8BDC((uint64_t)(a1 + 2));
    uint64_t v6 = 1;
  }
  *uint64_t v5 = v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for NWDomainSequence.ScopedDomain(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NWDomainSequence.ScopedDomain(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NWDomainSequence.ScopedDomain()
{
  return &type metadata for NWDomainSequence.ScopedDomain;
}

uint64_t sub_183555D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRelease();

  return sub_18315E51C(a3);
}

uint64_t initializeWithCopy for NWDomainSequence.Event(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_18355588C(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  return a1;
}

uint64_t assignWithCopy for NWDomainSequence.Event(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_18355588C(*(void *)a2, v5, v6);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  sub_183555D18(v8, v9, v10);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  return a1;
}

__n128 __swift_memcpy27_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for NWDomainSequence.Event(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_183555D18(v6, v7, v8);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  return a1;
}

uint64_t getEnumTagSinglePayload for NWDomainSequence.Event(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 27)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NWDomainSequence.Event(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 26) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 27) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 27) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NWDomainSequence.Event()
{
  return &type metadata for NWDomainSequence.Event;
}

uint64_t destroy for NWDomainSequence.Event.EventType(uint64_t *a1)
{
  return sub_183555D18(*a1, a1[1], a1[2]);
}

uint64_t initializeWithCopy for NWDomainSequence.Event.EventType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_18355588C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for NWDomainSequence.Event.EventType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_18355588C(*(void *)a2, v4, v5);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_183555D18(v7, v8, v9);
  return a1;
}

uint64_t assignWithTake for NWDomainSequence.Event.EventType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_183555D18(v5, v7, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for NWDomainSequence.Event.EventType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NWDomainSequence.Event.EventType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_183556120(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for NWDomainSequence.Event.EventType()
{
  return &type metadata for NWDomainSequence.Event.EventType;
}

uint64_t initializeBufferWithCopyOfBuffer for NWDomainSequence.DomainIterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_183556148(a1, a2, a3, &qword_1E8F63DE0);
}

uint64_t sub_183556148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v7 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);

  return v7(a1, a2, v6);
}

uint64_t destroy for NWDomainSequence.DomainIterator(uint64_t a1, uint64_t a2)
{
  return sub_1835561C0(a1, a2, &qword_1E8F63DE0);
}

uint64_t sub_1835561C0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(a1, v4);
}

uint64_t initializeWithCopy for NWDomainSequence.DomainIterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_183556230(a1, a2, a3, &qword_1E8F63DE0);
}

uint64_t sub_183556230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  return a1;
}

uint64_t assignWithCopy for NWDomainSequence.DomainIterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1835562A0(a1, a2, a3, &qword_1E8F63DE0);
}

uint64_t sub_1835562A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  return a1;
}

uint64_t initializeWithTake for NWDomainSequence.DomainIterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_183556310(a1, a2, a3, &qword_1E8F63DE0);
}

uint64_t sub_183556310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  return a1;
}

uint64_t assignWithTake for NWDomainSequence.DomainIterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_183556380(a1, a2, a3, &qword_1E8F63DE0);
}

uint64_t sub_183556380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for NWDomainSequence.DomainIterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1835563F8);
}

uint64_t sub_1835563F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_1E8F63DE0);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);

  return v7(a1, a2, v6);
}

uint64_t storeEnumTagSinglePayload for NWDomainSequence.DomainIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_183556484);
}

uint64_t sub_183556484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_1E8F63DE0);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(a1, a2, a2, v7);
}

void sub_183556500(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_183556520(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t, ValueMetadata *, uint64_t, void))
{
  sub_1835565B4(319, a4, a5);
  if (v5 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1835565B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E8F63CE0);
    unint64_t v7 = a3(a1, &type metadata for NWDomainSequence.Event, v6, MEMORY[0x1E4FBC0F0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t *sub_183556628(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *unsigned int v3 = *a2;
    unsigned int v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1835566E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_183556730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_183556780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1835567D0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_18355692C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x183556B44);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t sub_183556B6C()
{
  return swift_deallocObject();
}

uint64_t sub_183556BA4(uint64_t a1)
{
  return sub_183554DA8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_183556BB0()
{
  return swift_deallocObject();
}

uint64_t sub_183556BC0()
{
  DNSServiceRefDeallocate(*(DNSServiceRef *)(v0 + 16));

  return swift_unknownObjectRelease();
}

uint64_t sub_183556BF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_183556C40(char a1, unsigned int a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63E48);
  uint64_t v27 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unsigned int v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63E40);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t result = MEMORY[0x1F4188790](v13);
  DNSServiceErrorType v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    uint64_t v28 = a5;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    if (a3)
    {
      sub_1834AC424();
      uint64_t v18 = swift_allocError();
      *(_DWORD *)uint64_t v19 = a3;
      *(unsigned char *)(v19 + 4) = 1;
      uint64_t v28 = v18;
      sub_183D4510C();
    }
    else if (a4)
    {
      uint64_t v20 = sub_183D44C9C();
      uint64_t v22 = v21;
      if (a2)
      {
        uint64_t v23 = nw_interface_create_with_index(a2);
        if (v23) {
          uint64_t v24 = (uint64_t)v23;
        }
        else {
          uint64_t v24 = 1;
        }
      }
      else
      {
        uint64_t v24 = 1;
      }
      uint64_t v25 = v27;
      uint64_t v28 = v20;
      uint64_t v29 = v22;
      uint64_t v30 = v24;
      BOOL v31 = (a1 & 2) == 0;
      BOOL v32 = (a1 & 4) != 0;
      char v33 = a1 & 1;
      swift_bridgeObjectRetain();
      sub_18315E9D4(v24);
      sub_183D450FC();
      swift_bridgeObjectRelease();
      sub_18315E51C(v24);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v10);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_183556EC0()
{
  if (nw_framer_message_copy_object_value(*(nw_framer_message_t *)(v0 + 16), "NWActorSystemType"))
  {
    sub_183D453DC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v2, 0, sizeof(v2));
  }
  sub_183531F48((uint64_t)v2, (uint64_t)v3);
  if (v4)
  {
    uint64_t result = swift_dynamicCast();
    if (result) {
      return LOBYTE(v2[0]);
    }
  }
  else
  {
    sub_183557E30((uint64_t)v3);
    return 0;
  }
  return result;
}

unint64_t sub_183556F68(char a1)
{
  unint64_t result = 0x64696C61766E69;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x614365746F6D6572;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0x6F7250796C706572;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_18355707C(char *a1, char *a2)
{
  return dword_183D58AE0[*a1] == dword_183D58AE0[*a2];
}

uint64_t sub_1835570A0()
{
  return sub_183D45B4C();
}

uint64_t sub_1835570F0()
{
  return sub_183D45B3C();
}

uint64_t sub_183557128()
{
  return sub_183D45B4C();
}

uint64_t sub_183557174@<X0>(unsigned int *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_183557F18(*a1);
  *a2 = result;
  return result;
}

void sub_1835571A0(_DWORD *a1@<X8>)
{
  *a1 = dword_183D58AE0[*v1];
}

unint64_t sub_1835571B8()
{
  return sub_183556F68(*v0);
}

uint64_t sub_1835571C0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v3 = sub_1834CCA40(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void *sub_183557200()
{
  uint64_t v0 = type metadata accessor for WireProtocol();
  type metadata accessor for NWProtocolFramer.Definition();
  swift_allocObject();
  uint64_t result = NWProtocolFramer.Definition.init(implementation:)(v0, (uint64_t)&off_1ECF5E010);
  qword_1E8F7A908 = (uint64_t)result;
  return result;
}

uint64_t _s7Network9TLVFramerCfD_0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WireProtocol()
{
  return self;
}

unint64_t sub_183557288()
{
  return 0xD000000000000017;
}

uint64_t sub_1835572A4()
{
  swift_release();

  return swift_allocObject();
}

uint64_t sub_1835572E0(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_1834D7CD4(__src, &__src[a2]);
  }
  sub_183D4439C();
  swift_allocObject();
  sub_183D4433C();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_183D444DC();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t sub_183557394(char a1, int a2)
{
  if (qword_1E8F62150 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1E8F7A908;
  type metadata accessor for NWProtocolFramer.Message();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = nw_framer_protocol_create_message(*(nw_protocol_definition_t *)(v4 + 32));
  size_t v8 = &type metadata for WireMessageType;
  LOBYTE(v7[0]) = a1;
  swift_retain();
  sub_183532324((uint64_t)v7, 0xD000000000000011, 0x8000000183E26280);
  size_t v8 = &type metadata for WireMessageOptions;
  v7[0] = a2;
  sub_183532324((uint64_t)v7, 0xD000000000000014, 0x8000000183E260F0);
  swift_release();
  return v5;
}

uint64_t sub_1835574A0(uint64_t a1)
{
  uint64_t v1 = *(NSObject **)(a1 + 16);
  v31[0] = &v35;
  uint64_t v2 = 12;
  while (1)
  {
    uint64_t v39 = 0;
    unsigned int v40 = 0;
    char v41 = 1;
    MEMORY[0x1F4188790](a1);
    v30[2] = 12;
    void v30[3] = &v39;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = sub_183557E90;
    *(void *)(v9 + 24) = v30;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = sub_183557EF8;
    *(void *)(v10 + 24) = v9;
    uint64_t v37 = sub_183557F10;
    uint64_t v38 = v10;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    long long v35 = sub_1835329C4;
    long long v36 = (ValueMetadata *)&block_descriptor_13;
    uint64_t v11 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    BOOL v12 = nw_framer_parse_input(v1, 0xCuLL, 0xCuLL, 0, v11);
    swift_unknownObjectRelease();
    _Block_release(v11);
    LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (v11) {
      break;
    }
    if (!v12 || (v41 & 1) != 0) {
      return v2;
    }
    int v14 = HIDWORD(v39);
    size_t v15 = v40;
    if ((v39 - 1) >= 8) {
      char v16 = 0;
    }
    else {
      char v16 = 0x706050403020001uLL >> (8 * (v39 - 1));
    }
    if (qword_1E8F62150 != -1) {
      swift_once();
    }
    uint64_t v17 = qword_1E8F7A908;
    type metadata accessor for NWProtocolFramer.Message();
    uint64_t inited = swift_initStackObject();
    message = nw_framer_protocol_create_message(*(nw_protocol_definition_t *)(v17 + 32));
    *(void *)(inited + 16) = message;
    long long v36 = &type metadata for WireMessageType;
    LOBYTE(aBlock[0]) = v16;
    sub_183531DFC((uint64_t)aBlock, (uint64_t)v32);
    uint64_t v20 = v33;
    if (v33)
    {
      uint64_t v21 = __swift_project_boxed_opaque_existential_2(v32, v33);
      v31[1] = v31;
      int v22 = v14;
      uint64_t v23 = *(void *)(v20 - 8);
      MEMORY[0x1F4188790](v21);
      uint64_t v25 = (char *)v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v23 + 16))(v25);
      uint64_t v26 = (void *)sub_183D4591C();
      uint64_t v27 = *(void (**)(char *, uint64_t))(v23 + 8);
      swift_retain();
      v27(v25, v20);
      int v14 = v22;
      uint64_t v2 = 12;
      __swift_destroy_boxed_opaque_existential_2((uint64_t)v32);
    }
    else
    {
      swift_retain();
      uint64_t v26 = 0;
    }
    nw_framer_message_set_object_value(message, "NWActorSystemType", v26);
    swift_unknownObjectRelease();
    sub_183557E30((uint64_t)aBlock);
    long long v36 = &type metadata for WireMessageOptions;
    LODWORD(aBlock[0]) = v14;
    uint64_t v28 = *(NSObject **)(inited + 16);
    sub_183531DFC((uint64_t)aBlock, (uint64_t)v32);
    uint64_t v29 = v33;
    if (v33)
    {
      int v3 = __swift_project_boxed_opaque_existential_2(v32, v33);
      uint64_t v4 = *(void *)(v29 - 8);
      MEMORY[0x1F4188790](v3);
      uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v4 + 16))(v6);
      unsigned int v7 = (void *)sub_183D4591C();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v29);
      __swift_destroy_boxed_opaque_existential_2((uint64_t)v32);
    }
    else
    {
      unsigned int v7 = 0;
    }
    nw_framer_message_set_object_value(v28, "NWActorSystemOptions", v7);
    swift_unknownObjectRelease();
    sub_183557E30((uint64_t)aBlock);
    swift_release();
    BOOL v8 = nw_framer_deliver_input_no_copy(v1, v15, *(nw_framer_message_t *)(inited + 16), 1);
    a1 = swift_unknownObjectRelease();
    if (!v8) {
      return 0;
    }
  }
  __break(1u);
  return result;
}

void sub_1835579C8(uint64_t a1, uint64_t a2, size_t a3)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  char v6 = sub_183556EC0();
  if (nw_framer_message_copy_object_value(*(nw_framer_message_t *)(a2 + 16), "NWActorSystemOptions"))
  {
    sub_183D453DC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(__src, 0, sizeof(__src));
  }
  sub_183531F48((uint64_t)__src, (uint64_t)&v37);
  if (!v39)
  {
    sub_183557E30((uint64_t)&v37);
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    int v7 = 0;
    goto LABEL_9;
  }
  int v7 = __src[0];
LABEL_9:
  if ((a3 & 0x8000000000000000) != 0 || HIDWORD(a3))
  {
    sub_183D456BC();
    __break(1u);
  }
  else
  {
    int v8 = dword_183D58AE0[v6];
    int v35 = v7;
    LODWORD(__src[0]) = v8;
    int v34 = a3;
    uint64_t v37 = sub_1834D7CD4(__src, (unsigned char *)__src + 4);
    uint64_t v38 = v9 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v10 = sub_1834D7CD4(&v35, __src);
    unint64_t v12 = v11 & 0xFFFFFFFFFFFFFFLL;
    sub_183D4455C();
    sub_1832E5E9C(v10, v12);
    uint64_t v13 = sub_1834D7CD4(&v34, &v35);
    unint64_t v15 = v14 & 0xFFFFFFFFFFFFFFLL;
    sub_183D4455C();
    sub_1832E5E9C(v13, v15);
    uint64_t v16 = v37;
    unint64_t v17 = v38;
    uint64_t v18 = *(NSObject **)(a1 + 16);
    swift_unknownObjectRetain();
    uint64_t v19 = (void *)sub_183D4452C();
    uint64_t v21 = NWCreateDispatchDataFromNSData(v19, v20);

    if (!v21) {
      __break(1u);
    }
    nw_framer_write_output_data(v18, v21);
    swift_unknownObjectRelease();

    sub_1832E5E9C(v16, v17);
    if (!nw_framer_write_output_no_copy(v18, a3))
    {
      sub_1834AC424();
      int v22 = (void *)swift_allocError();
      *(_DWORD *)uint64_t v23 = 22;
      *(unsigned char *)(v23 + 4) = 0;
      swift_willThrow();
      if (qword_1E8F621C0 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_183D4498C();
      __swift_project_value_buffer(v24, (uint64_t)qword_1E8F7A940);
      id v25 = v22;
      id v26 = v22;
      uint64_t v27 = sub_183D4496C();
      os_log_type_t v28 = sub_183D4529C();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        uint64_t v37 = v30;
        *(_DWORD *)uint64_t v29 = 136315138;
        *(void *)&__src[0] = v22;
        id v31 = v22;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63CE0);
        uint64_t v32 = sub_183D44B9C();
        *(void *)&__src[0] = sub_1834EFE70(v32, v33, &v37);
        sub_183D453AC();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1830D4000, v27, v28, "Hit error writing: %s", v29, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x185318E50](v30, -1, -1);
        MEMORY[0x185318E50](v29, -1, -1);
      }
      else
      {
      }
    }
  }
}

uint64_t sub_183557E30(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F61D90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_183557E90(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return 0;
  }
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  if (!a1)
  {
    if (v4 <= 0) {
      goto LABEL_4;
    }
    return 0;
  }
  if (a2 - a1 < v4) {
    return 0;
  }
LABEL_4:
  *(void *)uint64_t v5 = sub_183557F38(a1);
  *(_DWORD *)(v5 + 8) = v6;
  *(unsigned char *)(v5 + 12) = 0;
  return v4;
}

uint64_t sub_183557EE8()
{
  return swift_deallocObject();
}

uint64_t sub_183557EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_183532910(a1, a2, a3, *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t))(v3 + 16));
}

uint64_t sub_183557F00()
{
  return swift_deallocObject();
}

uint64_t sub_183557F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_183532964(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_183557F18(unsigned int a1)
{
  if (a1 > 8) {
    return 8;
  }
  else {
    return byte_183D58B00[a1];
  }
}

uint64_t sub_183557F38(uint64_t a1)
{
  if (!a1) {
    __break(1u);
  }
  sub_183D453AC();
  sub_183D453AC();
  sub_183D453AC();
  return 0;
}

uint64_t getEnumTagSinglePayload for WireMessageType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WireMessageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x183558158);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WireMessageType()
{
  return &type metadata for WireMessageType;
}

ValueMetadata *type metadata accessor for WireMessageOptions()
{
  return &type metadata for WireMessageOptions;
}

unint64_t sub_1835581A4()
{
  unint64_t result = qword_1E8F63E50;
  if (!qword_1E8F63E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63E50);
  }
  return result;
}

unint64_t sub_1835581FC()
{
  unint64_t result = qword_1E8F63E58;
  if (!qword_1E8F63E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63E58);
  }
  return result;
}

unint64_t sub_183558254()
{
  unint64_t result = qword_1E8F63E60;
  if (!qword_1E8F63E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63E60);
  }
  return result;
}

unint64_t sub_1835582AC()
{
  unint64_t result = qword_1E8F63E68;
  if (!qword_1E8F63E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63E68);
  }
  return result;
}

unint64_t sub_183558304()
{
  unint64_t result = qword_1E8F63E70;
  if (!qword_1E8F63E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63E70);
  }
  return result;
}

uint64_t sub_183558358@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  swift_getMetatypeMetadata();
  *a2 = sub_183D44B7C();
  a2[1] = v4;
  uint64_t v5 = (char *)a2 + *(int *)(type metadata accessor for NWActorID() + 20);
  uint64_t v6 = sub_183D445FC();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a1, v6);
}

uint64_t sub_1835583EC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63EC0);
  swift_allocObject();
  uint64_t result = sub_183D45C5C();
  qword_1E8F7A910 = result;
  return result;
}

uint64_t NWActorID.description.getter()
{
  return 0x49726F746341574ELL;
}

uint64_t type metadata accessor for NWActorID()
{
  uint64_t result = qword_1E8F61C78;
  if (!qword_1E8F61C78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t NWActorID.hash(into:)()
{
  return sub_183D44A7C();
}

uint64_t static NWActorID.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_183D4592C() & 1) == 0) {
    return 0;
  }
  type metadata accessor for NWActorID();

  return sub_183D445BC();
}

uint64_t sub_1835586DC()
{
  if (*v0) {
    return 0x696669746E656469;
  }
  else {
    return 0x656D614E65707974;
  }
}

uint64_t sub_18355871C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_183559B18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_183558744(uint64_t a1)
{
  unint64_t v2 = sub_183558974();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_183558780(uint64_t a1)
{
  unint64_t v2 = sub_183558974();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t NWActorID.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63E78);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_2(a1, a1[3]);
  sub_183558974();
  sub_183D45C0C();
  v8[15] = 0;
  sub_183D4584C();
  if (!v1)
  {
    type metadata accessor for NWActorID();
    v8[14] = 1;
    sub_183D445FC();
    sub_183559024(&qword_1E8F63E88, MEMORY[0x1E4F27990]);
    sub_183D4586C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_183558974()
{
  unint64_t result = qword_1E8F63E80;
  if (!qword_1E8F63E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63E80);
  }
  return result;
}

uint64_t NWActorID.hashValue.getter()
{
  return sub_183D45B4C();
}

uint64_t NWActorID.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v20 = sub_183D445FC();
  uint64_t v17 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63E90);
  uint64_t v19 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  BOOL v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NWActorID();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_2(a1, a1[3]);
  sub_183558974();
  sub_183D45BCC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2((uint64_t)a1);
  }
  uint64_t v16 = v8;
  uint64_t v12 = v19;
  uint64_t v11 = v20;
  char v23 = 0;
  uint64_t v13 = v21;
  *uint64_t v10 = sub_183D457BC();
  v10[1] = v14;
  char v22 = 1;
  sub_183559024(&qword_1E8F63E98, MEMORY[0x1E4F27990]);
  sub_183D457DC();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v13);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))((char *)v10 + *(int *)(v16 + 20), v5, v11);
  sub_183558F78((uint64_t)v10, v18);
  __swift_destroy_boxed_opaque_existential_2((uint64_t)a1);
  return sub_183559D34((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for NWActorID);
}

uint64_t sub_183558D80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NWActorID.init(from:)(a1, a2);
}

uint64_t sub_183558D98(void *a1)
{
  return NWActorID.encode(to:)(a1);
}

uint64_t sub_183558DB0()
{
  return sub_183D45B4C();
}

uint64_t sub_183558E50()
{
  return sub_183D44A7C();
}

uint64_t sub_183558EDC()
{
  return sub_183D45B4C();
}

uint64_t sub_183558F78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWActorID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_183558FDC()
{
  return sub_183559024(&qword_1E8F63EA0, (void (*)(uint64_t))type metadata accessor for NWActorID);
}

uint64_t sub_183559024(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_183559070(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_183D4592C() & 1) == 0) {
    return 0;
  }

  return sub_183D445BC();
}

uint64_t *initializeBufferWithCopyOfBuffer for NWActorID(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    BOOL v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_183D445FC();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for NWActorID(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_183D445FC();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for NWActorID(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  BOOL v7 = (char *)a2 + v5;
  uint64_t v8 = sub_183D445FC();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for NWActorID(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  BOOL v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_183D445FC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for NWActorID(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_183D445FC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for NWActorID(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_183D445FC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for NWActorID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1835594A4);
}

uint64_t sub_1835594A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_183D445FC();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for NWActorID(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_183559568);
}

uint64_t sub_183559568(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_183D445FC();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_183559610()
{
  uint64_t result = sub_183D445FC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NWActorID.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x183559774);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NWActorID.CodingKeys()
{
  return &type metadata for NWActorID.CodingKeys;
}

unint64_t sub_1835597B0()
{
  unint64_t result = qword_1E8F63EA8;
  if (!qword_1E8F63EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63EA8);
  }
  return result;
}

unint64_t sub_183559808()
{
  unint64_t result = qword_1E8F63EB0;
  if (!qword_1E8F63EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63EB0);
  }
  return result;
}

unint64_t sub_183559860()
{
  unint64_t result = qword_1E8F63EB8;
  if (!qword_1E8F63EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63EB8);
  }
  return result;
}

uint64_t sub_1835598B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62DD0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v19 - v8;
  uint64_t v10 = sub_183D445FC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[1];
  *a2 = *a1;
  a2[1] = v14;
  swift_bridgeObjectRetain();
  sub_183D4459C();
  sub_183559C18((uint64_t)v9, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1)
  {
    sub_183559C80((uint64_t)v7);
    sub_183559CE0();
    swift_allocError();
    *unint64_t v15 = 0xD000000000000012;
    v15[1] = 0x8000000183E262C0;
    swift_willThrow();
    sub_183559C80((uint64_t)v9);
    sub_183559D34((uint64_t)a1, type metadata accessor for NWActorSystemProtobuf_ActorID);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v17(v13, v7, v10);
    sub_183559C80((uint64_t)v9);
    sub_183559D34((uint64_t)a1, type metadata accessor for NWActorSystemProtobuf_ActorID);
    uint64_t v18 = type metadata accessor for NWActorID();
    return ((uint64_t (*)(char *, char *, uint64_t))v17)((char *)a2 + *(int *)(v18 + 20), v13, v10);
  }
}

uint64_t sub_183559B18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D614E65707974 && a2 == 0xE800000000000000;
  if (v2 || (sub_183D4592C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_183D4592C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_183559C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62DD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_183559C80(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F62DD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_183559CE0()
{
  unint64_t result = qword_1E8F63EC8;
  if (!qword_1E8F63EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8F63EC8);
  }
  return result;
}

uint64_t sub_183559D34(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t dispatch thunk of NWCustomSerializable.init(serializedData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of NWCustomSerializable.serializedData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_183559DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1F4188790](a1);
  if (v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v3, a3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63D30);
    if (swift_dynamicCast())
    {
      sub_1834D9964(v15, (uint64_t)v17);
      uint64_t v10 = v18;
      uint64_t v11 = v19;
      __swift_project_boxed_opaque_existential_2(v17, v18);
      uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v10, v11);
      __swift_destroy_boxed_opaque_existential_2((uint64_t)v17);
      return v12;
    }
    uint64_t v16 = 0;
    memset(v15, 0, sizeof(v15));
    sub_183559F84((uint64_t)v15);
  }
  uint64_t v12 = a1;
  uint64_t v13 = sub_183D4427C();
  if (!v4) {
    return v13;
  }
  return v12;
}

uint64_t sub_183559F84(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F63ED0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_183559FE4(char *result, char *a2)
{
  uint64_t v3 = *v2;
  int64_t v4 = *((void *)*v2 + 2);
  int64_t v5 = (int64_t)&a2[v4];
  if (__OFADD__(v4, a2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    if (result) {
      BOOL v18 = result == a2;
    }
    else {
      BOOL v18 = 1;
    }
    if (v18) {
      goto LABEL_13;
    }
    int64_t v19 = *((void *)v3 + 2);
    char v20 = *result++;
    LOBYTE(v12) = v20;
    int64_t v6 = 16;
    while (1)
    {
      unint64_t v21 = *((void *)v3 + 3);
      int64_t v14 = v21 >> 1;
      int64_t v22 = v19 + 1;
      if ((uint64_t)(v21 >> 1) < v19 + 1)
      {
        int v34 = result;
        uint64_t v32 = a2;
        unint64_t v33 = sub_1834B4598((char *)(v21 > 1), v19 + 1, 1, v3);
        int64_t v22 = v19 + 1;
        a2 = v32;
        uint64_t v3 = v33;
        unint64_t result = v34;
        int64_t v14 = *((void *)v3 + 3) >> 1;
        if (v19 >= v14) {
          goto LABEL_23;
        }
      }
      else if (v19 >= v14)
      {
        goto LABEL_23;
      }
      v3[v19 + 32] = v12;
      if (result == a2)
      {
LABEL_41:
        *((void *)v3 + 2) = v22;
        goto LABEL_13;
      }
      char v23 = (char *)(v14 + ~v19);
      if (v23 >= &a2[~(unint64_t)result]) {
        char v23 = &a2[~(unint64_t)result];
      }
      uint64_t v24 = v23 + 1;
      if ((unint64_t)(v23 + 1) > 0x10 && (unint64_t)(&v3[v19] - result + 33) >= 0x10)
      {
        id v25 = (long long *)result;
        int64_t v26 = v24 & 0xF;
        if ((v24 & 0xF) == 0) {
          int64_t v26 = v6;
        }
        uint64_t v27 = &v24[-v26];
        v22 += (int64_t)v27;
        unint64_t result = &v27[(void)result];
        os_log_type_t v28 = &v3[v19 + 33];
        do
        {
          long long v29 = *v25++;
          *(_OWORD *)os_log_type_t v28 = v29;
          v28 += 16;
          v27 -= 16;
        }
        while (v27);
      }
      uint64_t v30 = result++;
      while (1)
      {
        char v31 = *v30++;
        LOBYTE(v12) = v31;
        if (v14 == v22) {
          break;
        }
        v3[v22++ + 32] = v12;
        ++result;
        if (v30 == a2) {
          goto LABEL_41;
        }
      }
LABEL_22:
      int64_t v19 = v14;
LABEL_23:
      *((void *)v3 + 2) = v19;
    }
  }
  int64_t v6 = (int64_t)a2;
  uint64_t v7 = result;
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v9 = *((void *)v3 + 3) >> 1, v9 < v5))
  {
    if (v4 <= v5) {
      int64_t v10 = v5;
    }
    else {
      int64_t v10 = v4;
    }
    uint64_t v3 = sub_1834B4598(isUniquelyReferenced_nonNull_native, v10, 1, v3);
    int64_t v9 = *((void *)v3 + 3) >> 1;
  }
  uint64_t v11 = *((void *)v3 + 2);
  uint64_t v12 = v9 - v11;
  unint64_t result = sub_18356C344(&v3[v11 + 32], v9 - v11, v7, v6);
  if (v13 < v6) {
    goto LABEL_15;
  }
  if (v13 >= 1)
  {
    uint64_t v15 = *((void *)v3 + 2);
    BOOL v16 = __OFADD__(v15, v13);
    uint64_t v17 = v15 + v13;
    if (v16)
    {
      __break(1u);
      goto LABEL_22;
    }
    *((void *)v3 + 2) = v17;
  }
  if (v13 == v12) {
    goto LABEL_16;
  }
LABEL_13:
  *uint64_t v2 = v3;
  return result;
}

uint64_t sub_18355A1FC(uint64_t result, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    unint64_t result = sub_183D44CAC();
    uint64_t v3 = result;
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    uint64_t v3 = HIBYTE(a2) & 0xF;
  }
  else
  {
    uint64_t v3 = result & 0xFFFFFFFFFFFFLL;
  }
  int64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v2 = v4;
    if (!isUniquelyReferenced_nonNull_native || *((void *)v4 + 3) >> 1 < v6)
    {
      if (v5 <= v6) {
        int64_t v8 = v5 + v3;
      }
      else {
        int64_t v8 = v5;
      }
      int64_t v4 = sub_1834B4598(isUniquelyReferenced_nonNull_native, v8, 1, v4);
      *uint64_t v2 = v4;
    }
    swift_bridgeObjectRetain();
    unint64_t result = sub_183D4548C();
    if (v9) {
      goto LABEL_22;
    }
    uint64_t v10 = result;
    unint64_t result = swift_bridgeObjectRelease_n();
    if (v10 >= v3)
    {
      if (v10 < 1)
      {
LABEL_17:
        *uint64_t v2 = v4;
        return result;
      }
      uint64_t v11 = *((void *)v4 + 2);
      BOOL v12 = __OFADD__(v11, v10);
      uint64_t v13 = v11 + v10;
      if (!v12)
      {
        *((void *)v4 + 2) = v13;
        goto LABEL_17;
      }
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_18355A328(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1834B4DA8(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63EE0);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_183D4571C();
  __break(1u);
  return result;
}

void *sub_18355A4A0(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  if (a1) {
    uint64_t v4 = a2 - a1;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t result = a3(&v6, a1, v4);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

uint64_t Connection1.__allocating_init(using:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  Connection1.init(using:)(a1);
  return v2;
}

uint64_t sub_18355A534@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void *sub_18355A53C()
{
  uint64_t v0 = type metadata accessor for TLVFramer();
  type metadata accessor for NWProtocolFramer.Definition();
  swift_allocObject();
  uint64_t result = NWProtocolFramer.Definition.init(implementation:)(v0, (uint64_t)&protocol witness table for TLVFramer);
  qword_1E8F7A918 = (uint64_t)result;
  return result;
}

uint64_t static TLVFramer.label.getter()
{
  return 5655636;
}

uint64_t TLVFramer.__allocating_init(framer:)()
{
  swift_release();

  return swift_allocObject();
}

uint64_t TLVFramer.init(framer:)()
{
  swift_release();
  return v0;
}

uint64_t sub_18355A5F4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = 0;
  if ((a3 & 1) == 0 && a1 && a2 - a1 >= 8)
  {
    sub_183D453AC();
    *(void *)a5 = 0;
    *(unsigned char *)(a5 + 8) = 0;
    return 8;
  }
  return result;
}

uint64_t sub_18355A694()
{
  if (nw_framer_message_copy_object_value(*(nw_framer_message_t *)(v0 + 16), "Type"))
  {
    sub_183D453DC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v2, 0, sizeof(v2));
  }
  sub_183138964((uint64_t)v2, (uint64_t)v3, (uint64_t *)&unk_1E8F61D90);
  if (v4)
  {
    uint64_t result = swift_dynamicCast();
    if (result) {
      return LODWORD(v2[0]);
    }
  }
  else
  {
    sub_183138A24((uint64_t)v3, (uint64_t *)&unk_1E8F61D90);
    return 0;
  }
  return result;
}

uint64_t TLVFramer.deinit()
{
  return v0;
}

uint64_t sub_18355A754()
{
  return 5655636;
}

uint64_t sub_18355A764()
{
  swift_release();
  type metadata accessor for TLVFramer();

  return swift_allocObject();
}

uint64_t static ProtocolStackBuilder.buildBlock(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16))(a1, a3, a6);
  if (a5)
  {
    uint64_t v12 = (uint64_t *)(a7 & 0xFFFFFFFFFFFFFFFELL);
    do
    {
      uint64_t v14 = *v12++;
      uint64_t v13 = v14;
      uint64_t v16 = *a2++;
      uint64_t v15 = v16;
      uint64_t v17 = *a4++;
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v15, v17);
      --a5;
    }
    while (a5);
  }
  return result;
}

uint64_t Configuration.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, nw_parameters_t *a8@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v68 = a1;
  uint64_t v72 = a8;
  uint64_t v63 = sub_183D45B7C();
  uint64_t v62 = *(void *)(v63 - 8);
  uint64_t TupleTypeMetadata = MEMORY[0x1F4188790](v63);
  uint64_t v61 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3) {
    goto LABEL_8;
  }
  MEMORY[0x1F4188790](TupleTypeMetadata);
  uint64_t v17 = (uint64_t *)((char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v17 = a4;
  if (a3 >= 6 && (unint64_t)v17 - v15 + 8 >= 0x20)
  {
    unint64_t v18 = a3 & 0xFFFFFFFFFFFFFFFCLL;
    uint64_t v57 = v17 + 3;
    uint64_t v58 = (long long *)(v15 + 16);
    unint64_t v59 = a3 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      long long v60 = *v58;
      *(v57 - 1) = *(v58 - 1);
      *uint64_t v57 = v60;
      v57 += 2;
      v58 += 2;
      v59 -= 4;
    }
    while (v59);
    if (v18 == a3) {
      goto LABEL_7;
    }
  }
  else
  {
    unint64_t v18 = 0;
  }
  unint64_t v19 = a3 - v18;
  uint64_t v20 = 8 * v18;
  unint64_t v21 = &v17[v18 + 1];
  int64_t v22 = (uint64_t *)(v15 + v20);
  do
  {
    uint64_t v23 = *v22++;
    *v21++ = v23;
    --v19;
  }
  while (v19);
LABEL_7:
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  a4 = TupleTypeMetadata;
LABEL_8:
  uint64_t v73 = a5;
  uint64_t v74 = a6;
  uint64_t v70 = &v61;
  uint64_t v24 = *(void *)(a4 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](TupleTypeMetadata);
  uint64_t v27 = (char *)&v61 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v67 = &v61;
  uint64_t v28 = MEMORY[0x1F4188790](v25);
  uint64_t v30 = (char *)&v61 - v29;
  uint64_t v66 = &v61;
  MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)&v61 - v31;
  nw_parameters_t v33 = nw_parameters_create();
  uint64_t v65 = &v61;
  nw_parameters_t v82 = v33;
  MEMORY[0x1F4188790](v33);
  int v35 = (char *)&v61 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = a7;
  if (a3)
  {
    long long v36 = (int *)(a4 + 48);
    unint64_t v37 = a3;
    uint64_t v38 = v35;
    do
    {
      uint64_t v39 = *v36;
      v36 += 4;
      *v38++ = &v32[v39];
      --v37;
    }
    while (v37);
    uint64_t v40 = *(int *)(a4 + 32);
  }
  else
  {
    uint64_t v40 = 0;
  }
  ((void (*)(char *))v68)(&v32[v40]);
  uint64_t v81 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v68 = v24;
  char v41 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  v41(v30, v32, a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63EE0);
  int v42 = swift_dynamicCast();
  uint64_t v69 = a4;
  if (!v42)
  {
    v79[3] = a4;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v79);
    v41((char *)boxed_opaque_existential_0, v32, a4);
    unint64_t v49 = v61;
    sub_183D45B5C();
    sub_183D45B6C();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v49, v63);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63EE8);
    uint64_t v50 = sub_183D4565C();
    swift_release();
    uint64_t v51 = *(void *)(v50 + 16);
    if (v51)
    {
      uint64_t v52 = v50 + 32;
      uint64_t v64 = v50;
      swift_bridgeObjectRetain();
      uint64_t v53 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        sub_183138900(v52, (uint64_t)v78, &qword_1E8F63EE8);
        sub_183138964((uint64_t)v78, (uint64_t)&v75, &qword_1E8F63EE8);
        if (v76)
        {
          sub_1834D9964(&v75, (uint64_t)v77);
          sub_1834D9964(v77, (uint64_t)&v75);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v53 = sub_1834B4DA8(0, v53[2] + 1, 1, v53);
          }
          unint64_t v55 = v53[2];
          unint64_t v54 = v53[3];
          if (v55 >= v54 >> 1) {
            uint64_t v53 = sub_1834B4DA8((void *)(v54 > 1), v55 + 1, 1, v53);
          }
          v53[2] = v55 + 1;
          sub_1834D9964(&v75, (uint64_t)&v53[5 * v55 + 4]);
        }
        else
        {
          sub_183138A24((uint64_t)&v75, &qword_1E8F63EE8);
        }
        v52 += 40;
        --v51;
      }
      while (v51);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v53 = (void *)MEMORY[0x1E4FBC860];
    }
    sub_18355A328((uint64_t)v53);
    unint64_t v43 = v81;
    uint64_t v46 = v81[2];
    if (v46) {
      goto LABEL_19;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  __swift_destroy_boxed_opaque_existential_2((uint64_t)v80);
  v41(v27, v32, a4);
  swift_dynamicCast();
  unint64_t v43 = v81;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v43 = sub_1834B4DA8(0, v43[2] + 1, 1, v43);
  }
  unint64_t v45 = v43[2];
  unint64_t v44 = v43[3];
  if (v45 >= v44 >> 1) {
    unint64_t v43 = sub_1834B4DA8((void *)(v44 > 1), v45 + 1, 1, v43);
  }
  uint64_t v43[2] = v45 + 1;
  sub_1834D9964(v78, (uint64_t)&v43[5 * v45 + 4]);
  uint64_t v81 = v43;
  uint64_t v46 = v43[2];
  if (!v46) {
    goto LABEL_35;
  }
LABEL_19:
  id v47 = v43 + 4;
  swift_bridgeObjectRetain();
  do
  {
    sub_18355AFCC(v47);
    v47 += 5;
    --v46;
  }
  while (v46);
  swift_bridgeObjectRelease_n();
LABEL_36:
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v32, v69);
  nw_parameters_t *v72 = v82;
  return result;
}

uint64_t sub_18355AFCC(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  __swift_project_boxed_opaque_existential_2(a1, v1);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 8);
  uint64_t v4 = swift_unknownObjectRetain();
  v3(v4, v1, v2);
  return swift_unknownObjectRelease();
}

uint64_t Configuration.requiredInterface(_:)@<X0>(NSObject **a1@<X0>, NSObject **a2@<X8>)
{
  uint64_t v4 = *a1;
  int64_t v5 = *v2;
  if ((unint64_t)*a1 >= 2) {
    swift_unknownObjectRetain();
  }
  else {
    uint64_t v4 = 0;
  }
  nw_parameters_require_interface(v5, v4);
  swift_unknownObjectRelease();
  *a2 = v5;

  return swift_unknownObjectRetain();
}

uint64_t Configuration.requiredInterfaceType(_:)@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X8>)
{
  return sub_18355B5C4(a1, (void (*)(uint64_t, void))nw_parameters_set_required_interface_type, a2);
}

uint64_t Configuration.requiredInterfaceSubtype(_:)@<X0>(char *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  nw_parameters_set_required_interface_subtype(v4, dword_183D594A8[*a1]);
  *a2 = v4;

  return swift_unknownObjectRetain();
}

void Configuration.prohibitedInterfaces(_:)(uint64_t a1@<X0>, NSObject **a2@<X8>)
{
  int64_t v5 = *v2;
  nw_parameters_clear_prohibited_interfaces(*v2);
  if (a1)
  {
    uint64_t v6 = *(void *)(a1 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = 0;
      while (1)
      {
        unint64_t v8 = *(NSObject **)(a1 + 8 * v7 + 32);
        if (v8 != 1)
        {
          if (!v8)
          {
            __break(1u);
            return;
          }
          nw_parameters_prohibit_interface(v5, v8);
        }
        if (v6 == ++v7)
        {
          swift_bridgeObjectRelease();
          break;
        }
      }
    }
  }
  *a2 = v5;

  swift_unknownObjectRetain();
}

uint64_t Configuration.prohibitedInterfaceTypes(_:)@<X0>(uint64_t a1@<X0>, NSObject **a2@<X8>)
{
  int64_t v5 = *v2;
  nw_parameters_clear_prohibited_interface_types(*v2);
  if (a1)
  {
    uint64_t v6 = *(void *)(a1 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v6; ++i)
      {
        nw_interface_type_t v8 = *(unsigned __int8 *)(a1 + i + 32);
        nw_parameters_prohibit_interface_type(v5, v8);
      }
      swift_bridgeObjectRelease();
    }
  }
  *a2 = v5;

  return swift_unknownObjectRetain();
}

uint64_t Configuration.prohibitedInterfaceSubtypes(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  int64_t v5 = *v2;
  xpc_object_t v6 = xpc_array_create(0, 0);
  if (a1)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    if (v7)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = 0;
      do
      {
        uint64_t v9 = *(char *)(a1 + v8++ + 32);
        xpc_object_t v10 = xpc_uint64_create(qword_183D594C0[v9]);
        xpc_array_append_value(v6, v10);
        swift_unknownObjectRelease();
      }
      while (v7 != v8);
      swift_bridgeObjectRelease();
    }
  }
  nw_parameters_set_prohibited_interface_subtypes(v5, v6);
  swift_unknownObjectRelease();
  *a2 = v5;

  return swift_unknownObjectRetain();
}

uint64_t Configuration.prohibitExpensivePaths(_:)@<X0>(char a1@<W0>, void *a2@<X8>)
{
  return sub_18355B560(a1, (void (*)(uint64_t, void))nw_parameters_set_prohibit_expensive, a2);
}

uint64_t Configuration.prohibitConstrainedPaths(_:)@<X0>(char a1@<W0>, void *a2@<X8>)
{
  return sub_18355B560(a1, (void (*)(uint64_t, void))nw_parameters_set_prohibit_constrained, a2);
}

uint64_t Configuration.preferNoProxies(_:)@<X0>(char a1@<W0>, void *a2@<X8>)
{
  return sub_18355B560(a1, (void (*)(uint64_t, void))nw_parameters_set_prefer_no_proxy, a2);
}

uint64_t Configuration.localEndpoint(_:)@<X0>(uint64_t a1@<X0>, NSObject **a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB266A50);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_183138900(a1, (uint64_t)v7, qword_1EB266A50);
  uint64_t v9 = type metadata accessor for NWEndpoint();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9) == 1)
  {
    sub_183138A24((uint64_t)v7, qword_1EB266A50);
    xpc_object_t v10 = 0;
  }
  else
  {
    xpc_object_t v10 = NWEndpoint.nw.getter();
    sub_1834D7F64((uint64_t)v7);
  }
  nw_parameters_set_local_endpoint(v8, v10);
  swift_unknownObjectRelease();
  *a2 = v8;
  return swift_unknownObjectRetain();
}

uint64_t Configuration.allowLocalEndpointReuse(_:)@<X0>(char a1@<W0>, void *a2@<X8>)
{
  return sub_18355B560(a1, (void (*)(uint64_t, void))nw_parameters_set_reuse_local_address, a2);
}

uint64_t Configuration.localOnly(_:)@<X0>(char a1@<W0>, void *a2@<X8>)
{
  return sub_18355B560(a1, (void (*)(uint64_t, void))nw_parameters_set_local_only, a2);
}

uint64_t Configuration.includePeerToPeer(_:)@<X0>(char a1@<W0>, void *a2@<X8>)
{
  return sub_18355B560(a1, (void (*)(uint64_t, void))nw_parameters_set_include_peer_to_peer, a2);
}

uint64_t Configuration.requiresDNSSECValidation(_:)@<X0>(char a1@<W0>, void *a2@<X8>)
{
  return sub_18355B560(a1, (void (*)(uint64_t, void))nw_parameters_set_requires_dnssec_validation, a2);
}

uint64_t Configuration.serviceClass(_:)@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X8>)
{
  return sub_18355B5C4(a1, (void (*)(uint64_t, void))nw_parameters_set_service_class, a2);
}

uint64_t Configuration.multipathServiceType(_:)@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X8>)
{
  return sub_18355B5C4(a1, (void (*)(uint64_t, void))nw_parameters_set_multipath_service, a2);
}

uint64_t Configuration.allowFastOpen(_:)@<X0>(char a1@<W0>, void *a2@<X8>)
{
  return sub_18355B560(a1, (void (*)(uint64_t, void))nw_parameters_set_fast_open_enabled, a2);
}

uint64_t sub_18355B560@<X0>(char a1@<W0>, void (*a2)(uint64_t, void)@<X2>, void *a3@<X8>)
{
  uint64_t v5 = *v3;
  a2(v5, a1 & 1);
  *a3 = v5;

  return swift_unknownObjectRetain();
}

uint64_t Configuration.expiredDNSBehavior(_:)@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X8>)
{
  return sub_18355B5C4(a1, (void (*)(uint64_t, void))nw_parameters_set_expired_dns_behavior, a2);
}

uint64_t sub_18355B5C4@<X0>(unsigned __int8 *a1@<X0>, void (*a2)(uint64_t, void)@<X2>, void *a3@<X8>)
{
  uint64_t v5 = *v3;
  a2(v5, *a1);
  *a3 = v5;

  return swift_unknownObjectRetain();
}

uint64_t sub_18355B610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_183D4503C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = sub_183D4504C();
  sub_183D4501C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
}

uint64_t AsyncProperty.Iterator.next()(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = sub_183D4503C();
  *uint64_t v3 = v1;
  v3[1] = sub_1834B5EB0;
  return MEMORY[0x1F4187D60](a1, v4);
}

uint64_t sub_18355B7DC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_18350F178;
  return AsyncProperty.Iterator.next()(a1);
}

uint64_t sub_18355B884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_18355B950;
  return MEMORY[0x1F4187C88](a1, a2, a3, a5, a6);
}

uint64_t sub_18355B950()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t AsyncProperty.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_183D44FDC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v10 - v4);
  uint64_t v6 = sub_183D4504C();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v10 - v7;
  *uint64_t v5 = 1;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBD018], v2);
  sub_183D4505C();
  swift_release();
  return sub_18355B610((uint64_t)v8, a1);
}

uint64_t sub_18355BBB0()
{
  uint64_t v0 = sub_183D452EC();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_183D452DC();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_183D449EC();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1834B9584();
  sub_183D449DC();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_183570288(&qword_1E8F62ED8, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F63D50);
  sub_1835702D0((unint64_t *)&qword_1E8F62EE0, (uint64_t *)&unk_1E8F63D50);
  sub_183D453FC();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t result = sub_183D4531C();
  qword_1E8F7A920 = result;
  return result;
}

uint64_t Connection1.__allocating_init(to:using:)(uint64_t a1, NSObject **a2)
{
  uint64_t v4 = swift_allocObject();
  Connection1.init(to:using:)(a1, a2);
  return v4;
}

uint64_t Connection1.init(to:using:)(uint64_t a1, NSObject **a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for NWEndpoint();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a2;
  *(void *)(v3 + 24) = MEMORY[0x1E4FBC870];
  uint64_t v10 = NWEndpoint.nw.getter();
  if (v10)
  {
    uint64_t v11 = v10;
    if (nw_endpoint_get_type(v10) == nw_endpoint_type_url)
    {
      uint64_t v12 = (void *)swift_unknownObjectRetain();
      nw_parameters_set_url_endpoint(v12, v11);
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  sub_1834D7F00(a1, (uint64_t)v8);
  nw_parameters_t v13 = nw_parameters_copy(v9);
  swift_unknownObjectRelease();
  type metadata accessor for NWParameters();
  uint64_t v14 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61EA0);
  uint64_t v15 = swift_allocObject();
  *(_DWORD *)(v15 + 24) = 0;
  *(void *)(v15 + 16) = v13;
  *(void *)(v14 + 16) = v15;
  type metadata accessor for NWConnection(0);
  swift_allocObject();
  sub_183576AC0((uint64_t)v8, v14);
  uint64_t v17 = v16;
  swift_release();
  *(void *)(v3 + 16) = v17;
  swift_retain();
  swift_retain();
  sub_18315ED5C((uint64_t)sub_18356D290);
  NWConnection.stateUpdateHandler.setter((uint64_t)sub_18356D290, v3);
  swift_release();
  swift_release();
  if (qword_1E8F62168 != -1) {
    swift_once();
  }
  NWConnection.start(queue:)(qword_1E8F7A920);
  sub_1834D7F64(a1);
  return v3;
}

uint64_t Connection1.init(using:)(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC870];
  *(void *)(v1 + 16) = a1;
  *(void *)(v1 + 24) = v2;
  swift_retain_n();
  swift_retain();
  sub_18315ED5C((uint64_t)sub_18356D290);
  NWConnection.stateUpdateHandler.setter((uint64_t)sub_18356D290, v1);
  swift_release();
  swift_release();
  uint64_t v3 = qword_1E8F62168;
  swift_retain();
  if (v3 != -1) {
    swift_once();
  }
  NWConnection.start(queue:)(qword_1E8F7A920);
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_18355C110(unsigned int *a1, uint64_t a2)
{
  unint64_t v3 = *a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32);
  swift_beginAccess();
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v18 = v4 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v4 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (v7) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v13 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v13 < v8)
    {
      unint64_t v14 = *(void *)(v18 + 8 * v13);
      ++v10;
      if (v14) {
        goto LABEL_20;
      }
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v18 + 8 * v10);
      if (v14) {
        goto LABEL_20;
      }
      int64_t v10 = v13 + 2;
      if (v13 + 2 >= v8) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v18 + 8 * v10);
      if (v14)
      {
LABEL_20:
        unint64_t v7 = (v14 - 1) & v14;
        for (unint64_t i = __clz(__rbit64(v14)) + (v10 << 6); ; unint64_t i = v11 | (v10 << 6))
        {
          sub_183570200(*(void *)(v4 + 48) + 40 * i, (uint64_t)v26);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644F8);
          if (swift_dynamicCast())
          {
            sub_1834D9964(v21, (uint64_t)v23);
            uint64_t v16 = v24;
            uint64_t v17 = v25;
            __swift_project_boxed_opaque_existential_2(v23, v24);
            char v20 = BYTE4(v3);
            int v19 = v3;
            (*(void (**)(int *, uint64_t, uint64_t))(v17 + 8))(&v19, v16, v17);
            uint64_t result = __swift_destroy_boxed_opaque_existential_2((uint64_t)v23);
            if (!v7) {
              goto LABEL_7;
            }
          }
          else
          {
            uint64_t v22 = 0;
            memset(v21, 0, sizeof(v21));
            uint64_t result = sub_183138A24((uint64_t)v21, &qword_1E8F64500);
            if (!v7) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v11 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
        }
      }
      int64_t v15 = v13 + 3;
      if (v15 < v8)
      {
        unint64_t v14 = *(void *)(v18 + 8 * v15);
        if (v14)
        {
          int64_t v10 = v15;
          goto LABEL_20;
        }
        while (1)
        {
          int64_t v10 = v15 + 1;
          if (__OFADD__(v15, 1)) {
            goto LABEL_26;
          }
          if (v10 >= v8) {
            return swift_release();
          }
          unint64_t v14 = *(void *)(v18 + 8 * v10);
          ++v15;
          if (v14) {
            goto LABEL_20;
          }
        }
      }
    }
    return swift_release();
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t Connection1.deinit()
{
  nw_connection_cancel(*(nw_connection_t *)(*(void *)(v0 + 16) + 16));
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Connection1.__deallocating_deinit()
{
  Connection1.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_18355C3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  unint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  (*(void (**)(char *))(v4 + 16))(v7);
  swift_beginAccess();
  sub_183D4518C();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, a3);
}

uint64_t sub_18355C504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a6;
  uint64_t v32 = a7;
  v28[1] = a5;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  int64_t v10 = (void *)*v7;
  uint64_t v11 = sub_183D449CC();
  uint64_t v35 = *(void *)(v11 - 8);
  uint64_t v36 = v11;
  MEMORY[0x1F4188790](v11);
  int64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_183D449EC();
  uint64_t v33 = *(void *)(v14 - 8);
  uint64_t v34 = v14;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a2 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x1F4188790](v15);
  char v20 = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E8F62168 != -1) {
    swift_once();
  }
  void v28[2] = qword_1E8F7A920;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
  unint64_t v21 = (*(unsigned __int8 *)(v18 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = v10[10];
  *((void *)v22 + 3) = v10[11];
  *((void *)v22 + 4) = swift_allocateMetadataPack();
  *((void *)v22 + 5) = a2;
  *((void *)v22 + 6) = v10[13];
  uint64_t WitnessTablePack = swift_allocateWitnessTablePack();
  uint64_t v24 = v29;
  *((void *)v22 + 7) = WitnessTablePack;
  *((void *)v22 + 8) = v24;
  *((void *)v22 + 9) = v30;
  *((void *)v22 + 10) = v7;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v22[v21], v20, a2);
  aBlock[4] = v31;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_183137440;
  aBlock[3] = v32;
  uint64_t v25 = _Block_copy(aBlock);
  swift_retain();
  sub_183D449DC();
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_183570288((unint64_t *)&qword_1EB2669E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB2669C0);
  sub_1835702D0((unint64_t *)&qword_1EB2669D0, (uint64_t *)&unk_1EB2669C0);
  uint64_t v26 = v36;
  sub_183D453FC();
  MEMORY[0x1853146E0](0, v17, v13, v25);
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v26);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v34);
  return swift_release();
}

uint64_t sub_18355C900()
{
  uint64_t v0 = sub_183D4536C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v3 = (char *)&v5 - v2;
  swift_beginAccess();
  sub_183D4519C();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

BOOL static SendProgress.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_18355CA28()
{
  return sub_183D45B0C();
}

uint64_t sub_18355CA54@<X0>(uint64_t a1@<X8>)
{
  return sub_183560F00(&qword_1E8F63F00, &qword_1E8F63F08, a1);
}

uint64_t sub_18355CA68(uint64_t a1)
{
  return sub_183560F74(a1, &qword_1E8F63F00, &qword_1E8F63F08);
}

uint64_t sub_18355CA7C@<X0>(void *a1@<X8>)
{
  unint64_t v3 = (uint64_t *)(v1 + qword_1E8F63F10);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v9 = v3[4];
  uint64_t v8 = v3[5];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v9;
  a1[5] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_18355CB18(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + qword_1E8F64248);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(v1 + qword_1E8F64248 + 4);
  *(_DWORD *)a1 = v2;
}

int *sub_18355CB38(int *result)
{
  int v2 = *result;
  uint64_t v3 = v1 + qword_1E8F64248;
  *(unsigned char *)(v3 + 4) = *((unsigned char *)result + 4);
  *(_DWORD *)uint64_t v3 = v2;
  return result;
}

uint64_t SendProgress.deinit()
{
  uint64_t v4 = v0;
  uint64_t v1 = type metadata accessor for SendProgress();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_18355C504((uint64_t)&v4, v1, (uint64_t)&protocol witness table for SendProgress<A, Pack{repeat B}>, WitnessTable, (uint64_t)&unk_1ECF65108, (uint64_t)sub_183570198, (uint64_t)&block_descriptor_364);
  swift_release();
  sub_183138A24(v0 + qword_1E8F63F00, &qword_1E8F63F08);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SendProgress.__deallocating_deinit()
{
  return sub_183564568((void (*)(void))SendProgress.deinit);
}

unsigned int *sub_18355CCD4(unsigned int *result)
{
  unint64_t v1 = *result | ((unint64_t)*((unsigned __int8 *)result + 4) << 32);
  int v2 = *((unsigned __int8 *)result + 4) >> 6;
  if (v2)
  {
    if (v2 == 1)
    {
      unsigned int v4 = *result;
      char v5 = (v1 & 0x3FFFFFFFFFLL | 0x4000000000) >> 32;
    }
    else
    {
      if (v2 != 2) {
        return result;
      }
      if (v1 == 0x8000000001)
      {
        char v5 = 0x80;
        unsigned int v3 = 1;
      }
      else
      {
        if (v1 != 0x8000000002) {
          return result;
        }
        char v5 = 0x80;
        unsigned int v3 = 2;
      }
      unsigned int v4 = v3;
    }
  }
  else
  {
    unsigned int v4 = *result;
    char v5 = BYTE4(v1);
  }
  return (unsigned int *)sub_18355CD84(&v4);
}

uint64_t sub_18355CD84(unsigned int *a1)
{
  uint64_t v3 = sub_183D449CC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = sub_183D449EC();
  uint64_t v7 = *(void *)(v14[0] - 8);
  MEMORY[0x1F4188790](v14[0]);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32);
  if (qword_1E8F62168 != -1) {
    swift_once();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(unsigned char *)(v11 + 28) = BYTE4(v10);
  *(_DWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_1835700BC;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_183137440;
  aBlock[3] = &block_descriptor_358;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  sub_183D449DC();
  v14[1] = MEMORY[0x1E4FBC860];
  sub_183570288((unint64_t *)&qword_1EB2669E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB2669C0);
  sub_1835702D0((unint64_t *)&qword_1EB2669D0, (uint64_t *)&unk_1EB2669C0);
  sub_183D453FC();
  MEMORY[0x1853146E0](0, v9, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, void))(v7 + 8))(v9, v14[0]);
  return swift_release();
}

uint64_t sub_18355D078(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
  uint64_t v139 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v132 = (char *)&v127 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  int v143 = (char *)&v127 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v142 = (char *)&v127 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644E8);
  uint64_t v134 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v144 = (char *)&v127 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v145 = (char *)&v127 - v16;
  uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644F0);
  uint64_t v136 = *(void *)(v137 - 8);
  MEMORY[0x1F4188790](v137);
  uint64_t v135 = (char *)&v127 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63F08);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v133 = (uint64_t)&v127 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v127 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(qword_1E8F642E0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v131 = (char *)&v127 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v127 - v27;
  int v29 = *(_DWORD *)(a1 + qword_1E8F64248);
  BYTE4(v146) = *(unsigned char *)(a1 + qword_1E8F64248 + 4);
  LODWORD(v146) = v29;
  char v152 = BYTE4(a2);
  unint64_t v141 = a2;
  unsigned int v151 = a2;
  uint64_t result = _s7Network9SendStateO2eeoiySbAC_ACtFZ_0((unsigned int *)&v146, &v151);
  if ((result & 1) == 0)
  {
    unint64_t v138 = HIDWORD(a2);
    uint64_t v140 = a1;
    uint64_t v31 = a1 + qword_1E8F63F00;
    swift_beginAccess();
    sub_183138900(v31, (uint64_t)v22, &qword_1E8F63F08);
    uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    unsigned int v33 = v32(v22, 1, v23);
    uint64_t v129 = v23;
    uint64_t v128 = v24;
    if (v33 == 1)
    {
      uint64_t result = sub_183138A24((uint64_t)v22, &qword_1E8F63F08);
      unint64_t v34 = v141;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v28, v22, v23);
      BYTE4(v146) = v138;
      unint64_t v34 = v141;
      LODWORD(v146) = v141;
      uint64_t v130 = v32;
      uint64_t v35 = v135;
      sub_183D44FEC();
      uint64_t v32 = v130;
      (*(void (**)(char *, uint64_t))(v136 + 8))(v35, v137);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v28, v23);
    }
    uint64_t v36 = (v34 >> 38) & 3;
    uint64_t v37 = v140;
    if (v36)
    {
      if (v36 == 1)
      {
        uint64_t v38 = HIDWORD(v141) & 0x3F;
        sub_18355CA7C(&v146);
        uint64_t v39 = v147;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v40 = *((void *)v39 + 2);
        uint64_t v145 = (char *)v38;
        if (v40)
        {
          int v143 = (char *)v4;
          char v41 = *(void (**)(char *, char *, uint64_t))(v134 + 16);
          unint64_t v42 = (*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80);
          uint64_t v142 = v39;
          unint64_t v43 = &v39[v42];
          uint64_t v44 = *(void *)(v134 + 72);
          unint64_t v45 = (void (**)(char *, uint64_t))(v134 + 8);
          int v46 = v141;
          id v47 = v144;
          do
          {
            v41(v47, v43, v13);
            sub_1834AC424();
            uint64_t v48 = swift_allocError();
            *(_DWORD *)uint64_t v49 = v46;
            *(unsigned char *)(v49 + 4) = (_BYTE)v145;
            uint64_t v146 = v48;
            sub_183D44F3C();
            id v47 = v144;
            (*v45)(v144, v13);
            v43 += v44;
            --v40;
          }
          while (v40);
          swift_bridgeObjectRelease();
          uint64_t v37 = v140;
          uint64_t v4 = (uint64_t)v143;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v70 = (char *)(v37 + qword_1E8F63F10);
        swift_beginAccess();
        uint64_t v71 = MEMORY[0x1E4FBC860];
        *((void *)v70 + 1) = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRelease();
        sub_18355CA7C(&v146);
        uint64_t v72 = v148;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v73 = *((void *)v72 + 2);
        int v143 = v70;
        if (v73)
        {
          uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v139 + 16);
          unint64_t v75 = (*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80);
          uint64_t v144 = v72;
          uint64_t v76 = &v72[v75];
          uint64_t v77 = *(void *)(v139 + 72);
          uint64_t v78 = (void (**)(char *, uint64_t))(v139 + 8);
          int v79 = v141;
          do
          {
            v74(v7, v76, v4);
            sub_1834AC424();
            uint64_t v80 = swift_allocError();
            *(_DWORD *)uint64_t v81 = v79;
            *(unsigned char *)(v81 + 4) = (_BYTE)v145;
            uint64_t v146 = v80;
            sub_183D44F3C();
            (*v78)(v7, v4);
            v76 += v77;
            --v73;
          }
          while (v73);
          swift_bridgeObjectRelease();
          uint64_t v70 = v143;
          uint64_t v71 = MEMORY[0x1E4FBC860];
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        *((void *)v70 + 2) = v71;
        swift_bridgeObjectRelease();
        sub_18355CA7C(&v146);
        uint64_t v83 = v149;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v84 = *((void *)v83 + 2);
        if (v84)
        {
          uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v139 + 16);
          unint64_t v86 = (*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80);
          uint64_t v144 = v83;
          uint64_t v87 = &v83[v86];
          uint64_t v88 = *(void *)(v139 + 72);
          uint64_t v89 = (void (**)(char *, uint64_t))(v139 + 8);
          int v90 = v141;
          do
          {
            v85(v7, v87, v4);
            sub_1834AC424();
            uint64_t v91 = swift_allocError();
            *(_DWORD *)uint64_t v92 = v90;
            *(unsigned char *)(v92 + 4) = (_BYTE)v145;
            uint64_t v146 = v91;
            sub_183D44F3C();
            (*v89)(v7, v4);
            v87 += v88;
            --v84;
          }
          while (v84);
          swift_bridgeObjectRelease();
          char v93 = (char)v145;
          uint64_t v70 = v143;
          uint64_t v71 = MEMORY[0x1E4FBC860];
        }
        else
        {
          swift_bridgeObjectRelease();
          char v93 = (char)v145;
        }
        *((void *)v70 + 3) = v71;
        swift_bridgeObjectRelease();
        sub_18355CA7C(&v146);
        unint64_t v94 = v150;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v95 = *((void *)v94 + 2);
        if (v95)
        {
          uint64_t v144 = *(char **)(v139 + 16);
          uint64_t v96 = *(unsigned __int8 *)(v139 + 80);
          uint64_t v142 = v94;
          unint64_t v97 = &v94[(v96 + 32) & ~v96];
          uint64_t v98 = *(void *)(v139 + 72);
          id v99 = (void (**)(char *, uint64_t))(v139 + 8);
          int v100 = v141;
          do
          {
            ((void (*)(char *, char *, uint64_t))v144)(v7, v97, v4);
            sub_1834AC424();
            uint64_t v101 = swift_allocError();
            *(_DWORD *)uint64_t v102 = v100;
            *(unsigned char *)(v102 + 4) = v93;
            uint64_t v146 = v101;
            sub_183D44F3C();
            (*v99)(v7, v4);
            v97 += v98;
            --v95;
          }
          while (v95);
          swift_bridgeObjectRelease();
          uint64_t v70 = v143;
          uint64_t v71 = MEMORY[0x1E4FBC860];
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        *((void *)v70 + 4) = v71;
        uint64_t result = swift_bridgeObjectRelease();
        int v60 = v141;
LABEL_39:
        uint64_t v61 = v140;
      }
      else
      {
        uint64_t v61 = v140;
        int v60 = v141;
        switch(v141 & 0xFFFFFFFFFFLL)
        {
          case 0x8000000001uLL:
            sub_18355CA7C(&v146);
            uint64_t v62 = v148;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v63 = *((void *)v62 + 2);
            if (v63)
            {
              uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v139 + 16);
              uint64_t v65 = &v62[(*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80)];
              uint64_t v66 = *(void *)(v139 + 72);
              unint64_t v67 = (void (**)(char *, uint64_t))(v139 + 8);
              uint64_t v68 = v142;
              do
              {
                v64(v68, v65, v4);
                sub_183D44F4C();
                uint64_t v68 = v142;
                (*v67)(v142, v4);
                v65 += v66;
                --v63;
              }
              while (v63);
            }
            swift_bridgeObjectRelease();
            uint64_t v61 = v140;
            uint64_t v69 = v140 + qword_1E8F63F10;
            swift_beginAccess();
            *(void *)(v69 + 16) = MEMORY[0x1E4FBC860];
            uint64_t result = swift_bridgeObjectRelease();
            break;
          case 0x8000000002uLL:
            sub_18355CA7C(&v146);
            uint64_t v104 = v149;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v105 = *((void *)v104 + 2);
            if (v105)
            {
              uLong v106 = *(void (**)(char *, char *, uint64_t))(v139 + 16);
              uint64_t v107 = &v104[(*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80)];
              uint64_t v108 = *(void *)(v139 + 72);
              uint64_t v109 = (void (**)(char *, uint64_t))(v139 + 8);
              uint64_t v110 = v143;
              do
              {
                v106(v110, v107, v4);
                sub_183D44F4C();
                uint64_t v110 = v143;
                (*v109)(v143, v4);
                v107 += v108;
                --v105;
              }
              while (v105);
            }
            swift_bridgeObjectRelease();
            uint64_t v61 = v140;
            uint64_t v111 = v140 + qword_1E8F63F10;
            swift_beginAccess();
            *(void *)(v111 + 24) = MEMORY[0x1E4FBC860];
            uint64_t result = swift_bridgeObjectRelease();
            break;
          case 0x8000000003uLL:
            uint64_t v130 = v32;
            sub_18355CA7C(&v146);
            uLong v112 = v150;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v113 = *((void *)v112 + 2);
            if (v113)
            {
              uint64_t v114 = v132;
              uint64_t v115 = *(void (**)(char *, char *, uint64_t))(v139 + 16);
              unint64_t v116 = (*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80);
              uint64_t v145 = v112;
              uint64_t v117 = &v112[v116];
              uint64_t v118 = *(void *)(v139 + 72);
              uint64_t v119 = (void (**)(char *, uint64_t))(v139 + 8);
              do
              {
                v115(v114, v117, v4);
                sub_183D44F4C();
                (*v119)(v114, v4);
                v117 += v118;
                --v113;
              }
              while (v113);
            }
            swift_bridgeObjectRelease();
            uint64_t v120 = v140;
            uint64_t v121 = v140 + qword_1E8F63F10;
            swift_beginAccess();
            *(void *)(v121 + 32) = MEMORY[0x1E4FBC860];
            swift_bridgeObjectRelease();
            uint64_t v122 = v120 + qword_1E8F63F00;
            swift_beginAccess();
            uint64_t v123 = v133;
            sub_183138900(v122, v133, &qword_1E8F63F08);
            uint64_t v124 = v129;
            if (v130((char *)v123, 1, v129) == 1)
            {
              uint64_t result = sub_183138A24(v123, &qword_1E8F63F08);
            }
            else
            {
              uint64_t v125 = v128;
              uint64_t v126 = v131;
              (*(void (**)(char *, uint64_t, uint64_t))(v128 + 32))(v131, v123, v124);
              sub_183D44FFC();
              uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v126, v124);
            }
            goto LABEL_39;
          default:
            break;
        }
      }
    }
    else
    {
      sub_18355CA7C(&v146);
      uint64_t v50 = v147;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v51 = *((void *)v50 + 2);
      if (v51)
      {
        uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v134 + 16);
        unint64_t v53 = (*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80);
        uint64_t v144 = v50;
        unint64_t v54 = &v50[v53];
        uint64_t v55 = *(void *)(v134 + 72);
        uint64_t v56 = (void (**)(char *, uint64_t))(v134 + 8);
        int v57 = v141;
        char v58 = v138;
        unint64_t v59 = v145;
        do
        {
          v52(v59, v54, v13);
          LODWORD(v146) = v57;
          BYTE4(v146) = v58;
          sub_183D44F4C();
          unint64_t v59 = v145;
          (*v56)(v145, v13);
          v54 += v55;
          --v51;
        }
        while (v51);
        swift_bridgeObjectRelease();
        int v60 = v57;
      }
      else
      {
        swift_bridgeObjectRelease();
        int v60 = v141;
      }
      uint64_t v61 = v140;
      uint64_t v82 = v140 + qword_1E8F63F10;
      swift_beginAccess();
      *(void *)(v82 + 8) = MEMORY[0x1E4FBC860];
      uint64_t result = swift_bridgeObjectRelease();
    }
    uint64_t v103 = v61 + qword_1E8F64248;
    *(unsigned char *)(v103 + 4) = v138;
    *(_DWORD *)uint64_t v103 = v60;
  }
  return result;
}

uint64_t sub_18355DF30@<X0>(uint64_t (**a1)(uint64_t a1)@<X8>)
{
  *a1 = sub_18356D2C4;
  a1[1] = v1;
  return swift_retain();
}

uint64_t sub_18355DF4C(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a2;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644F0);
  uint64_t v3 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63F08);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1E8F642E0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1 + qword_1E8F63F00;
  swift_beginAccess();
  sub_183138900(v16, (uint64_t)v11, &qword_1E8F63F08);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_183138A24((uint64_t)v11, &qword_1E8F63F08);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    sub_183D44FFC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v9, 1, 1, v12);
    sub_18355CA68((uint64_t)v9);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  int v17 = *(_DWORD *)(a1 + qword_1E8F64248);
  char v23 = *(unsigned char *)(a1 + qword_1E8F64248 + 4);
  int v22 = v17;
  uint64_t v18 = v21;
  sub_183D44FEC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
  if ((*(unsigned int *)(a1 + qword_1E8F64248) | ((unint64_t)*(unsigned __int8 *)(a1 + qword_1E8F64248 + 4) << 32)) == 0x8000000003) {
    return sub_183D44FFC();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v9, v18, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
  sub_18355CA68((uint64_t)v9);
  swift_retain();
  return sub_183D44FCC();
}

uint64_t sub_18355E2D8()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_18355E2F8, 0, 0);
}

uint64_t sub_18355E2F8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_18355E3C0;
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188160](v1, 0, 0, 1701736292, 0xE400000000000000, sub_18356D30C, v2, v3);
}

uint64_t sub_18355E3C0()
{
  *(void *)(*(void *)v1 + 32) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_18355E4EC;
  }
  else {
    uint64_t v2 = sub_18355E4D4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_18355E4D4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18355E4EC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18355E504(uint64_t a1, void *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  v24[1] = a4;
  uint64_t v9 = (void *)*a2;
  uint64_t v10 = sub_183D449CC();
  uint64_t v29 = *(void *)(v10 - 8);
  uint64_t v30 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_183D449EC();
  uint64_t v27 = *(void *)(v13 - 8);
  uint64_t v28 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v16);
  if (qword_1E8F62168 != -1) {
    swift_once();
  }
  uint64_t v24[2] = qword_1E8F7A920;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v16);
  unint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = (char *)swift_allocObject();
  *((void *)v20 + 2) = v9[10];
  *((void *)v20 + 3) = v9[11];
  *((void *)v20 + 4) = swift_allocateMetadataPack();
  *((void *)v20 + 5) = v9[13];
  *((void *)v20 + 6) = swift_allocateWitnessTablePack();
  *((void *)v20 + 7) = a2;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v20[v19], (char *)v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
  aBlock[4] = v25;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_183137440;
  aBlock[3] = v26;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  sub_183D449DC();
  uint64_t v31 = MEMORY[0x1E4FBC860];
  sub_183570288((unint64_t *)&qword_1EB2669E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB2669C0);
  sub_1835702D0((unint64_t *)&qword_1EB2669D0, (uint64_t *)&unk_1EB2669C0);
  uint64_t v22 = v30;
  sub_183D453FC();
  MEMORY[0x1853146E0](0, v15, v12, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v22);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v28);
  return swift_release();
}

uint64_t sub_18355E900(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(char *)(a1 + qword_1E8F64248 + 4);
  if (!(v8 >> 6)) {
    goto LABEL_5;
  }
  int64_t v9 = *(unsigned int *)(a1 + qword_1E8F64248) | (unint64_t)(v8 << 32);
  if (v8 >> 6 == 1)
  {
    sub_1834AC424();
    uint64_t v10 = swift_allocError();
    *(_DWORD *)uint64_t v11 = v9;
    *(unsigned char *)(v11 + 4) = BYTE4(v9) & 0x3F;
    v18[1] = v10;
    return sub_183D44F3C();
  }
  if (v9 >= (uint64_t)0xFFFFFF8000000003) {
    return sub_183D44F4C();
  }
LABEL_5:
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v13 = a1 + qword_1E8F63F10;
  swift_beginAccess();
  unint64_t v14 = *(void *)(v13 + 32);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v13 + 32) = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v14 = sub_1834B46B0(0, *(void *)(v14 + 16) + 1, 1, v14);
    *(void *)(v13 + 32) = v14;
  }
  unint64_t v17 = *(void *)(v14 + 16);
  unint64_t v16 = *(void *)(v14 + 24);
  if (v17 >= v16 >> 1)
  {
    unint64_t v14 = sub_1834B46B0(v16 > 1, v17 + 1, 1, v14);
    *(void *)(v13 + 32) = v14;
  }
  *(void *)(v14 + 16) = v17 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v17, v7, v4);
  return swift_endAccess();
}

uint64_t sub_18355EB30()
{
  return sub_18355EB2C();
}

uint64_t sub_18355EB54()
{
  return sub_18355CA28();
}

uint64_t sub_18355EB78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1835634B4(a1, a2, a3, (void (*)(unsigned char *))sub_18355CA28);
}

unsigned int *sub_18355EB90(unsigned int *a1)
{
  return sub_18355CCD4(a1);
}

BOOL sub_18355EBB4(uint64_t *a1, uint64_t *a2)
{
  return static SendProgress.== infix(_:_:)(*a1, *a2);
}

nw_protocol_options_t TLS.init()@<X0>(nw_protocol_options_t *a1@<X8>)
{
  nw_protocol_options_t result = nw_tls_create_options();
  *a1 = result;
  return result;
}

uint64_t TLS.configure(parameters:)(NSObject *a1)
{
  return sub_18355F3B8(a1, (void (*)(nw_protocol_stack_t, uint64_t))nw_protocol_stack_append_application_protocol);
}

uint64_t sub_18355EC18(NSObject *a1, uint64_t a2, uint64_t a3)
{
  return sub_18355F40C(a1, a2, a3, (void (*)(nw_protocol_stack_t, uint64_t))nw_protocol_stack_append_application_protocol);
}

uint64_t TCP.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = nw_tcp_create_options();
  return v0;
}

uint64_t TCP.init()()
{
  *(void *)(v0 + 16) = nw_tcp_create_options();
  return v0;
}

uint64_t TCP.noDelay(_:)(char a1)
{
  return sub_18355EE00(a1, (void (*)(void, void))nw_tcp_options_set_no_delay);
}

uint64_t TCP.noPush(_:)(char a1)
{
  return sub_18355EE00(a1, (void (*)(void, void))nw_tcp_options_set_no_push);
}

uint64_t TCP.noOptions(_:)(char a1)
{
  return sub_18355EE00(a1, (void (*)(void, void))nw_tcp_options_set_no_options);
}

uint64_t TCP.enableKeepalive(_:)(char a1)
{
  return sub_18355EE00(a1, (void (*)(void, void))nw_tcp_options_set_enable_keepalive);
}

uint64_t TCP.keepaliveCount(_:)(uint64_t a1)
{
  return sub_18355ED94(a1, (void (*)(void, uint64_t))nw_tcp_options_set_keepalive_count);
}

uint64_t TCP.keepaliveIdle(_:)(uint64_t a1)
{
  return sub_18355ED94(a1, (void (*)(void, uint64_t))nw_tcp_options_set_keepalive_idle_time);
}

uint64_t TCP.keepaliveInterval(_:)(uint64_t a1)
{
  return sub_18355ED94(a1, (void (*)(void, uint64_t))nw_tcp_options_set_keepalive_interval);
}

uint64_t TCP.maximumSegmentSize(_:)(uint64_t a1)
{
  return sub_18355ED94(a1, (void (*)(void, uint64_t))nw_tcp_options_set_maximum_segment_size);
}

uint64_t TCP.connectionTimeout(_:)(uint64_t a1)
{
  return sub_18355ED94(a1, (void (*)(void, uint64_t))nw_tcp_options_set_connection_timeout);
}

uint64_t TCP.persistTimeout(_:)(uint64_t a1)
{
  return sub_18355ED94(a1, (void (*)(void, uint64_t))nw_tcp_options_set_persist_timeout);
}

uint64_t TCP.retransmitConnectionDropTime(_:)(uint64_t a1)
{
  return sub_18355ED94(a1, (void (*)(void, uint64_t))nw_tcp_options_set_retransmit_connection_drop_time);
}

uint64_t sub_18355ED94(uint64_t a1, void (*a2)(void, uint64_t))
{
  a2(*(void *)(v2 + 16), a1);

  return swift_retain();
}

uint64_t TCP.retransmitFinDrop(_:)(char a1)
{
  return sub_18355EE00(a1, (void (*)(void, void))nw_tcp_options_set_retransmit_fin_drop);
}

uint64_t TCP.enableFastOpen(_:)(char a1)
{
  return sub_18355EE00(a1, (void (*)(void, void))nw_tcp_options_set_enable_fast_open);
}

uint64_t sub_18355EE00(char a1, void (*a2)(void, void))
{
  a2(*(void *)(v2 + 16), a1 & 1);

  return swift_retain();
}

uint64_t TCP.configure(parameters:)(NSObject *a1)
{
  uint64_t v2 = nw_parameters_copy_default_protocol_stack(a1);
  nw_protocol_stack_set_transport_protocol(v2, *(nw_protocol_options_t *)(v1 + 16));

  return swift_unknownObjectRelease();
}

uint64_t TCP.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t TCP.__deallocating_deinit()
{
  return sub_1834DDF10();
}

uint64_t sub_18355EEA8(NSObject *a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = nw_parameters_copy_default_protocol_stack(a1);
  nw_protocol_stack_set_transport_protocol(v3, *(nw_protocol_options_t *)(v2 + 16));

  return swift_unknownObjectRelease();
}

nw_protocol_options_t QUIC.init()@<X0>(nw_protocol_options_t *a1@<X8>)
{
  nw_protocol_options_t result = nw_quic_create_options();
  *a1 = result;
  return result;
}

uint64_t QUIC.configure(parameters:)(NSObject *a1)
{
  return sub_18355F3B8(a1, (void (*)(nw_protocol_stack_t, uint64_t))nw_protocol_stack_set_transport_protocol);
}

uint64_t sub_18355EF2C(NSObject *a1, uint64_t a2, uint64_t a3)
{
  return sub_18355F40C(a1, a2, a3, (void (*)(nw_protocol_stack_t, uint64_t))nw_protocol_stack_set_transport_protocol);
}

nw_protocol_options_t UDP.init()@<X0>(nw_protocol_options_t *a1@<X8>)
{
  nw_protocol_options_t result = nw_udp_create_options();
  *a1 = result;
  return result;
}

uint64_t UDP.preferNoChecksum(_:)@<X0>(char a1@<W0>, void *a2@<X8>)
{
  return sub_18355F108(a1, (void (*)(uint64_t, void))nw_udp_options_set_prefer_no_checksum, a2);
}

uint64_t UDP.configure(parameters:)(NSObject *a1)
{
  return sub_18355F3B8(a1, (void (*)(nw_protocol_stack_t, uint64_t))nw_protocol_stack_set_transport_protocol);
}

NWConcrete_nw_protocol_options *IP.init()@<X0>(NWConcrete_nw_protocol_options **a1@<X8>)
{
  nw_protocol_options_t result = nw_ip_create_options();
  *a1 = result;
  return result;
}

uint64_t IP.version(_:)@<X0>(char *a1@<X0>, NSObject **a2@<X8>)
{
  uint64_t v4 = *v2;
  nw_ip_options_set_version(v4, dword_183D594E8[*a1]);
  *a2 = v4;

  return swift_unknownObjectRetain();
}

uint64_t IP.hopLimit(_:)@<X0>(uint8_t a1@<W0>, NSObject **a2@<X8>)
{
  uint64_t v4 = *v2;
  nw_ip_options_set_hop_limit(v4, a1);
  *a2 = v4;

  return swift_unknownObjectRetain();
}

uint64_t IP.useMinimumMTU(_:)@<X0>(char a1@<W0>, void *a2@<X8>)
{
  return sub_18355F108(a1, (void (*)(uint64_t, void))nw_ip_options_set_use_minimum_mtu, a2);
}

uint64_t IP.disableFragmentation(_:)@<X0>(char a1@<W0>, void *a2@<X8>)
{
  return sub_18355F108(a1, (void (*)(uint64_t, void))nw_ip_options_set_disable_fragmentation, a2);
}

uint64_t IP.calculateReceiveTime(_:)@<X0>(char a1@<W0>, void *a2@<X8>)
{
  return sub_18355F108(a1, (void (*)(uint64_t, void))nw_ip_options_set_calculate_receive_time, a2);
}

uint64_t IP.localAddressPreference(_:)@<X0>(unsigned __int8 *a1@<X0>, NSObject **a2@<X8>)
{
  uint64_t v4 = *v2;
  nw_ip_options_set_local_address_preference(v4, (nw_ip_local_address_preference_t)*a1);
  *a2 = v4;

  return swift_unknownObjectRetain();
}

uint64_t IP.disableMulticastLoopback(_:)@<X0>(char a1@<W0>, void *a2@<X8>)
{
  return sub_18355F108(a1, (void (*)(uint64_t, void))nw_ip_options_set_disable_multicast_loopback, a2);
}

uint64_t sub_18355F108@<X0>(char a1@<W0>, void (*a2)(uint64_t, void)@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *v3;
  a2(v5, a1 & 1);
  *a3 = v5;

  return swift_unknownObjectRetain();
}

uint64_t IP.configure(parameters:)(NSObject *a1)
{
  return sub_18355F3B8(a1, (void (*)(nw_protocol_stack_t, uint64_t))nw_protocol_stack_set_internet_protocol);
}

uint64_t sub_18355F170(NSObject *a1, uint64_t a2, uint64_t a3)
{
  return sub_18355F40C(a1, a2, a3, (void (*)(nw_protocol_stack_t, uint64_t))nw_protocol_stack_set_internet_protocol);
}

nw_protocol_options_t TLV.init()@<X0>(uint64_t *a1@<X8>)
{
  if (qword_1E8F62160 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1E8F7A918;
  type metadata accessor for NWProtocolFramer.Options();
  uint64_t v3 = swift_allocObject();
  nw_protocol_options_t result = nw_framer_create_options(*(nw_protocol_definition_t *)(v2 + 32));
  *(void *)(v3 + 16) = result;
  *a1 = v3;
  return result;
}

uint64_t TLV.configure(parameters:)(NSObject *a1)
{
  uint64_t v2 = *v1;
  nw_protocol_stack_t v3 = nw_parameters_copy_default_protocol_stack(a1);
  nw_protocol_stack_append_application_protocol(v3, *(void **)(v2 + 16));

  return swift_unknownObjectRelease();
}

uint64_t sub_18355F254(NSObject *a1)
{
  uint64_t v2 = *v1;
  nw_protocol_stack_t v3 = nw_parameters_copy_default_protocol_stack(a1);
  nw_protocol_stack_append_application_protocol(v3, *(void **)(v2 + 16));

  return swift_unknownObjectRelease();
}

nw_protocol_options_t JSON.init(_:)@<X0>(uint64_t *a1@<X8>)
{
  if (qword_1E8F62160 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1E8F7A918;
  type metadata accessor for NWProtocolFramer.Options();
  uint64_t v3 = swift_allocObject();
  nw_protocol_options_t result = nw_framer_create_options(*(nw_protocol_definition_t *)(v2 + 32));
  *(void *)(v3 + 16) = result;
  *a1 = v3;
  return result;
}

uint64_t JSON.options.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t JSON.configure(parameters:)(NSObject *a1)
{
  uint64_t v2 = *v1;
  nw_protocol_stack_t v3 = nw_parameters_copy_default_protocol_stack(a1);
  nw_protocol_stack_append_application_protocol(v3, *(void **)(v2 + 16));

  return swift_unknownObjectRelease();
}

nw_protocol_options_t WebSocket.init()@<X0>(nw_protocol_options_t *a1@<X8>)
{
  nw_protocol_options_t result = nw_ws_create_options(nw_ws_version_13);
  *a1 = result;
  return result;
}

uint64_t WebSocket.configure(parameters:)(NSObject *a1)
{
  return sub_18355F3B8(a1, (void (*)(nw_protocol_stack_t, uint64_t))nw_protocol_stack_append_application_protocol);
}

uint64_t sub_18355F3B8(NSObject *a1, void (*a2)(nw_protocol_stack_t, uint64_t))
{
  uint64_t v4 = *v2;
  nw_protocol_stack_t v5 = nw_parameters_copy_default_protocol_stack(a1);
  a2(v5, v4);

  return swift_unknownObjectRelease();
}

uint64_t sub_18355F40C(NSObject *a1, uint64_t a2, uint64_t a3, void (*a4)(nw_protocol_stack_t, uint64_t))
{
  uint64_t v6 = *v4;
  nw_protocol_stack_t v7 = nw_parameters_copy_default_protocol_stack(a1);
  a4(v7, v6);

  return swift_unknownObjectRelease();
}

uint64_t HTTP1.__allocating_init(enabled:)(char a1)
{
  return sub_18355F554(a1, (uint64_t (*)(void))nw_http1_create_options);
}

uint64_t HTTP1.init(enabled:)(char a1)
{
  *(void *)(v1 + 16) = nw_http1_create_options();
  *(unsigned char *)(v1 + 24) = a1;
  return v1;
}

uint64_t HTTP1.__deallocating_deinit()
{
  return sub_1834DDF10();
}

uint64_t sub_18355F4B4@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  return sub_18355F654(a1, (uint64_t (*)(void))nw_http1_create_options, a2);
}

uint64_t HTTP2.__allocating_init(enabled:)(char a1)
{
  return sub_18355F554(a1, (uint64_t (*)(void))nw_http2_create_options);
}

uint64_t HTTP2.init(enabled:)(char a1)
{
  *(void *)(v1 + 16) = nw_http2_create_options();
  *(unsigned char *)(v1 + 24) = a1;
  return v1;
}

uint64_t HTTP2.__deallocating_deinit()
{
  return sub_1834DDF10();
}

uint64_t sub_18355F524@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  return sub_18355F654(a1, (uint64_t (*)(void))nw_http2_create_options, a2);
}

uint64_t HTTP3.__allocating_init(enabled:)(char a1)
{
  return sub_18355F554(a1, (uint64_t (*)(void))nw_http3_create_options);
}

uint64_t sub_18355F554(char a1, uint64_t (*a2)(void))
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2();
  *(unsigned char *)(v4 + 24) = a1;
  return v4;
}

uint64_t HTTP3.init(enabled:)(char a1)
{
  *(void *)(v1 + 16) = nw_http3_create_options();
  *(unsigned char *)(v1 + 24) = a1;
  return v1;
}

NSObject *_s7Network5HTTP1C9configure10parametersySo06OS_nw_D0_p_tF_0(NSObject *result)
{
  if (*(unsigned char *)(v1 + 24) == 1)
  {
    nw_protocol_stack_t v2 = nw_parameters_copy_default_protocol_stack(result);
    nw_protocol_stack_append_application_protocol(v2, *(void **)(v1 + 16));
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t HTTP3.__deallocating_deinit()
{
  return sub_1834DDF10();
}

uint64_t sub_18355F63C@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  return sub_18355F654(a1, (uint64_t (*)(void))nw_http3_create_options, a2);
}

uint64_t sub_18355F654@<X0>(char a1@<W0>, uint64_t (*a2)(void)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  uint64_t result = a2();
  *(void *)(v6 + 16) = result;
  *(unsigned char *)(v6 + 24) = a1;
  *a3 = v6;
  return result;
}

NSObject *sub_18355F6AC(NSObject *result)
{
  uint64_t v2 = *v1;
  if (*(unsigned char *)(v2 + 24) == 1)
  {
    nw_protocol_stack_t v3 = nw_parameters_copy_default_protocol_stack(result);
    nw_protocol_stack_append_application_protocol(v3, *(void **)(v2 + 16));
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t DefaultHTTP1()(nw_protocol_options_t *a1)
{
  return sub_18355F760(a1, (void (*)(void))type metadata accessor for HTTP1, (uint64_t (*)(void))nw_http1_create_options);
}

uint64_t DefaultHTTP2()(nw_protocol_options_t *a1)
{
  return sub_18355F760(a1, (void (*)(void))type metadata accessor for HTTP2, (uint64_t (*)(void))nw_http2_create_options);
}

uint64_t sub_18355F760(nw_protocol_options_t *a1, void (*a2)(void), uint64_t (*a3)(void))
{
  a2();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3();
  *(unsigned char *)(v5 + 24) = 1;
  *a1 = nw_tls_create_options();
  type metadata accessor for TCP();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = nw_tcp_create_options();
  return v5;
}

uint64_t DefaultHTTP3()(nw_protocol_options_t *a1)
{
  type metadata accessor for HTTP3();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = nw_http3_create_options();
  *(unsigned char *)(v2 + 24) = 1;
  *a1 = nw_quic_create_options();
  return v2;
}

uint64_t HTTP.__allocating_init(insecure:)(uint64_t (*a1)(void))
{
  uint64_t v2 = swift_allocObject();
  nw_protocol_options_t options = nw_http_messaging_create_options();
  *(void *)(v2 + 16) = options;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 40) = 0u;
  *(void *)(v2 + 56) = 0;
  uint64_t v4 = a1();
  nw_http_messaging_options_set_http1_options(options, *(void **)(v4 + 16));
  swift_release();
  swift_release();
  return v2;
}

uint64_t HTTP.init(insecure:)(uint64_t (*a1)(void))
{
  *(void *)(v1 + 16) = nw_http_messaging_create_options();
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(void *)(v1 + 56) = 0;
  uint64_t v3 = a1();
  nw_http_messaging_options_set_http1_options(*(void **)(v1 + 16), *(void **)(v3 + 16));
  swift_release();
  swift_release();
  return v1;
}

uint64_t HTTP.__allocating_init(h1:h2:h3:)(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t (*a3)(uint64_t *), uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v10 = swift_allocObject();
  HTTP.init(h1:h2:h3:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t sub_18355F9C4(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t (*a3)(uint64_t *), uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + 16) = nw_http_messaging_create_options();
  *(_OWORD *)(a5 + 24) = 0u;
  *(_OWORD *)(a5 + 40) = 0u;
  *(void *)(a5 + 56) = 0;
  uint64_t v8 = a1(&v28);
  uint64_t v10 = v9;
  uint64_t v11 = v28;
  int v12 = *(unsigned __int8 *)(swift_retain() + 24);
  swift_release();
  if (v12 == 1)
  {
    uint64_t v13 = *(void **)(a5 + 16);
    swift_retain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    unint64_t v14 = *(void **)(v8 + 16);
    swift_unknownObjectRetain();
    swift_release();
    nw_http_messaging_options_set_http1_options(v13, v14);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_retain();
    swift_unknownObjectRetain();
    swift_release();
    *(void *)(a5 + 24) = v11;
    swift_unknownObjectRelease();
    swift_retain();
    swift_retain();
    swift_release();
    *(void *)(a5 + 32) = v10;
    swift_release();
  }
  uint64_t v15 = a3(&v28);
  uint64_t v17 = v16;
  uint64_t v18 = v28;
  swift_retain();
  int v19 = *(unsigned __int8 *)(v15 + 24);
  swift_release();
  if (v19 == 1)
  {
    uint64_t v20 = *(void **)(a5 + 16);
    swift_retain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    uint64_t v21 = *(void **)(v15 + 16);
    swift_unknownObjectRetain();
    swift_release();
    nw_http_messaging_options_set_http2_options(v20, v21);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_retain();
    swift_unknownObjectRetain();
    swift_release();
    *(void *)(a5 + 40) = v18;
    swift_unknownObjectRelease();
    swift_retain();
    swift_retain();
    swift_release();
    *(void *)(a5 + 48) = v17;
    swift_release();
  }
  type metadata accessor for HTTP3();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = nw_http3_create_options();
  *(unsigned char *)(inited + 24) = 0;
  nw_protocol_options_t options = nw_quic_create_options();
  swift_retain();
  int v24 = *(unsigned __int8 *)(inited + 24);
  swift_release();
  if (v24 == 1)
  {
    uint64_t v25 = *(void **)(a5 + 16);
    swift_retain();
    swift_unknownObjectRetain();
    uint64_t v26 = *(void **)(inited + 16);
    swift_unknownObjectRetain();
    swift_release();
    nw_http_messaging_options_set_http3_options(v25, v26);
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    *(void *)(a5 + 56) = options;
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
  }
  return a5;
}

uint64_t sub_18355FCE0(uint64_t (*a1)(nw_protocol_options_t *), uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + 16) = nw_http_messaging_create_options();
  *(_OWORD *)(a5 + 24) = 0u;
  *(_OWORD *)(a5 + 40) = 0u;
  *(void *)(a5 + 56) = 0;
  uint64_t v8 = a1(&v29);
  uint64_t v10 = v9;
  nw_protocol_options_t v11 = v29;
  int v12 = *(unsigned __int8 *)(swift_retain() + 24);
  swift_release();
  if (v12 == 1)
  {
    uint64_t v13 = *(void **)(a5 + 16);
    swift_retain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    unint64_t v14 = *(void **)(v8 + 16);
    swift_unknownObjectRetain();
    swift_release();
    nw_http_messaging_options_set_http1_options(v13, v14);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_retain();
    swift_unknownObjectRetain();
    swift_release();
    *(void *)(a5 + 24) = v11;
    swift_unknownObjectRelease();
    swift_retain();
    swift_retain();
    swift_release();
    *(void *)(a5 + 32) = v10;
    swift_release();
  }
  uint64_t v15 = sub_1835609C0(&v29, (void (*)(void))type metadata accessor for HTTP2, (uint64_t (*)(void))nw_http2_create_options);
  uint64_t v17 = v16;
  nw_protocol_options_t v18 = v29;
  int v19 = *(unsigned __int8 *)(swift_retain() + 24);
  swift_release();
  if (v19 == 1)
  {
    uint64_t v20 = *(void **)(a5 + 16);
    swift_retain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    uint64_t v21 = a3;
    uint64_t v22 = *(void **)(v15 + 16);
    swift_unknownObjectRetain();
    swift_release();
    nw_http_messaging_options_set_http2_options(v20, v22);
    swift_unknownObjectRelease();
    a3 = v21;
    swift_unknownObjectRelease();
    swift_retain();
    swift_unknownObjectRetain();
    swift_release();
    *(void *)(a5 + 40) = v18;
    swift_unknownObjectRelease();
    swift_retain();
    swift_retain();
    swift_release();
    *(void *)(a5 + 48) = v17;
    swift_release();
  }
  uint64_t v23 = a3(&v29);
  nw_protocol_options_t v24 = v29;
  int v25 = *(unsigned __int8 *)(swift_retain() + 24);
  swift_release();
  if (v25 == 1)
  {
    uint64_t v26 = *(void **)(a5 + 16);
    swift_retain();
    uint64_t v27 = *(void **)(v23 + 16);
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_release();
    nw_http_messaging_options_set_http3_options(v26, v27);
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    *(void *)(a5 + 56) = v24;
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
  }
  return a5;
}

uint64_t sub_18356000C(uint64_t (*a1)(nw_protocol_options_t *), uint64_t a2, uint64_t (*a3)(nw_protocol_options_t *), uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + 16) = nw_http_messaging_create_options();
  *(_OWORD *)(a5 + 24) = 0u;
  *(_OWORD *)(a5 + 40) = 0u;
  *(void *)(a5 + 56) = 0;
  uint64_t v7 = sub_1835609C0(&v28, (void (*)(void))type metadata accessor for HTTP1, (uint64_t (*)(void))nw_http1_create_options);
  uint64_t v9 = v8;
  nw_protocol_options_t v10 = v28;
  int v11 = *(unsigned __int8 *)(swift_retain() + 24);
  swift_release();
  if (v11 == 1)
  {
    int v12 = *(void **)(a5 + 16);
    swift_retain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    uint64_t v13 = *(void **)(v7 + 16);
    swift_unknownObjectRetain();
    swift_release();
    nw_http_messaging_options_set_http1_options(v12, v13);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_retain();
    swift_unknownObjectRetain();
    swift_release();
    *(void *)(a5 + 24) = v10;
    swift_unknownObjectRelease();
    swift_retain();
    swift_retain();
    swift_release();
    *(void *)(a5 + 32) = v9;
    swift_release();
  }
  uint64_t v14 = a1(&v28);
  uint64_t v16 = v15;
  nw_protocol_options_t v17 = v28;
  int v18 = *(unsigned __int8 *)(swift_retain() + 24);
  swift_release();
  if (v18 == 1)
  {
    int v19 = *(void **)(a5 + 16);
    swift_retain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    uint64_t v20 = *(void **)(v14 + 16);
    swift_unknownObjectRetain();
    swift_release();
    nw_http_messaging_options_set_http2_options(v19, v20);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_retain();
    swift_unknownObjectRetain();
    swift_release();
    *(void *)(a5 + 40) = v17;
    swift_unknownObjectRelease();
    swift_retain();
    swift_retain();
    swift_release();
    *(void *)(a5 + 48) = v16;
    swift_release();
  }
  uint64_t v21 = a3(&v28);
  nw_protocol_options_t v22 = v28;
  int v23 = *(unsigned __int8 *)(swift_retain() + 24);
  swift_release();
  if (v23 == 1)
  {
    nw_protocol_options_t v24 = *(void **)(a5 + 16);
    swift_retain();
    int v25 = *(void **)(v21 + 16);
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_release();
    nw_http_messaging_options_set_http3_options(v24, v25);
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    *(void *)(a5 + 56) = v22;
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
  }
  return a5;
}

void *HTTP.init(h1:h2:h3:)(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t (*a3)(uint64_t *), uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = (void *)v5;
  *(void *)(v5 + 16) = nw_http_messaging_create_options();
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  *(void *)(v5 + 56) = 0;
  uint64_t v10 = a1(&v31);
  uint64_t v12 = v11;
  uint64_t v13 = v31;
  int v14 = *(unsigned __int8 *)(swift_retain() + 24);
  swift_release();
  if (v14 == 1)
  {
    uint64_t v15 = (void *)v6[2];
    swift_retain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    uint64_t v16 = *(void **)(v10 + 16);
    swift_unknownObjectRetain();
    swift_release();
    nw_http_messaging_options_set_http1_options(v15, v16);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_retain();
    swift_unknownObjectRetain();
    swift_release();
    v6[3] = v13;
    swift_unknownObjectRelease();
    swift_retain();
    swift_retain();
    swift_release();
    void v6[4] = v12;
    swift_release();
  }
  uint64_t v17 = a3(&v31);
  uint64_t v19 = v18;
  uint64_t v20 = v31;
  int v21 = *(unsigned __int8 *)(swift_retain() + 24);
  swift_release();
  if (v21 == 1)
  {
    nw_protocol_options_t v22 = (void *)v6[2];
    swift_retain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    int v23 = a5;
    nw_protocol_options_t v24 = *(void **)(v17 + 16);
    swift_unknownObjectRetain();
    swift_release();
    nw_http_messaging_options_set_http2_options(v22, v24);
    swift_unknownObjectRelease();
    a5 = v23;
    swift_unknownObjectRelease();
    swift_retain();
    swift_unknownObjectRetain();
    swift_release();
    v6[5] = v20;
    swift_unknownObjectRelease();
    swift_retain();
    swift_retain();
    swift_release();
    void v6[6] = v19;
    swift_release();
  }
  uint64_t v25 = a5(&v31);
  uint64_t v26 = v31;
  int v27 = *(unsigned __int8 *)(swift_retain() + 24);
  swift_release();
  if (v27 == 1)
  {
    nw_protocol_options_t v28 = (void *)v6[2];
    swift_retain();
    nw_protocol_options_t v29 = *(void **)(v25 + 16);
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_release();
    nw_http_messaging_options_set_http3_options(v28, v29);
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    v6[7] = v26;
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
  }
  return v6;
}

uint64_t HTTP.__allocating_init(h1:h2:h3:)(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v8 = swift_allocObject();

  return sub_18355F9C4(a1, a2, a3, a4, v8);
}

uint64_t HTTP.__allocating_init(h1:h2:h3:)(uint64_t (*a1)(nw_protocol_options_t *), uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v9 = swift_allocObject();

  return sub_18355FCE0(a1, a2, a4, a5, v9);
}

uint64_t HTTP.__allocating_init(h1:h2:h3:)(uint64_t a1, uint64_t (*a2)(nw_protocol_options_t *), uint64_t a3, uint64_t (*a4)(nw_protocol_options_t *), uint64_t a5)
{
  uint64_t v9 = swift_allocObject();

  return sub_18356000C(a2, a3, a4, a5, v9);
}

uint64_t HTTP.__allocating_init(h1:h2:h3:)(uint64_t (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  HTTP.init(h1:h2:h3:)(a1, a2, (uint64_t (*)(uint64_t *))sub_183560810, 0, (uint64_t (*)(void))sub_18356083C);
  return v4;
}

uint64_t sub_183560810(nw_protocol_options_t *a1)
{
  return sub_1835609C0(a1, (void (*)(void))type metadata accessor for HTTP2, (uint64_t (*)(void))nw_http2_create_options);
}

uint64_t HTTP.__allocating_init(h1:h2:h3:)(uint64_t a1, uint64_t (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  HTTP.init(h1:h2:h3:)((uint64_t (*)(uint64_t *))sub_1835608C4, 0, a2, a3, (uint64_t (*)(void))sub_18356083C);
  return v5;
}

uint64_t sub_1835608C4(nw_protocol_options_t *a1)
{
  return sub_1835609C0(a1, (void (*)(void))type metadata accessor for HTTP1, (uint64_t (*)(void))nw_http1_create_options);
}

uint64_t sub_1835608F0(nw_protocol_options_t *a1)
{
  type metadata accessor for HTTP3();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = nw_http3_create_options();
  *(unsigned char *)(v2 + 24) = 0;
  *a1 = nw_quic_create_options();
  return v2;
}

uint64_t HTTP.__allocating_init(h1:h2:h3:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = swift_allocObject();
  HTTP.init(h1:h2:h3:)((uint64_t (*)(uint64_t *))sub_1835608C4, 0, (uint64_t (*)(uint64_t *))sub_183560810, 0, a3);
  return v4;
}

uint64_t sub_1835609C0(nw_protocol_options_t *a1, void (*a2)(void), uint64_t (*a3)(void))
{
  a2();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3();
  *(unsigned char *)(v5 + 24) = 0;
  nw_protocol_options_t options = nw_tls_create_options();
  type metadata accessor for TCP();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = nw_tcp_create_options();
  *a1 = options;
  return v5;
}

uint64_t HTTP.configure(parameters:)(NSObject *a1)
{
  id v3 = nw_http_messaging_options_copy_http1_options(*(void **)(v1 + 16));
  swift_unknownObjectRelease();
  id v4 = nw_http_messaging_options_copy_http2_options(*(void **)(v1 + 16));
  swift_unknownObjectRelease();
  id v5 = nw_http_messaging_options_copy_http3_options(*(void **)(v1 + 16));
  swift_unknownObjectRelease();
  uint64_t v6 = nw_parameters_copy_default_protocol_stack(a1);
  uint64_t v7 = *(void **)(v1 + 40);
  if (v7)
  {
    swift_unknownObjectRetain();
    if (v5) {
      nw_tls_options_add_transport_specific_application_protocol(v7, (uint64_t)"h3");
    }
    if (v4) {
      nw_tls_options_add_transport_specific_application_protocol(v7, (uint64_t)"h2");
    }
    if (v3) {
      nw_tls_options_add_transport_specific_application_protocol(v7, (uint64_t)"http/1.1");
    }
    swift_unknownObjectRelease();
  }
  uint64_t v8 = *(void **)(v1 + 24);
  if (v8)
  {
    swift_unknownObjectRetain();
    if (v5) {
      nw_tls_options_add_transport_specific_application_protocol(v8, (uint64_t)"h3");
    }
    if (v4) {
      nw_tls_options_add_transport_specific_application_protocol(v8, (uint64_t)"h2");
    }
    if (v3) {
      nw_tls_options_add_transport_specific_application_protocol(v8, (uint64_t)"http/1.1");
    }
    swift_unknownObjectRelease();
  }
  uint64_t v9 = *(NSObject **)(v1 + 56);
  if (v9) {
    goto LABEL_21;
  }
  uint64_t v10 = *(void *)(v1 + 48);
  if (v10 || (uint64_t v10 = *(void *)(v1 + 32)) != 0)
  {
    uint64_t v9 = *(NSObject **)(v10 + 16);
LABEL_21:
    nw_protocol_stack_set_transport_protocol(v6, v9);
  }
  nw_protocol_stack_append_application_protocol(v6, *(void **)(v1 + 16));
  BOOL v11 = nw_array_create();
  uint64_t v12 = *(void **)(v1 + 56);
  if (v12)
  {
    swift_unknownObjectRetain();
    uint64_t v13 = nw_protocol_transform_create();
    nw_protocol_transform_clear_protocols_at_level(v13, 3);
    nw_protocol_transform_append_protocol(v13, 3, v12);
    nw_protocol_transform_set_fallback_mode(v13, 2);
    nw_protocol_transform_add_match_url_scheme(v13, "https");
    nw_protocol_transform_add_match_url_scheme(v13, "wss");
    nw_protocol_transform_set_prohibit_direct(v13, 1);
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    nw_array_append(v11, v13);
    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  int v14 = *(void **)(v1 + 40);
  if (v14 && (uint64_t v15 = *(void *)(v1 + 48)) != 0
    || (v14 = *(void **)(v1 + 24)) != 0 && (uint64_t v15 = *(void *)(v1 + 32)) != 0)
  {
    swift_unknownObjectRetain();
    swift_retain();
    uint64_t v16 = nw_protocol_transform_create();
    nw_protocol_transform_clear_protocols_at_level(v16, 3);
    uint64_t v17 = nw_protocol_options_copy(v14);
    nw_protocol_transform_append_protocol(v16, 4, v17);
    swift_unknownObjectRelease();
    nw_protocol_transform_append_protocol(v16, 3, *(void **)(v15 + 16));
    nw_protocol_transform_add_match_url_scheme(v16, "https");
    nw_protocol_transform_add_match_url_scheme(v16, "wss");
    nw_protocol_transform_set_prohibit_direct(v16, 1);
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    nw_array_append(v11, v16);
    swift_release();
    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t v18 = *(void *)(v1 + 32);
  if (v18)
  {
    swift_retain();
    uint64_t v19 = nw_protocol_transform_create();
    nw_protocol_transform_clear_protocols_at_level(v19, 3);
    nw_protocol_transform_append_protocol(v19, 3, *(void **)(v18 + 16));
    nw_protocol_transform_add_match_url_scheme(v19, "http");
    nw_protocol_transform_add_match_url_scheme(v19, "ws");
    nw_protocol_transform_set_prohibit_direct(v19, 1);
    nw_array_append(v11, v19);
    swift_unknownObjectRelease();
    swift_release();
  }
  if (nw_array_get_count(v11) >= 1) {
    nw_parameters_set_transform_array(a1, (void *)v11);
  }
  nw_parameters_set_data_mode(a1, 2u);
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t HTTP.Response.httpResponse.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  char v6 = *((unsigned char *)v1 + 32);
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = v1[9];
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_retain();
}

uint64_t HTTP.Response.content.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  sub_1834D7FF8(v1, *(void *)(v0 + 88));
  return v1;
}

__n128 HTTP.Response.init(httpResponse:content:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 32);
  long long v7 = *(_OWORD *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 56);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(void *)(a4 + 16) = v4;
  *(void *)(a4 + 24) = v5;
  *(unsigned char *)(a4 + 32) = v6;
  *(_OWORD *)(a4 + 40) = v7;
  *(void *)(a4 + 56) = v8;
  __n128 result = *(__n128 *)(a1 + 64);
  *(__n128 *)(a4 + 64) = result;
  *(void *)(a4 + 80) = a2;
  *(void *)(a4 + 88) = a3;
  return result;
}

uint64_t sub_183560EEC@<X0>(uint64_t a1@<X8>)
{
  return sub_183560F00(&qword_1E8F63F20, &qword_1E8F63F28, a1);
}

uint64_t sub_183560F00@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *a1;
  swift_beginAccess();
  return sub_183138900(v6, a3, a2);
}

uint64_t sub_183560F60(uint64_t a1)
{
  return sub_183560F74(a1, &qword_1E8F63F20, &qword_1E8F63F28);
}

uint64_t sub_183560F74(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = v3 + *a2;
  swift_beginAccess();
  sub_1835197F8(a1, v6, a3);
  return swift_endAccess();
}

uint64_t sub_183560FDC@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + qword_1E8F63F30);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_183561090(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + qword_1E8F63F38);
  uint64_t v3 = *(void *)(v1 + qword_1E8F63F38 + 8);
  uint64_t v4 = *(void *)(v1 + qword_1E8F63F38 + 16);
  uint64_t v5 = *(void *)(v1 + qword_1E8F63F38 + 24);
  uint64_t v6 = *(void *)(v1 + qword_1E8F63F38 + 32);
  uint64_t v7 = *(void *)(v1 + qword_1E8F63F38 + 40);
  uint64_t v8 = *(void *)(v1 + qword_1E8F63F38 + 48);
  uint64_t v9 = *(void *)(v1 + qword_1E8F63F38 + 56);
  uint64_t v10 = *(void *)(v1 + qword_1E8F63F38 + 64);
  unint64_t v11 = *(void *)(v1 + qword_1E8F63F38 + 72);
  uint64_t v13 = *(void *)(v1 + qword_1E8F63F38 + 80);
  unint64_t v12 = *(void *)(v1 + qword_1E8F63F38 + 88);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v13;
  a1[11] = v12;
  sub_18356E8DC(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v13, v12);
}

void sub_1835610F4(_OWORD *a1)
{
  uint64_t v2 = (_OWORD *)(v1 + qword_1E8F63F38);
  uint64_t v4 = *(void *)(v1 + qword_1E8F63F38);
  uint64_t v3 = *(void *)(v1 + qword_1E8F63F38 + 8);
  uint64_t v5 = *(void *)(v1 + qword_1E8F63F38 + 16);
  uint64_t v6 = *(void *)(v1 + qword_1E8F63F38 + 24);
  uint64_t v7 = *(void *)(v1 + qword_1E8F63F38 + 32);
  uint64_t v8 = *(void *)(v1 + qword_1E8F63F38 + 40);
  uint64_t v9 = *(void *)(v1 + qword_1E8F63F38 + 48);
  uint64_t v10 = *(void *)(v1 + qword_1E8F63F38 + 56);
  long long v11 = *(_OWORD *)(v1 + qword_1E8F63F38 + 64);
  uint64_t v12 = *(void *)(v1 + qword_1E8F63F38 + 80);
  unint64_t v13 = *(void *)(v1 + qword_1E8F63F38 + 88);
  long long v14 = a1[1];
  *uint64_t v2 = *a1;
  v2[1] = v14;
  long long v15 = a1[3];
  _OWORD v2[2] = a1[2];
  v2[3] = v15;
  long long v16 = a1[5];
  v2[4] = a1[4];
  v2[5] = v16;
  sub_18356D3FC(v4, v3, v5, v6, v7, v8, v9, v10, v11, *((unint64_t *)&v11 + 1), v12, v13);
}

uint64_t HTTP.Progress.deinit()
{
  uint64_t v4 = v0;
  uint64_t v1 = type metadata accessor for HTTP.Progress();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_18355C504((uint64_t)&v4, v1, (uint64_t)&protocol witness table for HTTP.Progress<A, Pack{repeat B}>, WitnessTable, (uint64_t)&unk_1ECF65108, (uint64_t)sub_183570198, (uint64_t)&block_descriptor_364);
  swift_release();
  sub_183138A24(v0 + qword_1E8F63F20, &qword_1E8F63F28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_18356D3FC(*(void *)(v0 + qword_1E8F63F38), *(void *)(v0 + qword_1E8F63F38 + 8), *(void *)(v0 + qword_1E8F63F38 + 16), *(void *)(v0 + qword_1E8F63F38 + 24), *(void *)(v0 + qword_1E8F63F38 + 32), *(void *)(v0 + qword_1E8F63F38 + 40), *(void *)(v0 + qword_1E8F63F38 + 48), *(void *)(v0 + qword_1E8F63F38 + 56), *(void *)(v0 + qword_1E8F63F38 + 64), *(void *)(v0 + qword_1E8F63F38 + 72), *(void *)(v0 + qword_1E8F63F38 + 80), *(void *)(v0 + qword_1E8F63F38 + 88));
  return v0;
}

uint64_t HTTP.Progress.__deallocating_deinit()
{
  return sub_183564568((void (*)(void))HTTP.Progress.deinit);
}

unsigned int *sub_18356131C(unsigned int *result)
{
  unint64_t v1 = *result | ((unint64_t)*((unsigned __int8 *)result + 4) << 32);
  int v2 = *((unsigned __int8 *)result + 4) >> 6;
  if (v2)
  {
    if (v2 == 1)
    {
      unint64_t v5 = *result | ((unint64_t)*((unsigned __int8 *)result + 4) << 32) & 0x3FFFFFFFFFLL;
      long long v6 = 0u;
      long long v7 = 0u;
      long long v8 = 0u;
      long long v9 = 0u;
      unint64_t v4 = 0x8000000000000000;
    }
    else
    {
      if (v2 != 2) {
        return result;
      }
      if (v1 == 0x8000000001)
      {
        uint64_t v3 = 1;
      }
      else
      {
        if (v1 != 0x8000000002) {
          return result;
        }
        uint64_t v3 = 2;
      }
      unint64_t v5 = v3;
      long long v6 = 0u;
      long long v7 = 0u;
      long long v8 = 0u;
      long long v9 = 0u;
      unint64_t v4 = 0xC000000000000000;
    }
    uint64_t v11 = 0;
    long long v10 = v4;
  }
  else
  {
    unint64_t v5 = *result | ((unint64_t)*((unsigned __int8 *)result + 4) << 32);
    long long v6 = 0u;
    long long v7 = 0u;
    long long v8 = 0u;
    long long v9 = 0u;
    long long v10 = 0u;
    uint64_t v11 = 0;
  }
  return (unsigned int *)sub_1835613FC(&v5);
}

uint64_t sub_1835613FC(_OWORD *a1)
{
  uint64_t v3 = sub_183D449CC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_183D449EC();
  uint64_t v7 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  long long v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18356FD6C(a1, v17);
  if (qword_1E8F62168 != -1) {
    swift_once();
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v1;
  sub_18356FD6C(v17, (_OWORD *)(v10 + 24));
  aBlock[4] = sub_18356FDF0;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_183137440;
  aBlock[3] = &block_descriptor_340;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  sub_18356FE58(v17, sub_18356E8DC);
  sub_183D449DC();
  uint64_t v15 = MEMORY[0x1E4FBC860];
  sub_183570288((unint64_t *)&qword_1EB2669E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB2669C0);
  sub_1835702D0((unint64_t *)&qword_1EB2669D0, (uint64_t *)&unk_1EB2669C0);
  sub_183D453FC();
  MEMORY[0x1853146E0](0, v9, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v14);
  return swift_release();
}

void sub_183561710(uint64_t a1, _OWORD *a2)
{
  int v2 = a2;
  sub_18356FD6C(a2, &v196);
  uint64_t v151 = *((void *)&v196 + 1);
  uint64_t v152 = v197;
  uint64_t v153 = v198;
  uint64_t v154 = v199;
  uint64_t v150 = v200;
  unint64_t v155 = v202;
  uint64_t v156 = v201;
  uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644D0);
  uint64_t v160 = *(void *)(v182 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v182);
  os_log_type_t v149 = (char *)&v147 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v148 = (char *)&v147 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F61A50);
  uint64_t v161 = *(void *)(v7 - 8);
  uint64_t v162 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v183 = (void (*)(char *, char *, uint64_t))((char *)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v172 = (char *)&v147 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  int v173 = (char *)&v147 - v13;
  MEMORY[0x1F4188790](v12);
  unint64_t v180 = (char *)&v147 - v14;
  uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644E8);
  uint64_t v159 = *(void *)(v169 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v169);
  uint64_t v168 = (char *)&v147 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  unint64_t v181 = (char *)&v147 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F644D8);
  uint64_t v163 = *(void *)(v18 - 8);
  uint64_t v164 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v166 = (char *)&v147 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63F28);
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  uint64_t v158 = (uint64_t)&v147 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v167 = (uint64_t)&v147 - v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(qword_1E8F64400);
  uint64_t v170 = *(void *)(v24 - 8);
  uint64_t v171 = v24;
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  uint64_t v157 = (char *)&v147 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v165 = (char *)&v147 - v27;
  uint64_t v178 = a1;
  sub_183561090((uint64_t *)&v190);
  uint64_t v28 = *((void *)&v190 + 1);
  unint64_t v176 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((void *)&v191 + 1);
  uint64_t v29 = v191;
  uint64_t v177 = v190;
  uint64_t v30 = v192;
  uint64_t v174 = *((void *)&v193 + 1);
  uint64_t v31 = v193;
  uint64_t v175 = *((void *)&v192 + 1);
  long long v32 = v194;
  long long v33 = v195;
  long long v209 = v190;
  long long v210 = v191;
  long long v211 = v192;
  long long v212 = v193;
  long long v213 = v194;
  long long v214 = v195;
  uint64_t v179 = v2;
  sub_18356FD6C(v2, &v203);
  LOBYTE(v2) = _s7Network4HTTPC5StateO2eeoiySbAE_AEtFZ_0((uint64_t *)&v209, (uint64_t *)&v203);
  sub_18356D3FC(v177, v28, v29, (uint64_t)v176, v30, v175, v31, v174, v32, *((unint64_t *)&v32 + 1), v33, *((unint64_t *)&v33 + 1));
  if ((v2 & 1) == 0)
  {
    unint64_t v34 = v165;
    uint64_t v35 = v166;
    uint64_t v36 = v168;
    uint64_t v37 = v169;
    uint64_t v38 = v178;
    uint64_t v39 = v178 + qword_1E8F63F20;
    swift_beginAccess();
    uint64_t v40 = v167;
    sub_183138900(v39, v167, &qword_1E8F63F28);
    uint64_t v42 = v170;
    uint64_t v41 = v171;
    unint64_t v176 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v170 + 48);
    uint64_t v177 = v170 + 48;
    if (v176(v40, 1, v171) == 1)
    {
      sub_183138A24(v40, &qword_1E8F63F28);
      unint64_t v43 = v179;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v34, v40, v41);
      unint64_t v43 = v179;
      sub_18356FD6C(v179, &v209);
      sub_18356FE58(v43, sub_18356E8DC);
      sub_183D44FEC();
      (*(void (**)(char *, uint64_t))(v163 + 8))(v35, v164);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v34, v41);
    }
    sub_18356FD6C(v43, &v203);
    switch(*((void *)&v207 + 1) >> 62)
    {
      case 1:
        *((void *)&v207 + 1) &= 0x3FFFFFFFFFFFFFFFuLL;
        long long v211 = v205;
        long long v212 = v206;
        long long v209 = v203;
        long long v210 = v204;
        long long v213 = v207;
        long long v214 = v208;
        sub_183560FDC(v185);
        uint64_t v51 = (char *)*((void *)&v186 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1834D7FF8(v156, v155);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v52 = *((void *)v51 + 2);
        if (v52)
        {
          uint64_t v53 = v160 + 16;
          uint64_t v183 = *(void (**)(char *, char *, uint64_t))(v160 + 16);
          uint64_t v54 = *(unsigned __int8 *)(v160 + 80);
          unint64_t v181 = v51;
          uint64_t v55 = &v51[(v54 + 32) & ~v54];
          uint64_t v56 = *(void *)(v160 + 72);
          int v57 = (void (**)(char *, uint64_t))(v160 + 8);
          char v58 = v179;
          uint64_t v59 = v182;
          int v60 = v148;
          do
          {
            uint64_t v61 = v53;
            v183(v60, v55, v59);
            long long v186 = v211;
            long long v187 = v212;
            long long v188 = v213;
            long long v189 = v214;
            v185[0] = v209;
            v185[1] = v210;
            sub_18356FE58(v58, sub_18356E8DC);
            sub_183D44F4C();
            uint64_t v59 = v182;
            (*v57)(v60, v182);
            uint64_t v53 = v61;
            v55 += v56;
            --v52;
          }
          while (v52);
        }
        swift_bridgeObjectRelease();
        uint64_t v83 = v178;
        uint64_t v84 = v178 + qword_1E8F63F30;
        swift_beginAccess();
        *(void *)(v84 + 40) = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRelease();
        uint64_t v85 = v83 + qword_1E8F63F20;
        swift_beginAccess();
        uint64_t v86 = v85;
        uint64_t v87 = v158;
        sub_183138900(v86, v158, &qword_1E8F63F28);
        uint64_t v88 = v171;
        unsigned int v89 = v176(v87, 1, v171);
        uint64_t v90 = v170;
        uint64_t v91 = v157;
        if (v89 == 1)
        {
          sub_18356FE58(v179, sub_18356D3FC);
          sub_183138A24(v87, &qword_1E8F63F28);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v170 + 32))(v157, v87, v88);
          sub_183D44FFC();
          sub_18356FE58(v179, sub_18356D3FC);
          (*(void (**)(char *, uint64_t))(v90 + 8))(v91, v88);
        }
        goto LABEL_50;
      case 2:
        *((void *)&v207 + 1) &= 0x3FFFFFFFFFFFFFFFuLL;
        sub_18356FDFC((uint64_t)&v203, (uint64_t)v184);
        sub_183560FDC(&v209);
        uint64_t v62 = (char *)*((void *)&v209 + 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v63 = *((void *)v62 + 2);
        if (v63)
        {
          uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v159 + 16);
          unint64_t v65 = (*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80);
          unint64_t v181 = v62;
          uint64_t v66 = &v62[v65];
          uint64_t v67 = *(void *)(v159 + 72);
          uint64_t v68 = (void (**)(char *, uint64_t))(v159 + 8);
          uint64_t v69 = v36;
          do
          {
            v64(v69, v66, v37);
            sub_1834AC424();
            uint64_t v70 = swift_allocError();
            sub_18356FDFC((uint64_t)v184, v71);
            *(void *)&long long v209 = v70;
            uint64_t v69 = v36;
            sub_183D44F3C();
            (*v68)(v36, v37);
            v66 += v67;
            --v63;
          }
          while (v63);
          swift_bridgeObjectRelease();
          uint64_t v72 = v178;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v72 = v38;
        }
        uint64_t v92 = (char *)(v72 + qword_1E8F63F30);
        swift_beginAccess();
        *((void *)v92 + 1) = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRelease();
        sub_183560FDC(&v209);
        uint64_t v93 = v210;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v94 = *(void *)(v93 + 16);
        unint64_t v181 = v92;
        if (v94)
        {
          uint64_t v95 = v162;
          uint64_t v96 = *(void (**)(char *, uint64_t, uint64_t))(v161 + 16);
          uint64_t v97 = v93 + ((*(unsigned __int8 *)(v161 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80));
          uint64_t v98 = *(void *)(v161 + 72);
          id v99 = (void (**)(char *, uint64_t))(v161 + 8);
          int v100 = (char *)v183;
          do
          {
            v96(v100, v97, v95);
            sub_1834AC424();
            uint64_t v101 = swift_allocError();
            sub_18356FDFC((uint64_t)v184, v102);
            *(void *)&long long v209 = v101;
            sub_183D44F3C();
            int v100 = (char *)v183;
            (*v99)((char *)v183, v95);
            v97 += v98;
            --v94;
          }
          while (v94);
          swift_bridgeObjectRelease();
          uint64_t v92 = v181;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v103 = MEMORY[0x1E4FBC860];
        *((void *)v92 + 2) = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRelease();
        sub_183560FDC(&v209);
        uint64_t v104 = *((void *)&v210 + 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v105 = *(void *)(v104 + 16);
        if (v105)
        {
          uLong v106 = *(void (**)(char *, uint64_t, uint64_t))(v161 + 16);
          uint64_t v107 = v104 + ((*(unsigned __int8 *)(v161 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80));
          uint64_t v108 = *(void *)(v161 + 72);
          uint64_t v109 = (void (**)(char *, uint64_t))(v161 + 8);
          uint64_t v110 = v162;
          uint64_t v111 = (char *)v183;
          do
          {
            v106(v111, v107, v110);
            sub_1834AC424();
            uint64_t v112 = swift_allocError();
            sub_18356FDFC((uint64_t)v184, v113);
            *(void *)&long long v209 = v112;
            sub_183D44F3C();
            uint64_t v111 = (char *)v183;
            (*v109)((char *)v183, v110);
            v107 += v108;
            --v105;
          }
          while (v105);
          swift_bridgeObjectRelease();
          uint64_t v92 = v181;
          uint64_t v103 = MEMORY[0x1E4FBC860];
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        *((void *)v92 + 3) = v103;
        swift_bridgeObjectRelease();
        sub_183560FDC(&v209);
        uint64_t v114 = (char *)*((void *)&v211 + 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v115 = *((void *)v114 + 2);
        if (v115)
        {
          unint64_t v116 = *(void (**)(char *, char *, uint64_t))(v160 + 16);
          unint64_t v117 = (*(unsigned __int8 *)(v160 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v160 + 80);
          uint64_t v183 = (void (*)(char *, char *, uint64_t))v114;
          uint64_t v118 = &v114[v117];
          uint64_t v119 = *(void *)(v160 + 72);
          uint64_t v120 = (void (**)(char *, uint64_t))(v160 + 8);
          uint64_t v121 = v182;
          uint64_t v122 = v149;
          do
          {
            v116(v122, v118, v121);
            sub_1834AC424();
            uint64_t v123 = swift_allocError();
            sub_18356FDFC((uint64_t)v184, v124);
            *(void *)&long long v209 = v123;
            sub_183D44F3C();
            uint64_t v121 = v182;
            (*v120)(v122, v182);
            v118 += v119;
            --v115;
          }
          while (v115);
          swift_bridgeObjectRelease();
          uint64_t v92 = v181;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        *((void *)v92 + 5) = MEMORY[0x1E4FBC860];
        goto LABEL_49;
      case 3:
        if (*((void *)&v207 + 1) == 0xC000000000000000
          && !((unint64_t)v208 | (unint64_t)v203 | *((void *)&v208 + 1) | (unint64_t)v207 | *((void *)&v206 + 1) | (unint64_t)v206 | *((void *)&v205 + 1) | (unint64_t)v205 | *((void *)&v204 + 1) | (unint64_t)v204 | *((void *)&v203 + 1)))
        {
          goto LABEL_50;
        }
        uint64_t v73 = *((void *)&v208 + 1) | v208 | v207 | *((void *)&v206 + 1) | v206 | *((void *)&v205 + 1) | v205 | *((void *)&v204 + 1) | v204 | *((void *)&v203 + 1);
        if (*((void *)&v207 + 1) == 0xC000000000000000 && (void)v203 == 1 && !v73)
        {
          sub_183560FDC(&v209);
          uint64_t v74 = v210;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v75 = *(void *)(v74 + 16);
          if (v75)
          {
            uint64_t v76 = v162;
            uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t))(v161 + 16);
            uint64_t v78 = v74 + ((*(unsigned __int8 *)(v161 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80));
            uint64_t v79 = *(void *)(v161 + 72);
            uint64_t v80 = (void (**)(char *, uint64_t))(v161 + 8);
            uint64_t v81 = v180;
            do
            {
              v77(v81, v78, v76);
              sub_183D44F4C();
              uint64_t v81 = v180;
              (*v80)(v180, v76);
              v78 += v79;
              --v75;
            }
            while (v75);
            swift_bridgeObjectRelease();
            uint64_t v38 = v178;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          uint64_t v144 = v38 + qword_1E8F63F30;
          swift_beginAccess();
          *(void *)(v144 + 16) = MEMORY[0x1E4FBC860];
        }
        else if (*((void *)&v207 + 1) == 0xC000000000000000 && (void)v203 == 2 && !v73)
        {
          sub_183560FDC(&v209);
          uint64_t v126 = *((void *)&v210 + 1);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v127 = *(void *)(v126 + 16);
          uint64_t v128 = v162;
          if (v127)
          {
            uint64_t v129 = v161 + 16;
            uint64_t v130 = *(void (**)(char *, uint64_t, uint64_t))(v161 + 16);
            uint64_t v131 = v126
                 + ((*(unsigned __int8 *)(v161 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80));
            uint64_t v132 = *(void *)(v161 + 72);
            uint64_t v133 = (void (**)(char *, uint64_t))(v161 + 8);
            uint64_t v134 = v173;
            do
            {
              uint64_t v135 = v129;
              v130(v134, v131, v128);
              sub_183D44F4C();
              uint64_t v134 = v173;
              (*v133)(v173, v128);
              uint64_t v129 = v135;
              v131 += v132;
              --v127;
            }
            while (v127);
            swift_bridgeObjectRelease();
            uint64_t v38 = v178;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          uint64_t v145 = v38 + qword_1E8F63F30;
          swift_beginAccess();
          *(void *)(v145 + 24) = MEMORY[0x1E4FBC860];
        }
        else
        {
          sub_183560FDC(&v209);
          uint64_t v136 = v211;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v137 = *(void *)(v136 + 16);
          uint64_t v138 = v162;
          if (v137)
          {
            uint64_t v139 = *(void (**)(char *, uint64_t, uint64_t))(v161 + 16);
            uint64_t v140 = v136
                 + ((*(unsigned __int8 *)(v161 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80));
            uint64_t v141 = *(void *)(v161 + 72);
            uint64_t v142 = (void (**)(char *, uint64_t))(v161 + 8);
            int v143 = v172;
            do
            {
              v139(v143, v140, v138);
              sub_183D44F4C();
              int v143 = v172;
              (*v142)(v172, v138);
              v140 += v141;
              --v137;
            }
            while (v137);
            swift_bridgeObjectRelease();
            uint64_t v38 = v178;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          uint64_t v146 = v38 + qword_1E8F63F30;
          swift_beginAccess();
          *(void *)(v146 + 32) = MEMORY[0x1E4FBC860];
        }
LABEL_49:
        swift_bridgeObjectRelease();
LABEL_50:
        uint64_t v125 = v179;
        sub_18356FD6C(v179, v185);
        sub_18356FE58(v125, sub_18356E8DC);
        sub_1835610F4(v185);
        break;
      default:
        *((void *)&v207 + 1) &= 0x3FFFFFFFFFFFFFFFuLL;
        sub_18356FDFC((uint64_t)&v203, (uint64_t)v215);
        sub_183560FDC(&v209);
        uint64_t v44 = *((void *)&v209 + 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v45 = *(void *)(v44 + 16);
        if (v45)
        {
          int v46 = *(void (**)(char *, uint64_t, uint64_t))(v159 + 16);
          uint64_t v47 = v44 + ((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80));
          uint64_t v48 = *(void *)(v159 + 72);
          uint64_t v49 = (void (**)(char *, uint64_t))(v159 + 8);
          uint64_t v50 = v181;
          do
          {
            v46(v50, v47, v37);
            sub_18356FDFC((uint64_t)v215, (uint64_t)&v209);
            sub_183D44F4C();
            uint64_t v50 = v181;
            (*v49)(v181, v37);
            v47 += v48;
            --v45;
          }
          while (v45);
          swift_bridgeObjectRelease();
          uint64_t v38 = v178;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v82 = v38 + qword_1E8F63F30;
        swift_beginAccess();
        *(void *)(v82 + 8) = MEMORY[0x1E4FBC860];
        goto LABEL_49;
    }
  }
}

uint64_t sub_183562A2C@<X0>(uint64_t (**a1)(uint64_t a1)@<X8>)
{
  *a1 = sub_18356D4A0;
  a1[1] = v1;
  return swift_retain();
}

uint64_t sub_183562A48(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a2;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8F644D8);
  uint64_t v3 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63F28);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1E8F64400);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1 + qword_1E8F63F20;
  swift_beginAccess();
  sub_183138900(v16, (uint64_t)v11, &qword_1E8F63F28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_183138A24((uint64_t)v11, &qword_1E8F63F28);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    sub_183D44FFC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v9, 1, 1, v12);
    sub_183560F60((uint64_t)v9);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  uint64_t v17 = v21;
  uint64_t v18 = v20;
  sub_183561090((uint64_t *)v28);
  long long v22 = v28[0];
  long long v23 = v28[1];
  long long v24 = v28[2];
  long long v25 = v28[3];
  long long v26 = v28[4];
  long long v27 = v28[5];
  sub_183D44FEC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v18);
  sub_183561090((uint64_t *)&v22);
  switch(*((void *)&v26 + 1) >> 62)
  {
    case 1:
      sub_18356D3FC(v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26, *((unint64_t *)&v26 + 1), v27, *((unint64_t *)&v27 + 1));
      goto LABEL_6;
    case 2:
LABEL_6:
      sub_183D44FFC();
      break;
    default:
      (*(void (**)(char *, uint64_t, uint64_t, void, void, void, void, void))(v13 + 16))(v9, v17, v12, *((void *)&v23 + 1), v24, *((void *)&v24 + 1), v25, *((void *)&v25 + 1));
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      sub_183560F60((uint64_t)v9);
      break;
  }
  swift_retain();
  return sub_183D44FCC();
}

uint64_t sub_183562EAC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t (*a5)(char *))
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  return a5(v9);
}

uint64_t sub_183562F74(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_183562F94, 0, 0);
}

uint64_t sub_183562F94()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_18356305C;
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  return MEMORY[0x1F4188160](v2, 0, 0, 1701736292, 0xE400000000000000, sub_18356D4E8, v3, &type metadata for HTTP.Response);
}

uint64_t sub_18356305C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_183563190, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_183563190()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1835631A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644D0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_183561090(v26);
  uint64_t v8 = v26[0];
  switch(v32 >> 62)
  {
    case 1uLL:
      v17[0] = v26[0];
      v17[1] = v26[1];
      void v17[2] = v26[2];
      void v17[3] = v26[3];
      char v18 = v27;
      uint64_t v19 = v28;
      uint64_t v20 = v29;
      uint64_t v21 = v30;
      uint64_t v22 = v31;
      uint64_t v23 = v32 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v24 = v33;
      uint64_t v25 = v34;
      uint64_t result = sub_183D44F4C();
      break;
    case 2uLL:
      sub_1834AC424();
      uint64_t v10 = swift_allocError();
      *(_DWORD *)uint64_t v11 = v8;
      *(unsigned char *)(v11 + 4) = BYTE4(v8);
      v17[0] = v10;
      uint64_t result = sub_183D44F3C();
      break;
    default:
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
      uint64_t v12 = a1 + qword_1E8F63F30;
      swift_beginAccess();
      unint64_t v13 = *(void *)(v12 + 40);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v12 + 40) = v13;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v13 = sub_1834B4ECC(0, *(void *)(v13 + 16) + 1, 1, v13);
        *(void *)(v12 + 40) = v13;
      }
      unint64_t v16 = *(void *)(v13 + 16);
      unint64_t v15 = *(void *)(v13 + 24);
      if (v16 >= v15 >> 1)
      {
        unint64_t v13 = sub_1834B4ECC(v15 > 1, v16 + 1, 1, v13);
        *(void *)(v12 + 40) = v13;
      }
      *(void *)(v13 + 16) = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v13+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v16, v7, v4);
      uint64_t result = swift_endAccess();
      break;
  }
  return result;
}

uint64_t sub_183563454()
{
  return sub_183D45B4C();
}

uint64_t sub_18356349C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1835634B4(a1, a2, a3, (void (*)(unsigned char *))sub_183570338);
}

uint64_t sub_1835634B4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_183D45AFC();
  a4(v6);
  return sub_183D45B4C();
}

unsigned int *sub_1835634FC(unsigned int *a1)
{
  return sub_18356131C(a1);
}

uint64_t HTTP.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t HTTP.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1835635C8(NSObject *a1)
{
  return HTTP.configure(parameters:)(a1);
}

uint64_t sub_1835635EC(uint64_t a1, uint64_t a2)
{
  return sub_183563638(a1, a2);
}

uint64_t sub_183563638(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + *(void *)(*(void *)v2 + 128);
  uint64_t v6 = sub_183D4500C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = (void *)(v2 + *(void *)(*(void *)v2 + 136));
  *uint64_t v7 = a1;
  v7[1] = a2;
  return v2;
}

uint64_t sub_1835636F4()
{
  uint64_t v1 = *(void (**)(uint64_t (*)(char *, uint64_t), uint64_t))(v0 + *(void *)(*(void *)v0 + 136));
  swift_retain();
  v1(sub_18356FB94, v0);

  return swift_release();
}

uint64_t sub_183563774(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v42 = a1;
  uint64_t v4 = *(void *)(*(void *)a3 + 88);
  uint64_t v5 = sub_183D4500C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v40 = v5;
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v36 = (char *)&v35 - v7;
  uint64_t v37 = sub_183D44FBC();
  uint64_t v8 = sub_183D4536C();
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v39 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v11 = sub_183D4536C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)&v35 - v14;
  uint64_t v16 = *(void *)(v4 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v13);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  unint64_t v43 = (char *)&v35 - v20;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v42, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v4) == 1)
  {
    uint64_t v21 = v40;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    uint64_t v22 = a3 + *(void *)(*(void *)a3 + 128);
    uint64_t v23 = v41;
    uint64_t v24 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
    swift_beginAccess();
    uint64_t result = (*v24)(v22, 1, v21);
    if (!result)
    {
      long long v26 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v36, v22, v21);
      sub_183D44FFC();
      return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v26, v21);
    }
  }
  else
  {
    uint64_t v42 = v19;
    uint64_t v27 = v10;
    uint64_t v28 = v37;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v43, v15, v4);
    uint64_t v29 = a3 + *(void *)(*(void *)a3 + 128);
    swift_beginAccess();
    uint64_t v30 = v40;
    uint64_t v31 = v41;
    uint64_t v32 = 1;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v29, 1, v40))
    {
      uint64_t v33 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v36, v29, v30);
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v42, v43, v4);
      sub_183D44FEC();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
      uint64_t v32 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, v32, 1, v28);
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v27, v39);
    sub_1835636F4(v34);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v43, v4);
  }
  return result;
}

uint64_t AsyncSequenceReceive.makeAsyncIterator()()
{
  uint64_t v0 = sub_183D44FDC();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = sub_183D4504C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - v6;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBD028], v0);
  sub_183D4505C();
  sub_1835636F4();
  sub_183D4501C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_183563E24(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)*a2;
  uint64_t v5 = (void *)*a2;
  uint64_t v6 = sub_183D449CC();
  uint64_t v26 = *(void *)(v6 - 8);
  uint64_t v27 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v25 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_183D449EC();
  uint64_t v23 = *(void *)(v8 - 8);
  uint64_t v24 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v4[11];
  uint64_t v12 = sub_183D4500C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)v22 - v14;
  if (qword_1E8F62168 != -1) {
    swift_once();
  }
  v22[1] = qword_1E8F7A920;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = v5[10];
  *((void *)v17 + 3) = v11;
  *((void *)v17 + 4) = v5[12];
  *((void *)v17 + 5) = swift_allocateMetadataPack();
  *((void *)v17 + 6) = v5[14];
  *((void *)v17 + 7) = swift_allocateWitnessTablePack();
  *((void *)v17 + 8) = a2;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v17[v16], v15, v12);
  aBlock[4] = sub_18356FC6C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_183137440;
  aBlock[3] = &block_descriptor_322;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  sub_183D449DC();
  uint64_t v28 = MEMORY[0x1E4FBC860];
  sub_183570288((unint64_t *)&qword_1EB2669E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB2669C0);
  sub_1835702D0((unint64_t *)&qword_1EB2669D0, (uint64_t *)&unk_1EB2669C0);
  uint64_t v19 = v25;
  uint64_t v20 = v27;
  sub_183D453FC();
  MEMORY[0x1853146E0](0, v10, v19, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v20);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v24);
  return swift_release();
}

uint64_t sub_18356424C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = sub_183D4500C();
  uint64_t v6 = sub_183D4536C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = &v16[-v11];
  uint64_t v13 = (char *)a1 + *(void *)(v4 + 128);
  swift_beginAccess();
  (*(void (**)(unsigned char *, char *, uint64_t))(v7 + 16))(v12, v13, v6);
  uint64_t v14 = *(void *)(v5 - 8);
  LODWORD(v4) = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v5);
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v12, v6);
  if (v4 != 1) {
    return sub_183D44FFC();
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v10, a2, v5);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v5);
  swift_beginAccess();
  (*(void (**)(char *, unsigned char *, uint64_t))(v7 + 40))(v13, v10, v6);
  return swift_endAccess();
}

uint64_t AsyncSequenceReceive.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 128);
  sub_183D4500C();
  uint64_t v2 = sub_183D4536C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t AsyncSequenceReceive.__deallocating_deinit()
{
  return sub_183564568((void (*)(void))AsyncSequenceReceive.deinit);
}

uint64_t sub_183564568(void (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t sub_1835645C4()
{
  AsyncSequenceReceive.makeAsyncIterator()();

  return swift_release();
}

uint64_t Connection1<>.send(_:metadata:isComplete:)(uint64_t a1, unint64_t a2, unint64_t a3, char a4, uint64_t a5)
{
  uint64_t v11 = *v5;
  uint64_t v12 = *(void *)(a5 + 8);
  uint64_t v13 = *(void *)(*v5 + 112);
  uint64_t v20 = *(uint64_t (**)(unsigned int *))(*v5 + 80);
  long long v21 = *(_OWORD *)(v11 + 88);
  uint64_t v22 = v12;
  uint64_t v23 = v13;
  type metadata accessor for SendProgress();
  uint64_t v14 = swift_retain();
  uint64_t v15 = sub_18356F230(v14, (void (*)(void, uint64_t *))type metadata accessor for SendProgress, sub_18356D538);
  swift_release();
  type metadata accessor for NWConnection.ContentContext();
  swift_initStackObject();
  swift_bridgeObjectRetain();
  NWConnection.ContentContext.init(identifier:expiration:priority:isFinal:antecedent:metadata:)(0x746E6F43646E6573, 0xEB00000000747865, 0, a4, 0, a3, 0.5);
  uint64_t v17 = v16;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a5;
  *(void *)(v18 + 24) = v15;
  uint64_t v20 = sub_18356D704;
  *(void *)&long long v21 = v18;
  swift_retain();
  NWConnection.send(content:contentContext:isComplete:completion:)(a1, a2, v17, 1, (uint64_t *)&v20);
  swift_release();
  swift_release();
  return v15;
}

uint64_t Connection1<>.send(_:metadata:isComplete:)(unint64_t a1, unint64_t a2, unint64_t a3, char a4, uint64_t a5)
{
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1834CD42C(a1, a2);
  unint64_t v12 = v11;
  uint64_t v13 = Connection1<>.send(_:metadata:isComplete:)(v10, v11, a3, a4, a5);
  sub_1832E5E9C(v10, v12);
  return v13;
}

uint64_t Connection1<>.receive(minimumLength:maximumLength:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  return MEMORY[0x1F4188298](sub_183564868, 0, 0);
}

uint64_t sub_183564868()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 80) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 64);
  *(void *)(v3 + 32) = v2;
  *(void *)(v3 + 40) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63F50);
  *uint64_t v4 = v0;
  v4[1] = sub_183564974;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000025, 0x8000000183E26310, sub_18356D720, v3, v5);
}

uint64_t sub_183564974()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_183564B10;
  }
  else {
    uint64_t v2 = sub_183564A88;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_183564A88()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 40);
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8);
  return v5(v2, v1, v3, v4);
}

uint64_t sub_183564B10()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_183564B78(uint64_t a1, uint64_t a2, uint32_t a3, uint32_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644C8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = *(void *)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  uint64_t v14 = *(NSObject **)(v11 + 16);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_18356FB38;
  *(void *)(v15 + 24) = v13;
  aBlock[4] = sub_183570334;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1832E5DC4;
  aBlock[3] = &block_descriptor_306;
  uint64_t v16 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  nw_connection_receive(v14, a3, a4, v16);
  swift_unknownObjectRelease();
  _Block_release(v16);
  return swift_release();
}

uint64_t Connection1<>.receive(exactly:)(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  return MEMORY[0x1F4188298](sub_183564DA8, 0, 0);
}

uint64_t sub_183564DA8()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 56);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63F50);
  *uint64_t v3 = v0;
  v3[1] = sub_183564EB4;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000011, 0x8000000183E26340, sub_18356D72C, v2, v4);
}

uint64_t sub_183564EB4()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_183565050;
  }
  else {
    uint64_t v2 = sub_183564FC8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_183564FC8()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 40);
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8);
  return v5(v2, v1, v3, v4);
}

uint64_t sub_183565050()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1835650B8(uint64_t a1, uint64_t a2, uint32_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644C8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = *(void *)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  unint64_t v12 = *(NSObject **)(v9 + 16);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_18356F978;
  *(void *)(v13 + 24) = v11;
  aBlock[4] = sub_183570334;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1832E5DC4;
  aBlock[3] = &block_descriptor_286;
  uint64_t v14 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  nw_connection_receive(v12, a3, a3, v14);
  swift_unknownObjectRelease();
  _Block_release(v14);
  return swift_release();
}

uint64_t sub_1835652B8(uint64_t a1, unint64_t a2, uint64_t a3, char a4, unsigned int *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a2 >> 60 == 15)
  {
    if (a3)
    {
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = MEMORY[0x1E4FBC860];
      uint64_t v13 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
      uint64_t v14 = *(NSObject **)(a3 + 16);
      uint64_t v32 = a9;
      uint64_t v33 = v12;
      *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
      *((void *)&aBlock + 1) = 1107296256;
      uint64_t v30 = sub_183573F68;
      uint64_t v31 = a10;
      uint64_t v15 = _Block_copy(&aBlock);
      swift_retain();
      swift_unknownObjectRetain();
      swift_retain();
      swift_release();
      nw_content_context_foreach_protocol_metadata(v14, v15);
      _Block_release(v15);
      swift_unknownObjectRelease();
      swift_beginAccess();
      uint64_t v16 = *v13;
      swift_bridgeObjectRetain();
      swift_release();
      long long aBlock = xmmword_183D54880;
      uint64_t v30 = v16;
      LOBYTE(v31) = a4 & 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644C8);
      sub_183D44F4C();
      return swift_release();
    }
  }
  else if (a3)
  {
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v22 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
    uint64_t v23 = *(NSObject **)(a3 + 16);
    uint64_t v32 = a7;
    uint64_t v33 = v21;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v30 = sub_183573F68;
    uint64_t v31 = a8;
    uint64_t v24 = _Block_copy(&aBlock);
    sub_1834D7FF8(a1, a2);
    sub_1834D7FF8(a1, a2);
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    nw_content_context_foreach_protocol_metadata(v23, v24);
    _Block_release(v24);
    swift_unknownObjectRelease();
    swift_beginAccess();
    uint64_t v25 = *v22;
    swift_bridgeObjectRetain();
    swift_release();
    *(void *)&long long aBlock = a1;
    *((void *)&aBlock + 1) = a2;
    uint64_t v30 = v25;
    LOBYTE(v31) = a4 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644C8);
    sub_183D44F4C();
    sub_1832E669C(a1, a2);
    return swift_release();
  }
  unint64_t v27 = *a5 | ((unint64_t)*((unsigned __int8 *)a5 + 4) << 32);
  sub_1834AC424();
  swift_allocError();
  if (HIDWORD(v27) <= 0xFE)
  {
    *(_DWORD *)uint64_t v28 = v27;
    *(unsigned char *)(v28 + 4) = BYTE4(v27);
  }
  else
  {
    *(_DWORD *)uint64_t v28 = 54;
    *(unsigned char *)(v28 + 4) = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644C8);
  return sub_183D44F3C();
}

uint64_t Connection1<>.receive()(uint64_t a1)
{
  return sub_183566A88(a1, &qword_1E8F63F50, (uint64_t)&unk_1ECF64460, (uint64_t)sub_18356D750);
}

{
  return sub_183566A88(a1, &qword_1E8F63F68, (uint64_t)&unk_1ECF644B0, (uint64_t)sub_18356D760);
}

uint64_t sub_183565628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_18356F920;
  *(void *)(v8 + 24) = v6;
  uint64_t v9 = *(NSObject **)(v7 + 16);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_18356F964;
  *(void *)(v10 + 24) = v8;
  void v13[4] = sub_1832E5E74;
  void v13[5] = v10;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  uint64_t v13[2] = sub_1832E5DC4;
  v13[3] = &block_descriptor_266;
  uint64_t v11 = _Block_copy(v13);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  nw_connection_receive(v9, 1u, 0xFFFFFFFF, v11);
  swift_unknownObjectRelease();
  _Block_release(v11);
  return swift_release();
}

uint64_t sub_183565794(uint64_t a1, unint64_t a2, uint64_t a3, char a4, unsigned int *a5, void (*a6)(uint64_t, unint64_t, uint64_t, void, int *))
{
  if (a2 >> 60 == 15)
  {
    if (a3)
    {
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = MEMORY[0x1E4FBC860];
      uint64_t v10 = (uint64_t *)(v9 + 16);
      uint64_t v11 = *(NSObject **)(a3 + 16);
      uint64_t v32 = sub_18356F304;
      uint64_t v33 = v9;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v29 = 1107296256;
      uint64_t v30 = sub_183573F68;
      uint64_t v31 = &block_descriptor_271;
      uint64_t v12 = _Block_copy(&aBlock);
      swift_retain();
      swift_unknownObjectRetain();
      swift_retain();
      swift_release();
      nw_content_context_foreach_protocol_metadata(v11, v12);
      _Block_release(v12);
      swift_unknownObjectRelease();
      swift_beginAccess();
      uint64_t v13 = *v10;
      swift_bridgeObjectRetain();
      swift_release();
      char v27 = -1;
      int v26 = 0;
      a6(0, 0xC000000000000000, v13, a4 & 1, &v26);
      uint64_t v14 = 0;
      unint64_t v15 = 0xC000000000000000;
LABEL_6:
      sub_1832E5E9C(v14, v15);
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  else if (a3)
  {
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v19 = (uint64_t *)(v18 + 16);
    uint64_t v25 = a6;
    uint64_t v20 = *(NSObject **)(a3 + 16);
    uint64_t v32 = sub_18356F304;
    uint64_t v33 = v18;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v29 = 1107296256;
    uint64_t v30 = sub_183573F68;
    uint64_t v31 = &block_descriptor_276;
    uint64_t v21 = _Block_copy(&aBlock);
    sub_1834D7FF8(a1, a2);
    sub_1834D7FF8(a1, a2);
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    nw_content_context_foreach_protocol_metadata(v20, v21);
    _Block_release(v21);
    swift_unknownObjectRelease();
    swift_beginAccess();
    uint64_t v22 = *v19;
    swift_bridgeObjectRetain();
    swift_release();
    char v27 = -1;
    int v26 = 0;
    v25(a1, a2, v22, a4 & 1, &v26);
    sub_1832E669C(a1, a2);
    uint64_t v14 = a1;
    unint64_t v15 = a2;
    goto LABEL_6;
  }
  unint64_t v24 = *a5 | ((unint64_t)*((unsigned __int8 *)a5 + 4) << 32);
  if (BYTE4(v24) == 255)
  {
    BYTE4(aBlock) = 0;
    LODWORD(aBlock) = 54;
  }
  else
  {
    LODWORD(aBlock) = *a5;
    BYTE4(aBlock) = BYTE4(v24);
  }
  return ((uint64_t (*)(void, void, uint64_t, void, uint64_t *))a6)(0, 0, 1, 0, &aBlock);
}

uint64_t sub_183565AEC(unsigned char *a1, void *a2)
{
  sub_1834BDE24((uint64_t)a2, (uint64_t)v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644B8);
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    sub_1834BDE24((uint64_t)a2, (uint64_t)v8);
    swift_dynamicCast();
    *a1 = 1;
    return sub_1834CD42C(v6, v7);
  }
  else
  {
    sub_1834BDE24((uint64_t)a2, (uint64_t)v8);
    if (swift_dynamicCast())
    {
      sub_1832E5E9C(v6, v7);
      *a1 = 2;
      sub_1834BDE24((uint64_t)a2, (uint64_t)v8);
      swift_dynamicCast();
      return v6;
    }
    else
    {
      *a1 = 2;
      __swift_project_boxed_opaque_existential_2(a2, a2[3]);
      sub_183D442AC();
      swift_allocObject();
      sub_183D4429C();
      uint64_t v4 = sub_183D4427C();
      swift_release();
    }
  }
  return v4;
}

uint64_t sub_183565C98(uint64_t a1, unint64_t a2)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  if (swift_dynamicCastMetatype())
  {
    switch(a2 >> 62)
    {
      case 1uLL:
        if (a1 >> 32 < (int)a1) {
          __break(1u);
        }
        sub_1832E5D6C(a1, a2);
        uint64_t v9 = sub_18356C294((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_18356C458);
        uint64_t v10 = v13;
        if (v13) {
          goto LABEL_21;
        }
        goto LABEL_13;
      case 2uLL:
        uint64_t v5 = *(void *)(a1 + 16);
        uint64_t v6 = *(void *)(a1 + 24);
        sub_1832E5D6C(a1, a2);
        swift_retain();
        swift_retain();
        uint64_t v7 = sub_18356C294(v5, v6, a2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_18356C458);
        if (v2)
        {
          swift_release();
          swift_release();
          __break(1u);
          JUMPOUT(0x183566088);
        }
        uint64_t v9 = v7;
        uint64_t v10 = v8;
        swift_release();
        swift_release();
        if (v10) {
          goto LABEL_21;
        }
LABEL_13:
        uint64_t v17 = a1;
        unint64_t v18 = a2;
        sub_1832E5D6C(a1, a2);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644A0);
        if (swift_dynamicCast())
        {
          sub_1834D9964(v15, (uint64_t)&v19);
          __swift_project_boxed_opaque_existential_2(&v19, v20);
          if (sub_183D4573C())
          {
            __swift_project_boxed_opaque_existential_2(&v19, v20);
            sub_183D4572C();
            sub_1832E5E9C(a1, a2);
            uint64_t v10 = *((void *)&v15[0] + 1);
            uint64_t v9 = *(void *)&v15[0];
            __swift_destroy_boxed_opaque_existential_2((uint64_t)&v19);
            goto LABEL_22;
          }
          __swift_destroy_boxed_opaque_existential_2((uint64_t)&v19);
        }
        else
        {
          uint64_t v16 = 0;
          memset(v15, 0, sizeof(v15));
          sub_183138A24((uint64_t)v15, &qword_1E8F63150);
        }
        uint64_t v11 = sub_18353A8F4(a1, a2);
LABEL_20:
        uint64_t v9 = v11;
        uint64_t v10 = v12;
LABEL_21:
        sub_1832E5E9C(a1, a2);
LABEL_22:
        *(void *)&long long v19 = v9;
        *((void *)&v19 + 1) = v10;
        break;
      case 3uLL:
        *(void *)((char *)&v19 + 6) = 0;
        *(void *)&long long v19 = 0;
        goto LABEL_10;
      default:
        *(void *)&long long v19 = a1;
        WORD4(v19) = a2;
        BYTE10(v19) = BYTE2(a2);
        BYTE11(v19) = BYTE3(a2);
        BYTE12(v19) = BYTE4(a2);
        BYTE13(v19) = BYTE5(a2);
LABEL_10:
        uint64_t v11 = sub_183D44C1C();
        goto LABEL_20;
    }
  }
  else
  {
    if (!swift_dynamicCastMetatype())
    {
      sub_183D4426C();
      swift_allocObject();
      sub_183D4425C();
      sub_183D4423C();
      return swift_release();
    }
    *(void *)&long long v19 = a1;
    *((void *)&v19 + 1) = a2;
    sub_1832E5D6C(a1, a2);
  }
  return swift_dynamicCast();
}

uint64_t Connection1<>.send(_:metadata:)(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v9 = *v4;
  uint64_t v10 = *(void *)(a4 + 8);
  uint64_t v11 = *(void *)(*v4 + 112);
  unint64_t v18 = *(uint64_t (**)(unsigned int *))(*v4 + 80);
  long long v19 = *(_OWORD *)(v9 + 88);
  uint64_t v20 = v10;
  uint64_t v21 = v11;
  type metadata accessor for SendProgress();
  uint64_t v12 = swift_retain();
  uint64_t v13 = sub_18356F230(v12, (void (*)(void, uint64_t *))type metadata accessor for SendProgress, sub_18356D538);
  swift_release();
  type metadata accessor for NWConnection.ContentContext();
  swift_initStackObject();
  swift_bridgeObjectRetain();
  NWConnection.ContentContext.init(identifier:expiration:priority:isFinal:antecedent:metadata:)(0x746E6F43646E6573, 0xEB00000000747865, 0, 0, 0, a3, 0.5);
  uint64_t v15 = v14;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a4;
  *(void *)(v16 + 24) = v13;
  unint64_t v18 = sub_1835704EC;
  *(void *)&long long v19 = v16;
  swift_retain();
  NWConnection.send(content:contentContext:isComplete:completion:)(a1, a2, v15, 1, (uint64_t *)&v18);
  swift_release();
  swift_release();
  return v13;
}

uint64_t sub_18356625C(unsigned int *a1)
{
  if (*((unsigned __int8 *)a1 + 4) == 255)
  {
    char v7 = 0x80;
    int v6 = 3;
    uint64_t v1 = (unsigned int *)&v6;
  }
  else
  {
    unint64_t v2 = *a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32);
    int v4 = *a1;
    char v5 = (v2 | 0x4000000000) >> 32;
    uint64_t v1 = (unsigned int *)&v4;
  }
  return sub_18355CD84(v1);
}

uint64_t Connection1<>.send(_:metadata:)(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1834CD42C(a1, a2);
  unint64_t v10 = v9;
  uint64_t v11 = Connection1<>.send(_:metadata:)(v8, v9, a3, a4);
  sub_1832E5E9C(v8, v10);
  return v11;
}

uint64_t Connection1<>.receiveOnce()(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return MEMORY[0x1F4188298](sub_183566364, 0, 0);
}

{
  uint64_t v1;
  uint64_t v2;

  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x1F4188298](sub_18356A84C, 0, 0);
}

uint64_t sub_183566364()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 40);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63F68);
  *uint64_t v2 = v0;
  v2[1] = sub_183566470;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0x4F65766965636572, 0xED0000292865636ELL, sub_18356D758, v1, v3);
}

uint64_t sub_183566470()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_183566604;
  }
  else {
    uint64_t v2 = sub_183566584;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_183566584()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[1];
  return v4(v2, v1, v3);
}

uint64_t sub_183566604()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_183566668(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644C0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = *(void *)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  unint64_t v10 = *(NSObject **)(v7 + 16);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_18356F900;
  *(void *)(v11 + 24) = v9;
  aBlock[4] = sub_183570334;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1832E5DC4;
  aBlock[3] = &block_descriptor_249;
  uint64_t v12 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  nw_connection_receive_message(v10, v12);
  _Block_release(v12);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_18356685C(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, unsigned int *a5)
{
  if (a2 >> 60 == 15 || a3 == 0)
  {
    unint64_t v6 = *a5 | ((unint64_t)*((unsigned __int8 *)a5 + 4) << 32);
    if (HIDWORD(v6) <= 0xFE)
    {
      sub_1834AC424();
      swift_allocError();
      *(_DWORD *)uint64_t v7 = v6;
      *(unsigned char *)(v7 + 4) = BYTE4(v6);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644C0);
      return sub_183D44F3C();
    }
  }
  else
  {
    uint64_t v10 = result;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v12 = *(NSObject **)(a3 + 16);
    aBlock[4] = sub_18356F304;
    aBlock[5] = v11;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_183573F68;
    aBlock[3] = &block_descriptor_254;
    uint64_t v13 = _Block_copy(aBlock);
    sub_1834D7FF8(v10, a2);
    sub_1834D7FF8(v10, a2);
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    nw_content_context_foreach_protocol_metadata(v12, v13);
    _Block_release(v13);
    swift_unknownObjectRelease();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644C0);
    sub_183D44F4C();
    sub_1832E669C(v10, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_183566A88(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
  type metadata accessor for AsyncSequenceReceive();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = v6;
  swift_allocObject();
  uint64_t v9 = sub_183563638(a4, v8);
  swift_retain();
  return v9;
}

uint64_t sub_183566B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_18356F8AC;
  *(void *)(v8 + 24) = v6;
  uint64_t v9 = *(NSObject **)(v7 + 16);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_18356F8EC;
  *(void *)(v10 + 24) = v8;
  void v13[4] = sub_183570334;
  void v13[5] = v10;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  uint64_t v13[2] = sub_1832E5DC4;
  v13[3] = &block_descriptor_234;
  uint64_t v11 = _Block_copy(v13);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  nw_connection_receive_message(v9, v11);
  _Block_release(v11);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_183566D00(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unsigned int *a5, uint64_t (*a6)(uint64_t, unint64_t, uint64_t, int *))
{
  if (a2 >> 60 == 15 || a3 == 0)
  {
    unint64_t v8 = *a5 | ((unint64_t)*((unsigned __int8 *)a5 + 4) << 32);
    if (BYTE4(v8) == 255)
    {
      BYTE4(aBlock[0]) = 0;
      LODWORD(aBlock[0]) = 22;
    }
    else
    {
      LODWORD(aBlock[0]) = *a5;
      BYTE4(aBlock[0]) = BYTE4(v8);
    }
    return a6(0, 0, 1, (int *)aBlock);
  }
  else
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v13 = (uint64_t *)(v12 + 16);
    uint64_t v14 = *(NSObject **)(a3 + 16);
    aBlock[4] = sub_18356F304;
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_183573F68;
    aBlock[3] = &block_descriptor_239;
    uint64_t v15 = _Block_copy(aBlock);
    sub_1834D7FF8(a1, a2);
    sub_1834D7FF8(a1, a2);
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    nw_content_context_foreach_protocol_metadata(v14, v15);
    _Block_release(v15);
    swift_unknownObjectRelease();
    swift_beginAccess();
    uint64_t v16 = *v13;
    swift_bridgeObjectRetain();
    swift_release();
    char v19 = -1;
    int v18 = 0;
    a6(a1, a2, v16, &v18);
    sub_1832E669C(a1, a2);
    sub_1832E5E9C(a1, a2);
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t Connection1<>.send(type:_:metadata:isFinal:)(int a1, void *a2, unint64_t a3, char a4)
{
  uint64_t v8 = sub_18356715C();
  unint64_t v9 = MEMORY[0x1E4FBC860];
  if (a3) {
    unint64_t v9 = a3;
  }
  unint64_t v22 = v9;
  uint64_t v10 = qword_1E8F62160;
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1E8F7A918;
  type metadata accessor for NWProtocolFramer.Message();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = nw_framer_protocol_create_message(*(nw_protocol_definition_t *)(v11 + 32));
  _OWORD v21[3] = MEMORY[0x1E4FBC4C0];
  LODWORD(v21[0]) = a1;
  swift_retain();
  sub_183532324((uint64_t)v21, 1701869908, 0xE400000000000000);
  uint64_t v13 = swift_release();
  MEMORY[0x185314200](v13);
  if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_183D44E9C();
  }
  sub_183D44EDC();
  sub_183D44E6C();
  unint64_t v14 = v22;
  type metadata accessor for NWConnection.ContentContext();
  swift_initStackObject();
  NWConnection.ContentContext.init(identifier:expiration:priority:isFinal:antecedent:metadata:)(5655636, 0xE300000000000000, 0, a4 & 1, 0, v14, 0.5);
  uint64_t v16 = v15;
  uint64_t v17 = sub_183565AEC(v21, a2);
  unint64_t v19 = v18;
  v21[0] = (uint64_t)sub_18356D768;
  v21[1] = v8;
  sub_1832E5D6C(v17, v18);
  swift_retain();
  NWConnection.send(content:contentContext:isComplete:completion:)(v17, v19, v16, 1, v21);
  sub_1832E5E9C(v17, v19);
  swift_release();
  sub_1832E5E9C(v17, v19);
  swift_release();
  return v8;
}

uint64_t sub_18356715C()
{
  type metadata accessor for SendProgress();
  uint64_t v0 = swift_retain();
  uint64_t v1 = sub_18356F230(v0, (void (*)(void, uint64_t *))type metadata accessor for SendProgress, sub_18356D538);
  swift_release();
  return v1;
}

uint64_t Connection1<>.receiveOnce<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[9] = a4;
  v5[10] = v4;
  v5[7] = a1;
  v5[8] = a3;
  return MEMORY[0x1F4188298](sub_183567258, 0, 0);
}

uint64_t sub_183567258()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 88) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 64);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F63F78);
  *uint64_t v3 = v0;
  v3[1] = sub_18356736C;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0x4F65766965636572, 0xEF293A5F2865636ELL, sub_18356D784, v2, v4);
}

uint64_t sub_18356736C()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_183567520;
  }
  else {
    uint64_t v2 = sub_183567480;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_183567480()
{
  uint64_t v1 = *(void *)(v0 + 56);
  int v2 = *(_DWORD *)(v0 + 16);
  long long v7 = *(_OWORD *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 40);
  char v4 = *(unsigned char *)(v0 + 48);
  swift_task_dealloc();
  *(_DWORD *)uint64_t v1 = v2;
  *(_OWORD *)(v1 + 8) = v7;
  *(void *)(v1 + 24) = v3;
  *(unsigned char *)(v1 + 32) = v4;
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_183567520()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_183567584(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644B0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = *(void *)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  uint64_t v10 = *(NSObject **)(v7 + 16);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_18356F7D8;
  *(void *)(v11 + 24) = v9;
  aBlock[4] = sub_183570334;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1832E5DC4;
  aBlock[3] = &block_descriptor_216;
  uint64_t v12 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  nw_connection_receive_message(v10, v12);
  _Block_release(v12);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_183567778(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unsigned int *a5)
{
  uint64_t v5 = *((unsigned __int8 *)a5 + 4);
  uint64_t v6 = *a5;
  if (a3)
  {
    uint64_t v10 = qword_1E8F62160;
    swift_retain();
    if (v10 != -1) {
      swift_once();
    }
    uint64_t v11 = *(NSObject **)(a3 + 16);
    nw_protocol_metadata_t v12 = nw_content_context_copy_protocol_metadata(v11, *(nw_protocol_definition_t *)(qword_1E8F7A918 + 32));
    if (!v12)
    {
LABEL_15:
      swift_release();
      goto LABEL_16;
    }
    nw_protocol_metadata_t v13 = v12;
    uint64_t v14 = sub_1835312A8((uint64_t)v12);
    if (v14)
    {
      (*(void (**)(nw_protocol_metadata_t))(v14 + 96))(v13);
      type metadata accessor for NWProtocolFramer.Message();
      if (swift_dynamicCastClass())
      {
        int v27 = sub_18355A694();
        if (a2 >> 60 == 15) {
          uint64_t v15 = 0;
        }
        else {
          uint64_t v15 = a1;
        }
        unint64_t v16 = 0xC000000000000000;
        if (a2 >> 60 != 15) {
          unint64_t v16 = a2;
        }
        uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v16;
        uint64_t v26 = v15;
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = MEMORY[0x1E4FBC860];
        unint64_t v18 = (void **)(v17 + 16);
        uint64_t v32 = sub_18356F304;
        uint64_t v33 = v17;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v29 = 1107296256;
        uint64_t v30 = sub_183573F68;
        uint64_t v31 = &block_descriptor_221;
        unint64_t v19 = _Block_copy(&aBlock);
        sub_1834D7FF8(a1, a2);
        swift_unknownObjectRetain();
        swift_retain();
        swift_release();
        nw_content_context_foreach_protocol_metadata(v11, v19);
        _Block_release(v19);
        swift_unknownObjectRelease();
        swift_beginAccess();
        uint64_t v20 = *v18;
        swift_bridgeObjectRetain();
        swift_release();
        char v21 = *(unsigned char *)(a3 + 64);
        LODWORD(aBlock) = v27;
        uint64_t v29 = v26;
        uint64_t v30 = v25;
        uint64_t v31 = v20;
        LOBYTE(v32) = v21;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644B0);
        sub_183D44F4C();
        swift_release();
        return swift_release();
      }
      swift_release();
      goto LABEL_15;
    }
    swift_release();
    swift_unknownObjectRelease();
  }
LABEL_16:
  unint64_t v23 = v6 | (v5 << 32);
  sub_1834AC424();
  swift_allocError();
  if (HIDWORD(v23) <= 0xFE)
  {
    *(_DWORD *)uint64_t v24 = v6;
    *(unsigned char *)(v24 + 4) = BYTE4(v23);
  }
  else
  {
    *(_DWORD *)uint64_t v24 = 22;
    *(unsigned char *)(v24 + 4) = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8F644B0);
  return sub_183D44F3C();
}

uint64_t Connection1<>.receive()()
{
  return sub_18356B010(&qword_1E8F63F78, (uint64_t)&type metadata for TLV, (uint64_t)&protocol witness table for TLV, (uint64_t)sub_18356D790);
}

{
  return sub_18356B010(qword_1E8F63FA0, (uint64_t)&type metadata for WebSocket, (uint64_t)&protocol witness table for WebSocket, (uint64_t)sub_18356D7C0);
}

uint64_t sub_183567AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_18356F770;
  *(void *)(v8 + 24) = v6;
  uint64_t v9 = *(NSObject **)(v7 + 16);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_18356F7C4;
  *(void *)(v10 + 24) = v8;
  void v13[4] = sub_183570334;
  void v13[5] = v10;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  uint64_t v13[2] = sub_1832E5DC4;
  v13[3] = &block_descriptor_201;
  uint64_t v11 = _Block_copy(v13);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  nw_connection_receive_message(v9, v11);
  _Block_release(v11);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_183567C18(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unsigned int *a5, void (*a6)(uint64_t *, int *))
{
  uint64_t v7 = *((unsigned __int8 *)a5 + 4);
  uint64_t v8 = *a5;
  if (a3)
  {
    uint64_t v12 = qword_1E8F62160;
    swift_retain();
    if (v12 != -1) {
      swift_once();
    }
    nw_protocol_metadata_t v13 = *(NSObject **)(a3 + 16);
    nw_protocol_metadata_t v14 = nw_content_context_copy_protocol_metadata(v13, *(nw_protocol_definition_t *)(qword_1E8F7A918 + 32));
    if (!v14)
    {
LABEL_15:
      swift_release();
      goto LABEL_16;
    }
    nw_protocol_metadata_t v15 = v14;
    uint64_t v16 = sub_1835312A8((uint64_t)v14);
    if (v16)
    {
      (*(void (**)(nw_protocol_metadata_t))(v16 + 96))(v15);
      type metadata accessor for NWProtocolFramer.Message();
      if (swift_dynamicCastClass())
      {
        unsigned int v28 = sub_18355A694();
        if (a2 >> 60 == 15) {
          uint64_t v17 = 0;
        }
        else {
          uint64_t v17 = a1;
        }
        unint64_t v18 = 0xC000000000000000;
        if (a2 >> 60 != 15) {
          unint64_t v18 = a2;
        }
        unint64_t v26 = v18;
        uint64_t v27 = v17;
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = MEMORY[0x1E4FBC860];
        uint64_t v20 = (uint64_t *)(v19 + 16);
        uint64_t v37 = sub_18356F304;
        uint64_t v38 = v19;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v34 = 1107296256;
        uint64_t v35 = sub_183573F68;
        uint64_t v36 = (uint64_t)&block_descriptor_206;
        char v21 = _Block_copy(&aBlock);
        sub_1834D7FF8(a1, a2);
        swift_unknownObjectRetain();
        swift_retain();
        swift_release();
        nw_content_context_foreach_protocol_metadata(v13, v21);
        _Block_release(v21);
        swift_unknownObjectRelease();
        swift_beginAccess();
        uint64_t v22 = *v20;
        swift_bridgeObjectRetain();
        swift_release();
        char v23 = *(unsigned char *)(a3 + 64);
        uint64_t aBlock = v28;
        uint64_t v34 = v27;
        uint64_t v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v26;
        uint64_t v36 = v22;
        LOBYTE(v37) = v23;
        char v30 = -1;
        int v29 = 0;
        a6(&aBlock, &v29);
        sub_1832E5E9C(v27, v26);
        swift_release();
        swift_release();
        return swift_bridgeObjectRelease();
      }
      swift_release();
      goto LABEL_15;
    }
    swift_release();
    swift_unknownObjectRelease();
  }
LABEL_16:
  uint64_t v25 = v8 | (v7 << 32);
  uint64_t aBlock = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v36 = 1;
  LOBYTE(v37) = 0;
  if (BYTE4(v25) == 255)
  {
    char v32 = 0;
    LODWORD(v25) = 22;
  }
  else
  {
    char v32 = (v8 | (unint64_t)(v7 << 32)) >> 32;
  }
  int v31 = v25;
  return ((uint64_t (*)(uint64_t *, int *))a6)(&aBlock, &v31);
}

uint64_t Connection1.send<A>(_:metadata:isFinal:)(void *a1, unint64_t a2, char a3)
{
  uint64_t v7 = *v3;
  uint64_t v8 = *(void *)(*v3 + 112);
  uint64_t v24 = *(uint64_t (**)(unsigned int *))(*v3 + 80);
  long long v25 = *(_OWORD *)(v7 + 88);
  unint64_t v26 = &protocol witness table for JSON<A>;
  uint64_t v27 = v8;
  type metadata accessor for SendProgress();
  uint64_t v9 = swift_retain();
  uint64_t v10 = sub_18356F230(v9, (void (*)(void, uint64_t *))type metadata accessor for SendProgress, sub_18356D538);
  swift_release();
  unint64_t v11 = MEMORY[0x1E4FBC860];
  if (a2) {
    unint64_t v11 = a2;
  }
  unint64_t v23 = v11;
  uint64_t v12 = qword_1E8F62160;
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1E8F7A918;
  type metadata accessor for NWProtocolFramer.Message();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = nw_framer_protocol_create_message(*(nw_protocol_definition_t *)(v13 + 32));
  unint64_t v26 = (_UNKNOWN **)MEMORY[0x1E4FBC4C0];
  LODWORD(v24) = 0;
  swift_retain();
  sub_183532324((uint64_t)&v24, 1701869908, 0xE400000000000000);
  uint64_t v15 = swift_release();
  MEMORY[0x185314200](v15);
  if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_183D44E9C();
  }
  sub_183D44EDC();
  sub_183D44E6C();
  type metadata accessor for NWConnection.ContentContext();
  swift_initStackObject();
  NWConnection.ContentContext.init(identifier:expiration:priority:isFinal:antecedent:metadata:)(1313821514, 0xE400000000000000, 0, a3 & 1, 0, v23, 0.5);
  uint64_t v17 = v16;
  uint64_t v18 = sub_183565AEC(&v22, a1);
  unint64_t v20 = v19;
  uint64_t v24 = sub_18356D768;
  *(void *)&long long v25 = v10;
  swift_retain();
  NWConnection.send(content:contentContext:isComplete:completion:)(v18, v20, v17, 1, (uint64_t *)&v24);
  sub_1832E5E9C(v18, v20);
  swift_release();
  swift_release();
  return v10;
}

uint64_t Connection1.receiveOnce<A>()(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *v2;
  return MEMORY[0x1F4188298](sub_183568258, 0, 0);
}

uint64_t sub_183568258()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  uint64_t v4 = *(void *)(*(void *)(v1 + 88) + 16);
  *uint64_t v3 = v0;
  v3[1] = sub_183568354;
  uint64_t v5 = *(void *)(v0 + 16);
  return MEMORY[0x1F4188160](v5, 0, 0, 0x4F65766965636572, 0xED0000292865636ELL, sub_18356D798, v2, v4);
}

uint64_t sub_183568354()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_183568490, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_183568490()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1835684F4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v21 = a3;
  uint64_t v5 = *a2;
  uint64_t v6 = *(void *)(*(void *)(*a2 + 88) + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E8F63CE0);
  uint64_t v7 = sub_183D44F5C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = a2[2];
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v20 - v9, a1, v7);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = *(void *)(v5 + 80);
  *((void *)v13 + 3) = swift_allocateMetadataPack();
  *((void *)v13 + 4) = v6;
  uint64_t WitnessTablePack = swift_allocateWitnessTablePack();
  uint64_t v15 = v21;
  *((void *)v13 + 5) = WitnessTablePack;
  *((void *)v13 + 6) = v15;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v13[v12], v10, v7);
  uint64_t v16 = *(NSObject **)(v11 + 16);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_18356F68C;
  *(void *)(v17 + 24) = v13;
  aBlock[4] = sub_183570334;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1832E5DC4;
  aBlock[3] = &block_descriptor_188;
  uint64_t v18 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  nw_connection_receive_message(v16, v18);
  _Block_release(v18);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_183568784(uint64_t a1, unint64_t a2, uint64_t a3)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = *((unsigned __int8 *)v6 + 4);
  uint64_t v8 = *v6;
  if (v9)
  {
    uint64_t v10 = qword_1E8F62160;
    swift_retain();
    if (v10 != -1) {
      swift_once();
    }
    nw_protocol_metadata_t v11 = nw_content_context_copy_protocol_metadata(*(nw_content_context_t *)(a3 + 16), *(nw_protocol_definition_t *)(qword_1E8F7A918 + 32));
    if (v11)
    {
      nw_protocol_metadata_t v12 = v11;
      uint64_t v13 = sub_1835312A8((uint64_t)v11);
      if (!v13)
      {
        swift_release();
        swift_unknownObjectRelease();
        goto LABEL_16;
      }
      (*(void (**)(nw_protocol_metadata_t))(v13 + 96))(v12);
      type metadata accessor for NWProtocolFramer.Message();
      uint64_t v14 = swift_dynamicCastClass();
      swift_release();
      if (v14)
      {
        if (a2 >> 60 == 15) {
          uint64_t v15 = 0;
        }
        else {
          uint64_t v15 = a1;
        }
        if (a2 >> 60 == 15) {
          unint64_t v16 = 0xC000000000000000;
        }
        else {
          unint64_t v16 = a2;
        }
        sub_1834D7FF8(a1, a2);
        sub_183565C98(v15, v16);
        sub_1832E5E9C(v15, v16);
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E8F63CE0);
        sub_183D44F5C();
        sub_183D44F4C();
        return swift_release();
      }
    }
    swift_release();
  }
LABEL_16:
  unint64_t v17 = v8 | (v7 << 32);
  sub_1834AC424();
  swift_allocError();
  if (HIDWORD(v17) <= 0xFE)
  {
    *(_DWORD *)uint64_t v18 = v8;
    *(unsigned char *)(v18 + 4) = BYTE4(v17);
  }
  else
  {
    *(_DWORD *)uint64_t v18 = 22;
    *(unsigned char *)(v18 + 4) = 0;
  }
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E8F63CE0);
  sub_183D44F5C();
  return sub_183D44F3C();
}

uint64_t Connection1.receiveMessageOnce<A>()(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *(void *)(*(void *)(*(void *)v2 + 88) + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E8F63F90);
  v3[6] = swift_getTupleTypeMetadata3();
  v3[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_183568B60, 0, 0);
}

uint64_t sub_183568B60()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_183568C48;
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  return MEMORY[0x1F4188160](v3, 0, 0, 0xD000000000000014, 0x8000000183E26380, sub_18356D7A0, v1, v4);
}

uint64_t sub_183568C48()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_183568E20;
  }
  else {
    uint64_t v2 = sub_183568D5C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_183568D5C()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[6];
  uint64_t v3 = *(void *)(v1 + *(int *)(v2 + 48));
  uint64_t v4 = *(unsigned __int8 *)(v1 + *(int *)(v2 + 64));
  (*(void (**)(void, uint64_t))(*(void *)(v0[5] - 8) + 32))(v0[2], v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v5(v3, v4);
}

uint64_t sub_183568E20()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_183568E90(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v21 = a3;
  uint64_t v5 = *a2;
  uint64_t v6 = *(void *)(*(void *)(*a2 + 88) + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E8F63F90);
  swift_getTupleTypeMetadata3();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E8F63CE0);
  uint64_t v7 = sub_183D44F5C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = a2[2];
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v20 - v9, a1, v7);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = *(void *)(v5 + 80);
  *((void *)v13 + 3) = swift_allocateMetadataPack();
  *((void *)v13 + 4) = v6;
  uint64_t WitnessTablePack = swift_allocateWitnessTablePack();
  uint64_t v15 = v21;
  *((void *)v13 + 5) = WitnessTablePack;
  *((void *)v13 + 6) = v15;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v13[v12], v10, v7);
  unint64_t v16 = *(NSObject **)(v11 + 16);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_18356F4C4;
  *(void *)(v17 + 24) = v13;
  aBlock[4] = sub_183570334;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1832E5DC4;
  aBlock[3] = &block_descriptor_173;
  uint64_t v18 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  nw_connection_receive_message(v16, v18);
  _Block_release(v18);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_183569154(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unsigned int *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v42 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E8F63F90);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v13 = MEMORY[0x1F4188790](TupleTypeMetadata3);
  uint64_t v15 = (char *)&v40 - v14;
  uint64_t v16 = *(void *)(a9 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *((unsigned __int8 *)a5 + 4);
  uint64_t v20 = *a5;
  if (a3)
  {
    uint64_t v43 = a6;
    uint64_t v21 = qword_1E8F62160;
    swift_retain();
    if (v21 != -1) {
      swift_once();
    }
    char v22 = *(NSObject **)(a3 + 16);
    nw_protocol_metadata_t v23 = nw_content_context_copy_protocol_metadata(v22, *(nw_protocol_definition_t *)(qword_1E8F7A918 + 32));
    if (v23)
    {
      nw_protocol_metadata_t v24 = v23;
      uint64_t v41 = v16;
      uint64_t v25 = sub_1835312A8((uint64_t)v23);
      if (!v25)
      {
        swift_release();
        swift_unknownObjectRelease();
        goto LABEL_16;
      }
      (*(void (**)(nw_protocol_metadata_t))(v25 + 96))(v24);
      type metadata accessor for NWProtocolFramer.Message();
      uint64_t v26 = swift_dynamicCastClass();
      swift_release();
      if (v26)
      {
        if (a2 >> 60 == 15) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v42;
        }
        if (a2 >> 60 == 15) {
          unint64_t v28 = 0xC000000000000000;
        }
        else {
          unint64_t v28 = a2;
        }
        sub_1834D7FF8(v42, a2);
        sub_183565C98(v27, v28);
        sub_1832E5E9C(v27, v28);
        uint64_t v32 = swift_allocObject();
        *(void *)(v32 + 16) = MEMORY[0x1E4FBC860];
        uint64_t v33 = (uint64_t *)(v32 + 16);
        aBlock[4] = sub_18356F304;
        aBlock[5] = v32;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        void aBlock[2] = sub_183573F68;
        aBlock[3] = &block_descriptor_178;
        uint64_t v34 = _Block_copy(aBlock);
        swift_unknownObjectRetain();
        swift_retain();
        swift_release();
        nw_content_context_foreach_protocol_metadata(v22, v34);
        _Block_release(v34);
        swift_unknownObjectRelease();
        swift_beginAccess();
        uint64_t v35 = *v33;
        swift_bridgeObjectRetain();
        swift_release();
        char v36 = *(unsigned char *)(a3 + 64);
        uint64_t v37 = *(int *)(TupleTypeMetadata3 + 48);
        uint64_t v38 = *(int *)(TupleTypeMetadata3 + 64);
        (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v15, v18, a9);
        *(void *)&v15[v37] = v35;
        v15[v38] = v36;
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E8F63CE0);
        sub_183D44F5C();
        sub_183D44F4C();
        return swift_release();
      }
    }
    swift_release();
  }
LABEL_16:
  unint64_t v29 = v20 | (v19 << 32);
  sub_1834AC424();
  uint64_t v30 = swift_allocError();
  if (HIDWORD(v29) <= 0xFE)
  {
    *(_DWORD *)uint64_t v31 = v20;
    *(unsigned char *)(v31 + 4) = BYTE4(v29);
  }
  else
  {
    *(_DWORD *)uint64_t v31 = 22;
    *(unsigned char *)(v31 + 4) = 0;
  }
  aBlock[0] = v30;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E8F63CE0);
  sub_183D44F5C();
  return sub_183D44F3C();
}

uint64_t Connection1.receive<A>()(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for AsyncSequenceReceive();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v2;
  swift_allocObject();
  uint64_t v5 = sub_183563638((uint64_t)sub_18356D7A8, v4);
  swift_retain();
  return v5;
}

uint64_t sub_183569738(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7 = *a3;
  uint64_t v8 = a3[2];
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = *(void *)(v7 + 80);
  v9[3] = swift_allocateMetadataPack();
  uint64_t v9[4] = *(void *)(*(void *)(v7 + 88) + 16);
  v9[5] = swift_allocateWitnessTablePack();
  v9[6] = a4;
  v9[7] = a1;
  v9[8] = a2;
  uint64_t v10 = *(NSObject **)(v8 + 16);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_18356F388;
  *(void *)(v11 + 24) = v9;
  v14[4] = sub_183570334;
  v14[5] = v11;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  void v14[2] = sub_1832E5DC4;
  v14[3] = &block_descriptor_163;
  unint64_t v12 = _Block_copy(v14);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  nw_connection_receive_message(v10, v12);
  _Block_release(v12);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_1835698F4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unsigned int *a5, void (*a6)(char *, int *), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v33 = a7;
  uint64_t v34 = a6;
  uint64_t v14 = sub_183D4536C();
  uint64_t v32 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v31 - v18;
  uint64_t v20 = *((unsigned __int8 *)a5 + 4);
  uint64_t v21 = *a5;
  if (a3)
  {
    uint64_t v22 = qword_1E8F62160;
    swift_retain();
    if (v22 != -1) {
      swift_once();
    }
    nw_protocol_metadata_t v23 = nw_content_context_copy_protocol_metadata(*(nw_content_context_t *)(a3 + 16), *(nw_protocol_definition_t *)(qword_1E8F7A918 + 32));
    if (v23)
    {
      nw_protocol_metadata_t v24 = v23;
      uint64_t v25 = sub_1835312A8((uint64_t)v23);
      if (!v25)
      {
        swift_release();
        swift_unknownObjectRelease();
        goto LABEL_16;
      }
      uint64_t v31 = a1;
      (*(void (**)(nw_protocol_metadata_t))(v25 + 96))(v24);
      type metadata accessor for NWProtocolFramer.Message();
      uint64_t v26 = swift_dynamicCastClass();
      swift_release();
      if (v26)
      {
        if (a2 >> 60 == 15) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v31;
        }
        if (a2 >> 60 == 15) {
          unint64_t v28 = 0xC000000000000000;
        }
        else {
          unint64_t v28 = a2;
        }
        sub_1834D7FF8(v31, a2);
        sub_183565C98(v27, v28);
        sub_1832E5E9C(v27, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a10 - 8) + 56))(v19, 0, 1, a10);
        char v36 = -1;
        int v35 = 0;
        v34(v19, &v35);
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v19, v14);
      }
    }
    swift_release();
  }
LABEL_16:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 56))(v17, 1, 1, a10);
  unint64_t v29 = (uint64_t (**)(char *, uint64_t))(v32 + 8);
  if (((v21 | (unint64_t)(v20 << 32)) >> 32) == 255)
  {
    char v36 = 0;
    int v35 = 22;
  }
  else
  {
    int v35 = v21;
    char v36 = (v21 | (unint64_t)(v20 << 32)) >> 32;
  }
  v34(v17, &v35);
  return (*v29)(v17, v14);
}

uint64_t Connection1.receiveMessage<A>()(uint64_t a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E8F63F90);
  swift_getTupleTypeMetadata3();
  type metadata accessor for AsyncSequenceReceive();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v2;
  swift_allocObject();
  uint64_t v5 = sub_183563638((uint64_t)sub_18356D7B0, v4);
  swift_retain();
  return v5;
}

uint64_t sub_183569DF4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7 = *a3;
  uint64_t v8 = a3[2];
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = *(void *)(v7 + 80);
  v9[3] = swift_allocateMetadataPack();
  uint64_t v9[4] = *(void *)(*(void *)(v7 + 88) + 16);
  v9[5] = swift_allocateWitnessTablePack();
  v9[6] = a4;
  v9[7] = a1;
  v9[8] = a2;
  uint64_t v10 = *(NSObject **)(v8 + 16);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_18356F370;
  *(void *)(v11 + 24) = v9;
  v14[4] = sub_183570334;
  v14[5] = v11;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  void v14[2] = sub_1832E5DC4;
  v14[3] = &block_descriptor_148;
  unint64_t v12 = _Block_copy(v14);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  nw_connection_receive_message(v10, v12);
  _Block_release(v12);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_183569FB0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unsigned int *a5, void (*a6)(char *, int *), uint64_t a7)
{
  uint64_t v39 = a7;
  uint64_t v40 = a6;
  uint64_t v37 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E8F63F90);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v41 = sub_183D4536C();
  uint64_t v11 = *(void *)(v41 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v41);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = *((unsigned __int8 *)a5 + 4);
  uint64_t v18 = *a5;
  if (a3)
  {
    uint64_t v38 = v11;
    uint64_t v19 = qword_1E8F62160;
    swift_retain();
    if (v19 != -1) {
      swift_once();
    }
    uint64_t v20 = *(NSObject **)(a3 + 16);
    nw_protocol_metadata_t v21 = nw_content_context_copy_protocol_metadata(v20, *(nw_protocol_definition_t *)(qword_1E8F7A918 + 32));
    if (v21)
    {
      nw_protocol_metadata_t v22 = v21;
      char v36 = v20;
      uint64_t v23 = sub_1835312A8((uint64_t)v21);
      if (!v23)
      {
        swift_release();
        swift_unknownObjectRelease();
        goto LABEL_16;
      }
      (*(void (**)(nw_protocol_metadata_t))(v23 + 96))(v22);
      type metadata accessor for NWProtocolFramer.Message();
      uint64_t v24 = swift_dynamicCastClass();
      swift_release();
      if (v24)
      {
        if (a2 >> 60 == 15) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v37;
        }
        if (a2 >> 60 == 15) {
          unint64_t v26 = 0xC000000000000000;
        }
        else {
          unint64_t v26 = a2;
        }
        sub_1834D7FF8(v37, a2);
        sub_183565C98(v25, v26);
        sub_1832E5E9C(v25, v26);
        uint64_t v28 = *(int *)(TupleTypeMetadata3 + 48);
        uint64_t v29 = *(int *)(TupleTypeMetadata3 + 64);
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = MEMORY[0x1E4FBC860];
        uint64_t v31 = (uint64_t *)(v30 + 16);
        aBlock[4] = sub_18356F304;
        aBlock[5] = v30;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        void aBlock[2] = sub_183573F68;
        aBlock[3] = &block_descriptor_153;
        uint64_t v32 = _Block_copy(aBlock);
        uint64_t v33 = v36;
        swift_unknownObjectRetain();
        swift_retain();
        swift_release();
        nw_content_context_foreach_protocol_metadata(v33, v32);
        _Block_release(v32);
        swift_unknownObjectRelease();
        swift_beginAccess();
        uint64_t v34 = *v31;
        swift_bridgeObjectRetain();
        swift_release();
        *(void *)&v16[v28] = v34;
        v16[v29] = *(unsigned char *)(a3 + 64);
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata3 - 8) + 56))(v16, 0, 1, TupleTypeMetadata3);
        char v43 = -1;
        int v42 = 0;
        v40(v16, &v42);
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v16, v41);
      }
    }
    swift_release();
LABEL_16:
    uint64_t v11 = v38;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata3 - 8) + 56))(v14, 1, 1, TupleTypeMetadata3);
  uint64_t v27 = (uint64_t (**)(char *, uint64_t))(v11 + 8);
  if (((v18 | (unint64_t)(v17 << 32)) >> 32) == 255)
  {
    BYTE4(aBlock[0]) = 0;
    LODWORD(aBlock[0]) = 22;
  }
  else
  {
    LODWORD(aBlock[0]) = v18;
    BYTE4(aBlock[0]) = (v18 | (unint64_t)(v17 << 32)) >> 32;
  }
  v40(v14, (int *)aBlock);
  return (*v27)(v14, v41);
}

uint64_t sub_18356A49C(char *a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  char v8 = *a1;
  uint64_t v9 = *(void *)(*(void *)v4 + 96);
  uint64_t v10 = *(void *)(*(void *)v4 + 112);
  uint64_t v18 = *(uint64_t (**)(unsigned int *))(*(void *)v4 + 80);
  uint64_t v19 = &type metadata for WebSocket;
  uint64_t v20 = v9;
  nw_protocol_metadata_t v21 = &protocol witness table for WebSocket;
  uint64_t v22 = v10;
  type metadata accessor for SendProgress();
  uint64_t v11 = swift_retain();
  uint64_t v12 = sub_18356F230(v11, (void (*)(void, uint64_t *))type metadata accessor for SendProgress, sub_18356D538);
  swift_release();
  unint64_t v13 = MEMORY[0x1E4FBC860];
  if (a4) {
    unint64_t v13 = a4;
  }
  unint64_t v17 = v13;
  LOBYTE(v18) = v8;
  type metadata accessor for NWProtocolWebSocket.Metadata();
  swift_allocObject();
  swift_bridgeObjectRetain();
  NWProtocolWebSocket.Metadata.init(opcode:)((char *)&v18);
  MEMORY[0x185314200]();
  if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_183D44E9C();
  }
  sub_183D44EDC();
  sub_183D44E6C();
  type metadata accessor for NWConnection.ContentContext();
  swift_initStackObject();
  NWConnection.ContentContext.init(identifier:expiration:priority:isFinal:antecedent:metadata:)(0x746E6F43646E6573, 0xEB00000000747865, 0, 0, 0, v17, 0.5);
  uint64_t v15 = v14;
  uint64_t v18 = sub_18356D768;
  uint64_t v19 = (ValueMetadata *)v12;
  swift_retain();
  NWConnection.send(content:contentContext:isComplete:completion:)(a2, a3, v15, 1, (uint64_t *)&v18);
  swift_release();
  swift_release();
  return v12;
}

uint64_t Connection1<>.send(_:metadata:)(void *a1, unint64_t a2)
{
  uint64_t v3 = sub_183565AEC(&v8, a1);
  unint64_t v5 = v4;
  sub_1832E5D6C(v3, v4);
  uint64_t v6 = sub_18356A49C((char *)&v8, v3, v5, a2);
  sub_1832E5E9C(v3, v5);
  sub_1832E5E9C(v3, v5);
  return v6;
}

uint64_t sub_18356A84C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1E8F63FA0);
  *uint64_t v1 = v0;
  v1[1] = sub_18356A938;
  uint64_t v3 = *(void *)(v0 + 64);
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0x4F65766965636572, 0xED0000292865636ELL, sub_18356D7B8, v3, v2);
}