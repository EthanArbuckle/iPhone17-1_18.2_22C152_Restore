id UserLocation.location.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void *UserLocation.heading.getter()
{
  v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

uint64_t sub_228ABD558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 != 4) {
    MEMORY[0x22A6A66F0](a5);
  }
  return sub_228BAD038();
}

uint64_t sub_228ABD628()
{
  return swift_getOpaqueTypeMetadata2();
}

uint64_t sub_228ABD6BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_228ABD74C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4 = a3;
  if (a3 == 4)
  {
    unsigned __int8 v5 = 0;
  }
  else
  {
    uint64_t v6 = a2;
    unsigned __int8 v5 = MEMORY[0x22A6A66F0](a3);
    a2 = v6;
  }

  return MEMORY[0x270F03508](a1, a2, v5 | ((v4 == 4) << 8));
}

uint64_t sub_228ABD814()
{
  return swift_getOpaqueTypeMetadata2();
}

uint64_t sub_228ABD8BC()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for UserLocation(void *a1, uint64_t a2)
{
  v3 = *(void **)a2;
  int v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for UserLocation(uint64_t a1)
{
  id v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for UserLocation(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t assignWithTake for UserLocation(uint64_t a1, _OWORD *a2)
{
  int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for UserLocation(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UserLocation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserLocation()
{
  return &type metadata for UserLocation;
}

void type metadata accessor for EmphasisStyle(uint64_t a1)
{
}

void type metadata accessor for ElevationStyle(uint64_t a1)
{
}

void type metadata accessor for MKUserTrackingMode(uint64_t a1)
{
}

void type metadata accessor for FeatureType(uint64_t a1)
{
}

void type metadata accessor for MKLookAroundBadgePosition(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for Subgraph(uint64_t a1)
{
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
}

void type metadata accessor for MKPointOfInterestCategory(uint64_t a1)
{
}

void type metadata accessor for MKOverlayLevel(uint64_t a1)
{
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for MKMapRect(uint64_t a1)
{
}

void type metadata accessor for MKCoordinateRegion(uint64_t a1)
{
}

uint64_t sub_228ABDC30()
{
  return sub_228ABE108((unint64_t *)&qword_268291420, type metadata accessor for MKOverlayLevel);
}

uint64_t sub_228ABDC78(uint64_t a1, uint64_t a2)
{
  return sub_228ABE288(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_228ABDC90(uint64_t a1, id *a2)
{
  uint64_t result = sub_228BAD3E8();
  *a2 = 0;
  return result;
}

uint64_t sub_228ABDD08(uint64_t a1, id *a2)
{
  char v3 = sub_228BAD3F8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_228ABDD88@<X0>(uint64_t *a1@<X8>)
{
  sub_228BAD408();
  uint64_t v2 = sub_228BAD3D8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_228ABDDCC()
{
  return MEMORY[0x270EF2760](*v0);
}

uint64_t sub_228ABDDD4(uint64_t a1, uint64_t a2)
{
  int v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x22A6A7200](a1, &v6);
  int v4 = v6;
  char v5 = v7;
  if (v7) {
    int v4 = 0;
  }
  *(_DWORD *)a2 = v4;
  *(unsigned char *)(a2 + 4) = v5;
  return result;
}

uint64_t sub_228ABDE28(uint64_t a1, uint64_t a2)
{
  char v3 = sub_228BADAB8();
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  return v3 & 1;
}

uint64_t sub_228ABDE80@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = sub_228BADAC8();
  *a1 = result;
  return result;
}

void *sub_228ABDEA8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_228ABDEB8(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_228ABDEC4()
{
  return sub_228BADA88();
}

uint64_t sub_228ABDF0C()
{
  return sub_228BADA58();
}

uint64_t sub_228ABDF38()
{
  return sub_228BADA88();
}

BOOL sub_228ABDF7C(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_228ABDF90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_228BAD3D8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_228ABDFD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_228BAD408();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_228ABE004()
{
  sub_228ABE108(&qword_268291500, type metadata accessor for MKPointOfInterestCategory);
  sub_228ABE108(&qword_268291508, type metadata accessor for MKPointOfInterestCategory);

  return sub_228BAD9A8();
}

uint64_t sub_228ABE0C0()
{
  return sub_228ABE108(&qword_268291428, type metadata accessor for MKPointOfInterestCategory);
}

uint64_t sub_228ABE108(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_228ABE150()
{
  return sub_228ABE108(&qword_268291430, type metadata accessor for MKPointOfInterestCategory);
}

_DWORD *sub_228ABE198@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_228ABE1A8(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_228ABE1B4()
{
  return sub_228BAD9A8();
}

uint64_t sub_228ABE270(uint64_t a1, uint64_t a2)
{
  return sub_228ABE288(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_228ABE288(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_228BAD408();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_228ABE2CC()
{
  sub_228BAD408();
  sub_228BAD428();

  return swift_bridgeObjectRelease();
}

uint64_t sub_228ABE320()
{
  sub_228BAD408();
  sub_228BADA48();
  sub_228BAD428();
  uint64_t v0 = sub_228BADA88();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_228ABE394()
{
  uint64_t v0 = sub_228BAD408();
  uint64_t v2 = v1;
  if (v0 == sub_228BAD408() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_228BAD9E8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_228ABE420()
{
  return sub_228ABE108(&qword_268291438, type metadata accessor for MKPointOfInterestCategory);
}

void type metadata accessor for MKCoordinateSpan(uint64_t a1)
{
}

void type metadata accessor for MKMapSize(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for MapContentList.UpdateToken(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MapContentList.UpdateToken(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for MKMapPoint(uint64_t a1)
{
}

void type metadata accessor for AnyAttribute(uint64_t a1)
{
}

uint64_t sub_228ABE500()
{
  return sub_228ABE108(&qword_268291530, type metadata accessor for AnyAttribute);
}

uint64_t sub_228ABE548()
{
  return sub_228ABE108(&qword_268291538, type metadata accessor for AnyAttribute);
}

uint64_t initializeBufferWithCopyOfBuffer for MapContentList.ID.Component(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_228ABE5C4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_228ABE5E4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void sub_228ABE624(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void static PointOfInterestCategories.all.getter(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x263F8EE78];
  *a1 = 0;
  a1[1] = v1;
}

uint64_t static PointOfInterestCategories.excluding(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = a1;
  return swift_bridgeObjectRetain();
}

uint64_t static PointOfInterestCategories.including(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  a2[1] = 0;
  return swift_bridgeObjectRetain();
}

void static PointOfInterestCategories.excludingAll.getter(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
  a1[1] = 0;
}

uint64_t PointOfInterestCategories.init(arrayLiteral:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  a2[1] = 0;
  return result;
}

uint64_t sub_228ABE6C8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  a2[1] = 0;
  return result;
}

uint64_t destroy for PointOfInterestCategories()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s15_MapKit_SwiftUI25PointOfInterestCategoriesVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PointOfInterestCategories(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for PointOfInterestCategories(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PointOfInterestCategories()
{
  return &type metadata for PointOfInterestCategories;
}

void sub_228ABE800(_WORD *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_228ABE810()
{
  sub_228ABECF8();
  sub_228BACB08();
  return v1 | (v2 << 8);
}

uint64_t View.mapAttribution(showsLegal:logoVisibility:)()
{
  return swift_release();
}

uint64_t sub_228ABE8D8@<X0>(unsigned char *a1@<X8>)
{
  sub_228ABECF8();
  uint64_t result = sub_228BACB08();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_228ABE930@<X0>(unsigned char *a1@<X8>)
{
  sub_228ABECF8();
  uint64_t result = sub_228BACB08();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_228ABE988()
{
  return sub_228BACB18();
}

uint64_t sub_228ABE9DC()
{
  return sub_228BACB18();
}

uint64_t sub_228ABEA30()
{
  return swift_getWitnessTable();
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_228ABEAE8()
{
  unint64_t result = qword_2682915C8;
  if (!qword_2682915C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2682915C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2682915C8);
  }
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MapAttribution(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MapAttribution(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x228ABECC0);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MapAttribution()
{
  return &type metadata for MapAttribution;
}

unint64_t sub_228ABECF8()
{
  unint64_t result = qword_2682915D0;
  if (!qword_2682915D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2682915D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultMapAttributionKey()
{
  return &type metadata for DefaultMapAttributionKey;
}

uint64_t sub_228ABED60@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v21[1] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682915D8);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  unsigned int v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  int v8 = (char *)v21 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291638);
  uint64_t v23 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for _MapContentInputs(0);
  MEMORY[0x270FA5388](v12 - 8);
  v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_228BACE48();
  uint64_t v15 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_228BACE58();
  sub_228ABF54C(a1, (uint64_t)v14);
  uint64_t result = AGTypeGetKind();
  if ((result - 6) < 0xFFFFFFFC)
  {
    __break(1u);
  }
  else
  {
    v21[0] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268291640);
    sub_228AC1F74();
    sub_228BACB88();
    sub_228ABED60(v11, v14);
    sub_228ABFB2C((uint64_t)v8, (uint64_t)v6);
    uint64_t v19 = sub_228BACEB8();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v6, 1, v19) == 1)
    {
      sub_228AC1A50((uint64_t)v8, &qword_2682915D8);
      (*(void (**)(char *, void))(v23 + 8))(v11, v21[0]);
      sub_228ABFB94((uint64_t)v14);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v22);
      return sub_228AC1A50((uint64_t)v6, &qword_2682915D8);
    }
    else
    {
      sub_228BACEA8();
      sub_228AC1A50((uint64_t)v8, &qword_2682915D8);
      (*(void (**)(char *, void))(v23 + 8))(v11, v21[0]);
      sub_228ABFB94((uint64_t)v14);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v22);
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v6, v19);
    }
  }
  return result;
}

uint64_t static MapContent._makeMapContent(content:inputs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v26 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682915D8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_228BAC5E8();
  uint64_t v27 = *(void *)(v11 - 8);
  uint64_t v28 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = type metadata accessor for _MapContentInputs(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_228BACE48();
  uint64_t v17 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_228BACE58();
  sub_228ABF54C(v24, (uint64_t)v16);
  uint64_t v24 = a1;
  sub_228ABFA74();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v13, v16, AssociatedTypeWitness, AssociatedConformanceWitness);
  sub_228ABFB2C((uint64_t)v9, (uint64_t)v7);
  uint64_t v21 = sub_228BACEB8();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v7, 1, v21) == 1)
  {
    sub_228AC1A50((uint64_t)v9, &qword_2682915D8);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v28);
    sub_228ABFB94((uint64_t)v16);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v25);
    return sub_228AC1A50((uint64_t)v7, &qword_2682915D8);
  }
  else
  {
    sub_228BACEA8();
    sub_228AC1A50((uint64_t)v9, &qword_2682915D8);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v28);
    sub_228ABFB94((uint64_t)v16);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v25);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v7, v21);
  }
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for _MapContentInputs(uint64_t a1)
{
  return sub_228AC29CC(a1, (uint64_t *)&unk_2682915E0);
}

uint64_t sub_228ABF54C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _MapContentInputs(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_228ABF5B0(uint64_t a1)
{
  return static MapContent._mapContentCount(inputs:)(a1);
}

uint64_t static MapContent._mapContentCount(inputs:)(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(a1, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t sub_228ABF668()
{
  return sub_228BACD68();
}

uint64_t sub_228ABF6B8()
{
  return sub_228ABF6F8((void (*)(uint64_t))sub_228AC1BFC);
}

uint64_t sub_228ABF6D8()
{
  return sub_228ABF6F8((void (*)(uint64_t))sub_228AC1BA8);
}

uint64_t sub_228ABF6F8(void (*a1)(uint64_t))
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291620);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291628);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (unsigned int *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v16 - v11;
  a1(v10);
  sub_228BACDC8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_228AC1A50((uint64_t)v4, &qword_268291620);
    return *MEMORY[0x263F288F8];
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v12, v4, v5);
  uint64_t result = (*(uint64_t (**)(unsigned int *, char *, uint64_t))(v6 + 16))(v9, v12, v5);
  if (v7 == 4)
  {
    uint64_t v13 = *v9;
    uint64_t v15 = *(void (**)(unsigned int *, uint64_t))(v6 + 8);
    v15(v9, v5);
    v15((unsigned int *)v12, v5);
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_228ABF908()
{
  return sub_228ABF6F8((void (*)(uint64_t))sub_228AC2024);
}

uint64_t sub_228ABF928()
{
  return sub_228ABF6F8((void (*)(uint64_t))sub_228AC19FC);
}

uint64_t sub_228ABF948()
{
  return sub_228ABF6F8((void (*)(uint64_t))sub_228AC1FD0);
}

uint64_t sub_228ABF968()
{
  return sub_228ABF6F8((void (*)(uint64_t))sub_228AC1B54);
}

uint64_t sub_228ABF988()
{
  return sub_228ABF6F8((void (*)(uint64_t))sub_228AC1B00);
}

uint64_t sub_228ABF9A8()
{
  return sub_228ABF6F8((void (*)(uint64_t))sub_228AC1AAC);
}

uint64_t sub_228ABF9C8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v4 = a1;
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_268291628);
  if (*(void *)(*(void *)(result - 8) + 64) == 4) {
    return (*(uint64_t (**)(uint64_t, int *, uint64_t))(*(void *)(result - 8) + 16))(a2, &v4, result);
  }
  __break(1u);
  return result;
}

uint64_t sub_228ABFA74()
{
  uint64_t result = AGTypeGetKind();
  if ((result - 6) < 0xFFFFFFFC)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for MapContentBodyAccessor();
    swift_getWitnessTable();
    return sub_228BACB88();
  }
  return result;
}

uint64_t sub_228ABFB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682915D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_228ABFB94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for _MapContentInputs(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_228ABFBF0(uint64_t result, char a2)
{
  if (a2)
  {
    MEMORY[0x270FA5388](result);
    type metadata accessor for MapContentBodyAccessor();
    swift_getWitnessTable();
    return sub_228BACB78();
  }
  return result;
}

uint64_t sub_228ABFCA4(uint64_t result, char a2)
{
  return sub_228ABFBF0(result, a2);
}

uint64_t static Never._mapContentCount(inputs:)()
{
  return 0;
}

void sub_228ABFCBC()
{
}

uint64_t sub_228ABFCD4()
{
  return 0;
}

void sub_228ABFCE8()
{
}

uint64_t _callVisitMapContentType2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(a1 + 16) + 8))(a3, a3, a4, *(void *)(a1 + 8));
}

uint64_t sub_228ABFD80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[3] = *MEMORY[0x263EF8340];
  v6[0] = a1;
  v6[1] = a4;
  v6[2] = a5;
  return _callVisitMapContentType1((uint64_t)v6, a2, a3);
}

void sub_228ABFDD8()
{
  qword_26829D4E8 = MEMORY[0x263F8EE80];
}

uint64_t sub_228ABFDEC()
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = sub_228BAC5E8();
  uint64_t v2 = sub_228BAD718();
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = &v13[-v4];
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v8 = &v13[-v7];
  sub_228BAC6F8();
  uint64_t v15 = AssociatedTypeWitness;
  uint64_t v9 = sub_228BAC488();
  sub_228AC7E20((uint64_t)v8, (uint64_t)sub_228AC1D0C, (uint64_t)v14, AssociatedTypeWitness, MEMORY[0x263F8E628], v9, MEMORY[0x263F8E658], v10);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  int IndirectAttribute2 = AGGraphCreateIndirectAttribute2();
  sub_228ACB078(IndirectAttribute2, (uint64_t)v5);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v1 - 8) + 56))(v5, 0, 1, v1);
  return sub_228BACDD8();
}

uint64_t sub_228AC0030()
{
  swift_getAssociatedTypeWitness();
  uint64_t v0 = sub_228BAC5E8();
  uint64_t v1 = sub_228BAD718();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v8 = (unsigned int *)((char *)&v10 - v7);
  sub_228BACDC8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v0) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  (*(void (**)(unsigned int *, char *, uint64_t))(v6 + 32))(v8, v5, v0);
  sub_228ACB118(v8);
  type metadata accessor for _MapContentOutputs.SetDependency(0);
  AGGraphSetIndirectDependency();
  return (*(uint64_t (**)(unsigned int *, uint64_t))(v6 + 8))(v8, v0);
}

uint64_t sub_228AC0264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_228BAC5E8();
  uint64_t v6 = sub_228BAD718();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v14 = *(void *)(v5 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v11);
  uint64_t v26 = (unsigned int *)((char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v15);
  v30 = (unsigned int *)((char *)&v25 - v17);
  type metadata accessor for _MapContentOutputs.SetSource(0);
  uint64_t v28 = a3;
  uint64_t v29 = v3;
  sub_228BACDC8();
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v18(v13, 1, v5) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }
  uint64_t v25 = v6;
  uint64_t v20 = v13;
  uint64_t v21 = *(void (**)(unsigned int *, char *, uint64_t))(v14 + 32);
  v21(v30, v20, v5);
  sub_228BACDC8();
  if (v18(v10, 1, v5) == 1)
  {
    (*(void (**)(unsigned int *, uint64_t))(v14 + 8))(v30, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v25);
  }
  else
  {
    uint64_t v22 = v26;
    v21(v26, v10, v5);
    sub_228ACB118(v22);
    uint64_t v23 = v30;
    sub_228ACB118(v30);
    AGGraphSetIndirectAttribute();
    uint64_t v24 = *(void (**)(unsigned int *, uint64_t))(v14 + 8);
    v24(v22, v5);
    return ((uint64_t (*)(unsigned int *, uint64_t))v24)(v23, v5);
  }
}

void sub_228AC058C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getAssociatedTypeWitness();
  sub_228BAC5E8();
  uint64_t v5 = sub_228BAD718();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v13[-v7];
  sub_228BACDC8();
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  uint64_t v9 = sub_228BAC488();
  sub_228AD9AD8((void (*)(char *, char *))sub_228AC2A90, (uint64_t)v13, MEMORY[0x263F8E628], v9, v10, (uint64_t)&v16);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  if ((v17 & 1) == 0)
  {
    id v11 = (id)AGGraphGetAttributeSubgraph();
    AGGraphClearUpdate();
    id v12 = (id)AGSubgraphGetCurrent();
    AGSubgraphSetCurrent();
    sub_228AC075C();
    AGSubgraphSetCurrent();

    AGGraphSetUpdate();
  }
}

uint64_t sub_228AC075C()
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v3 = &v8[-v2];
  sub_228BAC6F8();
  uint64_t v9 = AssociatedTypeWitness;
  uint64_t v4 = sub_228BAC488();
  sub_228AC7E20((uint64_t)v3, (uint64_t)sub_228AC2B58, (uint64_t)v8, AssociatedTypeWitness, MEMORY[0x263F8E628], v4, MEMORY[0x263F8E658], v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, AssociatedTypeWitness);
  return AGGraphSetIndirectAttribute();
}

void protocol witness for MapContent.body.getter in conformance <A> Group<A>()
{
}

void protocol witness for MapContent.body.getter in conformance <> _ConditionalMapContent<A, B>()
{
}

void protocol witness for MapContent.body.getter in conformance <A> A?()
{
}

void protocol witness for MapContent.body.getter in conformance <> ModifiedContent<A, B>()
{
}

void protocol witness for MapContent.body.getter in conformance TupleMapContent<A>()
{
}

_UNKNOWN **sub_228AC0A58()
{
  return &protocol witness table for Never;
}

uint64_t dispatch thunk of MapContent.body.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static MapContent._makeMapContent(content:inputs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of static MapContent._mapContentCount(inputs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t *initializeBufferWithCopyOfBuffer for _MapContentInputs(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_228BACB48();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_228BAC608();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_228BACD78();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    *(_DWORD *)((char *)a1 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t destroy for _MapContentInputs(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_228BACB48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_228BAC608();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_228BACD78();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for _MapContentInputs(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_228BACB48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_228BAC608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_228BACD78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithCopy for _MapContentInputs(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_228BACB48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_228BAC608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_228BACD78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for _MapContentInputs(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_228BACB48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_228BAC608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_228BACD78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for _MapContentInputs(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_228BACB48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_228BAC608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_228BACD78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for _MapContentInputs(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_228AC1178);
}

uint64_t sub_228AC1178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228BACB48();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_228BAC608();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_228BACD78();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for _MapContentInputs(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_228AC12D8);
}

uint64_t sub_228AC12D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_228BACB48();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_228BAC608();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_228BACD78();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t sub_228AC1430()
{
  uint64_t result = sub_228BACB48();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_228BAC608();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_228BACD78();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for _MapContentOutputs(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_3Tm);
}

uint64_t storeEnumTagSinglePayload for _MapContentOutputs(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_4Tm);
}

uint64_t type metadata accessor for _MapContentOutputs(uint64_t a1)
{
  return sub_228AC29CC(a1, (uint64_t *)&unk_2682915F0);
}

ValueMetadata *type metadata accessor for EmptyMapContent()
{
  return &type metadata for EmptyMapContent;
}

uint64_t sub_228AC15BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_3Tm_0);
}

uint64_t sub_228AC15D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_4Tm_0);
}

uint64_t type metadata accessor for _MapContentInputs.AddPreference(uint64_t a1)
{
  return sub_228AC29CC(a1, (uint64_t *)&unk_268291600);
}

uint64_t *sub_228AC160C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_228BACDB8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
    v9[4] = v10[4];
  }
  return a1;
}

uint64_t sub_228AC16E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228BACDB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(unsigned char *)(v8 + 4) = *(unsigned char *)(v9 + 4);
  return a1;
}

uint64_t sub_228AC1774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228BACDB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(unsigned char *)(v8 + 4) = v10;
  return a1;
}

uint64_t sub_228AC1800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228BACDB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(unsigned char *)(v8 + 4) = *(unsigned char *)(v9 + 4);
  return a1;
}

uint64_t sub_228AC188C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228BACDB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(unsigned char *)(v8 + 4) = *(unsigned char *)(v9 + 4);
  return a1;
}

uint64_t sub_228AC1918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_3Tm_1);
}

uint64_t sub_228AC1930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_4Tm_1);
}

uint64_t type metadata accessor for _MapContentOutputs.SetDependency(uint64_t a1)
{
  return sub_228AC29CC(a1, (uint64_t *)&unk_268291610);
}

uint64_t sub_228AC1968()
{
  uint64_t result = sub_228BACDB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_228AC19FC()
{
  unint64_t result = qword_268292F60;
  if (!qword_268292F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268292F60);
  }
  return result;
}

uint64_t sub_228AC1A50(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_228AC1AAC()
{
  unint64_t result = qword_268292810;
  if (!qword_268292810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268292810);
  }
  return result;
}

unint64_t sub_228AC1B00()
{
  unint64_t result = qword_268292F50;
  if (!qword_268292F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268292F50);
  }
  return result;
}

unint64_t sub_228AC1B54()
{
  unint64_t result = qword_268292800;
  if (!qword_268292800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268292800);
  }
  return result;
}

unint64_t sub_228AC1BA8()
{
  unint64_t result = qword_2682927F0;
  if (!qword_2682927F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2682927F0);
  }
  return result;
}

unint64_t sub_228AC1BFC()
{
  unint64_t result = qword_268291630;
  if (!qword_268291630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291630);
  }
  return result;
}

uint64_t sub_228AC1C50(uint64_t a1, uint64_t a2)
{
  v6[5] = *MEMORY[0x263EF8340];
  v6[2] = a2;
  v6[3] = a1;
  uint64_t v2 = sub_228BAC4D8();
  uint64_t v3 = sub_228BAC488();
  return sub_228AC7E20(v3, (uint64_t)sub_228AC1DE0, (uint64_t)v6, v2, MEMORY[0x263F8E628], v3, MEMORY[0x263F8E658], v4);
}

uint64_t sub_228AC1D0C(uint64_t a1)
{
  return sub_228AC1C50(a1, *(void *)(v1 + 16));
}

uint64_t sub_228AC1D2C@<X0>(_DWORD *a1@<X8>)
{
  sub_228BAC4D8();
  swift_getWitnessTable();
  uint64_t result = sub_228BAC478();
  *a1 = result;
  return result;
}

uint64_t sub_228AC1DE0@<X0>(_DWORD *a1@<X8>)
{
  return sub_228AC1D2C(a1);
}

uint64_t (*sub_228AC1E00())(uint64_t a1, uint64_t a2)
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(swift_allocObject() + 16) = v1;
  return sub_228AC1E60;
}

uint64_t sub_228AC1E50()
{
  return swift_deallocObject();
}

uint64_t sub_228AC1E60(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270F0F0E8](a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_228AC1E68(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  sub_228BAC5E8();
  uint64_t v2 = sub_228BAD718();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - v3, a1);
  return sub_228BACDD8();
}

unint64_t sub_228AC1F74()
{
  unint64_t result = qword_268291648;
  if (!qword_268291648)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268291640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291648);
  }
  return result;
}

unint64_t sub_228AC1FD0()
{
  unint64_t result = qword_268292820;
  if (!qword_268292820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268292820);
  }
  return result;
}

unint64_t sub_228AC2024()
{
  unint64_t result = qword_268291650[0];
  if (!qword_268291650[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268291650);
  }
  return result;
}

uint64_t type metadata accessor for MapContentBodyAccessor()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for MapContentDescriptor()
{
  return &type metadata for MapContentDescriptor;
}

uint64_t sub_228AC20A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t *sub_228AC20A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_228BACDB8();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_228AC2190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_228BACDB8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);

  return v7(v5, v4);
}

uint64_t sub_228AC2230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228BACDB8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_228AC22C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228BACDB8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_228AC2360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228BACDB8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_228AC23F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228BACDB8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_228AC2490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_228AC24A4);
}

uint64_t sub_228AC24A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_228BACDB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_228AC2510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_228AC2524);
}

uint64_t sub_228AC2524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_228BACDB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for _MapContentOutputs.SetSource(uint64_t a1)
{
  return sub_228AC29CC(a1, (uint64_t *)&unk_2682916D8);
}

uint64_t sub_228AC25B4()
{
  uint64_t result = sub_228BACDB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s15_MapKit_SwiftUI18_MapContentOutputsVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_228BACDB8();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t _s15_MapKit_SwiftUI18_MapContentOutputsVwxx_0(uint64_t a1)
{
  uint64_t v2 = sub_228BACDB8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t _s15_MapKit_SwiftUI18_MapContentOutputsVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_228BACDB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s15_MapKit_SwiftUI18_MapContentOutputsVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_228BACDB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s15_MapKit_SwiftUI18_MapContentOutputsVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_228BACDB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s15_MapKit_SwiftUI18_MapContentOutputsVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_228BACDB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_228AC28A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_228AC28B4);
}

uint64_t __swift_get_extra_inhabitant_index_3Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_228BACDB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_228AC2924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_228AC2938);
}

uint64_t __swift_store_extra_inhabitant_index_4Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_228BACDB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for _MapContentOutputs.ResetPreference(uint64_t a1)
{
  return sub_228AC29CC(a1, (uint64_t *)&unk_2682916E8);
}

uint64_t sub_228AC29CC(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_228AC2A04()
{
  uint64_t result = sub_228BACDB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_228AC2A90@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_228ACB118(a1);
  *a2 = result;
  return result;
}

uint64_t sub_228AC2AF0()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 24))(*(void *)(v0 + 16));
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_228AC2B58(uint64_t a1)
{
  return sub_228AC1D0C(a1);
}

BOOL static MapUserTrackingMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MapUserTrackingMode.hash(into:)()
{
  return sub_228BADA58();
}

uint64_t MapUserTrackingMode.hashValue.getter()
{
  return sub_228BADA88();
}

BOOL sub_228AC2BFC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_228AC2C10()
{
  return sub_228BADA88();
}

uint64_t sub_228AC2C58()
{
  return sub_228BADA58();
}

uint64_t sub_228AC2C84()
{
  return sub_228BADA88();
}

unint64_t sub_228AC2CCC()
{
  unint64_t result = qword_2682916F8;
  if (!qword_2682916F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2682916F8);
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MapUserTrackingMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MapUserTrackingMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x228AC2E88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_228AC2EB0(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_228AC2EBC(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for MapUserTrackingMode()
{
  return &type metadata for MapUserTrackingMode;
}

uint64_t static ForEach<>._makeMapContent(content:inputs:)@<X0>(unsigned int *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  v71 = a2;
  v72 = a1;
  uint64_t v70 = a9;
  uint64_t v79 = *MEMORY[0x263EF8340];
  uint64_t v73 = a3;
  uint64_t v74 = a4;
  uint64_t v75 = a5;
  uint64_t v76 = a6;
  uint64_t v77 = a7;
  uint64_t v78 = a8;
  uint64_t v15 = _s21AttachCombinerVisitorVMa();
  uint64_t v68 = *(void *)(v15 - 8);
  uint64_t v69 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v67 = (uint64_t)&v60 - v16;
  uint64_t v17 = type metadata accessor for _MapContentInputs(0);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = a3;
  uint64_t v74 = a4;
  uint64_t v75 = a5;
  uint64_t v76 = a6;
  uint64_t v77 = a7;
  uint64_t v78 = a8;
  uint64_t StateVMa = _s9MakeStateVMa();
  uint64_t v21 = *(void *)(StateVMa - 8);
  uint64_t v65 = StateVMa;
  uint64_t v66 = v21;
  MEMORY[0x270FA5388](StateVMa);
  v64 = (_DWORD *)((char *)&v60 - v22);
  uint64_t v23 = type metadata accessor for _MapContentOutputs(0);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v26 = (char *)&v60 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v60 - v27;
  uint64_t v73 = a3;
  uint64_t v74 = a4;
  uint64_t v75 = a5;
  uint64_t v76 = a6;
  uint64_t v77 = a7;
  uint64_t v78 = a8;
  uint64_t v62 = a8;
  uint64_t v29 = _s18AddCombinerVisitorVMa();
  MEMORY[0x270FA5388](v29);
  v31 = (unsigned int *)((char *)&v60 - v30);
  _s15_MapKit_SwiftUI05EmptyA7ContentV05_makeaF07content6inputsAA01_aF7OutputsV0cD011_GraphValueVyACG_AA01_aF6InputsVtFZ_0();
  v63 = v28;
  sub_228AC9B7C((uint64_t)v28, (uint64_t)v31, type metadata accessor for _MapContentOutputs);
  swift_getWitnessTable();
  v32 = v71;
  sub_228ABF668();
  uint64_t v33 = a3;
  uint64_t v73 = a3;
  uint64_t v74 = a4;
  uint64_t v34 = a4;
  uint64_t v35 = a5;
  uint64_t v75 = a5;
  uint64_t v76 = a6;
  uint64_t v36 = a6;
  uint64_t v37 = a7;
  uint64_t v77 = a7;
  sub_228BAD288();
  int v61 = sub_228ACB118(v72);
  uint64_t v38 = (uint64_t)v32;
  uint64_t v39 = (uint64_t)v19;
  sub_228AC7FCC(v38, (uint64_t)v19, type metadata accessor for _MapContentInputs);
  v72 = v31;
  sub_228AC7FCC((uint64_t)v31, (uint64_t)v26, type metadata accessor for _MapContentOutputs);
  id v40 = (id)AGSubgraphGetCurrent();
  if (!v40) {
    __break(1u);
  }
  uint64_t v41 = (uint64_t)v40;
  uint64_t v42 = v62;
  uint64_t v43 = sub_228AC3968();
  v59[1] = v35;
  v59[0] = v34;
  uint64_t v44 = v34;
  uint64_t v60 = v34;
  v45 = v64;
  uint64_t v48 = sub_228AC34C8(v61, v39, (uint64_t)v26, v41, v43, v46, v47, v64);
  v71 = &v60;
  MEMORY[0x270FA5388](v48);
  uint64_t v73 = v33;
  uint64_t v74 = v44;
  uint64_t v75 = v35;
  uint64_t v76 = v36;
  uint64_t v77 = v37;
  uint64_t v78 = v42;
  uint64_t v49 = _s9ItemStateVMa();
  uint64_t v50 = v65;
  v59[2] = v49;
  v59[3] = v65;
  v59[4] = swift_getWitnessTable();
  uint64_t v51 = sub_228BAC488();
  sub_228AC7E20((uint64_t)v45, (uint64_t)sub_228AC804C, (uint64_t)v59, v50, MEMORY[0x263F8E628], v51, MEMORY[0x263F8E658], v52);
  (*(void (**)(_DWORD *, uint64_t))(v66 + 8))(v45, v50);
  v53 = v72;
  int v54 = v73;
  uint64_t v55 = (uint64_t)v63;
  sub_228AC7FCC((uint64_t)v72, (uint64_t)v63, type metadata accessor for _MapContentOutputs);
  uint64_t v56 = v67;
  sub_228AC9B7C(v55, v67, type metadata accessor for _MapContentOutputs);
  uint64_t v73 = v33;
  uint64_t v74 = v60;
  uint64_t v75 = v35;
  uint64_t v76 = v36;
  uint64_t v77 = v37;
  uint64_t v78 = v42;
  *(_DWORD *)(v56 + *(int *)(_s21AttachCombinerVisitorVMa() + 68)) = v54;
  uint64_t v57 = v69;
  swift_getWitnessTable();
  sub_228ABFA70();
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v56, v57);
  return sub_228AC9B7C((uint64_t)v53, v70, type metadata accessor for _MapContentOutputs);
}

uint64_t _s21AttachCombinerVisitorVMa()
{
  return swift_getGenericMetadata();
}

uint64_t _s9MakeStateVMa()
{
  return swift_getGenericMetadata();
}

uint64_t _s18AddCombinerVisitorVMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_228AC34C8@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, _DWORD *a8@<X8>)
{
  *a8 = a1;
  uint64_t StateVMa = (int *)_s9MakeStateVMa();
  sub_228AC9B7C(a2, (uint64_t)a8 + StateVMa[17], type metadata accessor for _MapContentInputs);
  uint64_t result = sub_228AC9B7C(a3, (uint64_t)a8 + StateVMa[18], type metadata accessor for _MapContentOutputs);
  *(void *)((char *)a8 + StateVMa[19]) = a4;
  uint64_t v17 = (char *)a8 + StateVMa[20];
  *(void *)uint64_t v17 = a5;
  *((void *)v17 + 1) = a6;
  *((_DWORD *)v17 + 4) = a7;
  return result;
}

void *sub_228AC35AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return sub_228AC3628(a1, a2, a3, a4, a5, a6);
}

void *sub_228AC3628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v11 = *v6;
  *((unsigned char *)v6 + *(void *)(*v6 + 176)) = 0;
  v6[2] = a1;
  sub_228AC9B7C(a2, (uint64_t)v6 + qword_268291708, type metadata accessor for _MapContentOutputs);
  uint64_t v12 = (char *)v6 + *(void *)(*v6 + 152);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v12, a4, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v11 + 88) - 8) + 32))((char *)v6 + *(void *)(*v6 + 144), a3);
  *(void *)((char *)v6 + *(void *)(*v6 + 160)) = a5;
  *(_DWORD *)((char *)v6 + *(void *)(*v6 + 168)) = a6;
  return v6;
}

id *sub_228AC37D8()
{
  unint64_t v1 = *v0;

  sub_228AC98C0((uint64_t)v0 + qword_268291708, type metadata accessor for _MapContentOutputs);
  (*(void (**)(char *))(*(void *)(v1[11] - 8) + 8))((char *)v0 + *((void *)*v0 + 18));
  int v2 = (char *)v0 + *((void *)*v0 + 19);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v2, AssociatedTypeWitness);
  return v0;
}

uint64_t sub_228AC3914()
{
  uint64_t v0 = sub_228AC37D8();
  uint64_t v1 = *((unsigned int *)*v0 + 12);
  uint64_t v2 = *((unsigned __int16 *)*v0 + 26);

  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_228AC3968()
{
  _s4ItemCMa();
  uint64_t v0 = sub_228BAD4F8();
  swift_getTupleTypeMetadata2();
  sub_228BAD4F8();
  sub_228BAD348();
  return v0;
}

uint64_t sub_228AC3A08(uint64_t a1)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  v19[0] = *(void *)(a1 + 16);
  uint64_t v22 = v19[0];
  uint64_t v23 = v3;
  uint64_t v24 = v4;
  uint64_t v25 = v5;
  uint64_t v26 = v6;
  uint64_t v7 = sub_228BAD288();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)v19 - v9;
  sub_228AC632C((uint64_t)v19 - v9);
  char v11 = sub_228AC3C30((unint64_t)v10, a1);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    uint64_t v13 = (uint64_t *)(v1 + *(int *)(a1 + 80));
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    LODWORD(v13) = *((_DWORD *)v13 + 4);
    v20[0] = v14;
    v20[1] = v15;
    int v21 = (int)v13;
    MEMORY[0x270FA5388](result);
    v19[-2] = a1;
    v19[-1] = swift_getWitnessTable();
    uint64_t v16 = *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = v19[0];
    uint64_t v23 = v3;
    uint64_t v24 = v4;
    uint64_t v25 = v5;
    uint64_t v26 = v6;
    uint64_t v27 = v16;
    uint64_t v17 = _s9ItemStateVMa();
    sub_228AC7E20((uint64_t)v20, (uint64_t)sub_228AC9890, (uint64_t)&v19[-4], v17, MEMORY[0x263F8E628], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8E658], v18);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_228AC3C30(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v110 = a1;
  uint64_t v5 = *(unsigned char **)(a2 + 24);
  uint64_t v93 = *((void *)v5 - 1);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  v92 = &v81[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  v102 = &v81[-v8];
  uint64_t v101 = sub_228BAD718();
  v95 = *(void (***)(unsigned char *, uint64_t))(v101 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v101);
  char v11 = &v81[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v81[-v12];
  uint64_t v109 = *(void *)(a2 + 40);
  uint64_t v14 = *(void (***)(unsigned char *, uint64_t, unsigned char *))(*(void *)(v109 + 8) + 8);
  uint64_t v15 = *(void *)(a2 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v94 = *(void (***)(uint64_t, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  v90 = &v81[-v17];
  uint64_t v91 = v18;
  uint64_t v19 = sub_228BAD718();
  MEMORY[0x270FA5388](v19 - 8);
  v103 = &v81[-v20];
  uint64_t v21 = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](v21);
  v99 = &v81[-v22];
  v108 = v14;
  v98 = *(void (***)(unsigned char *, unsigned char *))(swift_getAssociatedConformanceWitness() + 8);
  uint64_t AssociatedConformanceWitness = v21;
  uint64_t v89 = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(v89 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v89);
  v88 = &v81[-v25];
  uint64_t v26 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = &v81[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = AGSubgraphIsValid();
  if (result)
  {
    uint64_t v87 = v23;
    v97 = v13;
    uint64_t v86 = v26;
    v105 = v11;
    uint64_t v30 = *(int *)(a2 + 80);
    uint64_t v107 = v3;
    uint64_t v31 = v3 + v30;
    int v82 = *(_DWORD *)(v3 + v30 + 16);
    *(_DWORD *)(v3 + v30 + 16) = v82 + 1;
    uint64_t v32 = *(void *)(a2 + 32);
    unint64_t v33 = *(void *)(a2 + 48);
    uint64_t v113 = v15;
    v114 = v5;
    uint64_t v34 = v109;
    uint64_t v115 = v32;
    uint64_t v116 = v109;
    unint64_t v117 = v33;
    sub_228BAD288();
    sub_228BAD258();
    uint64_t v106 = a2;
    uint64_t v35 = *(void *)(a2 + 56);
    uint64_t v113 = v15;
    v114 = v5;
    uint64_t v115 = v32;
    uint64_t v116 = v34;
    unint64_t v117 = v33;
    uint64_t v118 = v35;
    uint64_t v36 = _s4ItemCMa();
    uint64_t v119 = sub_228BAD4F8();
    uint64_t v83 = v31;
    uint64_t v37 = *(void *)(v31 + 8);
    uint64_t v104 = v31 + 8;
    uint64_t v113 = v37;
    uint64_t v109 = v36;
    sub_228BAD358();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    unint64_t v110 = v33;
    uint64_t v112 = sub_228BAD608();
    v84 = v28;
    uint64_t v85 = v15;
    sub_228BAD638();
    uint64_t v38 = v88;
    sub_228BAD458();
    uint64_t v39 = v89;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v40 = 0;
    v99 = v94 + 6;
    v96 = (void (**)(uint64_t, unsigned char *, uint64_t))(v94 + 4);
    v108 = (void (**)(unsigned char *, uint64_t, unsigned char *))(v93 + 16);
    v98 = (void (**)(unsigned char *, unsigned char *))(v93 + 8);
    ++v95;
    ++v94;
    uint64_t v41 = v91;
    uint64_t v42 = (uint64_t)v90;
    do
    {
      uint64_t v43 = v103;
      sub_228BAD728();
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))v99)(v43, 1, v41) == 1) {
        goto LABEL_7;
      }
      (*v96)(v42, v43, v41);
      uint64_t v44 = sub_228AC4770(v42, v40, v106);
      uint64_t v113 = v44;
      sub_228BAD568();
      uint64_t v45 = v42;
      uint64_t v46 = v41;
      swift_retain();
      sub_228BAD548();
      uint64_t v47 = v44 + *(void *)(*(void *)v44 + 144);
      swift_beginAccess();
      uint64_t v48 = v102;
      (*v108)(v102, v47, v5);
      sub_228BAD5F8();
      uint64_t v49 = v38;
      uint64_t v50 = v97;
      sub_228BAD5C8();
      swift_release();
      uint64_t v51 = v48;
      uint64_t v41 = v46;
      uint64_t v42 = v45;
      (*v98)(v51, v5);
      uint64_t v52 = v50;
      uint64_t v38 = v49;
      (*v95)(v52, v101);
      (*v94)(v45, v41);
    }
    while (!__OFADD__(v40++, 1));
    __break(1u);
LABEL_7:
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v87 + 8))(v38, v39);
    uint64_t v54 = v112;
    if ((v112 & 0xC000000000000001) != 0)
    {
      sub_228BAD788();
      uint64_t result = sub_228BAD5D8();
      uint64_t v54 = v113;
      v102 = v114;
      uint64_t v55 = v115;
      uint64_t v56 = v116;
      unint64_t v57 = v117;
    }
    else
    {
      uint64_t v56 = 0;
      uint64_t v58 = -1 << *(unsigned char *)(v112 + 32);
      uint64_t v59 = *(void *)(v112 + 56);
      v102 = (unsigned char *)(v112 + 56);
      uint64_t v55 = ~v58;
      uint64_t v60 = -v58;
      if (v60 < 64) {
        uint64_t v61 = ~(-1 << v60);
      }
      else {
        uint64_t v61 = -1;
      }
      unint64_t v57 = v61 & v59;
    }
    uint64_t v62 = v92;
    v63 = v105;
    v64 = (uint64_t (**)(unsigned char *, unsigned char *))v98;
    v103 = (unsigned char *)(v54 & 0x7FFFFFFFFFFFFFFFLL);
    uint64_t v65 = (void (**)(unsigned char *, uint64_t, uint64_t, unsigned char *))(v93 + 56);
    uint64_t v101 = v55;
    int64_t v66 = (unint64_t)(v55 + 64) >> 6;
    uint64_t v67 = (void (**)(unsigned char *, unsigned char *, unsigned char *))(v93 + 32);
    while (1)
    {
      if (v54 < 0)
      {
        if (!sub_228BAD798()) {
          goto LABEL_35;
        }
        sub_228BAD9D8();
        swift_unknownObjectRelease();
        uint64_t v62 = v92;
      }
      else
      {
        if (v57)
        {
          unint64_t v68 = __clz(__rbit64(v57));
          v57 &= v57 - 1;
          unint64_t v69 = v68 | (v56 << 6);
        }
        else
        {
          int64_t v70 = v56 + 1;
          if (__OFADD__(v56, 1))
          {
            __break(1u);
            return result;
          }
          if (v70 >= v66) {
            goto LABEL_35;
          }
          unint64_t v71 = *(void *)&v102[8 * v70];
          uint64_t v72 = v56 + 1;
          if (!v71)
          {
            uint64_t v72 = v56 + 2;
            if (v56 + 2 >= v66) {
              goto LABEL_35;
            }
            unint64_t v71 = *(void *)&v102[8 * v72];
            if (!v71)
            {
              uint64_t v72 = v56 + 3;
              if (v56 + 3 >= v66) {
                goto LABEL_35;
              }
              unint64_t v71 = *(void *)&v102[8 * v72];
              if (!v71)
              {
                uint64_t v73 = v56 + 4;
                while (v66 != v73)
                {
                  unint64_t v71 = *(void *)&v102[8 * v73++];
                  if (v71)
                  {
                    uint64_t v72 = v73 - 1;
                    goto LABEL_31;
                  }
                }
LABEL_35:
                uint64_t v76 = v85;
                uint64_t v77 = v84;
                uint64_t v78 = v83;
                int v79 = v82;
                (*v65)(v63, 1, 1, v5);
                sub_228AC98B8();
                (*(void (**)(unsigned char *, uint64_t))(v86 + 8))(v77, v76);
                uint64_t v80 = v119;
                swift_bridgeObjectRelease();
                *(void *)uint64_t v78 = v80;
                return v79 != *(_DWORD *)(v78 + 16);
              }
            }
          }
LABEL_31:
          unint64_t v57 = (v71 - 1) & v71;
          unint64_t v69 = __clz(__rbit64(v71)) + (v72 << 6);
          uint64_t v56 = v72;
        }
        (*(void (**)(unsigned char *, unint64_t, unsigned char *))(v93 + 16))(v63, *(void *)(v54 + 48) + *(void *)(v93 + 72) * v69, v5);
      }
      (*v65)(v63, 0, 1, v5);
      (*v67)(v62, v63, v5);
      sub_228BAD388();
      uint64_t v74 = v62;
      sub_228BAD338();
      uint64_t v75 = v111;
      if (v111)
      {
        AGSubgraphRemoveChild();
        *(unsigned char *)(v75 + *(void *)(*(void *)v75 + 176)) = 1;
        swift_release();
      }
      uint64_t result = (*v64)(v74, v5);
      uint64_t v62 = v74;
      v63 = v105;
    }
  }
  return result;
}

uint64_t sub_228AC4770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v91 = a1;
  uint64_t v92 = a2;
  uint64_t v6 = *(void *)(a3 + 40);
  v90 = *(void (**)(void, void, void))(a3 + 16);
  uint64_t v7 = v90;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v79 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v80 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v78 = (char *)&v69 - v9;
  uint64_t v10 = type metadata accessor for _MapContentOutputs(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v77 = (uint64_t)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v82 = (uint64_t)&v69 - v13;
  uint64_t v14 = type metadata accessor for _MapContentInputs(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v83 = (uint64_t)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a3 + 24);
  uint64_t v88 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  v81 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v69 - v20;
  uint64_t v22 = *(void *)(a3 + 32);
  uint64_t v23 = *(void *)(a3 + 48);
  uint64_t v93 = v7;
  uint64_t v94 = v17;
  uint64_t v95 = v22;
  uint64_t v96 = v6;
  uint64_t v97 = v23;
  uint64_t v24 = sub_228BAD288();
  uint64_t v85 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v69 - v25;
  sub_228AC632C((uint64_t)&v69 - v25);
  uint64_t v86 = v24;
  uint64_t v27 = (uint64_t)v26;
  sub_228BAD268();
  uint64_t v28 = *(int *)(a3 + 80);
  uint64_t v89 = v4;
  uint64_t v84 = v4 + v28;
  uint64_t v29 = (void *)(v4 + v28 + 8);
  uint64_t v30 = *v29;
  uint64_t v31 = *(void *)(a3 + 56);
  uint64_t v93 = v90;
  uint64_t v94 = v17;
  uint64_t v95 = v22;
  uint64_t v96 = v6;
  uint64_t v97 = v23;
  uint64_t v98 = v31;
  uint64_t v32 = _s4ItemCMa();
  uint64_t v87 = v21;
  uint64_t v33 = v30;
  uint64_t v34 = v17;
  MEMORY[0x22A6A6AF0](&v99, v21, v33, v17, v32, v23);
  uint64_t v35 = v99;
  if (v99)
  {
    uint64_t v36 = v88;
    uint64_t v37 = *v99;
    uint64_t v38 = *(void *)(*v99 + 176);
    if (*((unsigned char *)v99 + v38) == 1)
    {
      *((unsigned char *)v99 + v38) = 0;
      AGSubgraphAddChild();
      uint64_t v37 = *v35;
    }
    uint64_t v39 = *(void *)(v37 + 168);
    int v40 = *(_DWORD *)((char *)v35 + v39);
    uint64_t v41 = v84;
    int v42 = *(_DWORD *)(v84 + 16);
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v27, v86);
    if (v40 == v42)
    {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v87, v34);
    }
    else
    {
      uint64_t v65 = (char *)v35 + *(void *)(*v35 + 152);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v79 + 24))(v65, v91, v80);
      swift_endAccess();
      *(void *)((char *)v35 + *(void *)(*v35 + 160)) = v92;
      int64_t v66 = v81;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v81, v87, v34);
      uint64_t v67 = (char *)v35 + *(void *)(*v35 + 144);
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v36 + 40))(v67, v66, v34);
      swift_endAccess();
      *(_DWORD *)((char *)v35 + v39) = *(_DWORD *)(v41 + 16);
    }
    return (uint64_t)v35;
  }
  uint64_t v72 = v31;
  uint64_t v73 = v22;
  uint64_t v74 = v29;
  uint64_t v75 = v17;
  uint64_t v43 = v6;
  uint64_t v76 = v27;
  uint64_t v44 = v83;
  uint64_t v45 = (int *)v89;
  id v46 = (id)AGSubgraphGetGraph();
  uint64_t v47 = AGSubgraphCreate();

  uint64_t v48 = v47;
  AGSubgraphAddChild();
  uint64_t result = AGGraphGetCurrentAttribute();
  if (result != *MEMORY[0x263F288F8])
  {
    int v50 = result;
    int v51 = *v45;
    uint64_t v52 = (uint64_t)v45 + *(int *)(a3 + 68);
    uint64_t v53 = v44;
    sub_228AC7FCC(v52, v44, type metadata accessor for _MapContentInputs);
    uint64_t v89 = AGGraphClearUpdate();
    id v54 = (id)AGSubgraphGetCurrent();
    uint64_t v70 = v48;
    AGSubgraphSetCurrent();
    uint64_t v71 = v23;
    uint64_t v68 = v43;
    uint64_t v55 = v75;
    uint64_t v56 = v82;
    uint64_t v57 = v53;
    uint64_t v58 = (uint64_t)v87;
    uint64_t v60 = v91;
    uint64_t v59 = v92;
    sub_228AC4F40(v51, v57, (uint64_t)v87, v92, v76, v91, v50, (uint64_t)v90, v82, v75, v73, v68, v23, v72);
    AGSubgraphSetCurrent();

    AGGraphSetUpdate();
    uint64_t v61 = v77;
    sub_228AC7FCC(v56, v77, type metadata accessor for _MapContentOutputs);
    uint64_t v62 = v88;
    v90 = *(void (**)(void, void, void))(v88 + 16);
    uint64_t v63 = (uint64_t)v81;
    v90(v81, v58, v55);
    uint64_t v64 = (uint64_t)v78;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v78, v60, v80);
    LODWORD(v6__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_DWORD *)(v84 + 16);
    swift_allocObject();
    uint64_t v35 = sub_228AC3628(v70, v61, v63, v64, v59, v60);
    v90(v63, v58, v55);
    uint64_t v93 = (void (*)(void, void, void))v35;
    sub_228BAD388();
    swift_retain();
    sub_228BAD3A8();
    sub_228AC98C0(v82, type metadata accessor for _MapContentOutputs);
    sub_228AC98C0(v83, type metadata accessor for _MapContentInputs);
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v58, v55);
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v76, v86);
    return (uint64_t)v35;
  }
  __break(1u);
  return result;
}

uint64_t sub_228AC4F40@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v94 = a7;
  uint64_t v91 = a6;
  uint64_t v88 = a5;
  uint64_t v82 = a4;
  uint64_t v104 = a3;
  uint64_t v102 = a2;
  int v105 = a1;
  uint64_t v99 = a9;
  uint64_t v122 = *MEMORY[0x263EF8340];
  uint64_t v98 = sub_228BAC5E8();
  uint64_t v97 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v96 = (uint64_t)&v71 - v15;
  uint64_t v116 = a8;
  uint64_t v117 = a10;
  uint64_t v118 = a11;
  uint64_t v119 = a12;
  uint64_t v120 = a13;
  uint64_t v121 = a14;
  uint64_t v93 = _s5ChildVMa();
  uint64_t v95 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v89 = (_DWORD *)((char *)&v71 - v16);
  uint64_t v17 = *(void *)(a12 + 8);
  uint64_t v72 = a12;
  uint64_t v87 = *(void *)(v17 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v85 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v18 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v83 = (char *)&v71 - v19;
  uint64_t v71 = a8;
  uint64_t v84 = *(void *)(a8 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  v81 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = a11;
  uint64_t v92 = *(void *)(a11 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  v90 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  v103 = (char *)&v71 - v24;
  uint64_t v25 = type metadata accessor for _MapContentInputs(0) - 8;
  uint64_t v75 = v25;
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v101 = (uint64_t)&v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = *(void *)(a10 - 8);
  uint64_t v28 = v80;
  MEMORY[0x270FA5388](v26);
  v100 = (char *)&v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = a8;
  uint64_t v117 = a10;
  uint64_t v118 = a11;
  uint64_t v119 = a12;
  uint64_t v120 = a13;
  uint64_t v121 = a14;
  uint64_t v79 = a14;
  uint64_t v30 = _s11ChildTraitsVMa();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v71 - v32;
  int v34 = *(_DWORD *)(v102 + *(int *)(v25 + 36));
  uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  uint64_t v78 = v28 + 16;
  uint64_t v35 = v100;
  v77(v100, v104, a10);
  uint64_t v76 = a13;
  uint64_t v36 = (uint64_t)v35;
  uint64_t v37 = v71;
  uint64_t v74 = a10;
  uint64_t v38 = v73;
  uint64_t v39 = v72;
  sub_228AC5994(v105, v34, v36, v82, a10, v33);
  uint64_t v114 = v30;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291990);
  sub_228AC7E20((uint64_t)v33, (uint64_t)sub_228AC9950, (uint64_t)v113, v30, MEMORY[0x263F8E628], v40, MEMORY[0x263F8E658], v41);
  uint64_t v82 = 0;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
  int v42 = v116;
  uint64_t v43 = v101;
  sub_228AC7FCC(v102, v101, type metadata accessor for _MapContentInputs);
  *(_DWORD *)(v43 + *(int *)(v75 + 36)) = v42;
  uint64_t v116 = v37;
  uint64_t v117 = a10;
  uint64_t v118 = v38;
  uint64_t v119 = v39;
  uint64_t v44 = v39;
  uint64_t v120 = a13;
  sub_228BAD288();
  uint64_t v45 = (void (*)(char *))sub_228BAD278();
  id v46 = v81;
  sub_228BAD258();
  uint64_t v47 = v37;
  uint64_t v48 = (void (*)(uint64_t *, void))sub_228BAD658();
  uint64_t v49 = v85;
  int v50 = v83;
  uint64_t v51 = AssociatedTypeWitness;
  (*(void (**)(char *))(v85 + 16))(v83);
  v48(&v116, 0);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v46, v47);
  v45(v50);
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
  uint64_t v52 = v100;
  uint64_t v53 = v74;
  v77(v100, v104, v74);
  uint64_t v54 = (uint64_t)v89;
  int v55 = v105;
  *uint64_t v89 = v94;
  *(_DWORD *)(v54 + 4) = v55;
  uint64_t v116 = v47;
  uint64_t v117 = v53;
  uint64_t v118 = v38;
  uint64_t v119 = v44;
  uint64_t v56 = v79;
  uint64_t v120 = v76;
  uint64_t v121 = v79;
  uint64_t v57 = _s5ChildVMa();
  (*(void (**)(uint64_t, char *, uint64_t))(v80 + 32))(v54 + *(int *)(v57 + 72), v52, v53);
  uint64_t v58 = v93;
  uint64_t v110 = v38;
  uint64_t v111 = v93;
  uint64_t v112 = swift_getWitnessTable();
  uint64_t v59 = sub_228BAC488();
  uint64_t v60 = MEMORY[0x263F8E628];
  uint64_t v61 = MEMORY[0x263F8E658];
  sub_228AC7E20(v54, (uint64_t)sub_228AC804C, (uint64_t)v109, v58, MEMORY[0x263F8E628], v59, MEMORY[0x263F8E658], v62);
  (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v54, v58);
  LODWORD(v53) = v116;
  uint64_t v63 = v92;
  uint64_t v64 = (uint64_t)v90;
  uint64_t v65 = v103;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v90, v103, v38);
  uint64_t v107 = v38;
  int v108 = v53;
  sub_228AC7E20(v64, (uint64_t)sub_228AC9A48, (uint64_t)v106, v38, v60, MEMORY[0x263F8D4F8], v61, v66);
  uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
  v67(v64, v38);
  uint64_t v68 = v96;
  sub_228ACB078(v53, v96);
  uint64_t v69 = v101;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 32))(v68, v101, v38, v56);
  (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v68, v98);
  v67((uint64_t)v65, v38);
  return sub_228AC98C0(v69, type metadata accessor for _MapContentInputs);
}

double sub_228AC5994@<D0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, char *a6@<X8>)
{
  *(_DWORD *)a6 = a1;
  *((_DWORD *)a6 + 1) = a2;
  uint64_t v10 = (int *)_s11ChildTraitsVMa();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(&a6[v10[18]], a3, a5);
  *(void *)&a6[v10[19]] = a4;
  uint64_t v11 = v10[20];
  __swift_instantiateConcreteTypeFromMangledName(qword_268291998);
  uint64_t v12 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v12 + 16) = xmmword_228BAF4E0;
  *(void *)(v12 + 32) = -1;
  *(unsigned char *)(v12 + 72) = 0;
  *(void *)&a6[v11] = v12;
  return result;
}

void sub_228AC5A74(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
}

uint64_t sub_228AC5A84()
{
  return 0;
}

uint64_t sub_228AC5A8C()
{
  return 2;
}

uint64_t sub_228AC5A94()
{
  return 8;
}

uint64_t sub_228AC5A9C()
{
  _s9ItemStateVMa();
  uint64_t v0 = *(void *)AGGraphGetValue();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_228AC5B1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_228BAD288();
  uint64_t Value = AGGraphGetValue();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, Value, v2);
}

uint64_t sub_228AC5BB4(uint64_t a1)
{
  uint64_t v79 = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v67 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  uint64_t v66 = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v65 = (char *)v55 - v7;
  uint64_t v8 = *(void *)(v6 + 40);
  uint64_t v9 = *(void *)(*(void *)(v8 + 8) + 8);
  uint64_t v10 = *(void *)(v6 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v62 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v63 = AssociatedTypeWitness;
  uint64_t v12 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v59 = (char *)v55 - v13;
  uint64_t v60 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v58 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 48);
  uint64_t v73 = v10;
  uint64_t v74 = v15;
  uint64_t v75 = v3;
  uint64_t v76 = v8;
  uint64_t v77 = v16;
  uint64_t v68 = sub_228BAD288();
  uint64_t v57 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v56 = (uint64_t)v55 - v17;
  uint64_t v61 = v9;
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v70 = *(void *)(v18 - 8);
  uint64_t v71 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v69 = (char *)v55 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v22, v1, a1);
  uint64_t v24 = &v22[*(int *)(a1 + 72)];
  uint64_t v25 = v1;
  sub_228AC5A9C();
  uint64_t v27 = v26;
  uint64_t v28 = *(void *)(a1 + 56);
  uint64_t v73 = v10;
  uint64_t v74 = v15;
  uint64_t v64 = v3;
  uint64_t v75 = v3;
  uint64_t v76 = v8;
  uint64_t v77 = v16;
  uint64_t v78 = v28;
  uint64_t v29 = _s4ItemCMa();
  MEMORY[0x22A6A6AF0](v72, v24, v27, v15, v29, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v24, v15);
  uint64_t v31 = v72[0];
  if (v72[0])
  {
    int v32 = *(_DWORD *)(v72[0] + *(void *)(*(void *)v72[0] + 168));
    sub_228AC5A9C();
    int v34 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v32 == v34)
    {
      uint64_t v35 = v56;
      sub_228AC5B1C(v56);
      uint64_t v36 = v58;
      uint64_t v37 = v68;
      sub_228BAD258();
      uint64_t v57 = *(void *)(v57 + 8);
      ((void (*)(uint64_t, uint64_t))v57)(v35, v37);
      uint64_t v38 = v31 + *(void *)(*(void *)v31 + 152);
      swift_beginAccess();
      uint64_t v39 = v62;
      uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
      uint64_t v41 = v59;
      v55[1] = v25;
      uint64_t v42 = v63;
      v40(v59, v38, v63);
      uint64_t v43 = v36;
      uint64_t v44 = (void (*)(uint64_t *, void))sub_228BAD658();
      (*(void (**)(char *))(v70 + 16))(v69);
      v44(&v73, 0);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v42);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v43, v10);
      sub_228AC5B1C(v35);
      uint64_t v45 = v68;
      id v46 = (void (*)(char *))sub_228BAD278();
      ((void (*)(uint64_t, uint64_t))v57)(v35, v45);
      uint64_t v47 = v65;
      uint64_t v48 = v69;
      v46(v69);
      swift_release();
      uint64_t v50 = (uint64_t)v66;
      uint64_t v49 = v67;
      uint64_t v51 = v64;
      uint64_t v52 = (*(uint64_t (**)(char *, char *, uint64_t))(v67 + 16))(v66, v47, v64);
      MEMORY[0x270FA5388](v52);
      v55[-2] = a1;
      v55[-1] = swift_getWitnessTable();
      sub_228AC7E20(v50, (uint64_t)sub_228AC9890, (uint64_t)&v55[-4], v51, MEMORY[0x263F8E628], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8E658], v53);
      swift_release();
      uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
      v54(v50, v51);
      v54((uint64_t)v47, v51);
      return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v48, v71);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_228AC632C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_228BAD288();
  uint64_t Value = AGGraphGetValue();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, Value, v2);
}

uint64_t sub_228AC63C4@<X0>(uint64_t a1@<X8>)
{
  int v3 = *(_DWORD *)(v1 + 4);
  int v4 = *MEMORY[0x263F288F8];
  uint64_t v5 = sub_228BACE18();
  uint64_t v6 = v5;
  if (v3 == v4)
  {
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = 1;
  }
  else
  {
    uint64_t Value = AGGraphGetValue();
    uint64_t v12 = *(void *)(v6 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(a1, Value, v6);
    uint64_t v7 = v12;
    uint64_t v8 = 0;
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);

  return v10(a1, v8, 1, v6);
}

uint64_t sub_228AC64EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 32) - 8) + 56))(a2, 1, 1);
}

uint64_t sub_228AC6528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v41 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v5 + 48);
  uint64_t v8 = type metadata accessor for TagValueTraitKey.Value();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v37 = (char *)&v36 - v9;
  uint64_t v38 = v4;
  uint64_t v44 = *(void *)(a1 + 16);
  uint64_t v45 = v4;
  long long v46 = *(_OWORD *)(a1 + 32);
  uint64_t v40 = v7;
  uint64_t v47 = v7;
  uint64_t v10 = sub_228BAD288();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v36 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268294040);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v36 - v17;
  sub_228AC63C4((uint64_t)&v36 - v17);
  uint64_t v19 = sub_228BACE18();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_228BACE08();
    sub_228ACAE4C((uint64_t)v18);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v43, v18, v19);
  }
  uint64_t v21 = *(int *)(a1 + 76);
  uint64_t v44 = *(void *)(v2 + v21);
  LOBYTE(v45) = 0;
  sub_228ACAEAC();
  sub_228BACE38();
  sub_228AC632C((uint64_t)v13);
  char v22 = sub_228BAD228();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v22)
  {
    uint64_t v44 = *(void *)(v2 + v21);
    uint64_t v23 = v44;
    LOBYTE(v45) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268291B28);
    sub_228ACAFA8();
    uint64_t v24 = v43;
    sub_228BACE38();
    uint64_t v25 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v42, v24, v19);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v25, 0, 1, v19);
    uint64_t v44 = v23;
    char v48 = 0;
    uint64_t v26 = sub_228B78FF0(v25, (uint64_t)&v44);
    sub_228ACAF00((uint64_t)&v44);
    uint64_t v27 = v25;
  }
  else
  {
    uint64_t v28 = v2 + *(int *)(a1 + 72);
    uint64_t v30 = v38;
    uint64_t v29 = v39;
    uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
    int v32 = v37;
    v31(v37, v28, v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v32, 0, 1, v30);
    type metadata accessor for TagValueTraitKey();
    swift_getWitnessTable();
    uint64_t v33 = v43;
    sub_228BACE38();
    uint64_t v34 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v42, v33, v19);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v34, 0, 1, v19);
    v31(v41, v28, v30);
    sub_228BAD7D8();
    char v48 = 1;
    uint64_t v26 = sub_228B78FF0(v34, (uint64_t)&v44);
    sub_228ACAF00((uint64_t)&v44);
    uint64_t v27 = v34;
  }
  sub_228ACAE4C(v27);
  uint64_t v44 = v26;
  sub_228ACAF54();
  return sub_228BACE38();
}

uint64_t sub_228AC6A40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_228BACE18();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_228AC6AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_228BAC5E8();
  uint64_t v9 = sub_228BAD718();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v12 = *(void *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 56);
  int v19 = *MEMORY[0x263F288F8];
  uint64_t v21 = AssociatedTypeWitness;
  long long v24 = *(_OWORD *)(a2 + 16);
  uint64_t v25 = v12;
  uint64_t v26 = a3;
  long long v27 = *(_OWORD *)(a2 + 40);
  uint64_t v28 = v13;
  uint64_t v29 = a4;
  uint64_t v14 = _s25ForEachPreferenceCombinerVMa();
  uint64_t v22 = v14;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = sub_228BAC488();
  sub_228AC7E20((uint64_t)&v19, (uint64_t)sub_228AC986C, (uint64_t)v20, v14, MEMORY[0x263F8E628], v15, MEMORY[0x263F8E658], v16);
  sub_228ACB078(v24, (uint64_t)v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v11, 0, 1, v8);
  return sub_228BACDD8();
}

uint64_t sub_228AC6CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_228AC6AB0(a1, a4, a2, a3);
}

uint64_t sub_228AC6CBC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  v26[1] = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_228BAC5E8();
  uint64_t v9 = sub_228BAD718();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v26 - v12;
  uint64_t v14 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v16 = (unsigned int *)((char *)v26 - v15);
  sub_228BACDC8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v8) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  (*(void (**)(unsigned int *, char *, uint64_t))(v14 + 32))(v16, v13, v8);
  uint64_t v18 = sub_228ACB118(v16);
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = a2[2];
  uint64_t v20 = a2[3];
  v26[-10] = v19;
  v26[-9] = v20;
  uint64_t v21 = a2[4];
  uint64_t v22 = a2[5];
  v26[-8] = v21;
  v26[-7] = a3;
  uint64_t v23 = a2[6];
  uint64_t v24 = a2[7];
  v26[-6] = v22;
  v26[-5] = v23;
  v26[-4] = v24;
  v26[-3] = a4;
  v26[-2] = v4;
  v26[2] = v19;
  v26[3] = v20;
  v26[4] = v21;
  v26[5] = a3;
  v26[6] = v22;
  v26[7] = v23;
  v26[8] = v24;
  v26[9] = a4;
  uint64_t v25 = _s25ForEachPreferenceCombinerVMa();
  v26[-4] = MEMORY[0x270FA5388](v25);
  v26[-3] = sub_228AC9A84;
  v26[-2] = &v26[-12];
  AGGraphMutateAttribute();
  return (*(uint64_t (**)(unsigned int *, uint64_t))(v14 + 8))(v16, v8);
}

uint64_t sub_228AC6F7C(_DWORD *a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a2 + *(int *)(_s21AttachCombinerVisitorVMa() + 68));
  uint64_t result = _s25ForEachPreferenceCombinerVMa();
  *a1 = v3;
  return result;
}

uint64_t sub_228AC7038(int a1)
{
  if (*MEMORY[0x263F288F8] == a1) {
    return 0;
  }
  _s9ItemStateVMa();
  uint64_t v1 = *(void *)AGGraphGetValue();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_228AC70D8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_228AC6CBC(a1, a4, a2, a3);
}

uint64_t sub_228AC70EC@<X0>(uint64_t a1@<X8>)
{
  sub_228BAC6F8();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);

  return v3(a1, 0, 1, AssociatedTypeWitness);
}

uint64_t sub_228AC718C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v61 = a8;
  LODWORD(v76) = a1;
  uint64_t v70 = a9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v71 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v59 = (char *)&v52 - v17;
  uint64_t v69 = v18;
  uint64_t v19 = sub_228BAC5E8();
  uint64_t v68 = sub_228BAD718();
  uint64_t v62 = *(void (***)(char *, uint64_t))(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v21 = (char *)&v52 - v20;
  uint64_t v22 = type metadata accessor for _MapContentOutputs(0);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v74 = (uint64_t)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = *(void (***)(unsigned int *, uint64_t))(v19 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v67 = (unsigned int *)((char *)&v52 - v25);
  uint64_t v51 = a10;
  uint64_t v53 = a2;
  uint64_t v26 = a3;
  uint64_t v54 = a4;
  uint64_t v60 = a6;
  uint64_t v27 = a7;
  uint64_t v28 = v61;
  uint64_t result = sub_228AC7038(v76);
  if (result)
  {
    uint64_t v30 = result;
    uint64_t v75 = a10;
    uint64_t v76 = a5;
    sub_228BAC6F8();
    swift_bridgeObjectRelease();
    uint64_t v31 = v53;
    uint64_t v77 = v53;
    uint64_t v78 = v26;
    uint64_t v32 = v54;
    uint64_t v79 = v54;
    uint64_t v80 = v60;
    uint64_t v58 = v27;
    uint64_t v81 = v27;
    uint64_t v82 = v28;
    uint64_t v33 = _s4ItemCMa();
    if (!MEMORY[0x22A6A6CB0](v30, v33)) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v34 = 0;
    uint64_t v35 = v63;
    uint64_t v72 = (unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 6);
    ++v63;
    uint64_t v64 = (void (**)(char *, char *, uint64_t))(v35 + 4);
    uint64_t v57 = (void (**)(char *, uint64_t, uint64_t))(v71 + 16);
    uint64_t v56 = (void (**)(uint64_t, uint64_t))(v71 + 8);
    int v55 = (void (**)(uint64_t, char *, uint64_t))(v71 + 32);
    ++v62;
    LODWORD(v71) = 1;
    uint64_t v65 = v30;
    uint64_t v66 = v21;
    uint64_t v73 = v33;
    while (1)
    {
      uint64_t result = sub_228BAD4C8();
      uint64_t v36 = v34 + 1;
      if (__OFADD__(v34, 1)) {
        break;
      }
      uint64_t v37 = v32;
      uint64_t v38 = v74;
      sub_228AC7FCC(*(void *)(v30 + 8 * v34 + 32) + qword_268291708, v74, type metadata accessor for _MapContentOutputs);
      swift_retain();
      sub_228BACDC8();
      uint64_t v39 = sub_228BACDB8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
      if ((*v72)(v21, 1, v19) == 1)
      {
        swift_release();
        (*v62)(v21, v68);
        uint64_t v32 = v37;
      }
      else
      {
        uint64_t v40 = v67;
        (*v64)((char *)v67, v21, v19);
        uint64_t v41 = v19;
        uint64_t v42 = v69;
        uint64_t v43 = sub_228ACB118(v40);
        uint64_t v32 = v37;
        if (v71)
        {
          uint64_t Value = AGGraphGetValue();
          uint64_t v45 = v59;
          (*v57)(v59, Value, v42);
          swift_release();
          (*v63)(v40, v41);
          uint64_t v46 = v70;
          (*v56)(v70, v42);
          (*v55)(v46, v45, v42);
        }
        else
        {
          int v47 = MEMORY[0x270FA5388](v43);
          *(&v52 - 1__isPlatformVersionAtLeast(2, 18, 1, 0) = v31;
          *(&v52 - 9) = v26;
          uint64_t v49 = v75;
          uint64_t v48 = v76;
          *(&v52 - 8) = v37;
          *(&v52 - 7) = v48;
          uint64_t v50 = v58;
          *(&v52 - 6) = v60;
          *(&v52 - 5) = v50;
          *(&v52 - 4) = v61;
          *(&v52 - 3) = v49;
          LODWORD(v51) = v47;
          sub_228BAC708();
          uint64_t v32 = v37;
          swift_release();
          (*v63)(v40, v41);
        }
        LODWORD(v71) = 0;
        uint64_t v19 = v41;
        uint64_t v30 = v65;
        uint64_t v21 = v66;
      }
      ++v34;
      if (v36 == MEMORY[0x22A6A6CB0](v30, v73)) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_228AC77BC@<X0>(uint64_t a1@<X8>)
{
  return sub_228AC70EC(a1);
}

uint64_t sub_228AC77D4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_228AC718C(*v2, a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a2, a1[9]);
}

uint64_t sub_228AC7810(uint64_t a1, uint64_t a2)
{
  v15[1] = *MEMORY[0x263EF8340];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_228BAD718();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v15 - v7;
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)v15 - v10;
  sub_228AC70EC((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  uint64_t v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, AssociatedTypeWitness);
  MEMORY[0x270FA5388](v13);
  v15[-2] = a2;
  v15[-1] = swift_getWitnessTable();
  sub_228B3C21C((uint64_t)v11, (uint64_t)sub_228ACB004, (uint64_t)&v15[-4], AssociatedTypeWitness, MEMORY[0x263F8E628], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8E658], v14);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
}

uint64_t sub_228AC7ABC@<X0>(unsigned int *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return static ForEach<>._makeMapContent(content:inputs:)(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], *(void *)(a4 - 8), a5);
}

uint64_t ForEach<>.init<>(_:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a1, a4);
}

uint64_t sub_228AC7C0C()
{
  return sub_228BAD828();
}

uint64_t ForEach<>.init(_:id:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_228BAD248();
  swift_release();
  swift_release();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a5 - 8) + 8);

  return v7(a1, a5);
}

uint64_t ForEach<>.init<>(_:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a5;
  v10[3] = a6;
  v10[4] = a3;
  v10[5] = a4;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293EA0);
  sub_228AC80EC();
  sub_228BAD238();
  swift_release();
  return swift_release();
}

uint64_t sub_228AC7DC8()
{
  return AGGraphSetOutputValue();
}

uint64_t sub_228AC7E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = MEMORY[0x270FA5388]();
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v15(v12, v14);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  }
  return result;
}

uint64_t sub_228AC7EFC@<X0>(_DWORD *a1@<X8>)
{
  sub_228AC5A84();
  uint64_t result = sub_228BAC478();
  *a1 = result;
  return result;
}

uint64_t sub_228AC7F90@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = AGGraphSetValue();
  *a1 = result;
  return result;
}

uint64_t sub_228AC7FCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t _s9ItemStateVMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_228AC804C@<X0>(_DWORD *a1@<X8>)
{
  return sub_228AC99B8(a1);
}

uint64_t sub_228AC8068()
{
  return 48;
}

__n128 sub_228AC8074(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_228AC8088()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_228AC80C0(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 32))(*a1);
}

unint64_t sub_228AC80EC()
{
  unint64_t result = qword_268293EE0;
  if (!qword_268293EE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_268293EA0);
    sub_228AC8168();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268293EE0);
  }
  return result;
}

unint64_t sub_228AC8168()
{
  unint64_t result = qword_268291700;
  if (!qword_268291700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291700);
  }
  return result;
}

_UNKNOWN **sub_228AC81BC()
{
  return &protocol witness table for Never;
}

uint64_t sub_228AC81C8(uint64_t a1, uint64_t a2)
{
  return *(void *)(*(void *)(*(void *)(a2 + 40) + 8) + 8);
}

uint64_t sub_228AC81D8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_228AC822C()
{
  uint64_t result = sub_228BACDB8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_getAssociatedTypeWitness();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t _s4ItemCMa()
{
  return swift_getGenericMetadata();
}

uint64_t dispatch thunk of DynamicMapContent.data.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_228AC83B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 64);
}

uint64_t sub_228AC83C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_228AC8400(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy20_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t sub_228AC847C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t sub_228AC84C4(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 20)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_228AC850C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 2__isPlatformVersionAtLeast(2, 18, 1, 0) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 2__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_228AC854C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 56);
}

uint64_t sub_228AC8554()
{
  uint64_t result = sub_228BACDB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_228AC85E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t sub_228AC85F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm);
}

uint64_t sub_228AC8610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 72);
}

uint64_t sub_228AC8618()
{
  uint64_t result = type metadata accessor for _MapContentInputs(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_228BACDB8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_228AC8708(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v7 = a3[17];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_228BACB48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = (int *)type metadata accessor for _MapContentInputs(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = &v8[v12];
    uint64_t v14 = &v9[v12];
    uint64_t v15 = sub_228BAC608();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = v11[6];
    uint64_t v17 = &v8[v16];
    uint64_t v18 = &v9[v16];
    uint64_t v19 = sub_228BACD78();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    *(_DWORD *)&v8[v11[7]] = *(_DWORD *)&v9[v11[7]];
    uint64_t v20 = a3[18];
    uint64_t v21 = (char *)v4 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_228BACDB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[19];
    uint64_t v25 = a3[20];
    uint64_t v26 = *(void **)((char *)a2 + v24);
    *(uint64_t *)((char *)v4 + v24) = (uint64_t)v26;
    uint64_t v27 = (char *)v4 + v25;
    uint64_t v28 = (char *)a2 + v25;
    uint64_t v29 = *((void *)v28 + 1);
    *(void *)uint64_t v27 = *(void *)v28;
    *((void *)v27 + 1) = v29;
    *((_DWORD *)v27 + 4) = *((_DWORD *)v28 + 4);
    id v30 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_228AC8914(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[17];
  uint64_t v5 = sub_228BACB48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = type metadata accessor for _MapContentInputs(0);
  uint64_t v7 = v4 + *(int *)(v6 + 20);
  uint64_t v8 = sub_228BAC608();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v4 + *(int *)(v6 + 24);
  uint64_t v10 = sub_228BACD78();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[18];
  uint64_t v12 = sub_228BACDB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

_DWORD *sub_228AC8A84(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[17];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_228BACB48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for _MapContentInputs(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_228BAC608();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  uint64_t v18 = sub_228BACD78();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  *(_DWORD *)&v7[v10[7]] = *(_DWORD *)&v8[v10[7]];
  uint64_t v19 = a3[18];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_228BACDB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[19];
  uint64_t v24 = a3[20];
  uint64_t v25 = *(void **)((char *)a2 + v23);
  *(void *)((char *)a1 + v23) = v25;
  uint64_t v26 = (char *)a1 + v24;
  uint64_t v27 = (char *)a2 + v24;
  uint64_t v28 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = v28;
  *((_DWORD *)v26 + 4) = *((_DWORD *)v27 + 4);
  id v29 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_DWORD *sub_228AC8C40(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[17];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_228BACB48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for _MapContentInputs(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_228BAC608();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  uint64_t v18 = sub_228BACD78();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  *(_DWORD *)&v7[v10[7]] = *(_DWORD *)&v8[v10[7]];
  uint64_t v19 = a3[18];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_228BACDB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[19];
  uint64_t v24 = *(void **)((char *)a2 + v23);
  uint64_t v25 = *(void **)((char *)a1 + v23);
  *(void *)((char *)a1 + v23) = v24;
  id v26 = v24;

  uint64_t v27 = a3[20];
  uint64_t v28 = (char *)a1 + v27;
  id v29 = (char *)a2 + v27;
  *(void *)((char *)a1 + v27) = *(void *)((char *)a2 + v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v28 + 1) = *((void *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_DWORD *)v28 + 4) = *((_DWORD *)v29 + 4);
  return a1;
}

_DWORD *sub_228AC8E20(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[17];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_228BACB48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for _MapContentInputs(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_228BAC608();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  uint64_t v18 = sub_228BACD78();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  *(_DWORD *)&v7[v10[7]] = *(_DWORD *)&v8[v10[7]];
  uint64_t v19 = a3[18];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_228BACDB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[20];
  *(void *)((char *)a1 + a3[19]) = *(void *)((char *)a2 + a3[19]);
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *((_DWORD *)v24 + 4) = *((_DWORD *)v25 + 4);
  return a1;
}

_DWORD *sub_228AC8FC8(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[17];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_228BACB48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for _MapContentInputs(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_228BAC608();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  uint64_t v18 = sub_228BACD78();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  *(_DWORD *)&v7[v10[7]] = *(_DWORD *)&v8[v10[7]];
  uint64_t v19 = a3[18];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_228BACDB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[19];
  uint64_t v24 = *(void **)((char *)a1 + v23);
  *(void *)((char *)a1 + v23) = *(void *)((char *)a2 + v23);

  uint64_t v25 = a3[20];
  id v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  *(void *)((char *)a1 + v25) = *(void *)v27;
  swift_bridgeObjectRelease();
  *((void *)v26 + 1) = *((void *)v27 + 1);
  swift_bridgeObjectRelease();
  *((_DWORD *)v26 + 4) = *((_DWORD *)v27 + 4);
  return a1;
}

uint64_t sub_228AC9194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_228AC91A8);
}

uint64_t sub_228AC91A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for _MapContentInputs(0);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[17];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = type metadata accessor for _MapContentOutputs(0);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[18];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[19]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_228AC92B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_228AC92CC);
}

uint64_t sub_228AC92CC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for _MapContentInputs(0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[17];
  }
  else
  {
    uint64_t result = type metadata accessor for _MapContentOutputs(0);
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[19]) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[18];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

uint64_t sub_228AC93D8()
{
  uint64_t result = sub_228BACDB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_228AC9470(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_228BACDB8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 68)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 68));
  }
  return a1;
}

uint64_t sub_228AC953C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228BACDB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 68)) = *(_DWORD *)(a2 + *(int *)(a3 + 68));
  return a1;
}

uint64_t sub_228AC95B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228BACDB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 68)) = *(_DWORD *)(a2 + *(int *)(a3 + 68));
  return a1;
}

uint64_t sub_228AC9634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228BACDB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 68)) = *(_DWORD *)(a2 + *(int *)(a3 + 68));
  return a1;
}

uint64_t sub_228AC96B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228BACDB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 68)) = *(_DWORD *)(a2 + *(int *)(a3 + 68));
  return a1;
}

uint64_t sub_228AC972C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_228AC9740);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _MapContentOutputs(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_228AC97B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_228AC97C4);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _MapContentOutputs(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_228AC9838()
{
  return swift_getWitnessTable();
}

uint64_t _s25ForEachPreferenceCombinerVMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_228AC986C@<X0>(_DWORD *a1@<X8>)
{
  return sub_228B05680(a1);
}

uint64_t sub_228AC9890()
{
  return sub_228ACB02C();
}

uint64_t sub_228AC98B8()
{
  return swift_release();
}

uint64_t sub_228AC98C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s5ChildVMa()
{
  return swift_getGenericMetadata();
}

uint64_t _s11ChildTraitsVMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_228AC9950@<X0>(_DWORD *a1@<X8>)
{
  return sub_228B05680(a1);
}

uint64_t sub_228AC99B8@<X0>(_DWORD *a1@<X8>)
{
  sub_228AC5A84();
  uint64_t result = sub_228BAC478();
  *a1 = result;
  return result;
}

uint64_t sub_228AC9A48@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = AGGraphSetValue();
  *a1 = result;
  return result;
}

uint64_t sub_228AC9A84(_DWORD *a1)
{
  return sub_228AC6F7C(a1, *(void *)(v1 + 80));
}

uint64_t sub_228AC9ABC()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t (*sub_228AC9AE4())()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  long long v3 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 24) = v3;
  *(void *)(v2 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v3;
  return sub_228AC9B50;
}

uint64_t sub_228AC9B40()
{
  return swift_deallocObject();
}

uint64_t sub_228AC9B50()
{
  return sub_228BAC498();
}

uint64_t sub_228AC9B7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_228AC9BE4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_228AC9CA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64) + 7;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((((v6 + ((v5 + 8) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    uint64_t *v3 = *a2;
    long long v3 = (uint64_t *)(v9 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v10 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
    uint64_t v11 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
    *uint64_t v10 = *v11;
    uint64_t v12 = ((unint64_t)v10 + v5 + 4) & ~v5;
    uint64_t v13 = ((unint64_t)v11 + v5 + 4) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v12, v13);
    uint64_t v14 = (void *)((v6 + v12) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = (void *)((v6 + v13) & 0xFFFFFFFFFFFFFFF8);
    void *v14 = *v15;
    *(void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_228AC9DF0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((((a1 + 7) & 0xFFFFFFFFFFFFFFFCLL)
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)
                                                                                            + 4) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));

  return swift_bridgeObjectRelease();
}

_DWORD *sub_228AC9E80(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v7 = v6 + 16;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v4 + v8 + 4) & ~v8;
  uint64_t v10 = ((unint64_t)v5 + v8 + 4) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 48) + 7;
  uint64_t v12 = (void *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  *(void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

_DWORD *sub_228AC9F48(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v4 + v8 + 4) & ~v8;
  uint64_t v10 = ((unint64_t)v5 + v8 + 4) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 40) + 7;
  uint64_t v12 = (void *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  *(void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_DWORD *sub_228ACA01C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v7 = v6 + 32;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v4 + v8 + 4) & ~v8;
  uint64_t v10 = ((unint64_t)v5 + v8 + 4) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 32) + 7;
  uint64_t v12 = (void *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  *(void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

_DWORD *sub_228ACA0E0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v7 = v6 + 40;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v4 + v8 + 4) & ~v8;
  uint64_t v10 = ((unint64_t)v5 + v8 + 4) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 24) + 7;
  uint64_t v12 = (void *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  *(void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_228ACA1AC(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v8 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) + 7;
  if (v7 < a2)
  {
    unint64_t v9 = ((((v8 + ((v6 + 8) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v10 = a2 - v7;
    uint64_t v11 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = 2;
    }
    else {
      unsigned int v12 = v10 + 1;
    }
    if (v12 >= 0x10000) {
      unsigned int v13 = 4;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v12 < 0x100) {
      unsigned int v13 = 1;
    }
    if (v12 >= 2) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    switch(v14)
    {
      case 1:
        int v15 = *((unsigned __int8 *)a1 + v9);
        if (!v15) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v15 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v15) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x228ACA32CLL);
      case 4:
        int v15 = *(_DWORD *)((char *)a1 + v9);
        if (!v15) {
          break;
        }
LABEL_22:
        int v17 = v15 - 1;
        if (v11)
        {
          int v17 = 0;
          LODWORD(v11) = *a1;
        }
        return v7 + (v11 | v17) + 1;
      default:
        break;
    }
  }
  unint64_t v18 = ((((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL) + v6 + 4) & ~v6;
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))(v18);
  }
  unint64_t v19 = *(void *)((((v8 + v18) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if (v19 >= 0xFFFFFFFF) {
    LODWORD(v19) = -1;
  }
  return (v19 + 1);
}

void sub_228ACA340(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) + 7;
  unint64_t v11 = ((((v10 + ((v9 + 8) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v15 = 0;
    int v16 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v11] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            unint64_t v19 = (((unint64_t)(a1 + 7) & 0xFFFFFFFFFFFFFFFCLL) + v9 + 4) & ~v9;
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v21 = (void *)((((v10 + v19) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0) {
                uint64_t v22 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v22 = a2 - 1;
              }
              *uint64_t v21 = v22;
            }
            else
            {
              uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
              v20(v19);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = a3 - v8;
    if (((((v10 + ((v9 + 8) & ~v9)) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    int v16 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((v10 + ((v9 + 8) & ~v9)) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v17 = v16;
  }
  else {
    int v17 = 1;
  }
  if (((((v10 + ((v9 + 8) & ~v9)) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v18 = ~v8 + a2;
    bzero(a1, ((((v10 + ((v9 + 8) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v18;
  }
  switch(v15)
  {
    case 1:
      a1[v11] = v17;
      break;
    case 2:
      *(_WORD *)&a1[v11] = v17;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x228ACA558);
    case 4:
      *(_DWORD *)&a1[v11] = v17;
      break;
    default:
      return;
  }
}

uint64_t sub_228ACA580()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_228ACA620(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if ((v5 | 3uLL) > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 8) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) > 0x18)
  {
    uint64_t v8 = *a2;
    uint64_t *v3 = *a2;
    long long v3 = (uint64_t *)(v8 + ((v5 + 16) & ~(v5 | 3)));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v9 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
    uint64_t v10 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
    *uint64_t v9 = *v10;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)v9 + v5 + 4) & ~v5, ((unint64_t)v10 + v5 + 4) & ~v5);
  }
  return v3;
}

uint64_t sub_228ACA71C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((((a1 + 7) & 0xFFFFFFFFFFFFFFFCLL) + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));
}

_DWORD *sub_228ACA760(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 16))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_DWORD *sub_228ACA7E4(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_DWORD *sub_228ACA868(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_DWORD *sub_228ACA8EC(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_228ACA970(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v8 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL)
      }
                                                                      + v6
                                                                      + 4) & ~v6);
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_228ACAAF4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  size_t v9 = ((v8 + 8) & ~v8) + *(void *)(v6 + 64);
  BOOL v10 = a3 >= v7;
  unsigned int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v9 < 4)
    {
      int v14 = (v13 >> (8 * v9)) + 1;
      if (v9)
      {
        int v16 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v9] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x228ACAD30);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v17 = (((unint64_t)(a1 + 7) & 0xFFFFFFFFFFFFFFFCLL) + v8 + 4) & ~v8;
        int v18 = *(void (**)(unint64_t))(v6 + 56);
        v18(v17);
      }
      return;
  }
}

uint64_t sub_228ACAD58()
{
  return swift_getWitnessTable();
}

uint64_t sub_228ACAD74()
{
  return swift_getWitnessTable();
}

uint64_t sub_228ACAD90()
{
  return swift_getWitnessTable();
}

uint64_t sub_228ACADAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t Value = AGGraphGetValue();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);

  return v4(a1, Value, AssociatedTypeWitness);
}

uint64_t sub_228ACAE4C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268294040);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_228ACAEAC()
{
  unint64_t result = qword_268291B20;
  if (!qword_268291B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291B20);
  }
  return result;
}

uint64_t sub_228ACAF00(uint64_t a1)
{
  return a1;
}

unint64_t sub_228ACAF54()
{
  unint64_t result = qword_268294050;
  if (!qword_268294050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268294050);
  }
  return result;
}

unint64_t sub_228ACAFA8()
{
  unint64_t result = qword_268291B30;
  if (!qword_268291B30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268291B28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291B30);
  }
  return result;
}

uint64_t sub_228ACB004()
{
  return sub_228ACB02C();
}

uint64_t sub_228ACB02C()
{
  return AGGraphSetOutputValue();
}

uint64_t sub_228ACB078@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v4 = a1;
  uint64_t result = sub_228BAC5E8();
  if (*(void *)(*(void *)(result - 8) + 64) == 4) {
    return (*(uint64_t (**)(uint64_t, int *, uint64_t))(*(void *)(result - 8) + 16))(a2, &v4, result);
  }
  __break(1u);
  return result;
}

uint64_t sub_228ACB118(unsigned int *a1)
{
  uint64_t v2 = sub_228BAC5E8();
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t result = v2 - 8;
  if (*(void *)(v4 + 64) == 4) {
    return *a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_228ACB164(uint64_t a1)
{
  uint64_t v26 = a1;
  uint64_t v2 = sub_228BAC588();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  size_t v9 = (char *)&v25 - v8;
  MEMORY[0x270FA5388](v7);
  unsigned int v11 = (char *)&v25 - v10;
  uint64_t v12 = v1 + *(int *)(type metadata accessor for MapPitchToggleConfig(0) + 28);
  int v13 = *MEMORY[0x263F18568];
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v11, *MEMORY[0x263F18568], v2);
  char v14 = sub_228BAC578();
  unsigned int v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v11, v2);
  int v16 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  unint64_t v17 = (uint64_t (**)(char *, uint64_t))(v3 + 88);
  if (v14)
  {
    v16(v9, v26, v2);
    int v18 = (*v17)(v9, v2);
    if (v18 == *MEMORY[0x263F18550] || v18 == *MEMORY[0x263F18560] || v18 == v13) {
      return 1;
    }
    if (v18 == *MEMORY[0x263F18558]) {
      return 2;
    }
  }
  else
  {
    v16(v6, v12, v2);
    int v22 = (*v17)(v6, v2);
    if (v22 == *MEMORY[0x263F18550] || v22 == *MEMORY[0x263F18560] || v22 == v13) {
      return 1;
    }
    size_t v9 = v6;
    if (v22 == *MEMORY[0x263F18558]) {
      return 2;
    }
  }
  v15(v9, v2);
  return 1;
}

uint64_t MapPitchToggle.init(scope:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  *a3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293840);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (int *)type metadata accessor for MapPitchToggle(0);
  uint64_t v7 = (uint64_t *)((char *)a3 + v6[5]);
  uint64_t *v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293270);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = (char *)a3 + v6[6];
  *(void *)uint64_t v8 = swift_getKeyPath();
  v8[8] = 0;
  size_t v9 = (char *)a3 + v6[7];
  *(void *)size_t v9 = swift_getKeyPath();
  v9[8] = 0;
  uint64_t v10 = (char *)a3 + v6[8];
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v10 = result;
  v10[8] = 0;
  uint64_t v12 = (char *)a3 + v6[9];
  *(void *)uint64_t v12 = a1;
  v12[8] = a2 & 1;
  return result;
}

uint64_t MapPitchToggle.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v91 = a1;
  uint64_t v74 = type metadata accessor for _MapPitchToggle(0);
  MEMORY[0x270FA5388](v74);
  uint64_t v75 = (uint64_t *)((char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291B38);
  uint64_t v3 = MEMORY[0x270FA5388](v90);
  uint64_t v73 = (uint64_t)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v76 = (uint64_t)&v69 - v5;
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291B40);
  MEMORY[0x270FA5388](v88);
  uint64_t v89 = (uint64_t)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291B48);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v71 = (uint64_t)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291B50);
  uint64_t v9 = MEMORY[0x270FA5388](v87);
  uint64_t v70 = (uint64_t *)((char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v72 = (uint64_t)&v69 - v11;
  uint64_t v12 = type metadata accessor for MapControlsConfig();
  int v13 = (int *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v86 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_228BAC588();
  uint64_t v84 = *(void *)(v15 - 8);
  uint64_t v85 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v80 = (uint64_t)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_228BAC9C8();
  uint64_t v81 = *(void *)(v17 - 8);
  uint64_t v82 = v17;
  MEMORY[0x270FA5388](v17);
  unint64_t v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = v19;
  uint64_t v20 = (int *)type metadata accessor for MapPitchToggleConfig(0);
  uint64_t v83 = *((void *)v20 - 1);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v69 = (uint64_t)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v69 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v69 - v26;
  uint64_t v28 = (int *)type metadata accessor for MapPitchToggle(0);
  uint64_t v29 = v1 + v28[8];
  uint64_t v30 = *(void *)v29;
  char v31 = *(unsigned char *)(v29 + 8);
  sub_228AD266C(*(void *)v29, v31);
  unsigned __int8 v32 = sub_228ACD41C(v30, v31);
  int v78 = v32;
  sub_228AD25F8(v30, v31);
  sub_228ACCD4C((uint64_t *)&unk_268293840, MEMORY[0x263F19168], 0xD000000000000011, 0x8000000228BC5AD0, (uint64_t)v19);
  uint64_t v79 = v1;
  uint64_t v33 = v80;
  sub_228ACCD4C((uint64_t *)&unk_268293270, MEMORY[0x263F18570], 0x536C6F72746E6F43, 0xEB00000000657A69, v80);
  uint64_t v34 = v1 + v28[6];
  uint64_t v35 = *(void *)v34;
  char v36 = *(unsigned char *)(v34 + 8);
  j__swift_retain();
  uint64_t v37 = sub_228ACD004(v35, v36);
  j__swift_release();
  if (v78 == 3) {
    char v38 = 0;
  }
  else {
    char v38 = v32;
  }
  uint64_t v39 = (uint64_t)v27;
  uint64_t v40 = v28;
  v25[1] = v38;
  (*(void (**)(char *, char *, uint64_t))(v81 + 32))(&v25[v20[6]], v77, v82);
  (*(void (**)(char *, uint64_t, uint64_t))(v84 + 32))(&v25[v20[7]], v33, v85);
  *(void *)&v25[v20[8]] = v37;
  uint64_t v41 = (uint64_t)v86;
  *uint64_t v25 = 1;
  sub_228AD2604((uint64_t)v25, v39, type metadata accessor for MapPitchToggleConfig);
  sub_228ACD684(v39, v41, type metadata accessor for MapPitchToggleConfig);
  uint64_t v42 = v20;
  uint64_t v43 = v79;
  (*(void (**)(uint64_t, void, uint64_t, int *))(v83 + 56))(v41, 0, 1, v42);
  uint64_t v44 = v41 + v13[7];
  uint64_t v45 = type metadata accessor for MapScaleViewConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 1, 1, v45);
  uint64_t v46 = v41 + v13[8];
  uint64_t v47 = type metadata accessor for MapUserLocationButtonConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 1, 1, v47);
  uint64_t v48 = v41 + v13[9];
  uint64_t v49 = type metadata accessor for MapCompassConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 1, 1, v49);
  *(_WORD *)(v41 + v13[10]) = 2;
  *(_WORD *)(v41 + v13[11]) = 2;
  *(_WORD *)(v41 + v13[12]) = 2;
  uint64_t v50 = v43 + v28[7];
  uint64_t v51 = *(void *)v50;
  LOBYTE(v48) = *(unsigned char *)(v50 + 8);
  sub_228AD266C(*(void *)v50, v48);
  char v52 = sub_228ACD218(v51, v48);
  sub_228AD25F8(v51, v48);
  if (v52)
  {
    uint64_t v53 = sub_228BAD108();
    uint64_t v54 = v71;
    sub_228ACD684(v41, v71, (uint64_t (*)(void))type metadata accessor for MapControlsConfig);
    int v55 = v70;
    sub_228AD2708(v54, (uint64_t)v70 + *(int *)(v87 + 36), &qword_268291B48);
    *int v55 = v53;
    sub_228AC1A50(v54, &qword_268291B48);
    uint64_t v56 = &qword_268291B50;
    uint64_t v57 = (uint64_t)v55;
    uint64_t v58 = v72;
    sub_228ACD8BC(v57, v72, &qword_268291B50);
    sub_228AD2708(v58, v89, &qword_268291B50);
  }
  else
  {
    uint64_t v59 = v69;
    sub_228ACD684(v39, v69, type metadata accessor for MapPitchToggleConfig);
    uint64_t v60 = (uint64_t *)(v43 + v40[9]);
    uint64_t v61 = *v60;
    char v62 = *((unsigned char *)v60 + 8);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v64 = v74;
    uint64_t v65 = (uint64_t)v75;
    *uint64_t v75 = KeyPath;
    *(unsigned char *)(v65 + 8) = 0;
    sub_228AD2604(v59, v65 + *(int *)(v64 + 20), type metadata accessor for MapPitchToggleConfig);
    uint64_t v66 = v65 + *(int *)(v64 + 24);
    *(void *)uint64_t v66 = v61;
    *(unsigned char *)(v66 + 8) = v62;
    uint64_t v67 = v73;
    sub_228ACD684(v65, v73, type metadata accessor for _MapPitchToggle);
    *(_WORD *)(v67 + *(int *)(v90 + 36)) = 257;
    sub_228ACD85C(v65, type metadata accessor for _MapPitchToggle);
    uint64_t v56 = &qword_268291B38;
    uint64_t v58 = v76;
    sub_228ACD8BC(v67, v76, &qword_268291B38);
    sub_228AD2708(v58, v89, &qword_268291B38);
  }
  swift_storeEnumTagMultiPayload();
  sub_228ACD6EC();
  sub_228ACD7C4();
  sub_228BACCC8();
  sub_228AC1A50(v58, v56);
  sub_228ACD85C(v41, (uint64_t (*)(void))type metadata accessor for MapControlsConfig);
  return sub_228ACD85C(v39, type metadata accessor for MapPitchToggleConfig);
}

uint64_t sub_228ACBE78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228ACFBF4(&qword_268291BC8);

  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_228ACBEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228ACFBF4(&qword_268291BC8);

  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

uint64_t sub_228ACBF78()
{
  return sub_228BAD058();
}

void sub_228ACBF94()
{
}

id sub_228ACBFD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_228BAC588();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_228BAC9C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for _MapPitchToggle(0);
  uint64_t v11 = v0 + *(int *)(v10 + 24);
  if (*(unsigned char *)(v11 + 8)) {
    goto LABEL_10;
  }
  uint64_t v27 = v6;
  uint64_t v28 = v3;
  uint64_t v12 = *(void *)v11;
  uint64_t v13 = *(void *)v0;
  char v14 = *(unsigned char *)(v0 + 8);
  sub_228ACF3A4(*(void *)v0, v14);
  uint64_t v15 = sub_228ACFC38(v13, v14);
  sub_228AD26A8(v13, v14);
  if (!*(void *)(v15 + 16) || (unint64_t v16 = sub_228AD183C(v12), (v17 & 1) == 0))
  {
    uint64_t v29 = 0;
    char v30 = 1;
    swift_bridgeObjectRelease();
    uint64_t v6 = v27;
    goto LABEL_8;
  }
  sub_228AD2234(*(void *)(v15 + 56) + 8 * v16, (uint64_t)&v29);
  char v30 = 0;
  swift_bridgeObjectRelease();
  uint64_t v6 = v27;
  if (v30)
  {
LABEL_8:
    sub_228AC1A50((uint64_t)&v29, &qword_268291BD0);
LABEL_9:
    uint64_t v3 = v28;
LABEL_10:
    id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F109D8]), sel_init);
    goto LABEL_11;
  }
  sub_228AD2184((uint64_t)&v29, (uint64_t)v31);
  uint64_t v18 = MEMORY[0x22A6A7CA0](v31);
  if (!v18)
  {
    sub_228AD21E0((uint64_t)v31);
    goto LABEL_9;
  }
  unint64_t v19 = (void *)v18;
  id v20 = objc_msgSend(self, sel_pitchButtonWithMapView_, v18);

  sub_228AD21E0((uint64_t)v31);
  uint64_t v3 = v28;
LABEL_11:
  uint64_t v21 = v1 + *(int *)(v10 + 20);
  objc_msgSend(v20, sel_setVisibility_, qword_228BAFCE0[*(char *)(v21 + 1)]);
  uint64_t v22 = type metadata accessor for MapPitchToggleConfig(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v21 + *(int *)(v22 + 24), v6);
  objc_msgSend(v20, sel__setBackgroundStyle_, sub_228BA6EB4(v9, 0));
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v21 + *(int *)(v22 + 28), v2);
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  uint64_t v24 = 1;
  if (v23 != *MEMORY[0x263F18550] && v23 != *MEMORY[0x263F18560] && v23 != *MEMORY[0x263F18568])
  {
    if (v23 == *MEMORY[0x263F18558])
    {
      uint64_t v24 = 2;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 8))(v5, v2, 1);
      uint64_t v24 = 1;
    }
  }
  objc_msgSend(v20, sel__setControlSize_, v24);
  return v20;
}

id sub_228ACC38C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_228BAC588();
  uint64_t v30 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_228BAC9C8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for _MapPitchToggle(0);
  uint64_t v12 = v1 + *(int *)(v11 + 24);
  if (*(unsigned char *)(v12 + 8)) {
    goto LABEL_8;
  }
  uint64_t v28 = *(void *)v12;
  uint64_t v29 = a1;
  uint64_t v13 = *(void *)v1;
  char v14 = *(unsigned char *)(v1 + 8);
  sub_228ACF3A4(*(void *)v1, v14);
  uint64_t v15 = sub_228ACFC38(v13, v14);
  sub_228AD26A8(v13, v14);
  if (*(void *)(v15 + 16) && (unint64_t v16 = sub_228AD183C(v28), (v17 & 1) != 0))
  {
    sub_228AD2234(*(void *)(v15 + 56) + 8 * v16, (uint64_t)&v31);
    char v32 = 0;
    swift_bridgeObjectRelease();
    a1 = v29;
    if ((v32 & 1) == 0)
    {
      sub_228AD2184((uint64_t)&v31, (uint64_t)v33);
      uint64_t v18 = (void *)MEMORY[0x22A6A7CA0](v33);
      objc_msgSend(a1, sel_setMapView_, v18);

      sub_228AD21E0((uint64_t)v33);
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v31 = 0;
    char v32 = 1;
    swift_bridgeObjectRelease();
    a1 = v29;
  }
  sub_228AC1A50((uint64_t)&v31, &qword_268291BD0);
LABEL_8:
  uint64_t v19 = v2 + *(int *)(v11 + 20);
  objc_msgSend(a1, sel_setVisibility_, qword_228BAFCE0[*(char *)(v19 + 1)]);
  uint64_t v20 = type metadata accessor for MapPitchToggleConfig(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v19 + *(int *)(v20 + 24), v7);
  objc_msgSend(a1, sel__setBackgroundStyle_, sub_228BA6EB4(v10, 0));
  uint64_t v21 = v19 + *(int *)(v20 + 28);
  uint64_t v22 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v6, v21, v4);
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v6, v4);
  if (v23 == *MEMORY[0x263F18550] || v23 == *MEMORY[0x263F18560] || v23 == *MEMORY[0x263F18568]) {
    goto LABEL_18;
  }
  if (v23 != *MEMORY[0x263F18558])
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
LABEL_18:
    uint64_t v26 = 1;
    return objc_msgSend(a1, sel__setControlSize_, v26);
  }
  uint64_t v26 = 2;
  return objc_msgSend(a1, sel__setControlSize_, v26);
}

uint64_t sub_228ACC708()
{
  return sub_228BACC18();
}

uint64_t sub_228ACC74C()
{
  return sub_228BACA98();
}

uint64_t sub_228ACC770()
{
  return sub_228BACA98();
}

uint64_t type metadata accessor for MapPitchToggle(uint64_t a1)
{
  return sub_228AC29CC(a1, (uint64_t *)&unk_268291B88);
}

uint64_t sub_228ACC7B4()
{
  return sub_228BACA18();
}

uint64_t sub_228ACC7D8()
{
  return sub_228BACA18();
}

uint64_t sub_228ACC7FC(uint64_t a1)
{
  uint64_t v2 = sub_228BAC588();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return MEMORY[0x22A6A6180](v4);
}

uint64_t sub_228ACC8C8@<X0>(unsigned char *a1@<X8>)
{
  sub_228AD27C0();
  uint64_t result = sub_228BACB08();
  *a1 = v3;
  return result;
}

uint64_t sub_228ACC918()
{
  return sub_228BACB18();
}

uint64_t sub_228ACC964@<X0>(unsigned char *a1@<X8>)
{
  sub_228AD276C();
  uint64_t result = sub_228BACB08();
  *a1 = v3;
  return result;
}

uint64_t sub_228ACC9B4()
{
  return sub_228BACB18();
}

uint64_t sub_228ACCA00@<X0>(void *a1@<X8>)
{
  sub_228AD26B4();
  uint64_t result = sub_228BACB08();
  *a1 = v3;
  return result;
}

uint64_t sub_228ACCA50()
{
  return sub_228BACB18();
}

uint64_t sub_228ACCAB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_228BAC9D8();
  *a1 = result;
  return result;
}

uint64_t sub_228ACCADC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_228BAC9D8();
  *a1 = result;
  return result;
}

uint64_t sub_228ACCB08()
{
  uint64_t v0 = swift_retain();
  return MEMORY[0x22A6A6140](v0);
}

uint64_t sub_228ACCB34()
{
  uint64_t v0 = swift_retain();
  return MEMORY[0x22A6A6140](v0);
}

uint64_t sub_228ACCB60@<X0>(unsigned char *a1@<X8>)
{
  sub_228AD27C0();
  uint64_t result = sub_228BACB08();
  *a1 = v3;
  return result;
}

uint64_t sub_228ACCBB0()
{
  return sub_228BACB18();
}

uint64_t sub_228ACCBFC@<X0>(unsigned char *a1@<X8>)
{
  sub_228AD276C();
  uint64_t result = sub_228BACB08();
  *a1 = v3;
  return result;
}

uint64_t sub_228ACCC4C()
{
  return sub_228BACB18();
}

uint64_t type metadata accessor for _MapPitchToggle(uint64_t a1)
{
  return sub_228AC29CC(a1, (uint64_t *)&unk_268291BB8);
}

uint64_t type metadata accessor for MapPitchToggleConfig(uint64_t a1)
{
  return sub_228AC29CC(a1, (uint64_t *)&unk_268291BA8);
}

uint64_t sub_228ACCCD8@<X0>(uint64_t a1@<X8>)
{
  return sub_228ACCD4C((uint64_t *)&unk_268293840, MEMORY[0x263F19168], 0xD000000000000011, 0x8000000228BC5AD0, a1);
}

uint64_t sub_228ACCD10@<X0>(uint64_t a1@<X8>)
{
  return sub_228ACCD4C((uint64_t *)&unk_268293270, MEMORY[0x263F18570], 0x536C6F72746E6F43, 0xEB00000000657A69, a1);
}

uint64_t sub_228ACCD4C@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_228BACAF8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  char v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x270FA5388](v15);
  char v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_228AD2708(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_228BAD678();
    uint64_t v21 = sub_228BACF78();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v26 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v27 = a5;
      int v23 = (uint8_t *)v22;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v30 = v24;
      *(_DWORD *)int v23 = 136315138;
      uint64_t v29 = sub_228AD11A0(v28, v26, &v30);
      sub_228BAD738();
      _os_log_impl(&dword_228ABB000, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22A6A7BE0](v24, -1, -1);
      MEMORY[0x22A6A7BE0](v23, -1, -1);
    }

    sub_228BACAE8();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_228ACD004(uint64_t a1, char a2)
{
  uint64_t v4 = sub_228BACAF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v8 = sub_228BAD678();
    uint64_t v9 = sub_228BACF78();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v14 = sub_228AD11A0(0x6C616E6F6974704FLL, 0xEF3E726F6C6F433CLL, &v15);
      sub_228BAD738();
      _os_log_impl(&dword_228ABB000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22A6A7BE0](v12, -1, -1);
      MEMORY[0x22A6A7BE0](v11, -1, -1);
    }

    sub_228BACAE8();
    swift_getAtKeyPath();
    j__swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_228ACD218(uint64_t a1, char a2)
{
  uint64_t v4 = sub_228BACAF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_228BAD678();
  uint64_t v9 = sub_228BACF78();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v15 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v14 = sub_228AD11A0(1819242306, 0xE400000000000000, &v15);
    sub_228BAD738();
    _os_log_impl(&dword_228ABB000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22A6A7BE0](v12, -1, -1);
    MEMORY[0x22A6A7BE0](v11, -1, -1);
  }

  sub_228BACAE8();
  swift_getAtKeyPath();
  sub_228AD25F8(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_228ACD41C(uint64_t a1, char a2)
{
  uint64_t v4 = sub_228BACAF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain();
    os_log_type_t v8 = sub_228BAD678();
    uint64_t v9 = sub_228BACF78();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v14 = sub_228AD11A0(0xD000000000000014, 0x8000000228BC5AF0, &v15);
      sub_228BAD738();
      _os_log_impl(&dword_228ABB000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22A6A7BE0](v12, -1, -1);
      MEMORY[0x22A6A7BE0](v11, -1, -1);
    }

    sub_228BACAE8();
    swift_getAtKeyPath();
    sub_228AD25F8(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_228ACD630@<X0>(void *a1@<X8>)
{
  sub_228AD26B4();
  uint64_t result = sub_228BACB08();
  *a1 = v3;
  return result;
}

uint64_t sub_228ACD684(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_228ACD6EC()
{
  unint64_t result = qword_268291B58;
  if (!qword_268291B58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268291B50);
    sub_228ACD768();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291B58);
  }
  return result;
}

unint64_t sub_228ACD768()
{
  unint64_t result = qword_268291B60;
  if (!qword_268291B60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268291B48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291B60);
  }
  return result;
}

unint64_t sub_228ACD7C4()
{
  unint64_t result = qword_268291B68;
  if (!qword_268291B68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268291B38);
    sub_228ACFBF4(&qword_268291B70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291B68);
  }
  return result;
}

uint64_t sub_228ACD85C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_228ACD8BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_228ACD920()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for MapPitchToggle(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293840);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_228BAC9C8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    os_log_type_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293270);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_228BAC588();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *os_log_type_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *(void *)v15;
    char v17 = v15[8];
    j__swift_retain();
    *(void *)uint64_t v14 = v16;
    v14[8] = v17;
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)a1 + v18;
    os_log_type_t v20 = (char *)a2 + v18;
    uint64_t v21 = *(void *)v20;
    char v22 = v20[8];
    sub_228AD266C(*(void *)v20, v22);
    *(void *)uint64_t v19 = v21;
    v19[8] = v22;
    uint64_t v23 = a3[8];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = *(void *)v25;
    char v27 = v25[8];
    sub_228AD266C(*(void *)v25, v27);
    *(void *)uint64_t v24 = v26;
    v24[8] = v27;
    uint64_t v28 = a3[9];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    *(void *)uint64_t v29 = *(void *)v30;
    v29[8] = v30[8];
  }
  return a1;
}

uint64_t destroy for MapPitchToggle(uint64_t a1, int *a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293840);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_228BAC9C8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293270);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_228BAC588();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  j__swift_release();
  sub_228AD25F8(*(void *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  uint64_t v7 = a1 + a2[8];
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);

  return sub_228AD25F8(v8, v9);
}

void *initializeWithCopy for MapPitchToggle(void *a1, void *a2, int *a3)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293840);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_228BAC9C8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  char v9 = (void *)((char *)a2 + v7);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293270);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_228BAC588();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    void *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  j__swift_retain();
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  uint64_t v16 = a3[7];
  char v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)v18;
  char v20 = v18[8];
  sub_228AD266C(*(void *)v18, v20);
  *(void *)char v17 = v19;
  v17[8] = v20;
  uint64_t v21 = a3[8];
  char v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)v23;
  char v25 = v23[8];
  sub_228AD266C(*(void *)v23, v25);
  *(void *)char v22 = v24;
  v22[8] = v25;
  uint64_t v26 = a3[9];
  char v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  *(void *)char v27 = *(void *)v28;
  v27[8] = v28[8];
  return a1;
}

void *assignWithCopy for MapPitchToggle(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_228AC1A50((uint64_t)a1, (uint64_t *)&unk_268293840);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293840);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_228BAC9C8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    char v9 = (void *)((char *)a2 + v7);
    sub_228AC1A50((uint64_t)a1 + v7, (uint64_t *)&unk_268293270);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293270);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_228BAC588();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  j__swift_retain();
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  j__swift_release();
  uint64_t v16 = a3[7];
  char v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)v18;
  char v20 = v18[8];
  sub_228AD266C(*(void *)v18, v20);
  uint64_t v21 = *(void *)v17;
  char v22 = v17[8];
  *(void *)char v17 = v19;
  v17[8] = v20;
  sub_228AD25F8(v21, v22);
  uint64_t v23 = a3[8];
  uint64_t v24 = (char *)a1 + v23;
  char v25 = (char *)a2 + v23;
  uint64_t v26 = *(void *)v25;
  char v27 = v25[8];
  sub_228AD266C(*(void *)v25, v27);
  uint64_t v28 = *(void *)v24;
  char v29 = v24[8];
  *(void *)uint64_t v24 = v26;
  v24[8] = v27;
  sub_228AD25F8(v28, v29);
  uint64_t v30 = a3[9];
  uint64_t v31 = (char *)a1 + v30;
  char v32 = (char *)a2 + v30;
  uint64_t v33 = *(void *)v32;
  unsigned char v31[8] = v32[8];
  *(void *)uint64_t v31 = v33;
  return a1;
}

char *initializeWithTake for MapPitchToggle(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293840);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_228BAC9C8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  char v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293270);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_228BAC588();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  char v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(void *)char v15 = *(void *)v16;
  v15[8] = v16[8];
  char v17 = &a1[v14];
  uint64_t v18 = &a2[v14];
  *(void *)char v17 = *(void *)v18;
  v17[8] = v18[8];
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = &a1[v19];
  char v22 = &a2[v19];
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  uint64_t v23 = &a1[v20];
  uint64_t v24 = &a2[v20];
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  return a1;
}

char *assignWithTake for MapPitchToggle(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_228AC1A50((uint64_t)a1, (uint64_t *)&unk_268293840);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293840);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_228BAC9C8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    char v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_228AC1A50((uint64_t)&a1[v8], (uint64_t *)&unk_268293270);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293270);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_228BAC588();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  char v15 = &a2[v13];
  uint64_t v16 = *(void *)v15;
  LOBYTE(v15) = v15[8];
  *(void *)uint64_t v14 = v16;
  v14[8] = (char)v15;
  j__swift_release();
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = *(void *)v19;
  LOBYTE(v19) = v19[8];
  uint64_t v21 = *(void *)v18;
  char v22 = v18[8];
  *(void *)uint64_t v18 = v20;
  v18[8] = (char)v19;
  sub_228AD25F8(v21, v22);
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v23];
  char v25 = &a2[v23];
  uint64_t v26 = *(void *)v25;
  LOBYTE(v25) = v25[8];
  uint64_t v27 = *(void *)v24;
  char v28 = v24[8];
  *(void *)uint64_t v24 = v26;
  v24[8] = (char)v25;
  sub_228AD25F8(v27, v28);
  uint64_t v29 = a3[9];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v31[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for MapPitchToggle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_228ACE510);
}

uint64_t sub_228ACE510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291B78);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291B80);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 8);
      if (v14 > 1) {
        return (v14 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for MapPitchToggle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_228ACE640);
}

uint64_t sub_228ACE640(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291B78);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_268291B80);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24) + 8) = -(char)a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_228ACE75C()
{
  sub_228ACE874(319, (unint64_t *)&unk_268293240, MEMORY[0x263F19168]);
  if (v0 <= 0x3F)
  {
    sub_228ACE874(319, (unint64_t *)&qword_268293800, MEMORY[0x263F18570]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_228ACE874(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_228BAC598();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_228ACE8CC()
{
  unint64_t result = qword_268291B98;
  if (!qword_268291B98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268291BA0);
    sub_228ACD6EC();
    sub_228ACD7C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291B98);
  }
  return result;
}

uint64_t *sub_228ACE948(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v7 = a3[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_228BAC9C8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_228BAC588();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  }
  swift_retain();
  return v4;
}

uint64_t sub_228ACEA78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_228BAC9C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = sub_228BAC588();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_release();
}

_WORD *sub_228ACEB3C(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_228BAC9C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_228BAC588();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_retain();
  return a1;
}

unsigned char *sub_228ACEC20(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_228BAC9C8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_228BAC588();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_retain();
  swift_release();
  return a1;
}

_WORD *sub_228ACED18(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_228BAC9C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_228BAC588();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

unsigned char *sub_228ACEDF8(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_228BAC9C8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_228BAC588();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_release();
  return a1;
}

uint64_t sub_228ACEEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_228ACEEFC);
}

uint64_t sub_228ACEEFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_228BAC9C8();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[6];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_228BAC588();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[8]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  int v14 = v13 - 1;
  if (v14 < 0) {
    int v14 = -1;
  }
  return (v14 + 1);
}

uint64_t sub_228ACF018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_228ACF02C);
}

uint64_t sub_228ACF02C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_228BAC9C8();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
  }
  else
  {
    uint64_t result = sub_228BAC588();
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[8]) = a2;
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[7];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

uint64_t sub_228ACF138()
{
  uint64_t result = sub_228BAC9C8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_228BAC588();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_228ACF21C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v24 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_228ACF3A4(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = a2 + v9;
    *(_WORD *)(a1 + v9) = *(_WORD *)(a2 + v9);
    uint64_t v12 = (int *)type metadata accessor for MapPitchToggleConfig(0);
    uint64_t v13 = v12[6];
    uint64_t v14 = v10 + v13;
    uint64_t v15 = v11 + v13;
    uint64_t v16 = sub_228BAC9C8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = v12[7];
    uint64_t v18 = v10 + v17;
    uint64_t v19 = v11 + v17;
    uint64_t v20 = sub_228BAC588();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    *(void *)(v10 + v12[8]) = *(void *)(v11 + v12[8]);
    uint64_t v21 = *(int *)(a3 + 24);
    uint64_t v22 = a1 + v21;
    uint64_t v23 = a2 + v21;
    *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
    *(void *)uint64_t v22 = *(void *)v23;
  }
  swift_retain();
  return a1;
}

uint64_t sub_228ACF3A4(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_228ACF3B0(uint64_t a1, uint64_t a2)
{
  sub_228AD26A8(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for MapPitchToggleConfig(0);
  uint64_t v6 = v4 + *(int *)(v5 + 24);
  uint64_t v7 = sub_228BAC9C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v4 + *(int *)(v5 + 28);
  uint64_t v9 = sub_228BAC588();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return swift_release();
}

uint64_t sub_228ACF494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_228ACF3A4(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_WORD *)(a1 + v8) = *(_WORD *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for MapPitchToggleConfig(0);
  uint64_t v12 = v11[6];
  uint64_t v13 = v9 + v12;
  uint64_t v14 = v10 + v12;
  uint64_t v15 = sub_228BAC9C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = v11[7];
  uint64_t v17 = v9 + v16;
  uint64_t v18 = v10 + v16;
  uint64_t v19 = sub_228BAC588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  *(void *)(v9 + v11[8]) = *(void *)(v10 + v11[8]);
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  *(void *)uint64_t v21 = *(void *)v22;
  swift_retain();
  return a1;
}

uint64_t sub_228ACF5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_228ACF3A4(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_228AD26A8(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (unsigned char *)(a1 + v10);
  uint64_t v12 = a2 + v10;
  unsigned char *v11 = *(unsigned char *)(a2 + v10);
  v11[1] = *(unsigned char *)(a2 + v10 + 1);
  uint64_t v13 = (int *)type metadata accessor for MapPitchToggleConfig(0);
  uint64_t v14 = v13[6];
  uint64_t v15 = &v11[v14];
  uint64_t v16 = v12 + v14;
  uint64_t v17 = sub_228BAC9C8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  uint64_t v18 = v13[7];
  uint64_t v19 = &v11[v18];
  uint64_t v20 = v12 + v18;
  uint64_t v21 = sub_228BAC588();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  *(void *)&v11[v13[8]] = *(void *)(v12 + v13[8]);
  swift_retain();
  swift_release();
  uint64_t v22 = *(int *)(a3 + 24);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *v24;
  *(unsigned char *)(v23 + 8) = *((unsigned char *)v24 + 8);
  *(void *)uint64_t v23 = v25;
  return a1;
}

uint64_t sub_228ACF72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_WORD *)(a1 + v6) = *(_WORD *)(a2 + v6);
  char v9 = (int *)type metadata accessor for MapPitchToggleConfig(0);
  uint64_t v10 = v9[6];
  uint64_t v11 = v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = sub_228BAC9C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[7];
  uint64_t v15 = v7 + v14;
  uint64_t v16 = v8 + v14;
  uint64_t v17 = sub_228BAC588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  *(void *)(v7 + v9[8]) = *(void *)(v8 + v9[8]);
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  *(void *)uint64_t v19 = *(void *)v20;
  return a1;
}

uint64_t sub_228ACF858(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_228AD26A8(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (unsigned char *)(a1 + v10);
  uint64_t v12 = (uint64_t)a2 + v10;
  unsigned char *v11 = *((unsigned char *)a2 + v10);
  v11[1] = *((unsigned char *)a2 + v10 + 1);
  uint64_t v13 = (int *)type metadata accessor for MapPitchToggleConfig(0);
  uint64_t v14 = v13[6];
  uint64_t v15 = &v11[v14];
  uint64_t v16 = v12 + v14;
  uint64_t v17 = sub_228BAC9C8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  uint64_t v18 = v13[7];
  uint64_t v19 = &v11[v18];
  uint64_t v20 = v12 + v18;
  uint64_t v21 = sub_228BAC588();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  *(void *)&v11[v13[8]] = *(void *)(v12 + v13[8]);
  swift_release();
  uint64_t v22 = *(int *)(a3 + 24);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t)a2 + v22;
  *(void *)uint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  return a1;
}

uint64_t sub_228ACF9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_228ACF9B4);
}

uint64_t sub_228ACF9B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for MapPitchToggleConfig(0);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_228ACFA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_228ACFA70);
}

uint64_t sub_228ACFA70(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for MapPitchToggleConfig(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_228ACFB14()
{
  uint64_t result = type metadata accessor for MapPitchToggleConfig(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_228ACFBB4()
{
  return sub_228ACFBF4(&qword_268291B70);
}

uint64_t sub_228ACFBE8()
{
  return MEMORY[0x263F1BB58];
}

uint64_t sub_228ACFBF4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for _MapPitchToggle(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_228ACFC38(uint64_t a1, char a2)
{
  uint64_t v4 = sub_228BACAF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    os_log_type_t v8 = sub_228BAD678();
    uint64_t v9 = sub_228BACF78();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v14 = sub_228AD11A0(0xD000000000000010, 0x8000000228BC5770, &v15);
      sub_228BAD738();
      _os_log_impl(&dword_228ABB000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22A6A7BE0](v12, -1, -1);
      MEMORY[0x22A6A7BE0](v11, -1, -1);
    }

    sub_228BACAE8();
    swift_getAtKeyPath();
    sub_228AD26A8(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_228ACFE4C@<X0>(uint64_t a1@<X8>)
{
  return sub_228ACCD4C(&qword_268291BE0, MEMORY[0x263F19798], 0xD000000000000012, 0x8000000228BC59D0, a1);
}

uint64_t sub_228ACFE84@<X0>(uint64_t a1@<X8>)
{
  return sub_228ACCD4C(&qword_2682925C0, MEMORY[0x263F18DD8], 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

uint64_t sub_228ACFEC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_228BACAF8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)v1;
  if (*(unsigned char *)(v1 + 81) == 1)
  {
    char v8 = *(unsigned char *)(v1 + 80);
    uint64_t v9 = *(void *)(v1 + 72);
    char v10 = *(_DWORD *)(v1 + 48);
    uint64_t v12 = *(void *)(v1 + 32);
    uint64_t v11 = *(void *)(v1 + 40);
    uint64_t v13 = *(void *)(v1 + 24);
    *(void *)a1 = v7;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
    *(void *)(a1 + 24) = v13;
    *(_WORD *)(a1 + 32) = v12;
    *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v11;
    *(unsigned char *)(a1 + 48) = v10 & 1;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(v1 + 56);
    *(void *)(a1 + 72) = v9;
    *(unsigned char *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v8;
    return sub_228AD244C(v1, (void (*)(void, void, void, void, void, void, void, void, void, void, _WORD))sub_228AD2340);
  }
  else
  {
    sub_228AD244C(v1, (void (*)(void, void, void, void, void, void, void, void, void, void, _WORD))sub_228AD2340);
    os_log_type_t v15 = sub_228BAD678();
    uint64_t v16 = sub_228BACF78();
    os_log_type_t v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      v21[1] = v7;
      uint64_t v20 = v19;
      uint64_t v22 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      v21[0] = v18 + 4;
      void v21[2] = sub_228AD11A0(0x656C79745370614DLL, 0xE800000000000000, &v22);
      sub_228BAD738();
      _os_log_impl(&dword_228ABB000, v16, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22A6A7BE0](v20, -1, -1);
      MEMORY[0x22A6A7BE0](v18, -1, -1);
    }

    sub_228BACAE8();
    swift_getAtKeyPath();
    sub_228AD244C(v1, (void (*)(void, void, void, void, void, void, void, void, void, void, _WORD))sub_228AD24B0);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

double sub_228AD0160(uint64_t a1, char a2)
{
  uint64_t v4 = sub_228BACAF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v8 = sub_228BAD678();
  uint64_t v9 = sub_228BACF78();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    double v15 = *(double *)&v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v14 = sub_228AD11A0(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v15);
    sub_228BAD738();
    _os_log_impl(&dword_228ABB000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22A6A7BE0](v12, -1, -1);
    MEMORY[0x22A6A7BE0](v11, -1, -1);
  }

  sub_228BACAE8();
  swift_getAtKeyPath();
  sub_228AD25F8(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_228AD036C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = sub_228BACAF8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    sub_228AD2860(a1);
  }
  else
  {
    swift_retain();
    os_log_type_t v12 = sub_228BAD678();
    uint64_t v13 = sub_228BACF78();
    os_log_type_t v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      double v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v21 = v19;
      *(_DWORD *)double v15 = 136315138;
      uint64_t v18 = v15 + 4;
      uint64_t v20 = sub_228AD11A0(0xD000000000000028, 0x8000000228BC5B10, &v21);
      sub_228BAD738();
      _os_log_impl(&dword_228ABB000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      uint64_t v16 = v19;
      swift_arrayDestroy();
      MEMORY[0x22A6A7BE0](v16, -1, -1);
      MEMORY[0x22A6A7BE0](v15, -1, -1);
    }

    sub_228BACAE8();
    swift_getAtKeyPath();
    sub_228AD2814(a1, a2, a3, 0);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v21;
  }
  return a1;
}

uint64_t sub_228AD05AC(unint64_t a1, char a2)
{
  uint64_t v4 = sub_228BACAF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    unint64_t v14 = a1 >> 8;
    unsigned int v13 = a1 & 1;
  }
  else
  {
    swift_retain();
    os_log_type_t v8 = sub_228BAD678();
    uint64_t v9 = sub_228BACF78();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v17 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v16 = sub_228AD11A0(0x697274744170614DLL, 0xEE006E6F69747562, &v17);
      sub_228BAD738();
      _os_log_impl(&dword_228ABB000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22A6A7BE0](v12, -1, -1);
      MEMORY[0x22A6A7BE0](v11, -1, -1);
    }

    sub_228BACAE8();
    swift_getAtKeyPath();
    sub_228AD25F8(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    unsigned int v13 = v17;
    LODWORD(v14) = BYTE1(v17);
  }
  return v13 | (v14 << 8);
}

uint64_t sub_228AD07D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_228BACAF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293850);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_228AD2708(v2, (uint64_t)v10, (uint64_t *)&unk_268293850);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_228AD2604((uint64_t)v10, a1, (uint64_t (*)(void))type metadata accessor for MapControlsConfig);
  }
  os_log_type_t v12 = sub_228BAD678();
  unsigned int v13 = sub_228BACF78();
  os_log_type_t v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    double v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v18[1] = a1;
    uint64_t v17 = v16;
    uint64_t v19 = v16;
    *(_DWORD *)double v15 = 136315138;
    v18[2] = sub_228AD11A0(0xD000000000000011, 0x8000000228BC59F0, &v19);
    sub_228BAD738();
    _os_log_impl(&dword_228ABB000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22A6A7BE0](v17, -1, -1);
    MEMORY[0x22A6A7BE0](v15, -1, -1);
  }

  sub_228BACAE8();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_228AD0A6C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_228AD0AF4(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_228AD28A4, 0xD00000000000001ELL, 0x8000000228BC5A70, (uint64_t (*)(void))sub_228AD28A0);
}

uint64_t sub_228AD0AB0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_228AD0AF4(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_228AD2688, 0xD000000000000024, 0x8000000228BC5A40, (uint64_t (*)(void))sub_228AD2678);
}

uint64_t sub_228AD0AF4(uint64_t a1, uint64_t a2, char a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, unint64_t a6, uint64_t (*a7)(void))
{
  uint64_t v14 = sub_228BACAF8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    a4(a1, a2);
  }
  else
  {
    uint64_t v29 = a5;
    swift_retain();
    os_log_type_t v18 = sub_228BAD678();
    uint64_t v19 = sub_228BACF78();
    if (os_log_type_enabled(v19, v18))
    {
      uint64_t v20 = swift_slowAlloc();
      unint64_t v27 = a6;
      uint64_t v21 = (uint8_t *)v20;
      uint64_t v22 = swift_slowAlloc();
      char v28 = a7;
      uint64_t v23 = v22;
      uint64_t v31 = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      v26[1] = v21 + 4;
      uint64_t v30 = sub_228AD11A0(v29, v27, &v31);
      sub_228BAD738();
      _os_log_impl(&dword_228ABB000, v19, v18, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v21, 0xCu);
      swift_arrayDestroy();
      uint64_t v24 = v23;
      a7 = v28;
      MEMORY[0x22A6A7BE0](v24, -1, -1);
      MEMORY[0x22A6A7BE0](v21, -1, -1);
    }

    sub_228BACAE8();
    swift_getAtKeyPath();
    sub_228AD2698(a1, a2, 0, a7);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return v31;
  }
  return a1;
}

uint64_t sub_228AD0D38@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = sub_228BACAF8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6);
  os_log_type_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *a3 = a1;
  }
  else
  {
    sub_228AD266C(a1, 0);
    os_log_type_t v11 = sub_228BAD678();
    os_log_type_t v12 = sub_228BACF78();
    os_log_type_t v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v17[1] = a3;
      uint64_t v16 = v15;
      uint64_t v18 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      v17[2] = sub_228AD11A0(0xD00000000000002ELL, 0x8000000228BC5A10, &v18);
      sub_228BAD738();
      _os_log_impl(&dword_228ABB000, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22A6A7BE0](v16, -1, -1);
      MEMORY[0x22A6A7BE0](v14, -1, -1);
    }

    sub_228BACAE8();
    swift_getAtKeyPath();
    sub_228AD25F8(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

uint64_t sub_228AD0F54(uint64_t a1, char a2)
{
  uint64_t v4 = sub_228BACAF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    os_log_type_t v8 = sub_228BAD678();
    uint64_t v9 = sub_228BACF78();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)os_log_type_t v11 = 136315138;
      uint64_t v14 = sub_228AD11A0(0xD00000000000001FLL, 0x8000000228BC5A90, &v15);
      sub_228BAD738();
      _os_log_impl(&dword_228ABB000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22A6A7BE0](v12, -1, -1);
      MEMORY[0x22A6A7BE0](v11, -1, -1);
    }

    sub_228BACAE8();
    swift_getAtKeyPath();
    sub_228AD26A8(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_228AD1168@<X0>(uint64_t a1@<X8>)
{
  return sub_228ACCD4C(&qword_268291BE8, MEMORY[0x263F18FD8], 0xD000000000000010, 0x8000000228BC5AB0, a1);
}

uint64_t sub_228AD11A0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_228AD1274(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_228AD22E0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_228AD22E0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_228AD1274(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_228BAD748();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_228AD1430(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_228BAD868();
  if (!v8)
  {
    sub_228BAD928();
    __break(1u);
LABEL_17:
    uint64_t result = sub_228BAD998();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_228AD1430(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_228AD14C8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_228AD16A8(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_228AD16A8(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_228AD14C8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_228AD1640(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_228BAD818();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_228BAD928();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_228BAD448();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_228BAD998();
    __break(1u);
LABEL_14:
    uint64_t result = sub_228BAD928();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_228AD1640(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268291BD8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_228AD16A8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268291BD8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  os_log_type_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_228BAD998();
  __break(1u);
  return result;
}

unint64_t sub_228AD17F8(uint64_t a1)
{
  uint64_t v2 = sub_228BADA38();

  return sub_228AD1B7C(a1, v2);
}

unint64_t sub_228AD183C(uint64_t a1)
{
  sub_228BADA48();
  sub_228BAD2C8();
  uint64_t v2 = sub_228BADA88();

  return sub_228AD1C18(a1, v2);
}

unint64_t sub_228AD18A8(uint64_t a1)
{
  sub_228BADA48();
  sub_228BADA58();
  uint64_t v2 = sub_228BADA88();

  return sub_228AD1CEC(a1, v2);
}

unint64_t sub_228AD1914(uint64_t a1)
{
  uint64_t v2 = sub_228BAD6E8();
  return sub_228AD1E8C(a1, v2, &qword_268292670);
}

unint64_t sub_228AD1964(uint64_t a1)
{
  sub_228BADA48();
  swift_bridgeObjectRetain();
  sub_228B7878C((uint64_t)v4, a1);
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_228BADA88();

  return sub_228AD1D88(a1, v2);
}

unint64_t sub_228AD19E0(uint64_t a1)
{
  uint64_t v2 = sub_228BAD6E8();
  return sub_228AD1E8C(a1, v2, (unint64_t *)&qword_2682926B0);
}

unint64_t sub_228AD1A30(uint64_t a1)
{
  uint64_t v2 = sub_228BAD6E8();
  return sub_228AD1E8C(a1, v2, &qword_2682926D0);
}

unint64_t sub_228AD1A80(uint64_t a1)
{
  uint64_t v2 = sub_228BAD6E8();
  return sub_228AD1FA0(a1, v2, (void (*)(void))type metadata accessor for MapBridgingUserAnnotation);
}

unint64_t sub_228AD1AD4(uint64_t a1)
{
  uint64_t v2 = sub_228BAD6E8();
  return sub_228AD1FA0(a1, v2, (void (*)(void))type metadata accessor for MapBridgingMarker);
}

unint64_t sub_228AD1B28(uint64_t a1)
{
  uint64_t v2 = sub_228BAD6E8();
  return sub_228AD1FA0(a1, v2, (void (*)(void))type metadata accessor for MapBridgingCustomAnnotation);
}

unint64_t sub_228AD1B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_228AD1C18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if (((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0 && (sub_228BAD2B8() & 1) == 0)
  {
    uint64_t v6 = ~v4;
    for (unint64_t i = (i + 1) & v6; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v6)
    {
      if (sub_228BAD2B8()) {
        break;
      }
    }
  }
  return i;
}

unint64_t sub_228AD1CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_228AD1D88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v7 = swift_bridgeObjectRetain();
    char v8 = sub_228B76290(v7, a1);
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        uint64_t v10 = swift_bridgeObjectRetain();
        char v11 = sub_228B76290(v10, a1);
        swift_bridgeObjectRelease();
        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_228AD1E8C(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_228AD25BC(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_228BAD6F8();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_228BAD6F8();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_228AD1FA0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    a3(0);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_228BAD6F8();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_228BAD6F8();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

uint64_t sub_228AD20B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2 && (sub_228BAC558() & 1) != 0)
  {
    uint64_t v4 = type metadata accessor for MapPitchToggleConfig(0);
    if (sub_228BAC988() & 1) != 0 && (sub_228BAC578())
    {
      uint64_t v5 = *(int *)(v4 + 32);
      uint64_t v6 = *(void *)&a2[v5];
      if (*(void *)&a1[v5])
      {
        if (v6)
        {
          swift_retain();
          swift_retain();
          char v7 = sub_228BAD0F8();
          swift_release();
          swift_release();
          if (v7) {
            return 1;
          }
        }
      }
      else if (!v6)
      {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_228AD2184(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_228AD21E0(uint64_t a1)
{
  return a1;
}

uint64_t sub_228AD2234(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_228AD22E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_228AD2340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, char a12)
{
  if (a12)
  {
    sub_228AD23BC(a1, a2, a3);
    return sub_228AD2404(a8, a9);
  }
  else
  {
    return swift_retain();
  }
}

uint64_t sub_228AD23BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_228AD2404(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_228AD244C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, _WORD))
{
  return a1;
}

uint64_t sub_228AD24B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, char a12)
{
  if (a12)
  {
    sub_228AD252C(a1, a2, a3);
    return sub_228AD2574(a8, a9);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_228AD252C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_228AD2574(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_228AD25BC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_228AD25F8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_228AD2604(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_228AD266C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_228AD2678(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_228AD2688(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_228AD2698(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void))
{
  if (a3) {
    return a4();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_228AD26A8(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRelease();
  }
  else {
    return swift_release();
  }
}

unint64_t sub_228AD26B4()
{
  unint64_t result = qword_268291BF0;
  if (!qword_268291BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291BF0);
  }
  return result;
}

uint64_t sub_228AD2708(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_228AD276C()
{
  unint64_t result = qword_268291BF8;
  if (!qword_268291BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291BF8);
  }
  return result;
}

unint64_t sub_228AD27C0()
{
  unint64_t result = qword_268291C00;
  if (!qword_268291C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291C00);
  }
  return result;
}

uint64_t sub_228AD2814(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return sub_228AD2820(result);
  }
  else {
    return swift_release();
  }
}

uint64_t sub_228AD2820(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_228AD2860(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t MapContent.tint<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  char v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = (uint64_t *)swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a3);
  uint64_t v12 = sub_228BAC6A8();
  sub_228B822B4(KeyPath, (uint64_t)&v12, a2);
  swift_release();
  return swift_release();
}

uint64_t sub_228AD29E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_228BAC9F8();
  *a1 = result;
  return result;
}

uint64_t sub_228AD2A0C()
{
  return sub_228BACA08();
}

uint64_t sub_228AD2A38()
{
  return swift_getWitnessTable();
}

uint64_t MapContent.annotationTitles(_:)(char a1, uint64_t a2)
{
  return sub_228AD2B24(a1, a2);
}

uint64_t sub_228AD2AB8()
{
  return sub_228AD2BB4((void (*)(void))sub_228AD2DAC);
}

uint64_t sub_228AD2AD8@<X0>(unsigned char *a1@<X8>)
{
  return keypath_getTm((void (*)(void))sub_228AD2DAC, a1);
}

uint64_t sub_228AD2AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (void (*)(void))sub_228AD2DAC);
}

uint64_t MapContent.annotationSubtitles(_:)(char a1, uint64_t a2)
{
  return sub_228AD2B24(a1, a2);
}

uint64_t sub_228AD2B24(char a1, uint64_t a2)
{
  uint64_t KeyPath = (uint64_t *)swift_getKeyPath();
  char v6 = a1;
  sub_228B822B4(KeyPath, (uint64_t)&v6, a2);
  return swift_release();
}

uint64_t sub_228AD2B94()
{
  return sub_228AD2BB4((void (*)(void))sub_228AD2D58);
}

uint64_t sub_228AD2BB4(void (*a1)(void))
{
  a1();
  sub_228BACB08();
  return v2;
}

uint64_t sub_228AD2BFC@<X0>(unsigned char *a1@<X8>)
{
  return keypath_getTm((void (*)(void))sub_228AD2D58, a1);
}

uint64_t keypath_getTm@<X0>(void (*a1)(void)@<X3>, unsigned char *a2@<X8>)
{
  a1();
  uint64_t result = sub_228BACB08();
  *a2 = v4;
  return result;
}

uint64_t sub_228AD2C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (void (*)(void))sub_228AD2D58);
}

uint64_t keypath_setTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_228BACB18();
}

uint64_t sub_228AD2CE8()
{
  return swift_getWitnessTable();
}

unint64_t sub_228AD2D58()
{
  unint64_t result = qword_268291C18;
  if (!qword_268291C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291C18);
  }
  return result;
}

unint64_t sub_228AD2DAC()
{
  unint64_t result = qword_268291C20;
  if (!qword_268291C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291C20);
  }
  return result;
}

ValueMetadata *type metadata accessor for AnnotationSubtitleVisibilityEnvironmentKey()
{
  return &type metadata for AnnotationSubtitleVisibilityEnvironmentKey;
}

ValueMetadata *type metadata accessor for AnnotationTitleVisibilityEnvironmentKey()
{
  return &type metadata for AnnotationTitleVisibilityEnvironmentKey;
}

void sub_228AD2E20(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_228AD2E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_228AD2E8C();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

unint64_t sub_228AD2E8C()
{
  unint64_t result = qword_268291C28;
  if (!qword_268291C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291C28);
  }
  return result;
}

uint64_t sub_228AD2EE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2) {
    return sub_228BAC558();
  }
  else {
    return 0;
  }
}

uint64_t MapPitchSlider.init(scope:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = swift_getKeyPath();
  *(void *)a3 = KeyPath;
  *(unsigned char *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = result;
  *(unsigned char *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = a1;
  *(unsigned char *)(a3 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = a2 & 1;
  return result;
}

uint64_t MapPitchSlider.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291C30);
  MEMORY[0x270FA5388](v36);
  uint64_t v3 = &v31[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291B48);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v34 = &v31[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291B50);
  uint64_t v6 = MEMORY[0x270FA5388](v37);
  unint64_t v8 = (uint64_t *)&v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v35 = &v31[-v9];
  uint64_t v10 = type metadata accessor for MapControlsConfig();
  uint64_t v11 = (int *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  os_log_type_t v13 = &v31[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = *(void *)v1;
  char v15 = *(unsigned char *)(v1 + 8);
  uint64_t v16 = *(void *)(v1 + 16);
  char v17 = *(unsigned char *)(v1 + 24);
  uint64_t v33 = *(void *)(v1 + 32);
  int v32 = *(unsigned __int8 *)(v1 + 40);
  sub_228AD266C(v14, v15);
  sub_228AD266C(v16, v17);
  sub_228AD266C(v16, v17);
  __int16 v18 = sub_228ACD41C(v16, v17);
  sub_228AD25F8(v16, v17);
  sub_228AD25F8(v14, v15);
  sub_228AD25F8(v16, v17);
  if (v18 == 3) {
    __int16 v19 = 0;
  }
  else {
    __int16 v19 = v18;
  }
  uint64_t v20 = type metadata accessor for MapPitchToggleConfig(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v13, 1, 1, v20);
  uint64_t v21 = &v13[v11[7]];
  uint64_t v22 = type metadata accessor for MapScaleViewConfig(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  uint64_t v23 = &v13[v11[8]];
  uint64_t v24 = type metadata accessor for MapUserLocationButtonConfig(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  uint64_t v25 = &v13[v11[9]];
  uint64_t v26 = type metadata accessor for MapCompassConfig(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  *(_WORD *)&v13[v11[10]] = 2;
  *(_WORD *)&v13[v11[11]] = (v19 << 8) | 1;
  *(_WORD *)&v13[v11[12]] = 2;
  sub_228AD266C(v14, v15);
  sub_228AD266C(v16, v17);
  sub_228AD266C(v14, v15);
  LOBYTE(v25) = sub_228ACD218(v14, v15);
  sub_228AD25F8(v14, v15);
  sub_228AD25F8(v14, v15);
  sub_228AD25F8(v16, v17);
  if (v25)
  {
    uint64_t v27 = sub_228BAD108();
    char v28 = v34;
    sub_228AD35E8((uint64_t)v13, (uint64_t)v34);
    sub_228AD2708((uint64_t)v28, (uint64_t)v8 + *(int *)(v37 + 36), &qword_268291B48);
    uint64_t *v8 = v27;
    sub_228AC1A50((uint64_t)v28, &qword_268291B48);
    uint64_t v29 = v35;
    sub_228AD364C((uint64_t)v8, (uint64_t)v35);
    sub_228AD2708((uint64_t)v29, (uint64_t)v3, &qword_268291B50);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268291C38);
    sub_228ACD6EC();
    sub_228AD34BC();
    sub_228BACCC8();
    sub_228AC1A50((uint64_t)v29, &qword_268291B50);
  }
  else
  {
    *(void *)uint64_t v3 = swift_getKeyPath();
    v3[8] = 0;
    *((void *)v3 + 2) = v33;
    v3[24] = v32;
    v3[25] = 1;
    v3[26] = v19;
    *(_WORD *)(v3 + 27) = 257;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268291C38);
    sub_228ACD6EC();
    sub_228AD34BC();
    sub_228BACCC8();
  }
  return sub_228AD358C((uint64_t)v13);
}

uint64_t sub_228AD347C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_228BAD108();
  *a1 = result;
  return result;
}

unint64_t sub_228AD34BC()
{
  unint64_t result = qword_268291C40;
  if (!qword_268291C40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268291C38);
    sub_228AD3538();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291C40);
  }
  return result;
}

unint64_t sub_228AD3538()
{
  unint64_t result = qword_268291C48;
  if (!qword_268291C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291C48);
  }
  return result;
}

uint64_t sub_228AD358C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MapControlsConfig();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_228AD35E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MapControlsConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_228AD364C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_228AD36B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for MapPitchSlider(uint64_t a1)
{
  sub_228AD25F8(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);

  return sub_228AD25F8(v2, v3);
}

uint64_t initializeWithCopy for MapPitchSlider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_228AD266C(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_228AD266C(v6, v7);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for MapPitchSlider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_228AD266C(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_228AD25F8(v6, v7);
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_228AD266C(v8, v9);
  uint64_t v10 = *(void *)(a1 + 16);
  char v11 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  sub_228AD25F8(v10, v11);
  uint64_t v12 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v12;
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MapPitchSlider(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_228AD25F8(v6, v7);
  char v8 = *((unsigned char *)a2 + 24);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v8;
  sub_228AD25F8(v9, v10);
  *(void *)(a1 + 32) = a2[4];
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *((unsigned char *)a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for MapPitchSlider(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MapPitchSlider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MapPitchSlider()
{
  return &type metadata for MapPitchSlider;
}

unint64_t sub_228AD394C()
{
  unint64_t result = qword_268291C50;
  if (!qword_268291C50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_268291C58);
    sub_228ACD6EC();
    sub_228AD34BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291C50);
  }
  return result;
}

uint64_t destroy for ResolvedShapeStyle(uint64_t a1)
{
  return sub_228AD26A8(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t initializeWithCopy for _MapPitchSlider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_228ACF3A4(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  return a1;
}

uint64_t assignWithCopy for _MapPitchSlider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_228ACF3A4(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_228AD26A8(v6, v7);
  uint64_t v8 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  return a1;
}

__n128 __swift_memcpy27_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for _MapPitchSlider(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_228AD26A8(v6, v7);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(unsigned char *)(a1 + 25) = *((unsigned char *)a2 + 25);
  *(unsigned char *)(a1 + 26) = *((unsigned char *)a2 + 26);
  return a1;
}

uint64_t getEnumTagSinglePayload for _MapPitchSlider(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 27)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for _MapPitchSlider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 26) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 27) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 27) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _MapPitchSlider()
{
  return &type metadata for _MapPitchSlider;
}

uint64_t sub_228AD3BD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t storeEnumTagSinglePayload for MapPitchSliderConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)__n128 result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x228AD3CB8);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MapPitchSliderConfig()
{
  return &type metadata for MapPitchSliderConfig;
}

uint64_t sub_228AD3CF0()
{
  return MEMORY[0x263F1B428];
}

uint64_t sub_228AD3CFC(uint64_t a1)
{
  return sub_228AD3D30(a1);
}

uint64_t sub_228AD3D30(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 96) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 112), a1);
  return v2;
}

uint64_t sub_228AD3DC4(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 80))(*a2) & 1;
}

void sub_228AD3E10()
{
}

uint64_t sub_228AD3E68()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t type metadata accessor for AnyEquatableBox()
{
  return self;
}

uint64_t sub_228AD3E9C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_228AD3F30()
{
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    swift_retain();
    char v1 = sub_228BAD3C8();
    swift_release();
    return v1 & 1;
  }
  return result;
}

uint64_t sub_228AD3FE8()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 96) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 112));
}

uint64_t sub_228AD4040()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 96) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 112));
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t type metadata accessor for _AnyEquatableBox()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for AnyEquatable()
{
  return &type metadata for AnyEquatable;
}

BOOL sub_228AD4114(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  switch(v2)
  {
    case 5:
      return v3 == 5;
    case 4:
      return v3 == 4;
    case 3:
      return v3 == 3;
  }
  if ((v3 - 3) < 3) {
    return 0;
  }
  return v2 == v3;
}

void static MapItemDetailSelectionAccessoryStyle.automatic.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

void static MapItemDetailSelectionAccessoryStyle.CalloutStyle.automatic.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static MapItemDetailSelectionAccessoryStyle.CalloutStyle.full.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void static MapItemDetailSelectionAccessoryStyle.CalloutStyle.compact.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

void static MapItemDetailSelectionAccessoryStyle.callout.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

unsigned char *static MapItemDetailSelectionAccessoryStyle.callout(_:)@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void static MapItemDetailSelectionAccessoryStyle.sheet.getter(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

void static MapItemDetailSelectionAccessoryStyle.caption.getter(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t View.mapFeatureSelectionAccessory(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_228AD4338(a1, a2, a3, (uint64_t)"pgn?", MEMORY[0x263F1A980]);
}

uint64_t sub_228AD41F4()
{
  sub_228AD4B88();

  return sub_228BACB08();
}

uint64_t sub_228AD423C@<X0>(unsigned char *a1@<X8>)
{
  sub_228AD4B88();
  uint64_t result = sub_228BACB08();
  *a1 = v3;
  return result;
}

uint64_t sub_228AD428C@<X0>(unsigned char *a1@<X8>)
{
  return keypath_getTm_0((void (*)(void))sub_228AD4B88, a1);
}

uint64_t sub_228AD42AC()
{
  return sub_228BACB18();
}

uint64_t sub_228AD42F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, (void (*)(void))sub_228AD4B88);
}

uint64_t MapContent.mapItemDetailSelectionAccessory(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_228AD4338(a1, a2, a3, (uint64_t)"Pgn?", (void (*)(void))sub_228B822B4);
}

uint64_t sub_228AD4338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return swift_release();
}

uint64_t sub_228AD43B8()
{
  sub_228AD4B34();

  return sub_228BACB08();
}

uint64_t sub_228AD4400@<X0>(unsigned char *a1@<X8>)
{
  return keypath_getTm_0((void (*)(void))sub_228AD4B34, a1);
}

uint64_t keypath_getTm_0@<X0>(void (*a1)(void)@<X3>, unsigned char *a2@<X8>)
{
  a1();
  uint64_t result = sub_228BACB08();
  *a2 = v4;
  return result;
}

uint64_t sub_228AD447C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, (void (*)(void))sub_228AD4B34);
}

uint64_t keypath_setTm_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_228BACB18();
}

uint64_t getEnumTagSinglePayload for MapItemDetailSelectionAccessoryStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  if (*a1 <= 5u) {
    int v6 = 5;
  }
  else {
    int v6 = *a1;
  }
  int v7 = v6 - 6;
  if (*a1 < 3u) {
    int v8 = -1;
  }
  else {
    int v8 = v7;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MapItemDetailSelectionAccessoryStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x228AD4658);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MapItemDetailSelectionAccessoryStyle()
{
  return &type metadata for MapItemDetailSelectionAccessoryStyle;
}

ValueMetadata *type metadata accessor for MapItemDetailSelectionAccessoryStyle.CalloutStyle()
{
  return &type metadata for MapItemDetailSelectionAccessoryStyle.CalloutStyle;
}

uint64_t sub_228AD46A8()
{
  return swift_getWitnessTable();
}

unint64_t sub_228AD4718()
{
  unint64_t result = qword_268291CE8;
  if (!qword_268291CE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268291CE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291CE8);
  }
  return result;
}

uint64_t sub_228AD4774()
{
  return swift_getWitnessTable();
}

unsigned char *_s15_MapKit_SwiftUI36MapItemDetailSelectionAccessoryStyleV12CalloutStyleVwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x228AD48B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MapItemDetailSelectionAccessoryStyle.CalloutStyle.Storage()
{
  return &type metadata for MapItemDetailSelectionAccessoryStyle.CalloutStyle.Storage;
}

uint64_t getEnumTagSinglePayload for MapItemDetailSelectionAccessoryStyle.Storage(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB)
  {
    unsigned int v2 = a2 + 5;
    if (a2 + 5 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 5;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 5;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x228AD4998);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 5;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 3) {
    unsigned int v8 = v7 - 2;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 4) {
    return v8 - 3;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for MapItemDetailSelectionAccessoryStyle.Storage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 5;
  if (a3 + 5 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFB) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v7 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x228AD4A80);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t sub_228AD4AA8(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *sub_228AD4ABC(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MapItemDetailSelectionAccessoryStyle.Storage()
{
  return &type metadata for MapItemDetailSelectionAccessoryStyle.Storage;
}

unint64_t sub_228AD4AE0()
{
  unint64_t result = qword_268291CF8;
  if (!qword_268291CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291CF8);
  }
  return result;
}

unint64_t sub_228AD4B34()
{
  unint64_t result = qword_268291D00;
  if (!qword_268291D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291D00);
  }
  return result;
}

unint64_t sub_228AD4B88()
{
  unint64_t result = qword_268291D08;
  if (!qword_268291D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291D08);
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultMapFeatureSelectionAccessoryStyleKey()
{
  return &type metadata for DefaultMapFeatureSelectionAccessoryStyleKey;
}

ValueMetadata *type metadata accessor for DefaultMapItemDetailSelectionAccessoryStyleKey()
{
  return &type metadata for DefaultMapItemDetailSelectionAccessoryStyleKey;
}

void sub_228AD4BFC(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t Marker.init(coordinate:label:)@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, double *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  return sub_228AD614C(a1, a2, a3, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Marker, a4, a5, a6);
}

uint64_t type metadata accessor for Marker()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Marker.init<>(_:monogram:coordinate:)@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, char a3@<W6>, double *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  return sub_228AD63C0(a1, a2, a3, a4, a5, a6, &qword_268291D10);
}

uint64_t sub_228AD4C94(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t Marker.init<A>(_:monogram:coordinate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, double *a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  return sub_228AD6524(a1, a2, a3, a4, a5, a6, a7, &qword_268291D10, a8, a9, a10, (uint64_t)sub_228AD9ACC, (uint64_t)sub_228AD4C90);
}

uint64_t Marker.init<>(_:systemImage:coordinate:)@<X0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  return sub_228AD67C8(&qword_268291D20, a1, a2, a3);
}

uint64_t Marker.init<A>(_:systemImage:coordinate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, double *a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  return sub_228AD698C(a1, a2, a3, a4, a5, &qword_268291D20, (uint64_t)sub_228AD9ACC, (uint64_t)sub_228AD4D44, a6, a7, a8);
}

uint64_t Marker.init<>(_:image:coordinate:)@<X0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  return sub_228AD67C8(&qword_268291D20, a1, a2, a3);
}

uint64_t Marker.init<A>(_:image:coordinate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, double *a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  return sub_228AD698C(a1, a2, a3, a4, a5, &qword_268291D20, (uint64_t)sub_228AD9ACC, (uint64_t)sub_228AD4DCC, a6, a7, a8);
}

void Marker.init<>(item:)(void *a1@<X0>, uint64_t a2@<X8>)
{
}

unint64_t sub_228AD4E0C()
{
  unint64_t result = qword_268291D30;
  if (!qword_268291D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268291D30);
  }
  return result;
}

void Marker.init<>(feature:)(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t static Marker._makeMapContent(content:inputs:)@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v55 = *MEMORY[0x263EF8340];
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291D38);
  uint64_t v37 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v45 = v10;
  uint64_t v46 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291D40);
  uint64_t v47 = *(void (**)(int *, uint64_t))(v11 - 8);
  uint64_t v12 = *((void *)v47 + 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (int *)((char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v35 - v15;
  uint64_t v17 = sub_228BAC5E8();
  uint64_t v41 = *(void *)(v17 - 8);
  uint64_t v42 = v17;
  MEMORY[0x270FA5388](v17);
  __int16 v19 = (char *)&v35 - v18;
  uint64_t v44 = a5;
  _s15_MapKit_SwiftUI05EmptyA7ContentV05_makeaF07content6inputsAA01_aF7OutputsV0cD011_GraphValueVyACG_AA01_aF6InputsVtFZ_0();
  uint64_t v49 = a3;
  uint64_t v50 = a4;
  type metadata accessor for Marker();
  sub_228BAC5E8();
  sub_228B538E4((void (*)(uint64_t))sub_228AD5358, a3, (uint64_t)v19);
  uint64_t v36 = type metadata accessor for _MapContentInputs(0);
  uint64_t v40 = v19;
  uint64_t v39 = a4;
  sub_228BACB98();
  int v20 = sub_228ACB118(a1);
  uint64_t v21 = v47;
  uint64_t v22 = (void (*)(int *, char *, uint64_t))*((void *)v47 + 2);
  uint64_t v43 = v16;
  uint64_t v48 = v11;
  v22(v14, v16, v11);
  if (v12 != 4)
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  int v23 = *v14;
  uint64_t v24 = (void (*)(int *, uint64_t))*((void *)v21 + 1);
  v24(v14, v48);
  uint64_t v25 = (int *)v46;
  sub_228BACB28();
  if (v45 != 4) {
    goto LABEL_5;
  }
  int v26 = *v25;
  uint64_t v27 = (*(uint64_t (**)(int *, uint64_t))(v37 + 8))(v25, v38);
  uint64_t v28 = *(int *)(v36 + 28);
  uint64_t v47 = v24;
  LODWORD(v28) = *(_DWORD *)(a2 + v28);
  v51[0] = v20;
  v51[1] = v23;
  v51[2] = v26;
  v51[3] = v28;
  v51[4] = 0;
  uint64_t v52 = 0;
  __int16 v53 = 771;
  char v54 = 6;
  MEMORY[0x270FA5388](v27);
  uint64_t List = type metadata accessor for Marker.MakeList();
  *(&v35 - 2) = List;
  *(&v35 - 1) = swift_getWitnessTable();
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291D48);
  sub_228AC7E20((uint64_t)v51, (uint64_t)sub_228AD7F3C, (uint64_t)(&v35 - 4), List, MEMORY[0x263F8E628], v30, MEMORY[0x263F8E658], v31);
  uint64_t v32 = swift_release();
  MEMORY[0x270FA5388](v32);
  *((_DWORD *)&v35 - 4) = v33;
  sub_228AC1BA8();
  sub_228BACD88();
  v47((int *)v43, v48);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v40, v42);
}

uint64_t sub_228AD5358(uint64_t a1)
{
  return sub_228AD72B0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t (*)(void))type metadata accessor for Marker, (uint64_t)sub_228AD9AAC);
}

uint64_t sub_228AD539C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_228BACAF8();
  uint64_t Value = AGGraphGetValue();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, Value, v2);
}

uint64_t sub_228AD5424(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v133 = *MEMORY[0x263EF8340];
  uint64_t v108 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x270FA5388](v108);
  uint64_t v111 = &v97[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v109 = type metadata accessor for MapContentList.Item(0);
  uint64_t v110 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  uint64_t v112 = (uint64_t *)&v97[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v107 = type metadata accessor for ResolvedMarker();
  MEMORY[0x270FA5388](v107);
  uint64_t v116 = &v97[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v113 = sub_228BACAF8();
  uint64_t v124 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113);
  unsigned int v8 = &v97[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291F60);
  uint64_t v9 = MEMORY[0x270FA5388](v119);
  uint64_t v106 = &v97[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  v125 = &v97[-v11];
  uint64_t v12 = sub_228BACE18();
  uint64_t v127 = *(void *)(v12 - 8);
  uint64_t v128 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v118 = &v97[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  v126 = &v97[-v15];
  uint64_t v16 = sub_228BACBE8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  __int16 v19 = &v97[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v117 = a1;
  uint64_t v20 = type metadata accessor for Marker();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  int v23 = &v97[-v22];
  int v24 = *(_DWORD *)(v2 + 12);
  uint64_t Value = AGGraphGetValue();
  uint64_t v102 = v26;
  uint64_t v114 = v21;
  uint64_t v27 = v21;
  uint64_t v28 = v127;
  uint64_t v29 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v27 + 16);
  uint64_t v120 = v23;
  uint64_t v121 = v20;
  uint64_t v30 = v23;
  uint64_t v31 = v119;
  v29(v30, Value, v20);
  uint64_t v32 = AGGraphGetValue();
  uint64_t v101 = v33;
  uint64_t v115 = v17;
  uint64_t v34 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v17 + 16);
  uint64_t v122 = v19;
  uint64_t v123 = v16;
  uint64_t v104 = v17 + 16;
  v103 = v34;
  v34((uint64_t)v19, (unsigned char *)v32, v16);
  uint64_t v35 = *(int *)(v31 + 48);
  if (v24 == *MEMORY[0x263F288F8])
  {
    sub_228BACE08();
    int v44 = 0;
    uint64_t v42 = *(unsigned char **)(v28 + 32);
    uint64_t v43 = (v28 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  }
  else
  {
    uint64_t v36 = v128;
    uint64_t v37 = AGGraphGetValue();
    char v39 = v38;
    uint64_t v40 = v106;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v28 + 16))(v106, v37, v36);
    v40[v35] = v39 & 1;
    uint64_t v41 = *(int *)(v31 + 48);
    uint64_t v42 = *(unsigned char **)(v28 + 32);
    uint64_t v43 = (v28 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v42)(v125, v40, v36);
    int v44 = v40[v41];
  }
  int v100 = v44;
  v125[v35] = v44;
  uint64_t v106 = v42;
  uint64_t v105 = v43;
  ((void (*)(unsigned char *))v42)(v126);
  int v45 = *(_DWORD *)(v2 + 16);
  uint64_t v46 = *(void *)(v2 + 24);
  __int16 v47 = *(_WORD *)(v2 + 32);
  char v48 = *(unsigned char *)(v2 + 34);
  long long v129 = *(_OWORD *)v2;
  int v130 = v45;
  uint64_t v131 = v46;
  *(_WORD *)v132 = v47;
  v132[2] = v48;
  sub_228AD539C((uint64_t)v8);
  uint64_t v49 = sub_228BAC9D8();
  uint64_t v50 = *(void (**)(unsigned char *, uint64_t))(v124 + 8);
  uint64_t v51 = v113;
  v50(v8, v113);
  uint64_t v52 = *(void *)(v2 + 24);
  int v53 = (v49 | v52) == 0;
  uint64_t v54 = (uint64_t)v116;
  uint64_t v124 = v49;
  if (v49 && v52)
  {
    swift_retain();
    swift_retain();
    int v53 = sub_228BAD0F8();
    swift_release();
    swift_release();
  }
  int v99 = v53;
  int v55 = *(_DWORD *)(v2 + 16);
  __int16 v56 = *(_WORD *)(v2 + 32);
  char v57 = *(unsigned char *)(v2 + 34);
  long long v129 = *(_OWORD *)v2;
  int v130 = v55;
  uint64_t v131 = v52;
  *(_WORD *)v132 = v56;
  v132[2] = v57;
  sub_228AD539C((uint64_t)v8);
  sub_228AD2DAC();
  sub_228BACB08();
  int v58 = v129;
  v50(v8, v51);
  int v59 = *(unsigned __int8 *)(v2 + 32);
  LODWORD(v119) = v58;
  if (v59 == 3) {
    int v60 = 1;
  }
  else {
    int v60 = sub_228BAC558() ^ 1;
  }
  int v98 = v60;
  int v61 = *(_DWORD *)(v2 + 16);
  uint64_t v62 = *(void *)(v2 + 24);
  __int16 v63 = *(_WORD *)(v2 + 33);
  long long v129 = *(_OWORD *)v2;
  int v130 = v61;
  uint64_t v131 = v62;
  v132[0] = v59;
  *(_WORD *)&v132[1] = v63;
  sub_228AD539C((uint64_t)v8);
  sub_228AD2D58();
  sub_228BACB08();
  int v64 = v129;
  v50(v8, v51);
  int v65 = *(unsigned __int8 *)(v2 + 33);
  LODWORD(v125) = v64;
  if (v65 == 3) {
    int v66 = 1;
  }
  else {
    int v66 = sub_228BAC558() ^ 1;
  }
  int v67 = *(_DWORD *)(v2 + 16);
  uint64_t v68 = *(void *)(v2 + 24);
  char v69 = *(unsigned char *)(v2 + 32);
  char v70 = *(unsigned char *)(v2 + 34);
  long long v129 = *(_OWORD *)v2;
  int v130 = v67;
  uint64_t v131 = v68;
  v132[0] = v69;
  v132[1] = v65;
  v132[2] = v70;
  sub_228AD539C((uint64_t)v8);
  sub_228AD4B34();
  sub_228BACB08();
  v50(v8, v51);
  LODWORD(v71) = v129;
  int v72 = *(unsigned __int8 *)(v2 + 34);
  if (v129 == 6)
  {
    uint64_t v73 = v127;
    char v74 = v119;
    char v75 = (char)v125;
    if ((v72 != 6) | v102 & 1 | v101 & 1 | ((v99 & 1) == 0) | (v100 != 0) | v98 & 1 | v66 & 1u) {
      goto LABEL_28;
    }
LABEL_27:
    if (AGGraphGetOutputValue()) {
      goto LABEL_31;
    }
    goto LABEL_28;
  }
  uint64_t v73 = v127;
  char v74 = v119;
  char v75 = (char)v125;
  if (v72 != 6)
  {
    switch(v129)
    {
      case 5u:
        BOOL v76 = v100 != 0;
        BOOL v77 = v72 == 5;
        break;
      case 4u:
        BOOL v76 = v100 != 0;
        BOOL v77 = v72 == 4;
        break;
      case 3u:
        BOOL v76 = v100 != 0;
        BOOL v77 = v72 == 3;
        break;
      default:
        if ((v72 - 3) < 3
          || (v102 | v101) & 1 | ((v99 & 1) == 0) | (v100 != 0) | v98 & 1 | v66 & 1
          || v129 != v72)
        {
          goto LABEL_28;
        }
        goto LABEL_27;
    }
    int v78 = !v77;
    if (!((v78 | v102 | v101) & 1 | ((v99 & 1) == 0) | (v76 | v98 | v66) & 1)) {
      goto LABEL_27;
    }
  }
LABEL_28:
  int v79 = *(_DWORD *)(v2 + 16) + 1;
  uint64_t v113 = v2;
  LODWORD(v102) = v79;
  *(_DWORD *)(v2 + 16) = v79;
  LODWORD(v117) = v71;
  uint64_t v80 = v120;
  uint64_t v81 = *v120;
  uint64_t v82 = v120[1];
  uint64_t v83 = (int *)v107;
  v103(v54 + *(int *)(v107 + 32), v122, v123);
  uint64_t v84 = *(void **)((char *)v80 + *(int *)(v121 + 40));
  LOBYTE(v8__isPlatformVersionAtLeast(2, 18, 1, 0) = *((unsigned char *)v80 + *(int *)(v121 + 44));
  uint64_t v85 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v73 + 16);
  uint64_t v86 = v124;
  uint64_t v87 = v128;
  uint64_t v88 = v126;
  v85(v54 + v83[12], v126, v128);
  *(void *)uint64_t v54 = v81;
  *(void *)(v54 + 8) = v82;
  *(unsigned char *)(v54 + 16) = v74;
  *(unsigned char *)(v54 + 17) = (_BYTE)v125;
  *(unsigned char *)(v54 + 18) = v117;
  *(void *)(v54 + v83[9]) = v84;
  *(unsigned char *)(v54 + v83[10]) = (_BYTE)v80;
  *(void *)(v54 + v83[11]) = v86;
  v85((uint64_t)v118, v88, v87);
  uint64_t v89 = v111;
  sub_228AD8F74(v54, (uint64_t)v111, (uint64_t (*)(void))type metadata accessor for ResolvedMarker);
  swift_storeEnumTagMultiPayload();
  sub_228ACAF54();
  swift_retain();
  id v90 = v84;
  sub_228BACE28();
  uint64_t v91 = v129;
  if (!(void)v129)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_268291998);
    uint64_t v91 = swift_allocObject();
    *(_OWORD *)(v91 + 16) = xmmword_228BAF4E0;
    *(void *)(v91 + 32) = 0;
    *(unsigned char *)(v91 + 72) = 0;
  }
  uint64_t v92 = (uint64_t)v112;
  *uint64_t v112 = v91;
  uint64_t v93 = v109;
  ((void (*)(uint64_t, unsigned char *, uint64_t))v106)(v92 + *(int *)(v109 + 28), v118, v128);
  *(_DWORD *)(v92 + 8) = v102;
  sub_228AD8F10((uint64_t)v89, v92 + *(int *)(v93 + 24));
  __swift_instantiateConcreteTypeFromMangledName(&qword_268291F68);
  unint64_t v94 = (*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
  uint64_t v71 = swift_allocObject();
  *(_OWORD *)(v71 + 16) = xmmword_228BAF4E0;
  sub_228AD8F74(v92, v71 + v94, type metadata accessor for MapContentList.Item);
  *(void *)&long long v129 = sub_228B78CF8(v71);
  *((void *)&v129 + 1) = v95;
  AGGraphSetOutputValue();
  swift_bridgeObjectRelease();
  sub_228AD8FDC(v92, type metadata accessor for MapContentList.Item);
  sub_228AD8FDC(v54, (uint64_t (*)(void))type metadata accessor for ResolvedMarker);
  uint64_t v73 = v127;
  char v74 = v119;
  char v75 = (char)v125;
  LOBYTE(v71) = v117;
  uint64_t v2 = v113;
LABEL_31:
  *(unsigned char *)(v2 + 34) = v71;
  *(unsigned char *)(v2 + 33) = v75;
  *(unsigned char *)(v2 + 32) = v74;
  *(void *)(v2 + 24) = v124;
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v73 + 8))(v126, v128);
  (*(void (**)(unsigned char *, uint64_t))(v115 + 8))(v122, v123);
  return (*(uint64_t (**)(void *, uint64_t))(v114 + 8))(v120, v121);
}

void sub_228AD6110(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_228AD611C@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return static Marker._makeMapContent(content:inputs:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), a4);
}

uint64_t sub_228AD6128()
{
  return 1;
}

uint64_t SelectedMarker.init(coordinate:label:)@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, double *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  return sub_228AD614C(a1, a2, a3, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for SelectedMarker, a4, a5, a6);
}

uint64_t sub_228AD614C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t (*a4)(void, uint64_t, uint64_t)@<X4>, double *a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  uint64_t v11 = a4(0, a2, a3);
  *(double *)((char *)a5 + *(int *)(v11 + 40)) = 0.0;
  *((unsigned char *)a5 + *(int *)(v11 + 44)) = 0;
  *a5 = a6;
  a5[1] = a7;
  return a1();
}

uint64_t _s15_MapKit_SwiftUI6MarkerV_10coordinateACy0cD04TextVGAE18LocalizedStringKeyV_So22CLLocationCoordinate2DVtcAGRszrlufC_0@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t result = sub_228BACFA8();
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = result;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8 & 1;
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v9;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = 0;
  return result;
}

uint64_t _s15_MapKit_SwiftUI6MarkerV_10coordinateACy0cD04TextVGqd___So22CLLocationCoordinate2DVtcAGRszSyRd__lufC_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
  uint64_t v12 = sub_228BACFB8();
  uint64_t v14 = v13;
  char v16 = v15;
  uint64_t v18 = v17;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, a2);
  *(double *)a3 = a4;
  *(double *)(a3 + 8) = a5;
  *(void *)(a3 + 16) = v12;
  *(void *)(a3 + 24) = v14;
  *(unsigned char *)(a3 + 32) = v16 & 1;
  *(void *)(a3 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v18;
  *(void *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 56) = 0;
  return result;
}

uint64_t SelectedMarker.init<>(_:monogram:coordinate:)@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, char a3@<W6>, double *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  return sub_228AD63C0(a1, a2, a3, a4, a5, a6, &qword_268291D50);
}

uint64_t sub_228AD63C0@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, char a3@<W6>, double *a4@<X8>, double a5@<D0>, double a6@<D1>, uint64_t *a7)
{
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(a7);
  *(double *)((char *)a4 + *(int *)(v13 + 40)) = 0.0;
  *((unsigned char *)a4 + *(int *)(v13 + 44)) = 0;
  *a4 = a5;
  a4[1] = a6;
  sub_228BAD168();
  sub_228AD4C94(a1, a2, a3 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t SelectedMarker.init<A>(_:monogram:coordinate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, double *a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  return sub_228AD6524(a1, a2, a3, a4, a5, a6, a7, &qword_268291D50, a8, a9, a10, (uint64_t)sub_228AD9ACC, (uint64_t)sub_228AD4C90);
}

uint64_t sub_228AD6524@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, double *a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13)
{
  v28[2] = a12;
  v28[0] = a7;
  v28[1] = a13;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291D18);
  uint64_t v23 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v25 = (char *)v28 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = (int *)__swift_instantiateConcreteTypeFromMangledName(a8);
  *(double *)((char *)a9 + v26[10]) = 0.0;
  *((unsigned char *)a9 + v26[11]) = 0;
  *a9 = a10;
  a9[1] = a11;
  uint64_t v34 = a6;
  uint64_t v35 = v28[0];
  uint64_t v36 = a1;
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  a4 &= 1u;
  char v32 = a4;
  uint64_t v33 = a5;
  sub_228BAD168();
  sub_228AD4C94(a2, a3, a4);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a6 - 8) + 8))(a1, a6);
  return (*(uint64_t (**)(char *, char *, uint64_t))(v23 + 32))((char *)a9 + v26[9], v25, v29);
}

uint64_t SelectedMarker.init<>(_:systemImage:coordinate:)@<X0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  return sub_228AD67C8(qword_268291D58, a1, a2, a3);
}

uint64_t SelectedMarker.init<A>(_:systemImage:coordinate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, double *a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  return sub_228AD698C(a1, a2, a3, a4, a5, qword_268291D58, (uint64_t)sub_228AD7FFC, (uint64_t)sub_228AD4D44, a6, a7, a8);
}

uint64_t SelectedMarker.init<>(_:image:coordinate:)@<X0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  return sub_228AD67C8(qword_268291D58, a1, a2, a3);
}

uint64_t sub_228AD67C8@<X0>(uint64_t *a1@<X6>, double *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a1);
  *(double *)((char *)a2 + *(int *)(v7 + 40)) = 0.0;
  *((unsigned char *)a2 + *(int *)(v7 + 44)) = 0;
  *a2 = a3;
  a2[1] = a4;
  sub_228BAD168();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_228AD68C0@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_228BACFA8();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t SelectedMarker.init<A>(_:image:coordinate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, double *a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  return sub_228AD698C(a1, a2, a3, a4, a5, qword_268291D58, (uint64_t)sub_228AD9ACC, (uint64_t)sub_228AD4DCC, a6, a7, a8);
}

uint64_t sub_228AD698C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, double *a9@<X8>, double a10@<D0>, double a11@<D1>)
{
  v26[0] = a7;
  v26[1] = a8;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291D28);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (int *)__swift_instantiateConcreteTypeFromMangledName(a6);
  *(double *)((char *)a9 + v24[10]) = 0.0;
  *((unsigned char *)a9 + v24[11]) = 0;
  *a9 = a10;
  a9[1] = a11;
  v26[8] = a4;
  v26[9] = a5;
  void v26[10] = a1;
  v26[4] = a2;
  v26[5] = a3;
  sub_228BAD168();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a1, a4);
  return (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))((char *)a9 + v24[9], v23, v20);
}

uint64_t sub_228AD6B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_228BACFB8();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 16) = v7 & 1;
  *(void *)(a2 + 24) = v8;
  return result;
}

void SelectedMarker.init<>(item:)(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void SelectedMarker.init<>(feature:)(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_228AD6C20(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  id v6 = objc_msgSend(a1, sel_placemark);
  id v7 = objc_msgSend(v6, sel_location);

  if (v7)
  {
    objc_msgSend(v7, sel_coordinate);
    uint64_t v9 = v8;
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v9 = 0;
  }
  id v12 = a1;
  id v13 = objc_msgSend(v12, sel_name);
  if (v13)
  {
    uint64_t v14 = v13;
    sub_228BAD408();
  }
  sub_228AD4E0C();
  uint64_t v15 = sub_228BACFB8();
  uint64_t v17 = v16;
  char v19 = v18;
  uint64_t v21 = v20;

  *(void *)a3 = v9;
  *(void *)(a3 + 8) = v11;
  *(void *)(a3 + 16) = v15;
  *(void *)(a3 + 24) = v17;
  *(unsigned char *)(a3 + 32) = v19 & 1;
  *(void *)(a3 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v21;
  *(void *)(a3 + 48) = v12;
  *(unsigned char *)(a3 + 56) = a2;
}

uint64_t static SelectedMarker._mapContentCount(inputs:)()
{
  return 1;
}

uint64_t static SelectedMarker._makeMapContent(content:inputs:)@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v57 = *MEMORY[0x263EF8340];
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291D38);
  uint64_t v37 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v45 = v9;
  int v44 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291D40);
  uint64_t v48 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v48 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  id v13 = (unsigned int *)((char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v35 - v14;
  uint64_t v41 = sub_228BAC5E8();
  uint64_t v40 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v17 = (char *)&v35 - v16;
  uint64_t v43 = a5;
  _s15_MapKit_SwiftUI05EmptyA7ContentV05_makeaF07content6inputsAA01_aF7OutputsV0cD011_GraphValueVyACG_AA01_aF6InputsVtFZ_0();
  uint64_t v49 = a3;
  uint64_t v50 = a4;
  type metadata accessor for SelectedMarker();
  sub_228BAC5E8();
  sub_228B538E4((void (*)(uint64_t))sub_228AD80A8, a3, (uint64_t)v17);
  uint64_t v36 = type metadata accessor for _MapContentInputs(0);
  uint64_t v18 = v46;
  char v39 = v17;
  sub_228BACB98();
  char v19 = a1;
  uint64_t v20 = v48;
  unsigned int v21 = sub_228ACB118(v19);
  uint64_t v22 = *(void (**)(unsigned int *, char *, uint64_t))(v20 + 16);
  uint64_t v42 = v15;
  uint64_t v47 = v10;
  v22(v13, v15, v10);
  if (v11 != 4)
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  unsigned int v23 = *v13;
  uint64_t v24 = *(void (**)(unsigned int *, uint64_t))(v20 + 8);
  uint64_t v48 = v20 + 8;
  v24(v13, v47);
  uint64_t v25 = (unsigned int *)v44;
  sub_228BACB28();
  if (v45 != 4) {
    goto LABEL_5;
  }
  unsigned int v26 = *v25;
  uint64_t v27 = (*(uint64_t (**)(unsigned int *, uint64_t))(v37 + 8))(v25, v38);
  unsigned int v28 = *(_DWORD *)(v18 + *(int *)(v36 + 28));
  *(void *)&long long v53 = __PAIR64__(v23, v21);
  *((void *)&v53 + 1) = __PAIR64__(v28, v26);
  LODWORD(v54) = 0;
  uint64_t v55 = 0;
  __int16 v56 = 771;
  v51[0] = v53;
  v51[1] = v54;
  __int16 v52 = 771;
  MEMORY[0x270FA5388](v27);
  uint64_t List = type metadata accessor for SelectedMarker.MakeList();
  *(&v35 - 2) = List;
  *(&v35 - 1) = swift_getWitnessTable();
  sub_228AD8104((uint64_t)&v53);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291D48);
  sub_228AC7E20((uint64_t)v51, (uint64_t)sub_228AD9A94, (uint64_t)(&v35 - 4), List, MEMORY[0x263F8E628], v30, MEMORY[0x263F8E658], v31);
  uint64_t v32 = swift_release();
  MEMORY[0x270FA5388](v32);
  *((_DWORD *)&v35 - 4) = v33;
  sub_228AC2024();
  sub_228BACD88();
  sub_228AD8130((uint64_t)&v53);
  v24((unsigned int *)v42, v47);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v39, v41);
}

uint64_t sub_228AD72B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v8 = a4(0);
  uint64_t v9 = a1 + *(int *)(v8 + 36);
  v13[2] = v8;
  v13[3] = a2;
  uint64_t v10 = sub_228BAC4A8();
  sub_228B3C21C(v9, a5, (uint64_t)v13, a2, MEMORY[0x263F8E628], v10, MEMORY[0x263F8E658], v11);
  return v13[5];
}

uint64_t sub_228AD7344(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v122 = *MEMORY[0x263EF8340];
  uint64_t v86 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x270FA5388](v86);
  uint64_t v89 = &v77[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v87 = type metadata accessor for MapContentList.Item(0);
  uint64_t v88 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  id v90 = (uint64_t *)&v77[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v85 = type metadata accessor for ResolvedMarker();
  MEMORY[0x270FA5388](v85);
  uint64_t v96 = &v77[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v107 = sub_228BACAF8();
  uint64_t v98 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  uint64_t v8 = &v77[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291F60);
  uint64_t v9 = MEMORY[0x270FA5388](v92);
  uint64_t v91 = &v77[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v104 = &v77[-v11];
  uint64_t v106 = sub_228BACE18();
  uint64_t v103 = *(void *)(v106 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v106);
  uint64_t v97 = &v77[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v105 = &v77[-v14];
  uint64_t v15 = sub_228BACBE8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = &v77[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v93 = a1;
  uint64_t v19 = type metadata accessor for SelectedMarker();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = &v77[-v21];
  int v23 = *((_DWORD *)v2 + 3);
  uint64_t Value = AGGraphGetValue();
  uint64_t v80 = v25;
  uint64_t v94 = v20;
  unsigned int v26 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v20 + 16);
  int v99 = v22;
  uint64_t v27 = v22;
  uint64_t v28 = v92;
  uint64_t v100 = v19;
  v26(v27, Value, v19);
  uint64_t v29 = AGGraphGetValue();
  uint64_t v79 = v30;
  uint64_t v95 = v16;
  uint64_t v31 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v16 + 16);
  uint64_t v101 = v18;
  uint64_t v102 = v15;
  uint64_t v82 = v16 + 16;
  uint64_t v81 = v31;
  v31((uint64_t)v18, (unsigned char *)v29, v15);
  uint64_t v32 = *(int *)(v28 + 48);
  if (v23 == *MEMORY[0x263F288F8])
  {
    sub_228BACE08();
    int v42 = 0;
    uint64_t v37 = v103;
    uint64_t v40 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v103 + 32);
    uint64_t v41 = (v103 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  }
  else
  {
    uint64_t v33 = v106;
    uint64_t v34 = AGGraphGetValue();
    char v36 = v35;
    uint64_t v37 = v103;
    uint64_t v38 = v91;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v103 + 16))(v91, v34, v33);
    v38[v32] = v36 & 1;
    uint64_t v39 = *(int *)(v28 + 48);
    uint64_t v40 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v37 + 32);
    uint64_t v41 = (v37 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v40((uint64_t)v104, v38, v33);
    int v42 = v38[v39];
  }
  int v78 = v42;
  v104[v32] = v42;
  uint64_t v84 = v40;
  uint64_t v83 = v41;
  ((void (*)(unsigned char *))v40)(v105);
  long long v43 = v2[1];
  long long v119 = *v2;
  long long v120 = v43;
  __int16 v121 = *((_WORD *)v2 + 16);
  sub_228AD539C((uint64_t)v8);
  uint64_t v44 = sub_228BAC9D8();
  uint64_t v45 = *(void (**)(unsigned char *, uint64_t))(v98 + 8);
  v45(v8, v107);
  uint64_t v46 = *((void *)v2 + 3);
  LODWORD(v91) = (v44 | v46) == 0;
  uint64_t v47 = (uint64_t)v96;
  if (v44 && v46)
  {
    swift_retain();
    swift_retain();
    LODWORD(v91) = sub_228BAD0F8();
    swift_release();
    swift_release();
  }
  uint64_t v92 = v44;
  int v48 = *((_DWORD *)v2 + 4);
  __int16 v49 = *((_WORD *)v2 + 16);
  long long v115 = *v2;
  int v116 = v48;
  uint64_t v117 = v46;
  __int16 v118 = v49;
  sub_228AD539C((uint64_t)v8);
  sub_228AD2DAC();
  sub_228BACB08();
  int v50 = v110;
  v45(v8, v107);
  int v51 = *((unsigned __int8 *)v2 + 32);
  LODWORD(v98) = v50;
  if (v51 == 3) {
    LOBYTE(v52) = 1;
  }
  else {
    int v52 = sub_228BAC558() ^ 1;
  }
  int v53 = *((_DWORD *)v2 + 4);
  uint64_t v54 = *((void *)v2 + 3);
  char v55 = *((unsigned char *)v2 + 33);
  long long v110 = *v2;
  int v111 = v53;
  uint64_t v112 = v54;
  char v113 = v51;
  char v114 = v55;
  sub_228AD539C((uint64_t)v8);
  sub_228AD2D58();
  sub_228BACB08();
  LODWORD(v104) = v108;
  v45(v8, v107);
  uint64_t v56 = v92;
  if (*((unsigned char *)v2 + 33) == 3
    || (BOOL v57 = v78 != 0,
        char v58 = v80 | v79,
        char v59 = sub_228BAC558(),
        v58 & 1 | ((v91 & 1) == 0) | (v57 | v52) & 1)
    || (v59 & 1) == 0
    || !AGGraphGetOutputValue())
  {
    LODWORD(v107) = *((_DWORD *)v2 + 4) + 1;
    *((_DWORD *)v2 + 4) = v107;
    int v60 = v99;
    uint64_t v61 = *v99;
    uint64_t v62 = v99[1];
    __int16 v63 = (int *)v85;
    v81(v47 + *(int *)(v85 + 32), v101, v102);
    int v64 = *(void **)((char *)v60 + *(int *)(v100 + 40));
    LOBYTE(v6__isPlatformVersionAtLeast(2, 18, 1, 0) = *((unsigned char *)v60 + *(int *)(v100 + 44));
    int v65 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v37 + 16);
    int v66 = v105;
    uint64_t v67 = v106;
    v65(v47 + v63[12], v105, v106);
    *(void *)uint64_t v47 = v61;
    *(void *)(v47 + 8) = v62;
    *(unsigned char *)(v47 + 16) = v98;
    *(unsigned char *)(v47 + 17) = (_BYTE)v104;
    *(unsigned char *)(v47 + 18) = 6;
    *(void *)(v47 + v63[9]) = v64;
    *(unsigned char *)(v47 + v63[10]) = (_BYTE)v60;
    *(void *)(v47 + v63[11]) = v56;
    v65((uint64_t)v97, v66, v67);
    uint64_t v68 = v89;
    sub_228AD8F74(v47, (uint64_t)v89, (uint64_t (*)(void))type metadata accessor for ResolvedMarker);
    swift_storeEnumTagMultiPayload();
    sub_228ACAF54();
    swift_retain();
    id v69 = v64;
    sub_228BACE28();
    uint64_t v70 = v108;
    if (!v108)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_268291998);
      uint64_t v70 = swift_allocObject();
      *(_OWORD *)(v70 + 16) = xmmword_228BAF4E0;
      *(void *)(v70 + 32) = 0;
      *(unsigned char *)(v70 + 72) = 0;
    }
    uint64_t v71 = (uint64_t)v90;
    uint64_t *v90 = v70;
    uint64_t v72 = v87;
    v84(v71 + *(int *)(v87 + 28), v97, v67);
    *(_DWORD *)(v71 + 8) = v107;
    sub_228AD8F10((uint64_t)v68, v71 + *(int *)(v72 + 24));
    __swift_instantiateConcreteTypeFromMangledName(&qword_268291F68);
    unint64_t v73 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
    uint64_t v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = xmmword_228BAF4E0;
    sub_228AD8F74(v71, v74 + v73, type metadata accessor for MapContentList.Item);
    uint64_t v108 = sub_228B78CF8(v74);
    uint64_t v109 = v75;
    AGGraphSetOutputValue();
    swift_bridgeObjectRelease();
    sub_228AD8FDC(v71, type metadata accessor for MapContentList.Item);
    sub_228AD8FDC(v47, (uint64_t (*)(void))type metadata accessor for ResolvedMarker);
    uint64_t v37 = v103;
  }
  *((unsigned char *)v2 + 33) = (_BYTE)v104;
  *((unsigned char *)v2 + 32) = v98;
  *((void *)v2 + 3) = v56;
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v105, v106);
  (*(void (**)(unsigned char *, uint64_t))(v95 + 8))(v101, v102);
  return (*(uint64_t (**)(void *, uint64_t))(v94 + 8))(v99, v100);
}

uint64_t sub_228AD7F18@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return static SelectedMarker._makeMapContent(content:inputs:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), a4);
}

uint64_t type metadata accessor for Marker.MakeList()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_228AD7F3C@<X0>(_DWORD *a1@<X8>)
{
  return sub_228AC7EFC(a1);
}

uint64_t sub_228AD7F64@<X0>(uint64_t a1@<X8>)
{
  return sub_228ABF9C8(*(_DWORD *)(v1 + 16), a1);
}

uint64_t type metadata accessor for SelectedMarker()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_228AD7F84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  char v4 = *(unsigned char *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  sub_228AD905C(v2, v3, v4);

  return swift_bridgeObjectRetain();
}

uint64_t sub_228AD7FD8@<X0>(uint64_t a1@<X8>)
{
  return sub_228AD68C0(a1);
}

uint64_t sub_228AD7FFC@<X0>(uint64_t a1@<X8>)
{
  return sub_228AD6B34(*(void *)(v1 + 32), a1);
}

uint64_t sub_228AD801C@<X0>(uint64_t *a1@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t result = sub_228BAD148();
  *a1 = result;
  return result;
}

uint64_t sub_228AD8060@<X0>(uint64_t *a1@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t result = sub_228BAD158();
  *a1 = result;
  return result;
}

uint64_t sub_228AD80A8(uint64_t a1)
{
  return sub_228AD72B0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t (*)(void))type metadata accessor for SelectedMarker, (uint64_t)sub_228AD903C);
}

uint64_t type metadata accessor for SelectedMarker.MakeList()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_228AD8104(uint64_t a1)
{
  return a1;
}

uint64_t sub_228AD8130(uint64_t a1)
{
  return a1;
}

uint64_t sub_228AD815C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_228AD8188()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_228AD8238(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64) + 7;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v6 + ((v5 + 16) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v10 = ((unint64_t)a1 + v5 + 16) & ~v5;
    uint64_t v11 = ((unint64_t)a2 + v5 + 16) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v10, v11);
    unint64_t v12 = (v6 + v10) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v13 = (v6 + v11) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v14 = *(void **)v13;
    *(void *)unint64_t v12 = *(void *)v13;
    *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
    id v15 = v14;
  }
  return v3;
}

void sub_228AD8360(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = v2 + 8;
  unint64_t v4 = (a1 + *(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  (*(void (**)(unint64_t))(v2 + 8))(v4);
  uint64_t v5 = *(void **)((*(void *)(v3 + 56) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
}

_OWORD *sub_228AD83E0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 16;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 48) + 7;
  unint64_t v10 = (v9 + v7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + v8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = *(void **)v11;
  *(void *)unint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  id v13 = v12;
  return a1;
}

void *sub_228AD848C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 24;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 40) + 7;
  unint64_t v10 = (v9 + v7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + v8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = *(void **)v11;
  id v13 = *(void **)v10;
  *(void *)unint64_t v10 = *(void *)v11;
  id v14 = v12;

  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  return a1;
}

_OWORD *sub_228AD8548(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32) + 7;
  unint64_t v10 = (v9 + v7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + v8) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  return a1;
}

_OWORD *sub_228AD85F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 40;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 40))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 24) + 7;
  unint64_t v10 = (v9 + v7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + v8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = *(void **)v10;
  *(void *)unint64_t v10 = *(void *)v11;

  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  return a1;
}

uint64_t sub_228AD86A0(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v8 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7;
  if (v7 < a2)
  {
    unint64_t v9 = ((v8 + ((v6 + 16) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v10 = (a2 - v7 + 255) >> (8 * v9);
    if (v9 < 4) {
      unsigned int v11 = v10 + 1;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = a1[v9];
        if (!a1[v9]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)&a1[v9];
        if (*(_WORD *)&a1[v9]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x228AD882CLL);
      case 4:
        int v14 = *(_DWORD *)&a1[v9];
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = (v14 - 1) << (8 * v9);
        if (v9 >= 4) {
          int v16 = 0;
        }
        if (((v8 + ((v6 + 16) & ~v6)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v17 = *a1;
        }
        else {
          int v17 = *(_DWORD *)a1;
        }
        return v7 + (v17 | v16) + 1;
      default:
        break;
    }
  }
  uint64_t v18 = (unint64_t)&a1[v6 + 16] & ~v6;
  if (v5 >= 0x7FFFFFFE) {
    return (*(uint64_t (**)(uint64_t))(v4 + 48))(v18);
  }
  unint64_t v19 = *(void *)((v8 + v18) & 0xFFFFFFFFFFFFFFF8);
  if (v19 >= 0xFFFFFFFF) {
    LODWORD(v19) = -1;
  }
  if ((v19 + 1) >= 2) {
    return v19;
  }
  else {
    return 0;
  }
}

void sub_228AD8840(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7;
  size_t v11 = ((v10 + ((v9 + 16) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v12 = 8 * v11;
  if (v8 >= a3)
  {
    int v16 = 0;
    if (v8 >= a2)
    {
LABEL_17:
      switch(v16)
      {
        case 1:
          a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)&a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_46;
        case 4:
          *(_DWORD *)&a1[v11] = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            unint64_t v19 = (unint64_t)&a1[v9 + 16] & ~v9;
            if (v7 < 0x7FFFFFFE)
            {
              uint64_t v21 = (void *)((v10 + v19) & 0xFFFFFFFFFFFFFFF8);
              if (a2 > 0x7FFFFFFE)
              {
                *uint64_t v21 = 0;
                *(_DWORD *)uint64_t v21 = a2 - 0x7FFFFFFF;
              }
              else
              {
                *uint64_t v21 = a2;
              }
            }
            else
            {
              uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
              v20(v19);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v13 = (a3 - v8 + 255) >> v12;
    if (v11 <= 3) {
      unsigned int v14 = v13 + 1;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v14 >= 0x10000) {
      int v15 = 4;
    }
    else {
      int v15 = 2;
    }
    if (v14 < 0x100) {
      int v15 = 1;
    }
    if (v14 >= 2) {
      int v16 = v15;
    }
    else {
      int v16 = 0;
    }
    if (v8 >= a2) {
      goto LABEL_17;
    }
  }
  if (v11 < 4) {
    unsigned int v17 = ((~v8 + a2) >> v12) + 1;
  }
  else {
    unsigned int v17 = 1;
  }
  if (v11 >= 4) {
    unsigned int v18 = ~v8 + a2;
  }
  else {
    unsigned int v18 = (~(_BYTE)v8 + a2);
  }
  bzero(a1, v11);
  if (v11 == 1) {
    *a1 = v18;
  }
  else {
    *(_DWORD *)a1 = v18;
  }
  switch(v16)
  {
    case 1:
      a1[v11] = v17;
      break;
    case 2:
      *(_WORD *)&a1[v11] = v17;
      break;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x228AD8A78);
    case 4:
      *(_DWORD *)&a1[v11] = v17;
      break;
    default:
      return;
  }
}

uint64_t sub_228AD8AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t sub_228AD8AA8()
{
  return swift_release();
}

uint64_t sub_228AD8AB0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  swift_retain();
  return a1;
}

uint64_t sub_228AD8AF8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_228AD8B8C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  return a1;
}

uint64_t sub_228AD8BDC(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 34)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_228AD8C38(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 34) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

uint64_t sub_228AD8C90(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  swift_retain();
  return a1;
}

uint64_t sub_228AD8CE0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  return a1;
}

__n128 __swift_memcpy35_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 31) = *(_DWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_228AD8D7C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  return a1;
}

uint64_t sub_228AD8DD4(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 35)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_228AD8E30(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 34) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 35) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 35) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

uint64_t sub_228AD8E8C()
{
  return swift_getWitnessTable();
}

uint64_t sub_228AD8EA8()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for ResolvedMarker()
{
  uint64_t result = qword_268291F70;
  if (!qword_268291F70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_228AD8F10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MapContentList.Item.Content(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_228AD8F74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_228AD8FDC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_228AD903C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_228B3C2F8(a1, a2);
}

uint64_t sub_228AD905C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

void *sub_228AD906C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_WORD *)(a1 + 17) = *(_WORD *)((char *)a2 + 17);
    uint64_t v7 = a3[8];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_228BACBE8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[9];
    uint64_t v12 = a3[10];
    unsigned int v13 = *(void **)((char *)a2 + v11);
    *(void *)((char *)v4 + v11) = v13;
    *((unsigned char *)v4 + v12) = *((unsigned char *)a2 + v12);
    uint64_t v14 = a3[12];
    *(void *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    int v15 = (char *)v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = sub_228BACE18();
    unsigned int v18 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
    id v19 = v13;
    swift_retain();
    v18(v15, v16, v17);
  }
  return v4;
}

uint64_t sub_228AD91D4(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[8];
  uint64_t v5 = sub_228BACBE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  swift_release();
  uint64_t v6 = a1 + a2[12];
  uint64_t v7 = sub_228BACE18();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t sub_228AD92A4(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_228BACBE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[9];
  uint64_t v11 = a3[10];
  uint64_t v12 = *(void **)(a2 + v10);
  *(void *)(a1 + v1__isPlatformVersionAtLeast(2, 18, 1, 0) = v12;
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v13 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_228BACE18();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
  id v18 = v12;
  swift_retain();
  v17(v14, v15, v16);
  return a1;
}

uint64_t sub_228AD93BC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_228BACBE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[9];
  uint64_t v11 = *(void **)(a1 + v10);
  uint64_t v12 = *(void **)(a2 + v10);
  *(void *)(a1 + v1__isPlatformVersionAtLeast(2, 18, 1, 0) = v12;
  id v13 = v12;

  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  uint64_t v14 = a3[12];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_228BACE18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t sub_228AD94F0(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_228BACBE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v1__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + v10);
  uint64_t v11 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_228BACE18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t sub_228AD95F0(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_228BACBE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[9];
  uint64_t v11 = *(void **)(a1 + v10);
  *(void *)(a1 + v1__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + v10);

  uint64_t v12 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_release();
  uint64_t v13 = a3[12];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_228BACE18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t sub_228AD9704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_228AD9718);
}

uint64_t sub_228AD9718(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_228BACBE8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[8];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v12 = *(void *)(a1 + a3[9]);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
  else
  {
    uint64_t v14 = sub_228BACE18();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a3[12];
    return v15(v17, a2, v16);
  }
}

uint64_t sub_228AD9854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_228AD9868);
}

uint64_t sub_228AD9868(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_228BACBE8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[8];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[9]) = a2;
  }
  else
  {
    uint64_t v13 = sub_228BACE18();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[12];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

uint64_t sub_228AD9998()
{
  uint64_t result = sub_228BACBE8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_228BACE18();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_228AD9A94@<X0>(_DWORD *a1@<X8>)
{
  return sub_228AD7F3C(a1);
}

uint64_t sub_228AD9AAC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_228AD903C(a1, a2);
}

uint64_t sub_228AD9AD8@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  uint64_t v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  unint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v10);
  id v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

void UserAnnotation.init<>(anchor:)(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
}

uint64_t UserAnnotation.init<>()@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_228BAD2D8();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = 0;
  a1[3] = 0;
  return result;
}

uint64_t UserAnnotation.init(anchor:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  return sub_228ADAB04(a1, a2, a3, a4, (uint64_t)sub_228AD9E10, a5, a6, a7);
}

uint64_t sub_228AD9DD8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_228AD9E10()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t static UserAnnotation._mapContentCount(inputs:)()
{
  return 1;
}

uint64_t static UserAnnotation._makeMapContent(content:inputs:)(unsigned int *a1, uint64_t a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291D38);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (int *)&v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _s15_MapKit_SwiftUI05EmptyA7ContentV05_makeaF07content6inputsAA01_aF7OutputsV0cD011_GraphValueVyACG_AA01_aF6InputsVtFZ_0();
  type metadata accessor for UserAnnotation();
  int v8 = sub_228ACB118(a1);
  sub_228BACB28();
  if (v6 != 4) {
    __break(1u);
  }
  int v9 = *v7;
  (*(void (**)(int *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v10 = type metadata accessor for _MapContentInputs(0);
  int v11 = *(_DWORD *)(a2 + *(int *)(v10 + 28));
  v19[0] = v8;
  v19[1] = v9;
  void v19[2] = v11;
  v19[3] = 0;
  uint64_t v20 = 0;
  char v21 = 6;
  MEMORY[0x270FA5388](v10);
  uint64_t List = type metadata accessor for UserAnnotation.MakeList();
  *(void *)&v18[-16] = List;
  *(void *)&v18[-8] = swift_getWitnessTable();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291D48);
  sub_228AC7E20((uint64_t)v19, (uint64_t)sub_228AD7F3C, (uint64_t)&v18[-32], List, MEMORY[0x263F8E628], v13, MEMORY[0x263F8E658], v14);
  uint64_t v15 = swift_release();
  MEMORY[0x270FA5388](v15);
  *(_DWORD *)&v18[-16] = v16;
  sub_228AC19FC();
  return sub_228BACD88();
}

uint64_t sub_228ADA0EC(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v103 = *MEMORY[0x263EF8340];
  uint64_t v85 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x270FA5388](v85);
  uint64_t v93 = &v78[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v86 = type metadata accessor for MapContentList.Item(0);
  uint64_t v87 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v88 = (uint64_t *)&v78[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v84 = type metadata accessor for ResolvedUserAnnotation();
  MEMORY[0x270FA5388](v84);
  uint64_t v91 = &v78[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_228BACAF8();
  uint64_t v89 = *(void *)(v7 - 8);
  id v90 = (void (*)(void, void, void))v7;
  MEMORY[0x270FA5388](v7);
  int v9 = &v78[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291F60);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v78[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = &v78[-v14];
  uint64_t v16 = sub_228BACE18();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v92 = &v78[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v18);
  uint64_t v97 = &v78[-v20];
  int v21 = *((_DWORD *)v2 + 2);
  uint64_t v22 = *(void *)(a1 + 24);
  uint64_t v82 = *(void *)(a1 + 16);
  uint64_t v81 = v22;
  type metadata accessor for UserAnnotation();
  uint64_t Value = (uint64_t *)AGGraphGetValue();
  uint64_t v80 = v24;
  uint64_t v25 = *Value;
  uint64_t v26 = Value[1];
  uint64_t v28 = Value[2];
  uint64_t v27 = Value[3];
  uint64_t v29 = *(int *)(v10 + 48);
  int v30 = *MEMORY[0x263F288F8];
  uint64_t v94 = v17;
  uint64_t v95 = v28;
  uint64_t v96 = v27;
  if (v21 == v30)
  {
    sub_228AD2688(v28);
    sub_228BACE08();
    int v79 = 0;
    v15[v29] = 0;
    uint64_t v39 = v17 + 32;
    uint64_t v37 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32);
    uint64_t v38 = v39 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  }
  else
  {
    uint64_t v31 = AGGraphGetValue();
    uint64_t v32 = v28;
    char v34 = v33;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v17 + 16))(v13, v31, v16);
    v13[v29] = v34 & 1;
    uint64_t v35 = *(int *)(v10 + 48);
    uint64_t v36 = v17 + 32;
    uint64_t v37 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32);
    uint64_t v38 = v36 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v37(v15, v13, v16);
    v15[v29] = v13[v35];
    sub_228AD2688(v32);
    int v79 = v15[v29];
  }
  uint64_t v40 = (unsigned char *)v16;
  uint64_t v83 = v38;
  v37(v97, v15, v16);
  uint64_t v41 = *((void *)v2 + 2);
  char v42 = *((unsigned char *)v2 + 24);
  long long v100 = *v2;
  uint64_t v101 = v41;
  char v102 = v42;
  sub_228ADAE44((uint64_t)v9);
  uint64_t v43 = sub_228BAC9D8();
  uint64_t v44 = v90;
  uint64_t v45 = *(void (**)(void, void))(v89 + 8);
  v45(v9, v90);
  uint64_t v46 = *((void *)v2 + 2);
  char v47 = (v43 | v46) == 0;
  if (v43 && v46)
  {
    swift_retain();
    swift_retain();
    char v47 = sub_228BAD0F8();
    swift_release();
    swift_release();
  }
  char v48 = *((unsigned char *)v2 + 24);
  long long v100 = *v2;
  uint64_t v101 = v46;
  char v102 = v48;
  sub_228ADAE44((uint64_t)v9);
  sub_228AD4B34();
  sub_228BACB08();
  Outputuint64_t Value = ((uint64_t (*)(unsigned char *, void (*)(void, void, void)))v45)(v9, v44);
  int v50 = v100;
  int v51 = *((unsigned __int8 *)v2 + 24);
  if (v100 == 6)
  {
    uint64_t v52 = (uint64_t)v91;
    uint64_t v53 = v95;
    if ((v51 != 6) | v80 & 1 | ((v47 & 1) == 0) | v79 & 1) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v52 = (uint64_t)v91;
    uint64_t v53 = v95;
    if (v51 == 6) {
      goto LABEL_24;
    }
    switch(v100)
    {
      case 5u:
        BOOL v54 = v51 == 5;
        break;
      case 4u:
        BOOL v54 = v51 == 4;
        break;
      case 3u:
        BOOL v54 = v51 == 3;
        break;
      default:
        if ((v51 - 3) < 3 || v80 & 1 | ((v47 & 1) == 0) | v79 & 1 || v100 != v51) {
          goto LABEL_24;
        }
        goto LABEL_21;
    }
    int v55 = !v54;
    if ((v55 | v80) & 1 | ((v47 & 1) == 0) | v79 & 1) {
      goto LABEL_24;
    }
  }
LABEL_21:
  Outputuint64_t Value = AGGraphGetOutputValue();
  if (OutputValue)
  {
    *((unsigned char *)v2 + 24) = v50;
    goto LABEL_33;
  }
LABEL_24:
  id v90 = (void (*)(void, void, void))v37;
  if (v53) {
    uint64_t v56 = v96;
  }
  else {
    uint64_t v56 = 0;
  }
  uint64_t v98 = v53;
  uint64_t v99 = v56;
  MEMORY[0x270FA5388](OutputValue);
  uint64_t v57 = v81;
  *(void *)&v78[-16] = v82;
  *(void *)&v78[-8] = v57;
  sub_228AD2688(v53);
  swift_getFunctionTypeMetadata1();
  sub_228BAD718();
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292180);
  sub_228AD9AD8((void (*)(char *, char *))sub_228ADBEB8, (uint64_t)&v78[-32], MEMORY[0x263F8E628], v58, v59, (uint64_t)&v100);
  sub_228AD2678(v98);
  uint64_t v60 = v100;
  uint64_t v91 = v40;
  if ((void)v100)
  {
    uint64_t v61 = *((void *)&v100 + 1);
    uint64_t v62 = swift_allocObject();
    *(void *)(v62 + 16) = v60;
    *(void *)(v62 + 24) = v61;
    __int16 v63 = sub_228ADBFEC;
  }
  else
  {
    __int16 v63 = 0;
    uint64_t v62 = 0;
  }
  uint64_t v64 = v94;
  LODWORD(v82) = *((_DWORD *)v2 + 3) + 1;
  *((_DWORD *)v2 + 3) = v82;
  int v65 = *(void (**)(uint64_t, unsigned char *, unsigned char *))(v64 + 16);
  int v66 = v97;
  uint64_t v67 = v91;
  v65(v52 + *(int *)(v84 + 32), v97, v91);
  *(void *)uint64_t v52 = v25;
  *(void *)(v52 + 8) = v26;
  *(void *)(v52 + 16) = v63;
  *(void *)(v52 + 24) = v62;
  *(void *)(v52 + 32) = v43;
  LODWORD(v89) = v50;
  *(unsigned char *)(v52 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v50;
  v65((uint64_t)v92, v66, v67);
  sub_228ADBEEC(v52, (uint64_t)v93, (uint64_t (*)(void))type metadata accessor for ResolvedUserAnnotation);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_228AD2688((uint64_t)v63);
  sub_228ACAF54();
  sub_228BACE28();
  uint64_t v68 = v100;
  uint64_t v69 = (uint64_t)v63;
  if (!(void)v100)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_268291998);
    uint64_t v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = xmmword_228BAF4E0;
    *(void *)(v68 + 32) = 0;
    *(unsigned char *)(v68 + 72) = 0;
  }
  uint64_t v70 = (uint64_t)v88;
  uint64_t *v88 = v68;
  uint64_t v71 = v86;
  uint64_t v72 = v91;
  v90(v70 + *(int *)(v86 + 28), v92, v91);
  *(_DWORD *)(v70 + 8) = v82;
  sub_228AD8F10((uint64_t)v93, v70 + *(int *)(v71 + 24));
  __swift_instantiateConcreteTypeFromMangledName(&qword_268291F68);
  unint64_t v73 = (*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
  uint64_t v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = xmmword_228BAF4E0;
  sub_228ADBEEC(v70, v74 + v73, type metadata accessor for MapContentList.Item);
  *(void *)&long long v100 = sub_228B78CF8(v74);
  *((void *)&v100 + 1) = v75;
  AGGraphSetOutputValue();
  sub_228AD2678(v69);
  swift_bridgeObjectRelease();
  uint64_t v76 = v70;
  uint64_t v40 = v72;
  sub_228ADBF54(v76, type metadata accessor for MapContentList.Item);
  sub_228ADBF54(v52, (uint64_t (*)(void))type metadata accessor for ResolvedUserAnnotation);
  *((unsigned char *)v2 + 24) = v89;
LABEL_33:
  *((void *)v2 + 2) = v43;
  swift_retain();
  swift_release();
  sub_228AD2678(v95);
  swift_release();
  return (*(uint64_t (**)(unsigned char *, unsigned char *))(v94 + 8))(v97, v40);
}

uint64_t sub_228ADAAD4(unsigned int *a1, uint64_t a2)
{
  return static UserAnnotation._makeMapContent(content:inputs:)(a1, a2);
}

uint64_t SelectedUserAnnotation.init(anchor:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  return sub_228ADAB04(a1, a2, a3, a4, (uint64_t)sub_228ADC878, a5, a6, a7);
}

uint64_t sub_228ADAB04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = a1;
  v16[5] = a2;
  uint64_t result = sub_228AD2678(0);
  *(double *)a6 = a7;
  *(double *)(a6 + 8) = a8;
  *(void *)(a6 + 16) = a5;
  *(void *)(a6 + 24) = v16;
  return result;
}

uint64_t _s15_MapKit_SwiftUI14UserAnnotationV6anchor7contentACyxG0cD09UnitPointV_xAA0E8LocationVctcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  *(double *)a3 = a4;
  *(double *)(a3 + 8) = a5;
  *(void *)(a3 + 16) = result;
  *(void *)(a3 + 24) = a2;
  return result;
}

uint64_t static SelectedUserAnnotation._makeMapContent(content:inputs:)(unsigned int *a1, uint64_t a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291D38);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (int *)&v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _s15_MapKit_SwiftUI05EmptyA7ContentV05_makeaF07content6inputsAA01_aF7OutputsV0cD011_GraphValueVyACG_AA01_aF6InputsVtFZ_0();
  type metadata accessor for SelectedUserAnnotation();
  int v8 = sub_228ACB118(a1);
  sub_228BACB28();
  if (v6 != 4) {
    __break(1u);
  }
  int v9 = *v7;
  (*(void (**)(int *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v10 = type metadata accessor for _MapContentInputs(0);
  int v11 = *(_DWORD *)(a2 + *(int *)(v10 + 28));
  v19[0] = v8;
  v19[1] = v9;
  void v19[2] = v11;
  v19[3] = 0;
  uint64_t v20 = 0;
  char v21 = 6;
  MEMORY[0x270FA5388](v10);
  uint64_t List = type metadata accessor for SelectedUserAnnotation.MakeList();
  *(void *)&v18[-16] = List;
  *(void *)&v18[-8] = swift_getWitnessTable();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291D48);
  sub_228AC7E20((uint64_t)v19, (uint64_t)sub_228AD9A94, (uint64_t)&v18[-32], List, MEMORY[0x263F8E628], v13, MEMORY[0x263F8E658], v14);
  uint64_t v15 = swift_release();
  MEMORY[0x270FA5388](v15);
  *(_DWORD *)&v18[-16] = v16;
  sub_228AC1FD0();
  return sub_228BACD88();
}

uint64_t sub_228ADAE44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_228BACAF8();
  uint64_t Value = AGGraphGetValue();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, Value, v2);
}

uint64_t sub_228ADAECC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v103 = *MEMORY[0x263EF8340];
  uint64_t v85 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x270FA5388](v85);
  uint64_t v93 = &v78[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v86 = type metadata accessor for MapContentList.Item(0);
  uint64_t v87 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v88 = (uint64_t *)&v78[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v84 = type metadata accessor for ResolvedUserAnnotation();
  MEMORY[0x270FA5388](v84);
  uint64_t v91 = &v78[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_228BACAF8();
  uint64_t v89 = *(void *)(v7 - 8);
  id v90 = (void (*)(void, void, void))v7;
  MEMORY[0x270FA5388](v7);
  int v9 = &v78[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291F60);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v78[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = &v78[-v14];
  uint64_t v16 = sub_228BACE18();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v92 = &v78[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v18);
  uint64_t v97 = &v78[-v20];
  int v21 = *((_DWORD *)v2 + 2);
  uint64_t v22 = *(void *)(a1 + 24);
  uint64_t v82 = *(void *)(a1 + 16);
  uint64_t v81 = v22;
  type metadata accessor for SelectedUserAnnotation();
  uint64_t Value = (uint64_t *)AGGraphGetValue();
  uint64_t v80 = v24;
  uint64_t v25 = *Value;
  uint64_t v26 = Value[1];
  uint64_t v28 = Value[2];
  uint64_t v27 = Value[3];
  uint64_t v29 = *(int *)(v10 + 48);
  int v30 = *MEMORY[0x263F288F8];
  uint64_t v94 = v17;
  uint64_t v95 = v28;
  uint64_t v96 = v27;
  if (v21 == v30)
  {
    sub_228AD2688(v28);
    sub_228BACE08();
    int v79 = 0;
    v15[v29] = 0;
    uint64_t v39 = v17 + 32;
    uint64_t v37 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32);
    uint64_t v38 = v39 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  }
  else
  {
    uint64_t v31 = AGGraphGetValue();
    uint64_t v32 = v28;
    char v34 = v33;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v17 + 16))(v13, v31, v16);
    v13[v29] = v34 & 1;
    uint64_t v35 = *(int *)(v10 + 48);
    uint64_t v36 = v17 + 32;
    uint64_t v37 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32);
    uint64_t v38 = v36 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v37(v15, v13, v16);
    v15[v29] = v13[v35];
    sub_228AD2688(v32);
    int v79 = v15[v29];
  }
  uint64_t v40 = (unsigned char *)v16;
  uint64_t v83 = v38;
  v37(v97, v15, v16);
  uint64_t v41 = *((void *)v2 + 2);
  char v42 = *((unsigned char *)v2 + 24);
  long long v100 = *v2;
  uint64_t v101 = v41;
  char v102 = v42;
  sub_228ADAE44((uint64_t)v9);
  uint64_t v43 = sub_228BAC9D8();
  uint64_t v44 = v90;
  uint64_t v45 = *(void (**)(void, void))(v89 + 8);
  v45(v9, v90);
  uint64_t v46 = *((void *)v2 + 2);
  char v47 = (v43 | v46) == 0;
  if (v43 && v46)
  {
    swift_retain();
    swift_retain();
    char v47 = sub_228BAD0F8();
    swift_release();
    swift_release();
  }
  char v48 = *((unsigned char *)v2 + 24);
  long long v100 = *v2;
  uint64_t v101 = v46;
  char v102 = v48;
  sub_228ADAE44((uint64_t)v9);
  sub_228AD4B34();
  sub_228BACB08();
  Outputuint64_t Value = ((uint64_t (*)(unsigned char *, void (*)(void, void, void)))v45)(v9, v44);
  int v50 = v100;
  int v51 = *((unsigned __int8 *)v2 + 24);
  if (v100 == 6)
  {
    uint64_t v52 = (uint64_t)v91;
    uint64_t v53 = v95;
    if ((v51 != 6) | v80 & 1 | ((v47 & 1) == 0) | v79 & 1) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v52 = (uint64_t)v91;
    uint64_t v53 = v95;
    if (v51 == 6) {
      goto LABEL_24;
    }
    switch(v100)
    {
      case 5u:
        BOOL v54 = v51 == 5;
        break;
      case 4u:
        BOOL v54 = v51 == 4;
        break;
      case 3u:
        BOOL v54 = v51 == 3;
        break;
      default:
        if ((v51 - 3) < 3 || v80 & 1 | ((v47 & 1) == 0) | v79 & 1 || v100 != v51) {
          goto LABEL_24;
        }
        goto LABEL_21;
    }
    int v55 = !v54;
    if ((v55 | v80) & 1 | ((v47 & 1) == 0) | v79 & 1) {
      goto LABEL_24;
    }
  }
LABEL_21:
  Outputuint64_t Value = AGGraphGetOutputValue();
  if (OutputValue)
  {
    *((unsigned char *)v2 + 24) = v50;
    goto LABEL_33;
  }
LABEL_24:
  id v90 = (void (*)(void, void, void))v37;
  if (v53) {
    uint64_t v56 = v96;
  }
  else {
    uint64_t v56 = 0;
  }
  uint64_t v98 = v53;
  uint64_t v99 = v56;
  MEMORY[0x270FA5388](OutputValue);
  uint64_t v57 = v81;
  *(void *)&v78[-16] = v82;
  *(void *)&v78[-8] = v57;
  sub_228AD2688(v53);
  swift_getFunctionTypeMetadata1();
  sub_228BAD718();
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292180);
  sub_228AD9AD8((void (*)(char *, char *))sub_228ADC044, (uint64_t)&v78[-32], MEMORY[0x263F8E628], v58, v59, (uint64_t)&v100);
  sub_228AD2678(v98);
  uint64_t v60 = v100;
  uint64_t v91 = v40;
  if ((void)v100)
  {
    uint64_t v61 = *((void *)&v100 + 1);
    uint64_t v62 = swift_allocObject();
    *(void *)(v62 + 16) = v60;
    *(void *)(v62 + 24) = v61;
    __int16 v63 = sub_228ADC854;
  }
  else
  {
    __int16 v63 = 0;
    uint64_t v62 = 0;
  }
  uint64_t v64 = v94;
  LODWORD(v82) = *((_DWORD *)v2 + 3) + 1;
  *((_DWORD *)v2 + 3) = v82;
  int v65 = *(void (**)(uint64_t, unsigned char *, unsigned char *))(v64 + 16);
  int v66 = v97;
  uint64_t v67 = v91;
  v65(v52 + *(int *)(v84 + 32), v97, v91);
  *(void *)uint64_t v52 = v25;
  *(void *)(v52 + 8) = v26;
  *(void *)(v52 + 16) = v63;
  *(void *)(v52 + 24) = v62;
  *(void *)(v52 + 32) = v43;
  LODWORD(v89) = v50;
  *(unsigned char *)(v52 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v50;
  v65((uint64_t)v92, v66, v67);
  sub_228ADBEEC(v52, (uint64_t)v93, (uint64_t (*)(void))type metadata accessor for ResolvedUserAnnotation);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_228AD2688((uint64_t)v63);
  sub_228ACAF54();
  sub_228BACE28();
  uint64_t v68 = v100;
  uint64_t v69 = (uint64_t)v63;
  if (!(void)v100)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_268291998);
    uint64_t v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = xmmword_228BAF4E0;
    *(void *)(v68 + 32) = 0;
    *(unsigned char *)(v68 + 72) = 0;
  }
  uint64_t v70 = (uint64_t)v88;
  uint64_t *v88 = v68;
  uint64_t v71 = v86;
  uint64_t v72 = v91;
  v90(v70 + *(int *)(v86 + 28), v92, v91);
  *(_DWORD *)(v70 + 8) = v82;
  sub_228AD8F10((uint64_t)v93, v70 + *(int *)(v71 + 24));
  __swift_instantiateConcreteTypeFromMangledName(&qword_268291F68);
  unint64_t v73 = (*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
  uint64_t v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = xmmword_228BAF4E0;
  sub_228ADBEEC(v70, v74 + v73, type metadata accessor for MapContentList.Item);
  *(void *)&long long v100 = sub_228B78CF8(v74);
  *((void *)&v100 + 1) = v75;
  AGGraphSetOutputValue();
  sub_228AD2678(v69);
  swift_bridgeObjectRelease();
  uint64_t v76 = v70;
  uint64_t v40 = v72;
  sub_228ADBF54(v76, type metadata accessor for MapContentList.Item);
  sub_228ADBF54(v52, (uint64_t (*)(void))type metadata accessor for ResolvedUserAnnotation);
  *((unsigned char *)v2 + 24) = v89;
LABEL_33:
  *((void *)v2 + 2) = v43;
  swift_retain();
  swift_release();
  sub_228AD2678(v95);
  swift_release();
  return (*(uint64_t (**)(unsigned char *, unsigned char *))(v94 + 8))(v97, v40);
}

uint64_t sub_228ADB8B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  long long v5 = *(_OWORD *)MEMORY[0x270FA5388](a1);
  v3(&v5);
  uint64_t result = sub_228BAD1C8();
  *a2 = result;
  return result;
}

uint64_t sub_228ADB964(unsigned int *a1, uint64_t a2)
{
  return static SelectedUserAnnotation._makeMapContent(content:inputs:)(a1, a2);
}

uint64_t type metadata accessor for UserAnnotation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for UserAnnotation.MakeList()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for SelectedUserAnnotation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for SelectedUserAnnotation.MakeList()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_228ADB9D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_228ADB9EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_228ADB9F4(uint64_t result)
{
  if (*(void *)(result + 16)) {
    return swift_release();
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultUserAnnotationContent()
{
  return &type metadata for DefaultUserAnnotationContent;
}

uint64_t sub_228ADBA2C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v3;
    *(void *)(a1 + 24) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  return a1;
}

void *sub_228ADBA80(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v3 = a1 + 2;
  long long v5 = a2 + 2;
  uint64_t v4 = a2[2];
  if (!a1[2])
  {
    if (v4)
    {
      uint64_t v7 = a2[3];
      a1[2] = v4;
      a1[3] = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    _OWORD *v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = a2[3];
  a1[2] = v4;
  a1[3] = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_228ADBB14(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = (_OWORD *)(a1 + 16);
  long long v5 = (_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v4)
    {
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v4;
      *(void *)(a1 + 24) = v7;
      return a1;
    }
LABEL_7:
    _OWORD *v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v6;
  swift_release();
  return a1;
}

uint64_t sub_228ADBB94(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_228ADBBF0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

uint64_t sub_228ADBC44()
{
  return MEMORY[0x263F1BA00];
}

uint64_t sub_228ADBC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t destroy for MapPin()
{
  return swift_release();
}

uint64_t sub_228ADBC88(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t sub_228ADBCC8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t sub_228ADBD38(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t sub_228ADBD80(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_228ADBDDC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

uint64_t sub_228ADBE34()
{
  return swift_getWitnessTable();
}

uint64_t sub_228ADBE50()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for ResolvedUserAnnotation()
{
  uint64_t result = qword_268292188;
  if (!qword_268292188) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_228ADBEB8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_228ADC078(a1, (uint64_t)sub_228ADC024, a2);
}

uint64_t sub_228ADBEEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_228ADBF54(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_228ADBFB4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_228ADBFEC()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_228ADC024@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_228ADB8B0(a1, a2);
}

uint64_t sub_228ADC044@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_228ADC078(a1, (uint64_t)sub_228ADC874, a2);
}

uint64_t sub_228ADC078@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, void *a3@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(v3 + 16);
  *(void *)(v8 + 32) = v7;
  *(void *)(v8 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v6;
  *a3 = a2;
  a3[1] = v8;
  return swift_retain();
}

_OWORD *sub_228ADC0E0(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)int v4 = *a2;
    int v4 = (_OWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    uint64_t v7 = a2[2];
    if (v7)
    {
      uint64_t v8 = a2[3];
      *((void *)v4 + 2) = v7;
      *((void *)v4 + 3) = v8;
      swift_retain();
    }
    else
    {
      a1[1] = *((_OWORD *)a2 + 1);
    }
    *((void *)v4 + 4) = a2[4];
    *((unsigned char *)v4 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *((unsigned char *)a2 + 40);
    uint64_t v10 = *(int *)(a3 + 32);
    uint64_t v11 = (char *)v4 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    uint64_t v13 = sub_228BACE18();
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_retain();
    v14(v11, v12, v13);
  }
  return v4;
}

uint64_t sub_228ADC208(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16)) {
    swift_release();
  }
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_228BACE18();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_228ADC290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_228BACE18();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_retain();
  v12(v9, v10, v11);
  return a1;
}

uint64_t sub_228ADC368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = (_OWORD *)(a1 + 16);
  uint64_t v8 = (_OWORD *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v7)
    {
      uint64_t v10 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v10;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *uint64_t v6 = *v8;
    goto LABEL_8;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v9;
  swift_retain();
  swift_release();
LABEL_8:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_228BACE18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_228ADC474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_228BACE18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t sub_228ADC524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = (_OWORD *)(a1 + 16);
  uint64_t v8 = (_OWORD *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v7)
    {
      uint64_t v10 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v10;
      goto LABEL_8;
    }
LABEL_7:
    *uint64_t v6 = *v8;
    goto LABEL_8;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v9;
  swift_release();
LABEL_8:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_228BACE18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_228ADC614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_228ADC628);
}

uint64_t sub_228ADC628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_228BACE18();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 32);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_228ADC6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_228ADC6F8);
}

uint64_t sub_228ADC6F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 16) = a2;
  }
  else
  {
    uint64_t v7 = sub_228BACE18();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_228ADC7A0()
{
  uint64_t result = sub_228BACE18();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_228ADC884(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_228BACDB8();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_228ADC968(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_228BACDB8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_228ADC9E0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_228BACDB8();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *sub_228ADCA78(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_228BACDB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_228ADCB0C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_228BACDB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_228ADCB88(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_228BACDB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_228ADCC14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_228ADCC28);
}

uint64_t sub_228ADCC28(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for _MapContentOutputs(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_228ADCCD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_228ADCCEC);
}

void *sub_228ADCCEC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for _MapContentOutputs(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MultiPreferenceCombinerVisitor()
{
  uint64_t result = qword_268292198;
  if (!qword_268292198) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_228ADCDE0()
{
  uint64_t result = sub_228BACDB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_228ADCE7C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  char v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v26 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_228BAD628();
  if (!v18) {
    return sub_228BAD4F8();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_228BAD328();
  uint64_t v32 = sub_228BAD8F8();
  sub_228BAD898();
  uint64_t v36 = v8;
  uint64_t result = sub_228BAD618();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    char v34 = (void (**)(char *))(v33 + 2);
    uint64_t v35 = v14;
    ++v33;
    while (1)
    {
      int v21 = (void (*)(char *, void))sub_228BAD658();
      uint64_t v22 = v12;
      int v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_228BAD8D8();
      sub_228BAD648();
      --v19;
      uint64_t v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t sub_228ADD27C@<X0>(uint64_t a1@<X0>, void (**a2)(char *, uint64_t, uint64_t)@<X1>, void (**a3)(char *, uint64_t, uint64_t)@<X2>, char *a4@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  char v33 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v39 = (char *)&v32 - v12;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  sub_228BAC6F8();
  uint64_t v13 = sub_228BAC468();
  uint64_t v14 = swift_bridgeObjectRetain();
  if (MEMORY[0x22A6A6CB0](v14, v13))
  {
    uint64_t v38 = a4;
    uint64_t v15 = 0;
    uint64_t v32 = (void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    char v34 = (void (**)(uint64_t, uint64_t))(v9 + 8);
    uint64_t v35 = v13;
    uint64_t v16 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v17 = a1 + 36;
    char v18 = 1;
    while (1)
    {
      char v22 = sub_228BAD518();
      uint64_t v23 = sub_228BAD4C8();
      if (v22)
      {
        uint64_t v24 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_14;
        }
      }
      else
      {
        sub_228BAD838();
        uint64_t v23 = swift_unknownObjectRelease();
        uint64_t v24 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_14:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      if (v18)
      {
        Weakuint64_t Value = AGGraphGetWeakValue();
        if (WeakValue)
        {
          uint64_t v26 = a1;
          uint64_t v27 = v33;
          (*v32)(v33, WeakValue, AssociatedTypeWitness);
          uint64_t v28 = v38;
          (*v34)((uint64_t)v38, AssociatedTypeWitness);
          uint64_t v29 = *v16;
          uint64_t v30 = v27;
          a1 = v26;
          (*v16)(v39, v30, AssociatedTypeWitness);
        }
        else
        {
          sub_228BAC6F8();
          uint64_t v28 = v38;
          (*v34)((uint64_t)v38, AssociatedTypeWitness);
          uint64_t v29 = *v16;
        }
        v29(v28, v39, AssociatedTypeWitness);
        uint64_t v13 = v35;
      }
      else
      {
        MEMORY[0x270FA5388](v23);
        uint64_t v19 = v37;
        *(&v32 - 4) = v36;
        *(&v32 - 3) = v19;
        *((_DWORD *)&v32 - 4) = v20;
        *((_DWORD *)&v32 - 3) = v21;
        sub_228BAC708();
      }
      char v18 = 0;
      v17 += 8;
      ++v15;
      if (v24 == MEMORY[0x22A6A6CB0](a1, v13)) {
        return swift_bridgeObjectRelease();
      }
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_228ADD5D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  Weakuint64_t Value = AGGraphGetWeakValue();
  if (!WeakValue) {
    return sub_228BAC6F8();
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);

  return v4(a1, WeakValue, AssociatedTypeWitness);
}

uint64_t sub_228ADD6AC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_228ADD27C(*v2, *(void (***)(char *, uint64_t, uint64_t))(a1 + 16), *(void (***)(char *, uint64_t, uint64_t))(a1 + 24), a2);
}

uint64_t sub_228ADD6BC()
{
  return sub_228ADE17C();
}

uint64_t sub_228ADD6C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t Value = AGGraphGetValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, Value, AssociatedTypeWitness);
  return sub_228BAC708();
}

uint64_t sub_228ADD7A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t Value = AGGraphGetValue();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);

  return v4(a1, Value, AssociatedTypeWitness);
}

uint64_t sub_228ADD84C@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);

  return v3(a1, 1, 1, AssociatedTypeWitness);
}

uint64_t sub_228ADD8CC@<X0>(uint64_t a1@<X8>)
{
  return sub_228ADD6C8(a1);
}

uint64_t sub_228ADD8DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v31[6] = *MEMORY[0x263EF8340];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_228BAC5E8();
  uint64_t v8 = sub_228BAD718();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v29 = v3;
  v31[0] = *v3;
  v31[3] = a2;
  v31[4] = a3;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2682921A8);
  uint64_t v12 = sub_228BAC488();
  sub_228ADDF34();
  uint64_t v13 = sub_228BAD468();
  swift_bridgeObjectRelease();
  uint64_t v14 = MEMORY[0x22A6A6C90](v13, v12);
  switch(v14)
  {
    case 2:
      sub_228BAD588();
      uint64_t v28 = v8;
      unsigned int v16 = v31[0];
      sub_228BAD588();
      uint64_t v17 = swift_bridgeObjectRelease();
      uint64_t v26 = &v25;
      v31[0] = __PAIR64__(v31[0], v16);
      MEMORY[0x270FA5388](v17);
      uint64_t v27 = v9;
      *(&v25 - 4) = AssociatedTypeWitness;
      uint64_t v18 = type metadata accessor for PairPreferenceCombiner();
      *(&v25 - 3) = v18;
      *(&v25 - 2) = swift_getWitnessTable();
      sub_228AC7E20((uint64_t)v31, (uint64_t)sub_228ADE1D0, (uint64_t)(&v25 - 6), v18, MEMORY[0x263F8E628], v12, MEMORY[0x263F8E658], v19);
      break;
    case 1:
      sub_228BAD588();
      swift_bridgeObjectRelease();
      sub_228ACB078(v31[0], (uint64_t)v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v11, 0, 1, v7);
      type metadata accessor for MultiPreferenceCombinerVisitor();
      sub_228AC1E68((uint64_t)v11);
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    case 0:
      return swift_bridgeObjectRelease();
    default:
      uint64_t v20 = sub_228ADDF90(v13, a2, a3);
      uint64_t v28 = v8;
      uint64_t v21 = v20;
      uint64_t v22 = swift_bridgeObjectRelease();
      uint64_t v26 = &v25;
      v31[0] = v21;
      MEMORY[0x270FA5388](v22);
      uint64_t v27 = v9;
      *(&v25 - 4) = AssociatedTypeWitness;
      uint64_t v23 = type metadata accessor for PreferenceCombiner();
      *(&v25 - 3) = v23;
      *(&v25 - 2) = swift_getWitnessTable();
      sub_228AC7E20((uint64_t)v31, (uint64_t)sub_228AC986C, (uint64_t)(&v25 - 6), v23, MEMORY[0x263F8E628], v12, MEMORY[0x263F8E658], v24);
      swift_bridgeObjectRelease();
      break;
  }
  sub_228ACB078(v30, (uint64_t)v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v11, 0, 1, v7);
  type metadata accessor for MultiPreferenceCombinerVisitor();
  sub_228AC1E68((uint64_t)v11);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v11, v28);
}

uint64_t sub_228ADDD90@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  sub_228BAC5E8();
  uint64_t v6 = sub_228BAD718();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v13[-v8];
  sub_228ABFA6C();
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  uint64_t v10 = sub_228BAC488();
  sub_228AD9AD8((void (*)(char *, char *))sub_228AC2A90, (uint64_t)v13, MEMORY[0x263F8E628], v10, v11, a3);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_228ADDF18@<X0>(uint64_t a1@<X8>)
{
  return sub_228ADDD90(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_228ADDF34()
{
  unint64_t result = qword_2682921B0[0];
  if (!qword_2682921B0[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2682921A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2682921B0);
  }
  return result;
}

uint64_t sub_228ADDF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v8[5] = a1;
  v8[2] = a2;
  v8[3] = a3;
  swift_getAssociatedTypeWitness();
  sub_228BAC488();
  uint64_t v3 = sub_228BAD568();
  uint64_t v4 = sub_228BAC468();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_228ADCE7C((void (*)(char *, char *))sub_228ADE0A4, (uint64_t)v8, v3, v4, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v6);
}

uint64_t type metadata accessor for PreferenceCombiner()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for PairPreferenceCombiner()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_228ADE0A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AGCreateWeakAttribute();
  *a1 = result;
  return result;
}

void *__swift_memcpy8_4(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MapViewReference(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MapViewReference(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

uint64_t sub_228ADE12C()
{
  return swift_getWitnessTable();
}

uint64_t sub_228ADE148()
{
  return swift_getWitnessTable();
}

uint64_t sub_228ADE164@<X0>(uint64_t a1@<X8>)
{
  return sub_228ADD5D0(a1);
}

uint64_t sub_228ADE170@<X0>(uint64_t a1@<X8>)
{
  return sub_228ADD7A8(a1);
}

uint64_t sub_228ADE17C()
{
  return 548047074;
}

uint64_t sub_228ADE1D0@<X0>(_DWORD *a1@<X8>)
{
  return sub_228AC986C(a1);
}

uint64_t MapAnnotation.init(coordinate:anchorPoint:content:)@<X0>(uint64_t (*a1)(void)@<X0>, double *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  *a2 = a3;
  a2[1] = a4;
  a2[2] = a5;
  a2[3] = a6;
  type metadata accessor for MapAnnotation();
  return a1();
}

uint64_t type metadata accessor for MapAnnotation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t MapAnnotation._annotationData.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  (*(void (**)(char *))(v4 + 16))(v6);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = *(_OWORD *)(a1 + 16);
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v4 + 32))(v11 + v10, v6, a1);
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v9;
  *(unsigned char *)(a2 + 16) = 2;
  *(void *)(a2 + 24) = sub_228ADE5F4;
  *(void *)(a2 + 32) = v11;
  return result;
}

void sub_228ADE390(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SwiftUIAnnotationView();
  uint64_t v10 = swift_dynamicCastClass();
  if (v10)
  {
    uint64_t v11 = (char *)v10;
    uint64_t v12 = type metadata accessor for MapAnnotation();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3 + *(int *)(v12 + 40), a4);
    id v13 = a1;
    uint64_t v14 = sub_228BAD1C8();
    sub_228BA813C(v14);
    swift_release();
    double v15 = *(double *)(a3 + 16);
    double v16 = *(double *)(a3 + 24);
    uint64_t v17 = (double *)&v11[OBJC_IVAR____TtC15_MapKit_SwiftUI21SwiftUIAnnotationView_contentAnchorPoint];
    double *v17 = v15;
    v17[1] = v16;
    objc_msgSend(v11, sel_frame);
    objc_msgSend(v11, sel_setCenterOffset_, v18 * 0.5 - v15 * v18, v19 * 0.5 - v16 * v19);
  }
}

uint64_t sub_228ADE518()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for MapAnnotation();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ *(int *)(v2 + 40)+ ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)), v1);

  return swift_deallocObject();
}

void sub_228ADE5F4(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(type metadata accessor for MapAnnotation() - 8);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  sub_228ADE390(a1, a2, v7, v5);
}

uint64_t MapPin.init(coordinate:tint:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(void *)(a2 + 16) = result;
  return result;
}

uint64_t MapPin._annotationData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_228ADE73C(0, (uint64_t)sub_228ADE6C4, a1);
}

void sub_228ADE6C4(void *a1, uint64_t a2)
{
  sub_228ADE7B0(a1, a2, *(void *)(v2 + 32), 0x263F109D0, (SEL *)&selRef_setPinTintColor_);
}

uint64_t sub_228ADE6F4@<X0>(uint64_t a1@<X8>)
{
  return sub_228ADE910(0, (uint64_t)sub_228ADF6C8, a1);
}

uint64_t MapMarker._annotationData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_228ADE73C(1, (uint64_t)sub_228ADE8BC, a1);
}

uint64_t sub_228ADE73C@<X0>(char a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v7 = *v3;
  uint64_t v8 = v3[1];
  uint64_t v9 = v3[2];
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v7;
  v10[3] = v8;
  v10[4] = v9;
  *(void *)a3 = v7;
  *(void *)(a3 + 8) = v8;
  *(unsigned char *)(a3 + 16) = a1;
  *(void *)(a3 + 24) = a2;
  *(void *)(a3 + 32) = v10;

  return swift_retain();
}

void sub_228ADE7B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  self;
  uint64_t v8 = (void *)swift_dynamicCastObjCClass();
  if (v8)
  {
    uint64_t v9 = v8;
    if (a3)
    {
      sub_228ADF674();
      swift_retain_n();
      id v12 = a1;
      uint64_t v10 = (void *)sub_228BAD6D8();
      objc_msgSend(v9, *a5, v10);
      swift_release();
    }
    else
    {
      uint64_t v11 = *a5;
      objc_msgSend(v8, v11, 0);
    }
  }
}

void sub_228ADE8BC(void *a1, uint64_t a2)
{
  sub_228ADE7B0(a1, a2, *(void *)(v2 + 32), 0x263F109B0, (SEL *)&selRef_setMarkerTintColor_);
}

uint64_t sub_228ADE8EC@<X0>(uint64_t a1@<X8>)
{
  return sub_228ADE910(1, (uint64_t)sub_228ADF6C4, a1);
}

uint64_t sub_228ADE910@<X0>(char a1@<W3>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v7 = *v3;
  uint64_t v8 = v3[1];
  uint64_t v9 = v3[2];
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v7;
  v10[3] = v8;
  v10[4] = v9;
  *(void *)a3 = v7;
  *(void *)(a3 + 8) = v8;
  *(unsigned char *)(a3 + 16) = a1;
  *(void *)(a3 + 24) = a2;
  *(void *)(a3 + 32) = v10;

  return swift_retain();
}

uint64_t dispatch thunk of MapAnnotationProtocol._annotationData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_228ADE99C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_228ADEA38(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 32) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) > 0x18)
  {
    uint64_t v8 = *a2;
    uint64_t *v3 = *a2;
    char v3 = (uint64_t *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v9 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v10 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v9 = *v10;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)v9 + v5 + 16) & ~v5, ((unint64_t)v10 + v5 + 16) & ~v5);
  }
  return v3;
}

uint64_t sub_228ADEB3C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
}

_OWORD *sub_228ADEB80(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 16))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_228ADEC08(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  v4[1] = v5[1];
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_OWORD *sub_228ADECA0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_OWORD *sub_228ADED28(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  v4[1] = v5[1];
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_228ADEDB4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v8 = ((v6 + 32) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8)
      }
                                                                      + v6
                                                                      + 16) & ~v6);
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_228ADEF38(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  size_t v9 = ((v8 + 32) & ~v8) + *(void *)(v6 + 64);
  BOOL v10 = a3 >= v7;
  unsigned int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v9 < 4)
    {
      int v14 = (v13 >> (8 * v9)) + 1;
      if (v9)
      {
        int v16 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v9] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x228ADF174);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v17 = (((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v8 + 16) & ~v8;
        double v18 = *(void (**)(unint64_t))(v6 + 56);
        v18(v17);
      }
      return;
  }
}

uint64_t initializeBufferWithCopyOfBuffer for MapPin(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MapPin(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for MapPin()
{
  return &type metadata for MapPin;
}

void *_s15_MapKit_SwiftUI6MapPinVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s15_MapKit_SwiftUI6MapPinVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s15_MapKit_SwiftUI6MapPinVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MapMarker()
{
  return &type metadata for MapMarker;
}

uint64_t destroy for _MapAnnotationData()
{
  return swift_release();
}

uint64_t initializeWithCopy for _MapAnnotationData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for _MapAnnotationData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for _MapAnnotationData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for _MapAnnotationData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _MapAnnotationData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _MapAnnotationData()
{
  return &type metadata for _MapAnnotationData;
}

unsigned char *storeEnumTagSinglePayload for _MapAnnotationData.ViewType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x228ADF5ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _MapAnnotationData.ViewType()
{
  return &type metadata for _MapAnnotationData.ViewType;
}

unint64_t sub_228ADF5E8()
{
  unint64_t result = qword_268292338;
  if (!qword_268292338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268292338);
  }
  return result;
}

uint64_t sub_228ADF63C()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_228ADF674()
{
  unint64_t result = qword_268292340;
  if (!qword_268292340)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268292340);
  }
  return result;
}

uint64_t View.mapCameraKeyframeAnimator<A, B>(trigger:keyframes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v25 = a9;
  uint64_t v23 = a6;
  uint64_t v24 = a2;
  uint64_t v16 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  double v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, a5);
  uint64_t v19 = sub_228AD3CFC((uint64_t)v18);
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = a4;
  v20[3] = a5;
  v20[4] = v23;
  v20[5] = a7;
  v20[6] = a8;
  v20[7] = a10;
  v20[8] = v24;
  v20[9] = a3;
  uint64_t v26 = v19;
  uint64_t v27 = sub_228ADF9F0;
  uint64_t v28 = v20;
  swift_retain();
  sub_228BAD028();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_228ADF868()
{
  sub_228AE0840();
  sub_228BACB08();
  return v1;
}

double sub_228ADF8A8@<D0>(uint64_t a1@<X8>)
{
  sub_228AE0840();
  sub_228BACB08();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  return result;
}

double sub_228ADF900@<D0>(uint64_t a1@<X8>)
{
  sub_228AE0840();
  sub_228BACB08();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_228ADF958(uint64_t *a1)
{
  return sub_228BACB18();
}

uint64_t sub_228ADF9B8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_228ADF9F0()
{
  return sub_228BAC888();
}

uint64_t sub_228ADFA80()
{
  return swift_getWitnessTable();
}

unint64_t sub_228ADFAF4()
{
  unint64_t result = qword_268292350;
  if (!qword_268292350)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268292348);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268292350);
  }
  return result;
}

char *sub_228ADFB50(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
    (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    size_t v9 = &a1[v8];
    BOOL v10 = (char *)a2 + v8;
    uint64_t v11 = sub_228BAC418();
    int v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[*(int *)(a3 + 24)], (char *)a2 + *(int *)(a3 + 24), v11);
  }
  return a1;
}

uint64_t sub_228ADFC8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_228BAC418();
  size_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v9)((void *)(v6 - 8), v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);

  return v9(v7, v6);
}

uint64_t sub_228ADFD70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_228BAC418();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v10);
  return a1;
}

uint64_t sub_228ADFE5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_228BAC418();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v10);
  return a1;
}

uint64_t sub_228ADFF48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_228BAC418();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v10);
  return a1;
}

uint64_t sub_228AE0034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_228BAC418();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v10);
  return a1;
}

uint64_t sub_228AE0120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_228AE0134);
}

uint64_t sub_228AE0134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_228BAC418();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_228AE0230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_228AE0244);
}

uint64_t sub_228AE0244(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_228BAC418();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for KeyframeAnimationState()
{
  uint64_t result = qword_268292360;
  if (!qword_268292360) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_228AE0398()
{
  sub_228AE0460();
  if (v0 <= 0x3F)
  {
    sub_228BAC418();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_228AE0460()
{
  if (!qword_268292370)
  {
    unint64_t v0 = sub_228BAC8C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268292370);
    }
  }
}

uint64_t destroy for MapCameraKeyframeAnimationInfo()
{
  swift_release();

  return swift_release();
}

uint64_t _s15_MapKit_SwiftUI30MapCameraKeyframeAnimationInfoVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for MapCameraKeyframeAnimationInfo(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MapCameraKeyframeAnimationInfo(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MapCameraKeyframeAnimationInfo(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MapCameraKeyframeAnimationInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MapCameraKeyframeAnimationInfo()
{
  return &type metadata for MapCameraKeyframeAnimationInfo;
}

uint64_t sub_228AE067C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = *(void *)(a6 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v21 - v14;
  long long v17 = *(_OWORD *)(v16 + 16);
  v21[0] = *(_OWORD *)v16;
  v21[1] = v17;
  uint64_t v22 = *(void *)(v16 + 32);
  v18(v21);
  MEMORY[0x22A6A6030](v13, &type metadata for MapCamera, a6, a9);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v13, a6);
  MEMORY[0x22A6A6050](v15, &type metadata for MapCamera, a6, a9);
  MEMORY[0x22A6A6040](v13, &type metadata for MapCamera, a6, a9);
  v19(v13, a6);
  return ((uint64_t (*)(char *, uint64_t))v19)(v15, a6);
}

uint64_t sub_228AE0808()
{
  return sub_228AE067C(v0[8], v0[9], v0[10], v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

unint64_t sub_228AE0840()
{
  unint64_t result = qword_268292378;
  if (!qword_268292378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268292378);
  }
  return result;
}

ValueMetadata *type metadata accessor for MapCameraKeyframeAnimationKey()
{
  return &type metadata for MapCameraKeyframeAnimationKey;
}

void sub_228AE08A4(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

MKMapItemRequest __swiftcall MKMapItemRequest.init(feature:)(_MapKit_SwiftUI::MapFeature feature)
{
  uint64_t v1 = *(void **)feature.mapFeatureAnnotation.super.isa;
  id v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithMapFeatureAnnotation_, *(void *)feature.mapFeatureAnnotation.super.isa);

  return (MKMapItemRequest)v2;
}

id MKMapItemRequest.feature.getter@<X0>(void *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_mapFeatureAnnotation);

  if (!v3)
  {
    uint64_t v4 = self;
    uint64_t v5 = *MEMORY[0x263EFF498];
    uint64_t v6 = (void *)sub_228BAD3D8();
    objc_msgSend(v4, sel_raise_format_arguments_, v5, v6, sub_228BADAE8());
  }
  id result = objc_msgSend(v1, sel_mapFeatureAnnotation);
  if (result) {
    *a1 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

id MKMapItemRequest.mapFeature.getter@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(v1, sel_mapFeatureAnnotation);
  *a1 = result;
  return result;
}

uint64_t sub_228AE0A10()
{
  uint64_t result = sub_228BAD1B8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_228BAD218();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_228AE0AE0(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = v8;
  int v10 = v8 + 16;
  if (((v9 + 16) & (unint64_t)~v9) + v7 <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v11 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v11 = ((v8 + 16) & ~(unint64_t)v8) + v7;
  }
  int v12 = v8 & 0x100000;
  if (v9 > 7 || v12 != 0 || v11 + 1 > 0x18)
  {
    uint64_t v15 = *(void *)a2;
    *uint64_t v4 = *(void *)a2;
    uint64_t v4 = (void *)(v15 + ((v9 & 0xF8 ^ 0x1F8) & v10));
LABEL_27:
    swift_retain();
    return v4;
  }
  unsigned int v16 = a2[v11];
  unsigned int v17 = v16 - 2;
  if (v16 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v18 = v11;
    }
    else {
      uint64_t v18 = 4;
    }
    switch(v18)
    {
      case 1:
        int v19 = *a2;
        goto LABEL_22;
      case 2:
        int v19 = *(unsigned __int16 *)a2;
        goto LABEL_22;
      case 3:
        int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_22;
      case 4:
        int v19 = *(_DWORD *)a2;
LABEL_22:
        int v20 = (v19 | (v17 << (8 * v11))) + 2;
        unsigned int v16 = v19 + 2;
        if (v11 < 4) {
          unsigned int v16 = v20;
        }
        break;
      default:
        break;
    }
  }
  if (v16 != 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
    *(void *)(((unint64_t)v4 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
    *((unsigned char *)v4 + v11) = 0;
    goto LABEL_27;
  }
  *a1 = *(void *)a2;
  uint64_t v21 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (void *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v21 = *v22;
  uint64_t v23 = ((unint64_t)v21 + v9 + 8) & ~v9;
  uint64_t v24 = ((unint64_t)v22 + v9 + 8) & ~v9;
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_retain();
  swift_retain();
  v25(v23, v24, v5);
  *((unsigned char *)v4 + v11) = 1;
  return v4;
}

uint64_t sub_228AE0D08(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  unint64_t v6 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v7 = *(unsigned __int8 *)(v4 + 80);
  if (((v7 + 16) & (unint64_t)~v7) + v5 > v6) {
    unint64_t v6 = ((v7 + 16) & ~v7) + v5;
  }
  unsigned int v8 = a1[v6];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v10 = v6;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a1;
        goto LABEL_12;
      case 2:
        int v11 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v11 = *(_DWORD *)a1;
LABEL_12:
        int v12 = (v11 | (v9 << (8 * v6))) + 2;
        unsigned int v8 = v11 + 2;
        if (v6 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    uint64_t v15 = *(void *)(*(void *)(a2 + 16) - 8);
    swift_release();
    swift_release();
    uint64_t v13 = *(uint64_t (**)(unint64_t, uint64_t))(v15 + 8);
    return v13((((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7, v3);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, uint64_t))(v4 + 8))(a1, v3);
    return swift_release();
  }
}

void *sub_228AE0ED0(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  if (((v8 + 16) & (unint64_t)~v8) + v7 <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v9 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v9 = ((v8 + 16) & ~v8) + v7;
  }
  unsigned int v10 = a2[v9];
  unsigned int v11 = v10 - 2;
  if (v10 >= 2)
  {
    if (v9 <= 3) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_13;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_13:
        int v14 = (v13 | (v11 << (8 * v9))) + 2;
        unsigned int v10 = v13 + 2;
        if (v9 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  if (v10 == 1)
  {
    *a1 = *(void *)a2;
    uint64_t v15 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v16 = (void *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v15 = *v16;
    uint64_t v17 = ((unint64_t)v15 + v8 + 8) & ~v8;
    uint64_t v18 = ((unint64_t)v16 + v8 + 8) & ~v8;
    int v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_retain();
    swift_retain();
    v19(v17, v18, v5);
    char v20 = 1;
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
    *(void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
    swift_retain();
    char v20 = 0;
  }
  *((unsigned char *)a1 + v9) = v20;
  return a1;
}

unsigned __int8 *sub_228AE10C0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    if (((v8 + 16) & (unint64_t)~v8) + v7 <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
      unint64_t v9 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    else {
      unint64_t v9 = ((v8 + 16) & ~v8) + v7;
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          if (v9 < 4) {
            goto LABEL_15;
          }
          goto LABEL_17;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          if (v9 >= 4) {
            goto LABEL_17;
          }
          goto LABEL_15;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v9 < 4) {
            goto LABEL_15;
          }
          goto LABEL_17;
        case 4:
          int v13 = *(_DWORD *)a1;
          if (v9 < 4) {
LABEL_15:
          }
            unsigned int v10 = (v13 | (v11 << (8 * v9))) + 2;
          else {
LABEL_17:
          }
            unsigned int v10 = v13 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v14 = ~v8;
    if (v10 == 1)
    {
      swift_release();
      swift_release();
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))((((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & v14, v5);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
      swift_release();
    }
    unsigned int v15 = a2[v9];
    unsigned int v16 = v15 - 2;
    if (v15 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v17 = v9;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *a2;
          if (v9 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v18 = *(unsigned __int16 *)a2;
          if (v9 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v18 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v9 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v18 = *(_DWORD *)a2;
          if (v9 < 4)
          {
LABEL_31:
            unsigned int v15 = (v18 | (v16 << (8 * v9))) + 2;
            break;
          }
LABEL_35:
          if (v18 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v15 == 1)
    {
LABEL_33:
      *(void *)a1 = *(void *)a2;
      int v19 = (void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v20 = (void *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
      *int v19 = *v20;
      uint64_t v21 = ((unint64_t)v19 + v8 + 8) & v14;
      uint64_t v22 = ((unint64_t)v20 + v8 + 8) & v14;
      uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      swift_retain();
      swift_retain();
      v23(v21, v22, v5);
      a1[v9] = 1;
    }
    else
    {
LABEL_36:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      *(void *)((unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      a1[v9] = 0;
      swift_retain();
    }
  }
  return a1;
}

void *sub_228AE13F8(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (((v7 + 16) & (unint64_t)~v7) + v6 <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v8 = ((v7 + 16) & ~v7) + v6;
  }
  unsigned int v9 = a2[v8];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_13;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_13:
        int v13 = (v12 | (v10 << (8 * v8))) + 2;
        unsigned int v9 = v12 + 2;
        if (v8 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
    *a1 = *(void *)a2;
    uint64_t v14 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v15 = (void *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    void *v14 = *v15;
    (*(void (**)(unint64_t, unint64_t))(v5 + 32))(((unint64_t)v14 + v7 + 8) & ~v7, ((unint64_t)v15 + v7 + 8) & ~v7);
    char v16 = 1;
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *))(v5 + 32))(a1, a2);
    char v16 = 0;
    *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
  }
  *((unsigned char *)a1 + v8) = v16;
  return a1;
}

unsigned __int8 *sub_228AE15B8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    if (((v8 + 16) & (unint64_t)~v8) + v7 <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
      unint64_t v9 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    else {
      unint64_t v9 = ((v8 + 16) & ~v8) + v7;
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          if (v9 < 4) {
            goto LABEL_15;
          }
          goto LABEL_17;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          if (v9 >= 4) {
            goto LABEL_17;
          }
          goto LABEL_15;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v9 < 4) {
            goto LABEL_15;
          }
          goto LABEL_17;
        case 4:
          int v13 = *(_DWORD *)a1;
          if (v9 < 4) {
LABEL_15:
          }
            unsigned int v10 = (v13 | (v11 << (8 * v9))) + 2;
          else {
LABEL_17:
          }
            unsigned int v10 = v13 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v14 = ~v8;
    if (v10 == 1)
    {
      swift_release();
      swift_release();
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))((((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & v14, v5);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
      swift_release();
    }
    unsigned int v15 = a2[v9];
    unsigned int v16 = v15 - 2;
    if (v15 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v17 = v9;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *a2;
          if (v9 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v18 = *(unsigned __int16 *)a2;
          if (v9 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v18 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v9 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v18 = *(_DWORD *)a2;
          if (v9 < 4)
          {
LABEL_31:
            unsigned int v15 = (v18 | (v16 << (8 * v9))) + 2;
            break;
          }
LABEL_35:
          if (v18 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v15 == 1)
    {
LABEL_33:
      uint64_t v20 = *(void *)a2;
      unint64_t v19 = (unint64_t)(a2 + 15);
      *(void *)a1 = v20;
      uint64_t v21 = (void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v21 = *(void *)(v19 & 0xFFFFFFFFFFFFFFF8);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(((unint64_t)v21 + v8 + 8) & v14, ((v19 & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & v14, v5);
      char v22 = 1;
    }
    else
    {
LABEL_36:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v22 = 0;
      *(void *)((unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
    }
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_228AE18D8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  unint64_t v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v6 = ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)) + v4;
  if (v6 <= v5) {
    unint64_t v7 = v5;
  }
  else {
    unint64_t v7 = v6;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_23;
  }
  unint64_t v8 = v7 + 1;
  char v9 = 8 * (v7 + 1);
  if ((v7 + 1) <= 3)
  {
    unsigned int v12 = ((a2 + ~(-1 << v9) - 254) >> v9) + 1;
    if (HIWORD(v12))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v12 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v12 < 2)
    {
LABEL_23:
      unsigned int v14 = *((unsigned __int8 *)a1 + v7);
      if (v14 >= 2) {
        return (v14 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_23;
  }
LABEL_15:
  int v13 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v13 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v8 | v13) + 255;
}

void sub_228AE1A50(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v8 = ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + v6;
  if (v8 <= v7) {
    unint64_t v8 = v7;
  }
  size_t v9 = v8 + 1;
  if (a3 < 0xFF)
  {
    int v10 = 0;
  }
  else if (v9 <= 3)
  {
    unsigned int v13 = ((a3 + ~(-1 << (8 * v9)) - 254) >> (8 * v9)) + 1;
    if (HIWORD(v13))
    {
      int v10 = 4;
    }
    else if (v13 >= 0x100)
    {
      int v10 = 2;
    }
    else
    {
      int v10 = v13 > 1;
    }
  }
  else
  {
    int v10 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v11 = a2 - 255;
    if (v9 < 4)
    {
      int v12 = (v11 >> (8 * v9)) + 1;
      if (v8 != -1)
      {
        int v14 = v11 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v14;
          a1[2] = BYTE2(v14);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v14;
        }
        else
        {
          *a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, v8 + 1);
      *(_DWORD *)a1 = v11;
      int v12 = 1;
    }
    switch(v10)
    {
      case 1:
        a1[v9] = v12;
        break;
      case 2:
        *(_WORD *)&a1[v9] = v12;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x228AE1C5CLL);
      case 4:
        *(_DWORD *)&a1[v9] = v12;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v10)
    {
      case 1:
        a1[v9] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v9] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v8] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_228AE1C84(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  unint64_t v4 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v5 = ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)) + v3;
  if (v5 <= v4) {
    unint64_t v6 = v4;
  }
  else {
    unint64_t v6 = v5;
  }
  uint64_t v7 = a1[v6];
  int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a1;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a1;
LABEL_13:
        unsigned int v11 = (v10 | (v8 << (8 * v6))) + 2;
        LODWORD(v7) = v10 + 2;
        if (v6 >= 4) {
          uint64_t v7 = v7;
        }
        else {
          uint64_t v7 = v11;
        }
        break;
      default:
        return v7;
    }
  }
  return v7;
}

void sub_228AE1D80(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (a2 > 1)
  {
    uint64_t v8 = *(void *)(v4 + 64);
    unint64_t v9 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    size_t v10 = ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v8;
    if (v10 <= v9) {
      size_t v11 = v9;
    }
    else {
      size_t v11 = v10;
    }
    unsigned int v12 = a2 - 2;
    if (v11 < 4)
    {
      unsigned int v13 = v12 >> (8 * v11);
      int v14 = v12 & ~(-1 << (8 * v11));
      a1[v11] = v13 + 2;
      bzero(a1, v11);
      if (v11 == 3)
      {
        *(_WORD *)a1 = v14;
        a1[2] = BYTE2(v14);
      }
      else if (v11 == 2)
      {
        *(_WORD *)a1 = v14;
      }
      else
      {
        *a1 = v14;
      }
    }
    else
    {
      a1[v11] = 2;
      bzero(a1, v11);
      *(_DWORD *)a1 = v12;
    }
  }
  else
  {
    uint64_t v5 = *(void *)(v4 + 64);
    unint64_t v6 = ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v5;
    unint64_t v7 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v6 <= v7) {
      unint64_t v6 = v7;
    }
    a1[v6] = a2;
  }
}

uint64_t type metadata accessor for StateOrBinding()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_228AE1EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return MEMORY[0x270EFFE88](a1, a2, a3, a4, a6, a5);
}

void static MapCameraUpdateFrequency.onEnd.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t View.onMapCameraChange(frequency:_:)(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_228AE2194(a1, a2, a3);
}

{
  return sub_228AE2194(a1, a2, a3);
}

uint64_t sub_228AE1F04()
{
  sub_228AE2AB8();
  sub_228BACB08();
  return v1;
}

uint64_t sub_228AE1F40@<X0>(void *a1@<X8>)
{
  sub_228AE2AB8();
  uint64_t result = sub_228BACB08();
  *a1 = v3;
  return result;
}

uint64_t sub_228AE1F90@<X0>(void *a1@<X8>)
{
  sub_228AE2AB8();
  uint64_t result = sub_228BACB08();
  *a1 = v3;
  return result;
}

uint64_t sub_228AE1FE0()
{
  return sub_228BACB18();
}

uint64_t sub_228AE2044(void **a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  unint64_t v9 = *a1;
  swift_retain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_228B7668C(0, v9[2] + 1, 1, v9);
    unint64_t v9 = (void *)result;
  }
  unint64_t v12 = v9[2];
  unint64_t v11 = v9[3];
  if (v12 >= v11 >> 1)
  {
    uint64_t result = (uint64_t)sub_228B7668C((void *)(v11 > 1), v12 + 1, 1, v9);
    unint64_t v9 = (void *)result;
  }
  v9[2] = v12 + 1;
  unsigned int v13 = &v9[3 * v12];
  *((unsigned char *)v13 + 32) = a2 & 1;
  v13[5] = sub_228AE2A90;
  void v13[6] = v8;
  *a1 = v9;
  return result;
}

uint64_t sub_228AE2130()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_228AE2168(void **a1)
{
  return sub_228AE2044(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_228AE2194(char *a1, uint64_t a2, uint64_t a3)
{
  char v5 = *a1;
  swift_getKeyPath();
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  swift_retain();
  sub_228BAD098();
  swift_release();

  return swift_release();
}

uint64_t sub_228AE225C(void **a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *a1;
  swift_retain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_228B7668C(0, v8[2] + 1, 1, v8);
    uint64_t v8 = (void *)result;
  }
  unint64_t v11 = v8[2];
  unint64_t v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    uint64_t result = (uint64_t)sub_228B7668C((void *)(v10 > 1), v11 + 1, 1, v8);
    uint64_t v8 = (void *)result;
  }
  v8[2] = v11 + 1;
  unint64_t v12 = &v8[3 * v11];
  *((unsigned char *)v12 + 32) = a2 & 1;
  v12[5] = a3;
  v12[6] = a4;
  *a1 = v8;
  return result;
}

uint64_t sub_228AE2324(void **a1)
{
  return sub_228AE225C(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

double MapCameraUpdateContext.camera.getter@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + 32);
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v3;
  *(double *)(a1 + 32) = result;
  return result;
}

double MapCameraUpdateContext.region.getter()
{
  return *(double *)(v0 + 40);
}

double MapCameraUpdateContext.rect.getter()
{
  return *(double *)(v0 + 72);
}

BOOL sub_228AE235C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void static MapCameraUpdateFrequency.continuous.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MapCameraUpdateContext(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 104)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MapCameraUpdateContext(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 104) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MapCameraUpdateContext()
{
  return &type metadata for MapCameraUpdateContext;
}

ValueMetadata *type metadata accessor for MapCameraUpdateFrequency()
{
  return &type metadata for MapCameraUpdateFrequency;
}

uint64_t sub_228AE2438()
{
  return swift_getWitnessTable();
}

unint64_t sub_228AE24A8()
{
  unint64_t result = qword_268292408;
  if (!qword_268292408)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268292400);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268292408);
  }
  return result;
}

uint64_t _s15_MapKit_SwiftUI11MapPolylineV12ContourStyleV7StorageOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s15_MapKit_SwiftUI24MapCameraUpdateFrequencyV7StorageOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x228AE2660);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_228AE2688(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MapCameraUpdateFrequency.Storage()
{
  return &type metadata for MapCameraUpdateFrequency.Storage;
}

uint64_t sub_228AE26A8(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MapCameraChangeResponder(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MapCameraChangeResponder(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MapCameraChangeResponder(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MapCameraChangeResponder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MapCameraChangeResponder()
{
  return &type metadata for MapCameraChangeResponder;
}

unint64_t sub_228AE27FC()
{
  unint64_t result = qword_268292410;
  if (!qword_268292410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268292410);
  }
  return result;
}

void sub_228AE2850()
{
  qword_26829D4F0 = MEMORY[0x263F8EE78];
}

uint64_t sub_228AE2864@<X0>(void *a1@<X8>)
{
  if (qword_268291368 != -1) {
    swift_once();
  }
  *a1 = qword_26829D4F0;

  return swift_bridgeObjectRetain();
}

uint64_t *sub_228AE28D0@<X0>(id a1@<X1>, uint64_t *result@<X0>, void *a3@<X8>)
{
  uint64_t v3 = (uint64_t)result;
  if (result[13])
  {
    id v6 = objc_msgSend(a1, sel_camera);
    objc_msgSend(v6, sel_centerCoordinate);
    uint64_t v36 = v8;
    uint64_t v37 = v7;
    objc_msgSend(v6, sel_centerCoordinateDistance);
    uint64_t v35 = v9;
    objc_msgSend(v6, sel_heading);
    uint64_t v34 = v10;
    objc_msgSend(v6, sel_pitch);
    uint64_t v33 = v11;

    objc_msgSend(a1, sel_region);
    uint64_t v13 = v12;
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    uint64_t v19 = v18;
    objc_msgSend(a1, sel_visibleMapRect);
    uint64_t v21 = v20;
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    uint64_t v27 = v26;
    unint64_t result = (uint64_t *)swift_beginAccess();
    uint64_t v29 = v33;
    uint64_t v28 = v34;
    uint64_t v31 = v35;
    uint64_t v30 = v36;
    uint64_t v32 = v37;
    *(void *)uint64_t v3 = v37;
    *(void *)(v3 + 8) = v36;
    *(void *)(v3 + 16) = v35;
    *(void *)(v3 + 24) = v34;
    *(void *)(v3 + 32) = v33;
    *(void *)(v3 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v13;
    *(void *)(v3 + 48) = v15;
    *(void *)(v3 + 56) = v17;
    *(void *)(v3 + 64) = v19;
    *(void *)(v3 + 72) = v21;
    *(void *)(v3 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v23;
    *(void *)(v3 + 88) = v25;
    *(void *)(v3 + 96) = v27;
    *(unsigned char *)(v3 + 104) = 0;
  }
  else
  {
    uint64_t v25 = result[11];
    uint64_t v27 = result[12];
    uint64_t v21 = result[9];
    uint64_t v23 = result[10];
    uint64_t v17 = result[7];
    uint64_t v19 = result[8];
    uint64_t v13 = result[5];
    uint64_t v15 = result[6];
    uint64_t v28 = result[3];
    uint64_t v29 = result[4];
    uint64_t v30 = result[1];
    uint64_t v31 = result[2];
    uint64_t v32 = *result;
  }
  *a3 = v32;
  a3[1] = v30;
  a3[2] = v31;
  a3[3] = v28;
  a3[4] = v29;
  a3[5] = v13;
  a3[6] = v15;
  a3[7] = v17;
  a3[8] = v19;
  a3[9] = v21;
  a3[10] = v23;
  a3[11] = v25;
  a3[12] = v27;
  return result;
}

uint64_t sub_228AE2A58()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_228AE2A90()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_228AE2AB8()
{
  unint64_t result = qword_268292418;
  if (!qword_268292418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268292418);
  }
  return result;
}

ValueMetadata *type metadata accessor for MapCameraChangeRespondersEnvironmentKey()
{
  return &type metadata for MapCameraChangeRespondersEnvironmentKey;
}

unint64_t sub_228AE2B20(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682927C0);
  uint64_t v2 = sub_228BAD988();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_228AD2708(v6, (uint64_t)&v13, &qword_268292828);
    uint64_t v7 = v13;
    unint64_t result = sub_228AD183C(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = sub_228AD2184((uint64_t)&v14, v3[7] + 8 * result);
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 16;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t StaticMap.init(content:)@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for StaticMap();
  *(void *)(a2 + *(int *)(v4 + 40)) = 0;
  uint64_t result = a1();
  *(void *)(a2 + *(int *)(v4 + 36)) = 0xA000000000000000;
  return result;
}

uint64_t type metadata accessor for StaticMap()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t StaticMap.init(locationManager:content:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for StaticMap();
  uint64_t v7 = *(int *)(v6 + 40);
  uint64_t result = a2();
  *(void *)(a3 + *(int *)(v6 + 36)) = 0xA000000000000000;
  *(void *)(a3 + v7) = a1;
  return result;
}

void *StaticMap.init<>(position:)@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  a2[1] = 0;
  return result;
}

void *StaticMap.init<>(position:locationManager:)@<X0>(void *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

uint64_t StaticMap.init(position:content:)@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = type metadata accessor for StaticMap();
  *(void *)(a3 + *(int *)(v6 + 40)) = 0;
  uint64_t result = a2();
  *(void *)(a3 + *(int *)(v6 + 36)) = v5;
  return result;
}

uint64_t StaticMap.init(position:locationManager:content:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v8 = type metadata accessor for StaticMap();
  uint64_t v9 = *(int *)(v8 + 40);
  uint64_t result = a3();
  *(void *)(a4 + *(int *)(v8 + 36)) = v7;
  *(void *)(a4 + v9) = a2;
  return result;
}

uint64_t static StaticMap._makeView(view:inputs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292420);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticMap();
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a1;
  swift_getWitnessTable();
  sub_228BACFC8();
  uint64_t v11 = type metadata accessor for StaticMap.Child();
  swift_dynamicCast();
  type metadata accessor for StaticMapBridgingView(0);
  uint64_t v18 = v11;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292428);
  sub_228AC7E20((uint64_t)&v16, (uint64_t)sub_228B05714, (uint64_t)v17, v11, MEMORY[0x263F8E628], v12, MEMORY[0x263F8E658], v13);
  sub_228ACB078(v23, (uint64_t)v10);
  sub_228B091A0(qword_268292430, (void (*)(uint64_t))type metadata accessor for StaticMapBridgingView);
  sub_228BACFD8();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_228AE30D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v76 = a5;
  uint64_t v77 = a3;
  uint64_t v73 = a4;
  uint64_t v75 = a2;
  uint64_t v61 = a6;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682927D8);
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v64 = v7;
  int v65 = (_DWORD *)((char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682927E0);
  uint64_t v62 = *(void *)(v63 - 8);
  uint64_t v82 = *(void *)(v62 + 64);
  MEMORY[0x270FA5388](v63);
  uint64_t v74 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_228BAC5E8();
  uint64_t v80 = *(void *)(v9 - 8);
  uint64_t v81 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v79 = (uint64_t)&v58 - v10;
  uint64_t v11 = type metadata accessor for _MapContentOutputs(0);
  MEMORY[0x270FA5388](v11 - 8);
  int v78 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_228BACD78();
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v70 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_228BAC608();
  uint64_t v66 = *(void *)(v68 - 8);
  uint64_t v14 = v66;
  uint64_t v15 = MEMORY[0x270FA5388](v68);
  uint64_t v69 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v58 - v17;
  uint64_t v19 = sub_228BACB48();
  uint64_t v67 = *(void *)(v19 - 8);
  uint64_t v20 = v67;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for _MapContentInputs(0);
  uint64_t v24 = (int *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v83 = (uint64_t)&v58 - v28;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v29(v22, a1, v19);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v31 = v68;
  v30(v18, v75, v68);
  *(_DWORD *)&v27[v24[9]] = *MEMORY[0x263F288F8];
  v29(v27, (uint64_t)v22, v19);
  v30(&v27[v24[7]], (uint64_t)v18, v31);
  v30(v69, (uint64_t)v18, v31);
  uint64_t v32 = v73;
  uint64_t v33 = v70;
  sub_228BACD58();
  uint64_t v34 = v18;
  uint64_t v35 = (int *)v74;
  (*(void (**)(char *, uint64_t))(v66 + 8))(v34, v31);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v22, v19);
  uint64_t v36 = v76;
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(&v27[v24[8]], v33, v72);
  uint64_t v37 = v83;
  sub_228B0A298((uint64_t)v27, v83, type metadata accessor for _MapContentInputs);
  sub_228AC1BFC();
  sub_228BACD48();
  sub_228AC1BA8();
  sub_228BACD48();
  sub_228AC2024();
  sub_228BACD48();
  sub_228AC1B54();
  sub_228BACD48();
  sub_228AC1B00();
  sub_228BACD48();
  sub_228AC1AAC();
  sub_228BACD48();
  sub_228AC19FC();
  sub_228BACD48();
  sub_228AC1FD0();
  sub_228BACD48();
  uint64_t v86 = v32;
  uint64_t v87 = v36;
  type metadata accessor for StaticMap();
  sub_228BAC5E8();
  uint64_t v38 = v79;
  sub_228B538E4((void (*)(uint64_t))sub_228B0AC88, v32, v79);
  uint64_t v39 = v78;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 32))(v38, v37, v32, v36);
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v38, v81);
  uint64_t v84 = v32;
  uint64_t v85 = v36;
  uint64_t result = sub_228B538E4((void (*)(uint64_t))sub_228B0AC90, (uint64_t)&type metadata for MapCameraPosition, (uint64_t)v35);
  if (v82 == 4)
  {
    int v41 = *v35;
    uint64_t v42 = (*(uint64_t (**)(int *, uint64_t))(v62 + 8))(v35, v63);
    MEMORY[0x270FA5388](v42);
    *(&v58 - 2) = v32;
    *(&v58 - 1) = v36;
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292608);
    uint64_t v44 = v65;
    uint64_t result = sub_228B538E4((void (*)(uint64_t))sub_228B0AC98, v43, (uint64_t)v65);
    if (v64 == 4)
    {
      LODWORD(v82) = *v44;
      (*(void (**)(_DWORD *, uint64_t))(v59 + 8))(v44, v60);
      uint64_t v45 = (uint64_t)v39;
      LODWORD(v81) = sub_228ABF6B8();
      LODWORD(v8__isPlatformVersionAtLeast(2, 18, 1, 0) = sub_228ABF6D8();
      int v46 = sub_228ABF908();
      int v47 = sub_228ABF968();
      int v48 = sub_228ABF988();
      int v49 = v41;
      int v50 = sub_228ABF9A8();
      int v51 = sub_228ABF928();
      int v52 = sub_228ABF948();
      uint64_t v53 = type metadata accessor for StaticMap.Child();
      BOOL v54 = v61;
      v61[3] = v53;
      int v55 = (_DWORD *)swift_allocObject();
      *BOOL v54 = v55;
      int v56 = v80;
      v55[4] = v81;
      v55[5] = v56;
      v55[6] = v46;
      v55[7] = v47;
      v55[8] = v48;
      v55[9] = v50;
      v55[10] = v51;
      v55[11] = v52;
      int v57 = v82;
      v55[12] = v49;
      v55[13] = v57;
      sub_228B0A300(v45, type metadata accessor for _MapContentOutputs);
      return sub_228B0A300(v83, type metadata accessor for _MapContentInputs);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_228AE39E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_228AE30D8(a1, a2, v3[4], v3[2], v3[3], a3);
}

uint64_t type metadata accessor for StaticMap.Child()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for StaticMapBridgingView(uint64_t a1)
{
  return sub_228AC29CC(a1, (uint64_t *)&unk_2682925E0);
}

uint64_t sub_228AE3A24(uint64_t a1, uint64_t a2)
{
  v7[2] = type metadata accessor for StaticMap();
  v7[3] = a2;
  uint64_t v4 = sub_228BAC4A8();
  sub_228B3C21C(a1, (uint64_t)sub_228AD903C, (uint64_t)v7, a2, MEMORY[0x263F8E628], v4, MEMORY[0x263F8E658], v5);
  return v7[5];
}

uint64_t sub_228AE3AB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticMap();
  uint64_t v3 = a1 + *(int *)(v2 + 36);
  v7[2] = v2;
  uint64_t v4 = sub_228BAC4A8();
  sub_228B3C21C(v3, (uint64_t)sub_228B0AD18, (uint64_t)v7, (uint64_t)&type metadata for MapCameraPosition, MEMORY[0x263F8E628], v4, MEMORY[0x263F8E658], v5);
  return v7[5];
}

uint64_t sub_228AE3B58(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticMap();
  uint64_t v3 = a1 + *(int *)(v2 + 40);
  v8[2] = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292608);
  uint64_t v5 = sub_228BAC4A8();
  sub_228B3C21C(v3, (uint64_t)sub_228B0ACB0, (uint64_t)v8, v4, MEMORY[0x263F8E628], v5, MEMORY[0x263F8E658], v6);
  return v8[5];
}

uint64_t sub_228AE3C04()
{
  if (*v0 == *MEMORY[0x263F288F8]) {
    return 0;
  }
  AGGraphGetValue();
  return swift_bridgeObjectRetain();
}

uint64_t sub_228AE3C68()
{
  if (*(_DWORD *)(v0 + 4) == *MEMORY[0x263F288F8]) {
    return 0;
  }
  AGGraphGetValue();
  return swift_bridgeObjectRetain();
}

uint64_t sub_228AE3CCC()
{
  if (*(_DWORD *)(v0 + 8) == *MEMORY[0x263F288F8]) {
    return 0;
  }
  AGGraphGetValue();
  return swift_bridgeObjectRetain();
}

uint64_t sub_228AE3D30()
{
  if (*(_DWORD *)(v0 + 12) == *MEMORY[0x263F288F8]) {
    return 0;
  }
  AGGraphGetValue();
  return swift_bridgeObjectRetain();
}

uint64_t sub_228AE3D94()
{
  if (*(_DWORD *)(v0 + 16) == *MEMORY[0x263F288F8]) {
    return 0;
  }
  AGGraphGetValue();
  return swift_bridgeObjectRetain();
}

uint64_t sub_228AE3DF8()
{
  if (*(_DWORD *)(v0 + 20) == *MEMORY[0x263F288F8]) {
    return 0;
  }
  AGGraphGetValue();
  return swift_bridgeObjectRetain();
}

uint64_t sub_228AE3E5C()
{
  if (*(_DWORD *)(v0 + 24) == *MEMORY[0x263F288F8]) {
    return 0;
  }
  AGGraphGetValue();
  return swift_bridgeObjectRetain();
}

uint64_t sub_228AE3EC0()
{
  if (*(_DWORD *)(v0 + 28) == *MEMORY[0x263F288F8]) {
    return 0;
  }
  AGGraphGetValue();
  return swift_bridgeObjectRetain();
}

id sub_228AE3F24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682925D0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (uint64_t *)((char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682925C8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v61 = type metadata accessor for StaticMapBridgingView(0);
  uint64_t v7 = MEMORY[0x270FA5388](v61);
  uint64_t v9 = (uint64_t *)((char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v60 = (uint64_t)&v48 - v10;
  uint64_t v11 = sub_228AE3C04();
  if (!v11) {
    uint64_t v11 = sub_228B78CF8(MEMORY[0x263F8EE78]);
  }
  uint64_t v58 = v12;
  uint64_t v59 = v11;
  uint64_t v13 = sub_228AE3C68();
  if (!v13) {
    uint64_t v13 = sub_228B78CF8(MEMORY[0x263F8EE78]);
  }
  uint64_t v56 = v14;
  uint64_t v57 = v13;
  uint64_t v15 = sub_228AE3CCC();
  if (!v15) {
    uint64_t v15 = sub_228B78CF8(MEMORY[0x263F8EE78]);
  }
  uint64_t v54 = v16;
  uint64_t v55 = v15;
  uint64_t v17 = sub_228AE3D30();
  if (!v17) {
    uint64_t v17 = sub_228B78CF8(MEMORY[0x263F8EE78]);
  }
  uint64_t v52 = v18;
  uint64_t v53 = v17;
  uint64_t v19 = sub_228AE3D94();
  if (!v19) {
    uint64_t v19 = sub_228B78CF8(MEMORY[0x263F8EE78]);
  }
  uint64_t v21 = v19;
  uint64_t v51 = v20;
  uint64_t v22 = sub_228AE3DF8();
  if (!v22) {
    uint64_t v22 = sub_228B78CF8(MEMORY[0x263F8EE78]);
  }
  uint64_t v24 = v22;
  uint64_t v50 = v23;
  uint64_t v25 = sub_228AE3E5C();
  if (!v25) {
    uint64_t v25 = sub_228B78CF8(MEMORY[0x263F8EE78]);
  }
  uint64_t v27 = v25;
  uint64_t v49 = v26;
  uint64_t v28 = sub_228AE3EC0();
  if (!v28) {
    uint64_t v28 = sub_228B78CF8(MEMORY[0x263F8EE78]);
  }
  uint64_t v30 = v28;
  uint64_t v31 = v29;
  unint64_t v32 = *(void *)AGGraphGetValue();
  sub_228B0596C(v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292608);
  uint64_t v63 = *(void **)AGGraphGetValue();
  *uint64_t v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268291BE0);
  swift_storeEnumTagMultiPayload();
  uint64_t *v3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2682925C0);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v34 = v58;
  *uint64_t v9 = v59;
  v9[1] = v34;
  uint64_t v35 = v56;
  v9[2] = v57;
  v9[3] = v35;
  uint64_t v36 = v52;
  v9[6] = v53;
  v9[7] = v36;
  uint64_t v37 = v51;
  v9[8] = v21;
  v9[9] = v37;
  uint64_t v38 = v50;
  v9[10] = v24;
  v9[11] = v38;
  uint64_t v39 = v49;
  v9[12] = v27;
  v9[13] = v39;
  v9[14] = v30;
  v9[15] = v31;
  uint64_t v40 = (uint64_t)v63;
  v9[16] = v32;
  v9[17] = v40;
  uint64_t v41 = v61;
  uint64_t v42 = (uint64_t)v9 + *(int *)(v61 + 56);
  uint64_t v43 = v54;
  v9[4] = v55;
  v9[5] = v43;
  sub_228ACD8BC((uint64_t)v6, v42, &qword_2682925C8);
  sub_228ACD8BC((uint64_t)v3, (uint64_t)v9 + *(int *)(v41 + 60), (uint64_t *)&unk_2682925D0);
  uint64_t v44 = (char *)v9 + *(int *)(v41 + 64);
  *(void *)uint64_t v44 = KeyPath;
  *(_OWORD *)(v44 + 8) = 0u;
  *(_OWORD *)(v44 + 24) = 0u;
  *(_OWORD *)(v44 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0u;
  *(_OWORD *)(v44 + 56) = 0u;
  *(_OWORD *)(v44 + 66) = 0u;
  uint64_t v45 = v60;
  sub_228B0A298((uint64_t)v9, v60, type metadata accessor for StaticMapBridgingView);
  sub_228B0A298(v45, v62, type metadata accessor for StaticMapBridgingView);
  int v46 = v63;

  return v46;
}

uint64_t sub_228AE42EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for StaticMapBridgingView(0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t static StaticMap._makeViewList(view:inputs:)()
{
  type metadata accessor for StaticMap();
  swift_getWitnessTable();

  return sub_228BAC968();
}

uint64_t static StaticMap._viewListCount(inputs:)()
{
  return 1;
}

void StaticMap.body.getter()
{
}

uint64_t sub_228AE4438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static StaticMap._makeView(view:inputs:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_228AE4444()
{
  return static StaticMap._makeViewList(view:inputs:)();
}

void sub_228AE4450()
{
}

uint64_t sub_228AE449C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228B091A0(&qword_268292610, (void (*)(uint64_t))type metadata accessor for StaticMapBridgingView);

  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_228AE4530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228B091A0(&qword_268292610, (void (*)(uint64_t))type metadata accessor for StaticMapBridgingView);

  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

void sub_228AE45C4()
{
}

uint64_t sub_228AE461C(void *a1)
{
  uint64_t v2 = sub_228BACAF8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292638);
  sub_228BACE88();
  char v6 = sub_228BAC5C8();
  swift_release();
  uint64_t v7 = 0;
  if ((v6 & 1) == 0)
  {
    sub_228BACE88();
    uint64_t v7 = sub_228BAC5D8();
    swift_release();
  }
  sub_228BACE68();
  uint64_t v8 = (void *)v10[1];
  sub_228BACE78();
  sub_228AE4788(a1, (uint64_t)v8, (uint64_t)v5, v7);

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_228AE4788(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v117 = a4;
  uint64_t v9 = type metadata accessor for StaticMapBridgingView(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v113 = (uint64_t)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_setDelegate_, a2);
  objc_msgSend(a1, sel_beginUpdates);
  int v11 = *(_DWORD *)(a2 + qword_2682928D0);
  int v116 = (_DWORD *)(a2 + qword_2682928D0);
  uint64_t v12 = *(void *)(a2 + qword_2682928D0 + 8);
  uint64_t v13 = *v4;
  uint64_t v14 = v5[1];
  int v15 = sub_228B74FA4(v13);
  if (v11 == -1 || v15 == -1 || v11 != v15 || v12 != v14)
  {
    unint64_t v19 = sub_228AE5160(0, 0, 0, 0, v13);
    uint64_t KeyPath = swift_getKeyPath();
    sub_228AFCC0C(a1, v19, a3, v117, KeyPath);
    swift_release();
    swift_bridgeObjectRelease();
  }
  int v21 = *(_DWORD *)(a2 + qword_2682928D8);
  long long v115 = (_DWORD *)(a2 + qword_2682928D8);
  uint64_t v22 = *(void *)(a2 + qword_2682928D8 + 8);
  uint64_t v23 = v5[2];
  uint64_t v24 = v5[3];
  int v25 = sub_228B74FA4(v23);
  if (v21 == -1 || v25 == -1 || v21 != v25 || v22 != v24)
  {
    unint64_t v29 = sub_228AE59B0(0, 0, 0, 0, a3, 0, v23);
    uint64_t v30 = swift_getKeyPath();
    sub_228AFD1B4(a1, v29, a3, v117, v30);
    swift_release();
    swift_bridgeObjectRelease();
  }
  int v31 = *(_DWORD *)(a2 + qword_2682928E0);
  char v114 = (_DWORD *)(a2 + qword_2682928E0);
  uint64_t v32 = *(void *)(a2 + qword_2682928E0 + 8);
  uint64_t v33 = v5[4];
  uint64_t v34 = v5[5];
  int v35 = sub_228B74FA4(v33);
  if (v31 == -1 || v35 == -1 || v31 != v35 || v32 != v34)
  {
    unint64_t v39 = sub_228AE59B0(0, 0, 0, 0, a3, 1, v33);
    uint64_t v40 = swift_getKeyPath();
    sub_228AFD1B4(a1, v39, a3, v117, v40);
    swift_bridgeObjectRelease();
    swift_release();
  }
  int v41 = *(_DWORD *)(a2 + qword_2682928E8);
  uint64_t v112 = (_DWORD *)(a2 + qword_2682928E8);
  uint64_t v42 = *(void *)(a2 + qword_2682928E8 + 8);
  uint64_t v44 = v5[12];
  uint64_t v43 = v5[13];
  int v45 = sub_228B74FA4(v44);
  if (v41 == -1 || v45 == -1 || v41 != v45 || v42 != v43)
  {
    unint64_t v49 = sub_228AE5D8C(0, 0, 0, 0, v44);
    uint64_t v50 = swift_getKeyPath();
    sub_228AFD78C(a1, v49, a3, v117, v50);
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v109 = v44;
  int v51 = *(_DWORD *)(a2 + qword_2682928F0);
  int v111 = (_DWORD *)(a2 + qword_2682928F0);
  uint64_t v52 = *(void *)(a2 + qword_2682928F0 + 8);
  uint64_t v53 = v5[14];
  uint64_t v54 = v5[15];
  int v55 = sub_228B74FA4(v53);
  if (v51 == -1 || v55 == -1 || v51 != v55 || v52 != v54)
  {
    unint64_t v56 = sub_228AE5D8C(0, 0, 0, 0, v53);
    uint64_t v57 = swift_getKeyPath();
    sub_228AFD78C(a1, v56, a3, v117, v57);
    swift_bridgeObjectRelease();
    swift_release();
  }
  int v58 = *(_DWORD *)(a2 + qword_268292900);
  long long v110 = (_DWORD *)(a2 + qword_268292900);
  uint64_t v59 = *(void *)(a2 + qword_268292900 + 8);
  uint64_t v60 = v5[6];
  uint64_t v61 = v5[7];
  int v62 = sub_228B74FA4(v60);
  if (v58 == -1 || v62 == -1 || v58 != v62 || v59 != v61)
  {
    uint64_t v63 = (char *)sub_228B12288(v60);
    uint64_t v64 = swift_getKeyPath();
    sub_228AFDC8C(a1, v63, a3, v117, v64);
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v65 = a2 + qword_268292908;
  int v66 = *(_DWORD *)(a2 + qword_268292908);
  uint64_t v67 = *(void *)(a2 + qword_268292908 + 8);
  uint64_t v68 = v5[8];
  uint64_t v69 = v5[9];
  int v70 = sub_228B74FA4(v68);
  if (v66 == -1 || v70 == -1 || v66 != v70 || v67 != v69)
  {
    uint64_t v71 = sub_228B126B4(v68);
    uint64_t v72 = swift_getKeyPath();
    sub_228AFE1A8(a1, (uint64_t)v71, a3, v117, v72);
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v73 = a2 + qword_268292910;
  int v74 = *(_DWORD *)(a2 + qword_268292910);
  uint64_t v75 = *(void *)(a2 + qword_268292910 + 8);
  uint64_t v76 = v5[10];
  uint64_t v77 = v5[11];
  int v78 = sub_228B74FA4(v76);
  if (v74 == -1 || v78 == -1 || v74 != v78 || v75 != v77)
  {
    uint64_t v79 = sub_228B12BA8(v76);
    uint64_t v80 = swift_getKeyPath();
    sub_228AFE6E0(a1, v79, a3, v117, v80);
    swift_release();
    swift_bridgeObjectRelease();
  }
  unint64_t v81 = v5[16];
  uint64_t v82 = *(void *)(v109 + 16);
  uint64_t v83 = v113;
  sub_228B0A230((uint64_t)v5, v113, type metadata accessor for StaticMapBridgingView);
  if (v82) {
    BOOL v84 = 1;
  }
  else {
    BOOL v84 = *(void *)(*(void *)(v83 + 112) + 16) != 0;
  }
  sub_228B0596C(v81);
  sub_228B0A300(v83, type metadata accessor for StaticMapBridgingView);
  unint64_t v85 = *(void *)(a2 + qword_2682924B8);
  *(void *)(a2 + qword_2682924B8) = v81;
  sub_228B0596C(v81);
  sub_228B093A0(v85);
  sub_228B0596C(v81);
  if (v81 >> 61 == 4)
  {
    unint64_t v86 = *(void *)((v81 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
    sub_228B0596C(v86);
    sub_228B093B4(v81, a1);
    sub_228B05A34(v86);
LABEL_72:
    sub_228B05A34(v81);
    goto LABEL_73;
  }
  objc_msgSend(a1, sel_setShowsUserLocation_, v84);
  if ((v81 >> 61) < 4)
  {
    sub_228B093B4(v81, a1);
    goto LABEL_72;
  }
  if (v81 == 0xA000000000000000)
  {
    unint64_t v81 = 0xA000000000000000;
    sub_228B093B4(0xA000000000000000, a1);
  }
  else
  {
    unint64_t v81 = 0xA000000000000008;
  }
LABEL_73:
  sub_228B05A34(v81);
  sub_228AE649C(a1);
  sub_228AE66B8(a1);
  sub_228AE6C28(a1);
  objc_msgSend(a1, sel_endUpdates);
  uint64_t v87 = v5[11];
  *(_DWORD *)uint64_t v73 = sub_228B74FA4(v5[10]);
  *(void *)(v73 + 8) = v87;
  uint64_t v88 = v5[9];
  *(_DWORD *)uint64_t v65 = sub_228B74FA4(v5[8]);
  *(void *)(v65 + 8) = v88;
  uint64_t v89 = v5[7];
  int v90 = sub_228B74FA4(v5[6]);
  uint64_t v91 = v110;
  *long long v110 = v90;
  *((void *)v91 + 1) = v89;
  uint64_t v92 = v5[15];
  int v93 = sub_228B74FA4(v5[14]);
  uint64_t v94 = v111;
  *int v111 = v93;
  *((void *)v94 + 1) = v92;
  uint64_t v95 = v5[13];
  int v96 = sub_228B74FA4(v5[12]);
  uint64_t v97 = v112;
  *uint64_t v112 = v96;
  *((void *)v97 + 1) = v95;
  uint64_t v98 = v5[5];
  int v99 = sub_228B74FA4(v5[4]);
  long long v100 = v114;
  _DWORD *v114 = v99;
  *((void *)v100 + 1) = v98;
  uint64_t v101 = v5[3];
  int v102 = sub_228B74FA4(v5[2]);
  uint64_t v103 = v115;
  *long long v115 = v102;
  *((void *)v103 + 1) = v101;
  uint64_t v104 = *v5;
  uint64_t v105 = v5[1];
  uint64_t result = sub_228B74FA4(v104);
  uint64_t v107 = v116;
  *int v116 = result;
  *((void *)v107 + 1) = v105;
  return result;
}

id sub_228AE4F60()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10A68]), sel_initWithFrame_locationManager_, *(void *)(v0 + 136), 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v1, sel_setHonorsLayoutMargins_, 1);
  return v1;
}

id sub_228AE4FC8@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StaticMapBridgingViewCoordinator(0)), sel_init);
  *a1 = result;
  return result;
}

uint64_t sub_228AE5004()
{
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_228BAF4E0;
  sub_228BACF58();
  sub_228B091A0(&qword_268292620, MEMORY[0x263F1A550]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292628);
  sub_228B0A36C(&qword_268292630, &qword_268292628);
  return sub_228BAD768();
}

unint64_t sub_228AE5160(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v71 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v85 = (int *)type metadata accessor for ResolvedAnnotation();
  MEMORY[0x270FA5388](v85);
  BOOL v84 = (void *)((char *)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292790);
  MEMORY[0x270FA5388](v13 - 8);
  int v15 = (char *)v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for CustomAnnotationViewModel(0);
  uint64_t v73 = *(void *)(v70 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v70);
  uint64_t v69 = (char *)v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v72 = (uint64_t)v66 - v18;
  uint64_t v68 = type metadata accessor for MapContentList.Item(0);
  uint64_t v19 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  unint64_t v86 = (char *)v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = a1;
  uint64_t v94 = a2;
  uint64_t v95 = a3;
  char v96 = a4;
  if (a2)
  {
    swift_retain();
    swift_retain();
    sub_228B0A3B0(a3, a4);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292738);
    MEMORY[0x22A6A6930](&v91, v21);
    uint64_t v22 = v95;
    char v23 = v96;
    swift_release();
    swift_release();
    sub_228B0A3C0(v22, v23);
    BOOL v67 = v92 - 1 < 2;
    if ((v92 - 1) > 1u) {
      sub_228B0A3C0(v91, v92);
    }
  }
  else
  {
    BOOL v67 = 0;
  }
  uint64_t v24 = (uint64_t *)v86;
  uint64_t v25 = *(void *)(a5 + 16);
  if (!v25) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v26 = a5 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  uint64_t v89 = *(void *)(v19 + 72);
  uint64_t v87 = (unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
  uint64_t v88 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56);
  v66[0] = a5;
  swift_bridgeObjectRetain();
  unint64_t v90 = MEMORY[0x263F8EE78];
  v66[1] = v10;
  uint64_t v27 = (uint64_t)v71;
  uint64_t v28 = v70;
  uint64_t v29 = (uint64_t)v69;
  uint64_t v30 = v68;
  do
  {
    sub_228B0A230(v26, (uint64_t)v24, type metadata accessor for MapContentList.Item);
    sub_228B0A230((uint64_t)v24 + *(int *)(v30 + 24), v27, type metadata accessor for MapContentList.Item.Content);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_228B0A300(v27, type metadata accessor for MapContentList.Item.Content);
      uint64_t v31 = 1;
    }
    else
    {
      sub_228B0A298(v27, (uint64_t)v84, (uint64_t (*)(void))type metadata accessor for ResolvedAnnotation);
      uint64_t v32 = (char *)v24 + *(int *)(v30 + 28);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268292728);
      sub_228B0A36C(&qword_268292730, &qword_268292728);
      sub_228BACE28();
      int v33 = v93;
      uint64_t v34 = *v24;
      swift_bridgeObjectRetain();
      int v35 = (void *)sub_228BACBC8();
      uint64_t v83 = v32;
      if (v35)
      {
        uint64_t v36 = v35;
        id v37 = objc_msgSend(v35, sel_string);

        uint64_t v77 = sub_228BAD408();
        uint64_t v76 = v38;
      }
      else
      {
        uint64_t v77 = 0;
        uint64_t v76 = 0;
      }
      unint64_t v39 = (void *)sub_228BACBB8();
      uint64_t v82 = v34;
      if (v39)
      {
        uint64_t v40 = v39;
        id v41 = objc_msgSend(v39, sel_string);

        uint64_t v75 = sub_228BAD408();
        uint64_t v74 = v42;
      }
      else
      {
        uint64_t v75 = 0;
        uint64_t v74 = 0;
      }
      uint64_t v43 = v84;
      uint64_t v44 = v85[11];
      int v45 = *(void **)((char *)v84 + v85[12]);
      char v46 = *((unsigned char *)v84 + v85[9]);
      char v47 = *((unsigned char *)v84 + v85[10]);
      uint64_t v48 = *(void *)((char *)v84 + v85[7]);
      uint64_t v49 = *v84;
      uint64_t v50 = v84[1];
      uint64_t v51 = v84[2];
      uint64_t v52 = v84[3];
      int v78 = v67 & (v33 ^ 1);
      uint64_t v53 = *(void *)((char *)v84 + v44);
      uint64_t v79 = *(void *)((char *)v84 + v44 + 8);
      LODWORD(v44) = *((unsigned __int8 *)v84 + v44 + 16);
      int v80 = *((unsigned __int8 *)v84 + v85[13]);
      int v81 = v44;
      id v54 = v45;
      swift_retain();
      sub_228B0A300((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for ResolvedAnnotation);
      uint64_t v28 = v70;
      int v55 = &v15[*(int *)(v70 + 64)];
      uint64_t v56 = sub_228BACE18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v55, v83, v56);
      uint64_t v31 = 0;
      uint64_t v57 = v77;
      *(void *)int v15 = v82;
      *((void *)v15 + 1) = v57;
      uint64_t v58 = v75;
      *((void *)v15 + 2) = v76;
      *((void *)v15 + 3) = v58;
      *((void *)v15 + 4) = v74;
      *((void *)v15 + 5) = v45;
      v15[48] = v46;
      v15[49] = v47;
      *((void *)v15 + 7) = v49;
      *((void *)v15 + 8) = v50;
      *((void *)v15 + 9) = v48;
      *((void *)v15 + 1__isPlatformVersionAtLeast(2, 18, 1, 0) = v51;
      *((void *)v15 + 11) = v52;
      v15[96] = v78;
      uint64_t v59 = v79;
      *((void *)v15 + 13) = v53;
      *((void *)v15 + 14) = v59;
      v15[120] = v81;
      v15[121] = v80;
      uint64_t v27 = (uint64_t)v71;
      uint64_t v29 = (uint64_t)v69;
      uint64_t v30 = v68;
      uint64_t v24 = (uint64_t *)v86;
    }
    (*v88)(v15, v31, 1, v28);
    sub_228B0A300((uint64_t)v24, type metadata accessor for MapContentList.Item);
    if ((*v87)(v15, 1, v28) == 1)
    {
      sub_228AC1A50((uint64_t)v15, &qword_268292790);
    }
    else
    {
      uint64_t v60 = v72;
      sub_228B0A298((uint64_t)v15, v72, type metadata accessor for CustomAnnotationViewModel);
      sub_228B0A298(v60, v29, type metadata accessor for CustomAnnotationViewModel);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v61 = v90;
      }
      else {
        unint64_t v61 = sub_228B767B4(0, *(void *)(v90 + 16) + 1, 1, v90);
      }
      unint64_t v63 = *(void *)(v61 + 16);
      unint64_t v62 = *(void *)(v61 + 24);
      if (v63 >= v62 >> 1) {
        unint64_t v61 = sub_228B767B4(v62 > 1, v63 + 1, 1, v61);
      }
      *(void *)(v61 + 16) = v63 + 1;
      unint64_t v64 = (*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
      unint64_t v90 = v61;
      sub_228B0A298(v29, v61 + v64 + *(void *)(v73 + 72) * v63, type metadata accessor for CustomAnnotationViewModel);
      uint64_t v24 = (uint64_t *)v86;
    }
    v26 += v89;
    --v25;
  }
  while (v25);
  swift_bridgeObjectRelease();
  return v90;
}

unint64_t sub_228AE59B0(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292750);
  MEMORY[0x270FA5388](v13 - 8);
  int v15 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for MarkerAnnotationViewModel(0);
  uint64_t v42 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v43 = (uint64_t)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v41 = (uint64_t)v38 - v19;
  if (a6)
  {
    BOOL v20 = 1;
    uint64_t v21 = *(void *)(a7 + 16);
    if (v21) {
      goto LABEL_3;
    }
    return MEMORY[0x263F8EE78];
  }
  uint64_t v46 = a1;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  char v49 = a4;
  if (a2)
  {
    uint64_t v33 = v16;
    swift_retain();
    swift_retain();
    sub_228B0A3B0(a3, a4);
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292738);
    MEMORY[0x22A6A6930](&v44, v34);
    int v35 = v48;
    char v36 = v49;
    swift_release();
    swift_release();
    sub_228B0A3C0(v35, v36);
    BOOL v20 = v45 - 1 < 2;
    if ((v45 - 1) > 1u) {
      sub_228B0A3C0(v44, v45);
    }
    uint64_t v16 = v33;
    uint64_t v21 = *(void *)(a7 + 16);
    if (v21) {
      goto LABEL_3;
    }
    return MEMORY[0x263F8EE78];
  }
  BOOL v20 = 0;
  uint64_t v21 = *(void *)(a7 + 16);
  if (!v21) {
    return MEMORY[0x263F8EE78];
  }
LABEL_3:
  uint64_t v22 = *(void *)(type metadata accessor for MapContentList.Item(0) - 8);
  uint64_t v23 = a7 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  uint64_t v24 = a7;
  uint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
  uint64_t v26 = *(void *)(v22 + 72);
  v38[1] = v24;
  swift_bridgeObjectRetain();
  unint64_t v27 = MEMORY[0x263F8EE78];
  int v28 = a6 & 1;
  uint64_t v40 = v26;
  int v39 = v28;
  do
  {
    sub_228B0094C(v23, v28, v20, (uint64_t)v15);
    if ((*v25)(v15, 1, v16) == 1)
    {
      sub_228AC1A50((uint64_t)v15, &qword_268292750);
    }
    else
    {
      BOOL v29 = v20;
      uint64_t v30 = v41;
      sub_228B0A298((uint64_t)v15, v41, type metadata accessor for MarkerAnnotationViewModel);
      sub_228B0A298(v30, v43, type metadata accessor for MarkerAnnotationViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v27 = sub_228B76A08(0, *(void *)(v27 + 16) + 1, 1, v27);
      }
      unint64_t v32 = *(void *)(v27 + 16);
      unint64_t v31 = *(void *)(v27 + 24);
      if (v32 >= v31 >> 1) {
        unint64_t v27 = sub_228B76A08(v31 > 1, v32 + 1, 1, v27);
      }
      *(void *)(v27 + 16) = v32 + 1;
      sub_228B0A298(v43, v27+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v32, type metadata accessor for MarkerAnnotationViewModel);
      BOOL v20 = v29;
      uint64_t v26 = v40;
      int v28 = v39;
    }
    v23 += v26;
    --v21;
  }
  while (v21);
  swift_bridgeObjectRelease();
  return v27;
}

unint64_t sub_228AE5D8C(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5)
{
  uint64_t v62 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x270FA5388](v62);
  uint64_t v11 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ResolvedUserAnnotation();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v55 = (uint64_t)v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292700);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for UserAnnotationViewModel(0);
  uint64_t v56 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v61 = (uint64_t)v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v54 = (uint64_t)v50 - v20;
  uint64_t v21 = type metadata accessor for MapContentList.Item(0);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  unint64_t v63 = (char *)v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = a1;
  uint64_t v68 = a2;
  uint64_t v69 = a3;
  char v70 = a4;
  if (a2)
  {
    swift_retain();
    swift_retain();
    sub_228B0A3B0(a3, a4);
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292738);
    MEMORY[0x22A6A6930](&v65, v24);
    uint64_t v25 = v69;
    char v26 = v70;
    swift_release();
    swift_release();
    sub_228B0A3C0(v25, v26);
    BOOL v53 = v66 - 1 < 2;
    if ((v66 - 1) > 1u) {
      sub_228B0A3C0(v65, v66);
    }
    uint64_t v27 = *(void *)(a5 + 16);
    if (v27) {
      goto LABEL_5;
    }
    return MEMORY[0x263F8EE78];
  }
  BOOL v53 = 0;
  uint64_t v27 = *(void *)(a5 + 16);
  if (!v27) {
    return MEMORY[0x263F8EE78];
  }
LABEL_5:
  uint64_t v28 = a5 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  uint64_t v29 = *(void *)(v22 + 72);
  uint64_t v59 = (unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48);
  uint64_t v60 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56);
  v50[1] = a5;
  swift_bridgeObjectRetain();
  unint64_t v64 = MEMORY[0x263F8EE78];
  uint64_t v30 = (uint64_t *)v63;
  uint64_t v51 = v29;
  uint64_t v52 = v21;
  do
  {
    sub_228B0A230(v28, (uint64_t)v30, type metadata accessor for MapContentList.Item);
    sub_228B0A230((uint64_t)v30 + *(int *)(v21 + 24), (uint64_t)v11, type metadata accessor for MapContentList.Item.Content);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v31 = v17;
      uint64_t v32 = v55;
      sub_228B0A298((uint64_t)v11, v55, (uint64_t (*)(void))type metadata accessor for ResolvedUserAnnotation);
      uint64_t v33 = (char *)v30 + *(int *)(v21 + 28);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268292728);
      sub_228B0A36C(&qword_268292730, &qword_268292728);
      sub_228BACE28();
      uint64_t v34 = *v30;
      uint64_t v35 = *(void *)(v32 + 16);
      uint64_t v36 = *(void *)(v32 + 24);
      uint64_t v37 = *(void *)v32;
      uint64_t v38 = *(void *)(v32 + 8);
      int v58 = v53 & (v67 ^ 1);
      int v57 = *(unsigned __int8 *)(v32 + 40);
      swift_bridgeObjectRetain();
      sub_228AD2688(v35);
      sub_228B0A300(v32, (uint64_t (*)(void))type metadata accessor for ResolvedUserAnnotation);
      int v39 = v11;
      uint64_t v40 = &v16[*(int *)(v31 + 36)];
      uint64_t v41 = sub_228BACE18();
      uint64_t v42 = v40;
      uint64_t v11 = v39;
      uint64_t v17 = v31;
      uint64_t v29 = v51;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v42, v33, v41);
      uint64_t v43 = 0;
      *(void *)uint64_t v16 = v34;
      *((void *)v16 + 1) = v35;
      uint64_t v21 = v52;
      uint64_t v30 = (uint64_t *)v63;
      *((void *)v16 + 2) = v36;
      *((void *)v16 + 3) = v37;
      *((void *)v16 + 4) = v38;
      v16[40] = v58;
      v16[41] = v57;
    }
    else
    {
      sub_228B0A300((uint64_t)v11, type metadata accessor for MapContentList.Item.Content);
      uint64_t v43 = 1;
    }
    (*v60)(v16, v43, 1, v17);
    sub_228B0A300((uint64_t)v30, type metadata accessor for MapContentList.Item);
    if ((*v59)(v16, 1, v17) == 1)
    {
      sub_228AC1A50((uint64_t)v16, &qword_268292700);
    }
    else
    {
      uint64_t v44 = v54;
      sub_228B0A298((uint64_t)v16, v54, type metadata accessor for UserAnnotationViewModel);
      sub_228B0A298(v44, v61, type metadata accessor for UserAnnotationViewModel);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v45 = v64;
      }
      else {
        unint64_t v45 = sub_228B76A3C(0, *(void *)(v64 + 16) + 1, 1, v64);
      }
      unint64_t v47 = *(void *)(v45 + 16);
      unint64_t v46 = *(void *)(v45 + 24);
      if (v47 >= v46 >> 1) {
        unint64_t v45 = sub_228B76A3C(v46 > 1, v47 + 1, 1, v45);
      }
      *(void *)(v45 + 16) = v47 + 1;
      unint64_t v48 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
      unint64_t v64 = v45;
      sub_228B0A298(v61, v45 + v48 + *(void *)(v56 + 72) * v47, type metadata accessor for UserAnnotationViewModel);
      uint64_t v30 = (uint64_t *)v63;
    }
    v28 += v29;
    --v27;
  }
  while (v27);
  swift_bridgeObjectRelease();
  return v64;
}

uint64_t sub_228AE6418(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *a2 + *a5;
  *(_DWORD *)uint64_t v8 = *(_DWORD *)a1;
  *(void *)(v8 + 8) = v5;
  *(void *)(v8 + 16) = v6;
  *(void *)(v8 + 24) = v7;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_228AE649C(void *a1)
{
  uint64_t v2 = v1 + *(int *)(type metadata accessor for StaticMapBridgingView(0) + 64);
  long long v3 = *(_OWORD *)(v2 + 64);
  v24[3] = *(_OWORD *)(v2 + 48);
  v24[4] = v3;
  __int16 v25 = *(_WORD *)(v2 + 80);
  long long v4 = *(_OWORD *)(v2 + 32);
  v24[1] = *(_OWORD *)(v2 + 16);
  v24[2] = v4;
  v24[0] = *(_OWORD *)v2;
  sub_228AD244C((uint64_t)v24, (void (*)(void, void, void, void, void, void, void, void, void, void, _WORD))sub_228AD2340);
  sub_228ACFEC4((uint64_t)v18);
  sub_228AD244C((uint64_t)v24, (void (*)(void, void, void, void, void, void, void, void, void, void, _WORD))sub_228AD24B0);
  uint64_t v6 = v18[0];
  uint64_t v5 = v18[1];
  uint64_t v7 = v19;
  uint64_t v8 = v22;
  uint64_t v9 = v23;
  if (v19 != 1)
  {
    id v11 = sub_228B8A0B4();
    uint64_t v14 = v6;
    uint64_t v15 = v5;
    uint64_t v16 = v7;
LABEL_7:
    sub_228AD252C(v14, v15, v16);
    sub_228AD2574(v8, v9);
    uint64_t v10 = a1;
    goto LABEL_10;
  }
  if ((v21 & 1) == 0)
  {
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10908]), sel_initWithElevationStyle_, v20);
    uint64_t v14 = v6;
    uint64_t v15 = v5;
    uint64_t v16 = 1;
    goto LABEL_7;
  }
  uint64_t v10 = a1;
  if (v23 == 1)
  {
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10A30]), sel_init);
    sub_228AD252C(v6, v5, 1);
    uint64_t v12 = v8;
    uint64_t v13 = 1;
  }
  else
  {
    id v11 = sub_228B8A22C();
    sub_228AD252C(v6, v5, 1);
    uint64_t v12 = v8;
    uint64_t v13 = v9;
  }
  sub_228AD2574(v12, v13);
LABEL_10:
  objc_msgSend(v10, sel_setPreferredConfiguration_, v11);
}

id sub_228AE66B8(void *a1)
{
  id v32 = a1;
  uint64_t v31 = sub_228BAC848();
  uint64_t v1 = *(void *)(v31 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v31);
  long long v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v29 - v5;
  uint64_t v30 = sub_228BACD08();
  uint64_t v7 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_228BACB68();
  uint64_t v10 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticMapBridgingView(0);
  sub_228ACFE4C((uint64_t)v12);
  sub_228BACCF8();
  sub_228BACF88();
  sub_228BACB58();
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;
  double v20 = v19;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v30);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v29);
  sub_228ACFE84((uint64_t)v6);
  uint64_t v21 = *MEMORY[0x263F18DC8];
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  uint64_t v23 = v31;
  v22(v4, v21, v31);
  LOBYTE(v7) = sub_228BAC838();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v1 + 8);
  v24(v4, v23);
  v24(v6, v23);
  if (v7) {
    double v25 = v16;
  }
  else {
    double v25 = v20;
  }
  sub_228ACFE84((uint64_t)v6);
  v22(v4, v21, v23);
  char v26 = sub_228BAC838();
  v24(v4, v23);
  v24(v6, v23);
  if (v26) {
    double v27 = v20;
  }
  else {
    double v27 = v16;
  }
  return objc_msgSend(v32, sel_setLayoutMargins_, v14, v25, v18, v27, v29);
}

unint64_t sub_228AE6A20@<X0>(unint64_t result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = result;
  if ((result >> 61) < 4)
  {
    uint64_t v5 = *MEMORY[0x263F834E8];
    uint64_t v6 = *(void *)(MEMORY[0x263F834E8] + 8);
    uint64_t v7 = *(void *)(MEMORY[0x263F834E8] + 16);
    uint64_t v8 = *(void *)(MEMORY[0x263F834E8] + 24);
    id result = sub_228B0596C(result);
    char v9 = 0;
    goto LABEL_29;
  }
  if (result >> 61 != 4)
  {
    if (result != 0xA000000000000000) {
      goto LABEL_11;
    }
    sub_228B1ACB8(v20, 0xA000000000000000);
    id result = sub_228ACD8BC((uint64_t)v20, (uint64_t)&v22, (uint64_t *)&unk_268293010);
    if (v24) {
      goto LABEL_11;
    }
    id result = swift_allocObject();
    char v9 = 0;
    long long v12 = v22;
    long long v13 = v23;
    uint64_t v3 = result | 0x2000000000000000;
    goto LABEL_28;
  }
  unint64_t v11 = *(void *)((result & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
  sub_228B0596C(v11);
  if (objc_msgSend(a2, sel_hasUserLocation))
  {
    id result = sub_228B05A34(v11);
LABEL_11:
    uint64_t v3 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    char v9 = 2;
    goto LABEL_29;
  }
  if (v11 == 0xA000000000000000)
  {
    unint64_t v14 = sub_228B0596C(0xA000000000000000);
    sub_228B1ACB8(v20, v14);
    id result = sub_228ACD8BC((uint64_t)v20, (uint64_t)&v22, (uint64_t *)&unk_268293010);
    if (v24) {
      goto LABEL_11;
    }
    id result = swift_allocObject();
    long long v12 = v22;
    long long v13 = v23;
    uint64_t v3 = result | 0x2000000000000000;
    char v9 = 1;
LABEL_28:
    *(_OWORD *)(result + 16) = v12;
    *(_OWORD *)(result + 32) = v13;
    uint64_t v7 = 0x403C000000000000;
    uint64_t v5 = 0x404C000000000000;
    uint64_t v6 = 0x404C000000000000;
    uint64_t v8 = 0x404C000000000000;
    goto LABEL_29;
  }
  sub_228B0596C(v11);
  sub_228AE6A20(v20, v11, a2);
  uint64_t v15 = v20[0];
  uint64_t v16 = v20[1];
  uint64_t v6 = v20[2];
  uint64_t v17 = v20[3];
  uint64_t v18 = v20[4];
  char v19 = v21;
  sub_228B05A34(v11);
  sub_228B05A34(v11);
  id result = sub_228ACD8BC((uint64_t)v20, (uint64_t)&v22, (uint64_t *)&unk_268292640);
  if (v25 == 2) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = v15;
  }
  if (v25 == 2) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = v16;
  }
  if (v25 == 2)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = v17;
  }
  if (v25 == 2) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = v18;
  }
  if (v25 == 2) {
    char v9 = 2;
  }
  else {
    char v9 = v19;
  }
LABEL_29:
  *(void *)a3 = v3;
  *(void *)(a3 + 8) = v5;
  *(void *)(a3 + 16) = v6;
  *(void *)(a3 + 24) = v7;
  *(void *)(a3 + 32) = v8;
  *(unsigned char *)(a3 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v9;
  return result;
}

void sub_228AE6C28(void *a1)
{
  uint64_t v3 = *(void *)(v1 + qword_2682928E0 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_228B784A0(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4 < 0 || (v4 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_228BAD958();
    swift_release();
    if (v9) {
      goto LABEL_4;
    }
  }
  else if (*(void *)(v4 + 16))
  {
LABEL_4:
    if ((v4 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = (unsigned char *)MEMORY[0x22A6A6FA0](0, v4);
      goto LABEL_7;
    }
    if (*(void *)(v4 + 16))
    {
      uint64_t v5 = *(id *)(v4 + 32);
LABEL_7:
      long long v13 = v5;
      uint64_t v6 = swift_release();
      if (v13[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature] != 1)
      {
        objc_msgSend(a1, sel_selectAnnotation_animated_);
        goto LABEL_11;
      }
      uint64_t v7 = *(void **)&v13[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem];
      if (v7)
      {
        id v8 = v7;
        objc_msgSend(a1, sel_selectMapItem_, v8);

LABEL_11:

        return;
      }
_objc_release_x2:
      MEMORY[0x270F9A790](v6);
      return;
    }
    __break(1u);
LABEL_30:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_228BAD958();
    swift_release();
    if (!v12) {
      goto LABEL_31;
    }
    goto LABEL_21;
  }
  swift_release();
  uint64_t v10 = *(void *)(v1 + qword_2682928F0 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_228B784A0(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1 < 0 || (v1 & 0x4000000000000000) != 0) {
    goto LABEL_30;
  }
  if (!*(void *)(v1 + 16))
  {
LABEL_31:
    swift_release();
    return;
  }
LABEL_21:
  if ((v1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x22A6A6FA0](0, v1);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    uint64_t v11 = *(void *)(v1 + 16);
    uint64_t v6 = swift_release();
    if (!v11)
    {
      __break(1u);
      goto _objc_release_x2;
    }
  }
  if (objc_msgSend(a1, sel_showsUserLocation))
  {
    objc_msgSend(a1, sel_selectUserLocationAnimated_, 0);
  }
}

id sub_228AE6EEC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  swift_unknownObjectRetain();
  id v7 = a1;
  id v8 = (void *)sub_228B1C068(a4, 0);

  swift_unknownObjectRelease();

  return v8;
}

id sub_228AE6F64(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  swift_unknownObjectRetain();
  id v7 = a1;
  id v8 = (void *)sub_228B3C778(a4);

  swift_unknownObjectRelease();

  return v8;
}

id sub_228AE6FD8(char *a1)
{
  *(void *)&a1[qword_2682924B8] = 0xF000000000000007;
  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for StaticMapBridgingViewCoordinator(0);
  return objc_msgSendSuper2(&v2, sel_init);
}

unint64_t sub_228AE702C()
{
  return sub_228B093A0(*(void *)(v0 + qword_2682924B8));
}

id sub_228AE703C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StaticMapBridgingViewCoordinator(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_228AE7074(uint64_t a1)
{
  return sub_228B093A0(*(void *)(a1 + qword_2682924B8));
}

uint64_t sub_228AE7084(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v231 = a1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292658);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v228 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)v259 = v5;
  id v239 = v5;
  uint64_t v242 = a5;
  long long v13 = (void (*)(unsigned char *, void))swift_readAtKeyPath();
  uint64_t v15 = *(void *)(v14 + 16);
  swift_bridgeObjectRetain();
  v13(v270, 0);

  uint64_t v16 = a2[2];
  if (v16)
  {
    int64_t v235 = (int64_t)v12;
    uint64_t v236 = a3;
    uint64_t v237 = v15;
    uint64_t v238 = a4;
    uint64_t v17 = (char *)v271 + 8;
    swift_bridgeObjectRetain();
    uint64_t v18 = v16 - 1;
    char v19 = (void *)MEMORY[0x263F8EE78];
    uint64_t v20 = 4;
    v232 = (void *)MEMORY[0x263F8EE78];
    v233 = (void *)MEMORY[0x263F8EE78];
    v240 = (char *)v271 + 8;
    v241 = a2;
    while (1)
    {
      long long v21 = *(_OWORD *)&a2[v20 + 10];
      long long v22 = *(_OWORD *)&a2[v20 + 14];
      long long v276 = *(_OWORD *)&a2[v20 + 12];
      long long v277 = v22;
      long long v23 = *(_OWORD *)&a2[v20 + 2];
      long long v24 = *(_OWORD *)&a2[v20 + 6];
      long long v272 = *(_OWORD *)&a2[v20 + 4];
      long long v273 = v24;
      long long v25 = *(_OWORD *)&a2[v20 + 6];
      long long v26 = *(_OWORD *)&a2[v20 + 10];
      long long v274 = *(_OWORD *)&a2[v20 + 8];
      long long v275 = v26;
      long long v27 = *(_OWORD *)&a2[v20 + 2];
      v271[0] = *(_OWORD *)&a2[v20];
      v271[1] = v27;
      long long v28 = *(_OWORD *)&a2[v20 + 14];
      *(_OWORD *)&v270[96] = v276;
      *(_OWORD *)&v270[112] = v28;
      *(_OWORD *)&v270[32] = v272;
      *(_OWORD *)&v270[48] = v25;
      *(_OWORD *)&v270[64] = v274;
      *(_OWORD *)&v270[80] = v21;
      uint64_t v278 = a2[v20 + 16];
      *(void *)&v270[128] = a2[v20 + 16];
      *(_OWORD *)v270 = v271[0];
      *(_OWORD *)&v270[16] = v23;
      sub_228B098C0((uint64_t)v17, (uint64_t)v279);
      uint64_t v29 = *(void *)&v271[0];
      *(void *)&long long v261 = v239;
      id v30 = v239;
      sub_228B0991C((uint64_t)v271);
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();

      uint64_t v31 = *(void *)&v259[24];
      if (!*(void *)(*(void *)&v259[24] + 16)) {
        break;
      }
      unint64_t v32 = sub_228AD1964(v29);
      if ((v33 & 1) == 0) {
        break;
      }
      id v34 = *(id *)(*(void *)(v31 + 56) + 8 * v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)&v248[0] = v30;
      id v35 = v30;
      id v36 = v34;
      swift_getAtKeyPath();

      uint64_t v37 = v251;
      if (!*(void *)(v251 + 16) || (unint64_t v38 = sub_228AD1914((uint64_t)v36), (v39 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_34;
      }
      uint64_t v40 = *(void *)(v37 + 56) + 136 * v38;
      *(_OWORD *)v259 = *(_OWORD *)v40;
      long long v41 = *(_OWORD *)(v40 + 48);
      long long v42 = *(_OWORD *)(v40 + 64);
      long long v43 = *(_OWORD *)(v40 + 32);
      *(_OWORD *)&v259[16] = *(_OWORD *)(v40 + 16);
      *(_OWORD *)&v259[32] = v43;
      *(_OWORD *)&v259[48] = v41;
      *(_OWORD *)&v259[64] = v42;
      long long v44 = *(_OWORD *)(v40 + 80);
      long long v45 = *(_OWORD *)(v40 + 96);
      long long v46 = *(_OWORD *)(v40 + 112);
      *(void *)&v259[128] = *(void *)(v40 + 128);
      *(_OWORD *)&v259[96] = v45;
      *(_OWORD *)&v259[112] = v46;
      *(_OWORD *)&v259[80] = v44;
      sub_228B0991C((uint64_t)v259);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v47 = *(double *)&v259[8];
      double v48 = *(double *)&v259[16];
      double v49 = *(double *)&v259[24];
      double v50 = *(double *)&v259[32];
      int v51 = v259[40];
      sub_228B098C0((uint64_t)v279, (uint64_t)&v285);
      if (v289)
      {
        if (!v51 || v285 != v47 || v286 != v48 || v287 != v49 || v288 != v50) {
          goto LABEL_33;
        }
      }
      else if ((v51 & 1) != 0 || v285 != v47 || v286 != v48 || v287 != v49)
      {
LABEL_33:
        sub_228B09840((uint64_t)v259);
LABEL_34:

        uint64_t v17 = v240;
        a2 = v241;
LABEL_35:
        sub_228B098C0((uint64_t)v279, (uint64_t)&v280);
        if (v284) {
          id v73 = objc_msgSend(self, sel_circleWithMapRect_, v280, v281, v282, v283);
        }
        else {
          id v73 = objc_msgSend(self, sel_circleWithCenterCoordinate_radius_, v280, v281, v282);
        }
        id v74 = v73;
        sub_228B0991C((uint64_t)v271);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v19 = sub_228B77174(0, v19[2] + 1, 1, v19);
        }
        unint64_t v76 = v19[2];
        unint64_t v75 = v19[3];
        if (v76 >= v75 >> 1) {
          char v19 = sub_228B77174((void *)(v75 > 1), v76 + 1, 1, v19);
        }
        *(_OWORD *)&v259[32] = *(_OWORD *)&v270[32];
        *(_OWORD *)&v259[48] = *(_OWORD *)&v270[48];
        *(void *)&v259[128] = *(void *)&v270[128];
        *(_OWORD *)&v259[96] = *(_OWORD *)&v270[96];
        *(_OWORD *)&v259[112] = *(_OWORD *)&v270[112];
        *(_OWORD *)&v259[64] = *(_OWORD *)&v270[64];
        *(_OWORD *)&v259[80] = *(_OWORD *)&v270[80];
        *(_OWORD *)v259 = *(_OWORD *)v270;
        *(_OWORD *)&v259[16] = *(_OWORD *)&v270[16];
        void v19[2] = v76 + 1;
        uint64_t v77 = &v19[18 * v76];
        v77[4] = v74;
        *(_OWORD *)(v77 + 5) = *(_OWORD *)v259;
        long long v78 = *(_OWORD *)&v259[16];
        long long v79 = *(_OWORD *)&v259[32];
        long long v80 = *(_OWORD *)&v259[48];
        *(_OWORD *)(v77 + 13) = *(_OWORD *)&v259[64];
        *(_OWORD *)(v77 + 11) = v80;
        *(_OWORD *)(v77 + 9) = v79;
        *(_OWORD *)(v77 + 7) = v78;
        long long v81 = *(_OWORD *)&v259[80];
        long long v82 = *(_OWORD *)&v259[96];
        long long v83 = *(_OWORD *)&v259[112];
        v77[21] = *(void *)&v259[128];
        *(_OWORD *)(v77 + 19) = v83;
        *(_OWORD *)(v77 + 17) = v82;
        *(_OWORD *)(v77 + 15) = v81;
        sub_228B09840((uint64_t)v271);
        if (!v18) {
          goto LABEL_50;
        }
        goto LABEL_43;
      }
      if (v278 != *(void *)&v259[128]) {
        goto LABEL_33;
      }
      uint64_t v52 = sub_228BACAF8();
      uint64_t v53 = *(void *)(v52 - 8);
      uint64_t v54 = v235;
      (*(void (**)(int64_t, uint64_t, uint64_t))(v53 + 16))(v235, v236, v52);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v54, 0, 1, v52);
      id v55 = v231;
      uint64_t v56 = sub_228B07900(v55, v36, v238, v54, (uint64_t)v271);
      uint64_t v58 = v57;
      v234 = (void *)v59;
      uint64_t v230 = v60;
      sub_228AC1A50(v54, &qword_268292658);

      uint64_t v228 = v58;
      if (v56)
      {
        uint64_t v61 = swift_allocObject();
        *(void *)(v61 + 16) = v56;
        *(void *)(v61 + 24) = v58;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v232 = sub_228B768F8(0, v232[2] + 1, 1, v232);
        }
        unint64_t v63 = v232[2];
        unint64_t v62 = v232[3];
        if (v63 >= v62 >> 1) {
          v232 = sub_228B768F8((void *)(v62 > 1), v63 + 1, 1, v232);
        }
        unint64_t v64 = v232;
        v232[2] = v63 + 1;
        id v65 = &v64[2 * v63];
        v65[4] = sub_228B0B0E0;
        v65[5] = v61;
      }
      v229 = v56;
      uint64_t v66 = (uint64_t)v234;
      if (v234)
      {
        uint64_t v67 = swift_allocObject();
        *(void *)(v67 + 16) = v66;
        *(void *)(v67 + 24) = v230;
        swift_retain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        a2 = v241;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          v233 = sub_228B768F8(0, v233[2] + 1, 1, v233);
        }
        unint64_t v70 = v233[2];
        unint64_t v69 = v233[3];
        if (v70 >= v69 >> 1) {
          v233 = sub_228B768F8((void *)(v69 > 1), v70 + 1, 1, v233);
        }
        uint64_t v71 = v233;
        v233[2] = v70 + 1;
        uint64_t v72 = &v71[2 * v70];
        v72[4] = sub_228AE2A90;
        v72[5] = v67;
      }
      else
      {
        a2 = v241;
      }
      uint64_t v84 = v237;
      swift_bridgeObjectRetain();
      unint64_t v85 = sub_228AD1914((uint64_t)v36);
      char v87 = v86;
      swift_bridgeObjectRelease();
      if (v87)
      {
        char v88 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v243[0] = v84;
        if ((v88 & 1) == 0)
        {
          sub_228B03B44();
          uint64_t v84 = *(void *)&v243[0];
        }

        uint64_t v89 = *(void *)(v84 + 56) + 136 * v85;
        long long v261 = *(_OWORD *)v89;
        long long v90 = *(_OWORD *)(v89 + 48);
        long long v91 = *(_OWORD *)(v89 + 64);
        long long v92 = *(_OWORD *)(v89 + 32);
        long long v262 = *(_OWORD *)(v89 + 16);
        long long v263 = v92;
        long long v264 = v90;
        long long v265 = v91;
        long long v93 = *(_OWORD *)(v89 + 80);
        long long v94 = *(_OWORD *)(v89 + 96);
        long long v95 = *(_OWORD *)(v89 + 112);
        uint64_t v269 = *(void *)(v89 + 128);
        long long v267 = v94;
        long long v268 = v95;
        long long v266 = v93;
        uint64_t v237 = v84;
        sub_228B02C44(v85, v84);
        swift_bridgeObjectRelease();
        sub_228B09840((uint64_t)&v261);
      }
      *(void *)&v243[0] = v35;
      id v96 = v35;
      sub_228B0991C((uint64_t)v271);
      id v97 = v36;
      uint64_t v98 = (void (*)(long long *, void))swift_modifyAtReferenceWritableKeyPath();
      uint64_t v100 = v99;
      char v101 = swift_isUniquelyReferenced_nonNull_native();
      v246[0] = *(id *)(v100 + 16);
      *(void *)(v100 + 16) = 0x8000000000000000;
      sub_228B04928((uint64_t)v271, v97, v101);
      *(id *)(v100 + 16) = v246[0];

      swift_bridgeObjectRelease();
      v98(&v261, 0);
      sub_228AD2678((uint64_t)v234);
      sub_228AD2678((uint64_t)v229);

      sub_228B09840((uint64_t)v259);
      sub_228B09840((uint64_t)v271);
      uint64_t v17 = v240;
      if (!v18)
      {
LABEL_50:
        swift_bridgeObjectRelease();
        uint64_t v15 = v237;
        v234 = v19;
        if (v238) {
          goto LABEL_51;
        }
        goto LABEL_52;
      }
LABEL_43:
      --v18;
      v20 += 17;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  v232 = (void *)MEMORY[0x263F8EE78];
  v233 = (void *)MEMORY[0x263F8EE78];
  v234 = (void *)MEMORY[0x263F8EE78];
  if (a4)
  {
LABEL_51:
    int v102 = self;
    uint64_t v103 = swift_allocObject();
    *(void *)(v103 + 16) = v232;
    *(void *)&v270[32] = sub_228B099A0;
    *(void *)&v270[40] = v103;
    *(void *)v270 = MEMORY[0x263EF8330];
    *(void *)&v270[8] = 1107296256;
    *(void *)&v270[16] = sub_228B005F8;
    *(void *)&v270[24] = &block_descriptor;
    uint64_t v104 = _Block_copy(v270);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v105 = swift_allocObject();
    *(void *)(v105 + 16) = v233;
    *(void *)&v270[32] = sub_228B099C0;
    *(void *)&v270[40] = v105;
    *(void *)v270 = MEMORY[0x263EF8330];
    *(void *)&v270[8] = 1107296256;
    *(void *)&v270[16] = sub_228B0063C;
    *(void *)&v270[24] = &block_descriptor_90;
    uint64_t v106 = _Block_copy(v270);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v102, sel_animateWithDuration_animations_completion_, v104, v106, 0.25);
    _Block_release(v106);
    _Block_release(v104);
  }
LABEL_52:
  uint64_t v107 = *(void *)(v15 + 64);
  uint64_t v236 = v15 + 64;
  uint64_t v108 = -1;
  uint64_t v109 = -1 << *(unsigned char *)(v15 + 32);
  uint64_t v230 = ~v109;
  if (-v109 < 64) {
    uint64_t v108 = ~(-1 << -(char)v109);
  }
  unint64_t v110 = v108 & v107;
  int64_t v235 = (unint64_t)(63 - v109) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v237 = v15;
  uint64_t v238 = 0;
  while (1)
  {
    if (v110)
    {
      v241 = (void *)((v110 - 1) & v110);
      unint64_t v118 = __clz(__rbit64(v110)) | (v238 << 6);
      goto LABEL_73;
    }
    int64_t v119 = v238 + 1;
    if (__OFADD__(v238, 1))
    {
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (v119 >= v235) {
      goto LABEL_80;
    }
    unint64_t v120 = *(void *)(v236 + 8 * v119);
    uint64_t v121 = v238 + 1;
    if (!v120)
    {
      uint64_t v121 = v238 + 2;
      if (v238 + 2 >= v235) {
        goto LABEL_80;
      }
      unint64_t v120 = *(void *)(v236 + 8 * v121);
      if (!v120)
      {
        uint64_t v121 = v238 + 3;
        if (v238 + 3 >= v235) {
          goto LABEL_80;
        }
        unint64_t v120 = *(void *)(v236 + 8 * v121);
        if (!v120) {
          break;
        }
      }
    }
LABEL_72:
    v241 = (void *)((v120 - 1) & v120);
    unint64_t v118 = __clz(__rbit64(v120)) + (v121 << 6);
    uint64_t v238 = v121;
LABEL_73:
    uint64_t v123 = *(void **)(*(void *)(v15 + 48) + 8 * v118);
    uint64_t v124 = *(void *)(v15 + 56) + 136 * v118;
    v248[0] = *(_OWORD *)v124;
    long long v125 = *(_OWORD *)(v124 + 64);
    long long v127 = *(_OWORD *)(v124 + 16);
    long long v126 = *(_OWORD *)(v124 + 32);
    v248[3] = *(_OWORD *)(v124 + 48);
    v248[4] = v125;
    v248[1] = v127;
    v248[2] = v126;
    long long v129 = *(_OWORD *)(v124 + 96);
    long long v128 = *(_OWORD *)(v124 + 112);
    long long v130 = *(_OWORD *)(v124 + 80);
    uint64_t v249 = *(void *)(v124 + 128);
    v248[6] = v129;
    v248[7] = v128;
    v248[5] = v130;
    long long v255 = *(_OWORD *)(v124 + 80);
    long long v256 = *(_OWORD *)(v124 + 96);
    long long v257 = *(_OWORD *)(v124 + 112);
    uint64_t v258 = *(void *)(v124 + 128);
    long long v251 = *(_OWORD *)(v124 + 16);
    long long v252 = *(_OWORD *)(v124 + 32);
    long long v253 = *(_OWORD *)(v124 + 48);
    long long v254 = *(_OWORD *)(v124 + 64);
    long long v250 = *(_OWORD *)v124;
    *(void *)v259 = v123;
    *(_OWORD *)&v259[40] = v252;
    *(_OWORD *)&v259[56] = v253;
    *(_OWORD *)&v259[8] = v250;
    *(_OWORD *)&v259[24] = v251;
    uint64_t v260 = v258;
    *(_OWORD *)&v259[104] = v256;
    *(_OWORD *)&v259[120] = v257;
    *(_OWORD *)&v259[72] = v254;
    *(_OWORD *)&v259[88] = v255;
    nullsub_1(v259);
    sub_228ACD8BC((uint64_t)v259, (uint64_t)v270, (uint64_t *)&unk_268292660);
    v240 = *(char **)v270;
    long long v267 = *(_OWORD *)&v270[104];
    long long v268 = *(_OWORD *)&v270[120];
    uint64_t v269 = *(void *)&v270[136];
    long long v263 = *(_OWORD *)&v270[40];
    long long v264 = *(_OWORD *)&v270[56];
    long long v265 = *(_OWORD *)&v270[72];
    long long v266 = *(_OWORD *)&v270[88];
    long long v261 = *(_OWORD *)&v270[8];
    long long v262 = *(_OWORD *)&v270[24];
    uint64_t v131 = *(void *)&v270[8];
    v246[0] = v239;
    v132 = v239;
    sub_228B0991C((uint64_t)v248);
    id v133 = v123;
    swift_bridgeObjectRetain();
    v134 = (void (*)(_OWORD *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v136 = v135;
    swift_bridgeObjectRetain();
    unint64_t v137 = sub_228AD1964(v131);
    char v139 = v138;
    swift_bridgeObjectRelease();
    if (v139)
    {
      char v140 = swift_isUniquelyReferenced_nonNull_native();
      v141 = *(void **)(v136 + 24);
      v247 = v141;
      *(void *)(v136 + 24) = 0x8000000000000000;
      if ((v140 & 1) == 0)
      {
        sub_228B0464C(&qword_268292680);
        v141 = v247;
      }
      swift_bridgeObjectRelease();
      v142 = *(void **)(v141[7] + 8 * v137);
      sub_228B03380(v137, (uint64_t)v141);
      *(void *)(v136 + 24) = v141;

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v134(v243, 0);

    v247 = v132;
    v143 = v132;
    v144 = (void (*)(id *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v146 = v145;
    swift_bridgeObjectRetain();
    v147 = v240;
    unint64_t v148 = sub_228AD1914((uint64_t)v240);
    char v150 = v149;
    swift_bridgeObjectRelease();
    if (v150)
    {
      int v151 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v152 = *(void *)(v146 + 16);
      uint64_t v245 = v152;
      *(void *)(v146 + 16) = 0x8000000000000000;
      if (!v151)
      {
        sub_228B03B44();
        uint64_t v152 = v245;
      }

      uint64_t v111 = *(void *)(v152 + 56) + 136 * v148;
      v243[0] = *(_OWORD *)v111;
      long long v112 = *(_OWORD *)(v111 + 48);
      long long v113 = *(_OWORD *)(v111 + 64);
      long long v114 = *(_OWORD *)(v111 + 32);
      v243[1] = *(_OWORD *)(v111 + 16);
      v243[2] = v114;
      v243[3] = v112;
      v243[4] = v113;
      long long v115 = *(_OWORD *)(v111 + 80);
      long long v116 = *(_OWORD *)(v111 + 96);
      long long v117 = *(_OWORD *)(v111 + 112);
      uint64_t v244 = *(void *)(v111 + 128);
      v243[6] = v116;
      v243[7] = v117;
      v243[5] = v115;
      sub_228B02C44(v148, v152);
      *(void *)(v146 + 16) = v152;
      swift_bridgeObjectRelease();
      sub_228B09840((uint64_t)v243);
    }
    v144(v246, 0);

    sub_228B09840((uint64_t)&v261);
    uint64_t v15 = v237;
    unint64_t v110 = (unint64_t)v241;
  }
  uint64_t v122 = v238 + 4;
  if (v238 + 4 < v235)
  {
    unint64_t v120 = *(void *)(v236 + 8 * v122);
    if (!v120)
    {
      while (1)
      {
        uint64_t v121 = v122 + 1;
        if (__OFADD__(v122, 1)) {
          goto LABEL_117;
        }
        if (v121 >= v235) {
          goto LABEL_80;
        }
        unint64_t v120 = *(void *)(v236 + 8 * v121);
        ++v122;
        if (v120) {
          goto LABEL_72;
        }
      }
    }
    uint64_t v121 = v238 + 4;
    goto LABEL_72;
  }
LABEL_80:
  sub_228AC98B8();
  uint64_t v153 = swift_bridgeObjectRetain();
  unint64_t v154 = sub_228B0079C(v153);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v154 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_228BAD9F8();
    sub_228AD25BC(0, (unint64_t *)&qword_268293000);
    unint64_t v155 = v154;
    goto LABEL_82;
  }
LABEL_118:
  sub_228AD25BC(0, (unint64_t *)&qword_268293000);
  swift_bridgeObjectRetain();
  unint64_t v155 = sub_228BAD948();
  swift_bridgeObjectRelease();
LABEL_82:
  uint64_t v156 = (uint64_t)v234;
  swift_bridgeObjectRelease();
  sub_228B00098(v155);
  swift_bridgeObjectRelease();
  uint64_t v157 = *(void *)(v156 + 16);
  if (!v157) {
    return v156;
  }
  uint64_t v238 = (uint64_t)&v270[8];
  swift_bridgeObjectRetain();
  v240 = (char *)(v157 - 1);
  uint64_t v158 = 4;
  while (2)
  {
    *(_OWORD *)v270 = *(_OWORD *)&v234[v158];
    long long v159 = *(_OWORD *)&v234[v158 + 2];
    long long v160 = *(_OWORD *)&v234[v158 + 4];
    long long v161 = *(_OWORD *)&v234[v158 + 8];
    *(_OWORD *)&v270[48] = *(_OWORD *)&v234[v158 + 6];
    *(_OWORD *)&v270[64] = v161;
    *(_OWORD *)&v270[16] = v159;
    *(_OWORD *)&v270[32] = v160;
    long long v162 = *(_OWORD *)&v234[v158 + 10];
    long long v163 = *(_OWORD *)&v234[v158 + 12];
    long long v164 = *(_OWORD *)&v234[v158 + 16];
    *(_OWORD *)&v270[112] = *(_OWORD *)&v234[v158 + 14];
    *(_OWORD *)&v270[128] = v164;
    *(_OWORD *)&v270[80] = v162;
    *(_OWORD *)&v270[96] = v163;
    v165 = *(void **)v270;
    uint64_t v166 = *(void *)&v270[8];
    *(void *)&long long v261 = v239;
    id v167 = v239;
    sub_228B09778((uint64_t)v270);
    swift_bridgeObjectRetain();
    id v168 = v165;
    v241 = (void *)swift_modifyAtReferenceWritableKeyPath();
    uint64_t v170 = v169;
    char v171 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v250 = *(void *)(v170 + 24);
    uint64_t v172 = v250;
    *(void *)(v170 + 24) = 0x8000000000000000;
    unint64_t v174 = sub_228AD1964(v166);
    uint64_t v175 = *(void *)(v172 + 16);
    BOOL v176 = (v173 & 1) == 0;
    uint64_t v177 = v175 + v176;
    if (__OFADD__(v175, v176))
    {
      __break(1u);
LABEL_113:
      __break(1u);
      goto LABEL_114;
    }
    char v178 = v173;
    if (*(void *)(v172 + 24) >= v177)
    {
      if (v171)
      {
        v181 = (void *)v250;
        if ((v173 & 1) == 0) {
          goto LABEL_93;
        }
      }
      else
      {
        sub_228B0464C(&qword_268292680);
        v181 = (void *)v250;
        if ((v178 & 1) == 0) {
          goto LABEL_93;
        }
      }
      goto LABEL_91;
    }
    sub_228B0288C(v177, v171, &qword_268292680);
    unint64_t v179 = sub_228AD1964(v166);
    if ((v178 & 1) == (v180 & 1))
    {
      unint64_t v174 = v179;
      v181 = (void *)v250;
      if ((v178 & 1) == 0)
      {
LABEL_93:
        v181[(v174 >> 6) + 8] |= 1 << v174;
        uint64_t v183 = 8 * v174;
        *(void *)(v181[6] + v183) = v166;
        *(void *)(v181[7] + v183) = v168;
        uint64_t v184 = v181[2];
        BOOL v185 = __OFADD__(v184, 1);
        uint64_t v186 = v184 + 1;
        if (v185) {
          goto LABEL_115;
        }
        v181[2] = v186;
        swift_bridgeObjectRetain();
LABEL_95:
        *(void *)(v170 + 24) = v181;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ((void (*)(unsigned char *, void))v241)(v259, 0);

        *(void *)&long long v250 = v167;
        id v187 = v167;
        id v188 = v168;
        uint64_t v189 = v238;
        sub_228B0991C(v238);
        v190 = (void (*)(long long *, void))swift_modifyAtReferenceWritableKeyPath();
        uint64_t v192 = v191;
        char v193 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v248[0] = *(void *)(v192 + 16);
        uint64_t v194 = *(void *)&v248[0];
        *(void *)(v192 + 16) = 0x8000000000000000;
        unint64_t v196 = sub_228AD1914((uint64_t)v188);
        uint64_t v197 = *(void *)(v194 + 16);
        BOOL v198 = (v195 & 1) == 0;
        uint64_t v199 = v197 + v198;
        if (__OFADD__(v197, v198)) {
          goto LABEL_113;
        }
        char v200 = v195;
        if (*(void *)(v194 + 24) >= v199)
        {
          if (v193)
          {
            if ((v195 & 1) == 0) {
              goto LABEL_104;
            }
          }
          else
          {
            sub_228B03B44();
            if ((v200 & 1) == 0) {
              goto LABEL_104;
            }
          }
        }
        else
        {
          sub_228B01680(v199, v193);
          unint64_t v201 = sub_228AD1914((uint64_t)v188);
          if ((v200 & 1) != (v202 & 1)) {
            goto LABEL_120;
          }
          unint64_t v196 = v201;
          if ((v200 & 1) == 0)
          {
LABEL_104:
            v203 = *(void **)&v248[0];
            *(void *)(*(void *)&v248[0] + 8 * (v196 >> 6) + 64) |= 1 << v196;
            *(void *)(v203[6] + 8 * v196) = v188;
            uint64_t v217 = v203[7] + 136 * v196;
            *(_OWORD *)uint64_t v217 = *(_OWORD *)v189;
            long long v218 = *(_OWORD *)(v189 + 64);
            long long v220 = *(_OWORD *)(v189 + 16);
            long long v219 = *(_OWORD *)(v189 + 32);
            *(_OWORD *)(v217 + 48) = *(_OWORD *)(v189 + 48);
            *(_OWORD *)(v217 + 64) = v218;
            *(_OWORD *)(v217 + 16) = v220;
            *(_OWORD *)(v217 + 32) = v219;
            long long v221 = *(_OWORD *)(v189 + 80);
            long long v222 = *(_OWORD *)(v189 + 96);
            long long v223 = *(_OWORD *)(v189 + 112);
            *(void *)(v217 + 128) = *(void *)(v189 + 128);
            *(_OWORD *)(v217 + 96) = v222;
            *(_OWORD *)(v217 + 112) = v223;
            *(_OWORD *)(v217 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v221;
            uint64_t v224 = v203[2];
            BOOL v185 = __OFADD__(v224, 1);
            uint64_t v225 = v224 + 1;
            if (v185) {
              goto LABEL_116;
            }
            v203[2] = v225;
            id v226 = v188;
            goto LABEL_106;
          }
        }
        v203 = *(void **)&v248[0];
        uint64_t v204 = *(void *)(*(void *)&v248[0] + 56) + 136 * v196;
        *(_OWORD *)v259 = *(_OWORD *)v204;
        long long v205 = *(_OWORD *)(v204 + 64);
        long long v207 = *(_OWORD *)(v204 + 16);
        long long v206 = *(_OWORD *)(v204 + 32);
        *(_OWORD *)&v259[48] = *(_OWORD *)(v204 + 48);
        *(_OWORD *)&v259[64] = v205;
        *(_OWORD *)&v259[16] = v207;
        *(_OWORD *)&v259[32] = v206;
        long long v209 = *(_OWORD *)(v204 + 96);
        long long v208 = *(_OWORD *)(v204 + 112);
        long long v210 = *(_OWORD *)(v204 + 80);
        *(void *)&v259[128] = *(void *)(v204 + 128);
        *(_OWORD *)&v259[96] = v209;
        *(_OWORD *)&v259[112] = v208;
        *(_OWORD *)&v259[80] = v210;
        sub_228B09840((uint64_t)v259);
        *(_OWORD *)uint64_t v204 = *(_OWORD *)v189;
        long long v211 = *(_OWORD *)(v189 + 64);
        long long v213 = *(_OWORD *)(v189 + 16);
        long long v212 = *(_OWORD *)(v189 + 32);
        *(_OWORD *)(v204 + 48) = *(_OWORD *)(v189 + 48);
        *(_OWORD *)(v204 + 64) = v211;
        *(_OWORD *)(v204 + 16) = v213;
        *(_OWORD *)(v204 + 32) = v212;
        long long v215 = *(_OWORD *)(v189 + 96);
        long long v214 = *(_OWORD *)(v189 + 112);
        long long v216 = *(_OWORD *)(v189 + 80);
        *(void *)(v204 + 128) = *(void *)(v189 + 128);
        *(_OWORD *)(v204 + 96) = v215;
        *(_OWORD *)(v204 + 112) = v214;
        *(_OWORD *)(v204 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v216;
LABEL_106:
        *(void *)(v192 + 16) = v203;

        swift_bridgeObjectRelease();
        v190(&v261, 0);

        sub_228B09840(v189);
        if (!v240)
        {
          uint64_t v156 = (uint64_t)v234;
          swift_bridgeObjectRelease();
          return v156;
        }
        --v240;
        v158 += 18;
        continue;
      }
LABEL_91:
      uint64_t v182 = v181[7];

      *(void *)(v182 + 8 * v174) = v168;
      goto LABEL_95;
    }
    break;
  }
  sub_228BADA18();
  __break(1u);
LABEL_120:
  sub_228AD25BC(0, &qword_268292670);
  uint64_t result = sub_228BADA18();
  __break(1u);
  return result;
}

void *sub_228AE8488(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v268 = a1;
  uint64_t v270 = 0;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292658);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v261 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v307[0] = v5;
  id v285 = v5;
  uint64_t v301 = a5;
  long long v13 = (void (*)(long long *, void))swift_readAtKeyPath();
  uint64_t v282 = *(void *)(v14 + 16);
  swift_bridgeObjectRetain();
  v13(&v312, 0);

  id v289 = *(id *)(a2 + 16);
  if (!v289)
  {
    v271 = (void *)MEMORY[0x263F8EE78];
    long long v272 = (void *)MEMORY[0x263F8EE78];
    char v284 = (void *)MEMORY[0x263F8EE78];
    if (a4) {
      goto LABEL_68;
    }
    goto LABEL_69;
  }
  long long v262 = v12;
  uint64_t v263 = a3;
  uint64_t v265 = a2;
  uint64_t v266 = a4;
  v290 = (char *)v320 + 8;
  uint64_t v291 = a2 + 32;
  swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  v271 = (void *)MEMORY[0x263F8EE78];
  long long v272 = (void *)MEMORY[0x263F8EE78];
  char v284 = (void *)MEMORY[0x263F8EE78];
  id v16 = v289;
  do
  {
    uint64_t v17 = v291 + 120 * (void)v15;
    long long v18 = *(_OWORD *)(v17 + 80);
    v320[4] = *(_OWORD *)(v17 + 64);
    v320[5] = v18;
    v320[6] = *(_OWORD *)(v17 + 96);
    id v19 = *(id *)(v17 + 112);
    id v321 = v19;
    long long v20 = *(_OWORD *)(v17 + 16);
    v320[0] = *(_OWORD *)v17;
    v320[1] = v20;
    long long v21 = *(_OWORD *)(v17 + 48);
    v320[2] = *(_OWORD *)(v17 + 32);
    v320[3] = v21;
    v292 = *(void **)v17;
    uint64_t v22 = *(void *)(v17 + 8);
    unint64_t v299 = *(void *)(v17 + 16);
    v300 = (void *)v22;
    long long v23 = *(void **)(v17 + 24);
    uint64_t v297 = *(void *)(v17 + 32);
    v298 = v23;
    uint64_t v24 = *(void *)(v17 + 40);
    uint64_t v25 = *(void *)(v17 + 48);
    uint64_t v26 = *(void *)(v17 + 56);
    uint64_t v27 = *(void *)(v17 + 64);
    uint64_t v28 = *(void *)(v17 + 72);
    uint64_t v295 = *(void *)(v17 + 80);
    uint64_t v296 = v27;
    LODWORD(v294) = *(unsigned __int8 *)(v17 + 88);
    uint64_t v29 = *(void *)(v17 + 96);
    LODWORD(v293) = *(unsigned __int8 *)(v17 + 104);
    uint64_t v323 = *((void *)v290 + 2);
    long long v322 = *(_OWORD *)v290;
    uint64_t v30 = *(void *)&v320[0];
    v307[0] = v285;
    id v31 = v285;
    sub_228B09D54((uint64_t)v320);
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();

    uint64_t v32 = *((void *)&v313 + 1);
    if (!*(void *)(*((void *)&v313 + 1) + 16) || (unint64_t v33 = sub_228AD1964(v30), (v34 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v63 = *((void *)&v322 + 1);
      unint64_t v62 = (void *)v322;
      if ((*((void *)&v322 + 1) & 0x8000000000000000) == 0)
      {
LABEL_18:
        uint64_t v64 = v323;
        sub_228AD25BC(0, (unint64_t *)&qword_2682926B0);
        sub_228B09DF0((uint64_t)&v322);
        unint64_t v62 = sub_228B6A7F4(v62, v63, v64);
LABEL_22:
        id v65 = v292;
        uint64_t v66 = (uint64_t)v300;
        sub_228B09D54((uint64_t)v320);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v67 = v284;
        }
        else {
          uint64_t v67 = sub_228B772A0(0, v284[2] + 1, 1, v284);
        }
        unint64_t v69 = v67[2];
        unint64_t v68 = v67[3];
        if (v69 >= v68 >> 1) {
          uint64_t v67 = sub_228B772A0((void *)(v68 > 1), v69 + 1, 1, v67);
        }
        LOBYTE(v303[0]) = (_BYTE)v294;
        LOBYTE(v304) = (_BYTE)v293;
        v67[2] = v69 + 1;
        char v284 = v67;
        unint64_t v70 = &v67[16 * v69];
        v70[4] = v62;
        v70[5] = v65;
        uint64_t v71 = v299;
        v70[6] = v66;
        v70[7] = v71;
        uint64_t v72 = v297;
        v70[8] = v298;
        v70[9] = v72;
        v70[10] = v24;
        v70[11] = v25;
        v70[12] = v26;
        v70[13] = v296;
        v70[14] = v28;
        v70[15] = v295;
        *((unsigned char *)v70 + 128) = v303[0];
        LODWORD(v72) = v312;
        *((_DWORD *)v70 + 33) = *(_DWORD *)((char *)&v312 + 3);
        *(_DWORD *)((char *)v70 + 129) = v72;
        v70[17] = v29;
        *((unsigned char *)v70 + 144) = (_BYTE)v304;
        LODWORD(v72) = v307[0];
        *((_DWORD *)v70 + 37) = *(_DWORD *)((char *)v307 + 3);
        *(_DWORD *)((char *)v70 + 145) = v72;
        v70[19] = v19;
        sub_228B09E20((uint64_t)v320);
        goto LABEL_27;
      }
      goto LABEL_21;
    }
    id v35 = *(id *)(*(void *)(v32 + 56) + 8 * v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v307[0] = v31;
    id v36 = v31;
    id v37 = v35;
    swift_getAtKeyPath();

    uint64_t v38 = v313;
    if (!*(void *)(v313 + 16) || (unint64_t v39 = sub_228AD19E0((uint64_t)v37), (v40 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_17:
      id v16 = v289;
      uint64_t v63 = *((void *)&v322 + 1);
      unint64_t v62 = (void *)v322;
      if ((*((void *)&v322 + 1) & 0x8000000000000000) == 0) {
        goto LABEL_18;
      }
LABEL_21:
      sub_228B09DF0((uint64_t)&v322);
      goto LABEL_22;
    }
    id v267 = v36;
    uint64_t v279 = v29;
    uint64_t v41 = *(void *)(v38 + 56) + 120 * v39;
    uint64_t v42 = *(void *)v41;
    long long v43 = *(void **)(v41 + 8);
    uint64_t v45 = *(void *)(v41 + 16);
    uint64_t v44 = *(void *)(v41 + 24);
    id v286 = v37;
    long long v46 = *(char **)(v41 + 32);
    uint64_t v277 = (uint64_t)v19;
    uint64_t v278 = v46;
    uint64_t v47 = *(void *)(v41 + 64);
    uint64_t v48 = *(void *)(v41 + 80);
    int v49 = *(unsigned __int8 *)(v41 + 88);
    id v288 = *(id *)(v41 + 96);
    int v280 = *(unsigned __int8 *)(v41 + 104);
    id v269 = *(id *)(v41 + 112);
    uint64_t v274 = v42;
    swift_bridgeObjectRetain();
    uint64_t v283 = (uint64_t)v43;
    uint64_t v287 = v45;
    uint64_t v281 = v44;
    sub_228B09CA8(v43, v45);
    double v50 = v278;
    id v51 = v286;
    char v52 = v280;
    long long v273 = v50;
    uint64_t v275 = v47;
    swift_bridgeObjectRetain();
    uint64_t v276 = v48;
    LODWORD(v278) = v49;
    sub_228ACF3A4(v48, v49);
    sub_228ACF3A4((uint64_t)v288, v52);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_228B09EF4((uint64_t)&v322, (uint64_t)v324);
    sub_228B09EF4((uint64_t)v324, (uint64_t)&v325);
    if (v326 < 0)
    {
      v326 &= ~0x8000000000000000;
      uint64_t v53 = v287;
      if (v287 < 0)
      {
        char v61 = v52;
        uint64_t v80 = v287;
        sub_228AD25BC(0, (unint64_t *)&qword_268293000);
        sub_228B09DF0((uint64_t)&v322);
        uint64_t v57 = (void *)v283;
        sub_228B09CA8((void *)v283, v80);
        char v81 = sub_228BAD6F8();
        sub_228B09D08(v57, v80);
        sub_228B09F50((uint64_t)&v322);
        uint64_t v29 = v279;
        id v19 = (id)v277;
        if ((v81 & 1) == 0) {
          goto LABEL_60;
        }
        goto LABEL_38;
      }
LABEL_20:
      swift_bridgeObjectRelease();
      sub_228B09D08((void *)v283, v53);
      swift_bridgeObjectRelease();

      sub_228AD26A8(v276, (char)v278);
      sub_228AD26A8((uint64_t)v288, v52);

      id v16 = v289;
      uint64_t v29 = v279;
      id v19 = (id)v277;
      uint64_t v63 = *((void *)&v322 + 1);
      unint64_t v62 = (void *)v322;
      if ((*((void *)&v322 + 1) & 0x8000000000000000) == 0) {
        goto LABEL_18;
      }
      goto LABEL_21;
    }
    uint64_t v53 = v287;
    if (v287 < 0) {
      goto LABEL_20;
    }
    char v54 = v52;
    uint64_t v264 = v327;
    uint64_t v55 = v325;
    uint64_t v56 = v281;
    uint64_t v57 = (void *)v283;
    if (v326)
    {
      uint64_t v29 = v279;
      id v19 = (id)v277;
      if ((v287 & 1) != 0 && (uint64_t v73 = *(void *)(v325 + 16), v73 == *(void *)(v283 + 16)))
      {
        if (!v73)
        {
          char v61 = v54;
          goto LABEL_57;
        }
        id v74 = (float64x2_t *)(v325 + 32);
        unint64_t v75 = (float64x2_t *)(v283 + 32);
        uint64_t v76 = v73 - 1;
        char v61 = v54;
        while (1)
        {
          int32x2_t v77 = vmovn_s64(vceqq_f64(*v74, *v75));
          if ((v77.i32[0] & v77.i32[1] & 1) == 0) {
            break;
          }
          if (!v76) {
            goto LABEL_57;
          }
          ++v75;
          ++v74;
          --v76;
        }
LABEL_62:
        swift_bridgeObjectRelease();
        uint64_t v122 = v57;
        uint64_t v123 = v53;
LABEL_63:
        sub_228B09D08(v122, v123);
        swift_bridgeObjectRelease();

        sub_228AD26A8(v276, (char)v278);
        uint64_t v78 = (uint64_t)v288;
        char v79 = v61;
      }
      else
      {
LABEL_36:
        swift_bridgeObjectRelease();
        sub_228B09D08(v57, v53);
        swift_bridgeObjectRelease();

        sub_228AD26A8(v276, (char)v278);
        uint64_t v78 = (uint64_t)v288;
        char v79 = v54;
      }
      sub_228AD26A8(v78, v79);

      goto LABEL_17;
    }
    uint64_t v29 = v279;
    id v19 = (id)v277;
    if ((v287 & 1) != 0 || *(void *)(v325 + 16) != *(void *)(v283 + 16)) {
      goto LABEL_36;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v58 = (uint64_t)v57;
    uint64_t v59 = v53;
    uint64_t v60 = v270;
    HIDWORD(v261) = sub_228B00E94(v55, v58);
    uint64_t v270 = v60;
    uint64_t v53 = v59;
    uint64_t v57 = (void *)v283;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v61 = v54;
    if ((v261 & 0x100000000) == 0) {
      goto LABEL_62;
    }
LABEL_57:
    if (v264)
    {
      if (!v56) {
        goto LABEL_62;
      }
      swift_bridgeObjectRetain();
      uint64_t v120 = swift_bridgeObjectRetain();
      char v121 = sub_228B75EBC(v120, v56);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v121 & 1) == 0)
      {
LABEL_60:
        swift_bridgeObjectRelease();
        uint64_t v122 = v57;
        uint64_t v123 = v287;
        goto LABEL_63;
      }
    }
    else if (v56)
    {
      goto LABEL_62;
    }
LABEL_38:
    if (v321 != v269) {
      goto LABEL_60;
    }
    uint64_t v82 = sub_228BACAF8();
    uint64_t v83 = *(void *)(v82 - 8);
    uint64_t v84 = (uint64_t)v262;
    (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v262, v263, v82);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v83 + 56))(v84, 0, 1, v82);
    id v85 = v268;
    char v86 = sub_228B07DA8(v85, v51, v266, v84, (uint64_t)v320);
    uint64_t v88 = v87;
    uint64_t v90 = v89;
    uint64_t v92 = v91;
    sub_228AC1A50(v84, &qword_268292658);

    unint64_t v299 = (unint64_t)v86;
    v300 = (void *)v88;
    if (v86)
    {
      uint64_t v93 = swift_allocObject();
      *(void *)(v93 + 16) = v86;
      *(void *)(v93 + 24) = v88;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v271 = sub_228B768F8(0, v271[2] + 1, 1, v271);
      }
      unint64_t v95 = v271[2];
      unint64_t v94 = v271[3];
      if (v95 >= v94 >> 1) {
        v271 = sub_228B768F8((void *)(v94 > 1), v95 + 1, 1, v271);
      }
      id v96 = v271;
      _OWORD v271[2] = v95 + 1;
      id v97 = &v96[2 * v95];
      v97[4] = sub_228B0B0E0;
      v97[5] = v93;
    }
    uint64_t v98 = v282;
    if (v90)
    {
      uint64_t v99 = swift_allocObject();
      *(void *)(v99 + 16) = v90;
      *(void *)(v99 + 24) = v92;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v272 = sub_228B768F8(0, v272[2] + 1, 1, v272);
      }
      unint64_t v101 = v272[2];
      unint64_t v100 = v272[3];
      if (v101 >= v100 >> 1) {
        long long v272 = sub_228B768F8((void *)(v100 > 1), v101 + 1, 1, v272);
      }
      int v102 = v272;
      v272[2] = v101 + 1;
      uint64_t v103 = &v102[2 * v101];
      v103[4] = sub_228B0B0E0;
      v103[5] = v99;
      uint64_t v98 = v282;
    }
    swift_bridgeObjectRetain();
    unint64_t v104 = sub_228AD19E0((uint64_t)v286);
    char v106 = v105;
    swift_bridgeObjectRelease();
    uint64_t v107 = v90;
    if (v106)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v312 = v98;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_228B03D60();
        uint64_t v98 = v312;
      }

      uint64_t v109 = *(void *)(v98 + 56) + 120 * v104;
      unint64_t v110 = *(void **)(v109 + 8);
      uint64_t v111 = *(void **)(v109 + 32);
      long long v112 = *(void **)(v109 + 64);
      id v293 = *(id *)(v109 + 16);
      id v294 = v112;
      uint64_t v296 = *(void *)(v109 + 80);
      LODWORD(v295) = *(unsigned __int8 *)(v109 + 88);
      v298 = *(void **)(v109 + 96);
      LODWORD(v297) = *(unsigned __int8 *)(v109 + 104);
      uint64_t v282 = v98;
      sub_228B02E04(v104, v98);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_228B09D08(v110, (uint64_t)v293);
      swift_bridgeObjectRelease();

      sub_228AD26A8(v296, v295);
      sub_228AD26A8((uint64_t)v298, v297);
    }
    v307[0] = v267;
    id v113 = v267;
    sub_228B09D54((uint64_t)v320);
    id v114 = v286;
    long long v115 = (void (*)(long long *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v117 = v116;
    char v118 = swift_isUniquelyReferenced_nonNull_native();
    v303[0] = *(id *)(v117 + 16);
    *(void *)(v117 + 16) = 0x8000000000000000;
    sub_228B04AD8((uint64_t)v320, v114, v118);
    *(id *)(v117 + 16) = v303[0];

    swift_bridgeObjectRelease();
    v115(&v312, 0);
    sub_228AD2678(v107);
    sub_228AD2678(v299);

    id v119 = v307[0];
    swift_bridgeObjectRelease();

    sub_228B09D08(v57, v287);
    swift_bridgeObjectRelease();

    sub_228AD26A8(v276, (char)v278);
    sub_228AD26A8((uint64_t)v288, v280);
    sub_228B09E20((uint64_t)v320);
    id v16 = v289;
LABEL_27:
    uint64_t v15 = (char *)v15 + 1;
  }
  while (v15 != v16);
  swift_bridgeObjectRelease();
  if (v266)
  {
LABEL_68:
    uint64_t v124 = self;
    uint64_t v125 = swift_allocObject();
    *(void *)(v125 + 16) = v271;
    *(void *)&long long v314 = sub_228B0B078;
    *((void *)&v314 + 1) = v125;
    *(void *)&long long v312 = MEMORY[0x263EF8330];
    *((void *)&v312 + 1) = 1107296256;
    *(void *)&long long v313 = sub_228B005F8;
    *((void *)&v313 + 1) = &block_descriptor_116;
    long long v126 = _Block_copy(&v312);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v127 = swift_allocObject();
    *(void *)(v127 + 16) = v272;
    *(void *)&long long v314 = sub_228B0AF2C;
    *((void *)&v314 + 1) = v127;
    *(void *)&long long v312 = MEMORY[0x263EF8330];
    *((void *)&v312 + 1) = 1107296256;
    *(void *)&long long v313 = sub_228B0063C;
    *((void *)&v313 + 1) = &block_descriptor_123;
    long long v128 = _Block_copy(&v312);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v124, sel_animateWithDuration_animations_completion_, v126, v128, 0.25);
    _Block_release(v128);
    _Block_release(v126);
  }
LABEL_69:
  uint64_t v129 = v282;
  uint64_t v130 = *(void *)(v282 + 64);
  uint64_t v279 = v282 + 64;
  uint64_t v131 = -1;
  uint64_t v132 = -1 << *(unsigned char *)(v282 + 32);
  uint64_t v277 = ~v132;
  if (-v132 < 64) {
    uint64_t v131 = ~(-1 << -(char)v132);
  }
  unint64_t v133 = v131 & v130;
  uint64_t v278 = (char *)((unint64_t)(63 - v132) >> 6);
  swift_bridgeObjectRetain();
  uint64_t v283 = 0;
  while (2)
  {
    if (v133)
    {
      unint64_t v299 = (v133 - 1) & v133;
      unint64_t v141 = __clz(__rbit64(v133)) | (v283 << 6);
LABEL_87:
      uint64_t v145 = *(void **)(*(void *)(v129 + 48) + 8 * v141);
      uint64_t v146 = *(void *)(v129 + 56) + 120 * v141;
      v147 = *(void **)v146;
      unint64_t v148 = *(void **)(v146 + 8);
      char v149 = *(void **)(v146 + 16);
      char v150 = *(void **)(v146 + 24);
      int v151 = *(void **)(v146 + 32);
      uint64_t v153 = *(void **)(v146 + 48);
      uint64_t v152 = *(void **)(v146 + 56);
      unint64_t v154 = *(void **)(v146 + 64);
      unint64_t v155 = *(void **)(v146 + 72);
      id v286 = *(id *)(v146 + 80);
      char v156 = *(unsigned char *)(v146 + 88);
      uint64_t v287 = *(void *)(v146 + 96);
      id v288 = v145;
      char v157 = *(unsigned char *)(v146 + 104);
      uint64_t v158 = *(void *)(v146 + 112);
      char v306 = v156;
      char v305 = v157;
      long long v159 = *(void **)(v146 + 40);
      v307[0] = v145;
      v307[1] = v147;
      v307[2] = v148;
      v307[3] = v149;
      v307[4] = v150;
      v307[5] = v151;
      v307[6] = v159;
      v307[7] = v153;
      v307[8] = v152;
      v307[9] = v154;
      v307[10] = v155;
      v307[11] = v286;
      char v308 = v156;
      uint64_t v309 = v287;
      char v310 = v157;
      uint64_t v311 = v158;
      nullsub_1(v307);
      sub_228ACD8BC((uint64_t)v307, (uint64_t)&v312, &qword_2682926A8);
      uint64_t v160 = *((void *)&v312 + 1);
      v300 = (void *)v312;
      uint64_t v291 = *((void *)&v313 + 1);
      v292 = (void *)v313;
      v290 = (char *)v314;
      id v293 = (id)*((void *)&v316 + 1);
      id v294 = (id)*((void *)&v314 + 1);
      uint64_t v296 = *((void *)&v317 + 1);
      LODWORD(v295) = v318;
      v298 = (void *)*((void *)&v318 + 1);
      LODWORD(v297) = v319;
      id v304 = v285;
      id v289 = v285;
      swift_bridgeObjectRetain();
      sub_228B09CA8(v148, (uint64_t)v149);
      id v161 = v151;
      swift_bridgeObjectRetain();
      sub_228ACF3A4((uint64_t)v286, v156);
      sub_228ACF3A4(v287, v157);
      id v162 = v288;
      swift_bridgeObjectRetain();
      long long v163 = (void (*)(id *, void))swift_modifyAtReferenceWritableKeyPath();
      uint64_t v165 = v164;
      swift_bridgeObjectRetain();
      unint64_t v166 = sub_228AD1964(v160);
      char v168 = v167;
      swift_bridgeObjectRelease();
      if (v168)
      {
        char v169 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v170 = *(void *)(v165 + 24);
        uint64_t v302 = v170;
        *(void *)(v165 + 24) = 0x8000000000000000;
        if ((v169 & 1) == 0)
        {
          sub_228B0464C(&qword_2682926B8);
          uint64_t v170 = v302;
        }
        swift_bridgeObjectRelease();
        char v171 = *(void **)(*(void *)(v170 + 56) + 8 * v166);
        sub_228B03380(v166, v170);
        *(void *)(v165 + 24) = v170;

        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      char v138 = v300;
      uint64_t v172 = v289;
      v163(v303, 0);

      id v304 = v172;
      id v173 = v172;
      id v139 = (id)swift_modifyAtReferenceWritableKeyPath();
      uint64_t v175 = v174;
      swift_bridgeObjectRetain();
      unint64_t v176 = sub_228AD19E0((uint64_t)v138);
      char v178 = v177;
      swift_bridgeObjectRelease();
      if (v178)
      {
        id v288 = v139;
        id v289 = (id)v160;
        int v179 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v180 = *(void *)(v175 + 16);
        uint64_t v302 = v180;
        *(void *)(v175 + 16) = 0x8000000000000000;
        if (!v179)
        {
          sub_228B03D60();
          uint64_t v180 = v302;
        }

        uint64_t v134 = *(void *)(v180 + 56) + 120 * v176;
        uint64_t v135 = *(void **)(v134 + 8);
        uint64_t v136 = *(void *)(v134 + 16);
        unint64_t v137 = *(void **)(v134 + 32);
        uint64_t v281 = *(void *)(v134 + 80);
        int v280 = *(unsigned __int8 *)(v134 + 88);
        uint64_t v287 = *(void *)(v134 + 96);
        LODWORD(v286) = *(unsigned __int8 *)(v134 + 104);
        sub_228B02E04(v176, v180);
        *(void *)(v175 + 16) = v180;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_228B09D08(v135, v136);
        swift_bridgeObjectRelease();

        sub_228AD26A8(v281, v280);
        sub_228AD26A8(v287, (char)v286);
        char v138 = v300;
        id v139 = v288;
      }
      ((void (*)(id *, void))v139)(v303, 0);
      id v140 = v304;
      swift_bridgeObjectRelease();

      sub_228B09D08(v292, v291);
      swift_bridgeObjectRelease();

      sub_228AD26A8(v296, v295);
      sub_228AD26A8((uint64_t)v298, v297);

      uint64_t v129 = v282;
      unint64_t v133 = v299;
      continue;
    }
    break;
  }
  uint64_t v142 = v283 + 1;
  if (__OFADD__(v283, 1))
  {
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
    goto LABEL_135;
  }
  if (v142 >= (uint64_t)v278) {
    goto LABEL_98;
  }
  unint64_t v143 = *(void *)(v279 + 8 * v142);
  if (v143) {
    goto LABEL_86;
  }
  uint64_t v144 = v283 + 2;
  if (v283 + 2 >= (uint64_t)v278) {
    goto LABEL_98;
  }
  unint64_t v143 = *(void *)(v279 + 8 * v144);
  if (v143) {
    goto LABEL_85;
  }
  uint64_t v144 = v283 + 3;
  if (v283 + 3 >= (uint64_t)v278) {
    goto LABEL_98;
  }
  unint64_t v143 = *(void *)(v279 + 8 * v144);
  if (v143) {
    goto LABEL_85;
  }
  uint64_t v144 = v283 + 4;
  if (v283 + 4 < (uint64_t)v278)
  {
    unint64_t v143 = *(void *)(v279 + 8 * v144);
    if (!v143)
    {
      while (1)
      {
        uint64_t v142 = v144 + 1;
        if (__OFADD__(v144, 1)) {
          goto LABEL_134;
        }
        if (v142 >= (uint64_t)v278) {
          goto LABEL_98;
        }
        unint64_t v143 = *(void *)(v279 + 8 * v142);
        ++v144;
        if (v143) {
          goto LABEL_86;
        }
      }
    }
LABEL_85:
    uint64_t v142 = v144;
LABEL_86:
    unint64_t v299 = (v143 - 1) & v143;
    unint64_t v141 = __clz(__rbit64(v143)) + (v142 << 6);
    uint64_t v283 = v142;
    goto LABEL_87;
  }
LABEL_98:
  sub_228AC98B8();
  uint64_t v181 = swift_bridgeObjectRetain();
  unint64_t v182 = sub_228B0079C(v181);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v182 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_228BAD9F8();
    sub_228AD25BC(0, (unint64_t *)&qword_268293000);
    unint64_t v183 = v182;
    goto LABEL_100;
  }
LABEL_135:
  sub_228AD25BC(0, (unint64_t *)&qword_268293000);
  swift_bridgeObjectRetain();
  unint64_t v183 = sub_228BAD948();
  swift_bridgeObjectRelease();
LABEL_100:
  swift_bridgeObjectRelease();
  sub_228B00098(v183);
  swift_bridgeObjectRelease();
  uint64_t result = v284;
  uint64_t v185 = v284[2];
  if (!v185) {
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v186 = v284;
  uint64_t v287 = v185 - 1;
  uint64_t v187 = 32;
  while (2)
  {
    uint64_t v281 = v187;
    id v188 = (long long *)((char *)v186 + v187);
    long long v190 = v188[2];
    long long v189 = v188[3];
    long long v191 = v188[1];
    long long v312 = *v188;
    long long v313 = v191;
    long long v314 = v190;
    long long v315 = v189;
    long long v193 = v188[6];
    long long v192 = v188[7];
    long long v194 = v188[5];
    long long v316 = v188[4];
    long long v317 = v194;
    long long v318 = v193;
    long long v319 = v192;
    uint64_t v297 = *((void *)&v313 + 1);
    v298 = (void *)v313;
    uint64_t v195 = v314;
    uint64_t v196 = v315;
    LODWORD(v289) = HIDWORD(v315);
    LODWORD(v288) = DWORD2(v315);
    v292 = (void *)*((void *)&v316 + 1);
    uint64_t v197 = v316;
    id v293 = (id)*((void *)&v314 + 1);
    uint64_t v295 = *((void *)&v194 + 1);
    uint64_t v198 = v194;
    LODWORD(v294) = v193;
    unint64_t v299 = *((void *)&v193 + 1);
    LODWORD(v296) = v192;
    v290 = (char *)*((void *)&v192 + 1);
    uint64_t v199 = *((void *)&v312 + 1);
    char v200 = (void *)v312;
    v303[0] = v285;
    id v201 = v285;
    sub_228B09BF8((uint64_t)&v312);
    swift_bridgeObjectRetain();
    id v202 = v200;
    v203 = (void (*)(id *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v205 = v204;
    char v206 = swift_isUniquelyReferenced_nonNull_native();
    id v304 = *(id *)(v205 + 24);
    long long v207 = v304;
    *(void *)(v205 + 24) = 0x8000000000000000;
    v300 = (void *)v199;
    unint64_t v209 = sub_228AD1964(v199);
    uint64_t v210 = v207[2];
    BOOL v211 = (v208 & 1) == 0;
    uint64_t v212 = v210 + v211;
    if (__OFADD__(v210, v211))
    {
      __break(1u);
LABEL_130:
      __break(1u);
      goto LABEL_131;
    }
    char v213 = v208;
    if (v207[3] >= v212)
    {
      if (v206)
      {
        long long v216 = v304;
        if (v208) {
          goto LABEL_110;
        }
      }
      else
      {
        sub_228B0464C(&qword_2682926B8);
        long long v216 = v304;
        if (v213) {
          goto LABEL_110;
        }
      }
LABEL_106:
      v216[(v209 >> 6) + 8] |= 1 << v209;
      uint64_t v217 = 8 * v209;
      *(void *)(v216[6] + v217) = v300;
      *(void *)(v216[7] + v217) = v202;
      uint64_t v218 = v216[2];
      BOOL v219 = __OFADD__(v218, 1);
      uint64_t v220 = v218 + 1;
      if (v219) {
        goto LABEL_132;
      }
      v216[2] = v220;
      swift_bridgeObjectRetain();
LABEL_111:
      *(void *)(v205 + 24) = v216;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v203(v307, 0);

      v303[0] = v201;
      id v222 = v201;
      id v223 = v202;
      swift_bridgeObjectRetain();
      uint64_t v291 = v195;
      sub_228B09CA8(v298, v297);
      id v224 = v293;
      uint64_t v225 = v292;
      swift_bridgeObjectRetain();
      sub_228ACF3A4(v295, (char)v294);
      sub_228ACF3A4(v299, v296);
      uint64_t v226 = swift_modifyAtReferenceWritableKeyPath();
      uint64_t v228 = v227;
      char v229 = swift_isUniquelyReferenced_nonNull_native();
      id v304 = *(id *)(v228 + 16);
      uint64_t v230 = v304;
      *(void *)(v228 + 16) = 0x8000000000000000;
      unint64_t v232 = sub_228AD19E0((uint64_t)v223);
      uint64_t v233 = v230[2];
      BOOL v234 = (v231 & 1) == 0;
      uint64_t v235 = v233 + v234;
      if (__OFADD__(v233, v234)) {
        goto LABEL_130;
      }
      char v236 = v231;
      uint64_t v237 = v230[3];
      id v286 = v223;
      if (v237 >= v235)
      {
        if ((v229 & 1) == 0) {
          sub_228B03D60();
        }
      }
      else
      {
        sub_228B01AC0(v235, v229);
        unint64_t v238 = sub_228AD19E0((uint64_t)v223);
        if ((v236 & 1) != (v239 & 1)) {
          goto LABEL_137;
        }
        unint64_t v232 = v238;
      }
      uint64_t v282 = v226;
      uint64_t v283 = (uint64_t)v224;
      v240 = v304;
      if (v236)
      {
        uint64_t v241 = *((void *)v304 + 7) + 120 * v232;
        uint64_t v242 = *(void **)(v241 + 8);
        uint64_t v243 = *(void *)(v241 + 16);
        uint64_t v277 = *(void *)(v241 + 32);
        uint64_t v279 = *(void *)(v241 + 80);
        LODWORD(v278) = *(unsigned __int8 *)(v241 + 88);
        uint64_t v244 = *(void *)(v241 + 96);
        int v280 = *(unsigned __int8 *)(v241 + 104);
        swift_bridgeObjectRelease();
        sub_228B09D08(v242, v243);
        swift_bridgeObjectRelease();

        sub_228AD26A8(v279, (char)v278);
        sub_228AD26A8(v244, v280);
        uint64_t v245 = v225;
        uint64_t v247 = v297;
        v246 = v298;
        *(void *)uint64_t v241 = v300;
        *(void *)(v241 + 8) = v246;
        uint64_t v248 = v291;
        *(void *)(v241 + 16) = v247;
        *(void *)(v241 + 24) = v248;
        *(void *)(v241 + 32) = v293;
        *(void *)(v241 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v196;
        LODWORD(v248) = v289;
        *(_DWORD *)(v241 + 48) = v288;
        *(_DWORD *)(v241 + 52) = v248;
        *(void *)(v241 + 56) = v197;
        *(void *)(v241 + 64) = v245;
        *(void *)(v241 + 72) = v198;
        uint64_t v249 = v295;
        *(void *)(v241 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v295;
        char v250 = (char)v294;
        *(unsigned char *)(v241 + 88) = (_BYTE)v294;
        *(void *)(v241 + 96) = v299;
        char v251 = v296;
        *(unsigned char *)(v241 + 104) = v296;
        *(void *)(v241 + 112) = v290;
        id v252 = v286;
      }
      else
      {
        *((void *)v304 + (v232 >> 6) + 8) |= 1 << v232;
        id v252 = v286;
        *(void *)(v240[6] + 8 * v232) = v286;
        uint64_t v253 = v240[7] + 120 * v232;
        long long v254 = v298;
        *(void *)uint64_t v253 = v300;
        *(void *)(v253 + 8) = v254;
        uint64_t v255 = v291;
        *(void *)(v253 + 16) = v297;
        *(void *)(v253 + 24) = v255;
        *(void *)(v253 + 32) = v293;
        *(void *)(v253 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v196;
        LODWORD(v254) = v289;
        *(_DWORD *)(v253 + 48) = v288;
        *(_DWORD *)(v253 + 52) = v254;
        *(void *)(v253 + 56) = v197;
        *(void *)(v253 + 64) = v225;
        *(void *)(v253 + 72) = v198;
        uint64_t v249 = v295;
        *(void *)(v253 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v295;
        char v250 = (char)v294;
        *(unsigned char *)(v253 + 88) = (_BYTE)v294;
        *(void *)(v253 + 96) = v299;
        char v251 = v296;
        *(unsigned char *)(v253 + 104) = v296;
        *(void *)(v253 + 112) = v290;
        uint64_t v256 = v240[2];
        BOOL v219 = __OFADD__(v256, 1);
        uint64_t v257 = v256 + 1;
        if (v219) {
          goto LABEL_133;
        }
        v240[2] = v257;
        id v258 = v252;
        uint64_t v247 = v297;
      }
      *(void *)(v228 + 16) = v240;

      swift_bridgeObjectRelease();
      ((void (*)(id *, void))v282)(v307, 0);

      id v259 = v303[0];
      swift_bridgeObjectRelease();

      sub_228B09D08(v298, v247);
      swift_bridgeObjectRelease();

      sub_228AD26A8(v249, v250);
      sub_228AD26A8(v299, v251);
      if (!v287)
      {
        uint64_t v260 = v284;
        swift_bridgeObjectRelease();
        return v260;
      }
      --v287;
      uint64_t v187 = v281 + 128;
      uint64_t v186 = v284;
      continue;
    }
    break;
  }
  sub_228B0288C(v212, v206, &qword_2682926B8);
  unint64_t v214 = sub_228AD1964((uint64_t)v300);
  if ((v213 & 1) == (v215 & 1))
  {
    unint64_t v209 = v214;
    long long v216 = v304;
    if ((v213 & 1) == 0) {
      goto LABEL_106;
    }
LABEL_110:
    uint64_t v221 = v216[7];

    *(void *)(v221 + 8 * v209) = v202;
    goto LABEL_111;
  }
  sub_228BADA18();
  __break(1u);
LABEL_137:
  sub_228AD25BC(0, (unint64_t *)&qword_2682926B0);
  uint64_t result = (void *)sub_228BADA18();
  __break(1u);
  return result;
}

void *sub_228AE9DFC(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v227 = a3;
  id v230 = a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292658);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v226 = (char *)&v224 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id aBlock = v5;
  id v243 = v5;
  uint64_t v11 = (void (*)(long long *, void))swift_readAtKeyPath();
  uint64_t v239 = *(void *)(v12 + 16);
  swift_bridgeObjectRetain();
  v11(v261, 0);

  uint64_t v13 = *((void *)a2 + 2);
  uint64_t v241 = a5;
  if (!v13)
  {
    uint64_t v233 = (void *)MEMORY[0x263F8EE78];
    uint64_t v242 = (void *)MEMORY[0x263F8EE78];
    BOOL v234 = (void *)MEMORY[0x263F8EE78];
    if (a4) {
      goto LABEL_50;
    }
    goto LABEL_51;
  }
  uint64_t v228 = a4;
  uint64_t v245 = (char *)v261 + 8;
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  uint64_t v233 = (void *)MEMORY[0x263F8EE78];
  uint64_t v242 = (void *)MEMORY[0x263F8EE78];
  BOOL v234 = (void *)MEMORY[0x263F8EE78];
  uint64_t v244 = a2;
  do
  {
    long long v15 = *(_OWORD *)&a2[v14 + 80];
    v261[2] = *(_OWORD *)&a2[v14 + 64];
    v261[3] = v15;
    long long v16 = *(_OWORD *)&a2[v14 + 112];
    v261[4] = *(_OWORD *)&a2[v14 + 96];
    long long v262 = v16;
    long long v17 = *(_OWORD *)&a2[v14 + 48];
    v261[0] = *(_OWORD *)&a2[v14 + 32];
    v261[1] = v17;
    uint64_t v18 = *(void *)&a2[v14 + 40];
    id v251 = *(id *)&a2[v14 + 32];
    int v19 = *(unsigned __int16 *)&a2[v14 + 48];
    char v250 = *(void **)&a2[v14 + 56];
    uint64_t v20 = *(void *)&a2[v14 + 64];
    uint64_t v21 = *(void *)&a2[v14 + 72];
    uint64_t v22 = *(void *)&a2[v14 + 80];
    uint64_t v249 = *(void **)&a2[v14 + 88];
    uint64_t v23 = *(void *)&a2[v14 + 96];
    uint64_t v248 = *(void *)&a2[v14 + 104];
    LODWORD(v247) = a2[v14 + 112];
    v246 = *(void **)&a2[v14 + 120];
    __int16 v264 = *((_WORD *)v245 + 4);
    uint64_t v263 = *(void *)v245;
    uint64_t v24 = *(void *)&v261[0];
    id v252 = v243;
    id v25 = v243;
    sub_228B0A030((uint64_t)v261);
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();

    uint64_t v26 = v257;
    if (v257[2] && (unint64_t v27 = sub_228AD1964(v24), (v28 & 1) != 0))
    {
      id v29 = *(id *)(v26[7] + 8 * v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v252 = v25;
      id v30 = v25;
      id v31 = v29;
      swift_getAtKeyPath();

      uint64_t v32 = v256;
      if (v256[2] && (unint64_t v33 = sub_228AD1A30((uint64_t)v31), (v34 & 1) != 0))
      {
        uint64_t v232 = v18;
        id v229 = v30;
        LODWORD(v235) = v19;
        uint64_t v35 = v32[7] + 96 * v33;
        uint64_t v36 = *(void *)v35;
        id v37 = *(void **)(v35 + 8);
        int v38 = *(unsigned __int16 *)(v35 + 16);
        id v240 = *(id *)(v35 + 24);
        unint64_t v39 = *(char **)(v35 + 56);
        char v40 = *(void **)(v35 + 72);
        int v41 = *(unsigned __int8 *)(v35 + 80);
        uint64_t v231 = *(void *)(v35 + 88);
        uint64_t v236 = v36;
        swift_bridgeObjectRetain();
        sub_228B0A008(v37, v38);
        id v237 = v240;
        unint64_t v238 = v39;
        swift_bridgeObjectRetain();
        id v240 = v40;
        sub_228ACF3A4((uint64_t)v40, v41);
        uint64_t v42 = v31;

        swift_bridgeObjectRelease();
        long long v43 = v37;
        swift_bridgeObjectRelease();
        sub_228B0A0B0((uint64_t)&v263, (uint64_t)v265);
        sub_228B0A0B0((uint64_t)v265, (uint64_t)&aBlock);
        id v252 = v37;
        __int16 v253 = v38;
        if (sub_228B9CEF4((uint64_t)&aBlock, (uint64_t)&v252))
        {
          int v44 = v41;
          if (*((void *)&v262 + 1) == v231)
          {
            uint64_t v247 = v43;
            LODWORD(v248) = v38;
            uint64_t v45 = sub_228BACAF8();
            uint64_t v46 = *(void *)(v45 - 8);
            uint64_t v47 = (uint64_t)v226;
            (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v226, v227, v45);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v45);
            id v48 = v230;
            uint64_t v249 = v42;
            int v49 = sub_228B082B0(v48, v42, v228, v47, v261);
            id v51 = v50;
            id v53 = v52;
            char v250 = v54;
            sub_228AC1A50(v47, &qword_268292658);

            id v251 = v53;
            a2 = v244;
            if (v49)
            {
              uint64_t v55 = swift_allocObject();
              *(void *)(v55 + 16) = v49;
              *(void *)(v55 + 24) = v51;
              swift_retain();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v57 = (uint64_t)v240;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                uint64_t v233 = sub_228B768F8(0, v233[2] + 1, 1, v233);
              }
              unint64_t v59 = v233[2];
              unint64_t v58 = v233[3];
              if (v59 >= v58 >> 1) {
                uint64_t v233 = sub_228B768F8((void *)(v58 > 1), v59 + 1, 1, v233);
              }
              uint64_t v60 = v233;
              v233[2] = v59 + 1;
              char v61 = &v60[2 * v59];
              v61[4] = sub_228B0B0E0;
              v61[5] = v55;
              id v53 = v251;
            }
            else
            {
              uint64_t v57 = (uint64_t)v240;
            }
            int v225 = v44;
            v246 = v51;
            if (v53)
            {
              uint64_t v76 = swift_allocObject();
              *(void *)(v76 + 16) = v53;
              *(void *)(v76 + 24) = v250;
              swift_retain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                BOOL v234 = sub_228B768F8(0, v234[2] + 1, 1, v234);
              }
              unint64_t v78 = v234[2];
              unint64_t v77 = v234[3];
              if (v78 >= v77 >> 1) {
                BOOL v234 = sub_228B768F8((void *)(v77 > 1), v78 + 1, 1, v234);
              }
              uint64_t v79 = v57;
              uint64_t v80 = v234;
              v234[2] = v78 + 1;
              char v81 = &v80[2 * v78];
              unsigned char v81[4] = sub_228B0B0E0;
              v81[5] = v76;
            }
            else
            {
              uint64_t v79 = v57;
            }
            uint64_t v82 = v249;
            uint64_t v83 = (void *)v239;
            swift_bridgeObjectRetain();
            unint64_t v84 = sub_228AD1A30((uint64_t)v82);
            char v86 = v85;
            swift_bridgeObjectRelease();
            if (v86)
            {
              char v87 = swift_isUniquelyReferenced_nonNull_native();
              id aBlock = v83;
              if ((v87 & 1) == 0)
              {
                sub_228B0418C();
                uint64_t v83 = aBlock;
              }

              uint64_t v88 = v83[7] + 96 * v84;
              uint64_t v89 = *(void **)(v88 + 8);
              uint64_t v90 = *(void **)(v88 + 24);
              uint64_t v232 = *(void *)(v88 + 56);
              uint64_t v249 = *(void **)(v88 + 72);
              LODWORD(v235) = *(unsigned __int8 *)(v88 + 80);
              __int16 v91 = *(_WORD *)(v88 + 16);
              uint64_t v239 = (uint64_t)v83;
              sub_228B02FC4(v84, (uint64_t)v83);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_228B0A024(v89, v91);
              swift_bridgeObjectRelease();

              sub_228AD26A8((uint64_t)v249, v235);
              a2 = v244;
              uint64_t v79 = (uint64_t)v240;
            }
            id v252 = v229;
            id v92 = v229;
            sub_228B0A030((uint64_t)v261);
            id v93 = v82;
            uint64_t v94 = v241;
            unint64_t v95 = (void (*)(id *, void))swift_modifyAtReferenceWritableKeyPath();
            uint64_t v97 = v96;
            char v98 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v260 = *(void **)(v97 + 16);
            *(void *)(v97 + 16) = 0x8000000000000000;
            sub_228B04C80(v261, v93, v98);
            *(void *)(v97 + 16) = v260;
            a5 = v94;

            swift_bridgeObjectRelease();
            v95(&aBlock, 0);
            sub_228AD2678((uint64_t)v251);
            sub_228AD2678((uint64_t)v49);

            id v99 = v252;
            swift_bridgeObjectRelease();

            sub_228B0A024(v247, v248);
            swift_bridgeObjectRelease();

            sub_228AD26A8(v79, v225);
            goto LABEL_33;
          }
          swift_bridgeObjectRelease();
          sub_228B0A024(v43, v38);
          swift_bridgeObjectRelease();

          uint64_t v62 = (uint64_t)v240;
          char v63 = v41;
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_228B0A024(v37, v38);
          swift_bridgeObjectRelease();

          uint64_t v62 = (uint64_t)v240;
          char v63 = v41;
        }
        sub_228AD26A8(v62, v63);

        a5 = v241;
        LOWORD(v19) = v235;
        a2 = v244;
        uint64_t v18 = v232;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        a5 = v241;
        a2 = v244;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_228B0A0B0((uint64_t)&v263, (uint64_t)v266);
    sub_228B0A0B0((uint64_t)v266, (uint64_t)&v267);
    char v64 = v268;
    if ((v268 & 0x8000) == 0)
    {
      id v65 = v267;
      if ((v268 & 0x100) != 0)
      {
        sub_228AD25BC(0, &qword_2682926D8);
        ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
        uint64_t v67 = v65[2];
        uint64_t v68 = (uint64_t)(v65 + 4);
        if ((v64 & 1) == 0)
        {
LABEL_23:
          id v69 = objc_msgSend(ObjCClassFromMetadata, sel_polylineWithPoints_count_, v68, v67);
LABEL_27:
          id v70 = v69;
          goto LABEL_28;
        }
      }
      else
      {
        ObjCClassFromMetadata = self;
        uint64_t v67 = v65[2];
        uint64_t v68 = (uint64_t)(v65 + 4);
        if ((v64 & 1) == 0) {
          goto LABEL_23;
        }
      }
      id v69 = objc_msgSend(ObjCClassFromMetadata, sel_polylineWithCoordinates_count_, v68, v67);
      goto LABEL_27;
    }
    v268 &= ~0x8000u;
    id v70 = v267;
    sub_228B0A10C((uint64_t)&v263);
LABEL_28:
    sub_228B0A030((uint64_t)v261);
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v71 = v242;
    }
    else {
      uint64_t v71 = sub_228B773B0(0, v242[2] + 1, 1, v242);
    }
    unint64_t v73 = v71[2];
    unint64_t v72 = v71[3];
    if (v73 >= v72 >> 1) {
      uint64_t v71 = sub_228B773B0((void *)(v72 > 1), v73 + 1, 1, v71);
    }
    v71[2] = v73 + 1;
    uint64_t v242 = v71;
    id v74 = &v71[13 * v73];
    id v75 = v251;
    v74[4] = v70;
    v74[5] = v75;
    v74[6] = v18;
    *((_WORD *)v74 + 28) = v19;
    v74[8] = v250;
    v74[9] = v20;
    v74[10] = v21;
    v74[11] = v22;
    v74[12] = v249;
    v74[13] = v23;
    v74[14] = v248;
    *((unsigned char *)v74 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = (_BYTE)v247;
    v74[16] = v246;
LABEL_33:
    sub_228B0A13C((uint64_t)v261);
    v14 += 96;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  if (v228)
  {
LABEL_50:
    unint64_t v100 = self;
    uint64_t v101 = swift_allocObject();
    *(void *)(v101 + 16) = v233;
    id v258 = sub_228B0B078;
    uint64_t v259 = v101;
    id aBlock = (id)MEMORY[0x263EF8330];
    uint64_t v255 = 1107296256;
    uint64_t v256 = sub_228B005F8;
    uint64_t v257 = &block_descriptor_150;
    int v102 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v103 = swift_allocObject();
    *(void *)(v103 + 16) = v234;
    id v258 = sub_228B0AF2C;
    uint64_t v259 = v103;
    id aBlock = (id)MEMORY[0x263EF8330];
    uint64_t v255 = 1107296256;
    a5 = v241;
    uint64_t v256 = sub_228B0063C;
    uint64_t v257 = &block_descriptor_157;
    unint64_t v104 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v100, sel_animateWithDuration_animations_completion_, v102, v104, 0.25);
    _Block_release(v104);
    _Block_release(v102);
  }
LABEL_51:
  uint64_t v105 = *(void *)(v239 + 64);
  uint64_t v236 = v239 + 64;
  uint64_t v106 = -1;
  uint64_t v107 = -1 << *(unsigned char *)(v239 + 32);
  uint64_t v232 = ~v107;
  if (-v107 < 64) {
    uint64_t v106 = ~(-1 << -(char)v107);
  }
  unint64_t v108 = v106 & v105;
  int64_t v235 = (unint64_t)(63 - v107) >> 6;
  swift_bridgeObjectRetain();
  id v240 = 0;
  while (2)
  {
    if (v108)
    {
      uint64_t v117 = a5;
      char v250 = (void *)((v108 - 1) & v108);
      unint64_t v118 = __clz(__rbit64(v108)) | ((void)v240 << 6);
LABEL_72:
      uint64_t v123 = *(void **)(*(void *)(v239 + 48) + 8 * v118);
      uint64_t v124 = *(void *)(v239 + 56) + 96 * v118;
      uint64_t v125 = *(void *)v124;
      long long v126 = *(void **)(v124 + 8);
      int v127 = *(unsigned __int16 *)(v124 + 16);
      long long v128 = *(void **)(v124 + 24);
      uint64_t v129 = *(void **)(v124 + 56);
      uint64_t v130 = *(void *)(v124 + 72);
      int v131 = *(unsigned __int8 *)(v124 + 80);
      id v252 = v243;
      id v132 = v243;
      swift_bridgeObjectRetain();
      v246 = v126;
      LODWORD(v245) = v127;
      sub_228B0A008(v126, v127);
      unint64_t v133 = v128;
      uint64_t v247 = v129;
      swift_bridgeObjectRetain();
      uint64_t v249 = (void *)v130;
      LODWORD(v248) = v131;
      sub_228ACF3A4(v130, v131);
      id v251 = v123;
      swift_bridgeObjectRetain();
      a5 = v117;
      uint64_t v134 = (void (*)(id *, void))swift_modifyAtReferenceWritableKeyPath();
      uint64_t v136 = v135;
      swift_bridgeObjectRetain();
      unint64_t v137 = sub_228AD1964(v125);
      LOBYTE(v13__isPlatformVersionAtLeast(2, 18, 1, 0) = v138;
      swift_bridgeObjectRelease();
      uint64_t v244 = v133;
      if (v130)
      {
        char v139 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v140 = *(void *)(v136 + 24);
        uint64_t v260 = (void *)v140;
        *(void *)(v136 + 24) = 0x8000000000000000;
        if ((v139 & 1) == 0)
        {
          sub_228B0464C(&qword_2682926E0);
          uint64_t v140 = (uint64_t)v260;
        }
        swift_bridgeObjectRelease();
        unint64_t v141 = *(void **)(*(void *)(v140 + 56) + 8 * v137);
        sub_228B03380(v137, v140);
        *(void *)(v136 + 24) = v140;

        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      id v114 = v251;
      v134(&aBlock, 0);

      id v252 = v132;
      id v142 = v132;
      long long v115 = (char *)swift_modifyAtReferenceWritableKeyPath();
      uint64_t v144 = v143;
      swift_bridgeObjectRetain();
      unint64_t v145 = sub_228AD1A30((uint64_t)v114);
      char v147 = v146;
      swift_bridgeObjectRelease();
      if (v147)
      {
        unint64_t v238 = v115;
        int v148 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v149 = *(void *)(v144 + 16);
        uint64_t v260 = (void *)v149;
        *(void *)(v144 + 16) = 0x8000000000000000;
        if (!v148)
        {
          sub_228B0418C();
          uint64_t v149 = (uint64_t)v260;
        }

        uint64_t v109 = *(void *)(v149 + 56) + 96 * v145;
        unint64_t v110 = *(void **)(v109 + 8);
        uint64_t v111 = *(void **)(v109 + 24);
        uint64_t v112 = *(void *)(v109 + 72);
        LODWORD(v237) = *(unsigned __int8 *)(v109 + 80);
        __int16 v113 = *(_WORD *)(v109 + 16);
        sub_228B02FC4(v145, v149);
        *(void *)(v144 + 16) = v149;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_228B0A024(v110, v113);
        swift_bridgeObjectRelease();

        sub_228AD26A8(v112, (char)v237);
        a5 = v241;
        id v114 = v251;
        long long v115 = v238;
      }
      ((void (*)(id *, void))v115)(&aBlock, 0);
      id v116 = v252;
      swift_bridgeObjectRelease();

      sub_228B0A024(v246, (__int16)v245);
      swift_bridgeObjectRelease();

      sub_228AD26A8((uint64_t)v249, v248);
      unint64_t v108 = (unint64_t)v250;
      continue;
    }
    break;
  }
  uint64_t v119 = (uint64_t)v240 + 1;
  if (__OFADD__(v240, 1))
  {
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
    goto LABEL_114;
  }
  if (v119 >= v235) {
    goto LABEL_79;
  }
  unint64_t v120 = *(void *)(v236 + 8 * v119);
  uint64_t v121 = (uint64_t)v240 + 1;
  if (v120) {
    goto LABEL_71;
  }
  uint64_t v121 = (uint64_t)v240 + 2;
  if ((uint64_t)v240 + 2 >= v235) {
    goto LABEL_79;
  }
  unint64_t v120 = *(void *)(v236 + 8 * v121);
  if (v120) {
    goto LABEL_71;
  }
  uint64_t v121 = (uint64_t)v240 + 3;
  if ((uint64_t)v240 + 3 >= v235) {
    goto LABEL_79;
  }
  unint64_t v120 = *(void *)(v236 + 8 * v121);
  if (v120)
  {
LABEL_71:
    uint64_t v117 = a5;
    char v250 = (void *)((v120 - 1) & v120);
    unint64_t v118 = __clz(__rbit64(v120)) + (v121 << 6);
    id v240 = (id)v121;
    goto LABEL_72;
  }
  uint64_t v122 = (char *)v240 + 4;
  if ((uint64_t)v240 + 4 < v235)
  {
    unint64_t v120 = *(void *)(v236 + 8 * (void)v122);
    if (!v120)
    {
      while (1)
      {
        uint64_t v121 = (uint64_t)(v122 + 1);
        if (__OFADD__(v122, 1)) {
          goto LABEL_113;
        }
        if (v121 >= v235) {
          goto LABEL_79;
        }
        unint64_t v120 = *(void *)(v236 + 8 * v121);
        ++v122;
        if (v120) {
          goto LABEL_71;
        }
      }
    }
    uint64_t v121 = (uint64_t)v240 + 4;
    goto LABEL_71;
  }
LABEL_79:
  sub_228AC98B8();
  uint64_t v150 = swift_bridgeObjectRetain();
  unint64_t v151 = sub_228B0079C(v150);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v151 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_228BAD9F8();
    sub_228AD25BC(0, (unint64_t *)&qword_268293000);
    unint64_t v152 = v151;
    goto LABEL_81;
  }
LABEL_114:
  sub_228AD25BC(0, (unint64_t *)&qword_268293000);
  swift_bridgeObjectRetain();
  unint64_t v152 = sub_228BAD948();
  swift_bridgeObjectRelease();
LABEL_81:
  swift_bridgeObjectRelease();
  sub_228B00098(v152);
  swift_bridgeObjectRelease();
  uint64_t result = v242;
  unint64_t v154 = (char *)v242[2];
  if (!v154) {
    return result;
  }
  swift_bridgeObjectRetain();
  unint64_t v155 = 0;
  while (2)
  {
    uint64_t v244 = v154;
    id v240 = v155;
    char v167 = *(void **)&v155[(void)v242 + 32];
    uint64_t v168 = *(void *)&v155[(void)v242 + 40];
    char v169 = *(void **)&v155[(void)v242 + 48];
    int v170 = *(unsigned __int16 *)&v155[(void)v242 + 56];
    char v171 = *(char **)&v155[(void)v242 + 64];
    uint64_t v173 = *(void *)&v155[(void)v242 + 72];
    uint64_t v172 = *(void *)&v155[(void)v242 + 80];
    uint64_t v174 = *(void *)&v155[(void)v242 + 88];
    uint64_t v175 = *(void *)&v155[(void)v242 + 96];
    uint64_t v176 = *(void *)&v155[(void)v242 + 104];
    char v177 = *(void **)&v155[(void)v242 + 112];
    int v178 = v155[(void)v242 + 120];
    v246 = *(void **)&v155[(void)v242 + 128];
    id v252 = v243;
    id v179 = v243;
    id v180 = v167;
    swift_bridgeObjectRetain();
    char v250 = v169;
    LODWORD(v249) = v170;
    sub_228B0A008(v169, v170);
    uint64_t v245 = v171;
    uint64_t v181 = v171;
    uint64_t v248 = v175;
    swift_bridgeObjectRetain();
    uint64_t v247 = v177;
    LODWORD(v251) = v178;
    sub_228ACF3A4((uint64_t)v177, v178);
    swift_bridgeObjectRetain();
    id v182 = v180;
    unint64_t v183 = (void (*)(id *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v185 = v184;
    char v186 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v260 = *(void **)(v185 + 24);
    uint64_t v187 = v260;
    *(void *)(v185 + 24) = 0x8000000000000000;
    unint64_t v189 = sub_228AD1964(v168);
    uint64_t v190 = v187[2];
    BOOL v191 = (v188 & 1) == 0;
    uint64_t v192 = v190 + v191;
    if (__OFADD__(v190, v191))
    {
      __break(1u);
LABEL_109:
      __break(1u);
      goto LABEL_110;
    }
    char v193 = v188;
    if (v187[3] >= v192)
    {
      if ((v186 & 1) == 0) {
        sub_228B0464C(&qword_2682926E0);
      }
      goto LABEL_91;
    }
    sub_228B0288C(v192, v186, &qword_2682926E0);
    unint64_t v194 = sub_228AD1964(v168);
    if ((v193 & 1) == (v195 & 1))
    {
      unint64_t v189 = v194;
LABEL_91:
      uint64_t v196 = v260;
      if (v193)
      {
        uint64_t v197 = v260[7];

        *(void *)(v197 + 8 * v189) = v182;
      }
      else
      {
        v260[(v189 >> 6) + 8] |= 1 << v189;
        uint64_t v198 = 8 * v189;
        *(void *)(v196[6] + v198) = v168;
        *(void *)(v196[7] + v198) = v182;
        uint64_t v199 = v196[2];
        BOOL v200 = __OFADD__(v199, 1);
        uint64_t v201 = v199 + 1;
        if (v200) {
          goto LABEL_111;
        }
        v196[2] = v201;
        swift_bridgeObjectRetain();
      }
      *(void *)(v185 + 24) = v196;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v183(&aBlock, 0);

      id v252 = v179;
      id v202 = v179;
      id v203 = v182;
      swift_bridgeObjectRetain();
      sub_228B0A008(v250, (__int16)v249);
      uint64_t v204 = v181;
      swift_bridgeObjectRetain();
      uint64_t v162 = (uint64_t)v247;
      char v165 = (char)v251;
      sub_228ACF3A4((uint64_t)v247, (char)v251);
      uint64_t v239 = swift_modifyAtReferenceWritableKeyPath();
      uint64_t v206 = v205;
      char v207 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v260 = *(void **)(v206 + 16);
      char v208 = v260;
      *(void *)(v206 + 16) = 0x8000000000000000;
      unint64_t v210 = sub_228AD1A30((uint64_t)v203);
      uint64_t v211 = v208[2];
      BOOL v212 = (v209 & 1) == 0;
      uint64_t v213 = v211 + v212;
      if (__OFADD__(v211, v212)) {
        goto LABEL_109;
      }
      char v214 = v209;
      uint64_t v215 = v208[3];
      unint64_t v238 = v204;
      if (v215 >= v213)
      {
        if ((v207 & 1) == 0) {
          sub_228B0418C();
        }
      }
      else
      {
        sub_228B02170(v213, v207);
        unint64_t v216 = sub_228AD1A30((uint64_t)v203);
        if ((v214 & 1) != (v217 & 1)) {
          goto LABEL_116;
        }
        unint64_t v210 = v216;
      }
      uint64_t v218 = v260;
      if (v214)
      {
        uint64_t v156 = v260[7] + 96 * v210;
        char v157 = *(void **)(v156 + 8);
        uint64_t v158 = *(void **)(v156 + 24);
        id v237 = *(id *)(v156 + 72);
        char v159 = *(unsigned char *)(v156 + 80);
        __int16 v160 = *(_WORD *)(v156 + 16);
        swift_bridgeObjectRelease();
        __int16 v161 = v160;
        uint64_t v162 = (uint64_t)v247;
        sub_228B0A024(v157, v161);
        swift_bridgeObjectRelease();

        sub_228AD26A8((uint64_t)v237, v159);
        long long v163 = v250;
        *(void *)uint64_t v156 = v168;
        *(void *)(v156 + 8) = v163;
        __int16 v164 = (__int16)v249;
        *(_WORD *)(v156 + 16) = (_WORD)v249;
        *(void *)(v156 + 24) = v245;
        *(void *)(v156 + 32) = v173;
        *(void *)(v156 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v172;
        *(void *)(v156 + 48) = v174;
        *(void *)(v156 + 56) = v248;
        *(void *)(v156 + 64) = v176;
        *(void *)(v156 + 72) = v162;
        *(unsigned char *)(v156 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = (_BYTE)v251;
        *(void *)(v156 + 88) = v246;
        char v165 = (char)v251;
      }
      else
      {
        v260[(v210 >> 6) + 8] |= 1 << v210;
        *(void *)(v218[6] + 8 * v21__isPlatformVersionAtLeast(2, 18, 1, 0) = v203;
        uint64_t v219 = v218[7] + 96 * v210;
        long long v163 = v250;
        *(void *)uint64_t v219 = v168;
        *(void *)(v219 + 8) = v163;
        __int16 v164 = (__int16)v249;
        *(_WORD *)(v219 + 16) = (_WORD)v249;
        *(void *)(v219 + 24) = v245;
        *(void *)(v219 + 32) = v173;
        *(void *)(v219 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v172;
        *(void *)(v219 + 48) = v174;
        *(void *)(v219 + 56) = v248;
        *(void *)(v219 + 64) = v176;
        *(void *)(v219 + 72) = v162;
        *(unsigned char *)(v219 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v165;
        *(void *)(v219 + 88) = v246;
        uint64_t v220 = v218[2];
        BOOL v200 = __OFADD__(v220, 1);
        uint64_t v221 = v220 + 1;
        if (v200) {
          goto LABEL_112;
        }
        v218[2] = v221;
        id v222 = v203;
      }
      *(void *)(v206 + 16) = v218;

      swift_bridgeObjectRelease();
      ((void (*)(id *, void))v239)(&aBlock, 0);

      id v166 = v252;
      swift_bridgeObjectRelease();

      sub_228B0A024(v163, v164);
      swift_bridgeObjectRelease();

      sub_228AD26A8(v162, v165);
      unint64_t v155 = (char *)v240 + 104;
      unint64_t v154 = v244 - 1;
      if (v244 == (char *)1)
      {
        id v223 = v242;
        swift_bridgeObjectRelease();
        return v223;
      }
      continue;
    }
    break;
  }
  sub_228BADA18();
  __break(1u);
LABEL_116:
  sub_228AD25BC(0, &qword_2682926D0);
  uint64_t result = (void *)sub_228BADA18();
  __break(1u);
  return result;
}

uint64_t sub_228AEB75C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v245 = a4;
  uint64_t v243 = a3;
  id v244 = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292658);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v242 = (char *)&v237 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v260 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682926F8);
  uint64_t v261 = *(void *)(v260 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v260);
  long long v273 = (uint64_t *)((char *)&v237 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  __int16 v264 = (void **)((char *)&v237 - v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292700);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  long long v16 = (char *)&v237 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v241 = (uint64_t)&v237 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v240 = (uint64_t)&v237 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v237 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v257 = (uint64_t)&v237 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v263 = (uint64_t)&v237 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v265 = (char *)&v237 - v28;
  uint64_t v29 = type metadata accessor for UserAnnotationViewModel(0);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v239 = (uint64_t)&v237 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v250 = (uint64_t)&v237 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  id v37 = (uint64_t *)((char *)&v237 - v36);
  uint64_t v38 = MEMORY[0x270FA5388](v35);
  uint64_t v262 = (uint64_t)&v237 - v39;
  MEMORY[0x270FA5388](v38);
  uint64_t v274 = (uint64_t *)((char *)&v237 - v40);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292708);
  uint64_t v42 = MEMORY[0x270FA5388](v41 - 8);
  __int16 v268 = (char *)&v237 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  id v267 = (void **)((char *)&v237 - v44);
  id v284 = v5;
  id v275 = v5;
  uint64_t v45 = (void (*)(uint64_t *, void))swift_readAtKeyPath();
  uint64_t v266 = *(void *)(v46 + 16);
  swift_bridgeObjectRetain();
  v45(&aBlock, 0);

  uint64_t v47 = *(void *)(a2 + 16);
  uint64_t v271 = a5;
  uint64_t v272 = v30;
  uint64_t v276 = v29;
  if (!v47)
  {
    id v252 = (void *)MEMORY[0x263F8EE78];
    unint64_t v259 = MEMORY[0x263F8EE78];
    __int16 v253 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_48;
  }
  uint64_t v249 = v23;
  unint64_t v238 = v16;
  uint64_t v48 = a2 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
  int v49 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 72);
  uint64_t v256 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56);
  id v258 = (char *)(v30 + 48);
  uint64_t v237 = a2;
  swift_bridgeObjectRetain();
  unint64_t v50 = MEMORY[0x263F8EE78];
  id v252 = (void *)MEMORY[0x263F8EE78];
  __int16 v253 = (void *)MEMORY[0x263F8EE78];
  id v269 = v49;
  do
  {
    sub_228B0A230(v48, (uint64_t)v37, type metadata accessor for UserAnnotationViewModel);
    uint64_t v55 = *v37;
    id v284 = v275;
    id v56 = v275;
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();

    uint64_t v57 = v280;
    if (!v280[2] || (unint64_t v58 = sub_228AD1964(v55), (v59 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_12:
      id v71 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MapBridgingUserAnnotation()), sel_init);
      uint64_t v72 = (uint64_t)v273 + *(int *)(v260 + 48);
      *long long v273 = v71;
      sub_228B0A230((uint64_t)v37, v72, type metadata accessor for UserAnnotationViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v50 = sub_228B774DC(0, *(void *)(v50 + 16) + 1, 1, v50);
      }
      unint64_t v74 = *(void *)(v50 + 16);
      unint64_t v73 = *(void *)(v50 + 24);
      if (v74 >= v73 >> 1) {
        unint64_t v50 = sub_228B774DC(v73 > 1, v74 + 1, 1, v50);
      }
      *(void *)(v50 + 16) = v74 + 1;
      sub_228ACD8BC((uint64_t)v273, v50+ ((*(unsigned __int8 *)(v261 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v261 + 80))+ *(void *)(v261 + 72) * v74, &qword_2682926F8);
      sub_228B0A300((uint64_t)v37, type metadata accessor for UserAnnotationViewModel);
      goto LABEL_5;
    }
    unint64_t v259 = v50;
    id v60 = *(id *)(v57[7] + 8 * v58);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v284 = v56;
    char v61 = (char *)v56;
    id v62 = v60;
    swift_getAtKeyPath();
    long long v254 = v61;

    char v63 = v279;
    if (v279[2])
    {
      unint64_t v64 = sub_228AD1A80((uint64_t)v62);
      uint64_t v65 = (uint64_t)v249;
      uint64_t v66 = v276;
      if (v67)
      {
        sub_228B0A230(v63[7] + v64 * (void)v269, (uint64_t)v249, type metadata accessor for UserAnnotationViewModel);
        uint64_t v68 = *v256;
        uint64_t v69 = v65;
        uint64_t v70 = 0;
      }
      else
      {
        uint64_t v68 = *v256;
        uint64_t v69 = (uint64_t)v249;
        uint64_t v70 = 1;
      }
    }
    else
    {
      uint64_t v68 = *v256;
      uint64_t v65 = (uint64_t)v249;
      uint64_t v69 = (uint64_t)v249;
      uint64_t v70 = 1;
      uint64_t v66 = v276;
    }
    uint64_t v270 = v68;
    v68(v69, v70, 1, v66);
    unint64_t v50 = v259;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    id v75 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v258;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v258)(v65, 1, v66) == 1)
    {

      sub_228AC1A50(v65, &qword_268292700);
      int v49 = v269;
      goto LABEL_12;
    }
    v246 = v75;
    sub_228B0A298(v65, v250, type metadata accessor for UserAnnotationViewModel);
    uint64_t v76 = sub_228BACAF8();
    uint64_t v77 = *(void *)(v76 - 8);
    uint64_t v78 = (uint64_t)v242;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v242, v243, v76);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56))(v78, 0, 1, v76);
    id v79 = v244;
    uint64_t v80 = sub_228B08778(v79, v62, v245, v78, (uint64_t)v37);
    uint64_t v82 = v81;
    uint64_t v255 = v83;
    uint64_t v251 = v84;
    sub_228AC1A50(v78, &qword_268292658);

    uint64_t v247 = v82;
    if (v80)
    {
      uint64_t v85 = swift_allocObject();
      *(void *)(v85 + 16) = v80;
      *(void *)(v85 + 24) = v82;
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v87 = v266;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        id v252 = sub_228B768F8(0, v252[2] + 1, 1, v252);
      }
      unint64_t v89 = v252[2];
      unint64_t v88 = v252[3];
      if (v89 >= v88 >> 1) {
        id v252 = sub_228B768F8((void *)(v88 > 1), v89 + 1, 1, v252);
      }
      uint64_t v90 = v252;
      v252[2] = v89 + 1;
      __int16 v91 = &v90[2 * v89];
      v91[4] = sub_228B0B0E0;
      v91[5] = v85;
    }
    else
    {
      uint64_t v87 = v266;
    }
    uint64_t v92 = v255;
    if (v255)
    {
      uint64_t v93 = swift_allocObject();
      *(void *)(v93 + 16) = v92;
      *(void *)(v93 + 24) = v251;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        __int16 v253 = sub_228B768F8(0, v253[2] + 1, 1, v253);
      }
      unint64_t v95 = v253[2];
      unint64_t v94 = v253[3];
      if (v95 >= v94 >> 1) {
        __int16 v253 = sub_228B768F8((void *)(v94 > 1), v95 + 1, 1, v253);
      }
      uint64_t v96 = v253;
      v253[2] = v95 + 1;
      uint64_t v97 = &v96[2 * v95];
      v97[4] = sub_228B0B0E0;
      v97[5] = v93;
    }
    swift_bridgeObjectRetain();
    unint64_t v98 = sub_228AD1A80((uint64_t)v62);
    char v100 = v99;
    swift_bridgeObjectRelease();
    uint64_t v248 = v80;
    if (v100)
    {
      char v101 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t aBlock = v87;
      int v102 = v269;
      if ((v101 & 1) == 0)
      {
        sub_228B043EC(type metadata accessor for UserAnnotationViewModel, &qword_268292720, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel);
        uint64_t v87 = aBlock;
      }

      uint64_t v103 = v240;
      sub_228B0A298(*(void *)(v87 + 56) + v98 * (void)v102, v240, type metadata accessor for UserAnnotationViewModel);
      uint64_t v266 = v87;
      sub_228B03184(v98, v87, type metadata accessor for UserAnnotationViewModel);
      swift_bridgeObjectRelease();
      uint64_t v104 = v276;
      uint64_t v105 = v270;
      v270(v103, 0, 1, v276);
    }
    else
    {
      uint64_t v103 = v240;
      uint64_t v104 = v276;
      uint64_t v105 = v270;
      v270(v240, 1, 1, v276);
    }
    sub_228AC1A50(v103, &qword_268292700);
    uint64_t v106 = v241;
    sub_228B0A230((uint64_t)v37, v241, type metadata accessor for UserAnnotationViewModel);
    v105(v106, 0, 1, v104);
    id v284 = v254;
    uint64_t v107 = v254;
    id v108 = v62;
    long long v254 = (char *)swift_modifyAtReferenceWritableKeyPath();
    uint64_t v110 = v109;
    if (v246(v106, 1, v104) == 1)
    {
      sub_228AC1A50(v106, &qword_268292700);
      swift_bridgeObjectRetain();
      unint64_t v111 = sub_228AD1A80((uint64_t)v108);
      char v113 = v112;
      swift_bridgeObjectRelease();
      int v49 = v269;
      if (v113)
      {
        char v114 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v115 = *(void *)(v110 + 16);
        uint64_t v283 = (void *)v115;
        *(void *)(v110 + 16) = 0x8000000000000000;
        if ((v114 & 1) == 0)
        {
          sub_228B043EC(type metadata accessor for UserAnnotationViewModel, &qword_268292720, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel);
          uint64_t v115 = (uint64_t)v283;
        }

        uint64_t v116 = (uint64_t)v238;
        sub_228B0A298(*(void *)(v115 + 56) + v111 * (void)v49, (uint64_t)v238, type metadata accessor for UserAnnotationViewModel);
        sub_228B03184(v111, v115, type metadata accessor for UserAnnotationViewModel);
        *(void *)(v110 + 16) = v115;
        swift_bridgeObjectRelease();
        uint64_t v117 = 0;
      }
      else
      {
        uint64_t v117 = 1;
        uint64_t v116 = (uint64_t)v238;
      }
      v270(v116, v117, 1, v276);

      sub_228AC1A50(v116, &qword_268292700);
      unint64_t v50 = v259;
    }
    else
    {
      uint64_t v51 = v106;
      uint64_t v52 = v239;
      sub_228B0A298(v51, v239, type metadata accessor for UserAnnotationViewModel);
      char v53 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v283 = *(void **)(v110 + 16);
      *(void *)(v110 + 16) = 0x8000000000000000;
      sub_228B04E18(v52, v108, v53);
      *(void *)(v110 + 16) = v283;

      swift_bridgeObjectRelease();
      unint64_t v50 = v259;
      int v49 = v269;
    }
    uint64_t v54 = v255;
    ((void (*)(uint64_t *, void))v254)(&aBlock, 0);
    sub_228AD2678(v54);
    sub_228AD2678((uint64_t)v248);

    sub_228B0A300(v250, type metadata accessor for UserAnnotationViewModel);
    sub_228B0A300((uint64_t)v37, type metadata accessor for UserAnnotationViewModel);
    a5 = v271;
LABEL_5:
    v48 += (uint64_t)v49;
    --v47;
  }
  while (v47);
  unint64_t v259 = v50;
  swift_bridgeObjectRelease();
LABEL_48:
  unint64_t v118 = v268;
  if (v245)
  {
    uint64_t v119 = self;
    uint64_t v120 = swift_allocObject();
    *(void *)(v120 + 16) = v252;
    uint64_t v281 = sub_228B0B078;
    uint64_t v282 = v120;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v278 = 1107296256;
    uint64_t v279 = sub_228B005F8;
    int v280 = &block_descriptor_182;
    uint64_t v121 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v122 = swift_allocObject();
    *(void *)(v122 + 16) = v253;
    uint64_t v281 = sub_228B0AF2C;
    uint64_t v282 = v122;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v278 = 1107296256;
    a5 = v271;
    uint64_t v279 = sub_228B0063C;
    int v280 = &block_descriptor_189;
    uint64_t v123 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v119, sel_animateWithDuration_animations_completion_, v121, v123, 0.25);
    _Block_release(v123);
    _Block_release(v121);
  }
  uint64_t v124 = a5;
  uint64_t v125 = *(void *)(v266 + 64);
  uint64_t v256 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v266 + 64);
  uint64_t v126 = -1;
  uint64_t v127 = -1 << *(unsigned char *)(v266 + 32);
  uint64_t v255 = ~v127;
  if (-v127 < 64) {
    uint64_t v126 = ~(-1 << -(char)v127);
  }
  unint64_t v128 = v126 & v125;
  id v269 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v272 + 56);
  id v258 = (char *)((unint64_t)(63 - v127) >> 6);
  long long v254 = v258 - 1;
  swift_bridgeObjectRetain();
  uint64_t v129 = 0;
  uint64_t v130 = (uint64_t *)&unk_268292710;
LABEL_55:
  if (v128)
  {
    long long v273 = (void *)((v128 - 1) & v128);
    unint64_t v132 = __clz(__rbit64(v128)) | (v129 << 6);
    uint64_t v133 = v129;
LABEL_57:
    uint64_t v134 = *(void *)(v266 + 56);
    uint64_t v135 = *(void **)(*(void *)(v266 + 48) + 8 * v132);
    *unint64_t v118 = v135;
    uint64_t v136 = v134 + *(void *)(v272 + 72) * v132;
    uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(v130);
    sub_228B0A230(v136, (uint64_t)v118 + *(int *)(v137 + 48), type metadata accessor for UserAnnotationViewModel);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v137 - 8) + 56))(v118, 0, 1, v137);
    id v138 = v135;
    char v139 = (void (*)(uint64_t, void, uint64_t, uint64_t))v133;
    goto LABEL_76;
  }
  uint64_t v133 = v129 + 1;
  if (__OFADD__(v129, 1))
  {
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
    goto LABEL_127;
  }
  char v139 = (void (*)(uint64_t, void, uint64_t, uint64_t))v129;
  if (v133 >= (uint64_t)v258) {
    goto LABEL_75;
  }
  unint64_t v140 = (unint64_t)v256[v133];
  if (v140)
  {
LABEL_61:
    long long v273 = (void *)((v140 - 1) & v140);
    unint64_t v132 = __clz(__rbit64(v140)) + (v133 << 6);
    goto LABEL_57;
  }
  uint64_t v141 = v129 + 2;
  char v139 = (void (*)(uint64_t, void, uint64_t, uint64_t))(v129 + 1);
  if (v129 + 2 >= (uint64_t)v258) {
    goto LABEL_75;
  }
  unint64_t v140 = (unint64_t)v256[v141];
  if (v140) {
    goto LABEL_64;
  }
  char v139 = (void (*)(uint64_t, void, uint64_t, uint64_t))(v129 + 2);
  if (v129 + 3 >= (uint64_t)v258) {
    goto LABEL_75;
  }
  unint64_t v140 = (unint64_t)v256[v129 + 3];
  if (v140)
  {
    uint64_t v133 = v129 + 3;
    goto LABEL_61;
  }
  uint64_t v141 = v129 + 4;
  char v139 = (void (*)(uint64_t, void, uint64_t, uint64_t))(v129 + 3);
  if (v129 + 4 >= (uint64_t)v258) {
    goto LABEL_75;
  }
  unint64_t v140 = (unint64_t)v256[v141];
  if (v140)
  {
LABEL_64:
    uint64_t v133 = v141;
    goto LABEL_61;
  }
  while (2)
  {
    uint64_t v133 = v141 + 1;
    if (__OFADD__(v141, 1))
    {
      __break(1u);
LABEL_129:
      sub_228BADA18();
      __break(1u);
LABEL_130:
      type metadata accessor for MapBridgingUserAnnotation();
      uint64_t result = sub_228BADA18();
      __break(1u);
    }
    else
    {
      if (v133 < (uint64_t)v258)
      {
        unint64_t v140 = (unint64_t)v256[v133];
        ++v141;
        if (v140) {
          goto LABEL_61;
        }
        continue;
      }
      char v139 = (void (*)(uint64_t, void, uint64_t, uint64_t))v254;
LABEL_75:
      uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(v130);
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v142 - 8) + 56))(v118, 1, 1, v142);
      long long v273 = 0;
LABEL_76:
      uint64_t v143 = v267;
      sub_228ACD8BC((uint64_t)v118, (uint64_t)v267, &qword_268292708);
      uint64_t v144 = v130;
      uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(v130);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v145 - 8) + 48))(v143, 1, v145) != 1)
      {
        uint64_t v270 = v139;
        char v146 = *v143;
        uint64_t v147 = (uint64_t)v143 + *(int *)(v145 + 48);
        int v148 = v274;
        sub_228B0A298(v147, (uint64_t)v274, type metadata accessor for UserAnnotationViewModel);
        uint64_t v149 = *v148;
        id v284 = v275;
        id v150 = v275;
        swift_bridgeObjectRetain();
        uint64_t v151 = v124;
        unint64_t v152 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
        uint64_t v154 = v153;
        swift_bridgeObjectRetain();
        unint64_t v155 = sub_228AD1964(v149);
        char v157 = v156;
        swift_bridgeObjectRelease();
        if (v157)
        {
          char v158 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v159 = *(void *)(v154 + 24);
          uint64_t v283 = (void *)v159;
          *(void *)(v154 + 24) = 0x8000000000000000;
          if ((v158 & 1) == 0)
          {
            sub_228B0464C(&qword_268292718);
            uint64_t v159 = (uint64_t)v283;
          }
          swift_bridgeObjectRelease();
          __int16 v160 = *(void **)(*(void *)(v159 + 56) + 8 * v155);
          sub_228B03380(v155, v159);
          *(void *)(v154 + 24) = v159;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v151 = v271;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v152(&aBlock, 0);

        id v284 = v150;
        id v161 = v150;
        uint64_t v162 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
        uint64_t v164 = v163;
        swift_bridgeObjectRetain();
        unint64_t v165 = sub_228AD1A80((uint64_t)v146);
        char v167 = v166;
        swift_bridgeObjectRelease();
        uint64_t v168 = (uint64_t)v265;
        if (v167)
        {
          int v169 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v170 = *(void *)(v164 + 16);
          uint64_t v283 = (void *)v170;
          *(void *)(v164 + 16) = 0x8000000000000000;
          if (!v169)
          {
            sub_228B043EC(type metadata accessor for UserAnnotationViewModel, &qword_268292720, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel);
            uint64_t v170 = (uint64_t)v283;
          }
          uint64_t v124 = v151;

          sub_228B0A298(*(void *)(v170 + 56) + *(void *)(v272 + 72) * v165, v168, type metadata accessor for UserAnnotationViewModel);
          sub_228B03184(v165, v170, type metadata accessor for UserAnnotationViewModel);
          *(void *)(v164 + 16) = v170;
          swift_bridgeObjectRelease();
          uint64_t v131 = 0;
        }
        else
        {
          uint64_t v124 = v151;
          uint64_t v131 = 1;
        }
        (*v269)(v168, v131, 1, v276);
        sub_228AC1A50(v168, &qword_268292700);
        v162(&aBlock, 0);

        sub_228B0A300((uint64_t)v274, type metadata accessor for UserAnnotationViewModel);
        uint64_t v129 = (uint64_t)v270;
        unint64_t v128 = (unint64_t)v273;
        unint64_t v118 = v268;
        uint64_t v130 = v144;
        goto LABEL_55;
      }
      sub_228AC98B8();
      uint64_t v171 = swift_bridgeObjectRetain();
      unint64_t v172 = sub_228B00690(v171);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!(v172 >> 62))
      {
        swift_bridgeObjectRetain();
        sub_228BAD9F8();
        sub_228AD25BC(0, (unint64_t *)&qword_268293000);
        unint64_t v173 = v172;
        goto LABEL_88;
      }
LABEL_127:
      sub_228AD25BC(0, (unint64_t *)&qword_268293000);
      swift_bridgeObjectRetain();
      unint64_t v173 = sub_228BAD948();
      swift_bridgeObjectRelease();
LABEL_88:
      swift_bridgeObjectRelease();
      sub_228B00098(v173);
      swift_bridgeObjectRelease();
      unint64_t v174 = v259;
      uint64_t v175 = *(void *)(v259 + 16);
      if (v175)
      {
        uint64_t v176 = (uint64_t *)((char *)v264 + *(int *)(v260 + 48));
        char v177 = (char *)(v259
                      + ((*(unsigned __int8 *)(v261 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v261 + 80)));
        __int16 v268 = *(char **)(v261 + 72);
        uint64_t v270 = (void (*)(uint64_t, void, uint64_t, uint64_t))(v272 + 48);
        swift_bridgeObjectRetain();
        while (1)
        {
          long long v273 = v177;
          uint64_t v274 = (uint64_t *)v175;
          id v182 = v264;
          sub_228AD2708((uint64_t)v177, (uint64_t)v264, &qword_2682926F8);
          unint64_t v183 = *v182;
          uint64_t v184 = (uint64_t)v176;
          uint64_t v185 = *v176;
          id v284 = v275;
          id v186 = v275;
          swift_bridgeObjectRetain();
          id v187 = v183;
          char v188 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
          uint64_t v190 = v189;
          char v191 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v283 = *(void **)(v190 + 24);
          uint64_t v192 = v283;
          *(void *)(v190 + 24) = 0x8000000000000000;
          unint64_t v194 = sub_228AD1964(v185);
          uint64_t v195 = v192[2];
          BOOL v196 = (v193 & 1) == 0;
          uint64_t v197 = v195 + v196;
          if (__OFADD__(v195, v196))
          {
            __break(1u);
            goto LABEL_123;
          }
          char v198 = v193;
          if (v192[3] >= v197)
          {
            if (v191)
            {
              uint64_t v201 = v283;
              if ((v193 & 1) == 0) {
                goto LABEL_97;
              }
            }
            else
            {
              sub_228B0464C(&qword_268292718);
              uint64_t v201 = v283;
              if ((v198 & 1) == 0) {
                goto LABEL_97;
              }
            }
          }
          else
          {
            sub_228B0288C(v197, v191, &qword_268292718);
            unint64_t v199 = sub_228AD1964(v185);
            if ((v198 & 1) != (v200 & 1)) {
              goto LABEL_129;
            }
            unint64_t v194 = v199;
            uint64_t v201 = v283;
            if ((v198 & 1) == 0)
            {
LABEL_97:
              v201[(v194 >> 6) + 8] |= 1 << v194;
              uint64_t v202 = 8 * v194;
              *(void *)(v201[6] + v202) = v185;
              *(void *)(v201[7] + v202) = v187;
              uint64_t v203 = v201[2];
              BOOL v204 = __OFADD__(v203, 1);
              uint64_t v205 = v203 + 1;
              if (v204) {
                goto LABEL_124;
              }
              v201[2] = v205;
              swift_bridgeObjectRetain();
              goto LABEL_102;
            }
          }
          uint64_t v206 = v201[7];

          *(void *)(v206 + 8 * v194) = v187;
LABEL_102:
          *(void *)(v190 + 24) = v201;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v188(&aBlock, 0);

          uint64_t v176 = (uint64_t *)v184;
          uint64_t v207 = v263;
          sub_228B0A230(v184, v263, type metadata accessor for UserAnnotationViewModel);
          char v208 = *v269;
          uint64_t v209 = v276;
          (*v269)(v207, 0, 1, v276);
          id v284 = v186;
          id v210 = v186;
          id v211 = v187;
          BOOL v212 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
          uint64_t v214 = v213;
          int v215 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))v270)(v207, 1, v209);
          uint64_t v216 = v272;
          if (v215 == 1)
          {
            sub_228AC1A50(v207, &qword_268292700);
            swift_bridgeObjectRetain();
            unint64_t v217 = sub_228AD1A80((uint64_t)v211);
            char v219 = v218;
            swift_bridgeObjectRelease();
            if (v219)
            {
              int v220 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v221 = *(void *)(v214 + 16);
              uint64_t v283 = (void *)v221;
              *(void *)(v214 + 16) = 0x8000000000000000;
              if (!v220)
              {
                sub_228B043EC(type metadata accessor for UserAnnotationViewModel, &qword_268292720, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel);
                uint64_t v221 = (uint64_t)v283;
              }

              uint64_t v179 = v257;
              sub_228B0A298(*(void *)(v221 + 56) + *(void *)(v216 + 72) * v217, v257, type metadata accessor for UserAnnotationViewModel);
              sub_228B03184(v217, v221, type metadata accessor for UserAnnotationViewModel);
              *(void *)(v214 + 16) = v221;
              swift_bridgeObjectRelease();
              uint64_t v178 = 0;
            }
            else
            {
              uint64_t v178 = 1;
              uint64_t v179 = v257;
            }
            v208(v179, v178, 1, v276);

            sub_228AC1A50(v179, &qword_268292700);
          }
          else
          {
            sub_228B0A298(v207, v262, type metadata accessor for UserAnnotationViewModel);
            int v222 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v283 = *(void **)(v214 + 16);
            id v223 = v283;
            *(void *)(v214 + 16) = 0x8000000000000000;
            unint64_t v225 = sub_228AD1A80((uint64_t)v211);
            uint64_t v226 = v223[2];
            BOOL v227 = (v224 & 1) == 0;
            uint64_t v228 = v226 + v227;
            if (__OFADD__(v226, v227)) {
              goto LABEL_125;
            }
            char v229 = v224;
            if (v223[3] >= v228)
            {
              if ((v222 & 1) == 0) {
                sub_228B043EC(type metadata accessor for UserAnnotationViewModel, &qword_268292720, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel);
              }
            }
            else
            {
              sub_228B02500(v228, v222, type metadata accessor for UserAnnotationViewModel, &qword_268292720, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel);
              unint64_t v230 = sub_228AD1A80((uint64_t)v211);
              if ((v229 & 1) != (v231 & 1)) {
                goto LABEL_130;
              }
              unint64_t v225 = v230;
            }
            uint64_t v176 = (uint64_t *)v184;
            uint64_t v232 = v283;
            if (v229)
            {
              sub_228B0A404(v262, v283[7] + *(void *)(v216 + 72) * v225, type metadata accessor for UserAnnotationViewModel);
            }
            else
            {
              v283[(v225 >> 6) + 8] |= 1 << v225;
              *(void *)(v232[6] + 8 * v225) = v211;
              sub_228B0A298(v262, v232[7] + *(void *)(v216 + 72) * v225, type metadata accessor for UserAnnotationViewModel);
              uint64_t v233 = v232[2];
              BOOL v204 = __OFADD__(v233, 1);
              uint64_t v234 = v233 + 1;
              if (v204) {
                goto LABEL_126;
              }
              v232[2] = v234;
              id v235 = v211;
            }
            *(void *)(v214 + 16) = v232;

            swift_bridgeObjectRelease();
          }
          uint64_t v181 = v273;
          uint64_t v180 = (uint64_t)v274;
          v212(&aBlock, 0);

          sub_228B0A300((uint64_t)v176, type metadata accessor for UserAnnotationViewModel);
          char v177 = &v268[(void)v181];
          uint64_t v175 = v180 - 1;
          if (!v175)
          {
            unint64_t v174 = v259;
            swift_bridgeObjectRelease();
            return v174;
          }
        }
      }
      return v174;
    }
    return result;
  }
}

uint64_t sub_228AED5A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v285 = a4;
  id v284 = a1;
  uint64_t v298 = __swift_instantiateConcreteTypeFromMangledName(&qword_268293FB0);
  uint64_t v299 = *(void *)(v298 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v298);
  uint64_t v10 = (char *)&v274 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v301 = (void **)((char *)&v274 - v11);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292750);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v274 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v283 = (uint64_t)&v274 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v282 = (uint64_t)&v274 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v292 = (uint64_t)&v274 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v296 = (char *)&v274 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v300 = (uint64_t)&v274 - v25;
  MEMORY[0x270FA5388](v24);
  v303 = (char *)&v274 - v26;
  uint64_t v27 = type metadata accessor for MarkerAnnotationViewModel(0);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void *)(v28 + 64);
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v276 = (uint64_t)&v274 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v291 = (uint64_t)&v274 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v281 = (uint64_t)&v274 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v290 = (uint64_t)&v274 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v39 = (double *)((char *)&v274 - v38);
  uint64_t v40 = MEMORY[0x270FA5388](v37);
  uint64_t v295 = (uint64_t)&v274 - v41;
  MEMORY[0x270FA5388](v40);
  long long v314 = (uint64_t *)((char *)&v274 - v42);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292758);
  uint64_t v44 = MEMORY[0x270FA5388](v43 - 8);
  char v306 = (uint64_t *)((char *)&v274 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v44);
  char v305 = (void **)((char *)&v274 - v46);
  *(void *)&long long v321 = v5;
  id v316 = v5;
  uint64_t v317 = a5;
  uint64_t v47 = (void (*)(uint64_t *, void))swift_readAtKeyPath();
  uint64_t v304 = *(void *)(v48 + 16);
  swift_bridgeObjectRetain();
  v47(&aBlock, 0);

  int v49 = *(char **)(a2 + 16);
  uint64_t v310 = v27;
  uint64_t v315 = v28;
  if (v49)
  {
    id v275 = v15;
    uint64_t v50 = *(unsigned __int8 *)(v28 + 80);
    uint64_t v51 = a2 + ((v50 + 32) & ~v50);
    uint64_t v302 = *(void *)(v28 + 72);
    id v293 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
    id v294 = (objc_class **)(v28 + 48);
    uint64_t v279 = v50 | 7;
    uint64_t v280 = (v50 + 24) & ~v50;
    unint64_t v278 = (v29 + v280 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v277 = v278 + 40;
    uint64_t v274 = a2;
    swift_bridgeObjectRetain();
    unint64_t v52 = MEMORY[0x263F8EE78];
    id v288 = (void *)MEMORY[0x263F8EE78];
    id v289 = (void *)MEMORY[0x263F8EE78];
    uint64_t v297 = v10;
    while (1)
    {
      uint64_t v313 = v51;
      sub_228B0A230(v51, (uint64_t)v39, type metadata accessor for MarkerAnnotationViewModel);
      uint64_t v58 = *(void *)v39;
      *(void *)&long long v321 = v316;
      id v59 = v316;
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();

      id v60 = v325;
      if (v325[2] && (unint64_t v61 = sub_228AD1964(v58), (v62 & 1) != 0))
      {
        id v63 = *(id *)(v60[7] + 8 * v61);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&long long v321 = v59;
        unint64_t v64 = (unsigned int (**)(uint64_t, uint64_t, void))v59;
        id v65 = v63;
        swift_getAtKeyPath();
        long long v312 = v64;

        uint64_t v66 = v324;
        if (v324[2])
        {
          unint64_t v67 = sub_228AD1AD4((uint64_t)v65);
          uint64_t v68 = v292;
          if (v69)
          {
            sub_228B0A230(v66[7] + v67 * v302, v292, type metadata accessor for MarkerAnnotationViewModel);
            uint64_t v70 = *v293;
            (*v293)(v68, 0, 1, v27);
          }
          else
          {
            uint64_t v70 = *v293;
            (*v293)(v292, 1, 1, v27);
          }
        }
        else
        {
          uint64_t v70 = *v293;
          uint64_t v68 = v292;
          (*v293)(v292, 1, 1, v27);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v93 = *v294;
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))*v294)(v68, 1, v27) != 1)
        {
          char v308 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v93;
          uint64_t v311 = v70;
          unint64_t v94 = v49;
          sub_228B0A298(v68, v290, type metadata accessor for MarkerAnnotationViewModel);
          uint64_t v325 = (void *)sub_228AD25BC(0, &qword_268292678);
          uint64_t v326 = (uint64_t (*)())&off_26DD21E98;
          unint64_t v95 = v284;
          uint64_t aBlock = (uint64_t)v284;
          uint64_t v96 = v281;
          sub_228B0A230((uint64_t)v39, v281, type metadata accessor for MarkerAnnotationViewModel);
          sub_228B099C8((uint64_t)&aBlock, (uint64_t)&v321);
          sub_228B0A230(v96, v291, type metadata accessor for MarkerAnnotationViewModel);
          sub_228B099C8((uint64_t)&v321, (uint64_t)&v318);
          uint64_t v97 = swift_allocObject();
          *(void *)(v97 + 16) = v65;
          sub_228B0A298(v96, v97 + v280, type metadata accessor for MarkerAnnotationViewModel);
          sub_228B09A30(&v321, v97 + v278);
          id v98 = v95;
          id v99 = v65;
          id v100 = v98;
          uint64_t v101 = v285;
          if (!v285) {
            goto LABEL_25;
          }
          swift_retain();
          objc_msgSend(v99, sel_coordinate);
          if (vabdd_f64(v103, v39[11]) >= 0.00000000999999994 || vabdd_f64(v102, v39[12]) >= 0.00000000999999994)
          {
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v318);
            sub_228B0A300(v291, type metadata accessor for MarkerAnnotationViewModel);
            uint64_t v106 = (void *)swift_allocObject();
            v106[2] = sub_228B0A3D4;
            v106[3] = v97;
            v106[4] = v101;
            uint64_t v107 = swift_allocObject();
            *(void *)(v107 + 16) = sub_228B0A3D4;
            *(void *)(v107 + 24) = v97;
            id v309 = (id)v107;
            swift_retain();
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);

            uint64_t v108 = swift_allocObject();
            *(void *)(v108 + 16) = sub_228B09F98;
            *(void *)(v108 + 24) = v106;
            id v286 = v106;
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              id v288 = sub_228B768F8(0, v288[2] + 1, 1, v288);
            }
            uint64_t v92 = v94;
            unint64_t v110 = v288[2];
            unint64_t v109 = v288[3];
            if (v110 >= v109 >> 1) {
              id v288 = sub_228B768F8((void *)(v109 > 1), v110 + 1, 1, v288);
            }
            unint64_t v111 = v288;
            v288[2] = v110 + 1;
            char v112 = &v111[2 * v110];
            v112[4] = sub_228B0B0E0;
            v112[5] = v108;
            uint64_t v113 = swift_allocObject();
            *(void *)(v113 + 16) = sub_228B09FA4;
            *(void *)(v113 + 24) = v309;
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              id v289 = sub_228B768F8(0, v289[2] + 1, 1, v289);
            }
            unint64_t v115 = v289[2];
            unint64_t v114 = v289[3];
            if (v115 >= v114 >> 1) {
              id v289 = sub_228B768F8((void *)(v114 > 1), v115 + 1, 1, v289);
            }
            uint64_t v116 = v289;
            v289[2] = v115 + 1;
            uint64_t v117 = &v116[2 * v115];
            v117[4] = sub_228B0B0E0;
            v117[5] = v113;
            unint64_t v118 = sub_228B09FA4;
            uint64_t v119 = sub_228B09F98;
          }
          else
          {
            swift_release();
LABEL_25:
            uint64_t v104 = v291;
            objc_msgSend(v99, sel_setCoordinate_, *(double *)(v291 + 88), *(double *)(v291 + 96));
            if (*(void *)(v104 + 16)) {
              uint64_t v105 = (void *)sub_228BAD3D8();
            }
            else {
              uint64_t v105 = 0;
            }
            uint64_t v92 = v94;
            objc_msgSend(v99, sel_setTitle_, v105);

            uint64_t v120 = *(void *)(v104 + 32);
            v307 = (uint64_t (*)())v100;
            if (v120) {
              uint64_t v121 = (void *)sub_228BAD3D8();
            }
            else {
              uint64_t v121 = 0;
            }
            objc_msgSend(v99, sel_setSubtitle_, v121);

            uint64_t v122 = v319;
            uint64_t v123 = v320;
            __swift_project_boxed_opaque_existential_1(&v318, v319);
            uint64_t v124 = *(uint64_t (**)(id, uint64_t, uint64_t))(v123 + 24);
            id v309 = v99;
            uint64_t v125 = v124(v99, v122, v123);
            if (v125)
            {
              uint64_t v126 = (void *)v125;
              self;
              uint64_t v127 = (void *)swift_dynamicCastObjCClass();
              if (v127) {
                sub_228B13608(v127, 0);
              }
              swift_release();
            }
            else
            {
              swift_release();
            }
            id v99 = v309;
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v318);
            sub_228B0A300(v104, type metadata accessor for MarkerAnnotationViewModel);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);

            uint64_t v119 = 0;
            id v286 = 0;
            unint64_t v118 = 0;
            id v309 = 0;
          }
          uint64_t v128 = v304;
          swift_bridgeObjectRetain();
          unint64_t v129 = sub_228AD1AD4((uint64_t)v99);
          char v131 = v130;
          swift_bridgeObjectRelease();
          v307 = v119;
          uint64_t v287 = v118;
          if (v131)
          {
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t aBlock = v128;
            uint64_t v133 = v128;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_228B043EC(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_268292770, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel);
              uint64_t v133 = aBlock;
            }
            uint64_t v134 = v99;

            uint64_t v135 = v282;
            sub_228B0A298(*(void *)(v133 + 56) + v129 * v302, v282, type metadata accessor for MarkerAnnotationViewModel);
            uint64_t v304 = v133;
            sub_228B03184(v129, v133, type metadata accessor for MarkerAnnotationViewModel);
            swift_bridgeObjectRelease();
            uint64_t v136 = v135;
            uint64_t v137 = 0;
            uint64_t v138 = v310;
          }
          else
          {
            uint64_t v134 = v99;
            uint64_t v138 = v27;
            uint64_t v135 = v282;
            uint64_t v136 = v282;
            uint64_t v137 = 1;
          }
          char v139 = v311;
          v311(v136, v137, 1, v138);
          sub_228AC1A50(v135, &qword_268292750);
          uint64_t v140 = v283;
          sub_228B0A230((uint64_t)v39, v283, type metadata accessor for MarkerAnnotationViewModel);
          v139(v140, 0, 1, v138);
          *(void *)&long long v321 = v312;
          uint64_t v141 = v312;
          id v142 = v134;
          long long v312 = (unsigned int (**)(uint64_t, uint64_t, void))swift_modifyAtReferenceWritableKeyPath();
          uint64_t v144 = v143;
          if (v308(v140, 1, v138) == 1)
          {
            sub_228AC1A50(v140, &qword_268292750);
            swift_bridgeObjectRetain();
            unint64_t v145 = sub_228AD1AD4((uint64_t)v142);
            char v147 = v146;
            swift_bridgeObjectRelease();
            uint64_t v56 = (uint64_t)v307;
            if (v147)
            {
              char v148 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v149 = *(void *)(v144 + 16);
              long long v318 = (void *)v149;
              *(void *)(v144 + 16) = 0x8000000000000000;
              if ((v148 & 1) == 0)
              {
                sub_228B043EC(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_268292770, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel);
                uint64_t v149 = (uint64_t)v318;
              }

              uint64_t v150 = (uint64_t)v275;
              sub_228B0A298(*(void *)(v149 + 56) + v145 * v302, (uint64_t)v275, type metadata accessor for MarkerAnnotationViewModel);
              sub_228B03184(v145, v149, type metadata accessor for MarkerAnnotationViewModel);
              *(void *)(v144 + 16) = v149;
              swift_bridgeObjectRelease();
              uint64_t v151 = 0;
            }
            else
            {
              uint64_t v151 = 1;
              uint64_t v150 = (uint64_t)v275;
            }
            v311(v150, v151, 1, v310);

            sub_228AC1A50(v150, &qword_268292750);
            uint64_t v55 = v313;
          }
          else
          {
            uint64_t v53 = v276;
            sub_228B0A298(v140, v276, type metadata accessor for MarkerAnnotationViewModel);
            char v54 = swift_isUniquelyReferenced_nonNull_native();
            long long v318 = *(void **)(v144 + 16);
            *(void *)(v144 + 16) = 0x8000000000000000;
            sub_228B05024(v53, v142, v54);
            *(void *)(v144 + 16) = v318;

            swift_bridgeObjectRelease();
            uint64_t v55 = v313;
            uint64_t v56 = (uint64_t)v307;
          }
          uint64_t v57 = (uint64_t)v287;
          ((void (*)(uint64_t *, void))v312)(&aBlock, 0);
          sub_228AD2678(v57);
          sub_228AD2678(v56);

          sub_228B0A300(v290, type metadata accessor for MarkerAnnotationViewModel);
          sub_228B0A300((uint64_t)v39, type metadata accessor for MarkerAnnotationViewModel);
          uint64_t v27 = v310;
          goto LABEL_5;
        }
        long long v312 = (unsigned int (**)(uint64_t, uint64_t, void))v49;
        id v309 = (id)v52;

        sub_228AC1A50(v68, &qword_268292750);
      }
      else
      {
        long long v312 = (unsigned int (**)(uint64_t, uint64_t, void))v49;
        id v309 = (id)v52;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v72 = *((void *)v39 + 1);
      uint64_t v71 = *((void *)v39 + 2);
      unint64_t v73 = (uint64_t (*)())*((void *)v39 + 4);
      v307 = (uint64_t (*)())*((void *)v39 + 3);
      uint64_t v74 = *((void *)v39 + 11);
      uint64_t v75 = *((void *)v39 + 12);
      uint64_t v76 = (void *)*((void *)v39 + 5);
      LODWORD(v311) = *((unsigned __int8 *)v39 + 48);
      char v308 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for MapBridgingMarker();
      uint64_t v77 = objc_allocWithZone((Class)v308);
      uint64_t v78 = &v77[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_title];
      *uint64_t v78 = 0;
      v78[1] = 0;
      id v79 = (uint64_t (**)())&v77[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_subtitle];
      *id v79 = 0;
      v79[1] = 0;
      uint64_t v80 = OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem;
      *(void *)&v77[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem] = 0;
      uint64_t v81 = OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature;
      v77[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature] = 0;
      *uint64_t v78 = v72;
      v78[1] = v71;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v82 = v76;
      uint64_t v83 = v77;
      swift_bridgeObjectRelease();
      *id v79 = v307;
      v79[1] = v73;
      swift_bridgeObjectRelease();
      uint64_t v84 = &v83[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_coordinate];
      *(void *)uint64_t v84 = v74;
      *((void *)v84 + 1) = v75;
      uint64_t v85 = *(void **)&v77[v80];
      *(void *)&v77[v80] = v76;
      id v86 = v82;

      v77[v81] = (_BYTE)v311;
      v328.receiver = v83;
      v328.super_class = (Class)v308;
      id v87 = objc_msgSendSuper2(&v328, sel_init);

      uint64_t v88 = (uint64_t)v297;
      uint64_t v89 = (uint64_t)&v297[*(int *)(v298 + 48)];
      *(void *)uint64_t v297 = v87;
      sub_228B0A230((uint64_t)v39, v89, type metadata accessor for MarkerAnnotationViewModel);
      unint64_t v52 = (unint64_t)v309;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v52 = sub_228B774F0(0, *(void *)(v52 + 16) + 1, 1, v52);
      }
      unint64_t v91 = *(void *)(v52 + 16);
      unint64_t v90 = *(void *)(v52 + 24);
      uint64_t v27 = v310;
      uint64_t v92 = (char *)v312;
      if (v91 >= v90 >> 1) {
        unint64_t v52 = sub_228B774F0(v90 > 1, v91 + 1, 1, v52);
      }
      *(void *)(v52 + 16) = v91 + 1;
      sub_228ACD8BC(v88, v52+ ((*(unsigned __int8 *)(v299 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v299 + 80))+ *(void *)(v299 + 72) * v91, &qword_268293FB0);
      sub_228B0A300((uint64_t)v39, type metadata accessor for MarkerAnnotationViewModel);
      uint64_t v55 = v313;
LABEL_5:
      uint64_t v51 = v55 + v302;
      int v49 = v92 - 1;
      if (!v49)
      {
        swift_bridgeObjectRelease();
        uint64_t v152 = v315;
        goto LABEL_60;
      }
    }
  }
  unint64_t v52 = MEMORY[0x263F8EE78];
  id v288 = (void *)MEMORY[0x263F8EE78];
  id v289 = (void *)MEMORY[0x263F8EE78];
  uint64_t v152 = v28;
LABEL_60:
  id v309 = (id)v52;
  if (v285)
  {
    uint64_t v153 = self;
    uint64_t v154 = swift_allocObject();
    *(void *)(v154 + 16) = v288;
    uint64_t v326 = sub_228B0B078;
    uint64_t v327 = v154;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v323 = 1107296256;
    v324 = sub_228B005F8;
    uint64_t v325 = &block_descriptor_213;
    unint64_t v155 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v156 = swift_allocObject();
    *(void *)(v156 + 16) = v289;
    uint64_t v326 = sub_228B0AF2C;
    uint64_t v327 = v156;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v323 = 1107296256;
    v324 = sub_228B0063C;
    uint64_t v325 = &block_descriptor_220;
    char v157 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v153, sel_animateWithDuration_animations_completion_, v155, v157, 0.25);
    _Block_release(v157);
    char v158 = v155;
    uint64_t v152 = v315;
    _Block_release(v158);
  }
  uint64_t v159 = *(void *)(v304 + 64);
  v307 = (uint64_t (*)())(v304 + 64);
  uint64_t v160 = -1;
  uint64_t v161 = -1 << *(unsigned char *)(v304 + 32);
  uint64_t v302 = ~v161;
  if (-v161 < 64) {
    uint64_t v160 = ~(-1 << -(char)v161);
  }
  unint64_t v162 = v160 & v159;
  uint64_t v311 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v152 + 56);
  char v308 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((unint64_t)(63 - v161) >> 6);
  uint64_t v297 = (char *)v308 - 1;
  swift_bridgeObjectRetain();
  uint64_t v163 = 0;
  uint64_t v164 = (uint64_t *)&unk_268292760;
  while (1)
  {
    if (v162)
    {
      uint64_t v168 = (v162 - 1) & v162;
      unint64_t v169 = __clz(__rbit64(v162)) | (v163 << 6);
      uint64_t v170 = v163;
LABEL_69:
      uint64_t v171 = *(void *)(v304 + 56);
      unint64_t v172 = *(void **)(*(void *)(v304 + 48) + 8 * v169);
      unint64_t v173 = v306;
      *char v306 = v172;
      uint64_t v174 = v171 + *(void *)(v152 + 72) * v169;
      uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(v164);
      uint64_t v176 = v174;
      uint64_t v177 = (uint64_t)v173;
      sub_228B0A230(v176, (uint64_t)v173 + *(int *)(v175 + 48), type metadata accessor for MarkerAnnotationViewModel);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v175 - 8) + 56))(v173, 0, 1, v175);
      id v178 = v172;
      uint64_t v179 = (unsigned int (**)(uint64_t, uint64_t, void))v170;
      goto LABEL_88;
    }
    uint64_t v170 = v163 + 1;
    if (__OFADD__(v163, 1)) {
      goto LABEL_134;
    }
    uint64_t v179 = (unsigned int (**)(uint64_t, uint64_t, void))v163;
    if (v170 < (uint64_t)v308)
    {
      unint64_t v180 = *((void *)v307 + v170);
      if (v180) {
        goto LABEL_73;
      }
      uint64_t v181 = (char *)(v163 + 2);
      uint64_t v179 = (unsigned int (**)(uint64_t, uint64_t, void))(v163 + 1);
      if (v163 + 2 < (uint64_t)v308)
      {
        unint64_t v180 = *((void *)v307 + (void)v181);
        if (v180) {
          goto LABEL_76;
        }
        uint64_t v179 = (unsigned int (**)(uint64_t, uint64_t, void))(v163 + 2);
        if (v163 + 3 < (uint64_t)v308)
        {
          unint64_t v180 = *((void *)v307 + v163 + 3);
          if (v180)
          {
            uint64_t v170 = v163 + 3;
            goto LABEL_73;
          }
          uint64_t v181 = (char *)(v163 + 4);
          uint64_t v179 = (unsigned int (**)(uint64_t, uint64_t, void))(v163 + 3);
          if (v163 + 4 < (uint64_t)v308) {
            break;
          }
        }
      }
    }
LABEL_87:
    uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(v164);
    uint64_t v177 = (uint64_t)v306;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v182 - 8) + 56))(v306, 1, 1, v182);
    uint64_t v168 = 0;
LABEL_88:
    unint64_t v183 = v305;
    sub_228ACD8BC(v177, (uint64_t)v305, &qword_268292758);
    uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName(v164);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v184 - 8) + 48))(v183, 1, v184) == 1)
    {
      sub_228AC98B8();
      uint64_t v209 = swift_bridgeObjectRetain();
      unint64_t v210 = sub_228B0079C(v209);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v210 >> 62) {
        goto LABEL_138;
      }
      swift_bridgeObjectRetain();
      sub_228BAD9F8();
      sub_228AD25BC(0, (unint64_t *)&qword_268293000);
      unint64_t v211 = v210;
      while (1)
      {
        BOOL v212 = v309;
        swift_bridgeObjectRelease();
        sub_228B00098(v211);
        swift_bridgeObjectRelease();
        uint64_t v213 = v212[2];
        if (!v213) {
          return (uint64_t)v212;
        }
        uint64_t v214 = (uint64_t *)((char *)v301 + *(int *)(v298 + 48));
        int v215 = (char *)v212
             + ((*(unsigned __int8 *)(v299 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v299 + 80));
        char v308 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v299 + 72);
        long long v312 = (unsigned int (**)(uint64_t, uint64_t, void))(v315 + 48);
        swift_bridgeObjectRetain();
        while (1)
        {
          long long v314 = (uint64_t *)v213;
          uint64_t v313 = (uint64_t)v215;
          char v219 = v301;
          sub_228AD2708((uint64_t)v215, (uint64_t)v301, &qword_268293FB0);
          int v220 = *v219;
          uint64_t v221 = (uint64_t)v214;
          uint64_t v222 = *v214;
          *(void *)&long long v321 = v316;
          id v223 = v316;
          swift_bridgeObjectRetain();
          id v224 = v220;
          unint64_t v225 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
          uint64_t v227 = v226;
          char v228 = swift_isUniquelyReferenced_nonNull_native();
          long long v318 = *(void **)(v227 + 24);
          char v229 = v318;
          *(void *)(v227 + 24) = 0x8000000000000000;
          unint64_t v231 = sub_228AD1964(v222);
          uint64_t v232 = v229[2];
          BOOL v233 = (v230 & 1) == 0;
          uint64_t v234 = v232 + v233;
          if (__OFADD__(v232, v233)) {
            break;
          }
          char v235 = v230;
          if (v229[3] >= v234)
          {
            if ((v228 & 1) == 0) {
              sub_228B0464C(&qword_268292768);
            }
          }
          else
          {
            sub_228B0288C(v234, v228, &qword_268292768);
            unint64_t v236 = sub_228AD1964(v222);
            if ((v235 & 1) != (v237 & 1)) {
              goto LABEL_140;
            }
            unint64_t v231 = v236;
          }
          unint64_t v238 = v318;
          if (v235)
          {
            uint64_t v239 = v318[7];

            *(void *)(v239 + 8 * v231) = v224;
          }
          else
          {
            v318[(v231 >> 6) + 8] |= 1 << v231;
            uint64_t v240 = 8 * v231;
            *(void *)(v238[6] + v24__isPlatformVersionAtLeast(2, 18, 1, 0) = v222;
            *(void *)(v238[7] + v24__isPlatformVersionAtLeast(2, 18, 1, 0) = v224;
            uint64_t v241 = v238[2];
            BOOL v242 = __OFADD__(v241, 1);
            uint64_t v243 = v241 + 1;
            if (v242) {
              goto LABEL_135;
            }
            v238[2] = v243;
            swift_bridgeObjectRetain();
          }
          *(void *)(v227 + 24) = v238;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v225(&aBlock, 0);

          uint64_t v214 = (uint64_t *)v221;
          uint64_t v244 = v300;
          sub_228B0A230(v221, v300, type metadata accessor for MarkerAnnotationViewModel);
          uint64_t v245 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v311;
          uint64_t v246 = v310;
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))v311)(v244, 0, 1, v310);
          *(void *)&long long v321 = v223;
          id v247 = v223;
          id v248 = v224;
          uint64_t v249 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
          uint64_t v251 = v250;
          if ((*v312)(v244, 1, v246) == 1)
          {
            sub_228AC1A50(v244, &qword_268292750);
            swift_bridgeObjectRetain();
            unint64_t v252 = sub_228AD1AD4((uint64_t)v248);
            char v254 = v253;
            swift_bridgeObjectRelease();
            if (v254)
            {
              int v255 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v256 = *(void *)(v251 + 16);
              long long v318 = (void *)v256;
              *(void *)(v251 + 16) = 0x8000000000000000;
              uint64_t v217 = (uint64_t)v296;
              if (!v255)
              {
                sub_228B043EC(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_268292770, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel);
                uint64_t v217 = (uint64_t)v296;
                uint64_t v256 = (uint64_t)v318;
              }

              sub_228B0A298(*(void *)(v256 + 56) + *(void *)(v315 + 72) * v252, v217, type metadata accessor for MarkerAnnotationViewModel);
              sub_228B03184(v252, v256, type metadata accessor for MarkerAnnotationViewModel);
              *(void *)(v251 + 16) = v256;
              swift_bridgeObjectRelease();
              uint64_t v216 = 0;
            }
            else
            {
              uint64_t v216 = 1;
              uint64_t v217 = (uint64_t)v296;
            }
            v245(v217, v216, 1, v246);

            sub_228AC1A50(v217, &qword_268292750);
          }
          else
          {
            uint64_t v257 = v295;
            sub_228B0A298(v244, v295, type metadata accessor for MarkerAnnotationViewModel);
            int v258 = swift_isUniquelyReferenced_nonNull_native();
            long long v318 = *(void **)(v251 + 16);
            unint64_t v259 = v318;
            *(void *)(v251 + 16) = 0x8000000000000000;
            unint64_t v261 = sub_228AD1AD4((uint64_t)v248);
            uint64_t v262 = v259[2];
            BOOL v263 = (v260 & 1) == 0;
            uint64_t v264 = v262 + v263;
            if (__OFADD__(v262, v263)) {
              goto LABEL_136;
            }
            char v265 = v260;
            if (v259[3] >= v264)
            {
              if ((v258 & 1) == 0) {
                sub_228B043EC(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_268292770, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel);
              }
            }
            else
            {
              sub_228B02500(v264, v258, type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_268292770, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel);
              unint64_t v266 = sub_228AD1AD4((uint64_t)v248);
              if ((v265 & 1) != (v267 & 1)) {
                goto LABEL_141;
              }
              unint64_t v261 = v266;
            }
            uint64_t v268 = v315;
            id v269 = v318;
            if (v265)
            {
              sub_228B0A404(v257, v318[7] + *(void *)(v315 + 72) * v261, type metadata accessor for MarkerAnnotationViewModel);
            }
            else
            {
              v318[(v261 >> 6) + 8] |= 1 << v261;
              *(void *)(v269[6] + 8 * v261) = v248;
              sub_228B0A298(v257, v269[7] + *(void *)(v268 + 72) * v261, type metadata accessor for MarkerAnnotationViewModel);
              uint64_t v270 = v269[2];
              BOOL v242 = __OFADD__(v270, 1);
              uint64_t v271 = v270 + 1;
              if (v242) {
                goto LABEL_137;
              }
              v269[2] = v271;
              id v272 = v248;
            }
            *(void *)(v251 + 16) = v269;

            swift_bridgeObjectRelease();
          }
          uint64_t v218 = (uint64_t)v314;
          v249(&aBlock, 0);

          sub_228B0A300(v221, type metadata accessor for MarkerAnnotationViewModel);
          int v215 = (char *)v308 + v313;
          uint64_t v213 = v218 - 1;
          if (!v213)
          {
            BOOL v212 = v309;
            swift_bridgeObjectRelease();
            return (uint64_t)v212;
          }
        }
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        sub_228AD25BC(0, (unint64_t *)&qword_268293000);
        swift_bridgeObjectRetain();
        unint64_t v211 = sub_228BAD948();
        swift_bridgeObjectRelease();
      }
    }
    long long v312 = v179;
    uint64_t v313 = v168;
    uint64_t v185 = v164;
    id v186 = *v183;
    uint64_t v187 = (uint64_t)v183 + *(int *)(v184 + 48);
    char v188 = v314;
    sub_228B0A298(v187, (uint64_t)v314, type metadata accessor for MarkerAnnotationViewModel);
    uint64_t v189 = *v188;
    *(void *)&long long v321 = v316;
    id v190 = v316;
    swift_bridgeObjectRetain();
    char v191 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v193 = v192;
    swift_bridgeObjectRetain();
    unint64_t v194 = sub_228AD1964(v189);
    char v196 = v195;
    swift_bridgeObjectRelease();
    if (v196)
    {
      char v197 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v198 = *(void *)(v193 + 24);
      long long v318 = (void *)v198;
      *(void *)(v193 + 24) = 0x8000000000000000;
      if ((v197 & 1) == 0)
      {
        sub_228B0464C(&qword_268292768);
        uint64_t v198 = (uint64_t)v318;
      }
      swift_bridgeObjectRelease();
      unint64_t v199 = *(void **)(*(void *)(v198 + 56) + 8 * v194);
      sub_228B03380(v194, v198);
      *(void *)(v193 + 24) = v198;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = v310;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v191(&aBlock, 0);

    *(void *)&long long v321 = v190;
    id v200 = v190;
    uint64_t v201 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v203 = v202;
    swift_bridgeObjectRetain();
    unint64_t v204 = sub_228AD1AD4((uint64_t)v186);
    char v206 = v205;
    swift_bridgeObjectRelease();
    uint64_t v164 = v185;
    if (v206)
    {
      int v207 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v208 = *(void *)(v203 + 16);
      long long v318 = (void *)v208;
      *(void *)(v203 + 16) = 0x8000000000000000;
      uint64_t v166 = (uint64_t)v303;
      unint64_t v167 = v313;
      if (!v207)
      {
        sub_228B043EC(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_268292770, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel);
        uint64_t v166 = (uint64_t)v303;
        uint64_t v208 = (uint64_t)v318;
      }

      sub_228B0A298(*(void *)(v208 + 56) + *(void *)(v315 + 72) * v204, v166, type metadata accessor for MarkerAnnotationViewModel);
      sub_228B03184(v204, v208, type metadata accessor for MarkerAnnotationViewModel);
      *(void *)(v203 + 16) = v208;
      swift_bridgeObjectRelease();
      uint64_t v165 = 0;
    }
    else
    {
      uint64_t v165 = 1;
      uint64_t v166 = (uint64_t)v303;
      unint64_t v167 = v313;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v311)(v166, v165, 1, v27);
    sub_228AC1A50(v166, &qword_268292750);
    v201(&aBlock, 0);

    sub_228B0A300((uint64_t)v314, type metadata accessor for MarkerAnnotationViewModel);
    uint64_t v163 = (uint64_t)v312;
    unint64_t v162 = v167;
    uint64_t v152 = v315;
  }
  unint64_t v180 = *((void *)v307 + (void)v181);
  if (v180)
  {
LABEL_76:
    uint64_t v170 = (uint64_t)v181;
LABEL_73:
    uint64_t v168 = (v180 - 1) & v180;
    unint64_t v169 = __clz(__rbit64(v180)) + (v170 << 6);
    goto LABEL_69;
  }
  while (1)
  {
    uint64_t v170 = (uint64_t)(v181 + 1);
    if (__OFADD__(v181, 1)) {
      break;
    }
    if (v170 >= (uint64_t)v308)
    {
      uint64_t v179 = (unsigned int (**)(uint64_t, uint64_t, void))v297;
      goto LABEL_87;
    }
    unint64_t v180 = *((void *)v307 + v170);
    ++v181;
    if (v180) {
      goto LABEL_73;
    }
  }
  __break(1u);
LABEL_140:
  sub_228BADA18();
  __break(1u);
LABEL_141:
  type metadata accessor for MapBridgingMarker();
  uint64_t result = sub_228BADA18();
  __break(1u);
  return result;
}

uint64_t sub_228AEF96C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v285 = a4;
  id v284 = a1;
  uint64_t v300 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292788);
  uint64_t v301 = *(void *)(v300 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v300);
  uint64_t v10 = (char *)&v274 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  v303 = (void **)((char *)&v274 - v11);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292790);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v274 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v283 = (uint64_t)&v274 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v282 = (uint64_t)&v274 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v294 = (uint64_t)&v274 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v298 = (char *)&v274 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v302 = (uint64_t)&v274 - v25;
  MEMORY[0x270FA5388](v24);
  char v305 = (char *)&v274 - v26;
  uint64_t v27 = type metadata accessor for CustomAnnotationViewModel(0);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void *)(v28 + 64);
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v276 = (uint64_t)&v274 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v293 = (uint64_t)&v274 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v281 = (uint64_t)&v274 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v292 = (uint64_t)&v274 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v39 = (double *)((char *)&v274 - v38);
  uint64_t v40 = MEMORY[0x270FA5388](v37);
  uint64_t v297 = (uint64_t)&v274 - v41;
  MEMORY[0x270FA5388](v40);
  long long v314 = (uint64_t *)((char *)&v274 - v42);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292798);
  uint64_t v44 = MEMORY[0x270FA5388](v43 - 8);
  char v308 = (uint64_t *)((char *)&v274 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v44);
  v307 = (void **)((char *)&v274 - v46);
  *(void *)&long long v321 = v5;
  id v316 = v5;
  uint64_t v317 = a5;
  uint64_t v47 = (void (*)(uint64_t *, void))swift_readAtKeyPath();
  uint64_t v306 = *(void *)(v48 + 16);
  swift_bridgeObjectRetain();
  v47(&aBlock, 0);

  int v49 = *(char **)(a2 + 16);
  uint64_t v310 = v27;
  uint64_t v315 = v28;
  if (v49)
  {
    id v275 = v15;
    uint64_t v50 = *(unsigned __int8 *)(v28 + 80);
    uint64_t v51 = a2 + ((v50 + 32) & ~v50);
    int64_t v304 = *(void *)(v28 + 72);
    uint64_t v295 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
    uint64_t v296 = v28 + 48;
    uint64_t v279 = v50 | 7;
    uint64_t v280 = (v50 + 24) & ~v50;
    unint64_t v278 = (v29 + v280 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v277 = v278 + 40;
    uint64_t v274 = a2;
    swift_bridgeObjectRetain();
    unint64_t v52 = MEMORY[0x263F8EE78];
    uint64_t v290 = (void *)MEMORY[0x263F8EE78];
    uint64_t v291 = (void *)MEMORY[0x263F8EE78];
    uint64_t v299 = v10;
    while (1)
    {
      uint64_t v313 = v51;
      sub_228B0A230(v51, (uint64_t)v39, type metadata accessor for CustomAnnotationViewModel);
      uint64_t v58 = *(void *)v39;
      *(void *)&long long v321 = v316;
      id v59 = v316;
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();

      id v60 = v325;
      if (v325[2] && (unint64_t v61 = sub_228AD1964(v58), (v62 & 1) != 0))
      {
        id v63 = *(id *)(v60[7] + 8 * v61);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&long long v321 = v59;
        unint64_t v64 = (unsigned int (**)(uint64_t, uint64_t, void))v59;
        id v65 = v63;
        swift_getAtKeyPath();
        long long v312 = v64;

        uint64_t v66 = v324;
        if (v324[2])
        {
          unint64_t v67 = sub_228AD1B28((uint64_t)v65);
          uint64_t v68 = v294;
          if (v69)
          {
            sub_228B0A230(v66[7] + v67 * v304, v294, type metadata accessor for CustomAnnotationViewModel);
            uint64_t v70 = *v295;
            (*v295)(v68, 0, 1, v27);
          }
          else
          {
            uint64_t v70 = *v295;
            (*v295)(v294, 1, 1, v27);
          }
        }
        else
        {
          uint64_t v70 = *v295;
          uint64_t v68 = v294;
          (*v295)(v294, 1, 1, v27);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v93 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v296;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v296)(v68, 1, v27) != 1)
        {
          id v289 = v93;
          uint64_t v311 = v70;
          unint64_t v94 = v49;
          sub_228B0A298(v68, v292, type metadata accessor for CustomAnnotationViewModel);
          uint64_t v325 = (void *)sub_228AD25BC(0, &qword_268292678);
          uint64_t v326 = (uint64_t (*)())&off_26DD21E98;
          unint64_t v95 = v284;
          uint64_t aBlock = (uint64_t)v284;
          uint64_t v96 = v281;
          sub_228B0A230((uint64_t)v39, v281, type metadata accessor for CustomAnnotationViewModel);
          sub_228B099C8((uint64_t)&aBlock, (uint64_t)&v321);
          sub_228B0A230(v96, v293, type metadata accessor for CustomAnnotationViewModel);
          sub_228B099C8((uint64_t)&v321, (uint64_t)&v318);
          uint64_t v97 = swift_allocObject();
          *(void *)(v97 + 16) = v65;
          sub_228B0A298(v96, v97 + v280, type metadata accessor for CustomAnnotationViewModel);
          sub_228B09A30(&v321, v97 + v278);
          id v98 = v95;
          id v99 = v65;
          id v100 = v98;
          uint64_t v101 = v285;
          if (!v285) {
            goto LABEL_25;
          }
          swift_retain();
          objc_msgSend(v99, sel_coordinate);
          if (vabdd_f64(v103, v39[7]) >= 0.00000000999999994 || vabdd_f64(v102, v39[8]) >= 0.00000000999999994)
          {
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v318);
            sub_228B0A300(v293, type metadata accessor for CustomAnnotationViewModel);
            uint64_t v106 = (void *)swift_allocObject();
            v106[2] = sub_228B0A470;
            v106[3] = v97;
            v106[4] = v101;
            uint64_t v107 = swift_allocObject();
            *(void *)(v107 + 16) = sub_228B0A470;
            *(void *)(v107 + 24) = v97;
            id v309 = (id)v107;
            swift_retain();
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);

            uint64_t v108 = swift_allocObject();
            *(void *)(v108 + 16) = sub_228B09F98;
            *(void *)(v108 + 24) = v106;
            id v286 = v106;
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v290 = sub_228B768F8(0, v290[2] + 1, 1, v290);
            }
            uint64_t v92 = v94;
            unint64_t v110 = v290[2];
            unint64_t v109 = v290[3];
            if (v110 >= v109 >> 1) {
              uint64_t v290 = sub_228B768F8((void *)(v109 > 1), v110 + 1, 1, v290);
            }
            unint64_t v111 = v290;
            v290[2] = v110 + 1;
            char v112 = &v111[2 * v110];
            v112[4] = sub_228B0B0E0;
            v112[5] = v108;
            uint64_t v113 = swift_allocObject();
            *(void *)(v113 + 16) = sub_228B09FA4;
            *(void *)(v113 + 24) = v309;
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v291 = sub_228B768F8(0, v291[2] + 1, 1, v291);
            }
            unint64_t v115 = v291[2];
            unint64_t v114 = v291[3];
            if (v115 >= v114 >> 1) {
              uint64_t v291 = sub_228B768F8((void *)(v114 > 1), v115 + 1, 1, v291);
            }
            uint64_t v116 = v291;
            v291[2] = v115 + 1;
            uint64_t v117 = &v116[2 * v115];
            v117[4] = sub_228B0B0E0;
            v117[5] = v113;
            unint64_t v118 = sub_228B09FA4;
            uint64_t v119 = sub_228B09F98;
          }
          else
          {
            swift_release();
LABEL_25:
            uint64_t v104 = v293;
            objc_msgSend(v99, sel_setCoordinate_, *(double *)(v293 + 56), *(double *)(v293 + 64));
            if (*(void *)(v104 + 16)) {
              uint64_t v105 = (void *)sub_228BAD3D8();
            }
            else {
              uint64_t v105 = 0;
            }
            uint64_t v92 = v94;
            objc_msgSend(v99, sel_setTitle_, v105);

            uint64_t v120 = *(void *)(v104 + 32);
            id v288 = (uint64_t (*)())v100;
            if (v120) {
              uint64_t v121 = (void *)sub_228BAD3D8();
            }
            else {
              uint64_t v121 = 0;
            }
            objc_msgSend(v99, sel_setSubtitle_, v121);

            uint64_t v122 = v319;
            uint64_t v123 = v320;
            __swift_project_boxed_opaque_existential_1(&v318, v319);
            uint64_t v124 = *(uint64_t (**)(id, uint64_t, uint64_t))(v123 + 24);
            id v309 = v99;
            uint64_t v125 = v124(v99, v122, v123);
            if (v125)
            {
              uint64_t v126 = (void *)v125;
              type metadata accessor for SwiftUIAnnotationView();
              uint64_t v127 = (char *)swift_dynamicCastClass();
              if (v127) {
                sub_228B13344(v127, 0);
              }
              swift_release();
            }
            else
            {
              swift_release();
            }
            id v99 = v309;
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v318);
            sub_228B0A300(v104, type metadata accessor for CustomAnnotationViewModel);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);

            uint64_t v119 = 0;
            id v286 = 0;
            unint64_t v118 = 0;
            id v309 = 0;
          }
          uint64_t v128 = v306;
          swift_bridgeObjectRetain();
          unint64_t v129 = sub_228AD1B28((uint64_t)v99);
          char v131 = v130;
          swift_bridgeObjectRelease();
          id v288 = v119;
          uint64_t v287 = v118;
          if (v131)
          {
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t aBlock = v128;
            uint64_t v133 = v128;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_228B043EC(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_2682927B0, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel);
              uint64_t v133 = aBlock;
            }
            uint64_t v134 = v99;

            uint64_t v135 = v282;
            sub_228B0A298(*(void *)(v133 + 56) + v129 * v304, v282, type metadata accessor for CustomAnnotationViewModel);
            uint64_t v306 = v133;
            sub_228B03184(v129, v133, type metadata accessor for CustomAnnotationViewModel);
            swift_bridgeObjectRelease();
            uint64_t v136 = v135;
            uint64_t v137 = 0;
            uint64_t v138 = v310;
          }
          else
          {
            uint64_t v134 = v99;
            uint64_t v138 = v27;
            uint64_t v135 = v282;
            uint64_t v136 = v282;
            uint64_t v137 = 1;
          }
          char v139 = v311;
          v311(v136, v137, 1, v138);
          sub_228AC1A50(v135, &qword_268292790);
          uint64_t v140 = v283;
          sub_228B0A230((uint64_t)v39, v283, type metadata accessor for CustomAnnotationViewModel);
          v139(v140, 0, 1, v138);
          *(void *)&long long v321 = v312;
          uint64_t v141 = v312;
          id v142 = v134;
          long long v312 = (unsigned int (**)(uint64_t, uint64_t, void))swift_modifyAtReferenceWritableKeyPath();
          uint64_t v144 = v143;
          if (v289(v140, 1, v138) == 1)
          {
            sub_228AC1A50(v140, &qword_268292790);
            swift_bridgeObjectRetain();
            unint64_t v145 = sub_228AD1B28((uint64_t)v142);
            char v147 = v146;
            swift_bridgeObjectRelease();
            uint64_t v56 = (uint64_t)v288;
            if (v147)
            {
              char v148 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v149 = *(void *)(v144 + 16);
              long long v318 = (void *)v149;
              *(void *)(v144 + 16) = 0x8000000000000000;
              if ((v148 & 1) == 0)
              {
                sub_228B043EC(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_2682927B0, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel);
                uint64_t v149 = (uint64_t)v318;
              }

              uint64_t v150 = (uint64_t)v275;
              sub_228B0A298(*(void *)(v149 + 56) + v145 * v304, (uint64_t)v275, type metadata accessor for CustomAnnotationViewModel);
              sub_228B03184(v145, v149, type metadata accessor for CustomAnnotationViewModel);
              *(void *)(v144 + 16) = v149;
              swift_bridgeObjectRelease();
              uint64_t v151 = 0;
            }
            else
            {
              uint64_t v151 = 1;
              uint64_t v150 = (uint64_t)v275;
            }
            v311(v150, v151, 1, v310);

            sub_228AC1A50(v150, &qword_268292790);
            uint64_t v55 = v313;
          }
          else
          {
            uint64_t v53 = v276;
            sub_228B0A298(v140, v276, type metadata accessor for CustomAnnotationViewModel);
            char v54 = swift_isUniquelyReferenced_nonNull_native();
            long long v318 = *(void **)(v144 + 16);
            *(void *)(v144 + 16) = 0x8000000000000000;
            sub_228B05230(v53, v142, v54);
            *(void *)(v144 + 16) = v318;

            swift_bridgeObjectRelease();
            uint64_t v55 = v313;
            uint64_t v56 = (uint64_t)v288;
          }
          uint64_t v57 = (uint64_t)v287;
          ((void (*)(uint64_t *, void))v312)(&aBlock, 0);
          sub_228AD2678(v57);
          sub_228AD2678(v56);

          sub_228B0A300(v292, type metadata accessor for CustomAnnotationViewModel);
          sub_228B0A300((uint64_t)v39, type metadata accessor for CustomAnnotationViewModel);
          uint64_t v27 = v310;
          goto LABEL_5;
        }
        long long v312 = (unsigned int (**)(uint64_t, uint64_t, void))v49;
        id v309 = (id)v52;

        sub_228AC1A50(v68, &qword_268292790);
      }
      else
      {
        long long v312 = (unsigned int (**)(uint64_t, uint64_t, void))v49;
        id v309 = (id)v52;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v72 = *((void *)v39 + 1);
      uint64_t v71 = *((void *)v39 + 2);
      uint64_t v73 = *((void *)v39 + 4);
      uint64_t v311 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((void *)v39 + 3);
      uint64_t v74 = *((void *)v39 + 7);
      uint64_t v75 = *((void *)v39 + 8);
      uint64_t v76 = (void *)*((void *)v39 + 5);
      uint64_t v77 = (objc_class *)type metadata accessor for MapBridgingCustomAnnotation();
      uint64_t v78 = (char *)objc_allocWithZone(v77);
      id v79 = &v78[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_title];
      *(void *)id v79 = 0;
      *((void *)v79 + 1) = 0;
      uint64_t v80 = &v78[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_subtitle];
      *(void *)uint64_t v80 = 0;
      *((void *)v80 + 1) = 0;
      uint64_t v81 = OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_mapItem;
      *(void *)&v78[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_mapItem] = 0;
      *(void *)id v79 = v72;
      *((void *)v79 + 1) = v71;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v82 = v76;
      uint64_t v83 = v78;
      swift_bridgeObjectRelease();
      *(void *)uint64_t v80 = v311;
      *((void *)v80 + 1) = v73;
      swift_bridgeObjectRelease();
      uint64_t v84 = &v83[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_coordinate];
      *(void *)uint64_t v84 = v74;
      *((void *)v84 + 1) = v75;
      uint64_t v85 = *(void **)&v78[v81];
      *(void *)&v78[v81] = v76;
      id v86 = v82;

      v328.receiver = v83;
      v328.super_class = v77;
      id v87 = objc_msgSendSuper2(&v328, sel_init);

      uint64_t v88 = (uint64_t)v299;
      uint64_t v89 = (uint64_t)v299 + *(int *)(v300 + 48);
      *uint64_t v299 = v87;
      sub_228B0A230((uint64_t)v39, v89, type metadata accessor for CustomAnnotationViewModel);
      unint64_t v52 = (unint64_t)v309;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v52 = sub_228B77770(0, *(void *)(v52 + 16) + 1, 1, v52);
      }
      unint64_t v91 = *(void *)(v52 + 16);
      unint64_t v90 = *(void *)(v52 + 24);
      uint64_t v27 = v310;
      uint64_t v92 = (char *)v312;
      if (v91 >= v90 >> 1) {
        unint64_t v52 = sub_228B77770(v90 > 1, v91 + 1, 1, v52);
      }
      *(void *)(v52 + 16) = v91 + 1;
      sub_228ACD8BC(v88, v52+ ((*(unsigned __int8 *)(v301 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v301 + 80))+ *(void *)(v301 + 72) * v91, &qword_268292788);
      sub_228B0A300((uint64_t)v39, type metadata accessor for CustomAnnotationViewModel);
      uint64_t v55 = v313;
LABEL_5:
      uint64_t v51 = v55 + v304;
      int v49 = v92 - 1;
      if (!v49)
      {
        swift_bridgeObjectRelease();
        uint64_t v152 = v315;
        goto LABEL_60;
      }
    }
  }
  unint64_t v52 = MEMORY[0x263F8EE78];
  uint64_t v290 = (void *)MEMORY[0x263F8EE78];
  uint64_t v291 = (void *)MEMORY[0x263F8EE78];
  uint64_t v152 = v28;
LABEL_60:
  id v309 = (id)v52;
  if (v285)
  {
    uint64_t v153 = self;
    uint64_t v154 = swift_allocObject();
    *(void *)(v154 + 16) = v290;
    uint64_t v326 = sub_228B0B078;
    uint64_t v327 = v154;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v323 = 1107296256;
    v324 = sub_228B005F8;
    uint64_t v325 = &block_descriptor_244;
    unint64_t v155 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v156 = swift_allocObject();
    *(void *)(v156 + 16) = v291;
    uint64_t v326 = sub_228B0AF2C;
    uint64_t v327 = v156;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v323 = 1107296256;
    v324 = sub_228B0063C;
    uint64_t v325 = &block_descriptor_251;
    char v157 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v153, sel_animateWithDuration_animations_completion_, v155, v157, 0.25);
    _Block_release(v157);
    char v158 = v155;
    uint64_t v152 = v315;
    _Block_release(v158);
  }
  uint64_t v159 = *(void *)(v306 + 64);
  uint64_t v299 = (void *)(v306 + 64);
  uint64_t v160 = -1;
  uint64_t v161 = -1 << *(unsigned char *)(v306 + 32);
  uint64_t v296 = ~v161;
  if (-v161 < 64) {
    uint64_t v160 = ~(-1 << -(char)v161);
  }
  unint64_t v162 = v160 & v159;
  uint64_t v311 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v152 + 56);
  int64_t v304 = (unint64_t)(63 - v161) >> 6;
  uint64_t v295 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v304 - 1);
  swift_bridgeObjectRetain();
  int64_t v163 = 0;
  uint64_t v164 = (uint64_t *)&unk_2682927A0;
  while (1)
  {
    if (v162)
    {
      uint64_t v168 = (v162 - 1) & v162;
      unint64_t v169 = __clz(__rbit64(v162)) | (v163 << 6);
      int64_t v170 = v163;
LABEL_69:
      uint64_t v171 = *(void *)(v306 + 56);
      unint64_t v172 = *(void **)(*(void *)(v306 + 48) + 8 * v169);
      unint64_t v173 = v308;
      *char v308 = v172;
      uint64_t v174 = v171 + *(void *)(v152 + 72) * v169;
      uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(v164);
      uint64_t v176 = v174;
      uint64_t v177 = (uint64_t)v173;
      sub_228B0A230(v176, (uint64_t)v173 + *(int *)(v175 + 48), type metadata accessor for CustomAnnotationViewModel);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v175 - 8) + 56))(v173, 0, 1, v175);
      id v178 = v172;
      uint64_t v179 = (unsigned int (**)(uint64_t, uint64_t, void))v170;
      goto LABEL_88;
    }
    int64_t v170 = v163 + 1;
    if (__OFADD__(v163, 1)) {
      goto LABEL_134;
    }
    uint64_t v179 = (unsigned int (**)(uint64_t, uint64_t, void))v163;
    if (v170 < v304)
    {
      unint64_t v180 = v299[v170];
      if (v180) {
        goto LABEL_73;
      }
      int64_t v181 = v163 + 2;
      uint64_t v179 = (unsigned int (**)(uint64_t, uint64_t, void))(v163 + 1);
      if (v163 + 2 < v304)
      {
        unint64_t v180 = v299[v181];
        if (v180) {
          goto LABEL_76;
        }
        uint64_t v179 = (unsigned int (**)(uint64_t, uint64_t, void))(v163 + 2);
        if (v163 + 3 < v304)
        {
          unint64_t v180 = v299[v163 + 3];
          if (v180)
          {
            int64_t v170 = v163 + 3;
            goto LABEL_73;
          }
          int64_t v181 = v163 + 4;
          uint64_t v179 = (unsigned int (**)(uint64_t, uint64_t, void))(v163 + 3);
          if (v163 + 4 < v304) {
            break;
          }
        }
      }
    }
LABEL_87:
    uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(v164);
    uint64_t v177 = (uint64_t)v308;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v182 - 8) + 56))(v308, 1, 1, v182);
    uint64_t v168 = 0;
LABEL_88:
    unint64_t v183 = v307;
    sub_228ACD8BC(v177, (uint64_t)v307, &qword_268292798);
    uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName(v164);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v184 - 8) + 48))(v183, 1, v184) == 1)
    {
      sub_228AC98B8();
      uint64_t v209 = swift_bridgeObjectRetain();
      unint64_t v210 = sub_228B0079C(v209);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v210 >> 62) {
        goto LABEL_138;
      }
      swift_bridgeObjectRetain();
      sub_228BAD9F8();
      sub_228AD25BC(0, (unint64_t *)&qword_268293000);
      unint64_t v211 = v210;
      while (1)
      {
        BOOL v212 = v309;
        swift_bridgeObjectRelease();
        sub_228B00098(v211);
        swift_bridgeObjectRelease();
        uint64_t v213 = v212[2];
        if (!v213) {
          return (uint64_t)v212;
        }
        uint64_t v214 = (uint64_t *)((char *)v303 + *(int *)(v300 + 48));
        uint64_t v215 = (uint64_t)v212
             + ((*(unsigned __int8 *)(v301 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v301 + 80));
        char v308 = *(void **)(v301 + 72);
        long long v312 = (unsigned int (**)(uint64_t, uint64_t, void))(v315 + 48);
        swift_bridgeObjectRetain();
        while (1)
        {
          long long v314 = (uint64_t *)v213;
          uint64_t v313 = v215;
          char v219 = v303;
          sub_228AD2708(v215, (uint64_t)v303, &qword_268292788);
          int v220 = *v219;
          uint64_t v221 = (uint64_t)v214;
          uint64_t v222 = *v214;
          *(void *)&long long v321 = v316;
          id v223 = v316;
          swift_bridgeObjectRetain();
          id v224 = v220;
          unint64_t v225 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
          uint64_t v227 = v226;
          char v228 = swift_isUniquelyReferenced_nonNull_native();
          long long v318 = *(void **)(v227 + 24);
          char v229 = v318;
          *(void *)(v227 + 24) = 0x8000000000000000;
          unint64_t v231 = sub_228AD1964(v222);
          uint64_t v232 = v229[2];
          BOOL v233 = (v230 & 1) == 0;
          uint64_t v234 = v232 + v233;
          if (__OFADD__(v232, v233)) {
            break;
          }
          char v235 = v230;
          if (v229[3] >= v234)
          {
            if ((v228 & 1) == 0) {
              sub_228B0464C(&qword_2682927A8);
            }
          }
          else
          {
            sub_228B0288C(v234, v228, &qword_2682927A8);
            unint64_t v236 = sub_228AD1964(v222);
            if ((v235 & 1) != (v237 & 1)) {
              goto LABEL_140;
            }
            unint64_t v231 = v236;
          }
          unint64_t v238 = v318;
          if (v235)
          {
            uint64_t v239 = v318[7];

            *(void *)(v239 + 8 * v231) = v224;
          }
          else
          {
            v318[(v231 >> 6) + 8] |= 1 << v231;
            uint64_t v240 = 8 * v231;
            *(void *)(v238[6] + v24__isPlatformVersionAtLeast(2, 18, 1, 0) = v222;
            *(void *)(v238[7] + v24__isPlatformVersionAtLeast(2, 18, 1, 0) = v224;
            uint64_t v241 = v238[2];
            BOOL v242 = __OFADD__(v241, 1);
            uint64_t v243 = v241 + 1;
            if (v242) {
              goto LABEL_135;
            }
            v238[2] = v243;
            swift_bridgeObjectRetain();
          }
          *(void *)(v227 + 24) = v238;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v225(&aBlock, 0);

          uint64_t v214 = (uint64_t *)v221;
          uint64_t v244 = v302;
          sub_228B0A230(v221, v302, type metadata accessor for CustomAnnotationViewModel);
          uint64_t v245 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v311;
          uint64_t v246 = v310;
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))v311)(v244, 0, 1, v310);
          *(void *)&long long v321 = v223;
          id v247 = v223;
          id v248 = v224;
          uint64_t v249 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
          uint64_t v251 = v250;
          if ((*v312)(v244, 1, v246) == 1)
          {
            sub_228AC1A50(v244, &qword_268292790);
            swift_bridgeObjectRetain();
            unint64_t v252 = sub_228AD1B28((uint64_t)v248);
            char v254 = v253;
            swift_bridgeObjectRelease();
            if (v254)
            {
              int v255 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v256 = *(void *)(v251 + 16);
              long long v318 = (void *)v256;
              *(void *)(v251 + 16) = 0x8000000000000000;
              uint64_t v217 = (uint64_t)v298;
              if (!v255)
              {
                sub_228B043EC(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_2682927B0, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel);
                uint64_t v217 = (uint64_t)v298;
                uint64_t v256 = (uint64_t)v318;
              }

              sub_228B0A298(*(void *)(v256 + 56) + *(void *)(v315 + 72) * v252, v217, type metadata accessor for CustomAnnotationViewModel);
              sub_228B03184(v252, v256, type metadata accessor for CustomAnnotationViewModel);
              *(void *)(v251 + 16) = v256;
              swift_bridgeObjectRelease();
              uint64_t v216 = 0;
            }
            else
            {
              uint64_t v216 = 1;
              uint64_t v217 = (uint64_t)v298;
            }
            v245(v217, v216, 1, v246);

            sub_228AC1A50(v217, &qword_268292790);
          }
          else
          {
            uint64_t v257 = v297;
            sub_228B0A298(v244, v297, type metadata accessor for CustomAnnotationViewModel);
            int v258 = swift_isUniquelyReferenced_nonNull_native();
            long long v318 = *(void **)(v251 + 16);
            unint64_t v259 = v318;
            *(void *)(v251 + 16) = 0x8000000000000000;
            unint64_t v261 = sub_228AD1B28((uint64_t)v248);
            uint64_t v262 = v259[2];
            BOOL v263 = (v260 & 1) == 0;
            uint64_t v264 = v262 + v263;
            if (__OFADD__(v262, v263)) {
              goto LABEL_136;
            }
            char v265 = v260;
            if (v259[3] >= v264)
            {
              if ((v258 & 1) == 0) {
                sub_228B043EC(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_2682927B0, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel);
              }
            }
            else
            {
              sub_228B02500(v264, v258, type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_2682927B0, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel);
              unint64_t v266 = sub_228AD1B28((uint64_t)v248);
              if ((v265 & 1) != (v267 & 1)) {
                goto LABEL_141;
              }
              unint64_t v261 = v266;
            }
            uint64_t v268 = v315;
            id v269 = v318;
            if (v265)
            {
              sub_228B0A404(v257, v318[7] + *(void *)(v315 + 72) * v261, type metadata accessor for CustomAnnotationViewModel);
            }
            else
            {
              v318[(v261 >> 6) + 8] |= 1 << v261;
              *(void *)(v269[6] + 8 * v261) = v248;
              sub_228B0A298(v257, v269[7] + *(void *)(v268 + 72) * v261, type metadata accessor for CustomAnnotationViewModel);
              uint64_t v270 = v269[2];
              BOOL v242 = __OFADD__(v270, 1);
              uint64_t v271 = v270 + 1;
              if (v242) {
                goto LABEL_137;
              }
              v269[2] = v271;
              id v272 = v248;
            }
            *(void *)(v251 + 16) = v269;

            swift_bridgeObjectRelease();
          }
          uint64_t v218 = (uint64_t)v314;
          v249(&aBlock, 0);

          sub_228B0A300(v221, type metadata accessor for CustomAnnotationViewModel);
          uint64_t v215 = (uint64_t)v308 + v313;
          uint64_t v213 = v218 - 1;
          if (!v213)
          {
            BOOL v212 = v309;
            swift_bridgeObjectRelease();
            return (uint64_t)v212;
          }
        }
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        sub_228AD25BC(0, (unint64_t *)&qword_268293000);
        swift_bridgeObjectRetain();
        unint64_t v211 = sub_228BAD948();
        swift_bridgeObjectRelease();
      }
    }
    long long v312 = v179;
    uint64_t v313 = v168;
    uint64_t v185 = v164;
    id v186 = *v183;
    uint64_t v187 = (uint64_t)v183 + *(int *)(v184 + 48);
    char v188 = v314;
    sub_228B0A298(v187, (uint64_t)v314, type metadata accessor for CustomAnnotationViewModel);
    uint64_t v189 = *v188;
    *(void *)&long long v321 = v316;
    id v190 = v316;
    swift_bridgeObjectRetain();
    char v191 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v193 = v192;
    swift_bridgeObjectRetain();
    unint64_t v194 = sub_228AD1964(v189);
    char v196 = v195;
    swift_bridgeObjectRelease();
    if (v196)
    {
      char v197 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v198 = *(void *)(v193 + 24);
      long long v318 = (void *)v198;
      *(void *)(v193 + 24) = 0x8000000000000000;
      if ((v197 & 1) == 0)
      {
        sub_228B0464C(&qword_2682927A8);
        uint64_t v198 = (uint64_t)v318;
      }
      swift_bridgeObjectRelease();
      unint64_t v199 = *(void **)(*(void *)(v198 + 56) + 8 * v194);
      sub_228B03380(v194, v198);
      *(void *)(v193 + 24) = v198;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = v310;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v191(&aBlock, 0);

    *(void *)&long long v321 = v190;
    id v200 = v190;
    uint64_t v201 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v203 = v202;
    swift_bridgeObjectRetain();
    unint64_t v204 = sub_228AD1B28((uint64_t)v186);
    char v206 = v205;
    swift_bridgeObjectRelease();
    uint64_t v164 = v185;
    if (v206)
    {
      int v207 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v208 = *(void *)(v203 + 16);
      long long v318 = (void *)v208;
      *(void *)(v203 + 16) = 0x8000000000000000;
      uint64_t v166 = (uint64_t)v305;
      unint64_t v167 = v313;
      if (!v207)
      {
        sub_228B043EC(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_2682927B0, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel);
        uint64_t v166 = (uint64_t)v305;
        uint64_t v208 = (uint64_t)v318;
      }

      sub_228B0A298(*(void *)(v208 + 56) + *(void *)(v315 + 72) * v204, v166, type metadata accessor for CustomAnnotationViewModel);
      sub_228B03184(v204, v208, type metadata accessor for CustomAnnotationViewModel);
      *(void *)(v203 + 16) = v208;
      swift_bridgeObjectRelease();
      uint64_t v165 = 0;
    }
    else
    {
      uint64_t v165 = 1;
      uint64_t v166 = (uint64_t)v305;
      unint64_t v167 = v313;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v311)(v166, v165, 1, v27);
    sub_228AC1A50(v166, &qword_268292790);
    v201(&aBlock, 0);

    sub_228B0A300((uint64_t)v314, type metadata accessor for CustomAnnotationViewModel);
    int64_t v163 = (int64_t)v312;
    unint64_t v162 = v167;
    uint64_t v152 = v315;
  }
  unint64_t v180 = v299[v181];
  if (v180)
  {
LABEL_76:
    int64_t v170 = v181;
LABEL_73:
    uint64_t v168 = (v180 - 1) & v180;
    unint64_t v169 = __clz(__rbit64(v180)) + (v170 << 6);
    goto LABEL_69;
  }
  while (1)
  {
    int64_t v170 = v181 + 1;
    if (__OFADD__(v181, 1)) {
      break;
    }
    if (v170 >= v304)
    {
      uint64_t v179 = (unsigned int (**)(uint64_t, uint64_t, void))v295;
      goto LABEL_87;
    }
    unint64_t v180 = v299[v170];
    ++v181;
    if (v180) {
      goto LABEL_73;
    }
  }
  __break(1u);
LABEL_140:
  sub_228BADA18();
  __break(1u);
LABEL_141:
  type metadata accessor for MapBridgingCustomAnnotation();
  uint64_t result = sub_228BADA18();
  __break(1u);
  return result;
}

uint64_t sub_228AF1CF8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v232 = a1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292658);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v230 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)char v260 = v5;
  id v240 = v5;
  uint64_t v243 = a5;
  uint64_t v13 = (void (*)(unsigned char *, void))swift_readAtKeyPath();
  uint64_t v15 = *(void *)(v14 + 16);
  swift_bridgeObjectRetain();
  v13(v271, 0);

  uint64_t v16 = *(void *)(a2 + 16);
  if (v16)
  {
    unint64_t v236 = v12;
    uint64_t v238 = v15;
    uint64_t v239 = a3;
    uint64_t v241 = (void *)a4;
    uint64_t v17 = (char *)v272 + 8;
    swift_bridgeObjectRetain();
    uint64_t v18 = v16 - 1;
    uint64_t v19 = (void *)MEMORY[0x263F8EE78];
    uint64_t v20 = 32;
    BOOL v233 = (void *)MEMORY[0x263F8EE78];
    uint64_t v234 = (void *)MEMORY[0x263F8EE78];
    BOOL v242 = (char *)v272 + 8;
    while (1)
    {
      long long v21 = *(_OWORD *)(a2 + v20 + 80);
      long long v22 = *(_OWORD *)(a2 + v20 + 112);
      long long v277 = *(_OWORD *)(a2 + v20 + 96);
      long long v278 = v22;
      long long v23 = *(_OWORD *)(a2 + v20 + 16);
      long long v24 = *(_OWORD *)(a2 + v20 + 48);
      long long v273 = *(_OWORD *)(a2 + v20 + 32);
      long long v274 = v24;
      long long v25 = *(_OWORD *)(a2 + v20 + 48);
      long long v26 = *(_OWORD *)(a2 + v20 + 80);
      long long v275 = *(_OWORD *)(a2 + v20 + 64);
      long long v276 = v26;
      long long v27 = *(_OWORD *)(a2 + v20 + 16);
      v272[0] = *(_OWORD *)(a2 + v20);
      v272[1] = v27;
      long long v28 = *(_OWORD *)(a2 + v20 + 112);
      *(_OWORD *)&v271[96] = v277;
      *(_OWORD *)&v271[112] = v28;
      *(_OWORD *)&v271[32] = v273;
      *(_OWORD *)&v271[48] = v25;
      *(_OWORD *)&v271[64] = v275;
      *(_OWORD *)&v271[80] = v21;
      uint64_t v279 = *(void *)(a2 + v20 + 128);
      *(void *)&v271[128] = *(void *)(a2 + v20 + 128);
      *(_OWORD *)uint64_t v271 = v272[0];
      *(_OWORD *)&v271[16] = v23;
      sub_228B098C0((uint64_t)v17, (uint64_t)v280);
      uint64_t v29 = *(void *)&v272[0];
      *(void *)&long long v262 = v240;
      id v30 = v240;
      sub_228B0991C((uint64_t)v272);
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();

      uint64_t v31 = *(void *)&v260[24];
      if (!*(void *)(*(void *)&v260[24] + 16)) {
        break;
      }
      unint64_t v32 = sub_228AD1964(v29);
      if ((v33 & 1) == 0) {
        break;
      }
      char v237 = v19;
      id v34 = *(id *)(*(void *)(v31 + 56) + 8 * v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)&v249[0] = v30;
      id v35 = v30;
      id v36 = v34;
      swift_getAtKeyPath();

      uint64_t v37 = v252;
      if (!*(void *)(v252 + 16) || (unint64_t v38 = sub_228AD1914((uint64_t)v36), (v39 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_39;
      }
      uint64_t v40 = *(void *)(v37 + 56) + 136 * v38;
      *(_OWORD *)char v260 = *(_OWORD *)v40;
      long long v41 = *(_OWORD *)(v40 + 48);
      long long v42 = *(_OWORD *)(v40 + 64);
      long long v43 = *(_OWORD *)(v40 + 32);
      *(_OWORD *)&v260[16] = *(_OWORD *)(v40 + 16);
      *(_OWORD *)&v260[32] = v43;
      *(_OWORD *)&v260[48] = v41;
      *(_OWORD *)&v260[64] = v42;
      long long v44 = *(_OWORD *)(v40 + 80);
      long long v45 = *(_OWORD *)(v40 + 96);
      long long v46 = *(_OWORD *)(v40 + 112);
      *(void *)&v260[128] = *(void *)(v40 + 128);
      *(_OWORD *)&v260[96] = v45;
      *(_OWORD *)&v260[112] = v46;
      *(_OWORD *)&v260[80] = v44;
      sub_228B0991C((uint64_t)v260);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v47 = *(double *)&v260[8];
      double v48 = *(double *)&v260[16];
      double v49 = *(double *)&v260[24];
      double v50 = *(double *)&v260[32];
      int v51 = v260[40];
      sub_228B098C0((uint64_t)v280, (uint64_t)&v286);
      if (v290)
      {
        if (!v51 || v286 != v47 || v287 != v48 || v288 != v49 || v289 != v50) {
          goto LABEL_38;
        }
      }
      else if ((v51 & 1) != 0 || v286 != v47 || v287 != v48 || v288 != v49)
      {
LABEL_38:
        sub_228B09840((uint64_t)v260);
LABEL_39:

        uint64_t v19 = v237;
        uint64_t v17 = v242;
LABEL_40:
        sub_228B098C0((uint64_t)v280, (uint64_t)&v281);
        if (v285) {
          id v90 = objc_msgSend(self, sel_circleWithMapRect_, v281, v282, v283, v284);
        }
        else {
          id v90 = objc_msgSend(self, sel_circleWithCenterCoordinate_radius_, v281, v282, v283);
        }
        id v91 = v90;
        sub_228B0991C((uint64_t)v272);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = sub_228B77174(0, v19[2] + 1, 1, v19);
        }
        unint64_t v93 = v19[2];
        unint64_t v92 = v19[3];
        if (v93 >= v92 >> 1) {
          uint64_t v19 = sub_228B77174((void *)(v92 > 1), v93 + 1, 1, v19);
        }
        *(_OWORD *)&v260[32] = *(_OWORD *)&v271[32];
        *(_OWORD *)&v260[48] = *(_OWORD *)&v271[48];
        *(void *)&v260[128] = *(void *)&v271[128];
        *(_OWORD *)&v260[96] = *(_OWORD *)&v271[96];
        *(_OWORD *)&v260[112] = *(_OWORD *)&v271[112];
        *(_OWORD *)&v260[64] = *(_OWORD *)&v271[64];
        *(_OWORD *)&v260[80] = *(_OWORD *)&v271[80];
        *(_OWORD *)char v260 = *(_OWORD *)v271;
        *(_OWORD *)&v260[16] = *(_OWORD *)&v271[16];
        void v19[2] = v93 + 1;
        unint64_t v94 = &v19[18 * v93];
        v94[4] = v91;
        *(_OWORD *)(v94 + 5) = *(_OWORD *)v260;
        long long v95 = *(_OWORD *)&v260[16];
        long long v96 = *(_OWORD *)&v260[32];
        long long v97 = *(_OWORD *)&v260[48];
        *(_OWORD *)(v94 + 13) = *(_OWORD *)&v260[64];
        *(_OWORD *)(v94 + 11) = v97;
        *(_OWORD *)(v94 + 9) = v96;
        *(_OWORD *)(v94 + 7) = v95;
        long long v98 = *(_OWORD *)&v260[80];
        long long v99 = *(_OWORD *)&v260[96];
        long long v100 = *(_OWORD *)&v260[112];
        v94[21] = *(void *)&v260[128];
        *(_OWORD *)(v94 + 19) = v100;
        *(_OWORD *)(v94 + 17) = v99;
        *(_OWORD *)(v94 + 15) = v98;
        sub_228B09840((uint64_t)v272);
        goto LABEL_48;
      }
      if (v279 != *(void *)&v260[128]) {
        goto LABEL_38;
      }
      uint64_t v52 = sub_228BACAF8();
      uint64_t v53 = *(void *)(v52 - 8);
      uint64_t v54 = (uint64_t)v236;
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v236, v239, v52);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v54, 0, 1, v52);
      id v55 = v232;
      uint64_t v56 = sub_228B07B54(v55, v36, (uint64_t)v241, v54, (uint64_t)v272);
      uint64_t v58 = v57;
      uint64_t v235 = v59;
      uint64_t v231 = v60;
      sub_228AC1A50(v54, &qword_268292658);

      v230[1] = v58;
      if (v56)
      {
        uint64_t v61 = swift_allocObject();
        *(void *)(v61 + 16) = v56;
        *(void *)(v61 + 24) = v58;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          BOOL v233 = sub_228B768F8(0, v233[2] + 1, 1, v233);
        }
        unint64_t v63 = v233[2];
        unint64_t v62 = v233[3];
        if (v63 >= v62 >> 1) {
          BOOL v233 = sub_228B768F8((void *)(v62 > 1), v63 + 1, 1, v233);
        }
        unint64_t v64 = v233;
        v233[2] = v63 + 1;
        id v65 = &v64[2 * v63];
        v65[4] = sub_228B0B0E0;
        v65[5] = v61;
      }
      uint64_t v66 = v235;
      if (v235)
      {
        uint64_t v67 = swift_allocObject();
        *(void *)(v67 + 16) = v66;
        *(void *)(v67 + 24) = v231;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v234 = sub_228B768F8(0, v234[2] + 1, 1, v234);
        }
        unint64_t v69 = v234[2];
        unint64_t v68 = v234[3];
        if (v69 >= v68 >> 1) {
          uint64_t v234 = sub_228B768F8((void *)(v68 > 1), v69 + 1, 1, v234);
        }
        uint64_t v70 = v234;
        v234[2] = v69 + 1;
        uint64_t v71 = &v70[2 * v69];
        v71[4] = sub_228B0B0E0;
        v71[5] = v67;
      }
      uint64_t v72 = v238;
      swift_bridgeObjectRetain();
      unint64_t v73 = sub_228AD1914((uint64_t)v36);
      char v75 = v74;
      swift_bridgeObjectRelease();
      if (v75)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v244[0] = v72;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_228B03B44();
          uint64_t v72 = *(void *)&v244[0];
        }

        uint64_t v77 = *(void *)(v72 + 56) + 136 * v73;
        long long v262 = *(_OWORD *)v77;
        long long v78 = *(_OWORD *)(v77 + 48);
        long long v79 = *(_OWORD *)(v77 + 64);
        long long v80 = *(_OWORD *)(v77 + 32);
        long long v263 = *(_OWORD *)(v77 + 16);
        long long v264 = v80;
        long long v265 = v78;
        long long v266 = v79;
        long long v81 = *(_OWORD *)(v77 + 80);
        long long v82 = *(_OWORD *)(v77 + 96);
        long long v83 = *(_OWORD *)(v77 + 112);
        uint64_t v270 = *(void *)(v77 + 128);
        long long v268 = v82;
        long long v269 = v83;
        long long v267 = v81;
        uint64_t v238 = v72;
        sub_228B02C44(v73, v72);
        swift_bridgeObjectRelease();
        sub_228B09840((uint64_t)&v262);
      }
      *(void *)&v244[0] = v35;
      id v84 = v35;
      sub_228B0991C((uint64_t)v272);
      id v85 = v36;
      id v86 = (void (*)(long long *, void))swift_modifyAtReferenceWritableKeyPath();
      uint64_t v88 = v87;
      char v89 = swift_isUniquelyReferenced_nonNull_native();
      v247[0] = *(id *)(v88 + 16);
      *(void *)(v88 + 16) = 0x8000000000000000;
      sub_228B04928((uint64_t)v272, v85, v89);
      *(id *)(v88 + 16) = v247[0];

      swift_bridgeObjectRelease();
      v86(&v262, 0);
      sub_228AD2678(v235);
      sub_228AD2678((uint64_t)v56);

      sub_228B09840((uint64_t)v260);
      sub_228B09840((uint64_t)v272);
      uint64_t v19 = v237;
      uint64_t v17 = v242;
LABEL_48:
      if (!v18)
      {
        swift_bridgeObjectRelease();
        uint64_t v15 = v238;
        char v237 = v19;
        if (v241) {
          goto LABEL_51;
        }
        goto LABEL_52;
      }
      --v18;
      v20 += 136;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  BOOL v233 = (void *)MEMORY[0x263F8EE78];
  uint64_t v234 = (void *)MEMORY[0x263F8EE78];
  char v237 = (void *)MEMORY[0x263F8EE78];
  if (a4)
  {
LABEL_51:
    uint64_t v101 = self;
    uint64_t v102 = swift_allocObject();
    *(void *)(v102 + 16) = v233;
    *(void *)&v271[32] = sub_228B0B078;
    *(void *)&v271[40] = v102;
    *(void *)uint64_t v271 = MEMORY[0x263EF8330];
    *(void *)&v271[8] = 1107296256;
    *(void *)&v271[16] = sub_228B005F8;
    *(void *)&v271[24] = &block_descriptor_278;
    double v103 = _Block_copy(v271);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v104 = swift_allocObject();
    *(void *)(v104 + 16) = v234;
    *(void *)&v271[32] = sub_228B0AF2C;
    *(void *)&v271[40] = v104;
    *(void *)uint64_t v271 = MEMORY[0x263EF8330];
    *(void *)&v271[8] = 1107296256;
    *(void *)&v271[16] = sub_228B0063C;
    *(void *)&v271[24] = &block_descriptor_285;
    uint64_t v105 = _Block_copy(v271);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v101, sel_animateWithDuration_animations_completion_, v103, v105, 0.25);
    _Block_release(v105);
    _Block_release(v103);
  }
LABEL_52:
  uint64_t v106 = *(void *)(v15 + 64);
  unint64_t v236 = (char *)(v15 + 64);
  uint64_t v107 = -1;
  uint64_t v108 = -1 << *(unsigned char *)(v15 + 32);
  uint64_t v231 = ~v108;
  if (-v108 < 64) {
    uint64_t v107 = ~(-1 << -(char)v108);
  }
  unint64_t v109 = v107 & v106;
  uint64_t v235 = (unint64_t)(63 - v108) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v238 = v15;
  uint64_t v239 = 0;
  while (1)
  {
    if (v109)
    {
      BOOL v242 = (char *)((v109 - 1) & v109);
      unint64_t v117 = __clz(__rbit64(v109)) | (v239 << 6);
      goto LABEL_73;
    }
    uint64_t v118 = v239 + 1;
    if (__OFADD__(v239, 1))
    {
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
      goto LABEL_124;
    }
    if (v118 >= v235) {
      goto LABEL_80;
    }
    unint64_t v119 = *(void *)&v236[8 * v118];
    uint64_t v120 = v239 + 1;
    if (!v119)
    {
      uint64_t v120 = v239 + 2;
      if (v239 + 2 >= v235) {
        goto LABEL_80;
      }
      unint64_t v119 = *(void *)&v236[8 * v120];
      if (!v119)
      {
        uint64_t v120 = v239 + 3;
        if (v239 + 3 >= v235) {
          goto LABEL_80;
        }
        unint64_t v119 = *(void *)&v236[8 * v120];
        if (!v119) {
          break;
        }
      }
    }
LABEL_72:
    BOOL v242 = (char *)((v119 - 1) & v119);
    unint64_t v117 = __clz(__rbit64(v119)) + (v120 << 6);
    uint64_t v239 = v120;
LABEL_73:
    uint64_t v122 = *(void **)(*(void *)(v15 + 48) + 8 * v117);
    uint64_t v123 = *(void *)(v15 + 56) + 136 * v117;
    v249[0] = *(_OWORD *)v123;
    long long v124 = *(_OWORD *)(v123 + 64);
    long long v126 = *(_OWORD *)(v123 + 16);
    long long v125 = *(_OWORD *)(v123 + 32);
    v249[3] = *(_OWORD *)(v123 + 48);
    v249[4] = v124;
    v249[1] = v126;
    v249[2] = v125;
    long long v128 = *(_OWORD *)(v123 + 96);
    long long v127 = *(_OWORD *)(v123 + 112);
    long long v129 = *(_OWORD *)(v123 + 80);
    uint64_t v250 = *(void *)(v123 + 128);
    v249[6] = v128;
    v249[7] = v127;
    v249[5] = v129;
    long long v256 = *(_OWORD *)(v123 + 80);
    long long v257 = *(_OWORD *)(v123 + 96);
    long long v258 = *(_OWORD *)(v123 + 112);
    uint64_t v259 = *(void *)(v123 + 128);
    long long v252 = *(_OWORD *)(v123 + 16);
    long long v253 = *(_OWORD *)(v123 + 32);
    long long v254 = *(_OWORD *)(v123 + 48);
    long long v255 = *(_OWORD *)(v123 + 64);
    long long v251 = *(_OWORD *)v123;
    *(void *)char v260 = v122;
    *(_OWORD *)&v260[40] = v253;
    *(_OWORD *)&v260[56] = v254;
    *(_OWORD *)&v260[8] = v251;
    *(_OWORD *)&v260[24] = v252;
    uint64_t v261 = v259;
    *(_OWORD *)&v260[104] = v257;
    *(_OWORD *)&v260[120] = v258;
    *(_OWORD *)&v260[72] = v255;
    *(_OWORD *)&v260[88] = v256;
    nullsub_1(v260);
    sub_228ACD8BC((uint64_t)v260, (uint64_t)v271, (uint64_t *)&unk_268292660);
    uint64_t v241 = *(void **)v271;
    long long v268 = *(_OWORD *)&v271[104];
    long long v269 = *(_OWORD *)&v271[120];
    uint64_t v270 = *(void *)&v271[136];
    long long v264 = *(_OWORD *)&v271[40];
    long long v265 = *(_OWORD *)&v271[56];
    long long v266 = *(_OWORD *)&v271[72];
    long long v267 = *(_OWORD *)&v271[88];
    long long v262 = *(_OWORD *)&v271[8];
    long long v263 = *(_OWORD *)&v271[24];
    uint64_t v130 = *(void *)&v271[8];
    v247[0] = v240;
    char v131 = v240;
    sub_228B0991C((uint64_t)v249);
    id v132 = v122;
    swift_bridgeObjectRetain();
    uint64_t v133 = (void (*)(_OWORD *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v135 = v134;
    swift_bridgeObjectRetain();
    unint64_t v136 = sub_228AD1964(v130);
    char v138 = v137;
    swift_bridgeObjectRelease();
    if (v138)
    {
      char v139 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v140 = *(void **)(v135 + 24);
      id v248 = v140;
      *(void *)(v135 + 24) = 0x8000000000000000;
      if ((v139 & 1) == 0)
      {
        sub_228B0464C(&qword_268292680);
        uint64_t v140 = v248;
      }
      swift_bridgeObjectRelease();
      uint64_t v141 = *(void **)(v140[7] + 8 * v136);
      sub_228B03380(v136, (uint64_t)v140);
      *(void *)(v135 + 24) = v140;

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v133(v244, 0);

    id v248 = v131;
    id v142 = v131;
    uint64_t v143 = (void (*)(id *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v145 = v144;
    swift_bridgeObjectRetain();
    char v146 = v241;
    unint64_t v147 = sub_228AD1914((uint64_t)v241);
    char v149 = v148;
    swift_bridgeObjectRelease();
    if (v149)
    {
      int v150 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v151 = *(void *)(v145 + 16);
      uint64_t v246 = v151;
      *(void *)(v145 + 16) = 0x8000000000000000;
      if (!v150)
      {
        sub_228B03B44();
        uint64_t v151 = v246;
      }

      uint64_t v110 = *(void *)(v151 + 56) + 136 * v147;
      v244[0] = *(_OWORD *)v110;
      long long v111 = *(_OWORD *)(v110 + 48);
      long long v112 = *(_OWORD *)(v110 + 64);
      long long v113 = *(_OWORD *)(v110 + 32);
      v244[1] = *(_OWORD *)(v110 + 16);
      v244[2] = v113;
      v244[3] = v111;
      v244[4] = v112;
      long long v114 = *(_OWORD *)(v110 + 80);
      long long v115 = *(_OWORD *)(v110 + 96);
      long long v116 = *(_OWORD *)(v110 + 112);
      uint64_t v245 = *(void *)(v110 + 128);
      v244[6] = v115;
      v244[7] = v116;
      v244[5] = v114;
      sub_228B02C44(v147, v151);
      *(void *)(v145 + 16) = v151;
      swift_bridgeObjectRelease();
      sub_228B09840((uint64_t)v244);
    }
    v143(v247, 0);

    sub_228B09840((uint64_t)&v262);
    uint64_t v15 = v238;
    unint64_t v109 = (unint64_t)v242;
  }
  uint64_t v121 = v239 + 4;
  if (v239 + 4 < v235)
  {
    unint64_t v119 = *(void *)&v236[8 * v121];
    if (!v119)
    {
      while (1)
      {
        uint64_t v120 = v121 + 1;
        if (__OFADD__(v121, 1)) {
          goto LABEL_123;
        }
        if (v120 >= v235) {
          goto LABEL_80;
        }
        unint64_t v119 = *(void *)&v236[8 * v120];
        ++v121;
        if (v119) {
          goto LABEL_72;
        }
      }
    }
    uint64_t v120 = v239 + 4;
    goto LABEL_72;
  }
LABEL_80:
  sub_228AC98B8();
  uint64_t v152 = swift_bridgeObjectRetain();
  unint64_t v153 = sub_228B0079C(v152);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v153 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_228BAD9F8();
    sub_228AD25BC(0, (unint64_t *)&qword_268293000);
    unint64_t v154 = v153;
    goto LABEL_82;
  }
LABEL_124:
  sub_228AD25BC(0, (unint64_t *)&qword_268293000);
  swift_bridgeObjectRetain();
  unint64_t v154 = sub_228BAD948();
  swift_bridgeObjectRelease();
LABEL_82:
  unint64_t v155 = v237;
  swift_bridgeObjectRelease();
  if (sub_228AFFB54(v154))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
    uint64_t v156 = (void *)sub_228BAD498();
    objc_msgSend(v232, sel_removeOverlays_, v156);
    goto LABEL_88;
  }
  if (!sub_228AFFB54(v154))
  {
    swift_bridgeObjectRelease();
    uint64_t v157 = v155[2];
    if (v157) {
      goto LABEL_89;
    }
    return (uint64_t)v155;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
  uint64_t v156 = (void *)sub_228BAD498();
  objc_msgSend(v232, sel_removeAnnotations_, v156);
LABEL_88:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v157 = v155[2];
  if (!v157) {
    return (uint64_t)v155;
  }
LABEL_89:
  uint64_t v239 = (uint64_t)&v271[8];
  swift_bridgeObjectRetain();
  BOOL v242 = (char *)(v157 - 1);
  uint64_t v158 = 32;
  while (1)
  {
    uint64_t v241 = (void *)v158;
    uint64_t v159 = (_OWORD *)((char *)v155 + v158);
    *(_OWORD *)uint64_t v271 = *v159;
    long long v160 = v159[1];
    long long v161 = v159[2];
    long long v162 = v159[4];
    *(_OWORD *)&v271[48] = v159[3];
    *(_OWORD *)&v271[64] = v162;
    *(_OWORD *)&v271[16] = v160;
    *(_OWORD *)&v271[32] = v161;
    long long v163 = v159[5];
    long long v164 = v159[6];
    long long v165 = v159[8];
    *(_OWORD *)&v271[112] = v159[7];
    *(_OWORD *)&v271[128] = v165;
    *(_OWORD *)&v271[80] = v163;
    *(_OWORD *)&v271[96] = v164;
    uint64_t v166 = *(void **)v271;
    uint64_t v167 = *(void *)&v271[8];
    *(void *)&long long v262 = v240;
    id v168 = v240;
    sub_228B09778((uint64_t)v271);
    swift_bridgeObjectRetain();
    id v169 = v166;
    int64_t v170 = (void (*)(unsigned char *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v172 = v171;
    char v173 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v251 = *(void *)(v172 + 24);
    uint64_t v174 = v251;
    *(void *)(v172 + 24) = 0x8000000000000000;
    unint64_t v176 = sub_228AD1964(v167);
    uint64_t v177 = *(void *)(v174 + 16);
    BOOL v178 = (v175 & 1) == 0;
    uint64_t v179 = v177 + v178;
    if (__OFADD__(v177, v178))
    {
      __break(1u);
LABEL_119:
      __break(1u);
      goto LABEL_120;
    }
    char v180 = v175;
    if (*(void *)(v174 + 24) < v179) {
      break;
    }
    if (v173)
    {
      unint64_t v183 = (void *)v251;
      if (v175) {
        goto LABEL_97;
      }
    }
    else
    {
      sub_228B0464C(&qword_268292680);
      unint64_t v183 = (void *)v251;
      if (v180)
      {
LABEL_97:
        uint64_t v184 = v183[7];

        *(void *)(v184 + 8 * v176) = v169;
        goto LABEL_101;
      }
    }
LABEL_99:
    v183[(v176 >> 6) + 8] |= 1 << v176;
    uint64_t v185 = 8 * v176;
    *(void *)(v183[6] + v185) = v167;
    *(void *)(v183[7] + v185) = v169;
    uint64_t v186 = v183[2];
    BOOL v187 = __OFADD__(v186, 1);
    uint64_t v188 = v186 + 1;
    if (v187) {
      goto LABEL_121;
    }
    v183[2] = v188;
    swift_bridgeObjectRetain();
LABEL_101:
    *(void *)(v172 + 24) = v183;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v170(v260, 0);

    *(void *)&long long v251 = v168;
    id v189 = v168;
    id v190 = v169;
    uint64_t v191 = v239;
    sub_228B0991C(v239);
    uint64_t v192 = (void (*)(long long *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v194 = v193;
    char v195 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v249[0] = *(void *)(v194 + 16);
    uint64_t v196 = *(void *)&v249[0];
    *(void *)(v194 + 16) = 0x8000000000000000;
    unint64_t v198 = sub_228AD1914((uint64_t)v190);
    uint64_t v199 = *(void *)(v196 + 16);
    BOOL v200 = (v197 & 1) == 0;
    uint64_t v201 = v199 + v200;
    if (__OFADD__(v199, v200)) {
      goto LABEL_119;
    }
    char v202 = v197;
    if (*(void *)(v196 + 24) >= v201)
    {
      if (v195)
      {
        if (v197) {
          goto LABEL_108;
        }
      }
      else
      {
        sub_228B03B44();
        if (v202) {
          goto LABEL_108;
        }
      }
    }
    else
    {
      sub_228B01680(v201, v195);
      unint64_t v203 = sub_228AD1914((uint64_t)v190);
      if ((v202 & 1) != (v204 & 1)) {
        goto LABEL_126;
      }
      unint64_t v198 = v203;
      if (v202)
      {
LABEL_108:
        char v205 = *(void **)&v249[0];
        uint64_t v206 = *(void *)(*(void *)&v249[0] + 56) + 136 * v198;
        *(_OWORD *)char v260 = *(_OWORD *)v206;
        long long v207 = *(_OWORD *)(v206 + 64);
        long long v209 = *(_OWORD *)(v206 + 16);
        long long v208 = *(_OWORD *)(v206 + 32);
        *(_OWORD *)&v260[48] = *(_OWORD *)(v206 + 48);
        *(_OWORD *)&v260[64] = v207;
        *(_OWORD *)&v260[16] = v209;
        *(_OWORD *)&v260[32] = v208;
        long long v211 = *(_OWORD *)(v206 + 96);
        long long v210 = *(_OWORD *)(v206 + 112);
        long long v212 = *(_OWORD *)(v206 + 80);
        *(void *)&v260[128] = *(void *)(v206 + 128);
        *(_OWORD *)&v260[96] = v211;
        *(_OWORD *)&v260[112] = v210;
        *(_OWORD *)&v260[80] = v212;
        sub_228B09840((uint64_t)v260);
        *(_OWORD *)uint64_t v206 = *(_OWORD *)v191;
        long long v213 = *(_OWORD *)(v191 + 64);
        long long v215 = *(_OWORD *)(v191 + 16);
        long long v214 = *(_OWORD *)(v191 + 32);
        *(_OWORD *)(v206 + 48) = *(_OWORD *)(v191 + 48);
        *(_OWORD *)(v206 + 64) = v213;
        *(_OWORD *)(v206 + 16) = v215;
        *(_OWORD *)(v206 + 32) = v214;
        long long v217 = *(_OWORD *)(v191 + 96);
        long long v216 = *(_OWORD *)(v191 + 112);
        long long v218 = *(_OWORD *)(v191 + 80);
        *(void *)(v206 + 128) = *(void *)(v191 + 128);
        *(_OWORD *)(v206 + 96) = v217;
        *(_OWORD *)(v206 + 112) = v216;
        *(_OWORD *)(v206 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v218;
        goto LABEL_112;
      }
    }
    char v205 = *(void **)&v249[0];
    *(void *)(*(void *)&v249[0] + 8 * (v198 >> 6) + 64) |= 1 << v198;
    *(void *)(v205[6] + 8 * v198) = v190;
    uint64_t v219 = v205[7] + 136 * v198;
    *(_OWORD *)uint64_t v219 = *(_OWORD *)v191;
    long long v220 = *(_OWORD *)(v191 + 64);
    long long v222 = *(_OWORD *)(v191 + 16);
    long long v221 = *(_OWORD *)(v191 + 32);
    *(_OWORD *)(v219 + 48) = *(_OWORD *)(v191 + 48);
    *(_OWORD *)(v219 + 64) = v220;
    *(_OWORD *)(v219 + 16) = v222;
    *(_OWORD *)(v219 + 32) = v221;
    long long v223 = *(_OWORD *)(v191 + 80);
    long long v224 = *(_OWORD *)(v191 + 96);
    long long v225 = *(_OWORD *)(v191 + 112);
    *(void *)(v219 + 128) = *(void *)(v191 + 128);
    *(_OWORD *)(v219 + 96) = v224;
    *(_OWORD *)(v219 + 112) = v225;
    *(_OWORD *)(v219 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v223;
    uint64_t v226 = v205[2];
    BOOL v187 = __OFADD__(v226, 1);
    uint64_t v227 = v226 + 1;
    if (v187) {
      goto LABEL_122;
    }
    v205[2] = v227;
    id v228 = v190;
LABEL_112:
    *(void *)(v194 + 16) = v205;

    swift_bridgeObjectRelease();
    v192(&v262, 0);

    sub_228B09840(v191);
    if (!v242)
    {
      unint64_t v155 = v237;
      swift_bridgeObjectRelease();
      return (uint64_t)v155;
    }
    --v242;
    uint64_t v158 = (uint64_t)v241 + 144;
    unint64_t v155 = v237;
  }
  sub_228B0288C(v179, v173, &qword_268292680);
  unint64_t v181 = sub_228AD1964(v167);
  if ((v180 & 1) == (v182 & 1))
  {
    unint64_t v176 = v181;
    unint64_t v183 = (void *)v251;
    if (v180) {
      goto LABEL_97;
    }
    goto LABEL_99;
  }
  sub_228BADA18();
  __break(1u);
LABEL_126:
  sub_228AD25BC(0, &qword_268292670);
  uint64_t result = sub_228BADA18();
  __break(1u);
  return result;
}

void *sub_228AF31A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v268 = a1;
  uint64_t v271 = 0;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292658);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v262 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v308[0] = v5;
  id v286 = v5;
  uint64_t v302 = a5;
  uint64_t v13 = (void (*)(long long *, void))swift_readAtKeyPath();
  uint64_t v283 = *(void *)(v14 + 16);
  swift_bridgeObjectRetain();
  v13(&v313, 0);

  id v290 = *(id *)(a2 + 16);
  if (!v290)
  {
    id v272 = (void *)MEMORY[0x263F8EE78];
    long long v273 = (void *)MEMORY[0x263F8EE78];
    char v285 = (void *)MEMORY[0x263F8EE78];
    if (a4) {
      goto LABEL_68;
    }
    goto LABEL_69;
  }
  long long v263 = v12;
  uint64_t v264 = a3;
  uint64_t v266 = a2;
  uint64_t v267 = a4;
  uint64_t v291 = (char *)v321 + 8;
  uint64_t v292 = a2 + 32;
  swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  id v272 = (void *)MEMORY[0x263F8EE78];
  long long v273 = (void *)MEMORY[0x263F8EE78];
  char v285 = (void *)MEMORY[0x263F8EE78];
  id v16 = v290;
  do
  {
    uint64_t v17 = v292 + 120 * (void)v15;
    long long v18 = *(_OWORD *)(v17 + 80);
    v321[4] = *(_OWORD *)(v17 + 64);
    v321[5] = v18;
    v321[6] = *(_OWORD *)(v17 + 96);
    id v19 = *(id *)(v17 + 112);
    id v322 = v19;
    long long v20 = *(_OWORD *)(v17 + 16);
    v321[0] = *(_OWORD *)v17;
    v321[1] = v20;
    long long v21 = *(_OWORD *)(v17 + 48);
    v321[2] = *(_OWORD *)(v17 + 32);
    v321[3] = v21;
    uint64_t v293 = *(void **)v17;
    uint64_t v22 = *(void *)(v17 + 8);
    unint64_t v300 = *(void *)(v17 + 16);
    uint64_t v301 = (void *)v22;
    long long v23 = *(void **)(v17 + 24);
    uint64_t v298 = *(void *)(v17 + 32);
    uint64_t v299 = v23;
    uint64_t v24 = *(void *)(v17 + 40);
    uint64_t v25 = *(void *)(v17 + 48);
    uint64_t v26 = *(void *)(v17 + 56);
    uint64_t v27 = *(void *)(v17 + 64);
    uint64_t v28 = *(void *)(v17 + 72);
    uint64_t v296 = *(void *)(v17 + 80);
    uint64_t v297 = v27;
    LODWORD(v295) = *(unsigned __int8 *)(v17 + 88);
    uint64_t v29 = *(void *)(v17 + 96);
    LODWORD(v294) = *(unsigned __int8 *)(v17 + 104);
    uint64_t v324 = *((void *)v291 + 2);
    long long v323 = *(_OWORD *)v291;
    uint64_t v30 = *(void *)&v321[0];
    v308[0] = v286;
    id v31 = v286;
    sub_228B09D54((uint64_t)v321);
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();

    uint64_t v32 = *((void *)&v314 + 1);
    if (!*(void *)(*((void *)&v314 + 1) + 16) || (unint64_t v33 = sub_228AD1964(v30), (v34 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v63 = *((void *)&v323 + 1);
      unint64_t v62 = (void *)v323;
      if ((*((void *)&v323 + 1) & 0x8000000000000000) == 0)
      {
LABEL_18:
        uint64_t v64 = v324;
        sub_228AD25BC(0, (unint64_t *)&qword_2682926B0);
        sub_228B09DF0((uint64_t)&v323);
        unint64_t v62 = sub_228B6A7F4(v62, v63, v64);
LABEL_22:
        id v65 = v293;
        uint64_t v66 = (uint64_t)v301;
        sub_228B09D54((uint64_t)v321);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v67 = v285;
        }
        else {
          uint64_t v67 = sub_228B772A0(0, v285[2] + 1, 1, v285);
        }
        unint64_t v69 = v67[2];
        unint64_t v68 = v67[3];
        if (v69 >= v68 >> 1) {
          uint64_t v67 = sub_228B772A0((void *)(v68 > 1), v69 + 1, 1, v67);
        }
        LOBYTE(v304[0]) = (_BYTE)v295;
        LOBYTE(v305) = (_BYTE)v294;
        v67[2] = v69 + 1;
        char v285 = v67;
        uint64_t v70 = &v67[16 * v69];
        v70[4] = v62;
        v70[5] = v65;
        uint64_t v71 = v300;
        v70[6] = v66;
        v70[7] = v71;
        uint64_t v72 = v298;
        v70[8] = v299;
        v70[9] = v72;
        v70[10] = v24;
        v70[11] = v25;
        v70[12] = v26;
        v70[13] = v297;
        v70[14] = v28;
        v70[15] = v296;
        *((unsigned char *)v70 + 128) = v304[0];
        LODWORD(v72) = v313;
        *((_DWORD *)v70 + 33) = *(_DWORD *)((char *)&v313 + 3);
        *(_DWORD *)((char *)v70 + 129) = v72;
        v70[17] = v29;
        *((unsigned char *)v70 + 144) = (_BYTE)v305;
        LODWORD(v72) = v308[0];
        *((_DWORD *)v70 + 37) = *(_DWORD *)((char *)v308 + 3);
        *(_DWORD *)((char *)v70 + 145) = v72;
        v70[19] = v19;
        sub_228B09E20((uint64_t)v321);
        goto LABEL_27;
      }
      goto LABEL_21;
    }
    id v35 = *(id *)(*(void *)(v32 + 56) + 8 * v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v308[0] = v31;
    id v36 = v31;
    id v37 = v35;
    swift_getAtKeyPath();

    uint64_t v38 = v314;
    if (!*(void *)(v314 + 16) || (unint64_t v39 = sub_228AD19E0((uint64_t)v37), (v40 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_17:
      id v16 = v290;
      uint64_t v63 = *((void *)&v323 + 1);
      unint64_t v62 = (void *)v323;
      if ((*((void *)&v323 + 1) & 0x8000000000000000) == 0) {
        goto LABEL_18;
      }
LABEL_21:
      sub_228B09DF0((uint64_t)&v323);
      goto LABEL_22;
    }
    id v269 = v36;
    uint64_t v280 = v29;
    uint64_t v41 = *(void *)(v38 + 56) + 120 * v39;
    uint64_t v42 = *(void *)v41;
    long long v43 = *(void **)(v41 + 8);
    uint64_t v45 = *(void *)(v41 + 16);
    uint64_t v44 = *(void *)(v41 + 24);
    id v287 = v37;
    long long v46 = *(char **)(v41 + 32);
    uint64_t v278 = (uint64_t)v19;
    uint64_t v279 = v46;
    uint64_t v47 = *(void *)(v41 + 64);
    uint64_t v48 = *(void *)(v41 + 80);
    int v49 = *(unsigned __int8 *)(v41 + 88);
    id v289 = *(id *)(v41 + 96);
    int v281 = *(unsigned __int8 *)(v41 + 104);
    id v270 = *(id *)(v41 + 112);
    uint64_t v275 = v42;
    swift_bridgeObjectRetain();
    uint64_t v284 = (uint64_t)v43;
    uint64_t v288 = v45;
    uint64_t v282 = v44;
    sub_228B09CA8(v43, v45);
    double v50 = v279;
    id v51 = v287;
    char v52 = v281;
    long long v274 = v50;
    uint64_t v276 = v47;
    swift_bridgeObjectRetain();
    uint64_t v277 = v48;
    LODWORD(v279) = v49;
    sub_228ACF3A4(v48, v49);
    sub_228ACF3A4((uint64_t)v289, v52);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_228B09EF4((uint64_t)&v323, (uint64_t)v325);
    sub_228B09EF4((uint64_t)v325, (uint64_t)&v326);
    if (v327 < 0)
    {
      v327 &= ~0x8000000000000000;
      uint64_t v53 = v288;
      if (v288 < 0)
      {
        char v61 = v52;
        uint64_t v80 = v288;
        sub_228AD25BC(0, (unint64_t *)&qword_268293000);
        sub_228B09DF0((uint64_t)&v323);
        uint64_t v57 = (void *)v284;
        sub_228B09CA8((void *)v284, v80);
        char v81 = sub_228BAD6F8();
        sub_228B09D08(v57, v80);
        sub_228B09F50((uint64_t)&v323);
        uint64_t v29 = v280;
        id v19 = (id)v278;
        if ((v81 & 1) == 0) {
          goto LABEL_60;
        }
        goto LABEL_38;
      }
LABEL_20:
      swift_bridgeObjectRelease();
      sub_228B09D08((void *)v284, v53);
      swift_bridgeObjectRelease();

      sub_228AD26A8(v277, (char)v279);
      sub_228AD26A8((uint64_t)v289, v52);

      id v16 = v290;
      uint64_t v29 = v280;
      id v19 = (id)v278;
      uint64_t v63 = *((void *)&v323 + 1);
      unint64_t v62 = (void *)v323;
      if ((*((void *)&v323 + 1) & 0x8000000000000000) == 0) {
        goto LABEL_18;
      }
      goto LABEL_21;
    }
    uint64_t v53 = v288;
    if (v288 < 0) {
      goto LABEL_20;
    }
    char v54 = v52;
    uint64_t v265 = v328;
    uint64_t v55 = v326;
    uint64_t v56 = v282;
    uint64_t v57 = (void *)v284;
    if (v327)
    {
      uint64_t v29 = v280;
      id v19 = (id)v278;
      if ((v288 & 1) != 0 && (uint64_t v73 = *(void *)(v326 + 16), v73 == *(void *)(v284 + 16)))
      {
        if (!v73)
        {
          char v61 = v54;
          goto LABEL_57;
        }
        char v74 = (float64x2_t *)(v326 + 32);
        char v75 = (float64x2_t *)(v284 + 32);
        uint64_t v76 = v73 - 1;
        char v61 = v54;
        while (1)
        {
          int32x2_t v77 = vmovn_s64(vceqq_f64(*v74, *v75));
          if ((v77.i32[0] & v77.i32[1] & 1) == 0) {
            break;
          }
          if (!v76) {
            goto LABEL_57;
          }
          ++v75;
          ++v74;
          --v76;
        }
LABEL_62:
        swift_bridgeObjectRelease();
        uint64_t v122 = v57;
        uint64_t v123 = v53;
LABEL_63:
        sub_228B09D08(v122, v123);
        swift_bridgeObjectRelease();

        sub_228AD26A8(v277, (char)v279);
        uint64_t v78 = (uint64_t)v289;
        char v79 = v61;
      }
      else
      {
LABEL_36:
        swift_bridgeObjectRelease();
        sub_228B09D08(v57, v53);
        swift_bridgeObjectRelease();

        sub_228AD26A8(v277, (char)v279);
        uint64_t v78 = (uint64_t)v289;
        char v79 = v54;
      }
      sub_228AD26A8(v78, v79);

      goto LABEL_17;
    }
    uint64_t v29 = v280;
    id v19 = (id)v278;
    if ((v288 & 1) != 0 || *(void *)(v326 + 16) != *(void *)(v284 + 16)) {
      goto LABEL_36;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v58 = (uint64_t)v57;
    uint64_t v59 = v53;
    uint64_t v60 = v271;
    HIDWORD(v262) = sub_228B00E94(v55, v58);
    uint64_t v271 = v60;
    uint64_t v53 = v59;
    uint64_t v57 = (void *)v284;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v61 = v54;
    if ((v262 & 0x100000000) == 0) {
      goto LABEL_62;
    }
LABEL_57:
    if (v265)
    {
      if (!v56) {
        goto LABEL_62;
      }
      swift_bridgeObjectRetain();
      uint64_t v120 = swift_bridgeObjectRetain();
      char v121 = sub_228B75EBC(v120, v56);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v121 & 1) == 0)
      {
LABEL_60:
        swift_bridgeObjectRelease();
        uint64_t v122 = v57;
        uint64_t v123 = v288;
        goto LABEL_63;
      }
    }
    else if (v56)
    {
      goto LABEL_62;
    }
LABEL_38:
    if (v322 != v270) {
      goto LABEL_60;
    }
    uint64_t v82 = sub_228BACAF8();
    uint64_t v83 = *(void *)(v82 - 8);
    uint64_t v84 = (uint64_t)v263;
    (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v263, v264, v82);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v83 + 56))(v84, 0, 1, v82);
    id v85 = v268;
    id v86 = sub_228B0802C(v85, v51, v267, v84, (uint64_t)v321);
    uint64_t v88 = v87;
    uint64_t v90 = v89;
    uint64_t v92 = v91;
    sub_228AC1A50(v84, &qword_268292658);

    unint64_t v300 = (unint64_t)v86;
    uint64_t v301 = (void *)v88;
    if (v86)
    {
      uint64_t v93 = swift_allocObject();
      *(void *)(v93 + 16) = v86;
      *(void *)(v93 + 24) = v88;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v272 = sub_228B768F8(0, v272[2] + 1, 1, v272);
      }
      unint64_t v95 = v272[2];
      unint64_t v94 = v272[3];
      if (v95 >= v94 >> 1) {
        id v272 = sub_228B768F8((void *)(v94 > 1), v95 + 1, 1, v272);
      }
      long long v96 = v272;
      _OWORD v272[2] = v95 + 1;
      long long v97 = &v96[2 * v95];
      v97[4] = sub_228B0B0E0;
      v97[5] = v93;
    }
    uint64_t v98 = v283;
    if (v90)
    {
      uint64_t v99 = swift_allocObject();
      *(void *)(v99 + 16) = v90;
      *(void *)(v99 + 24) = v92;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v273 = sub_228B768F8(0, v273[2] + 1, 1, v273);
      }
      unint64_t v101 = v273[2];
      unint64_t v100 = v273[3];
      if (v101 >= v100 >> 1) {
        long long v273 = sub_228B768F8((void *)(v100 > 1), v101 + 1, 1, v273);
      }
      uint64_t v102 = v273;
      v273[2] = v101 + 1;
      double v103 = &v102[2 * v101];
      v103[4] = sub_228B0B0E0;
      v103[5] = v99;
      uint64_t v98 = v283;
    }
    swift_bridgeObjectRetain();
    unint64_t v104 = sub_228AD19E0((uint64_t)v287);
    char v106 = v105;
    swift_bridgeObjectRelease();
    uint64_t v107 = v90;
    if (v106)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v313 = v98;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_228B03D60();
        uint64_t v98 = v313;
      }

      uint64_t v109 = *(void *)(v98 + 56) + 120 * v104;
      uint64_t v110 = *(void **)(v109 + 8);
      long long v111 = *(void **)(v109 + 32);
      long long v112 = *(void **)(v109 + 64);
      id v294 = *(id *)(v109 + 16);
      id v295 = v112;
      uint64_t v297 = *(void *)(v109 + 80);
      LODWORD(v296) = *(unsigned __int8 *)(v109 + 88);
      uint64_t v299 = *(void **)(v109 + 96);
      LODWORD(v298) = *(unsigned __int8 *)(v109 + 104);
      uint64_t v283 = v98;
      sub_228B02E04(v104, v98);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_228B09D08(v110, (uint64_t)v294);
      swift_bridgeObjectRelease();

      sub_228AD26A8(v297, v296);
      sub_228AD26A8((uint64_t)v299, v298);
    }
    v308[0] = v269;
    id v113 = v269;
    sub_228B09D54((uint64_t)v321);
    id v114 = v287;
    long long v115 = (void (*)(long long *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v117 = v116;
    char v118 = swift_isUniquelyReferenced_nonNull_native();
    v304[0] = *(id *)(v117 + 16);
    *(void *)(v117 + 16) = 0x8000000000000000;
    sub_228B04AD8((uint64_t)v321, v114, v118);
    *(id *)(v117 + 16) = v304[0];

    swift_bridgeObjectRelease();
    v115(&v313, 0);
    sub_228AD2678(v107);
    sub_228AD2678(v300);

    id v119 = v308[0];
    swift_bridgeObjectRelease();

    sub_228B09D08(v57, v288);
    swift_bridgeObjectRelease();

    sub_228AD26A8(v277, (char)v279);
    sub_228AD26A8((uint64_t)v289, v281);
    sub_228B09E20((uint64_t)v321);
    id v16 = v290;
LABEL_27:
    uint64_t v15 = (char *)v15 + 1;
  }
  while (v15 != v16);
  swift_bridgeObjectRelease();
  if (v267)
  {
LABEL_68:
    long long v124 = self;
    uint64_t v125 = swift_allocObject();
    *(void *)(v125 + 16) = v272;
    *(void *)&long long v315 = sub_228B0B078;
    *((void *)&v315 + 1) = v125;
    *(void *)&long long v313 = MEMORY[0x263EF8330];
    *((void *)&v313 + 1) = 1107296256;
    *(void *)&long long v314 = sub_228B005F8;
    *((void *)&v314 + 1) = &block_descriptor_315;
    long long v126 = _Block_copy(&v313);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v127 = swift_allocObject();
    *(void *)(v127 + 16) = v273;
    *(void *)&long long v315 = sub_228B0AF2C;
    *((void *)&v315 + 1) = v127;
    *(void *)&long long v313 = MEMORY[0x263EF8330];
    *((void *)&v313 + 1) = 1107296256;
    *(void *)&long long v314 = sub_228B0063C;
    *((void *)&v314 + 1) = &block_descriptor_322;
    long long v128 = _Block_copy(&v313);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v124, sel_animateWithDuration_animations_completion_, v126, v128, 0.25);
    _Block_release(v128);
    _Block_release(v126);
  }
LABEL_69:
  uint64_t v129 = v283;
  uint64_t v130 = *(void *)(v283 + 64);
  uint64_t v280 = v283 + 64;
  uint64_t v131 = -1;
  uint64_t v132 = -1 << *(unsigned char *)(v283 + 32);
  uint64_t v278 = ~v132;
  if (-v132 < 64) {
    uint64_t v131 = ~(-1 << -(char)v132);
  }
  unint64_t v133 = v131 & v130;
  uint64_t v279 = (char *)((unint64_t)(63 - v132) >> 6);
  swift_bridgeObjectRetain();
  uint64_t v284 = 0;
  while (2)
  {
    if (v133)
    {
      unint64_t v300 = (v133 - 1) & v133;
      unint64_t v141 = __clz(__rbit64(v133)) | (v284 << 6);
LABEL_87:
      uint64_t v145 = *(void **)(*(void *)(v129 + 48) + 8 * v141);
      uint64_t v146 = *(void *)(v129 + 56) + 120 * v141;
      unint64_t v147 = *(void **)v146;
      char v148 = *(void **)(v146 + 8);
      char v149 = *(void **)(v146 + 16);
      int v150 = *(void **)(v146 + 24);
      uint64_t v151 = *(void **)(v146 + 32);
      unint64_t v153 = *(void **)(v146 + 48);
      uint64_t v152 = *(void **)(v146 + 56);
      unint64_t v154 = *(void **)(v146 + 64);
      unint64_t v155 = *(void **)(v146 + 72);
      id v287 = *(id *)(v146 + 80);
      char v156 = *(unsigned char *)(v146 + 88);
      uint64_t v288 = *(void *)(v146 + 96);
      id v289 = v145;
      char v157 = *(unsigned char *)(v146 + 104);
      uint64_t v158 = *(void *)(v146 + 112);
      char v307 = v156;
      char v306 = v157;
      uint64_t v159 = *(void **)(v146 + 40);
      v308[0] = v145;
      v308[1] = v147;
      v308[2] = v148;
      v308[3] = v149;
      v308[4] = v150;
      v308[5] = v151;
      v308[6] = v159;
      v308[7] = v153;
      v308[8] = v152;
      v308[9] = v154;
      v308[10] = v155;
      v308[11] = v287;
      char v309 = v156;
      uint64_t v310 = v288;
      char v311 = v157;
      uint64_t v312 = v158;
      nullsub_1(v308);
      sub_228ACD8BC((uint64_t)v308, (uint64_t)&v313, &qword_2682926A8);
      uint64_t v160 = *((void *)&v313 + 1);
      uint64_t v301 = (void *)v313;
      uint64_t v292 = *((void *)&v314 + 1);
      uint64_t v293 = (void *)v314;
      uint64_t v291 = (char *)v315;
      id v294 = (id)*((void *)&v317 + 1);
      id v295 = (id)*((void *)&v315 + 1);
      uint64_t v297 = *((void *)&v318 + 1);
      LODWORD(v296) = v319;
      uint64_t v299 = (void *)*((void *)&v319 + 1);
      LODWORD(v298) = v320;
      id v305 = v286;
      id v290 = v286;
      swift_bridgeObjectRetain();
      sub_228B09CA8(v148, (uint64_t)v149);
      id v161 = v151;
      swift_bridgeObjectRetain();
      sub_228ACF3A4((uint64_t)v287, v156);
      sub_228ACF3A4(v288, v157);
      id v162 = v289;
      swift_bridgeObjectRetain();
      long long v163 = (void (*)(id *, void))swift_modifyAtReferenceWritableKeyPath();
      uint64_t v165 = v164;
      swift_bridgeObjectRetain();
      unint64_t v166 = sub_228AD1964(v160);
      char v168 = v167;
      swift_bridgeObjectRelease();
      if (v168)
      {
        char v169 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v170 = *(void *)(v165 + 24);
        uint64_t v303 = v170;
        *(void *)(v165 + 24) = 0x8000000000000000;
        if ((v169 & 1) == 0)
        {
          sub_228B0464C(&qword_2682926B8);
          uint64_t v170 = v303;
        }
        swift_bridgeObjectRelease();
        uint64_t v171 = *(void **)(*(void *)(v170 + 56) + 8 * v166);
        sub_228B03380(v166, v170);
        *(void *)(v165 + 24) = v170;

        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      char v138 = v301;
      uint64_t v172 = v290;
      v163(v304, 0);

      id v305 = v172;
      id v173 = v172;
      id v139 = (id)swift_modifyAtReferenceWritableKeyPath();
      uint64_t v175 = v174;
      swift_bridgeObjectRetain();
      unint64_t v176 = sub_228AD19E0((uint64_t)v138);
      char v178 = v177;
      swift_bridgeObjectRelease();
      if (v178)
      {
        id v289 = v139;
        id v290 = (id)v160;
        int v179 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v180 = *(void *)(v175 + 16);
        uint64_t v303 = v180;
        *(void *)(v175 + 16) = 0x8000000000000000;
        if (!v179)
        {
          sub_228B03D60();
          uint64_t v180 = v303;
        }

        uint64_t v134 = *(void *)(v180 + 56) + 120 * v176;
        uint64_t v135 = *(void **)(v134 + 8);
        uint64_t v136 = *(void *)(v134 + 16);
        char v137 = *(void **)(v134 + 32);
        uint64_t v282 = *(void *)(v134 + 80);
        int v281 = *(unsigned __int8 *)(v134 + 88);
        uint64_t v288 = *(void *)(v134 + 96);
        LODWORD(v287) = *(unsigned __int8 *)(v134 + 104);
        sub_228B02E04(v176, v180);
        *(void *)(v175 + 16) = v180;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_228B09D08(v135, v136);
        swift_bridgeObjectRelease();

        sub_228AD26A8(v282, v281);
        sub_228AD26A8(v288, (char)v287);
        char v138 = v301;
        id v139 = v289;
      }
      ((void (*)(id *, void))v139)(v304, 0);
      id v140 = v305;
      swift_bridgeObjectRelease();

      sub_228B09D08(v293, v292);
      swift_bridgeObjectRelease();

      sub_228AD26A8(v297, v296);
      sub_228AD26A8((uint64_t)v299, v298);

      uint64_t v129 = v283;
      unint64_t v133 = v300;
      continue;
    }
    break;
  }
  uint64_t v142 = v284 + 1;
  if (__OFADD__(v284, 1))
  {
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
    goto LABEL_141;
  }
  if (v142 >= (uint64_t)v279) {
    goto LABEL_98;
  }
  unint64_t v143 = *(void *)(v280 + 8 * v142);
  if (v143) {
    goto LABEL_86;
  }
  uint64_t v144 = v284 + 2;
  if (v284 + 2 >= (uint64_t)v279) {
    goto LABEL_98;
  }
  unint64_t v143 = *(void *)(v280 + 8 * v144);
  if (v143) {
    goto LABEL_85;
  }
  uint64_t v144 = v284 + 3;
  if (v284 + 3 >= (uint64_t)v279) {
    goto LABEL_98;
  }
  unint64_t v143 = *(void *)(v280 + 8 * v144);
  if (v143) {
    goto LABEL_85;
  }
  uint64_t v144 = v284 + 4;
  if (v284 + 4 < (uint64_t)v279)
  {
    unint64_t v143 = *(void *)(v280 + 8 * v144);
    if (!v143)
    {
      while (1)
      {
        uint64_t v142 = v144 + 1;
        if (__OFADD__(v144, 1)) {
          goto LABEL_140;
        }
        if (v142 >= (uint64_t)v279) {
          goto LABEL_98;
        }
        unint64_t v143 = *(void *)(v280 + 8 * v142);
        ++v144;
        if (v143) {
          goto LABEL_86;
        }
      }
    }
LABEL_85:
    uint64_t v142 = v144;
LABEL_86:
    unint64_t v300 = (v143 - 1) & v143;
    unint64_t v141 = __clz(__rbit64(v143)) + (v142 << 6);
    uint64_t v284 = v142;
    goto LABEL_87;
  }
LABEL_98:
  sub_228AC98B8();
  uint64_t v181 = swift_bridgeObjectRetain();
  unint64_t v182 = sub_228B0079C(v181);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v182 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_228BAD9F8();
    sub_228AD25BC(0, (unint64_t *)&qword_268293000);
    unint64_t v183 = v182;
    goto LABEL_100;
  }
LABEL_141:
  sub_228AD25BC(0, (unint64_t *)&qword_268293000);
  swift_bridgeObjectRetain();
  unint64_t v183 = sub_228BAD948();
  swift_bridgeObjectRelease();
LABEL_100:
  swift_bridgeObjectRelease();
  if (sub_228AFFB54(v183))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
    uint64_t v184 = (void *)sub_228BAD498();
    objc_msgSend(v268, sel_removeOverlays_, v184);
    goto LABEL_106;
  }
  if (sub_228AFFB54(v183))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
    uint64_t v184 = (void *)sub_228BAD498();
    objc_msgSend(v268, sel_removeAnnotations_, v184);
LABEL_106:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t result = v285;
  uint64_t v186 = v285[2];
  if (!v186) {
    return result;
  }
  swift_bridgeObjectRetain();
  BOOL v187 = v285;
  uint64_t v288 = v186 - 1;
  uint64_t v188 = 32;
  while (2)
  {
    uint64_t v282 = v188;
    id v189 = (long long *)((char *)v187 + v188);
    long long v191 = v189[2];
    long long v190 = v189[3];
    long long v192 = v189[1];
    long long v313 = *v189;
    long long v314 = v192;
    long long v315 = v191;
    long long v316 = v190;
    long long v194 = v189[6];
    long long v193 = v189[7];
    long long v195 = v189[5];
    long long v317 = v189[4];
    long long v318 = v195;
    long long v319 = v194;
    long long v320 = v193;
    uint64_t v298 = *((void *)&v314 + 1);
    uint64_t v299 = (void *)v314;
    uint64_t v196 = v315;
    uint64_t v197 = v316;
    LODWORD(v29__isPlatformVersionAtLeast(2, 18, 1, 0) = HIDWORD(v316);
    LODWORD(v289) = DWORD2(v316);
    uint64_t v293 = (void *)*((void *)&v317 + 1);
    uint64_t v198 = v317;
    id v294 = (id)*((void *)&v315 + 1);
    uint64_t v296 = *((void *)&v195 + 1);
    uint64_t v199 = v195;
    LODWORD(v295) = v194;
    unint64_t v300 = *((void *)&v194 + 1);
    LODWORD(v297) = v193;
    uint64_t v291 = (char *)*((void *)&v193 + 1);
    uint64_t v200 = *((void *)&v313 + 1);
    uint64_t v201 = (void *)v313;
    v304[0] = v286;
    id v202 = v286;
    sub_228B09BF8((uint64_t)&v313);
    swift_bridgeObjectRetain();
    id v203 = v201;
    char v204 = (void (*)(id *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v206 = v205;
    char v207 = swift_isUniquelyReferenced_nonNull_native();
    id v305 = *(id *)(v206 + 24);
    long long v208 = v305;
    *(void *)(v206 + 24) = 0x8000000000000000;
    uint64_t v301 = (void *)v200;
    unint64_t v210 = sub_228AD1964(v200);
    uint64_t v211 = v208[2];
    BOOL v212 = (v209 & 1) == 0;
    uint64_t v213 = v211 + v212;
    if (__OFADD__(v211, v212))
    {
      __break(1u);
LABEL_136:
      __break(1u);
      goto LABEL_137;
    }
    char v214 = v209;
    if (v208[3] >= v213)
    {
      if (v207)
      {
        long long v217 = v305;
        if (v209) {
          goto LABEL_117;
        }
      }
      else
      {
        sub_228B0464C(&qword_2682926B8);
        long long v217 = v305;
        if (v214) {
          goto LABEL_117;
        }
      }
LABEL_113:
      v217[(v210 >> 6) + 8] |= 1 << v210;
      uint64_t v218 = 8 * v210;
      *(void *)(v217[6] + v218) = v301;
      *(void *)(v217[7] + v218) = v203;
      uint64_t v219 = v217[2];
      BOOL v220 = __OFADD__(v219, 1);
      uint64_t v221 = v219 + 1;
      if (v220) {
        goto LABEL_138;
      }
      v217[2] = v221;
      swift_bridgeObjectRetain();
LABEL_118:
      *(void *)(v206 + 24) = v217;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v204(v308, 0);

      v304[0] = v202;
      id v223 = v202;
      id v224 = v203;
      swift_bridgeObjectRetain();
      uint64_t v292 = v196;
      sub_228B09CA8(v299, v298);
      id v225 = v294;
      uint64_t v226 = v293;
      swift_bridgeObjectRetain();
      sub_228ACF3A4(v296, (char)v295);
      sub_228ACF3A4(v300, v297);
      uint64_t v227 = swift_modifyAtReferenceWritableKeyPath();
      uint64_t v229 = v228;
      char v230 = swift_isUniquelyReferenced_nonNull_native();
      id v305 = *(id *)(v229 + 16);
      uint64_t v231 = v305;
      *(void *)(v229 + 16) = 0x8000000000000000;
      unint64_t v233 = sub_228AD19E0((uint64_t)v224);
      uint64_t v234 = v231[2];
      BOOL v235 = (v232 & 1) == 0;
      uint64_t v236 = v234 + v235;
      if (__OFADD__(v234, v235)) {
        goto LABEL_136;
      }
      char v237 = v232;
      uint64_t v238 = v231[3];
      id v287 = v224;
      if (v238 >= v236)
      {
        if ((v230 & 1) == 0) {
          sub_228B03D60();
        }
      }
      else
      {
        sub_228B01AC0(v236, v230);
        unint64_t v239 = sub_228AD19E0((uint64_t)v224);
        if ((v237 & 1) != (v240 & 1)) {
          goto LABEL_143;
        }
        unint64_t v233 = v239;
      }
      uint64_t v283 = v227;
      uint64_t v284 = (uint64_t)v225;
      uint64_t v241 = v305;
      if (v237)
      {
        uint64_t v242 = *((void *)v305 + 7) + 120 * v233;
        uint64_t v243 = *(void **)(v242 + 8);
        uint64_t v244 = *(void *)(v242 + 16);
        uint64_t v278 = *(void *)(v242 + 32);
        uint64_t v280 = *(void *)(v242 + 80);
        LODWORD(v279) = *(unsigned __int8 *)(v242 + 88);
        uint64_t v245 = *(void *)(v242 + 96);
        int v281 = *(unsigned __int8 *)(v242 + 104);
        swift_bridgeObjectRelease();
        sub_228B09D08(v243, v244);
        swift_bridgeObjectRelease();

        sub_228AD26A8(v280, (char)v279);
        sub_228AD26A8(v245, v281);
        uint64_t v246 = v226;
        uint64_t v248 = v298;
        id v247 = v299;
        *(void *)uint64_t v242 = v301;
        *(void *)(v242 + 8) = v247;
        uint64_t v249 = v292;
        *(void *)(v242 + 16) = v248;
        *(void *)(v242 + 24) = v249;
        *(void *)(v242 + 32) = v294;
        *(void *)(v242 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v197;
        LODWORD(v249) = v290;
        *(_DWORD *)(v242 + 48) = v289;
        *(_DWORD *)(v242 + 52) = v249;
        *(void *)(v242 + 56) = v198;
        *(void *)(v242 + 64) = v246;
        *(void *)(v242 + 72) = v199;
        uint64_t v250 = v296;
        *(void *)(v242 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v296;
        char v251 = (char)v295;
        *(unsigned char *)(v242 + 88) = (_BYTE)v295;
        *(void *)(v242 + 96) = v300;
        char v252 = v297;
        *(unsigned char *)(v242 + 104) = v297;
        *(void *)(v242 + 112) = v291;
        id v253 = v287;
      }
      else
      {
        *((void *)v305 + (v233 >> 6) + 8) |= 1 << v233;
        id v253 = v287;
        *(void *)(v241[6] + 8 * v233) = v287;
        uint64_t v254 = v241[7] + 120 * v233;
        long long v255 = v299;
        *(void *)uint64_t v254 = v301;
        *(void *)(v254 + 8) = v255;
        uint64_t v256 = v292;
        *(void *)(v254 + 16) = v298;
        *(void *)(v254 + 24) = v256;
        *(void *)(v254 + 32) = v294;
        *(void *)(v254 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v197;
        LODWORD(v255) = v290;
        *(_DWORD *)(v254 + 48) = v289;
        *(_DWORD *)(v254 + 52) = v255;
        *(void *)(v254 + 56) = v198;
        *(void *)(v254 + 64) = v226;
        *(void *)(v254 + 72) = v199;
        uint64_t v250 = v296;
        *(void *)(v254 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v296;
        char v251 = (char)v295;
        *(unsigned char *)(v254 + 88) = (_BYTE)v295;
        *(void *)(v254 + 96) = v300;
        char v252 = v297;
        *(unsigned char *)(v254 + 104) = v297;
        *(void *)(v254 + 112) = v291;
        uint64_t v257 = v241[2];
        BOOL v220 = __OFADD__(v257, 1);
        uint64_t v258 = v257 + 1;
        if (v220) {
          goto LABEL_139;
        }
        v241[2] = v258;
        id v259 = v253;
        uint64_t v248 = v298;
      }
      *(void *)(v229 + 16) = v241;

      swift_bridgeObjectRelease();
      ((void (*)(id *, void))v283)(v308, 0);

      id v260 = v304[0];
      swift_bridgeObjectRelease();

      sub_228B09D08(v299, v248);
      swift_bridgeObjectRelease();

      sub_228AD26A8(v250, v251);
      sub_228AD26A8(v300, v252);
      if (!v288)
      {
        uint64_t v261 = v285;
        swift_bridgeObjectRelease();
        return v261;
      }
      --v288;
      uint64_t v188 = v282 + 128;
      BOOL v187 = v285;
      continue;
    }
    break;
  }
  sub_228B0288C(v213, v207, &qword_2682926B8);
  unint64_t v215 = sub_228AD1964((uint64_t)v301);
  if ((v214 & 1) == (v216 & 1))
  {
    unint64_t v210 = v215;
    long long v217 = v305;
    if ((v214 & 1) == 0) {
      goto LABEL_113;
    }
LABEL_117:
    uint64_t v222 = v217[7];

    *(void *)(v222 + 8 * v21__isPlatformVersionAtLeast(2, 18, 1, 0) = v203;
    goto LABEL_118;
  }
  sub_228BADA18();
  __break(1u);
LABEL_143:
  sub_228AD25BC(0, (unint64_t *)&qword_2682926B0);
  uint64_t result = (void *)sub_228BADA18();
  __break(1u);
  return result;
}

void *sub_228AF4BAC(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v228 = a3;
  id v230 = a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292658);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v227 = (char *)&v225 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id aBlock = v5;
  id v244 = v5;
  uint64_t v11 = (void (*)(long long *, void))swift_readAtKeyPath();
  uint64_t v240 = *(void *)(v12 + 16);
  swift_bridgeObjectRetain();
  v11(v262, 0);

  uint64_t v13 = *((void *)a2 + 2);
  uint64_t v242 = a5;
  if (!v13)
  {
    uint64_t v234 = (void *)MEMORY[0x263F8EE78];
    uint64_t v243 = (void *)MEMORY[0x263F8EE78];
    BOOL v235 = (void *)MEMORY[0x263F8EE78];
    if (a4) {
      goto LABEL_50;
    }
    goto LABEL_51;
  }
  uint64_t v229 = a4;
  uint64_t v246 = (char *)v262 + 8;
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  uint64_t v234 = (void *)MEMORY[0x263F8EE78];
  uint64_t v243 = (void *)MEMORY[0x263F8EE78];
  BOOL v235 = (void *)MEMORY[0x263F8EE78];
  uint64_t v245 = a2;
  do
  {
    long long v15 = *(_OWORD *)&a2[v14 + 80];
    v262[2] = *(_OWORD *)&a2[v14 + 64];
    v262[3] = v15;
    long long v16 = *(_OWORD *)&a2[v14 + 112];
    v262[4] = *(_OWORD *)&a2[v14 + 96];
    long long v263 = v16;
    long long v17 = *(_OWORD *)&a2[v14 + 48];
    v262[0] = *(_OWORD *)&a2[v14 + 32];
    v262[1] = v17;
    uint64_t v18 = *(void *)&a2[v14 + 40];
    id v252 = *(id *)&a2[v14 + 32];
    int v19 = *(unsigned __int16 *)&a2[v14 + 48];
    char v251 = *(void **)&a2[v14 + 56];
    uint64_t v20 = *(void *)&a2[v14 + 64];
    uint64_t v21 = *(void *)&a2[v14 + 72];
    uint64_t v22 = *(void *)&a2[v14 + 80];
    uint64_t v250 = *(void **)&a2[v14 + 88];
    uint64_t v23 = *(void *)&a2[v14 + 96];
    uint64_t v249 = *(void *)&a2[v14 + 104];
    LODWORD(v248) = a2[v14 + 112];
    id v247 = *(void **)&a2[v14 + 120];
    __int16 v265 = *((_WORD *)v246 + 4);
    uint64_t v264 = *(void *)v246;
    uint64_t v24 = *(void *)&v262[0];
    id v253 = v244;
    id v25 = v244;
    sub_228B0A030((uint64_t)v262);
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();

    uint64_t v26 = v258;
    if (v258[2] && (unint64_t v27 = sub_228AD1964(v24), (v28 & 1) != 0))
    {
      id v29 = *(id *)(v26[7] + 8 * v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v253 = v25;
      id v30 = v25;
      id v31 = v29;
      swift_getAtKeyPath();

      uint64_t v32 = v257;
      if (v257[2] && (unint64_t v33 = sub_228AD1A30((uint64_t)v31), (v34 & 1) != 0))
      {
        uint64_t v233 = v18;
        id v231 = v30;
        LODWORD(v236) = v19;
        uint64_t v35 = v32[7] + 96 * v33;
        uint64_t v36 = *(void *)v35;
        id v37 = *(void **)(v35 + 8);
        int v38 = *(unsigned __int16 *)(v35 + 16);
        id v241 = *(id *)(v35 + 24);
        unint64_t v39 = *(char **)(v35 + 56);
        char v40 = *(void **)(v35 + 72);
        int v41 = *(unsigned __int8 *)(v35 + 80);
        uint64_t v232 = *(void *)(v35 + 88);
        uint64_t v237 = v36;
        swift_bridgeObjectRetain();
        sub_228B0A008(v37, v38);
        id v238 = v241;
        unint64_t v239 = v39;
        swift_bridgeObjectRetain();
        id v241 = v40;
        sub_228ACF3A4((uint64_t)v40, v41);
        uint64_t v42 = v31;

        swift_bridgeObjectRelease();
        long long v43 = v37;
        swift_bridgeObjectRelease();
        sub_228B0A0B0((uint64_t)&v264, (uint64_t)v266);
        sub_228B0A0B0((uint64_t)v266, (uint64_t)&aBlock);
        id v253 = v37;
        __int16 v254 = v38;
        if (sub_228B9CEF4((uint64_t)&aBlock, (uint64_t)&v253))
        {
          int v44 = v41;
          if (*((void *)&v263 + 1) == v232)
          {
            uint64_t v248 = v43;
            LODWORD(v249) = v38;
            uint64_t v45 = sub_228BACAF8();
            uint64_t v46 = *(void *)(v45 - 8);
            uint64_t v47 = (uint64_t)v227;
            (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v227, v228, v45);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v45);
            id v48 = v230;
            uint64_t v250 = v42;
            int v49 = sub_228B08514(v48, v42, v229, v47, v262);
            id v51 = v50;
            id v53 = v52;
            char v251 = v54;
            sub_228AC1A50(v47, &qword_268292658);

            id v252 = v53;
            a2 = v245;
            if (v49)
            {
              uint64_t v55 = swift_allocObject();
              *(void *)(v55 + 16) = v49;
              *(void *)(v55 + 24) = v51;
              swift_retain();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v57 = (uint64_t)v241;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                uint64_t v234 = sub_228B768F8(0, v234[2] + 1, 1, v234);
              }
              unint64_t v59 = v234[2];
              unint64_t v58 = v234[3];
              if (v59 >= v58 >> 1) {
                uint64_t v234 = sub_228B768F8((void *)(v58 > 1), v59 + 1, 1, v234);
              }
              uint64_t v60 = v234;
              v234[2] = v59 + 1;
              char v61 = &v60[2 * v59];
              v61[4] = sub_228B0B0E0;
              v61[5] = v55;
              id v53 = v252;
            }
            else
            {
              uint64_t v57 = (uint64_t)v241;
            }
            int v226 = v44;
            id v247 = v51;
            if (v53)
            {
              uint64_t v76 = swift_allocObject();
              *(void *)(v76 + 16) = v53;
              *(void *)(v76 + 24) = v251;
              swift_retain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                BOOL v235 = sub_228B768F8(0, v235[2] + 1, 1, v235);
              }
              unint64_t v78 = v235[2];
              unint64_t v77 = v235[3];
              if (v78 >= v77 >> 1) {
                BOOL v235 = sub_228B768F8((void *)(v77 > 1), v78 + 1, 1, v235);
              }
              uint64_t v79 = v57;
              uint64_t v80 = v235;
              v235[2] = v78 + 1;
              char v81 = &v80[2 * v78];
              unsigned char v81[4] = sub_228B0B0E0;
              v81[5] = v76;
            }
            else
            {
              uint64_t v79 = v57;
            }
            uint64_t v82 = v250;
            uint64_t v83 = (void *)v240;
            swift_bridgeObjectRetain();
            unint64_t v84 = sub_228AD1A30((uint64_t)v82);
            char v86 = v85;
            swift_bridgeObjectRelease();
            if (v86)
            {
              char v87 = swift_isUniquelyReferenced_nonNull_native();
              id aBlock = v83;
              if ((v87 & 1) == 0)
              {
                sub_228B0418C();
                uint64_t v83 = aBlock;
              }

              uint64_t v88 = v83[7] + 96 * v84;
              uint64_t v89 = *(void **)(v88 + 8);
              uint64_t v90 = *(void **)(v88 + 24);
              uint64_t v233 = *(void *)(v88 + 56);
              uint64_t v250 = *(void **)(v88 + 72);
              LODWORD(v236) = *(unsigned __int8 *)(v88 + 80);
              __int16 v91 = *(_WORD *)(v88 + 16);
              uint64_t v240 = (uint64_t)v83;
              sub_228B02FC4(v84, (uint64_t)v83);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_228B0A024(v89, v91);
              swift_bridgeObjectRelease();

              sub_228AD26A8((uint64_t)v250, v236);
              a2 = v245;
              uint64_t v79 = (uint64_t)v241;
            }
            id v253 = v231;
            id v92 = v231;
            sub_228B0A030((uint64_t)v262);
            id v93 = v82;
            uint64_t v94 = v242;
            unint64_t v95 = (void (*)(id *, void))swift_modifyAtReferenceWritableKeyPath();
            uint64_t v97 = v96;
            char v98 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v261 = *(void **)(v97 + 16);
            *(void *)(v97 + 16) = 0x8000000000000000;
            sub_228B04C80(v262, v93, v98);
            *(void *)(v97 + 16) = v261;
            a5 = v94;

            swift_bridgeObjectRelease();
            v95(&aBlock, 0);
            sub_228AD2678((uint64_t)v252);
            sub_228AD2678((uint64_t)v49);

            id v99 = v253;
            swift_bridgeObjectRelease();

            sub_228B0A024(v248, v249);
            swift_bridgeObjectRelease();

            sub_228AD26A8(v79, v226);
            goto LABEL_33;
          }
          swift_bridgeObjectRelease();
          sub_228B0A024(v43, v38);
          swift_bridgeObjectRelease();

          uint64_t v62 = (uint64_t)v241;
          char v63 = v41;
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_228B0A024(v37, v38);
          swift_bridgeObjectRelease();

          uint64_t v62 = (uint64_t)v241;
          char v63 = v41;
        }
        sub_228AD26A8(v62, v63);

        a5 = v242;
        LOWORD(v19) = v236;
        a2 = v245;
        uint64_t v18 = v233;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        a5 = v242;
        a2 = v245;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_228B0A0B0((uint64_t)&v264, (uint64_t)v267);
    sub_228B0A0B0((uint64_t)v267, (uint64_t)&v268);
    char v64 = v269;
    if ((v269 & 0x8000) == 0)
    {
      id v65 = v268;
      if ((v269 & 0x100) != 0)
      {
        sub_228AD25BC(0, &qword_2682926D8);
        ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
        uint64_t v67 = v65[2];
        uint64_t v68 = (uint64_t)(v65 + 4);
        if ((v64 & 1) == 0)
        {
LABEL_23:
          id v69 = objc_msgSend(ObjCClassFromMetadata, sel_polylineWithPoints_count_, v68, v67);
LABEL_27:
          id v70 = v69;
          goto LABEL_28;
        }
      }
      else
      {
        ObjCClassFromMetadata = self;
        uint64_t v67 = v65[2];
        uint64_t v68 = (uint64_t)(v65 + 4);
        if ((v64 & 1) == 0) {
          goto LABEL_23;
        }
      }
      id v69 = objc_msgSend(ObjCClassFromMetadata, sel_polylineWithCoordinates_count_, v68, v67);
      goto LABEL_27;
    }
    v269 &= ~0x8000u;
    id v70 = v268;
    sub_228B0A10C((uint64_t)&v264);
LABEL_28:
    sub_228B0A030((uint64_t)v262);
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v71 = v243;
    }
    else {
      uint64_t v71 = sub_228B773B0(0, v243[2] + 1, 1, v243);
    }
    unint64_t v73 = v71[2];
    unint64_t v72 = v71[3];
    if (v73 >= v72 >> 1) {
      uint64_t v71 = sub_228B773B0((void *)(v72 > 1), v73 + 1, 1, v71);
    }
    v71[2] = v73 + 1;
    uint64_t v243 = v71;
    char v74 = &v71[13 * v73];
    id v75 = v252;
    v74[4] = v70;
    v74[5] = v75;
    v74[6] = v18;
    *((_WORD *)v74 + 28) = v19;
    v74[8] = v251;
    v74[9] = v20;
    v74[10] = v21;
    v74[11] = v22;
    v74[12] = v250;
    v74[13] = v23;
    v74[14] = v249;
    *((unsigned char *)v74 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = (_BYTE)v248;
    v74[16] = v247;
LABEL_33:
    sub_228B0A13C((uint64_t)v262);
    v14 += 96;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  if (v229)
  {
LABEL_50:
    unint64_t v100 = self;
    uint64_t v101 = swift_allocObject();
    *(void *)(v101 + 16) = v234;
    id v259 = sub_228B0B078;
    uint64_t v260 = v101;
    id aBlock = (id)MEMORY[0x263EF8330];
    uint64_t v256 = 1107296256;
    uint64_t v257 = sub_228B005F8;
    uint64_t v258 = &block_descriptor_352;
    uint64_t v102 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v103 = swift_allocObject();
    *(void *)(v103 + 16) = v235;
    id v259 = sub_228B0AF2C;
    uint64_t v260 = v103;
    id aBlock = (id)MEMORY[0x263EF8330];
    uint64_t v256 = 1107296256;
    a5 = v242;
    uint64_t v257 = sub_228B0063C;
    uint64_t v258 = &block_descriptor_359;
    unint64_t v104 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v100, sel_animateWithDuration_animations_completion_, v102, v104, 0.25);
    _Block_release(v104);
    _Block_release(v102);
  }
LABEL_51:
  uint64_t v105 = *(void *)(v240 + 64);
  uint64_t v237 = v240 + 64;
  uint64_t v106 = -1;
  uint64_t v107 = -1 << *(unsigned char *)(v240 + 32);
  uint64_t v233 = ~v107;
  if (-v107 < 64) {
    uint64_t v106 = ~(-1 << -(char)v107);
  }
  unint64_t v108 = v106 & v105;
  int64_t v236 = (unint64_t)(63 - v107) >> 6;
  swift_bridgeObjectRetain();
  id v241 = 0;
  while (2)
  {
    if (v108)
    {
      uint64_t v117 = a5;
      char v251 = (void *)((v108 - 1) & v108);
      unint64_t v118 = __clz(__rbit64(v108)) | ((void)v241 << 6);
LABEL_72:
      uint64_t v123 = *(void **)(*(void *)(v240 + 48) + 8 * v118);
      uint64_t v124 = *(void *)(v240 + 56) + 96 * v118;
      uint64_t v125 = *(void *)v124;
      long long v126 = *(void **)(v124 + 8);
      int v127 = *(unsigned __int16 *)(v124 + 16);
      long long v128 = *(void **)(v124 + 24);
      uint64_t v129 = *(void **)(v124 + 56);
      uint64_t v130 = *(void *)(v124 + 72);
      int v131 = *(unsigned __int8 *)(v124 + 80);
      id v253 = v244;
      id v132 = v244;
      swift_bridgeObjectRetain();
      id v247 = v126;
      LODWORD(v246) = v127;
      sub_228B0A008(v126, v127);
      unint64_t v133 = v128;
      uint64_t v248 = v129;
      swift_bridgeObjectRetain();
      uint64_t v250 = (void *)v130;
      LODWORD(v249) = v131;
      sub_228ACF3A4(v130, v131);
      id v252 = v123;
      swift_bridgeObjectRetain();
      a5 = v117;
      uint64_t v134 = (void (*)(id *, void))swift_modifyAtReferenceWritableKeyPath();
      uint64_t v136 = v135;
      swift_bridgeObjectRetain();
      unint64_t v137 = sub_228AD1964(v125);
      LOBYTE(v13__isPlatformVersionAtLeast(2, 18, 1, 0) = v138;
      swift_bridgeObjectRelease();
      uint64_t v245 = v133;
      if (v130)
      {
        char v139 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v140 = *(void *)(v136 + 24);
        uint64_t v261 = (void *)v140;
        *(void *)(v136 + 24) = 0x8000000000000000;
        if ((v139 & 1) == 0)
        {
          sub_228B0464C(&qword_2682926E0);
          uint64_t v140 = (uint64_t)v261;
        }
        swift_bridgeObjectRelease();
        unint64_t v141 = *(void **)(*(void *)(v140 + 56) + 8 * v137);
        sub_228B03380(v137, v140);
        *(void *)(v136 + 24) = v140;

        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      id v114 = v252;
      v134(&aBlock, 0);

      id v253 = v132;
      id v142 = v132;
      long long v115 = (char *)swift_modifyAtReferenceWritableKeyPath();
      uint64_t v144 = v143;
      swift_bridgeObjectRetain();
      unint64_t v145 = sub_228AD1A30((uint64_t)v114);
      char v147 = v146;
      swift_bridgeObjectRelease();
      if (v147)
      {
        unint64_t v239 = v115;
        int v148 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v149 = *(void *)(v144 + 16);
        uint64_t v261 = (void *)v149;
        *(void *)(v144 + 16) = 0x8000000000000000;
        if (!v148)
        {
          sub_228B0418C();
          uint64_t v149 = (uint64_t)v261;
        }

        uint64_t v109 = *(void *)(v149 + 56) + 96 * v145;
        uint64_t v110 = *(void **)(v109 + 8);
        long long v111 = *(void **)(v109 + 24);
        uint64_t v112 = *(void *)(v109 + 72);
        LODWORD(v238) = *(unsigned __int8 *)(v109 + 80);
        __int16 v113 = *(_WORD *)(v109 + 16);
        sub_228B02FC4(v145, v149);
        *(void *)(v144 + 16) = v149;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_228B0A024(v110, v113);
        swift_bridgeObjectRelease();

        sub_228AD26A8(v112, (char)v238);
        a5 = v242;
        id v114 = v252;
        long long v115 = v239;
      }
      ((void (*)(id *, void))v115)(&aBlock, 0);
      id v116 = v253;
      swift_bridgeObjectRelease();

      sub_228B0A024(v247, (__int16)v246);
      swift_bridgeObjectRelease();

      sub_228AD26A8((uint64_t)v250, v249);
      unint64_t v108 = (unint64_t)v251;
      continue;
    }
    break;
  }
  uint64_t v119 = (uint64_t)v241 + 1;
  if (__OFADD__(v241, 1))
  {
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
    goto LABEL_120;
  }
  if (v119 >= v236) {
    goto LABEL_79;
  }
  unint64_t v120 = *(void *)(v237 + 8 * v119);
  uint64_t v121 = (uint64_t)v241 + 1;
  if (v120) {
    goto LABEL_71;
  }
  uint64_t v121 = (uint64_t)v241 + 2;
  if ((uint64_t)v241 + 2 >= v236) {
    goto LABEL_79;
  }
  unint64_t v120 = *(void *)(v237 + 8 * v121);
  if (v120) {
    goto LABEL_71;
  }
  uint64_t v121 = (uint64_t)v241 + 3;
  if ((uint64_t)v241 + 3 >= v236) {
    goto LABEL_79;
  }
  unint64_t v120 = *(void *)(v237 + 8 * v121);
  if (v120)
  {
LABEL_71:
    uint64_t v117 = a5;
    char v251 = (void *)((v120 - 1) & v120);
    unint64_t v118 = __clz(__rbit64(v120)) + (v121 << 6);
    id v241 = (id)v121;
    goto LABEL_72;
  }
  uint64_t v122 = (char *)v241 + 4;
  if ((uint64_t)v241 + 4 < v236)
  {
    unint64_t v120 = *(void *)(v237 + 8 * (void)v122);
    if (!v120)
    {
      while (1)
      {
        uint64_t v121 = (uint64_t)(v122 + 1);
        if (__OFADD__(v122, 1)) {
          goto LABEL_119;
        }
        if (v121 >= v236) {
          goto LABEL_79;
        }
        unint64_t v120 = *(void *)(v237 + 8 * v121);
        ++v122;
        if (v120) {
          goto LABEL_71;
        }
      }
    }
    uint64_t v121 = (uint64_t)v241 + 4;
    goto LABEL_71;
  }
LABEL_79:
  sub_228AC98B8();
  uint64_t v150 = swift_bridgeObjectRetain();
  unint64_t v151 = sub_228B0079C(v150);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v151 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_228BAD9F8();
    sub_228AD25BC(0, (unint64_t *)&qword_268293000);
    unint64_t v152 = v151;
    goto LABEL_81;
  }
LABEL_120:
  sub_228AD25BC(0, (unint64_t *)&qword_268293000);
  swift_bridgeObjectRetain();
  unint64_t v152 = sub_228BAD948();
  swift_bridgeObjectRelease();
LABEL_81:
  swift_bridgeObjectRelease();
  if (sub_228AFFB54(v152))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
    unint64_t v153 = (void *)sub_228BAD498();
    objc_msgSend(v230, sel_removeOverlays_, v153);
    goto LABEL_87;
  }
  if (sub_228AFFB54(v152))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
    unint64_t v153 = (void *)sub_228BAD498();
    objc_msgSend(v230, sel_removeAnnotations_, v153);
LABEL_87:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t result = v243;
  unint64_t v155 = (char *)v243[2];
  if (!v155) {
    return result;
  }
  swift_bridgeObjectRetain();
  char v156 = 0;
  while (2)
  {
    uint64_t v245 = v155;
    id v241 = v156;
    char v168 = *(void **)&v156[(void)v243 + 32];
    uint64_t v169 = *(void *)&v156[(void)v243 + 40];
    uint64_t v170 = *(void **)&v156[(void)v243 + 48];
    int v171 = *(unsigned __int16 *)&v156[(void)v243 + 56];
    uint64_t v172 = *(char **)&v156[(void)v243 + 64];
    uint64_t v174 = *(void *)&v156[(void)v243 + 72];
    uint64_t v173 = *(void *)&v156[(void)v243 + 80];
    uint64_t v175 = *(void *)&v156[(void)v243 + 88];
    uint64_t v176 = *(void *)&v156[(void)v243 + 96];
    uint64_t v177 = *(void *)&v156[(void)v243 + 104];
    char v178 = *(void **)&v156[(void)v243 + 112];
    int v179 = v156[(void)v243 + 120];
    id v247 = *(void **)&v156[(void)v243 + 128];
    id v253 = v244;
    id v180 = v244;
    id v181 = v168;
    swift_bridgeObjectRetain();
    char v251 = v170;
    LODWORD(v25__isPlatformVersionAtLeast(2, 18, 1, 0) = v171;
    sub_228B0A008(v170, v171);
    uint64_t v246 = v172;
    unint64_t v182 = v172;
    uint64_t v249 = v176;
    swift_bridgeObjectRetain();
    uint64_t v248 = v178;
    LODWORD(v252) = v179;
    sub_228ACF3A4((uint64_t)v178, v179);
    swift_bridgeObjectRetain();
    id v183 = v181;
    uint64_t v184 = (void (*)(id *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v186 = v185;
    char v187 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v261 = *(void **)(v186 + 24);
    uint64_t v188 = v261;
    *(void *)(v186 + 24) = 0x8000000000000000;
    unint64_t v190 = sub_228AD1964(v169);
    uint64_t v191 = v188[2];
    BOOL v192 = (v189 & 1) == 0;
    uint64_t v193 = v191 + v192;
    if (__OFADD__(v191, v192))
    {
      __break(1u);
LABEL_115:
      __break(1u);
      goto LABEL_116;
    }
    char v194 = v189;
    if (v188[3] >= v193)
    {
      if ((v187 & 1) == 0) {
        sub_228B0464C(&qword_2682926E0);
      }
      goto LABEL_98;
    }
    sub_228B0288C(v193, v187, &qword_2682926E0);
    unint64_t v195 = sub_228AD1964(v169);
    if ((v194 & 1) == (v196 & 1))
    {
      unint64_t v190 = v195;
LABEL_98:
      uint64_t v197 = v261;
      if (v194)
      {
        uint64_t v198 = v261[7];

        *(void *)(v198 + 8 * v19__isPlatformVersionAtLeast(2, 18, 1, 0) = v183;
      }
      else
      {
        v261[(v190 >> 6) + 8] |= 1 << v190;
        uint64_t v199 = 8 * v190;
        *(void *)(v197[6] + v199) = v169;
        *(void *)(v197[7] + v199) = v183;
        uint64_t v200 = v197[2];
        BOOL v201 = __OFADD__(v200, 1);
        uint64_t v202 = v200 + 1;
        if (v201) {
          goto LABEL_117;
        }
        v197[2] = v202;
        swift_bridgeObjectRetain();
      }
      *(void *)(v186 + 24) = v197;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v184(&aBlock, 0);

      id v253 = v180;
      id v203 = v180;
      id v204 = v183;
      swift_bridgeObjectRetain();
      sub_228B0A008(v251, (__int16)v250);
      uint64_t v205 = v182;
      swift_bridgeObjectRetain();
      uint64_t v163 = (uint64_t)v248;
      char v166 = (char)v252;
      sub_228ACF3A4((uint64_t)v248, (char)v252);
      uint64_t v240 = swift_modifyAtReferenceWritableKeyPath();
      uint64_t v207 = v206;
      char v208 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v261 = *(void **)(v207 + 16);
      char v209 = v261;
      *(void *)(v207 + 16) = 0x8000000000000000;
      unint64_t v211 = sub_228AD1A30((uint64_t)v204);
      uint64_t v212 = v209[2];
      BOOL v213 = (v210 & 1) == 0;
      uint64_t v214 = v212 + v213;
      if (__OFADD__(v212, v213)) {
        goto LABEL_115;
      }
      char v215 = v210;
      uint64_t v216 = v209[3];
      unint64_t v239 = v205;
      if (v216 >= v214)
      {
        if ((v208 & 1) == 0) {
          sub_228B0418C();
        }
      }
      else
      {
        sub_228B02170(v214, v208);
        unint64_t v217 = sub_228AD1A30((uint64_t)v204);
        if ((v215 & 1) != (v218 & 1)) {
          goto LABEL_122;
        }
        unint64_t v211 = v217;
      }
      uint64_t v219 = v261;
      if (v215)
      {
        uint64_t v157 = v261[7] + 96 * v211;
        uint64_t v158 = *(void **)(v157 + 8);
        uint64_t v159 = *(void **)(v157 + 24);
        id v238 = *(id *)(v157 + 72);
        char v160 = *(unsigned char *)(v157 + 80);
        __int16 v161 = *(_WORD *)(v157 + 16);
        swift_bridgeObjectRelease();
        __int16 v162 = v161;
        uint64_t v163 = (uint64_t)v248;
        sub_228B0A024(v158, v162);
        swift_bridgeObjectRelease();

        sub_228AD26A8((uint64_t)v238, v160);
        uint64_t v164 = v251;
        *(void *)uint64_t v157 = v169;
        *(void *)(v157 + 8) = v164;
        __int16 v165 = (__int16)v250;
        *(_WORD *)(v157 + 16) = (_WORD)v250;
        *(void *)(v157 + 24) = v246;
        *(void *)(v157 + 32) = v174;
        *(void *)(v157 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v173;
        *(void *)(v157 + 48) = v175;
        *(void *)(v157 + 56) = v249;
        *(void *)(v157 + 64) = v177;
        *(void *)(v157 + 72) = v163;
        *(unsigned char *)(v157 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = (_BYTE)v252;
        *(void *)(v157 + 88) = v247;
        char v166 = (char)v252;
      }
      else
      {
        v261[(v211 >> 6) + 8] |= 1 << v211;
        *(void *)(v219[6] + 8 * v211) = v204;
        uint64_t v220 = v219[7] + 96 * v211;
        uint64_t v164 = v251;
        *(void *)uint64_t v220 = v169;
        *(void *)(v220 + 8) = v164;
        __int16 v165 = (__int16)v250;
        *(_WORD *)(v220 + 16) = (_WORD)v250;
        *(void *)(v220 + 24) = v246;
        *(void *)(v220 + 32) = v174;
        *(void *)(v220 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v173;
        *(void *)(v220 + 48) = v175;
        *(void *)(v220 + 56) = v249;
        *(void *)(v220 + 64) = v177;
        *(void *)(v220 + 72) = v163;
        *(unsigned char *)(v220 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v166;
        *(void *)(v220 + 88) = v247;
        uint64_t v221 = v219[2];
        BOOL v201 = __OFADD__(v221, 1);
        uint64_t v222 = v221 + 1;
        if (v201) {
          goto LABEL_118;
        }
        v219[2] = v222;
        id v223 = v204;
      }
      *(void *)(v207 + 16) = v219;

      swift_bridgeObjectRelease();
      ((void (*)(id *, void))v240)(&aBlock, 0);

      id v167 = v253;
      swift_bridgeObjectRelease();

      sub_228B0A024(v164, v165);
      swift_bridgeObjectRelease();

      sub_228AD26A8(v163, v166);
      char v156 = (char *)v241 + 104;
      unint64_t v155 = v245 - 1;
      if (v245 == (char *)1)
      {
        id v224 = v243;
        swift_bridgeObjectRelease();
        return v224;
      }
      continue;
    }
    break;
  }
  sub_228BADA18();
  __break(1u);
LABEL_122:
  sub_228AD25BC(0, &qword_2682926D0);
  uint64_t result = (void *)sub_228BADA18();
  __break(1u);
  return result;
}

uint64_t sub_228AF65A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v246 = a4;
  uint64_t v244 = a3;
  id v245 = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292658);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v243 = (char *)&v238 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v261 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682926F8);
  uint64_t v262 = *(void *)(v261 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v261);
  long long v274 = (uint64_t *)((char *)&v238 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  __int16 v265 = (void **)((char *)&v238 - v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292700);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  long long v16 = (char *)&v238 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v242 = (uint64_t)&v238 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v241 = (uint64_t)&v238 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v238 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v258 = (uint64_t)&v238 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v264 = (uint64_t)&v238 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v266 = (char *)&v238 - v28;
  uint64_t v29 = type metadata accessor for UserAnnotationViewModel(0);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v240 = (uint64_t)&v238 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v251 = (uint64_t)&v238 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  id v37 = (uint64_t *)((char *)&v238 - v36);
  uint64_t v38 = MEMORY[0x270FA5388](v35);
  uint64_t v263 = (uint64_t)&v238 - v39;
  MEMORY[0x270FA5388](v38);
  uint64_t v275 = (uint64_t *)((char *)&v238 - v40);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292708);
  uint64_t v42 = MEMORY[0x270FA5388](v41 - 8);
  __int16 v269 = (char *)&v238 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  id v268 = (void **)((char *)&v238 - v44);
  id v285 = v5;
  id v276 = v5;
  uint64_t v45 = (void (*)(uint64_t *, void))swift_readAtKeyPath();
  uint64_t v267 = *(void *)(v46 + 16);
  swift_bridgeObjectRetain();
  v45(&aBlock, 0);

  uint64_t v47 = *(void *)(a2 + 16);
  uint64_t v272 = a5;
  uint64_t v273 = v30;
  uint64_t v277 = v29;
  if (!v47)
  {
    id v253 = (void *)MEMORY[0x263F8EE78];
    unint64_t v260 = MEMORY[0x263F8EE78];
    __int16 v254 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_48;
  }
  uint64_t v250 = v23;
  unint64_t v239 = v16;
  uint64_t v48 = a2 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
  int v49 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 72);
  uint64_t v257 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56);
  id v259 = (char *)(v30 + 48);
  uint64_t v238 = a2;
  swift_bridgeObjectRetain();
  unint64_t v50 = MEMORY[0x263F8EE78];
  id v253 = (void *)MEMORY[0x263F8EE78];
  __int16 v254 = (void *)MEMORY[0x263F8EE78];
  id v270 = v49;
  do
  {
    sub_228B0A230(v48, (uint64_t)v37, type metadata accessor for UserAnnotationViewModel);
    uint64_t v55 = *v37;
    id v285 = v276;
    id v56 = v276;
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();

    uint64_t v57 = v281;
    if (!v281[2] || (unint64_t v58 = sub_228AD1964(v55), (v59 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_12:
      id v71 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MapBridgingUserAnnotation()), sel_init);
      uint64_t v72 = (uint64_t)v274 + *(int *)(v261 + 48);
      *long long v274 = v71;
      sub_228B0A230((uint64_t)v37, v72, type metadata accessor for UserAnnotationViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v50 = sub_228B774DC(0, *(void *)(v50 + 16) + 1, 1, v50);
      }
      unint64_t v74 = *(void *)(v50 + 16);
      unint64_t v73 = *(void *)(v50 + 24);
      if (v74 >= v73 >> 1) {
        unint64_t v50 = sub_228B774DC(v73 > 1, v74 + 1, 1, v50);
      }
      *(void *)(v50 + 16) = v74 + 1;
      sub_228ACD8BC((uint64_t)v274, v50+ ((*(unsigned __int8 *)(v262 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v262 + 80))+ *(void *)(v262 + 72) * v74, &qword_2682926F8);
      sub_228B0A300((uint64_t)v37, type metadata accessor for UserAnnotationViewModel);
      goto LABEL_5;
    }
    unint64_t v260 = v50;
    id v60 = *(id *)(v57[7] + 8 * v58);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v285 = v56;
    char v61 = (char *)v56;
    id v62 = v60;
    swift_getAtKeyPath();
    long long v255 = v61;

    char v63 = v280;
    if (v280[2])
    {
      unint64_t v64 = sub_228AD1A80((uint64_t)v62);
      uint64_t v65 = (uint64_t)v250;
      uint64_t v66 = v277;
      if (v67)
      {
        sub_228B0A230(v63[7] + v64 * (void)v270, (uint64_t)v250, type metadata accessor for UserAnnotationViewModel);
        uint64_t v68 = *v257;
        uint64_t v69 = v65;
        uint64_t v70 = 0;
      }
      else
      {
        uint64_t v68 = *v257;
        uint64_t v69 = (uint64_t)v250;
        uint64_t v70 = 1;
      }
    }
    else
    {
      uint64_t v68 = *v257;
      uint64_t v65 = (uint64_t)v250;
      uint64_t v69 = (uint64_t)v250;
      uint64_t v70 = 1;
      uint64_t v66 = v277;
    }
    uint64_t v271 = v68;
    v68(v69, v70, 1, v66);
    unint64_t v50 = v260;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    id v75 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v259;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v259)(v65, 1, v66) == 1)
    {

      sub_228AC1A50(v65, &qword_268292700);
      int v49 = v270;
      goto LABEL_12;
    }
    id v247 = v75;
    sub_228B0A298(v65, v251, type metadata accessor for UserAnnotationViewModel);
    uint64_t v76 = sub_228BACAF8();
    uint64_t v77 = *(void *)(v76 - 8);
    uint64_t v78 = (uint64_t)v243;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v243, v244, v76);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56))(v78, 0, 1, v76);
    id v79 = v245;
    uint64_t v80 = sub_228B08AF8(v79, v62, v246, v78, (uint64_t)v37);
    uint64_t v82 = v81;
    uint64_t v256 = v83;
    uint64_t v252 = v84;
    sub_228AC1A50(v78, &qword_268292658);

    uint64_t v248 = v82;
    if (v80)
    {
      uint64_t v85 = swift_allocObject();
      *(void *)(v85 + 16) = v80;
      *(void *)(v85 + 24) = v82;
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v87 = v267;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        id v253 = sub_228B768F8(0, v253[2] + 1, 1, v253);
      }
      unint64_t v89 = v253[2];
      unint64_t v88 = v253[3];
      if (v89 >= v88 >> 1) {
        id v253 = sub_228B768F8((void *)(v88 > 1), v89 + 1, 1, v253);
      }
      uint64_t v90 = v253;
      v253[2] = v89 + 1;
      __int16 v91 = &v90[2 * v89];
      v91[4] = sub_228B0B0E0;
      v91[5] = v85;
    }
    else
    {
      uint64_t v87 = v267;
    }
    uint64_t v92 = v256;
    if (v256)
    {
      uint64_t v93 = swift_allocObject();
      *(void *)(v93 + 16) = v92;
      *(void *)(v93 + 24) = v252;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        __int16 v254 = sub_228B768F8(0, v254[2] + 1, 1, v254);
      }
      unint64_t v95 = v254[2];
      unint64_t v94 = v254[3];
      if (v95 >= v94 >> 1) {
        __int16 v254 = sub_228B768F8((void *)(v94 > 1), v95 + 1, 1, v254);
      }
      uint64_t v96 = v254;
      v254[2] = v95 + 1;
      uint64_t v97 = &v96[2 * v95];
      v97[4] = sub_228B0B0E0;
      v97[5] = v93;
    }
    swift_bridgeObjectRetain();
    unint64_t v98 = sub_228AD1A80((uint64_t)v62);
    char v100 = v99;
    swift_bridgeObjectRelease();
    uint64_t v249 = v80;
    if (v100)
    {
      char v101 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t aBlock = v87;
      uint64_t v102 = v270;
      if ((v101 & 1) == 0)
      {
        sub_228B043EC(type metadata accessor for UserAnnotationViewModel, &qword_268292720, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel);
        uint64_t v87 = aBlock;
      }

      uint64_t v103 = v241;
      sub_228B0A298(*(void *)(v87 + 56) + v98 * (void)v102, v241, type metadata accessor for UserAnnotationViewModel);
      uint64_t v267 = v87;
      sub_228B03184(v98, v87, type metadata accessor for UserAnnotationViewModel);
      swift_bridgeObjectRelease();
      uint64_t v104 = v277;
      uint64_t v105 = v271;
      v271(v103, 0, 1, v277);
    }
    else
    {
      uint64_t v103 = v241;
      uint64_t v104 = v277;
      uint64_t v105 = v271;
      v271(v241, 1, 1, v277);
    }
    sub_228AC1A50(v103, &qword_268292700);
    uint64_t v106 = v242;
    sub_228B0A230((uint64_t)v37, v242, type metadata accessor for UserAnnotationViewModel);
    v105(v106, 0, 1, v104);
    id v285 = v255;
    uint64_t v107 = v255;
    id v108 = v62;
    long long v255 = (char *)swift_modifyAtReferenceWritableKeyPath();
    uint64_t v110 = v109;
    if (v247(v106, 1, v104) == 1)
    {
      sub_228AC1A50(v106, &qword_268292700);
      swift_bridgeObjectRetain();
      unint64_t v111 = sub_228AD1A80((uint64_t)v108);
      char v113 = v112;
      swift_bridgeObjectRelease();
      int v49 = v270;
      if (v113)
      {
        char v114 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v115 = *(void *)(v110 + 16);
        uint64_t v284 = (void *)v115;
        *(void *)(v110 + 16) = 0x8000000000000000;
        if ((v114 & 1) == 0)
        {
          sub_228B043EC(type metadata accessor for UserAnnotationViewModel, &qword_268292720, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel);
          uint64_t v115 = (uint64_t)v284;
        }

        uint64_t v116 = (uint64_t)v239;
        sub_228B0A298(*(void *)(v115 + 56) + v111 * (void)v49, (uint64_t)v239, type metadata accessor for UserAnnotationViewModel);
        sub_228B03184(v111, v115, type metadata accessor for UserAnnotationViewModel);
        *(void *)(v110 + 16) = v115;
        swift_bridgeObjectRelease();
        uint64_t v117 = 0;
      }
      else
      {
        uint64_t v117 = 1;
        uint64_t v116 = (uint64_t)v239;
      }
      v271(v116, v117, 1, v277);

      sub_228AC1A50(v116, &qword_268292700);
      unint64_t v50 = v260;
    }
    else
    {
      uint64_t v51 = v106;
      uint64_t v52 = v240;
      sub_228B0A298(v51, v240, type metadata accessor for UserAnnotationViewModel);
      char v53 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v284 = *(void **)(v110 + 16);
      *(void *)(v110 + 16) = 0x8000000000000000;
      sub_228B04E18(v52, v108, v53);
      *(void *)(v110 + 16) = v284;

      swift_bridgeObjectRelease();
      unint64_t v50 = v260;
      int v49 = v270;
    }
    uint64_t v54 = v256;
    ((void (*)(uint64_t *, void))v255)(&aBlock, 0);
    sub_228AD2678(v54);
    sub_228AD2678((uint64_t)v249);

    sub_228B0A300(v251, type metadata accessor for UserAnnotationViewModel);
    sub_228B0A300((uint64_t)v37, type metadata accessor for UserAnnotationViewModel);
    a5 = v272;
LABEL_5:
    v48 += (uint64_t)v49;
    --v47;
  }
  while (v47);
  unint64_t v260 = v50;
  swift_bridgeObjectRelease();
LABEL_48:
  unint64_t v118 = v269;
  if (v246)
  {
    uint64_t v119 = self;
    uint64_t v120 = swift_allocObject();
    *(void *)(v120 + 16) = v253;
    uint64_t v282 = sub_228B0B078;
    uint64_t v283 = v120;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v279 = 1107296256;
    uint64_t v280 = sub_228B005F8;
    int v281 = &block_descriptor_386;
    uint64_t v121 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v122 = swift_allocObject();
    *(void *)(v122 + 16) = v254;
    uint64_t v282 = sub_228B0AF2C;
    uint64_t v283 = v122;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v279 = 1107296256;
    a5 = v272;
    uint64_t v280 = sub_228B0063C;
    int v281 = &block_descriptor_393;
    uint64_t v123 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v119, sel_animateWithDuration_animations_completion_, v121, v123, 0.25);
    _Block_release(v123);
    _Block_release(v121);
  }
  uint64_t v124 = a5;
  uint64_t v125 = *(void *)(v267 + 64);
  uint64_t v257 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v267 + 64);
  uint64_t v126 = -1;
  uint64_t v127 = -1 << *(unsigned char *)(v267 + 32);
  uint64_t v256 = ~v127;
  if (-v127 < 64) {
    uint64_t v126 = ~(-1 << -(char)v127);
  }
  unint64_t v128 = v126 & v125;
  id v270 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v273 + 56);
  id v259 = (char *)((unint64_t)(63 - v127) >> 6);
  long long v255 = v259 - 1;
  swift_bridgeObjectRetain();
  uint64_t v129 = 0;
  uint64_t v130 = (uint64_t *)&unk_268292710;
LABEL_55:
  if (v128)
  {
    long long v274 = (void *)((v128 - 1) & v128);
    unint64_t v132 = __clz(__rbit64(v128)) | (v129 << 6);
    uint64_t v133 = v129;
LABEL_57:
    uint64_t v134 = *(void *)(v267 + 56);
    uint64_t v135 = *(void **)(*(void *)(v267 + 48) + 8 * v132);
    *unint64_t v118 = v135;
    uint64_t v136 = v134 + *(void *)(v273 + 72) * v132;
    uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(v130);
    sub_228B0A230(v136, (uint64_t)v118 + *(int *)(v137 + 48), type metadata accessor for UserAnnotationViewModel);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v137 - 8) + 56))(v118, 0, 1, v137);
    id v138 = v135;
    char v139 = (void (*)(uint64_t, void, uint64_t, uint64_t))v133;
    goto LABEL_76;
  }
  uint64_t v133 = v129 + 1;
  if (__OFADD__(v129, 1))
  {
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
    goto LABEL_133;
  }
  char v139 = (void (*)(uint64_t, void, uint64_t, uint64_t))v129;
  if (v133 >= (uint64_t)v259) {
    goto LABEL_75;
  }
  unint64_t v140 = (unint64_t)v257[v133];
  if (v140)
  {
LABEL_61:
    long long v274 = (void *)((v140 - 1) & v140);
    unint64_t v132 = __clz(__rbit64(v140)) + (v133 << 6);
    goto LABEL_57;
  }
  uint64_t v141 = v129 + 2;
  char v139 = (void (*)(uint64_t, void, uint64_t, uint64_t))(v129 + 1);
  if (v129 + 2 >= (uint64_t)v259) {
    goto LABEL_75;
  }
  unint64_t v140 = (unint64_t)v257[v141];
  if (v140) {
    goto LABEL_64;
  }
  char v139 = (void (*)(uint64_t, void, uint64_t, uint64_t))(v129 + 2);
  if (v129 + 3 >= (uint64_t)v259) {
    goto LABEL_75;
  }
  unint64_t v140 = (unint64_t)v257[v129 + 3];
  if (v140)
  {
    uint64_t v133 = v129 + 3;
    goto LABEL_61;
  }
  uint64_t v141 = v129 + 4;
  char v139 = (void (*)(uint64_t, void, uint64_t, uint64_t))(v129 + 3);
  if (v129 + 4 >= (uint64_t)v259) {
    goto LABEL_75;
  }
  unint64_t v140 = (unint64_t)v257[v141];
  if (v140)
  {
LABEL_64:
    uint64_t v133 = v141;
    goto LABEL_61;
  }
  while (2)
  {
    uint64_t v133 = v141 + 1;
    if (__OFADD__(v141, 1))
    {
      __break(1u);
LABEL_135:
      sub_228BADA18();
      __break(1u);
LABEL_136:
      type metadata accessor for MapBridgingUserAnnotation();
      uint64_t result = sub_228BADA18();
      __break(1u);
    }
    else
    {
      if (v133 < (uint64_t)v259)
      {
        unint64_t v140 = (unint64_t)v257[v133];
        ++v141;
        if (v140) {
          goto LABEL_61;
        }
        continue;
      }
      char v139 = (void (*)(uint64_t, void, uint64_t, uint64_t))v255;
LABEL_75:
      uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(v130);
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v142 - 8) + 56))(v118, 1, 1, v142);
      long long v274 = 0;
LABEL_76:
      uint64_t v143 = v268;
      sub_228ACD8BC((uint64_t)v118, (uint64_t)v268, &qword_268292708);
      uint64_t v144 = v130;
      uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(v130);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v145 - 8) + 48))(v143, 1, v145) != 1)
      {
        uint64_t v271 = v139;
        char v146 = *v143;
        uint64_t v147 = (uint64_t)v143 + *(int *)(v145 + 48);
        int v148 = v275;
        sub_228B0A298(v147, (uint64_t)v275, type metadata accessor for UserAnnotationViewModel);
        uint64_t v149 = *v148;
        id v285 = v276;
        id v150 = v276;
        swift_bridgeObjectRetain();
        uint64_t v151 = v124;
        unint64_t v152 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
        uint64_t v154 = v153;
        swift_bridgeObjectRetain();
        unint64_t v155 = sub_228AD1964(v149);
        char v157 = v156;
        swift_bridgeObjectRelease();
        if (v157)
        {
          char v158 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v159 = *(void *)(v154 + 24);
          uint64_t v284 = (void *)v159;
          *(void *)(v154 + 24) = 0x8000000000000000;
          if ((v158 & 1) == 0)
          {
            sub_228B0464C(&qword_268292718);
            uint64_t v159 = (uint64_t)v284;
          }
          swift_bridgeObjectRelease();
          char v160 = *(void **)(*(void *)(v159 + 56) + 8 * v155);
          sub_228B03380(v155, v159);
          *(void *)(v154 + 24) = v159;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v151 = v272;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v152(&aBlock, 0);

        id v285 = v150;
        id v161 = v150;
        __int16 v162 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
        uint64_t v164 = v163;
        swift_bridgeObjectRetain();
        unint64_t v165 = sub_228AD1A80((uint64_t)v146);
        char v167 = v166;
        swift_bridgeObjectRelease();
        uint64_t v168 = (uint64_t)v266;
        if (v167)
        {
          int v169 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v170 = *(void *)(v164 + 16);
          uint64_t v284 = (void *)v170;
          *(void *)(v164 + 16) = 0x8000000000000000;
          if (!v169)
          {
            sub_228B043EC(type metadata accessor for UserAnnotationViewModel, &qword_268292720, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel);
            uint64_t v170 = (uint64_t)v284;
          }
          uint64_t v124 = v151;

          sub_228B0A298(*(void *)(v170 + 56) + *(void *)(v273 + 72) * v165, v168, type metadata accessor for UserAnnotationViewModel);
          sub_228B03184(v165, v170, type metadata accessor for UserAnnotationViewModel);
          *(void *)(v164 + 16) = v170;
          swift_bridgeObjectRelease();
          uint64_t v131 = 0;
        }
        else
        {
          uint64_t v124 = v151;
          uint64_t v131 = 1;
        }
        (*v270)(v168, v131, 1, v277);
        sub_228AC1A50(v168, &qword_268292700);
        v162(&aBlock, 0);

        sub_228B0A300((uint64_t)v275, type metadata accessor for UserAnnotationViewModel);
        uint64_t v129 = (uint64_t)v271;
        unint64_t v128 = (unint64_t)v274;
        unint64_t v118 = v269;
        uint64_t v130 = v144;
        goto LABEL_55;
      }
      sub_228AC98B8();
      uint64_t v171 = swift_bridgeObjectRetain();
      unint64_t v172 = sub_228B00690(v171);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!(v172 >> 62))
      {
        swift_bridgeObjectRetain();
        sub_228BAD9F8();
        sub_228AD25BC(0, (unint64_t *)&qword_268293000);
        unint64_t v173 = v172;
        goto LABEL_88;
      }
LABEL_133:
      sub_228AD25BC(0, (unint64_t *)&qword_268293000);
      swift_bridgeObjectRetain();
      unint64_t v173 = sub_228BAD948();
      swift_bridgeObjectRelease();
LABEL_88:
      swift_bridgeObjectRelease();
      if (sub_228AFFB54(v173))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
        uint64_t v174 = (void *)sub_228BAD498();
        objc_msgSend(v245, sel_removeOverlays_, v174);
        goto LABEL_92;
      }
      if (sub_228AFFB54(v173))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
        uint64_t v174 = (void *)sub_228BAD498();
        objc_msgSend(v245, sel_removeAnnotations_, v174);
LABEL_92:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      unint64_t v175 = v260;
      uint64_t v176 = *(void *)(v260 + 16);
      if (v176)
      {
        uint64_t v177 = (uint64_t *)((char *)v265 + *(int *)(v261 + 48));
        char v178 = (char *)(v260
                      + ((*(unsigned __int8 *)(v262 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v262 + 80)));
        __int16 v269 = *(char **)(v262 + 72);
        uint64_t v271 = (void (*)(uint64_t, void, uint64_t, uint64_t))(v273 + 48);
        swift_bridgeObjectRetain();
        while (1)
        {
          long long v274 = v178;
          uint64_t v275 = (uint64_t *)v176;
          id v183 = v265;
          sub_228AD2708((uint64_t)v178, (uint64_t)v265, &qword_2682926F8);
          uint64_t v184 = *v183;
          uint64_t v185 = (uint64_t)v177;
          uint64_t v186 = *v177;
          id v285 = v276;
          id v187 = v276;
          swift_bridgeObjectRetain();
          id v188 = v184;
          char v189 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
          uint64_t v191 = v190;
          char v192 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v284 = *(void **)(v191 + 24);
          uint64_t v193 = v284;
          *(void *)(v191 + 24) = 0x8000000000000000;
          unint64_t v195 = sub_228AD1964(v186);
          uint64_t v196 = v193[2];
          BOOL v197 = (v194 & 1) == 0;
          uint64_t v198 = v196 + v197;
          if (__OFADD__(v196, v197))
          {
            __break(1u);
            goto LABEL_129;
          }
          char v199 = v194;
          if (v193[3] >= v198)
          {
            if (v192)
            {
              uint64_t v202 = v284;
              if ((v194 & 1) == 0) {
                goto LABEL_102;
              }
            }
            else
            {
              sub_228B0464C(&qword_268292718);
              uint64_t v202 = v284;
              if ((v199 & 1) == 0) {
                goto LABEL_102;
              }
            }
          }
          else
          {
            sub_228B0288C(v198, v192, &qword_268292718);
            unint64_t v200 = sub_228AD1964(v186);
            if ((v199 & 1) != (v201 & 1)) {
              goto LABEL_135;
            }
            unint64_t v195 = v200;
            uint64_t v202 = v284;
            if ((v199 & 1) == 0)
            {
LABEL_102:
              v202[(v195 >> 6) + 8] |= 1 << v195;
              uint64_t v203 = 8 * v195;
              *(void *)(v202[6] + v203) = v186;
              *(void *)(v202[7] + v203) = v188;
              uint64_t v204 = v202[2];
              BOOL v205 = __OFADD__(v204, 1);
              uint64_t v206 = v204 + 1;
              if (v205) {
                goto LABEL_130;
              }
              v202[2] = v206;
              swift_bridgeObjectRetain();
              goto LABEL_107;
            }
          }
          uint64_t v207 = v202[7];

          *(void *)(v207 + 8 * v195) = v188;
LABEL_107:
          *(void *)(v191 + 24) = v202;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v189(&aBlock, 0);

          uint64_t v177 = (uint64_t *)v185;
          uint64_t v208 = v264;
          sub_228B0A230(v185, v264, type metadata accessor for UserAnnotationViewModel);
          char v209 = *v270;
          uint64_t v210 = v277;
          (*v270)(v208, 0, 1, v277);
          id v285 = v187;
          id v211 = v187;
          id v212 = v188;
          BOOL v213 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
          uint64_t v215 = v214;
          int v216 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))v271)(v208, 1, v210);
          uint64_t v217 = v273;
          if (v216 == 1)
          {
            sub_228AC1A50(v208, &qword_268292700);
            swift_bridgeObjectRetain();
            unint64_t v218 = sub_228AD1A80((uint64_t)v212);
            char v220 = v219;
            swift_bridgeObjectRelease();
            if (v220)
            {
              int v221 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v222 = *(void *)(v215 + 16);
              uint64_t v284 = (void *)v222;
              *(void *)(v215 + 16) = 0x8000000000000000;
              if (!v221)
              {
                sub_228B043EC(type metadata accessor for UserAnnotationViewModel, &qword_268292720, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel);
                uint64_t v222 = (uint64_t)v284;
              }

              uint64_t v180 = v258;
              sub_228B0A298(*(void *)(v222 + 56) + *(void *)(v217 + 72) * v218, v258, type metadata accessor for UserAnnotationViewModel);
              sub_228B03184(v218, v222, type metadata accessor for UserAnnotationViewModel);
              *(void *)(v215 + 16) = v222;
              swift_bridgeObjectRelease();
              uint64_t v179 = 0;
            }
            else
            {
              uint64_t v179 = 1;
              uint64_t v180 = v258;
            }
            v209(v180, v179, 1, v277);

            sub_228AC1A50(v180, &qword_268292700);
          }
          else
          {
            sub_228B0A298(v208, v263, type metadata accessor for UserAnnotationViewModel);
            int v223 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v284 = *(void **)(v215 + 16);
            id v224 = v284;
            *(void *)(v215 + 16) = 0x8000000000000000;
            unint64_t v226 = sub_228AD1A80((uint64_t)v212);
            uint64_t v227 = v224[2];
            BOOL v228 = (v225 & 1) == 0;
            uint64_t v229 = v227 + v228;
            if (__OFADD__(v227, v228)) {
              goto LABEL_131;
            }
            char v230 = v225;
            if (v224[3] >= v229)
            {
              if ((v223 & 1) == 0) {
                sub_228B043EC(type metadata accessor for UserAnnotationViewModel, &qword_268292720, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel);
              }
            }
            else
            {
              sub_228B02500(v229, v223, type metadata accessor for UserAnnotationViewModel, &qword_268292720, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel);
              unint64_t v231 = sub_228AD1A80((uint64_t)v212);
              if ((v230 & 1) != (v232 & 1)) {
                goto LABEL_136;
              }
              unint64_t v226 = v231;
            }
            uint64_t v177 = (uint64_t *)v185;
            uint64_t v233 = v284;
            if (v230)
            {
              sub_228B0A404(v263, v284[7] + *(void *)(v217 + 72) * v226, type metadata accessor for UserAnnotationViewModel);
            }
            else
            {
              v284[(v226 >> 6) + 8] |= 1 << v226;
              *(void *)(v233[6] + 8 * v226) = v212;
              sub_228B0A298(v263, v233[7] + *(void *)(v217 + 72) * v226, type metadata accessor for UserAnnotationViewModel);
              uint64_t v234 = v233[2];
              BOOL v205 = __OFADD__(v234, 1);
              uint64_t v235 = v234 + 1;
              if (v205) {
                goto LABEL_132;
              }
              v233[2] = v235;
              id v236 = v212;
            }
            *(void *)(v215 + 16) = v233;

            swift_bridgeObjectRelease();
          }
          unint64_t v182 = v274;
          uint64_t v181 = (uint64_t)v275;
          v213(&aBlock, 0);

          sub_228B0A300((uint64_t)v177, type metadata accessor for UserAnnotationViewModel);
          char v178 = &v269[(void)v182];
          uint64_t v176 = v181 - 1;
          if (!v176)
          {
            unint64_t v175 = v260;
            swift_bridgeObjectRelease();
            return v175;
          }
        }
      }
      return v175;
    }
    return result;
  }
}

uint64_t sub_228AF8480(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v280 = a4;
  id v279 = a1;
  uint64_t v295 = __swift_instantiateConcreteTypeFromMangledName(&qword_268293FB0);
  uint64_t v296 = *(void *)(v295 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v295);
  uint64_t v10 = (char *)&v268 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unint64_t v300 = (void **)((char *)&v268 - v11);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292750);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v268 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v278 = (uint64_t)&v268 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v277 = (uint64_t)&v268 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v289 = (uint64_t)&v268 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v293 = (uint64_t)&v268 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v299 = (uint64_t)&v268 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v302 = (char *)&v268 - v26;
  uint64_t v27 = type metadata accessor for MarkerAnnotationViewModel(0);
  uint64_t v28 = *(unsigned __int8 **)(v27 - 8);
  uint64_t v29 = *((void *)v28 + 8);
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v270 = (uint64_t)&v268 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v292 = (uint64_t)&v268 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v276 = (uint64_t)&v268 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v288 = (uint64_t)&v268 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v39 = (double *)((char *)&v268 - v38);
  uint64_t v40 = MEMORY[0x270FA5388](v37);
  uint64_t v298 = (uint64_t)&v268 - v41;
  MEMORY[0x270FA5388](v40);
  uint64_t v312 = (uint64_t *)((char *)&v268 - v42);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292758);
  uint64_t v44 = MEMORY[0x270FA5388](v43 - 8);
  uint64_t v46 = (uint64_t *)((char *)&v268 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v44);
  int64_t v304 = (void **)((char *)&v268 - v47);
  *(void *)&long long v319 = v5;
  id v314 = v5;
  uint64_t v315 = a5;
  uint64_t v48 = (void (*)(uint64_t *, void))swift_readAtKeyPath();
  uint64_t v303 = *(void *)(v49 + 16);
  swift_bridgeObjectRetain();
  v48(&aBlock, 0);

  uint64_t v50 = *(void *)(a2 + 16);
  uint64_t v313 = v27;
  char v308 = v28;
  char v307 = v46;
  if (v50)
  {
    uint64_t v51 = v28[80];
    uint64_t v52 = a2 + ((v51 + 32) & ~v51);
    uint64_t v301 = *((void *)v28 + 9);
    id v290 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
    uint64_t v291 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
    uint64_t v274 = v51 | 7;
    uint64_t v275 = (v51 + 24) & ~v51;
    unint64_t v273 = (v29 + v275 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v272 = v273 + 40;
    uint64_t v268 = a2;
    swift_bridgeObjectRetain();
    id v286 = (void *)MEMORY[0x263F8EE78];
    unint64_t v309 = MEMORY[0x263F8EE78];
    id v287 = (void *)MEMORY[0x263F8EE78];
    id v294 = v10;
    __int16 v269 = v15;
    uint64_t v297 = v39;
    while (1)
    {
      uint64_t v311 = v50;
      uint64_t v310 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v52;
      sub_228B0A230(v52, (uint64_t)v39, type metadata accessor for MarkerAnnotationViewModel);
      uint64_t v58 = *(void *)v39;
      *(void *)&long long v319 = v314;
      id v59 = v314;
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();

      id v60 = v323;
      if (!v323[2] || (unint64_t v61 = sub_228AD1964(v58), (v62 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
      id v63 = *(id *)(v60[7] + 8 * v61);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)&long long v319 = v59;
      id v64 = v59;
      id v65 = v63;
      swift_getAtKeyPath();

      uint64_t v66 = v322;
      if (!v322[2]) {
        break;
      }
      unint64_t v67 = sub_228AD1AD4((uint64_t)v65);
      uint64_t v68 = v289;
      if ((v69 & 1) == 0)
      {
        uint64_t v70 = *v290;
        goto LABEL_19;
      }
      sub_228B0A230(v66[7] + v67 * v301, v289, type metadata accessor for MarkerAnnotationViewModel);
      uint64_t v70 = *v290;
      (*v290)(v68, 0, 1, v27);
LABEL_20:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      unint64_t v95 = *v291;
      if ((*v291)(v68, 1, v27) != 1)
      {
        id v305 = v95;
        int64_t v306 = (int64_t)v70;
        id v285 = (void (*)(void, void))v64;
        sub_228B0A298(v68, v288, type metadata accessor for MarkerAnnotationViewModel);
        long long v323 = (void *)sub_228AD25BC(0, (unint64_t *)&unk_268292FB0);
        uint64_t v324 = (uint64_t (*)())&off_26DD22238;
        id v96 = v279;
        uint64_t aBlock = (uint64_t)v279;
        uint64_t v97 = (uint64_t)v39;
        unint64_t v98 = v39;
        uint64_t v99 = v276;
        sub_228B0A230(v97, v276, type metadata accessor for MarkerAnnotationViewModel);
        sub_228B099C8((uint64_t)&aBlock, (uint64_t)&v319);
        sub_228B0A230(v99, v292, type metadata accessor for MarkerAnnotationViewModel);
        sub_228B099C8((uint64_t)&v319, (uint64_t)&v316);
        uint64_t v100 = swift_allocObject();
        *(void *)(v100 + 16) = v65;
        sub_228B0A298(v99, v100 + v275, type metadata accessor for MarkerAnnotationViewModel);
        sub_228B09A30(&v319, v100 + v273);
        id v101 = v96;
        id v102 = v65;
        id v103 = v101;
        uint64_t v104 = v303;
        uint64_t v105 = v280;
        if (!v280) {
          goto LABEL_26;
        }
        swift_retain();
        objc_msgSend(v102, sel_coordinate);
        uint64_t v39 = v98;
        if (vabdd_f64(v107, v98[11]) >= 0.00000000999999994 || vabdd_f64(v106, v98[12]) >= 0.00000000999999994)
        {
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v316);
          sub_228B0A300(v292, type metadata accessor for MarkerAnnotationViewModel);
          uint64_t v110 = (void *)swift_allocObject();
          v110[2] = sub_228B0A3D4;
          v110[3] = v100;
          v110[4] = v105;
          uint64_t v111 = swift_allocObject();
          *(void *)(v111 + 16) = sub_228B0A3D4;
          *(void *)(v111 + 24) = v100;
          uint64_t v281 = v111;
          swift_retain();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);

          uint64_t v112 = swift_allocObject();
          *(void *)(v112 + 16) = sub_228B0B0D8;
          *(void *)(v112 + 24) = v110;
          char v113 = v110;
          swift_retain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          id v271 = v102;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            id v286 = sub_228B768F8(0, v286[2] + 1, 1, v286);
          }
          uint64_t v115 = v285;
          unint64_t v117 = v286[2];
          unint64_t v116 = v286[3];
          unint64_t v118 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v306;
          uint64_t v284 = v113;
          if (v117 >= v116 >> 1) {
            id v286 = sub_228B768F8((void *)(v116 > 1), v117 + 1, 1, v286);
          }
          uint64_t v119 = v281;
          uint64_t v120 = v286;
          v286[2] = v117 + 1;
          uint64_t v121 = &v120[2 * v117];
          v121[4] = sub_228B0B0E0;
          v121[5] = v112;
          uint64_t v122 = swift_allocObject();
          *(void *)(v122 + 16) = sub_228B0AF18;
          *(void *)(v122 + 24) = v119;
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v287 = sub_228B768F8(0, v287[2] + 1, 1, v287);
          }
          unint64_t v124 = v287[2];
          unint64_t v123 = v287[3];
          if (v124 >= v123 >> 1) {
            id v287 = sub_228B768F8((void *)(v123 > 1), v124 + 1, 1, v287);
          }
          uint64_t v125 = v287;
          v287[2] = v124 + 1;
          uint64_t v126 = &v125[2 * v124];
          v126[4] = sub_228B0B0E0;
          v126[5] = v122;
          uint64_t v282 = sub_228B0AF18;
          uint64_t v283 = sub_228B0B0D8;
          id v102 = v271;
        }
        else
        {
          swift_release();
LABEL_26:
          uint64_t v108 = v292;
          objc_msgSend(v102, sel_setCoordinate_, *(double *)(v292 + 88), *(double *)(v292 + 96));
          if (*(void *)(v108 + 16)) {
            uint64_t v109 = (void *)sub_228BAD3D8();
          }
          else {
            uint64_t v109 = 0;
          }
          uint64_t v39 = v297;
          objc_msgSend(v102, sel_setTitle_, v109);

          uint64_t v127 = v103;
          if (*(void *)(v108 + 32)) {
            unint64_t v128 = (void *)sub_228BAD3D8();
          }
          else {
            unint64_t v128 = 0;
          }
          objc_msgSend(v102, sel_setSubtitle_, v128);

          uint64_t v129 = v317;
          uint64_t v130 = v318;
          __swift_project_boxed_opaque_existential_1(&v316, v317);
          uint64_t v131 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v130 + 24))(v102, v129, v130);
          if (v131)
          {
            unint64_t v132 = (void *)v131;
            self;
            uint64_t v133 = (void *)swift_dynamicCastObjCClass();
            uint64_t v134 = v292;
            if (v133)
            {
              sub_228B13608(v133, 0);
              uint64_t v134 = v292;
            }
            swift_release();
          }
          else
          {
            swift_release();
            uint64_t v134 = v292;
          }
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v316);
          sub_228B0A300(v134, type metadata accessor for MarkerAnnotationViewModel);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);

          uint64_t v283 = 0;
          uint64_t v284 = 0;
          uint64_t v282 = 0;
          uint64_t v119 = 0;
          unint64_t v118 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v306;
          uint64_t v115 = v285;
          uint64_t v27 = v313;
        }
        swift_bridgeObjectRetain();
        unint64_t v135 = sub_228AD1AD4((uint64_t)v102);
        char v137 = v136;
        swift_bridgeObjectRelease();
        if (v137)
        {
          char v138 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t aBlock = v104;
          if ((v138 & 1) == 0)
          {
            sub_228B043EC(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_268292770, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel);
            uint64_t v104 = aBlock;
          }

          uint64_t v139 = v277;
          sub_228B0A298(*(void *)(v104 + 56) + v135 * v301, v277, type metadata accessor for MarkerAnnotationViewModel);
          uint64_t v303 = v104;
          sub_228B03184(v135, v104, type metadata accessor for MarkerAnnotationViewModel);
          swift_bridgeObjectRelease();
          uint64_t v140 = v139;
          uint64_t v141 = 0;
        }
        else
        {
          uint64_t v139 = v277;
          uint64_t v140 = v277;
          uint64_t v141 = 1;
        }
        v118(v140, v141, 1, v27);
        sub_228AC1A50(v139, &qword_268292750);
        uint64_t v142 = v278;
        sub_228B0A230((uint64_t)v39, v278, type metadata accessor for MarkerAnnotationViewModel);
        v118(v142, 0, 1, v27);
        *(void *)&long long v319 = v115;
        id v143 = v115;
        id v144 = v102;
        id v285 = (void (*)(void, void))swift_modifyAtReferenceWritableKeyPath();
        uint64_t v146 = v145;
        if (v305(v142, 1, v27) == 1)
        {
          uint64_t v281 = v119;
          uint64_t v147 = v118;
          sub_228AC1A50(v142, &qword_268292750);
          swift_bridgeObjectRetain();
          unint64_t v148 = sub_228AD1AD4((uint64_t)v144);
          char v150 = v149;
          swift_bridgeObjectRelease();
          if (v150)
          {
            char v151 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v152 = *(void *)(v146 + 16);
            long long v316 = (void *)v152;
            *(void *)(v146 + 16) = 0x8000000000000000;
            if ((v151 & 1) == 0)
            {
              sub_228B043EC(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_268292770, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel);
              uint64_t v152 = (uint64_t)v316;
            }

            uint64_t v153 = (uint64_t)v269;
            sub_228B0A298(*(void *)(v152 + 56) + v148 * v301, (uint64_t)v269, type metadata accessor for MarkerAnnotationViewModel);
            sub_228B03184(v148, v152, type metadata accessor for MarkerAnnotationViewModel);
            *(void *)(v146 + 16) = v152;
            swift_bridgeObjectRelease();
            uint64_t v154 = 0;
          }
          else
          {
            uint64_t v154 = 1;
            uint64_t v153 = (uint64_t)v269;
          }
          v147(v153, v154, 1, v27);

          sub_228AC1A50(v153, &qword_268292750);
          uint64_t v56 = v311;
        }
        else
        {
          uint64_t v53 = v142;
          uint64_t v54 = v270;
          sub_228B0A298(v53, v270, type metadata accessor for MarkerAnnotationViewModel);
          char v55 = swift_isUniquelyReferenced_nonNull_native();
          long long v316 = *(void **)(v146 + 16);
          *(void *)(v146 + 16) = 0x8000000000000000;
          sub_228B05024(v54, v144, v55);
          *(void *)(v146 + 16) = v316;

          swift_bridgeObjectRelease();
          uint64_t v56 = v311;
        }
        uint64_t v57 = (uint64_t)v283;
        v285(&aBlock, 0);
        sub_228AD2678((uint64_t)v282);
        sub_228AD2678(v57);

        sub_228B0A300(v288, type metadata accessor for MarkerAnnotationViewModel);
        sub_228B0A300((uint64_t)v39, type metadata accessor for MarkerAnnotationViewModel);
        uint64_t v28 = v308;
        goto LABEL_5;
      }

      sub_228AC1A50(v68, &qword_268292750);
LABEL_12:
      uint64_t v72 = *((void *)v39 + 1);
      uint64_t v71 = *((void *)v39 + 2);
      unint64_t v73 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((void *)v39 + 4);
      id v305 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((void *)v39 + 3);
      uint64_t v74 = *((void *)v39 + 11);
      uint64_t v75 = *((void *)v39 + 12);
      uint64_t v76 = (void *)*((void *)v39 + 5);
      LODWORD(v306) = *((unsigned __int8 *)v39 + 48);
      uint64_t v77 = (objc_class *)type metadata accessor for MapBridgingMarker();
      uint64_t v78 = objc_allocWithZone(v77);
      id v79 = &v78[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_title];
      *id v79 = 0;
      v79[1] = 0;
      uint64_t v80 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))&v78[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_subtitle];
      *uint64_t v80 = 0;
      v80[1] = 0;
      uint64_t v81 = OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem;
      *(void *)&v78[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem] = 0;
      uint64_t v82 = OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature;
      v78[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature] = 0;
      *id v79 = v72;
      v79[1] = v71;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v83 = v76;
      uint64_t v84 = v78;
      swift_bridgeObjectRelease();
      *uint64_t v80 = v305;
      v80[1] = v73;
      uint64_t v39 = v297;
      swift_bridgeObjectRelease();
      uint64_t v85 = &v84[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_coordinate];
      *(void *)uint64_t v85 = v74;
      *((void *)v85 + 1) = v75;
      char v86 = *(void **)&v78[v81];
      *(void *)&v78[v81] = v76;
      id v87 = v83;

      v78[v82] = v306;
      v326.receiver = v84;
      v326.super_class = v77;
      id v88 = objc_msgSendSuper2(&v326, sel_init);

      uint64_t v89 = (uint64_t)v294;
      uint64_t v90 = (uint64_t)v294 + *(int *)(v295 + 48);
      *id v294 = v88;
      sub_228B0A230((uint64_t)v39, v90, type metadata accessor for MarkerAnnotationViewModel);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v91 = v309;
      }
      else {
        unint64_t v91 = sub_228B774F0(0, *(void *)(v309 + 16) + 1, 1, v309);
      }
      unint64_t v93 = *(void *)(v91 + 16);
      unint64_t v92 = *(void *)(v91 + 24);
      uint64_t v27 = v313;
      uint64_t v28 = v308;
      uint64_t v46 = v307;
      if (v93 >= v92 >> 1) {
        unint64_t v91 = sub_228B774F0(v92 > 1, v93 + 1, 1, v91);
      }
      *(void *)(v91 + 16) = v93 + 1;
      unint64_t v94 = (*(unsigned __int8 *)(v296 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v296 + 80);
      unint64_t v309 = v91;
      sub_228ACD8BC(v89, v91 + v94 + *(void *)(v296 + 72) * v93, &qword_268293FB0);
      sub_228B0A300((uint64_t)v39, type metadata accessor for MarkerAnnotationViewModel);
      uint64_t v56 = v311;
LABEL_5:
      uint64_t v52 = (uint64_t)v310 + v301;
      uint64_t v50 = v56 - 1;
      if (!v50)
      {
        swift_bridgeObjectRelease();
        goto LABEL_62;
      }
    }
    uint64_t v70 = *v290;
    uint64_t v68 = v289;
LABEL_19:
    v70(v68, 1, 1, v27);
    goto LABEL_20;
  }
  id v286 = (void *)MEMORY[0x263F8EE78];
  unint64_t v309 = MEMORY[0x263F8EE78];
  id v287 = (void *)MEMORY[0x263F8EE78];
LABEL_62:
  if (v280)
  {
    unint64_t v155 = self;
    uint64_t v156 = swift_allocObject();
    *(void *)(v156 + 16) = v286;
    uint64_t v324 = sub_228B0B078;
    uint64_t v325 = v156;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v321 = 1107296256;
    id v322 = sub_228B005F8;
    long long v323 = &block_descriptor_420;
    char v157 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v158 = swift_allocObject();
    *(void *)(v158 + 16) = v287;
    uint64_t v324 = sub_228B0AF2C;
    uint64_t v325 = v158;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v321 = 1107296256;
    id v322 = sub_228B0063C;
    long long v323 = &block_descriptor_427;
    uint64_t v159 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v155, sel_animateWithDuration_animations_completion_, v157, v159, 0.25);
    _Block_release(v159);
    _Block_release(v157);
  }
  uint64_t v160 = *(void *)(v303 + 64);
  id v305 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))(v303 + 64);
  uint64_t v161 = -1;
  uint64_t v162 = -1 << *(unsigned char *)(v303 + 32);
  uint64_t v301 = ~v162;
  if (-v162 < 64) {
    uint64_t v161 = ~(-1 << -(char)v162);
  }
  unint64_t v163 = v161 & v160;
  uint64_t v310 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
  int64_t v306 = (unint64_t)(63 - v162) >> 6;
  uint64_t v297 = (double *)(v306 - 1);
  swift_bridgeObjectRetain();
  int64_t v164 = 0;
  while (1)
  {
    if (v163)
    {
      uint64_t v166 = (v163 - 1) & v163;
      unint64_t v167 = __clz(__rbit64(v163)) | (v164 << 6);
      int64_t v168 = v164;
      goto LABEL_71;
    }
    int64_t v168 = v164 + 1;
    if (__OFADD__(v164, 1)) {
      goto LABEL_142;
    }
    uint64_t v174 = (char *)v164;
    if (v168 < v306) {
      break;
    }
LABEL_89:
    uint64_t v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292760);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v177 - 8) + 56))(v46, 1, 1, v177);
    uint64_t v166 = 0;
LABEL_90:
    char v178 = v304;
    sub_228ACD8BC((uint64_t)v46, (uint64_t)v304, &qword_268292758);
    uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292760);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v179 - 8) + 48))(v178, 1, v179) == 1)
    {
      sub_228AC98B8();
      uint64_t v205 = swift_bridgeObjectRetain();
      unint64_t v206 = sub_228B0079C(v205);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v206 >> 62) {
        goto LABEL_146;
      }
      swift_bridgeObjectRetain();
      sub_228BAD9F8();
      sub_228AD25BC(0, (unint64_t *)&qword_268293000);
      unint64_t v207 = v206;
      while (1)
      {
        swift_bridgeObjectRelease();
        if (sub_228AFFB54(v207)) {
          break;
        }
        if (sub_228AFFB54(v207))
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
          uint64_t v208 = (void *)sub_228BAD498();
          objc_msgSend(v279, sel_removeAnnotations_, v208);
          goto LABEL_106;
        }
        swift_bridgeObjectRelease();
LABEL_107:
        uint64_t result = v309;
        uint64_t v210 = *(void *)(v309 + 16);
        if (!v210) {
          return result;
        }
        id v211 = (uint64_t *)((char *)v300 + *(int *)(v295 + 48));
        uint64_t v212 = v309 + ((*(unsigned __int8 *)(v296 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v296 + 80));
        int64_t v306 = *(void *)(v296 + 72);
        char v307 = v28 + 48;
        swift_bridgeObjectRetain();
        while (1)
        {
          uint64_t v312 = (uint64_t *)v210;
          uint64_t v311 = v212;
          uint64_t v217 = v300;
          sub_228AD2708(v212, (uint64_t)v300, &qword_268293FB0);
          unint64_t v218 = *v217;
          uint64_t v219 = (uint64_t)v211;
          uint64_t v220 = *v211;
          *(void *)&long long v319 = v314;
          id v221 = v314;
          swift_bridgeObjectRetain();
          uint64_t v28 = v218;
          uint64_t v222 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
          uint64_t v224 = v223;
          char v225 = swift_isUniquelyReferenced_nonNull_native();
          long long v316 = *(void **)(v224 + 24);
          unint64_t v226 = v316;
          *(void *)(v224 + 24) = 0x8000000000000000;
          unint64_t v228 = sub_228AD1964(v220);
          uint64_t v229 = v226[2];
          BOOL v230 = (v227 & 1) == 0;
          uint64_t v231 = v229 + v230;
          if (__OFADD__(v229, v230)) {
            break;
          }
          char v232 = v227;
          if (v226[3] >= v231)
          {
            if ((v225 & 1) == 0) {
              sub_228B0464C(&qword_268292768);
            }
          }
          else
          {
            sub_228B0288C(v231, v225, &qword_268292768);
            unint64_t v233 = sub_228AD1964(v220);
            if ((v232 & 1) != (v234 & 1)) {
              goto LABEL_148;
            }
            unint64_t v228 = v233;
          }
          uint64_t v235 = v316;
          if (v232)
          {
            uint64_t v236 = v316[7];

            *(void *)(v236 + 8 * v228) = v28;
          }
          else
          {
            v316[(v228 >> 6) + 8] |= 1 << v228;
            uint64_t v237 = 8 * v228;
            *(void *)(v235[6] + v237) = v220;
            *(void *)(v235[7] + v237) = v28;
            uint64_t v238 = v235[2];
            BOOL v239 = __OFADD__(v238, 1);
            uint64_t v240 = v238 + 1;
            if (v239) {
              goto LABEL_143;
            }
            v235[2] = v240;
            swift_bridgeObjectRetain();
          }
          *(void *)(v224 + 24) = v235;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v222(&aBlock, 0);

          id v211 = (uint64_t *)v219;
          uint64_t v241 = v299;
          sub_228B0A230(v219, v299, type metadata accessor for MarkerAnnotationViewModel);
          uint64_t v242 = *v310;
          uint64_t v243 = v313;
          (*v310)(v241, 0, 1, v313);
          *(void *)&long long v319 = v221;
          id v244 = v221;
          id v245 = v28;
          uint64_t v28 = (unsigned __int8 *)swift_modifyAtReferenceWritableKeyPath();
          uint64_t v247 = v246;
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))*v307)(v241, 1, v243) == 1)
          {
            sub_228AC1A50(v241, &qword_268292750);
            swift_bridgeObjectRetain();
            unint64_t v248 = sub_228AD1AD4((uint64_t)v245);
            char v250 = v249;
            swift_bridgeObjectRelease();
            if (v250)
            {
              int v251 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v252 = *(void *)(v247 + 16);
              long long v316 = (void *)v252;
              *(void *)(v247 + 16) = 0x8000000000000000;
              if (!v251)
              {
                sub_228B043EC(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_268292770, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel);
                uint64_t v252 = (uint64_t)v316;
              }

              uint64_t v214 = v293;
              sub_228B0A298(*(void *)(v252 + 56) + *((void *)v308 + 9) * v248, v293, type metadata accessor for MarkerAnnotationViewModel);
              sub_228B03184(v248, v252, type metadata accessor for MarkerAnnotationViewModel);
              *(void *)(v247 + 16) = v252;
              swift_bridgeObjectRelease();
              uint64_t v213 = 0;
            }
            else
            {
              uint64_t v213 = 1;
              uint64_t v214 = v293;
            }
            v242(v214, v213, 1, v243);

            sub_228AC1A50(v214, &qword_268292750);
          }
          else
          {
            sub_228B0A298(v241, v298, type metadata accessor for MarkerAnnotationViewModel);
            int v253 = swift_isUniquelyReferenced_nonNull_native();
            long long v316 = *(void **)(v247 + 16);
            __int16 v254 = v316;
            *(void *)(v247 + 16) = 0x8000000000000000;
            unint64_t v256 = sub_228AD1AD4((uint64_t)v245);
            uint64_t v257 = v254[2];
            BOOL v258 = (v255 & 1) == 0;
            uint64_t v259 = v257 + v258;
            if (__OFADD__(v257, v258)) {
              goto LABEL_144;
            }
            char v260 = v255;
            if (v254[3] >= v259)
            {
              if ((v253 & 1) == 0) {
                sub_228B043EC(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_268292770, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel);
              }
            }
            else
            {
              sub_228B02500(v259, v253, type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_268292770, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel);
              unint64_t v261 = sub_228AD1AD4((uint64_t)v245);
              if ((v260 & 1) != (v262 & 1)) {
                goto LABEL_149;
              }
              unint64_t v256 = v261;
            }
            uint64_t v263 = v316;
            if (v260)
            {
              sub_228B0A404(v298, v316[7] + *((void *)v308 + 9) * v256, type metadata accessor for MarkerAnnotationViewModel);
            }
            else
            {
              v316[(v256 >> 6) + 8] |= 1 << v256;
              *(void *)(v263[6] + 8 * v256) = v245;
              sub_228B0A298(v298, v263[7] + *((void *)v308 + 9) * v256, type metadata accessor for MarkerAnnotationViewModel);
              uint64_t v264 = v263[2];
              BOOL v239 = __OFADD__(v264, 1);
              uint64_t v265 = v264 + 1;
              if (v239) {
                goto LABEL_145;
              }
              v263[2] = v265;
              uint64_t v266 = v245;
            }
            *(void *)(v247 + 16) = v263;

            swift_bridgeObjectRelease();
          }
          uint64_t v215 = (uint64_t)v312;
          uint64_t v216 = v311;
          ((void (*)(uint64_t *, void))v28)(&aBlock, 0);

          sub_228B0A300(v219, type metadata accessor for MarkerAnnotationViewModel);
          uint64_t v212 = v216 + v306;
          uint64_t v210 = v215 - 1;
          if (!v210)
          {
            unint64_t v267 = v309;
            swift_bridgeObjectRelease();
            return v267;
          }
        }
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        sub_228AD25BC(0, (unint64_t *)&qword_268293000);
        swift_bridgeObjectRetain();
        unint64_t v207 = sub_228BAD948();
        swift_bridgeObjectRelease();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
      uint64_t v208 = (void *)sub_228BAD498();
      objc_msgSend(v279, sel_removeOverlays_, v208);
LABEL_106:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_107;
    }
    uint64_t v311 = (uint64_t)v174;
    uint64_t v180 = *v178;
    uint64_t v181 = (uint64_t)v178 + *(int *)(v179 + 48);
    unint64_t v182 = v312;
    sub_228B0A298(v181, (uint64_t)v312, type metadata accessor for MarkerAnnotationViewModel);
    uint64_t v183 = *v182;
    *(void *)&long long v319 = v314;
    id v184 = v314;
    swift_bridgeObjectRetain();
    uint64_t v185 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v187 = v186;
    swift_bridgeObjectRetain();
    unint64_t v188 = sub_228AD1964(v183);
    char v190 = v189;
    swift_bridgeObjectRelease();
    if (v190)
    {
      char v191 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v192 = *(void *)(v187 + 24);
      long long v316 = (void *)v192;
      *(void *)(v187 + 24) = 0x8000000000000000;
      if ((v191 & 1) == 0)
      {
        sub_228B0464C(&qword_268292768);
        uint64_t v192 = (uint64_t)v316;
      }
      swift_bridgeObjectRelease();
      uint64_t v193 = *(void **)(*(void *)(v192 + 56) + 8 * v188);
      sub_228B03380(v188, v192);
      *(void *)(v187 + 24) = v192;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = v308;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v185(&aBlock, 0);

    *(void *)&long long v319 = v184;
    id v194 = v184;
    unint64_t v195 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v197 = v196;
    swift_bridgeObjectRetain();
    unint64_t v198 = sub_228AD1AD4((uint64_t)v180);
    char v200 = v199;
    swift_bridgeObjectRelease();
    uint64_t v201 = v313;
    uint64_t v202 = (uint64_t)v302;
    if (v200)
    {
      int v203 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v204 = *(void *)(v197 + 16);
      long long v316 = (void *)v204;
      *(void *)(v197 + 16) = 0x8000000000000000;
      if (!v203)
      {
        sub_228B043EC(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_268292770, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel);
        uint64_t v204 = (uint64_t)v316;
      }

      sub_228B0A298(*(void *)(v204 + 56) + *((void *)v28 + 9) * v198, v202, type metadata accessor for MarkerAnnotationViewModel);
      sub_228B03184(v198, v204, type metadata accessor for MarkerAnnotationViewModel);
      *(void *)(v197 + 16) = v204;
      swift_bridgeObjectRelease();
      uint64_t v165 = 0;
    }
    else
    {
      uint64_t v165 = 1;
    }
    (*v310)(v202, v165, 1, v201);
    sub_228AC1A50(v202, &qword_268292750);
    v195(&aBlock, 0);

    sub_228B0A300((uint64_t)v312, type metadata accessor for MarkerAnnotationViewModel);
    int64_t v164 = v311;
    unint64_t v163 = v166;
    uint64_t v46 = v307;
  }
  unint64_t v175 = *((void *)v305 + v168);
  if (v175) {
    goto LABEL_75;
  }
  int64_t v176 = v164 + 2;
  uint64_t v174 = (char *)(v164 + 1);
  if (v164 + 2 >= v306) {
    goto LABEL_89;
  }
  unint64_t v175 = *((void *)v305 + v176);
  if (v175)
  {
LABEL_78:
    int64_t v168 = v176;
    goto LABEL_75;
  }
  uint64_t v174 = (char *)(v164 + 2);
  if (v164 + 3 >= v306) {
    goto LABEL_89;
  }
  unint64_t v175 = *((void *)v305 + v164 + 3);
  if (v175)
  {
    int64_t v168 = v164 + 3;
LABEL_75:
    uint64_t v166 = (v175 - 1) & v175;
    unint64_t v167 = __clz(__rbit64(v175)) + (v168 << 6);
LABEL_71:
    uint64_t v169 = *(void *)(v303 + 56);
    uint64_t v170 = *(void **)(*(void *)(v303 + 48) + 8 * v167);
    *uint64_t v46 = v170;
    uint64_t v171 = v169 + *((void *)v28 + 9) * v167;
    uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292760);
    sub_228B0A230(v171, (uint64_t)v46 + *(int *)(v172 + 48), type metadata accessor for MarkerAnnotationViewModel);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v172 - 8) + 56))(v46, 0, 1, v172);
    id v173 = v170;
    uint64_t v174 = (char *)v168;
    goto LABEL_90;
  }
  int64_t v176 = v164 + 4;
  uint64_t v174 = (char *)(v164 + 3);
  if (v164 + 4 >= v306) {
    goto LABEL_89;
  }
  unint64_t v175 = *((void *)v305 + v176);
  if (v175) {
    goto LABEL_78;
  }
  while (1)
  {
    int64_t v168 = v176 + 1;
    if (__OFADD__(v176, 1)) {
      break;
    }
    if (v168 >= v306)
    {
      uint64_t v174 = (char *)v297;
      goto LABEL_89;
    }
    unint64_t v175 = *((void *)v305 + v168);
    ++v176;
    if (v175) {
      goto LABEL_75;
    }
  }
  __break(1u);
LABEL_148:
  sub_228BADA18();
  __break(1u);
LABEL_149:
  type metadata accessor for MapBridgingMarker();
  uint64_t result = sub_228BADA18();
  __break(1u);
  return result;
}

uint64_t sub_228AFA864(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v280 = a4;
  id v279 = a1;
  uint64_t v297 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292788);
  uint64_t v298 = *(void *)(v297 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v297);
  uint64_t v10 = (char *)&v268 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v302 = (void **)((char *)&v268 - v11);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292790);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v268 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v278 = (uint64_t)&v268 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v277 = (uint64_t)&v268 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v291 = (uint64_t)&v268 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v295 = (uint64_t)&v268 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v301 = (uint64_t)&v268 - v25;
  MEMORY[0x270FA5388](v24);
  int64_t v304 = (char *)&v268 - v26;
  uint64_t v27 = type metadata accessor for CustomAnnotationViewModel(0);
  uint64_t v28 = *(unsigned __int8 **)(v27 - 8);
  uint64_t v29 = *((void *)v28 + 8);
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v270 = (uint64_t)&v268 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v294 = (uint64_t)&v268 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v276 = (uint64_t)&v268 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v290 = (uint64_t)&v268 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v39 = (uint64_t *)((char *)&v268 - v38);
  uint64_t v40 = MEMORY[0x270FA5388](v37);
  uint64_t v300 = (uint64_t)&v268 - v41;
  MEMORY[0x270FA5388](v40);
  uint64_t v312 = (uint64_t *)((char *)&v268 - v42);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292798);
  uint64_t v44 = MEMORY[0x270FA5388](v43 - 8);
  uint64_t v46 = (uint64_t *)((char *)&v268 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v44);
  int64_t v306 = (void **)((char *)&v268 - v47);
  *(void *)&long long v319 = v5;
  id v314 = v5;
  uint64_t v315 = a5;
  uint64_t v48 = (void (*)(uint64_t *, void))swift_readAtKeyPath();
  uint64_t v305 = *(void *)(v49 + 16);
  swift_bridgeObjectRetain();
  v48(&aBlock, 0);

  uint64_t v50 = *(void *)(a2 + 16);
  uint64_t v313 = v27;
  char v308 = v28;
  char v307 = v46;
  if (v50)
  {
    uint64_t v51 = v28[80];
    uint64_t v52 = a2 + ((v51 + 32) & ~v51);
    int64_t v303 = *((void *)v28 + 9);
    uint64_t v292 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
    uint64_t v293 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
    uint64_t v274 = v51 | 7;
    uint64_t v275 = (v51 + 24) & ~v51;
    unint64_t v273 = (v29 + v275 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v272 = v273 + 40;
    uint64_t v268 = a2;
    swift_bridgeObjectRetain();
    uint64_t v288 = (void *)MEMORY[0x263F8EE78];
    unint64_t v309 = MEMORY[0x263F8EE78];
    uint64_t v289 = (void *)MEMORY[0x263F8EE78];
    uint64_t v296 = (uint64_t)v10;
    __int16 v269 = v15;
    uint64_t v299 = v39;
    while (1)
    {
      uint64_t v311 = v50;
      uint64_t v310 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v52;
      sub_228B0A230(v52, (uint64_t)v39, type metadata accessor for CustomAnnotationViewModel);
      uint64_t v58 = *v39;
      *(void *)&long long v319 = v314;
      id v59 = v314;
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();

      id v60 = v323;
      if (!v323[2] || (unint64_t v61 = sub_228AD1964(v58), (v62 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
      id v63 = *(id *)(v60[7] + 8 * v61);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)&long long v319 = v59;
      id v64 = v59;
      id v65 = v63;
      swift_getAtKeyPath();

      uint64_t v66 = v322;
      if (!v322[2]) {
        break;
      }
      unint64_t v67 = sub_228AD1B28((uint64_t)v65);
      uint64_t v68 = v291;
      if ((v69 & 1) == 0)
      {
        uint64_t v70 = *v292;
        goto LABEL_19;
      }
      sub_228B0A230(v66[7] + v67 * v303, v291, type metadata accessor for CustomAnnotationViewModel);
      uint64_t v70 = *v292;
      (*v292)(v68, 0, 1, v27);
LABEL_20:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      unint64_t v95 = *v293;
      if ((*v293)(v68, 1, v27) != 1)
      {
        id v286 = v95;
        id v287 = v70;
        id v285 = (void (*)(void, void))v64;
        sub_228B0A298(v68, v290, type metadata accessor for CustomAnnotationViewModel);
        long long v323 = (void *)sub_228AD25BC(0, (unint64_t *)&unk_268292FB0);
        uint64_t v324 = (uint64_t (*)())&off_26DD22238;
        id v96 = v279;
        uint64_t aBlock = (uint64_t)v279;
        uint64_t v97 = (uint64_t)v39;
        unint64_t v98 = v39;
        uint64_t v99 = v276;
        sub_228B0A230(v97, v276, type metadata accessor for CustomAnnotationViewModel);
        sub_228B099C8((uint64_t)&aBlock, (uint64_t)&v319);
        sub_228B0A230(v99, v294, type metadata accessor for CustomAnnotationViewModel);
        sub_228B099C8((uint64_t)&v319, (uint64_t)&v316);
        uint64_t v100 = swift_allocObject();
        *(void *)(v100 + 16) = v65;
        sub_228B0A298(v99, v100 + v275, type metadata accessor for CustomAnnotationViewModel);
        sub_228B09A30(&v319, v100 + v273);
        id v101 = v96;
        id v102 = v65;
        id v103 = v101;
        uint64_t v104 = v305;
        uint64_t v105 = v280;
        if (!v280) {
          goto LABEL_26;
        }
        swift_retain();
        objc_msgSend(v102, sel_coordinate);
        uint64_t v39 = v98;
        if (vabdd_f64(v107, *((double *)v98 + 7)) >= 0.00000000999999994
          || vabdd_f64(v106, *((double *)v98 + 8)) >= 0.00000000999999994)
        {
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v316);
          sub_228B0A300(v294, type metadata accessor for CustomAnnotationViewModel);
          uint64_t v110 = (void *)swift_allocObject();
          v110[2] = sub_228B0A470;
          v110[3] = v100;
          v110[4] = v105;
          uint64_t v111 = swift_allocObject();
          *(void *)(v111 + 16) = sub_228B0A470;
          *(void *)(v111 + 24) = v100;
          uint64_t v281 = v111;
          swift_retain();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);

          uint64_t v112 = swift_allocObject();
          *(void *)(v112 + 16) = sub_228B0B0D8;
          *(void *)(v112 + 24) = v110;
          char v113 = v110;
          swift_retain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          id v271 = v102;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            uint64_t v288 = sub_228B768F8(0, v288[2] + 1, 1, v288);
          }
          uint64_t v115 = v285;
          unint64_t v117 = v288[2];
          unint64_t v116 = v288[3];
          unint64_t v118 = v287;
          uint64_t v284 = v113;
          if (v117 >= v116 >> 1) {
            uint64_t v288 = sub_228B768F8((void *)(v116 > 1), v117 + 1, 1, v288);
          }
          uint64_t v119 = v281;
          uint64_t v120 = v288;
          v288[2] = v117 + 1;
          uint64_t v121 = &v120[2 * v117];
          v121[4] = sub_228B0B0E0;
          v121[5] = v112;
          uint64_t v122 = swift_allocObject();
          *(void *)(v122 + 16) = sub_228B0AF18;
          *(void *)(v122 + 24) = v119;
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v289 = sub_228B768F8(0, v289[2] + 1, 1, v289);
          }
          unint64_t v124 = v289[2];
          unint64_t v123 = v289[3];
          if (v124 >= v123 >> 1) {
            uint64_t v289 = sub_228B768F8((void *)(v123 > 1), v124 + 1, 1, v289);
          }
          uint64_t v125 = v289;
          v289[2] = v124 + 1;
          uint64_t v126 = &v125[2 * v124];
          v126[4] = sub_228B0B0E0;
          v126[5] = v122;
          uint64_t v282 = sub_228B0AF18;
          uint64_t v283 = sub_228B0B0D8;
          id v102 = v271;
        }
        else
        {
          swift_release();
LABEL_26:
          uint64_t v108 = v294;
          objc_msgSend(v102, sel_setCoordinate_, *(double *)(v294 + 56), *(double *)(v294 + 64));
          if (*(void *)(v108 + 16)) {
            uint64_t v109 = (void *)sub_228BAD3D8();
          }
          else {
            uint64_t v109 = 0;
          }
          uint64_t v39 = v299;
          objc_msgSend(v102, sel_setTitle_, v109);

          uint64_t v127 = v103;
          if (*(void *)(v108 + 32)) {
            unint64_t v128 = (void *)sub_228BAD3D8();
          }
          else {
            unint64_t v128 = 0;
          }
          objc_msgSend(v102, sel_setSubtitle_, v128);

          uint64_t v129 = v317;
          uint64_t v130 = v318;
          __swift_project_boxed_opaque_existential_1(&v316, v317);
          uint64_t v131 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v130 + 24))(v102, v129, v130);
          if (v131)
          {
            unint64_t v132 = (void *)v131;
            type metadata accessor for SwiftUIAnnotationView();
            uint64_t v133 = (char *)swift_dynamicCastClass();
            uint64_t v134 = v294;
            if (v133)
            {
              sub_228B13344(v133, 0);
              uint64_t v134 = v294;
            }
            swift_release();
          }
          else
          {
            swift_release();
            uint64_t v134 = v294;
          }
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v316);
          sub_228B0A300(v134, type metadata accessor for CustomAnnotationViewModel);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);

          uint64_t v283 = 0;
          uint64_t v284 = 0;
          uint64_t v282 = 0;
          uint64_t v119 = 0;
          unint64_t v118 = v287;
          uint64_t v115 = v285;
          uint64_t v27 = v313;
        }
        swift_bridgeObjectRetain();
        unint64_t v135 = sub_228AD1B28((uint64_t)v102);
        char v137 = v136;
        swift_bridgeObjectRelease();
        if (v137)
        {
          char v138 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t aBlock = v104;
          if ((v138 & 1) == 0)
          {
            sub_228B043EC(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_2682927B0, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel);
            uint64_t v104 = aBlock;
          }

          uint64_t v139 = v277;
          sub_228B0A298(*(void *)(v104 + 56) + v135 * v303, v277, type metadata accessor for CustomAnnotationViewModel);
          uint64_t v305 = v104;
          sub_228B03184(v135, v104, type metadata accessor for CustomAnnotationViewModel);
          swift_bridgeObjectRelease();
          uint64_t v140 = v139;
          uint64_t v141 = 0;
        }
        else
        {
          uint64_t v139 = v277;
          uint64_t v140 = v277;
          uint64_t v141 = 1;
        }
        v118(v140, v141, 1, v27);
        sub_228AC1A50(v139, &qword_268292790);
        uint64_t v142 = v278;
        sub_228B0A230((uint64_t)v39, v278, type metadata accessor for CustomAnnotationViewModel);
        v118(v142, 0, 1, v27);
        *(void *)&long long v319 = v115;
        id v143 = v115;
        id v144 = v102;
        id v285 = (void (*)(void, void))swift_modifyAtReferenceWritableKeyPath();
        uint64_t v146 = v145;
        if (v286(v142, 1, v27) == 1)
        {
          uint64_t v281 = v119;
          uint64_t v147 = v118;
          sub_228AC1A50(v142, &qword_268292790);
          swift_bridgeObjectRetain();
          unint64_t v148 = sub_228AD1B28((uint64_t)v144);
          char v150 = v149;
          swift_bridgeObjectRelease();
          if (v150)
          {
            char v151 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v152 = *(void *)(v146 + 16);
            long long v316 = (void *)v152;
            *(void *)(v146 + 16) = 0x8000000000000000;
            if ((v151 & 1) == 0)
            {
              sub_228B043EC(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_2682927B0, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel);
              uint64_t v152 = (uint64_t)v316;
            }

            uint64_t v153 = (uint64_t)v269;
            sub_228B0A298(*(void *)(v152 + 56) + v148 * v303, (uint64_t)v269, type metadata accessor for CustomAnnotationViewModel);
            sub_228B03184(v148, v152, type metadata accessor for CustomAnnotationViewModel);
            *(void *)(v146 + 16) = v152;
            swift_bridgeObjectRelease();
            uint64_t v154 = 0;
          }
          else
          {
            uint64_t v154 = 1;
            uint64_t v153 = (uint64_t)v269;
          }
          v147(v153, v154, 1, v27);

          sub_228AC1A50(v153, &qword_268292790);
          uint64_t v56 = v311;
        }
        else
        {
          uint64_t v53 = v142;
          uint64_t v54 = v270;
          sub_228B0A298(v53, v270, type metadata accessor for CustomAnnotationViewModel);
          char v55 = swift_isUniquelyReferenced_nonNull_native();
          long long v316 = *(void **)(v146 + 16);
          *(void *)(v146 + 16) = 0x8000000000000000;
          sub_228B05230(v54, v144, v55);
          *(void *)(v146 + 16) = v316;

          swift_bridgeObjectRelease();
          uint64_t v56 = v311;
        }
        uint64_t v57 = (uint64_t)v283;
        v285(&aBlock, 0);
        sub_228AD2678((uint64_t)v282);
        sub_228AD2678(v57);

        sub_228B0A300(v290, type metadata accessor for CustomAnnotationViewModel);
        sub_228B0A300((uint64_t)v39, type metadata accessor for CustomAnnotationViewModel);
        uint64_t v28 = v308;
        goto LABEL_5;
      }

      sub_228AC1A50(v68, &qword_268292790);
LABEL_12:
      uint64_t v72 = v39[1];
      uint64_t v71 = v39[2];
      uint64_t v74 = v39[3];
      uint64_t v73 = v39[4];
      uint64_t v75 = v39[7];
      uint64_t v76 = v39[8];
      uint64_t v77 = (void *)v39[5];
      uint64_t v78 = (objc_class *)type metadata accessor for MapBridgingCustomAnnotation();
      id v79 = (char *)objc_allocWithZone(v78);
      uint64_t v80 = (uint64_t *)&v79[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_title];
      *uint64_t v80 = 0;
      v80[1] = 0;
      uint64_t v81 = (uint64_t *)&v79[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_subtitle];
      uint64_t *v81 = 0;
      v81[1] = 0;
      uint64_t v82 = OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_mapItem;
      *(void *)&v79[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_mapItem] = 0;
      *uint64_t v80 = v72;
      v80[1] = v71;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v83 = v77;
      uint64_t v84 = v79;
      swift_bridgeObjectRelease();
      uint64_t *v81 = v74;
      v81[1] = v73;
      swift_bridgeObjectRelease();
      uint64_t v85 = (uint64_t *)&v84[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_coordinate];
      *uint64_t v85 = v75;
      v85[1] = v76;
      char v86 = *(void **)&v79[v82];
      *(void *)&v79[v82] = v77;
      uint64_t v39 = v299;
      id v87 = v83;

      v326.receiver = v84;
      v326.super_class = v78;
      id v88 = objc_msgSendSuper2(&v326, sel_init);

      uint64_t v89 = v296;
      uint64_t v90 = v296 + *(int *)(v297 + 48);
      *(void *)uint64_t v296 = v88;
      sub_228B0A230((uint64_t)v39, v90, type metadata accessor for CustomAnnotationViewModel);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v91 = v309;
      }
      else {
        unint64_t v91 = sub_228B77770(0, *(void *)(v309 + 16) + 1, 1, v309);
      }
      unint64_t v93 = *(void *)(v91 + 16);
      unint64_t v92 = *(void *)(v91 + 24);
      uint64_t v27 = v313;
      uint64_t v28 = v308;
      uint64_t v46 = v307;
      if (v93 >= v92 >> 1) {
        unint64_t v91 = sub_228B77770(v92 > 1, v93 + 1, 1, v91);
      }
      *(void *)(v91 + 16) = v93 + 1;
      unint64_t v94 = (*(unsigned __int8 *)(v298 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v298 + 80);
      unint64_t v309 = v91;
      sub_228ACD8BC(v89, v91 + v94 + *(void *)(v298 + 72) * v93, &qword_268292788);
      sub_228B0A300((uint64_t)v39, type metadata accessor for CustomAnnotationViewModel);
      uint64_t v56 = v311;
LABEL_5:
      uint64_t v52 = (uint64_t)v310 + v303;
      uint64_t v50 = v56 - 1;
      if (!v50)
      {
        swift_bridgeObjectRelease();
        goto LABEL_62;
      }
    }
    uint64_t v70 = *v292;
    uint64_t v68 = v291;
LABEL_19:
    v70(v68, 1, 1, v27);
    goto LABEL_20;
  }
  uint64_t v288 = (void *)MEMORY[0x263F8EE78];
  unint64_t v309 = MEMORY[0x263F8EE78];
  uint64_t v289 = (void *)MEMORY[0x263F8EE78];
LABEL_62:
  if (v280)
  {
    unint64_t v155 = self;
    uint64_t v156 = swift_allocObject();
    *(void *)(v156 + 16) = v288;
    uint64_t v324 = sub_228B0B078;
    uint64_t v325 = v156;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v321 = 1107296256;
    id v322 = sub_228B005F8;
    long long v323 = &block_descriptor_454;
    char v157 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v158 = swift_allocObject();
    *(void *)(v158 + 16) = v289;
    uint64_t v324 = sub_228B0AF2C;
    uint64_t v325 = v158;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v321 = 1107296256;
    id v322 = sub_228B0063C;
    long long v323 = &block_descriptor_461;
    uint64_t v159 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v155, sel_animateWithDuration_animations_completion_, v157, v159, 0.25);
    _Block_release(v159);
    _Block_release(v157);
  }
  uint64_t v160 = *(void *)(v305 + 64);
  uint64_t v299 = (uint64_t *)(v305 + 64);
  uint64_t v161 = -1;
  uint64_t v162 = -1 << *(unsigned char *)(v305 + 32);
  uint64_t v296 = ~v162;
  if (-v162 < 64) {
    uint64_t v161 = ~(-1 << -(char)v162);
  }
  unint64_t v163 = v161 & v160;
  uint64_t v310 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
  int64_t v303 = (unint64_t)(63 - v162) >> 6;
  uint64_t v294 = v303 - 1;
  swift_bridgeObjectRetain();
  uint64_t v164 = 0;
  while (1)
  {
    if (v163)
    {
      uint64_t v166 = (v163 - 1) & v163;
      unint64_t v167 = __clz(__rbit64(v163)) | (v164 << 6);
      int64_t v168 = v164;
      goto LABEL_71;
    }
    int64_t v168 = v164 + 1;
    if (__OFADD__(v164, 1)) {
      goto LABEL_142;
    }
    uint64_t v174 = v164;
    if (v168 < v303) {
      break;
    }
LABEL_89:
    uint64_t v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682927A0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v177 - 8) + 56))(v46, 1, 1, v177);
    uint64_t v166 = 0;
LABEL_90:
    char v178 = v306;
    sub_228ACD8BC((uint64_t)v46, (uint64_t)v306, &qword_268292798);
    uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682927A0);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v179 - 8) + 48))(v178, 1, v179) == 1)
    {
      sub_228AC98B8();
      uint64_t v205 = swift_bridgeObjectRetain();
      unint64_t v206 = sub_228B0079C(v205);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v206 >> 62) {
        goto LABEL_146;
      }
      swift_bridgeObjectRetain();
      sub_228BAD9F8();
      sub_228AD25BC(0, (unint64_t *)&qword_268293000);
      unint64_t v207 = v206;
      while (1)
      {
        swift_bridgeObjectRelease();
        if (sub_228AFFB54(v207)) {
          break;
        }
        if (sub_228AFFB54(v207))
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
          uint64_t v208 = (void *)sub_228BAD498();
          objc_msgSend(v279, sel_removeAnnotations_, v208);
          goto LABEL_106;
        }
        swift_bridgeObjectRelease();
LABEL_107:
        uint64_t result = v309;
        uint64_t v210 = *(void *)(v309 + 16);
        if (!v210) {
          return result;
        }
        id v211 = (uint64_t *)((char *)v302 + *(int *)(v297 + 48));
        uint64_t v212 = v309 + ((*(unsigned __int8 *)(v298 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v298 + 80));
        int64_t v306 = *(void ***)(v298 + 72);
        char v307 = v28 + 48;
        swift_bridgeObjectRetain();
        while (1)
        {
          uint64_t v312 = (uint64_t *)v210;
          uint64_t v311 = v212;
          uint64_t v217 = v302;
          sub_228AD2708(v212, (uint64_t)v302, &qword_268292788);
          unint64_t v218 = *v217;
          uint64_t v219 = (uint64_t)v211;
          uint64_t v220 = *v211;
          *(void *)&long long v319 = v314;
          id v221 = v314;
          swift_bridgeObjectRetain();
          uint64_t v28 = v218;
          uint64_t v222 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
          uint64_t v224 = v223;
          char v225 = swift_isUniquelyReferenced_nonNull_native();
          long long v316 = *(void **)(v224 + 24);
          unint64_t v226 = v316;
          *(void *)(v224 + 24) = 0x8000000000000000;
          unint64_t v228 = sub_228AD1964(v220);
          uint64_t v229 = v226[2];
          BOOL v230 = (v227 & 1) == 0;
          uint64_t v231 = v229 + v230;
          if (__OFADD__(v229, v230)) {
            break;
          }
          char v232 = v227;
          if (v226[3] >= v231)
          {
            if ((v225 & 1) == 0) {
              sub_228B0464C(&qword_2682927A8);
            }
          }
          else
          {
            sub_228B0288C(v231, v225, &qword_2682927A8);
            unint64_t v233 = sub_228AD1964(v220);
            if ((v232 & 1) != (v234 & 1)) {
              goto LABEL_148;
            }
            unint64_t v228 = v233;
          }
          uint64_t v235 = v316;
          if (v232)
          {
            uint64_t v236 = v316[7];

            *(void *)(v236 + 8 * v228) = v28;
          }
          else
          {
            v316[(v228 >> 6) + 8] |= 1 << v228;
            uint64_t v237 = 8 * v228;
            *(void *)(v235[6] + v237) = v220;
            *(void *)(v235[7] + v237) = v28;
            uint64_t v238 = v235[2];
            BOOL v239 = __OFADD__(v238, 1);
            uint64_t v240 = v238 + 1;
            if (v239) {
              goto LABEL_143;
            }
            v235[2] = v240;
            swift_bridgeObjectRetain();
          }
          *(void *)(v224 + 24) = v235;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v222(&aBlock, 0);

          id v211 = (uint64_t *)v219;
          uint64_t v241 = v301;
          sub_228B0A230(v219, v301, type metadata accessor for CustomAnnotationViewModel);
          uint64_t v242 = *v310;
          uint64_t v243 = v313;
          (*v310)(v241, 0, 1, v313);
          *(void *)&long long v319 = v221;
          id v244 = v221;
          id v245 = v28;
          uint64_t v28 = (unsigned __int8 *)swift_modifyAtReferenceWritableKeyPath();
          uint64_t v247 = v246;
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))*v307)(v241, 1, v243) == 1)
          {
            sub_228AC1A50(v241, &qword_268292790);
            swift_bridgeObjectRetain();
            unint64_t v248 = sub_228AD1B28((uint64_t)v245);
            char v250 = v249;
            swift_bridgeObjectRelease();
            if (v250)
            {
              int v251 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v252 = *(void *)(v247 + 16);
              long long v316 = (void *)v252;
              *(void *)(v247 + 16) = 0x8000000000000000;
              if (!v251)
              {
                sub_228B043EC(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_2682927B0, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel);
                uint64_t v252 = (uint64_t)v316;
              }

              uint64_t v214 = v295;
              sub_228B0A298(*(void *)(v252 + 56) + *((void *)v308 + 9) * v248, v295, type metadata accessor for CustomAnnotationViewModel);
              sub_228B03184(v248, v252, type metadata accessor for CustomAnnotationViewModel);
              *(void *)(v247 + 16) = v252;
              swift_bridgeObjectRelease();
              uint64_t v213 = 0;
            }
            else
            {
              uint64_t v213 = 1;
              uint64_t v214 = v295;
            }
            v242(v214, v213, 1, v243);

            sub_228AC1A50(v214, &qword_268292790);
          }
          else
          {
            sub_228B0A298(v241, v300, type metadata accessor for CustomAnnotationViewModel);
            int v253 = swift_isUniquelyReferenced_nonNull_native();
            long long v316 = *(void **)(v247 + 16);
            __int16 v254 = v316;
            *(void *)(v247 + 16) = 0x8000000000000000;
            unint64_t v256 = sub_228AD1B28((uint64_t)v245);
            uint64_t v257 = v254[2];
            BOOL v258 = (v255 & 1) == 0;
            uint64_t v259 = v257 + v258;
            if (__OFADD__(v257, v258)) {
              goto LABEL_144;
            }
            char v260 = v255;
            if (v254[3] >= v259)
            {
              if ((v253 & 1) == 0) {
                sub_228B043EC(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_2682927B0, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel);
              }
            }
            else
            {
              sub_228B02500(v259, v253, type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_2682927B0, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel);
              unint64_t v261 = sub_228AD1B28((uint64_t)v245);
              if ((v260 & 1) != (v262 & 1)) {
                goto LABEL_149;
              }
              unint64_t v256 = v261;
            }
            uint64_t v263 = v316;
            if (v260)
            {
              sub_228B0A404(v300, v316[7] + *((void *)v308 + 9) * v256, type metadata accessor for CustomAnnotationViewModel);
            }
            else
            {
              v316[(v256 >> 6) + 8] |= 1 << v256;
              *(void *)(v263[6] + 8 * v256) = v245;
              sub_228B0A298(v300, v263[7] + *((void *)v308 + 9) * v256, type metadata accessor for CustomAnnotationViewModel);
              uint64_t v264 = v263[2];
              BOOL v239 = __OFADD__(v264, 1);
              uint64_t v265 = v264 + 1;
              if (v239) {
                goto LABEL_145;
              }
              v263[2] = v265;
              uint64_t v266 = v245;
            }
            *(void *)(v247 + 16) = v263;

            swift_bridgeObjectRelease();
          }
          uint64_t v215 = (uint64_t)v312;
          uint64_t v216 = v311;
          ((void (*)(uint64_t *, void))v28)(&aBlock, 0);

          sub_228B0A300(v219, type metadata accessor for CustomAnnotationViewModel);
          uint64_t v212 = (uint64_t)v306 + v216;
          uint64_t v210 = v215 - 1;
          if (!v210)
          {
            unint64_t v267 = v309;
            swift_bridgeObjectRelease();
            return v267;
          }
        }
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        sub_228AD25BC(0, (unint64_t *)&qword_268293000);
        swift_bridgeObjectRetain();
        unint64_t v207 = sub_228BAD948();
        swift_bridgeObjectRelease();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
      uint64_t v208 = (void *)sub_228BAD498();
      objc_msgSend(v279, sel_removeOverlays_, v208);
LABEL_106:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_107;
    }
    uint64_t v311 = v174;
    uint64_t v180 = *v178;
    uint64_t v181 = (uint64_t)v178 + *(int *)(v179 + 48);
    unint64_t v182 = v312;
    sub_228B0A298(v181, (uint64_t)v312, type metadata accessor for CustomAnnotationViewModel);
    uint64_t v183 = *v182;
    *(void *)&long long v319 = v314;
    id v184 = v314;
    swift_bridgeObjectRetain();
    uint64_t v185 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v187 = v186;
    swift_bridgeObjectRetain();
    unint64_t v188 = sub_228AD1964(v183);
    char v190 = v189;
    swift_bridgeObjectRelease();
    if (v190)
    {
      char v191 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v192 = *(void *)(v187 + 24);
      long long v316 = (void *)v192;
      *(void *)(v187 + 24) = 0x8000000000000000;
      if ((v191 & 1) == 0)
      {
        sub_228B0464C(&qword_2682927A8);
        uint64_t v192 = (uint64_t)v316;
      }
      swift_bridgeObjectRelease();
      uint64_t v193 = *(void **)(*(void *)(v192 + 56) + 8 * v188);
      sub_228B03380(v188, v192);
      *(void *)(v187 + 24) = v192;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = v308;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v185(&aBlock, 0);

    *(void *)&long long v319 = v184;
    id v194 = v184;
    unint64_t v195 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v197 = v196;
    swift_bridgeObjectRetain();
    unint64_t v198 = sub_228AD1B28((uint64_t)v180);
    char v200 = v199;
    swift_bridgeObjectRelease();
    uint64_t v201 = v313;
    uint64_t v202 = (uint64_t)v304;
    if (v200)
    {
      int v203 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v204 = *(void *)(v197 + 16);
      long long v316 = (void *)v204;
      *(void *)(v197 + 16) = 0x8000000000000000;
      if (!v203)
      {
        sub_228B043EC(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_2682927B0, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel);
        uint64_t v204 = (uint64_t)v316;
      }

      sub_228B0A298(*(void *)(v204 + 56) + *((void *)v28 + 9) * v198, v202, type metadata accessor for CustomAnnotationViewModel);
      sub_228B03184(v198, v204, type metadata accessor for CustomAnnotationViewModel);
      *(void *)(v197 + 16) = v204;
      swift_bridgeObjectRelease();
      uint64_t v165 = 0;
    }
    else
    {
      uint64_t v165 = 1;
    }
    (*v310)(v202, v165, 1, v201);
    sub_228AC1A50(v202, &qword_268292790);
    v195(&aBlock, 0);

    sub_228B0A300((uint64_t)v312, type metadata accessor for CustomAnnotationViewModel);
    uint64_t v164 = v311;
    unint64_t v163 = v166;
    uint64_t v46 = v307;
  }
  unint64_t v175 = v299[v168];
  if (v175) {
    goto LABEL_75;
  }
  int64_t v176 = v164 + 2;
  uint64_t v174 = v164 + 1;
  if (v164 + 2 >= v303) {
    goto LABEL_89;
  }
  unint64_t v175 = v299[v176];
  if (v175)
  {
LABEL_78:
    int64_t v168 = v176;
    goto LABEL_75;
  }
  uint64_t v174 = v164 + 2;
  if (v164 + 3 >= v303) {
    goto LABEL_89;
  }
  unint64_t v175 = v299[v164 + 3];
  if (v175)
  {
    int64_t v168 = v164 + 3;
LABEL_75:
    uint64_t v166 = (v175 - 1) & v175;
    unint64_t v167 = __clz(__rbit64(v175)) + (v168 << 6);
LABEL_71:
    uint64_t v169 = *(void *)(v305 + 56);
    uint64_t v170 = *(void **)(*(void *)(v305 + 48) + 8 * v167);
    *uint64_t v46 = v170;
    uint64_t v171 = v169 + *((void *)v28 + 9) * v167;
    uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682927A0);
    sub_228B0A230(v171, (uint64_t)v46 + *(int *)(v172 + 48), type metadata accessor for CustomAnnotationViewModel);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v172 - 8) + 56))(v46, 0, 1, v172);
    id v173 = v170;
    uint64_t v174 = v168;
    goto LABEL_90;
  }
  int64_t v176 = v164 + 4;
  uint64_t v174 = v164 + 3;
  if (v164 + 4 >= v303) {
    goto LABEL_89;
  }
  unint64_t v175 = v299[v176];
  if (v175) {
    goto LABEL_78;
  }
  while (1)
  {
    int64_t v168 = v176 + 1;
    if (__OFADD__(v176, 1)) {
      break;
    }
    if (v168 >= v303)
    {
      uint64_t v174 = v294;
      goto LABEL_89;
    }
    unint64_t v175 = v299[v168];
    ++v176;
    if (v175) {
      goto LABEL_75;
    }
  }
  __break(1u);
LABEL_148:
  sub_228BADA18();
  __break(1u);
LABEL_149:
  type metadata accessor for MapBridgingCustomAnnotation();
  uint64_t result = sub_228BADA18();
  __break(1u);
  return result;
}

void sub_228AFCC0C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a1;
  uint64_t v6 = sub_228AEF96C(a1, a2, a3, a4, a5);
  sub_228AD25BC(0, &qword_268292678);
  type metadata accessor for CustomAnnotationViewModel(0);
  sub_228B091A0(&qword_268292780, (void (*)(uint64_t))type metadata accessor for CustomAnnotationViewModel);
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  unint64_t v8 = sub_228B08F74(v6, KeyPath, (uint64_t)v32, &qword_268292788, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel);
  swift_release_n();
  unint64_t v9 = MEMORY[0x263F8EE78];
  unint64_t v31 = MEMORY[0x263F8EE78];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_228BAD958();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    unint64_t v14 = MEMORY[0x263F8EE78];
    goto LABEL_12;
  }
  uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10) {
    goto LABEL_11;
  }
LABEL_3:
  if (v10 < 1)
  {
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v11 = v5;
  uint64_t v12 = 0;
  do
  {
    if ((v8 & 0xC000000000000001) != 0) {
      MEMORY[0x22A6A6FA0](v12, v8);
    }
    else {
      id v13 = *(id *)(v8 + 8 * v12 + 32);
    }
    ++v12;
    sub_228BAD878();
    sub_228BAD8B8();
    sub_228BAD8C8();
    sub_228BAD888();
  }
  while (v10 != v12);
  swift_bridgeObjectRelease();
  unint64_t v14 = v31;
  uint64_t v5 = v11;
  unint64_t v9 = MEMORY[0x263F8EE78];
LABEL_12:
  swift_bridgeObjectRetain();
  if ((v14 & 0x8000000000000000) != 0 || (v14 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
    sub_228BAD948();
    swift_release();
  }
  else
  {
    sub_228BAD9F8();
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
  uint64_t v15 = (void *)sub_228BAD498();
  objc_msgSend(v5, sel_addAnnotations_, v15);
  swift_bridgeObjectRelease();

  MEMORY[0x270FA5388](v16);
  uint64_t v17 = swift_getKeyPath();
  swift_retain();
  unint64_t v18 = sub_228B08F74(v6, v17, (uint64_t)v30, &qword_268292788, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel);
  swift_bridgeObjectRelease();
  swift_release_n();
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_228BAD958();
    swift_bridgeObjectRelease();
    if (!v19) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v19) {
      goto LABEL_24;
    }
  }
  if (v19 < 1)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    MEMORY[0x22A6A6FA0](0, MEMORY[0x263F8EE78]);
    swift_unknownObjectRelease();
    goto LABEL_43;
  }
  for (uint64_t i = 0; i != v19; ++i)
  {
    if ((v18 & 0xC000000000000001) != 0)
    {
      MEMORY[0x22A6A6FA0](i, v18);
      swift_unknownObjectRelease();
    }
  }
LABEL_24:
  swift_bridgeObjectRelease();
  unint64_t v31 = v9;
  if ((v9 & 0xC000000000000000) != 0) {
    goto LABEL_41;
  }
  sub_228BAD8A8();
  do
  {
    unint64_t v21 = v31;
    unint64_t v31 = v9;
    if ((v21 & 0x8000000000000000) != 0 || (v21 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_228BAD958();
      if (!v22)
      {
LABEL_45:
        swift_release();
        swift_release();
        sub_228AD25BC(0, &qword_268292698);
        uint64_t v29 = (void *)sub_228BAD498();
        objc_msgSend(v5, sel_addMapItems_, v29);
        swift_bridgeObjectRelease();

        return;
      }
    }
    else
    {
      uint64_t v22 = *(void *)(v21 + 16);
      swift_bridgeObjectRetain();
      if (!v22) {
        goto LABEL_45;
      }
    }
    uint64_t v23 = 4;
    while (1)
    {
      uint64_t v24 = (v21 & 0xC000000000000001) != 0
          ? (char *)MEMORY[0x22A6A6FA0](v23 - 4, v21)
          : (char *)*(id *)(v21 + 8 * v23);
      uint64_t v25 = v24;
      uint64_t v26 = v23 - 3;
      if (__OFADD__(v23 - 4, 1)) {
        break;
      }
      uint64_t v27 = *(void **)&v24[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem];
      unint64_t v9 = v27;

      if (v27)
      {
        MEMORY[0x22A6A6BE0]();
        if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_228BAD4D8();
        }
        sub_228BAD528();
        sub_228BAD4B8();
      }
      ++v23;
      if (v26 == v22) {
        goto LABEL_45;
      }
    }
    __break(1u);
LABEL_41:
    uint64_t v28 = MEMORY[0x263F8EE78];
    sub_228BAD958();
    sub_228BAD8A8();
  }
  while (!sub_228BAD958());
  if ((v28 & 0xC000000000000001) != 0) {
    goto LABEL_48;
  }
LABEL_43:
  swift_release();
}

void sub_228AFD1B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a1;
  uint64_t v6 = sub_228AED5A8(a1, a2, a3, a4, a5);
  sub_228AD25BC(0, &qword_268292678);
  type metadata accessor for MarkerAnnotationViewModel(0);
  sub_228B091A0((unint64_t *)&unk_268292740, (void (*)(uint64_t))type metadata accessor for MarkerAnnotationViewModel);
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  unint64_t v8 = 0;
  unint64_t v9 = sub_228B08F74(v6, KeyPath, (uint64_t)v35, &qword_268293FB0, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel);
  swift_release_n();
  unint64_t v34 = MEMORY[0x263F8EE78];
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_228BAD958();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10)
  {
    if (v10 < 1) {
      goto LABEL_49;
    }
    uint64_t v11 = v6;
    uint64_t v12 = v5;
    for (uint64_t i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v14 = (id)MEMORY[0x22A6A6FA0](i, v9);
      }
      else {
        id v14 = *(id *)(v9 + 8 * i + 32);
      }
      if (*((unsigned char *)v14 + OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature))
      {
      }
      else
      {
        sub_228BAD878();
        sub_228BAD8B8();
        sub_228BAD8C8();
        sub_228BAD888();
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v15 = v34;
    uint64_t v5 = v12;
    uint64_t v6 = v11;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v15 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  unint64_t v16 = MEMORY[0x263F8EE78];
  if ((v15 & 0x8000000000000000) != 0 || (v15 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
    sub_228BAD948();
    swift_release();
  }
  else
  {
    sub_228BAD9F8();
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
  uint64_t v17 = (void *)sub_228BAD498();
  objc_msgSend(v5, sel_addAnnotations_, v17);
  swift_bridgeObjectRelease();

  MEMORY[0x270FA5388](v18);
  uint64_t v19 = swift_getKeyPath();
  swift_retain();
  unint64_t v8 = sub_228B08F74(v6, v19, (uint64_t)v33, &qword_268293FB0, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel);
  swift_bridgeObjectRelease();
  swift_release_n();
  unint64_t v34 = v16;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_228BAD958();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_20;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    unint64_t v23 = MEMORY[0x263F8EE78];
    goto LABEL_34;
  }
  uint64_t v20 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v20) {
    goto LABEL_33;
  }
LABEL_20:
  if (v20 < 1) {
    goto LABEL_50;
  }
  for (uint64_t j = 0; j != v20; ++j)
  {
    if ((v8 & 0xC000000000000001) != 0) {
      id v22 = (id)MEMORY[0x22A6A6FA0](j, v8);
    }
    else {
      id v22 = *(id *)(v8 + 8 * j + 32);
    }
    if (*((unsigned char *)v22 + OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature) == 1)
    {
      sub_228BAD878();
      sub_228BAD8B8();
      sub_228BAD8C8();
      sub_228BAD888();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v23 = v34;
LABEL_34:
  unint64_t v8 = sub_228AFFF20(v23);
  swift_release();
  if (v8)
  {
    unint64_t v34 = v16;
    if (v8 >> 62) {
      goto LABEL_51;
    }
    uint64_t v24 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v24; uint64_t v24 = sub_228BAD958())
    {
      uint64_t v25 = 4;
      while (1)
      {
        uint64_t v26 = (v8 & 0xC000000000000001) != 0
            ? (char *)MEMORY[0x22A6A6FA0](v25 - 4, v8)
            : (char *)*(id *)(v8 + 8 * v25);
        uint64_t v27 = v26;
        uint64_t v28 = v25 - 3;
        if (__OFADD__(v25 - 4, 1)) {
          break;
        }
        uint64_t v29 = *(void **)&v26[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem];
        id v30 = v29;

        if (v29)
        {
          MEMORY[0x22A6A6BE0](v31);
          if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_228BAD4D8();
          }
          sub_228BAD528();
          sub_228BAD4B8();
        }
        ++v25;
        if (v28 == v24) {
          goto LABEL_52;
        }
      }
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      swift_bridgeObjectRetain();
    }
LABEL_52:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_228AD25BC(0, &qword_268292698);
    uint64_t v32 = (void *)sub_228BAD498();
    objc_msgSend(v5, sel_addMapItems_, v32);
    swift_bridgeObjectRelease();
  }
}

void sub_228AFD78C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = sub_228AEB75C(a1, a2, a3, a4, a5);
  sub_228AD25BC(0, &qword_268292678);
  type metadata accessor for UserAnnotationViewModel(0);
  sub_228B091A0(&qword_2682926F0, (void (*)(uint64_t))type metadata accessor for UserAnnotationViewModel);
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  unint64_t v7 = sub_228B08F74(v5, KeyPath, (uint64_t)v28, &qword_2682926F8, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel);
  swift_release_n();
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_228BAD958();
    swift_bridgeObjectRelease();
    if (!v8) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v8) {
      goto LABEL_9;
    }
  }
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_42;
  }
  for (uint64_t i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      MEMORY[0x22A6A6FA0](i, v7);
      swift_unknownObjectRelease();
    }
  }
LABEL_9:
  swift_bridgeObjectRelease();
  uint64_t v10 = MEMORY[0x263F8EE78];
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
    sub_228BAD948();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
  uint64_t v11 = (void *)sub_228BAD498();
  objc_msgSend(a1, sel_addAnnotations_, v11);
  swift_bridgeObjectRelease();

  MEMORY[0x270FA5388](v12);
  uint64_t v13 = swift_getKeyPath();
  swift_retain();
  unint64_t v14 = sub_228B08F74(v5, v13, (uint64_t)v27, &qword_2682926F8, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel);
  swift_bridgeObjectRelease();
  swift_release_n();
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_228BAD958();
    swift_bridgeObjectRelease();
    if (!v15) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      goto LABEL_19;
    }
  }
  if (v15 < 1)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  for (uint64_t j = 0; j != v15; ++j)
  {
    if ((v14 & 0xC000000000000001) != 0)
    {
      MEMORY[0x22A6A6FA0](j, v14);
      swift_unknownObjectRelease();
    }
  }
LABEL_19:
  swift_bridgeObjectRelease();
  if ((v10 & 0xC000000000000000) != 0)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_228BAD958();
    sub_228BAD8A8();
    if (sub_228BAD958())
    {
      if ((v17 & 0xC000000000000001) == 0)
      {
LABEL_22:
        swift_release();
        return;
      }
LABEL_43:
      MEMORY[0x22A6A6FA0](0, MEMORY[0x263F8EE78]);
      swift_unknownObjectRelease();
      goto LABEL_22;
    }
  }
  else
  {
    sub_228BAD8A8();
  }
  if (v10 < 0 || (v10 & 0x4000000000000000) != 0) {
    goto LABEL_39;
  }
  uint64_t v18 = *(void *)(v10 + 16);
  swift_bridgeObjectRetain();
  for (; v18; uint64_t v18 = sub_228BAD958())
  {
    uint64_t v19 = 4;
    while (1)
    {
      uint64_t v20 = (v10 & 0xC000000000000001) != 0
          ? (char *)MEMORY[0x22A6A6FA0](v19 - 4, v10)
          : (char *)*(id *)(v10 + 8 * v19);
      unint64_t v21 = v20;
      uint64_t v22 = v19 - 3;
      if (__OFADD__(v19 - 4, 1)) {
        break;
      }
      unint64_t v23 = *(void **)&v20[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem];
      id v24 = v23;

      if (v23)
      {
        MEMORY[0x22A6A6BE0]();
        if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_228BAD4D8();
        }
        sub_228BAD528();
        sub_228BAD4B8();
      }
      ++v19;
      if (v22 == v18) {
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
  }
LABEL_40:
  swift_release();
  swift_release();
  sub_228AD25BC(0, &qword_268292698);
  uint64_t v25 = (void *)sub_228BAD498();
  objc_msgSend(a1, sel_addMapItems_, v25);
  swift_bridgeObjectRelease();
}

uint64_t sub_228AFDC8C(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = sub_228AE9DFC(a1, a2, a3, a4, a5);
  unint64_t v58 = sub_228B08E78(MEMORY[0x263F8EE78], &qword_2682926C8);
  uint64_t v6 = v5[2];
  unint64_t v7 = 0;
  uint64_t v8 = 0;
  if (v6)
  {
    unint64_t v9 = v5 + 8;
    do
    {
      uint64_t v60 = (uint64_t)v8;
      uint64_t v56 = v6;
      uint64_t v10 = (void *)*(v9 - 2);
      __int16 v11 = *((_WORD *)v9 - 4);
      uint64_t v12 = (void *)*v9;
      uint64_t v13 = v9[6];
      char v14 = *((unsigned char *)v9 + 56);
      uint64_t v15 = v9[8];
      id v57 = (id)*(v9 - 4);
      swift_bridgeObjectRetain();
      uint64_t v54 = v10;
      __int16 v53 = v11;
      sub_228B0A008(v10, v11);
      id v52 = v12;
      swift_bridgeObjectRetain();
      uint64_t v55 = v13;
      sub_228ACF3A4(v13, v14);
      sub_228AD2678((uint64_t)v7);
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = sub_228B00940;
      *(void *)(v16 + 24) = 0;
      uint64_t v17 = v16;
      id v18 = v57;
      sub_228AD2678(v60);
      uint64_t v19 = (void *)v58;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v22 = sub_228AD18A8(v15);
      uint64_t v23 = *(void *)(v58 + 16);
      BOOL v24 = (v21 & 1) == 0;
      uint64_t v25 = v23 + v24;
      if (__OFADD__(v23, v24))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      char v26 = v21;
      if (*(void *)(v58 + 24) >= v25)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_228B03FF0(&qword_2682926C8);
          uint64_t v19 = (void *)v58;
        }
      }
      else
      {
        sub_228B01E98(v25, isUniquelyReferenced_nonNull_native, &qword_2682926C8);
        uint64_t v19 = (void *)v58;
        unint64_t v27 = sub_228AD18A8(v15);
        if ((v26 & 1) != (v28 & 1)) {
          goto LABEL_45;
        }
        unint64_t v22 = v27;
      }
      swift_bridgeObjectRelease();
      uint64_t v29 = swift_bridgeObjectRetain();
      if ((v26 & 1) == 0)
      {
        uint64_t v30 = (*(uint64_t (**)(uint64_t))(v17 + 16))(v29);
        v19[(v22 >> 6) + 8] |= 1 << v22;
        uint64_t v31 = 8 * v22;
        *(void *)(v19[6] + v31) = v15;
        *(void *)(v19[7] + v31) = v30;
        uint64_t v32 = v19[2];
        BOOL v33 = __OFADD__(v32, 1);
        uint64_t v34 = v32 + 1;
        if (v33) {
          goto LABEL_43;
        }
        void v19[2] = v34;
      }
      uint64_t v35 = v19[7];
      unint64_t v58 = (unint64_t)v19;
      uint64_t v36 = swift_bridgeObjectRelease();
      MEMORY[0x22A6A6BE0](v36);
      if (*(void *)((*(void *)(v35 + 8 * v22) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v35 + 8 * v22) & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
        sub_228BAD4D8();
      sub_228BAD528();
      sub_228BAD4B8();
      swift_bridgeObjectRelease();

      sub_228B0A024(v54, v53);
      swift_bridgeObjectRelease();

      sub_228AD26A8(v55, v14);
      v9 += 13;
      uint64_t v8 = sub_228B0AF1C;
      unint64_t v7 = sub_228B00940;
      uint64_t v6 = v56 - 1;
    }
    while (v56 != 1);
  }
  uint64_t v61 = (uint64_t)v8;
  swift_bridgeObjectRelease();
  int64_t v37 = 0;
  unint64_t v38 = v58 + 64;
  uint64_t v39 = 1 << *(unsigned char *)(v58 + 32);
  uint64_t v40 = -1;
  if (v39 < 64) {
    uint64_t v40 = ~(-1 << v39);
  }
  unint64_t v41 = v40 & *(void *)(v58 + 64);
  int64_t v42 = (unint64_t)(v39 + 63) >> 6;
  if (!v41) {
    goto LABEL_19;
  }
LABEL_18:
  unint64_t v43 = __clz(__rbit64(v41));
  v41 &= v41 - 1;
  for (unint64_t i = v43 | (v37 << 6); ; unint64_t i = __clz(__rbit64(v46)) + (v37 << 6))
  {
    uint64_t v48 = 8 * i;
    uint64_t v49 = *(void *)(*(void *)(v58 + 48) + v48);
    if (*(void *)(*(void *)(v58 + 56) + v48) >> 62)
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
      sub_228BAD948();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_228BAD9F8();
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
    uint64_t v50 = (void *)sub_228BAD498();
    objc_msgSend(a1, sel_addOverlays_level_, v50, v49);
    swift_bridgeObjectRelease();

    if (v41) {
      goto LABEL_18;
    }
LABEL_19:
    int64_t v45 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      goto LABEL_42;
    }
    if (v45 >= v42)
    {
LABEL_38:
      swift_release();
      sub_228AD2678((uint64_t)v7);
      return sub_228AD2678(v61);
    }
    unint64_t v46 = *(void *)(v38 + 8 * v45);
    ++v37;
    if (!v46)
    {
      int64_t v37 = v45 + 1;
      if (v45 + 1 >= v42) {
        goto LABEL_38;
      }
      unint64_t v46 = *(void *)(v38 + 8 * v37);
      if (!v46)
      {
        int64_t v37 = v45 + 2;
        if (v45 + 2 >= v42) {
          goto LABEL_38;
        }
        unint64_t v46 = *(void *)(v38 + 8 * v37);
        if (!v46) {
          break;
        }
      }
    }
LABEL_32:
    unint64_t v41 = (v46 - 1) & v46;
  }
  int64_t v47 = v45 + 3;
  if (v47 >= v42) {
    goto LABEL_38;
  }
  unint64_t v46 = *(void *)(v38 + 8 * v47);
  if (v46)
  {
    int64_t v37 = v47;
    goto LABEL_32;
  }
  while (1)
  {
    int64_t v37 = v47 + 1;
    if (__OFADD__(v47, 1)) {
      break;
    }
    if (v37 >= v42) {
      goto LABEL_38;
    }
    unint64_t v46 = *(void *)(v38 + 8 * v37);
    ++v47;
    if (v46) {
      goto LABEL_32;
    }
  }
LABEL_44:
  __break(1u);
LABEL_45:
  type metadata accessor for MKOverlayLevel(0);
  uint64_t result = sub_228BADA18();
  __break(1u);
  return result;
}

uint64_t sub_228AFE1A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = sub_228AE8488(a1, a2, a3, a4, a5);
  unint64_t v6 = sub_228B08E78(MEMORY[0x263F8EE78], &qword_2682926A0);
  uint64_t v7 = v5[2];
  if (v7)
  {
    uint64_t v8 = 0;
    unint64_t v9 = 0;
    uint64_t v64 = v7 - 1;
    uint64_t v10 = 32;
    uint64_t v55 = v5;
    while (1)
    {
      uint64_t v56 = v10;
      __int16 v11 = (long long *)((char *)v5 + v10);
      long long v12 = *v11;
      long long v13 = v11[1];
      long long v14 = v11[3];
      long long v70 = v11[2];
      long long v71 = v14;
      long long v68 = v12;
      long long v69 = v13;
      long long v15 = v11[4];
      long long v16 = v11[5];
      long long v17 = v11[7];
      long long v74 = v11[6];
      long long v75 = v17;
      long long v72 = v15;
      long long v73 = v16;
      sub_228B09BF8((uint64_t)&v68);
      sub_228AD2678((uint64_t)v8);
      id v18 = (void *)v69;
      unint64_t v58 = (void *)*((void *)&v70 + 1);
      uint64_t v57 = *((void *)&v69 + 1);
      uint64_t v60 = *((void *)&v73 + 1);
      char v59 = v74;
      uint64_t v62 = *((void *)&v74 + 1);
      char v61 = v75;
      uint64_t v19 = *((void *)&v75 + 1);
      uint64_t v20 = (void *)v68;
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = sub_228B00940;
      *(void *)(v21 + 24) = 0;
      uint64_t v67 = v21;
      id v22 = v20;
      sub_228AD2678((uint64_t)v9);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v25 = sub_228AD18A8(v19);
      uint64_t v26 = *(void *)(v6 + 16);
      BOOL v27 = (v24 & 1) == 0;
      uint64_t v28 = v26 + v27;
      if (__OFADD__(v26, v27))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      char v29 = v24;
      if (*(void *)(v6 + 24) >= v28)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_228B03FF0(&qword_2682926A0);
        }
      }
      else
      {
        sub_228B01E98(v28, isUniquelyReferenced_nonNull_native, &qword_2682926A0);
        unint64_t v30 = sub_228AD18A8(v19);
        if ((v29 & 1) != (v31 & 1)) {
          goto LABEL_46;
        }
        unint64_t v25 = v30;
      }
      swift_bridgeObjectRelease();
      uint64_t v32 = swift_bridgeObjectRetain();
      if ((v29 & 1) == 0)
      {
        uint64_t v33 = (*(uint64_t (**)(uint64_t))(v67 + 16))(v32);
        *(void *)(v6 + 8 * (v25 >> 6) + 64) |= 1 << v25;
        uint64_t v34 = 8 * v25;
        *(void *)(*(void *)(v6 + 48) + v34) = v19;
        *(void *)(*(void *)(v6 + 56) + v34) = v33;
        uint64_t v35 = *(void *)(v6 + 16);
        BOOL v36 = __OFADD__(v35, 1);
        uint64_t v37 = v35 + 1;
        if (v36) {
          goto LABEL_44;
        }
        *(void *)(v6 + 16) = v37;
      }
      uint64_t v38 = *(void *)(v6 + 56);
      uint64_t v39 = swift_bridgeObjectRelease();
      MEMORY[0x22A6A6BE0](v39);
      if (*(void *)((*(void *)(v38 + 8 * v25) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v38 + 8 * v25) & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
        sub_228BAD4D8();
      sub_228BAD528();
      sub_228BAD4B8();
      swift_bridgeObjectRelease();

      sub_228B09D08(v18, v57);
      swift_bridgeObjectRelease();

      sub_228AD26A8(v60, v59);
      sub_228AD26A8(v62, v61);
      if (!v64) {
        break;
      }
      --v64;
      uint64_t v5 = v55;
      uint64_t v10 = v56 + 128;
      unint64_t v9 = sub_228B0AF1C;
      uint64_t v8 = sub_228B00940;
    }
    swift_bridgeObjectRelease();
    id v65 = sub_228B0AF1C;
    id v63 = sub_228B00940;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v63 = 0;
    id v65 = 0;
  }
  int64_t v40 = 0;
  unint64_t v41 = v6 + 64;
  uint64_t v42 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v43 = -1;
  if (v42 < 64) {
    uint64_t v43 = ~(-1 << v42);
  }
  unint64_t v44 = v43 & *(void *)(v6 + 64);
  int64_t v45 = (unint64_t)(v42 + 63) >> 6;
  if (!v44) {
    goto LABEL_22;
  }
LABEL_21:
  unint64_t v46 = __clz(__rbit64(v44));
  v44 &= v44 - 1;
  for (unint64_t i = v46 | (v40 << 6); ; unint64_t i = __clz(__rbit64(v49)) + (v40 << 6))
  {
    uint64_t v51 = 8 * i;
    uint64_t v52 = *(void *)(*(void *)(v6 + 48) + v51);
    if (*(void *)(*(void *)(v6 + 56) + v51) >> 62)
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
      sub_228BAD948();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_228BAD9F8();
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
    __int16 v53 = (void *)sub_228BAD498();
    objc_msgSend(a1, sel_addOverlays_level_, v53, v52);
    swift_bridgeObjectRelease();

    if (v44) {
      goto LABEL_21;
    }
LABEL_22:
    int64_t v48 = v40 + 1;
    if (__OFADD__(v40, 1)) {
      goto LABEL_43;
    }
    if (v48 >= v45)
    {
LABEL_41:
      swift_release();
      sub_228AD2678((uint64_t)v63);
      return sub_228AD2678((uint64_t)v65);
    }
    unint64_t v49 = *(void *)(v41 + 8 * v48);
    ++v40;
    if (!v49)
    {
      int64_t v40 = v48 + 1;
      if (v48 + 1 >= v45) {
        goto LABEL_41;
      }
      unint64_t v49 = *(void *)(v41 + 8 * v40);
      if (!v49)
      {
        int64_t v40 = v48 + 2;
        if (v48 + 2 >= v45) {
          goto LABEL_41;
        }
        unint64_t v49 = *(void *)(v41 + 8 * v40);
        if (!v49) {
          break;
        }
      }
    }
LABEL_35:
    unint64_t v44 = (v49 - 1) & v49;
  }
  int64_t v50 = v48 + 3;
  if (v50 >= v45) {
    goto LABEL_41;
  }
  unint64_t v49 = *(void *)(v41 + 8 * v50);
  if (v49)
  {
    int64_t v40 = v50;
    goto LABEL_35;
  }
  while (1)
  {
    int64_t v40 = v50 + 1;
    if (__OFADD__(v50, 1)) {
      break;
    }
    if (v40 >= v45) {
      goto LABEL_41;
    }
    unint64_t v49 = *(void *)(v41 + 8 * v40);
    ++v50;
    if (v49) {
      goto LABEL_35;
    }
  }
LABEL_45:
  __break(1u);
LABEL_46:
  type metadata accessor for MKOverlayLevel(0);
  uint64_t result = sub_228BADA18();
  __break(1u);
  return result;
}

uint64_t sub_228AFE6E0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = sub_228AE7084(a1, a2, a3, a4, a5);
  unint64_t v6 = sub_228B08E78(MEMORY[0x263F8EE78], &qword_268292650);
  uint64_t v7 = *(void *)(v5 + 16);
  if (v7)
  {
    long long v8 = *(_OWORD *)(v5 + 128);
    long long v67 = *(_OWORD *)(v5 + 112);
    long long v68 = v8;
    long long v9 = *(_OWORD *)(v5 + 160);
    long long v69 = *(_OWORD *)(v5 + 144);
    long long v70 = v9;
    long long v10 = *(_OWORD *)(v5 + 48);
    long long v11 = *(_OWORD *)(v5 + 80);
    long long v12 = *(_OWORD *)(v5 + 96);
    long long v64 = *(_OWORD *)(v5 + 64);
    long long v65 = v11;
    long long v66 = v12;
    uint64_t v59 = v5;
    long long v62 = *(_OWORD *)(v5 + 32);
    long long v63 = v10;
    sub_228B09778((uint64_t)&v62);
    sub_228AD2678(0);
    long long v13 = 0;
    uint64_t v14 = *((void *)&v70 + 1);
    uint64_t v15 = v7 - 1;
    for (uint64_t i = 176; ; i += 144)
    {
      long long v17 = (void *)v62;
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = sub_228B00940;
      *(void *)(v18 + 24) = 0;
      id v19 = v17;
      sub_228AD2678((uint64_t)v13);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v22 = sub_228AD18A8(v14);
      uint64_t v23 = *(void *)(v6 + 16);
      BOOL v24 = (v21 & 1) == 0;
      uint64_t v25 = v23 + v24;
      if (__OFADD__(v23, v24))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      char v26 = v21;
      if (*(void *)(v6 + 24) >= v25)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_228B03FF0(&qword_268292650);
        }
      }
      else
      {
        sub_228B01E98(v25, isUniquelyReferenced_nonNull_native, &qword_268292650);
        unint64_t v27 = sub_228AD18A8(v14);
        if ((v26 & 1) != (v28 & 1)) {
          goto LABEL_46;
        }
        unint64_t v22 = v27;
      }
      swift_bridgeObjectRelease();
      uint64_t v29 = swift_bridgeObjectRetain();
      if ((v26 & 1) == 0)
      {
        uint64_t v30 = (*(uint64_t (**)(uint64_t))(v18 + 16))(v29);
        *(void *)(v6 + 8 * (v22 >> 6) + 64) |= 1 << v22;
        uint64_t v31 = 8 * v22;
        *(void *)(*(void *)(v6 + 48) + v31) = v14;
        *(void *)(*(void *)(v6 + 56) + v31) = v30;
        uint64_t v32 = *(void *)(v6 + 16);
        BOOL v33 = __OFADD__(v32, 1);
        uint64_t v34 = v32 + 1;
        if (v33) {
          goto LABEL_44;
        }
        *(void *)(v6 + 16) = v34;
      }
      uint64_t v35 = *(void *)(v6 + 56);
      uint64_t v36 = swift_bridgeObjectRelease();
      MEMORY[0x22A6A6BE0](v36);
      if (*(void *)((*(void *)(v35 + 8 * v22) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v35 + 8 * v22) & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
        sub_228BAD4D8();
      sub_228BAD528();
      sub_228BAD4B8();

      sub_228B09840((uint64_t)&v62 + 8);
      if (!v15) {
        break;
      }
      long long v62 = *(_OWORD *)(v59 + i);
      long long v37 = *(_OWORD *)(v59 + i + 16);
      long long v38 = *(_OWORD *)(v59 + i + 32);
      long long v39 = *(_OWORD *)(v59 + i + 64);
      long long v65 = *(_OWORD *)(v59 + i + 48);
      long long v66 = v39;
      long long v63 = v37;
      long long v64 = v38;
      long long v40 = *(_OWORD *)(v59 + i + 80);
      long long v41 = *(_OWORD *)(v59 + i + 96);
      long long v42 = *(_OWORD *)(v59 + i + 112);
      long long v70 = *(_OWORD *)(v59 + i + 128);
      long long v68 = v41;
      long long v69 = v42;
      long long v67 = v40;
      sub_228B09778((uint64_t)&v62);
      sub_228AD2678((uint64_t)sub_228B00940);
      uint64_t v14 = *((void *)&v70 + 1);
      --v15;
      long long v13 = sub_228B09810;
    }
    swift_bridgeObjectRelease();
    uint64_t v60 = sub_228B09810;
    unint64_t v58 = sub_228B00940;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v58 = 0;
    uint64_t v60 = 0;
  }
  int64_t v43 = 0;
  unint64_t v44 = v6 + 64;
  uint64_t v45 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v46 = -1;
  if (v45 < 64) {
    uint64_t v46 = ~(-1 << v45);
  }
  unint64_t v47 = v46 & *(void *)(v6 + 64);
  int64_t v48 = (unint64_t)(v45 + 63) >> 6;
  if (!v47) {
    goto LABEL_22;
  }
LABEL_21:
  unint64_t v49 = __clz(__rbit64(v47));
  v47 &= v47 - 1;
  for (unint64_t j = v49 | (v43 << 6); ; unint64_t j = __clz(__rbit64(v52)) + (v43 << 6))
  {
    uint64_t v54 = 8 * j;
    uint64_t v55 = *(void *)(*(void *)(v6 + 48) + v54);
    if (*(void *)(*(void *)(v6 + 56) + v54) >> 62)
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
      sub_228BAD948();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_228BAD9F8();
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
    uint64_t v56 = (void *)sub_228BAD498();
    objc_msgSend(a1, sel_addOverlays_level_, v56, v55, v58, v60);
    swift_bridgeObjectRelease();

    if (v47) {
      goto LABEL_21;
    }
LABEL_22:
    int64_t v51 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      goto LABEL_43;
    }
    if (v51 >= v48)
    {
LABEL_41:
      swift_release();
      sub_228AD2678((uint64_t)v58);
      return sub_228AD2678((uint64_t)v60);
    }
    unint64_t v52 = *(void *)(v44 + 8 * v51);
    ++v43;
    if (!v52)
    {
      int64_t v43 = v51 + 1;
      if (v51 + 1 >= v48) {
        goto LABEL_41;
      }
      unint64_t v52 = *(void *)(v44 + 8 * v43);
      if (!v52)
      {
        int64_t v43 = v51 + 2;
        if (v51 + 2 >= v48) {
          goto LABEL_41;
        }
        unint64_t v52 = *(void *)(v44 + 8 * v43);
        if (!v52) {
          break;
        }
      }
    }
LABEL_35:
    unint64_t v47 = (v52 - 1) & v52;
  }
  int64_t v53 = v51 + 3;
  if (v53 >= v48) {
    goto LABEL_41;
  }
  unint64_t v52 = *(void *)(v44 + 8 * v53);
  if (v52)
  {
    int64_t v43 = v53;
    goto LABEL_35;
  }
  while (1)
  {
    int64_t v43 = v53 + 1;
    if (__OFADD__(v53, 1)) {
      break;
    }
    if (v43 >= v48) {
      goto LABEL_41;
    }
    unint64_t v52 = *(void *)(v44 + 8 * v43);
    ++v53;
    if (v52) {
      goto LABEL_35;
    }
  }
LABEL_45:
  __break(1u);
LABEL_46:
  type metadata accessor for MKOverlayLevel(0);
  uint64_t result = sub_228BADA18();
  __break(1u);
  return result;
}

uint64_t sub_228AFEBF0(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = sub_228AF4BAC(a1, a2, a3, a4, a5);
  unint64_t v58 = sub_228B08E78(MEMORY[0x263F8EE78], &qword_2682926C8);
  uint64_t v6 = v5[2];
  uint64_t v7 = 0;
  long long v8 = 0;
  if (v6)
  {
    long long v9 = v5 + 8;
    do
    {
      uint64_t v60 = (uint64_t)v8;
      uint64_t v56 = v6;
      long long v10 = (void *)*(v9 - 2);
      __int16 v11 = *((_WORD *)v9 - 4);
      long long v12 = (void *)*v9;
      uint64_t v13 = v9[6];
      char v14 = *((unsigned char *)v9 + 56);
      uint64_t v15 = v9[8];
      id v57 = (id)*(v9 - 4);
      swift_bridgeObjectRetain();
      uint64_t v54 = v10;
      __int16 v53 = v11;
      sub_228B0A008(v10, v11);
      id v52 = v12;
      swift_bridgeObjectRetain();
      uint64_t v55 = v13;
      sub_228ACF3A4(v13, v14);
      sub_228AD2678((uint64_t)v7);
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = sub_228B00940;
      *(void *)(v16 + 24) = 0;
      uint64_t v17 = v16;
      id v18 = v57;
      sub_228AD2678(v60);
      id v19 = (void *)v58;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v22 = sub_228AD18A8(v15);
      uint64_t v23 = *(void *)(v58 + 16);
      BOOL v24 = (v21 & 1) == 0;
      uint64_t v25 = v23 + v24;
      if (__OFADD__(v23, v24))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      char v26 = v21;
      if (*(void *)(v58 + 24) >= v25)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_228B03FF0(&qword_2682926C8);
          id v19 = (void *)v58;
        }
      }
      else
      {
        sub_228B01E98(v25, isUniquelyReferenced_nonNull_native, &qword_2682926C8);
        id v19 = (void *)v58;
        unint64_t v27 = sub_228AD18A8(v15);
        if ((v26 & 1) != (v28 & 1)) {
          goto LABEL_45;
        }
        unint64_t v22 = v27;
      }
      swift_bridgeObjectRelease();
      uint64_t v29 = swift_bridgeObjectRetain();
      if ((v26 & 1) == 0)
      {
        uint64_t v30 = (*(uint64_t (**)(uint64_t))(v17 + 16))(v29);
        v19[(v22 >> 6) + 8] |= 1 << v22;
        uint64_t v31 = 8 * v22;
        *(void *)(v19[6] + v31) = v15;
        *(void *)(v19[7] + v31) = v30;
        uint64_t v32 = v19[2];
        BOOL v33 = __OFADD__(v32, 1);
        uint64_t v34 = v32 + 1;
        if (v33) {
          goto LABEL_43;
        }
        void v19[2] = v34;
      }
      uint64_t v35 = v19[7];
      unint64_t v58 = (unint64_t)v19;
      uint64_t v36 = swift_bridgeObjectRelease();
      MEMORY[0x22A6A6BE0](v36);
      if (*(void *)((*(void *)(v35 + 8 * v22) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v35 + 8 * v22) & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
        sub_228BAD4D8();
      sub_228BAD528();
      sub_228BAD4B8();
      swift_bridgeObjectRelease();

      sub_228B0A024(v54, v53);
      swift_bridgeObjectRelease();

      sub_228AD26A8(v55, v14);
      v9 += 13;
      long long v8 = sub_228B0AF1C;
      uint64_t v7 = sub_228B00940;
      uint64_t v6 = v56 - 1;
    }
    while (v56 != 1);
  }
  uint64_t v61 = (uint64_t)v8;
  swift_bridgeObjectRelease();
  int64_t v37 = 0;
  unint64_t v38 = v58 + 64;
  uint64_t v39 = 1 << *(unsigned char *)(v58 + 32);
  uint64_t v40 = -1;
  if (v39 < 64) {
    uint64_t v40 = ~(-1 << v39);
  }
  unint64_t v41 = v40 & *(void *)(v58 + 64);
  int64_t v42 = (unint64_t)(v39 + 63) >> 6;
  if (!v41) {
    goto LABEL_19;
  }
LABEL_18:
  unint64_t v43 = __clz(__rbit64(v41));
  v41 &= v41 - 1;
  for (unint64_t i = v43 | (v37 << 6); ; unint64_t i = __clz(__rbit64(v46)) + (v37 << 6))
  {
    uint64_t v48 = 8 * i;
    uint64_t v49 = *(void *)(*(void *)(v58 + 48) + v48);
    if (*(void *)(*(void *)(v58 + 56) + v48) >> 62)
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
      sub_228BAD948();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_228BAD9F8();
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
    int64_t v50 = (void *)sub_228BAD498();
    objc_msgSend(a1, sel_addOverlays_level_, v50, v49);
    swift_bridgeObjectRelease();

    if (v41) {
      goto LABEL_18;
    }
LABEL_19:
    int64_t v45 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      goto LABEL_42;
    }
    if (v45 >= v42)
    {
LABEL_38:
      swift_release();
      sub_228AD2678((uint64_t)v7);
      return sub_228AD2678(v61);
    }
    unint64_t v46 = *(void *)(v38 + 8 * v45);
    ++v37;
    if (!v46)
    {
      int64_t v37 = v45 + 1;
      if (v45 + 1 >= v42) {
        goto LABEL_38;
      }
      unint64_t v46 = *(void *)(v38 + 8 * v37);
      if (!v46)
      {
        int64_t v37 = v45 + 2;
        if (v45 + 2 >= v42) {
          goto LABEL_38;
        }
        unint64_t v46 = *(void *)(v38 + 8 * v37);
        if (!v46) {
          break;
        }
      }
    }
LABEL_32:
    unint64_t v41 = (v46 - 1) & v46;
  }
  int64_t v47 = v45 + 3;
  if (v47 >= v42) {
    goto LABEL_38;
  }
  unint64_t v46 = *(void *)(v38 + 8 * v47);
  if (v46)
  {
    int64_t v37 = v47;
    goto LABEL_32;
  }
  while (1)
  {
    int64_t v37 = v47 + 1;
    if (__OFADD__(v47, 1)) {
      break;
    }
    if (v37 >= v42) {
      goto LABEL_38;
    }
    unint64_t v46 = *(void *)(v38 + 8 * v37);
    ++v47;
    if (v46) {
      goto LABEL_32;
    }
  }
LABEL_44:
  __break(1u);
LABEL_45:
  type metadata accessor for MKOverlayLevel(0);
  uint64_t result = sub_228BADA18();
  __break(1u);
  return result;
}

uint64_t sub_228AFF10C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = sub_228AF31A4(a1, a2, a3, a4, a5);
  unint64_t v6 = sub_228B08E78(MEMORY[0x263F8EE78], &qword_2682926A0);
  uint64_t v7 = v5[2];
  if (v7)
  {
    long long v8 = 0;
    long long v9 = 0;
    uint64_t v64 = v7 - 1;
    uint64_t v10 = 32;
    uint64_t v55 = v5;
    while (1)
    {
      uint64_t v56 = v10;
      __int16 v11 = (long long *)((char *)v5 + v10);
      long long v12 = *v11;
      long long v13 = v11[1];
      long long v14 = v11[3];
      long long v70 = v11[2];
      long long v71 = v14;
      long long v68 = v12;
      long long v69 = v13;
      long long v15 = v11[4];
      long long v16 = v11[5];
      long long v17 = v11[7];
      long long v74 = v11[6];
      long long v75 = v17;
      long long v72 = v15;
      long long v73 = v16;
      sub_228B09BF8((uint64_t)&v68);
      sub_228AD2678((uint64_t)v8);
      id v18 = (void *)v69;
      unint64_t v58 = (void *)*((void *)&v70 + 1);
      uint64_t v57 = *((void *)&v69 + 1);
      uint64_t v60 = *((void *)&v73 + 1);
      char v59 = v74;
      uint64_t v62 = *((void *)&v74 + 1);
      char v61 = v75;
      uint64_t v19 = *((void *)&v75 + 1);
      uint64_t v20 = (void *)v68;
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = sub_228B00940;
      *(void *)(v21 + 24) = 0;
      uint64_t v67 = v21;
      id v22 = v20;
      sub_228AD2678((uint64_t)v9);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v25 = sub_228AD18A8(v19);
      uint64_t v26 = *(void *)(v6 + 16);
      BOOL v27 = (v24 & 1) == 0;
      uint64_t v28 = v26 + v27;
      if (__OFADD__(v26, v27))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      char v29 = v24;
      if (*(void *)(v6 + 24) >= v28)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_228B03FF0(&qword_2682926A0);
        }
      }
      else
      {
        sub_228B01E98(v28, isUniquelyReferenced_nonNull_native, &qword_2682926A0);
        unint64_t v30 = sub_228AD18A8(v19);
        if ((v29 & 1) != (v31 & 1)) {
          goto LABEL_46;
        }
        unint64_t v25 = v30;
      }
      swift_bridgeObjectRelease();
      uint64_t v32 = swift_bridgeObjectRetain();
      if ((v29 & 1) == 0)
      {
        uint64_t v33 = (*(uint64_t (**)(uint64_t))(v67 + 16))(v32);
        *(void *)(v6 + 8 * (v25 >> 6) + 64) |= 1 << v25;
        uint64_t v34 = 8 * v25;
        *(void *)(*(void *)(v6 + 48) + v34) = v19;
        *(void *)(*(void *)(v6 + 56) + v34) = v33;
        uint64_t v35 = *(void *)(v6 + 16);
        BOOL v36 = __OFADD__(v35, 1);
        uint64_t v37 = v35 + 1;
        if (v36) {
          goto LABEL_44;
        }
        *(void *)(v6 + 16) = v37;
      }
      uint64_t v38 = *(void *)(v6 + 56);
      uint64_t v39 = swift_bridgeObjectRelease();
      MEMORY[0x22A6A6BE0](v39);
      if (*(void *)((*(void *)(v38 + 8 * v25) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v38 + 8 * v25) & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
        sub_228BAD4D8();
      sub_228BAD528();
      sub_228BAD4B8();
      swift_bridgeObjectRelease();

      sub_228B09D08(v18, v57);
      swift_bridgeObjectRelease();

      sub_228AD26A8(v60, v59);
      sub_228AD26A8(v62, v61);
      if (!v64) {
        break;
      }
      --v64;
      uint64_t v5 = v55;
      uint64_t v10 = v56 + 128;
      long long v9 = sub_228B0AF1C;
      long long v8 = sub_228B00940;
    }
    swift_bridgeObjectRelease();
    long long v65 = sub_228B0AF1C;
    long long v63 = sub_228B00940;
  }
  else
  {
    swift_bridgeObjectRelease();
    long long v63 = 0;
    long long v65 = 0;
  }
  int64_t v40 = 0;
  unint64_t v41 = v6 + 64;
  uint64_t v42 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v43 = -1;
  if (v42 < 64) {
    uint64_t v43 = ~(-1 << v42);
  }
  unint64_t v44 = v43 & *(void *)(v6 + 64);
  int64_t v45 = (unint64_t)(v42 + 63) >> 6;
  if (!v44) {
    goto LABEL_22;
  }
LABEL_21:
  unint64_t v46 = __clz(__rbit64(v44));
  v44 &= v44 - 1;
  for (unint64_t i = v46 | (v40 << 6); ; unint64_t i = __clz(__rbit64(v49)) + (v40 << 6))
  {
    uint64_t v51 = 8 * i;
    uint64_t v52 = *(void *)(*(void *)(v6 + 48) + v51);
    if (*(void *)(*(void *)(v6 + 56) + v51) >> 62)
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
      sub_228BAD948();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_228BAD9F8();
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
    __int16 v53 = (void *)sub_228BAD498();
    objc_msgSend(a1, sel_addOverlays_level_, v53, v52);
    swift_bridgeObjectRelease();

    if (v44) {
      goto LABEL_21;
    }
LABEL_22:
    int64_t v48 = v40 + 1;
    if (__OFADD__(v40, 1)) {
      goto LABEL_43;
    }
    if (v48 >= v45)
    {
LABEL_41:
      swift_release();
      sub_228AD2678((uint64_t)v63);
      return sub_228AD2678((uint64_t)v65);
    }
    unint64_t v49 = *(void *)(v41 + 8 * v48);
    ++v40;
    if (!v49)
    {
      int64_t v40 = v48 + 1;
      if (v48 + 1 >= v45) {
        goto LABEL_41;
      }
      unint64_t v49 = *(void *)(v41 + 8 * v40);
      if (!v49)
      {
        int64_t v40 = v48 + 2;
        if (v48 + 2 >= v45) {
          goto LABEL_41;
        }
        unint64_t v49 = *(void *)(v41 + 8 * v40);
        if (!v49) {
          break;
        }
      }
    }
LABEL_35:
    unint64_t v44 = (v49 - 1) & v49;
  }
  int64_t v50 = v48 + 3;
  if (v50 >= v45) {
    goto LABEL_41;
  }
  unint64_t v49 = *(void *)(v41 + 8 * v50);
  if (v49)
  {
    int64_t v40 = v50;
    goto LABEL_35;
  }
  while (1)
  {
    int64_t v40 = v50 + 1;
    if (__OFADD__(v50, 1)) {
      break;
    }
    if (v40 >= v45) {
      goto LABEL_41;
    }
    unint64_t v49 = *(void *)(v41 + 8 * v40);
    ++v50;
    if (v49) {
      goto LABEL_35;
    }
  }
LABEL_45:
  __break(1u);
LABEL_46:
  type metadata accessor for MKOverlayLevel(0);
  uint64_t result = sub_228BADA18();
  __break(1u);
  return result;
}

uint64_t sub_228AFF644(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = sub_228AF1CF8(a1, a2, a3, a4, a5);
  unint64_t v6 = sub_228B08E78(MEMORY[0x263F8EE78], &qword_268292650);
  uint64_t v7 = *(void *)(v5 + 16);
  if (v7)
  {
    long long v8 = *(_OWORD *)(v5 + 128);
    long long v67 = *(_OWORD *)(v5 + 112);
    long long v68 = v8;
    long long v9 = *(_OWORD *)(v5 + 160);
    long long v69 = *(_OWORD *)(v5 + 144);
    long long v70 = v9;
    long long v10 = *(_OWORD *)(v5 + 48);
    long long v11 = *(_OWORD *)(v5 + 80);
    long long v12 = *(_OWORD *)(v5 + 96);
    long long v64 = *(_OWORD *)(v5 + 64);
    long long v65 = v11;
    long long v66 = v12;
    uint64_t v59 = v5;
    long long v62 = *(_OWORD *)(v5 + 32);
    long long v63 = v10;
    sub_228B09778((uint64_t)&v62);
    sub_228AD2678(0);
    long long v13 = 0;
    uint64_t v14 = *((void *)&v70 + 1);
    uint64_t v15 = v7 - 1;
    for (uint64_t i = 176; ; i += 144)
    {
      long long v17 = (void *)v62;
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = sub_228B00940;
      *(void *)(v18 + 24) = 0;
      id v19 = v17;
      sub_228AD2678((uint64_t)v13);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v22 = sub_228AD18A8(v14);
      uint64_t v23 = *(void *)(v6 + 16);
      BOOL v24 = (v21 & 1) == 0;
      uint64_t v25 = v23 + v24;
      if (__OFADD__(v23, v24))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      char v26 = v21;
      if (*(void *)(v6 + 24) >= v25)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_228B03FF0(&qword_268292650);
        }
      }
      else
      {
        sub_228B01E98(v25, isUniquelyReferenced_nonNull_native, &qword_268292650);
        unint64_t v27 = sub_228AD18A8(v14);
        if ((v26 & 1) != (v28 & 1)) {
          goto LABEL_46;
        }
        unint64_t v22 = v27;
      }
      swift_bridgeObjectRelease();
      uint64_t v29 = swift_bridgeObjectRetain();
      if ((v26 & 1) == 0)
      {
        uint64_t v30 = (*(uint64_t (**)(uint64_t))(v18 + 16))(v29);
        *(void *)(v6 + 8 * (v22 >> 6) + 64) |= 1 << v22;
        uint64_t v31 = 8 * v22;
        *(void *)(*(void *)(v6 + 48) + v31) = v14;
        *(void *)(*(void *)(v6 + 56) + v31) = v30;
        uint64_t v32 = *(void *)(v6 + 16);
        BOOL v33 = __OFADD__(v32, 1);
        uint64_t v34 = v32 + 1;
        if (v33) {
          goto LABEL_44;
        }
        *(void *)(v6 + 16) = v34;
      }
      uint64_t v35 = *(void *)(v6 + 56);
      uint64_t v36 = swift_bridgeObjectRelease();
      MEMORY[0x22A6A6BE0](v36);
      if (*(void *)((*(void *)(v35 + 8 * v22) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v35 + 8 * v22) & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
        sub_228BAD4D8();
      sub_228BAD528();
      sub_228BAD4B8();

      sub_228B09840((uint64_t)&v62 + 8);
      if (!v15) {
        break;
      }
      long long v62 = *(_OWORD *)(v59 + i);
      long long v37 = *(_OWORD *)(v59 + i + 16);
      long long v38 = *(_OWORD *)(v59 + i + 32);
      long long v39 = *(_OWORD *)(v59 + i + 64);
      long long v65 = *(_OWORD *)(v59 + i + 48);
      long long v66 = v39;
      long long v63 = v37;
      long long v64 = v38;
      long long v40 = *(_OWORD *)(v59 + i + 80);
      long long v41 = *(_OWORD *)(v59 + i + 96);
      long long v42 = *(_OWORD *)(v59 + i + 112);
      long long v70 = *(_OWORD *)(v59 + i + 128);
      long long v68 = v41;
      long long v69 = v42;
      long long v67 = v40;
      sub_228B09778((uint64_t)&v62);
      sub_228AD2678((uint64_t)sub_228B00940);
      uint64_t v14 = *((void *)&v70 + 1);
      --v15;
      long long v13 = sub_228B0AF1C;
    }
    swift_bridgeObjectRelease();
    uint64_t v60 = sub_228B0AF1C;
    unint64_t v58 = sub_228B00940;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v58 = 0;
    uint64_t v60 = 0;
  }
  int64_t v43 = 0;
  unint64_t v44 = v6 + 64;
  uint64_t v45 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v46 = -1;
  if (v45 < 64) {
    uint64_t v46 = ~(-1 << v45);
  }
  unint64_t v47 = v46 & *(void *)(v6 + 64);
  int64_t v48 = (unint64_t)(v45 + 63) >> 6;
  if (!v47) {
    goto LABEL_22;
  }
LABEL_21:
  unint64_t v49 = __clz(__rbit64(v47));
  v47 &= v47 - 1;
  for (unint64_t j = v49 | (v43 << 6); ; unint64_t j = __clz(__rbit64(v52)) + (v43 << 6))
  {
    uint64_t v54 = 8 * j;
    uint64_t v55 = *(void *)(*(void *)(v6 + 48) + v54);
    if (*(void *)(*(void *)(v6 + 56) + v54) >> 62)
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
      sub_228BAD948();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_228BAD9F8();
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
    uint64_t v56 = (void *)sub_228BAD498();
    objc_msgSend(a1, sel_addOverlays_level_, v56, v55, v58, v60);
    swift_bridgeObjectRelease();

    if (v47) {
      goto LABEL_21;
    }
LABEL_22:
    int64_t v51 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      goto LABEL_43;
    }
    if (v51 >= v48)
    {
LABEL_41:
      swift_release();
      sub_228AD2678((uint64_t)v58);
      return sub_228AD2678((uint64_t)v60);
    }
    unint64_t v52 = *(void *)(v44 + 8 * v51);
    ++v43;
    if (!v52)
    {
      int64_t v43 = v51 + 1;
      if (v51 + 1 >= v48) {
        goto LABEL_41;
      }
      unint64_t v52 = *(void *)(v44 + 8 * v43);
      if (!v52)
      {
        int64_t v43 = v51 + 2;
        if (v51 + 2 >= v48) {
          goto LABEL_41;
        }
        unint64_t v52 = *(void *)(v44 + 8 * v43);
        if (!v52) {
          break;
        }
      }
    }
LABEL_35:
    unint64_t v47 = (v52 - 1) & v52;
  }
  int64_t v53 = v51 + 3;
  if (v53 >= v48) {
    goto LABEL_41;
  }
  unint64_t v52 = *(void *)(v44 + 8 * v53);
  if (v52)
  {
    int64_t v43 = v53;
    goto LABEL_35;
  }
  while (1)
  {
    int64_t v43 = v53 + 1;
    if (__OFADD__(v53, 1)) {
      break;
    }
    if (v43 >= v48) {
      goto LABEL_41;
    }
    unint64_t v52 = *(void *)(v44 + 8 * v43);
    ++v53;
    if (v52) {
      goto LABEL_35;
    }
  }
LABEL_45:
  __break(1u);
LABEL_46:
  type metadata accessor for MKOverlayLevel(0);
  uint64_t result = sub_228BADA18();
  __break(1u);
  return result;
}

uint64_t sub_228AFFB54(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_228BAD8A8();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x22A6A6FA0](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        if (!swift_dynamicCastObjCProtocolConditional())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_228BAD878();
        sub_228BAD8B8();
        sub_228BAD8C8();
        sub_228BAD888();
        if (v4 == v2) {
          return v12;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        long long v8 = *(void **)(v6 + 8 * v5);
        uint64_t v9 = swift_dynamicCastObjCProtocolConditional();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        sub_228BAD878();
        sub_228BAD8B8();
        sub_228BAD8C8();
        sub_228BAD888();
        ++v5;
        if (v7 == v2) {
          return v12;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_228BAD958();
    swift_bridgeObjectRelease();
    sub_228BAD8A8();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_228BAD958();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_228AFFD3C(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_228BAD8A8();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x22A6A6FA0](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        type metadata accessor for MapBridgingMarker();
        if (!swift_dynamicCastClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_228BAD878();
        sub_228BAD8B8();
        sub_228BAD8C8();
        sub_228BAD888();
        if (v4 == v2) {
          return v9;
        }
      }
      __break(1u);
    }
    else
    {
      for (uint64_t j = 0; ; ++j)
      {
        uint64_t v6 = j + 1;
        if (__OFADD__(j, 1)) {
          break;
        }
        type metadata accessor for MapBridgingMarker();
        uint64_t v7 = swift_dynamicCastClass();
        if (!v7)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v7;
        swift_unknownObjectRetain();
        sub_228BAD878();
        sub_228BAD8B8();
        sub_228BAD8C8();
        sub_228BAD888();
        if (v6 == v2) {
          return v9;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_228BAD958();
    swift_bridgeObjectRelease();
    sub_228BAD8A8();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_228BAD958();
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t sub_228AFFF20(unint64_t a1)
{
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (!(a1 >> 62))
  {
    uint64_t result = sub_228BAD8A8();
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
    return v8;
  }
  swift_bridgeObjectRetain();
  sub_228BAD958();
  swift_bridgeObjectRelease();
  sub_228BAD8A8();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_228BAD958();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3) {
    return v8;
  }
LABEL_3:
  if (v3 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = 0;
      do
      {
        MEMORY[0x22A6A6FA0](v4++, a1);
        sub_228BAD878();
        sub_228BAD8B8();
        sub_228BAD8C8();
        sub_228BAD888();
      }
      while (v3 != v4);
    }
    else
    {
      uint64_t v5 = (void **)(a1 + 32);
      do
      {
        uint64_t v6 = *v5++;
        id v7 = v6;
        sub_228BAD878();
        sub_228BAD8B8();
        sub_228BAD8C8();
        sub_228BAD888();
        --v3;
      }
      while (v3);
    }
    return v8;
  }
  __break(1u);
  return result;
}

void sub_228B00098(unint64_t a1)
{
  uint64_t v2 = v1;
  if (sub_228AFFB54(a1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
    objc_msgSend(v1, sel_removeOverlays_, sub_228BAD498());
LABEL_3:
    swift_bridgeObjectRelease();

    return;
  }
  unint64_t v4 = sub_228AFFB54(a1);
  if (!v4) {
    return;
  }
  unint64_t v5 = v4;
  uint64_t v26 = MEMORY[0x263F8EE78];
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_228BAD958();
    if (!v6) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v6) {
      goto LABEL_24;
    }
  }
  if (v6 < 1) {
    goto LABEL_53;
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      MEMORY[0x22A6A6FA0](i, v5);
      type metadata accessor for MapBridgingMarker();
      uint64_t v8 = swift_dynamicCastClass();
      if (v8 && *(unsigned char *)(v8 + OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature) == 1)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        sub_228BAD878();
        sub_228BAD8B8();
        sub_228BAD8C8();
        sub_228BAD888();
      }
    }
  }
  else
  {
    unint64_t v9 = v5 + 32;
    type metadata accessor for MapBridgingMarker();
    uint64_t v10 = v6;
    do
    {
      uint64_t v11 = swift_dynamicCastClass();
      if (!v11 || *(unsigned char *)(v11 + OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature) != 1)
      {
        swift_unknownObjectRetain();
        sub_228BAD878();
        sub_228BAD8B8();
        sub_228BAD8C8();
        sub_228BAD888();
      }
      v9 += 8;
      --v10;
    }
    while (v10);
  }
LABEL_24:
  swift_bridgeObjectRelease();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
  uint64_t v12 = (void *)sub_228BAD498();
  objc_msgSend(v2, sel_removeAnnotations_, v12);

  uint64_t v13 = MEMORY[0x263F8EE78];
  unint64_t v27 = MEMORY[0x263F8EE78];
  if (v6)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      for (uint64_t j = 0; j != v6; ++j)
      {
        MEMORY[0x22A6A6FA0](j, v5);
        type metadata accessor for MapBridgingMarker();
        uint64_t v15 = swift_dynamicCastClass();
        if (v15 && (*(unsigned char *)(v15 + OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature) & 1) != 0)
        {
          sub_228BAD878();
          sub_228BAD8B8();
          sub_228BAD8C8();
          sub_228BAD888();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      unint64_t v16 = v5 + 32;
      type metadata accessor for MapBridgingMarker();
      do
      {
        uint64_t v17 = swift_dynamicCastClass();
        if (v17 && *(unsigned char *)(v17 + OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature) == 1)
        {
          swift_unknownObjectRetain();
          sub_228BAD878();
          sub_228BAD8B8();
          sub_228BAD8C8();
          sub_228BAD888();
        }
        v16 += 8;
        --v6;
      }
      while (v6);
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v5 = sub_228AFFD3C(v27);
  swift_release();
  if (v5)
  {
    uint64_t v26 = v13;
    if (v5 >> 62) {
      goto LABEL_54;
    }
    uint64_t v18 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v18; uint64_t v18 = sub_228BAD958())
    {
      uint64_t v19 = 4;
      while (1)
      {
        uint64_t v20 = (v5 & 0xC000000000000001) != 0
            ? (char *)MEMORY[0x22A6A6FA0](v19 - 4, v5)
            : (char *)*(id *)(v5 + 8 * v19);
        char v21 = v20;
        uint64_t v22 = v19 - 3;
        if (__OFADD__(v19 - 4, 1)) {
          break;
        }
        uint64_t v23 = *(void **)&v20[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem];
        id v24 = v23;

        if (v23)
        {
          MEMORY[0x22A6A6BE0]();
          if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_228BAD4D8();
          }
          sub_228BAD528();
          sub_228BAD4B8();
        }
        ++v19;
        if (v22 == v18) {
          goto LABEL_55;
        }
      }
      __break(1u);
LABEL_53:
      __break(1u);
      __break(1u);
LABEL_54:
      swift_bridgeObjectRetain();
    }
LABEL_55:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_228AD25BC(0, &qword_268292698);
    objc_msgSend(v2, sel_removeMapItems_, sub_228BAD498());
    goto LABEL_3;
  }
}

uint64_t sub_228B005F8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_228B0063C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_228B00690(uint64_t result)
{
  int64_t v1 = 0;
  uint64_t v2 = result + 64;
  uint64_t v3 = 1 << *(unsigned char *)(result + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  uint64_t v5 = v4 & *(void *)(result + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  while (1)
  {
    if (!v5)
    {
      int64_t v7 = v1 + 1;
      if (__OFADD__(v1, 1))
      {
        __break(1u);
        goto LABEL_23;
      }
      if (v7 >= v6) {
        goto LABEL_21;
      }
      uint64_t v5 = *(void *)(v2 + 8 * v7);
      ++v1;
      if (!v5)
      {
        int64_t v1 = v7 + 1;
        if (v7 + 1 >= v6) {
          goto LABEL_21;
        }
        uint64_t v5 = *(void *)(v2 + 8 * v1);
        if (!v5)
        {
          int64_t v1 = v7 + 2;
          if (v7 + 2 >= v6) {
            goto LABEL_21;
          }
          uint64_t v5 = *(void *)(v2 + 8 * v1);
          if (!v5)
          {
            int64_t v1 = v7 + 3;
            if (v7 + 3 >= v6) {
              goto LABEL_21;
            }
            uint64_t v5 = *(void *)(v2 + 8 * v1);
            if (!v5)
            {
              int64_t v8 = v7 + 4;
              if (v8 >= v6)
              {
LABEL_21:
                swift_release();
                return MEMORY[0x263F8EE78];
              }
              uint64_t v5 = *(void *)(v2 + 8 * v8);
              int64_t v1 = v8;
              if (!v5) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_4:
    v5 &= v5 - 1;
  }
  while (1)
  {
    int64_t v1 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      break;
    }
    if (v1 >= v6) {
      goto LABEL_21;
    }
    uint64_t v5 = *(void *)(v2 + 8 * v1);
    ++v8;
    if (v5) {
      goto LABEL_4;
    }
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_228B0079C(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v14 = MEMORY[0x263F8EE78];
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v7) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v2;
    if (!v12)
    {
      int64_t v2 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (!v12)
      {
        int64_t v2 = v11 + 2;
        if (v11 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v2);
        if (!v12)
        {
          int64_t v2 = v11 + 3;
          if (v11 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v2);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v9 = __clz(__rbit64(v12)) + (v2 << 6);
LABEL_5:
    id v10 = *(id *)(*(void *)(v1 + 48) + 8 * v9);
    sub_228BAD878();
    sub_228BAD8B8();
    sub_228BAD8C8();
    uint64_t result = sub_228BAD888();
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v7)
  {
LABEL_23:
    swift_release();
    return v14;
  }
  unint64_t v12 = *(void *)(v3 + 8 * v13);
  if (v12)
  {
    int64_t v2 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v2 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v2 >= v7) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v2);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_228B00940()
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_228B0094C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  LODWORD(v59) = a3;
  LODWORD(v61) = a2;
  uint64_t v6 = type metadata accessor for MarkerAnnotationViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ResolvedMarker();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for MapContentList.Item(0);
  uint64_t v16 = *(int *)(v60 + 24);
  uint64_t v62 = a1;
  sub_228B0A230(a1 + v16, (uint64_t)v12, type metadata accessor for MapContentList.Item.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v57 = v7;
    uint64_t v58 = a4;
    sub_228B0A298((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ResolvedMarker);
    uint64_t v17 = (void *)sub_228BACBB8();
    uint64_t v53 = v13;
    if (v17)
    {
      uint64_t v18 = v17;
      id v19 = objc_msgSend(v17, sel_string);

      uint64_t v20 = sub_228BAD408();
      uint64_t v55 = v21;
      uint64_t v56 = v20;
    }
    else
    {
      uint64_t v55 = 0;
      uint64_t v56 = 0;
    }
    uint64_t v23 = (uint64_t *)v62;
    id v24 = (void *)sub_228BACBD8();
    if (v24)
    {
      id v25 = v24;
      id v26 = objc_msgSend(v24, (SEL)&off_264850498);

      uint64_t v62 = sub_228BAD408();
      uint64_t v54 = v27;
    }
    else
    {
      uint64_t v62 = 0;
      uint64_t v54 = 0;
    }
    char v28 = (char *)v23 + *(int *)(v60 + 28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268292728);
    sub_228B0A36C(&qword_268292730, &qword_268292728);
    uint64_t v60 = (uint64_t)v28;
    sub_228BACE28();
    if (v61) {
      int v29 = 1;
    }
    else {
      int v29 = v59 & (v65 ^ 1);
    }
    int v64 = v29;
    uint64_t v61 = *v23;
    swift_bridgeObjectRetain();
    uint64_t v30 = (void *)sub_228BACBC8();
    uint64_t v63 = v6;
    if (v30)
    {
      uint64_t v31 = v30;
      id v32 = objc_msgSend(v30, (SEL)&off_264850498);

      uint64_t v59 = sub_228BAD408();
      uint64_t v52 = v33;
    }
    else
    {
      uint64_t v59 = 0;
      uint64_t v52 = 0;
    }
    uint64_t v34 = v53;
    uint64_t v35 = *(void **)&v15[*(int *)(v53 + 36)];
    char v36 = v15[*(int *)(v53 + 40)];
    id v37 = v35;
    uint64_t v38 = sub_228BACBA8();
    __int16 v39 = *((_WORD *)v15 + 8);
    uint64_t v40 = *(void *)v15;
    uint64_t v41 = *((void *)v15 + 1);
    char v42 = v15[18];
    int64_t v43 = &v9[*(int *)(v63 + 68)];
    uint64_t v44 = sub_228BACE18();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v43, v60, v44);
    uint64_t v45 = v59;
    *(void *)unint64_t v9 = v61;
    *((void *)v9 + 1) = v45;
    uint64_t v46 = v56;
    *((void *)v9 + 2) = v52;
    *((void *)v9 + 3) = v46;
    *((void *)v9 + 4) = v55;
    *((void *)v9 + 5) = v35;
    v9[48] = v36;
    uint64_t v47 = v54;
    *((void *)v9 + 7) = v62;
    *((void *)v9 + 8) = v47;
    *((void *)v9 + 9) = v38;
    *((_WORD *)v9 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v39;
    *((void *)v9 + 11) = v40;
    *((void *)v9 + 12) = v41;
    v9[104] = v64;
    v9[105] = v42;
    *((void *)v9 + 14) = 0;
    if (*(void *)&v15[*(int *)(v34 + 44)])
    {
      sub_228AD25BC(0, (unint64_t *)&qword_268292340);
      swift_retain();
      uint64_t v48 = sub_228BAD6D8();
      sub_228B0A300((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ResolvedMarker);

      *((void *)v9 + 14) = v48;
    }
    else
    {
      sub_228B0A300((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ResolvedMarker);
    }
    uint64_t v50 = v57;
    uint64_t v49 = v58;
    sub_228B0A230((uint64_t)v9, v58, type metadata accessor for MarkerAnnotationViewModel);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v49, 0, 1, v63);
    return sub_228B0A300((uint64_t)v9, type metadata accessor for MarkerAnnotationViewModel);
  }
  else
  {
    sub_228B0A300((uint64_t)v12, type metadata accessor for MapContentList.Item.Content);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a4, 1, 1, v6);
  }
}

uint64_t sub_228B00E94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 1;
  }
  uint64_t v4 = *(void *)(a2 + 16);
  if (!v4) {
    return 1;
  }
  double v7 = *(double *)(a1 + 32);
  double v6 = *(double *)(a1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  uint64_t v9 = v2 - 1;
  do
  {
    BOOL v10 = v6 == *(double *)(a2 + v8 + 40) && v7 == *(double *)(a2 + v8 + 32);
    BOOL v12 = v9-- != 0;
    if (!v10 || !v12) {
      break;
    }
    double v7 = *(double *)(a1 + v8 + 48);
    double v6 = *(double *)(a1 + v8 + 56);
    v8 += 16;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_228B00F54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 1;
  }
  uint64_t v3 = *(void *)(a2 + 16);
  if (!v3) {
    return 1;
  }
  uint64_t v4 = (float64x2_t *)(a1 + 32);
  uint64_t v5 = (float64x2_t *)(a2 + 32);
  uint64_t v6 = v3 - 1;
  uint64_t v7 = v2 - 1;
  do
  {
    uint64_t v8 = v6;
    float64x2_t v9 = *v4++;
    float64x2_t v10 = v9;
    float64x2_t v11 = *v5++;
    int32x2_t v12 = vmovn_s64(vceqq_f64(v10, v11));
    BOOL v14 = v7-- != 0;
    if ((v12.i8[0] & v12.i8[4] & 1) == 0) {
      break;
    }
    if (!v14) {
      break;
    }
    uint64_t v6 = v8 - 1;
  }
  while (v8);
  return v12.i8[0] & v12.i8[4] & 1;
}

uint64_t sub_228B00FC0()
{
  return sub_228BACAA8();
}

uint64_t sub_228B00FE4()
{
  return sub_228BACA58();
}

uint64_t sub_228B01008(uint64_t a1)
{
  uint64_t v2 = sub_228BAC848();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_228BACA68();
}

uint64_t sub_228B010D0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2682927D0);
  uint64_t result = sub_228BAD978();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    float64x2_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *float64x2_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_228BADA38();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_228B01388(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682927C0);
  uint64_t v6 = sub_228BAD978();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v2;
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v18 = v17 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v19 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v19 >= v11) {
      break;
    }
    unint64_t v20 = (void *)(v5 + 64);
    unint64_t v21 = *(void *)(v35 + 8 * v19);
    ++v14;
    if (!v21)
    {
      int64_t v14 = v19 + 1;
      if (v19 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v14);
      if (!v21)
      {
        int64_t v22 = v19 + 2;
        if (v22 >= v11)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v34;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            int64_t v14 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v21 = *(void *)(v35 + 8 * v14);
            ++v22;
            if (v21) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v22;
      }
    }
LABEL_21:
    unint64_t v10 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v14 << 6);
LABEL_22:
    uint64_t v23 = 8 * v18;
    uint64_t v24 = *(void *)(*(void *)(v5 + 48) + v23);
    uint64_t v25 = *(void *)(v5 + 56) + v23;
    if (a2) {
      sub_228AD2184(v25, (uint64_t)v36);
    }
    else {
      sub_228AD2234(v25, (uint64_t)v36);
    }
    sub_228BADA48();
    sub_228BAD2C8();
    uint64_t result = sub_228BADA88();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v12 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = 8 * v15;
    *(void *)(*(void *)(v7 + 48) + v16) = v24;
    uint64_t result = sub_228AD2184((uint64_t)v36, *(void *)(v7 + 56) + v16);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v20 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v20, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v20 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_228B01680(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292688);
  char v53 = a2;
  uint64_t v6 = sub_228BAD978();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v51 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v49 = v2;
  int64_t v50 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      if (v53) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
    int64_t v29 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v29 >= v50) {
      break;
    }
    unint64_t v30 = v51;
    unint64_t v31 = v51[v29];
    ++v13;
    if (!v31)
    {
      int64_t v13 = v29 + 1;
      if (v29 + 1 >= v50) {
        goto LABEL_33;
      }
      unint64_t v31 = v51[v13];
      if (!v31)
      {
        int64_t v32 = v29 + 2;
        if (v32 >= v50)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v49;
          if ((v53 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v31 = v51[v32];
        if (!v31)
        {
          while (1)
          {
            int64_t v13 = v32 + 1;
            if (__OFADD__(v32, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v50) {
              goto LABEL_33;
            }
            unint64_t v31 = v51[v13];
            ++v32;
            if (v31) {
              goto LABEL_22;
            }
          }
        }
        int64_t v13 = v32;
      }
    }
LABEL_22:
    unint64_t v10 = (v31 - 1) & v31;
    unint64_t v17 = __clz(__rbit64(v31)) + (v13 << 6);
    if (v53)
    {
LABEL_10:
      id v18 = *(id *)(*(void *)(v5 + 48) + 8 * v17);
      uint64_t v19 = *(void *)(v5 + 56) + 136 * v17;
      uint64_t v20 = *(void *)v19;
      long long v54 = *(_OWORD *)(v19 + 24);
      long long v55 = *(_OWORD *)(v19 + 8);
      char v21 = *(unsigned char *)(v19 + 40);
      uint64_t v22 = *(void *)(v19 + 48);
      uint64_t v23 = *(void *)(v19 + 56);
      uint64_t v24 = *(void *)(v19 + 64);
      uint64_t v25 = *(void *)(v19 + 72);
      uint64_t v26 = *(void *)(v19 + 88);
      uint64_t v56 = *(void *)(v19 + 80);
      uint64_t v57 = *(void *)(v19 + 96);
      char v27 = *(unsigned char *)(v19 + 104);
      char v28 = *(unsigned char *)(v19 + 120);
      uint64_t v58 = *(void *)(v19 + 112);
      uint64_t v59 = *(void *)(v19 + 128);
      goto LABEL_24;
    }
LABEL_23:
    uint64_t v33 = *(void **)(*(void *)(v5 + 48) + 8 * v17);
    uint64_t v34 = *(void *)(v5 + 56) + 136 * v17;
    *(_OWORD *)uint64_t v60 = *(_OWORD *)v34;
    long long v35 = *(_OWORD *)(v34 + 64);
    long long v37 = *(_OWORD *)(v34 + 16);
    long long v36 = *(_OWORD *)(v34 + 32);
    long long v61 = *(_OWORD *)(v34 + 48);
    long long v62 = v35;
    *(_OWORD *)&v60[16] = v37;
    *(_OWORD *)&v60[32] = v36;
    long long v39 = *(_OWORD *)(v34 + 96);
    long long v38 = *(_OWORD *)(v34 + 112);
    long long v40 = *(_OWORD *)(v34 + 80);
    uint64_t v66 = *(void *)(v34 + 128);
    long long v64 = v39;
    long long v65 = v38;
    long long v63 = v40;
    uint64_t v59 = v66;
    char v28 = BYTE8(v38);
    uint64_t v57 = v39;
    uint64_t v58 = v38;
    char v27 = BYTE8(v39);
    uint64_t v23 = *((void *)&v61 + 1);
    uint64_t v25 = *((void *)&v62 + 1);
    uint64_t v24 = v62;
    uint64_t v26 = *((void *)&v40 + 1);
    uint64_t v56 = v40;
    uint64_t v22 = v61;
    long long v54 = *(_OWORD *)&v60[24];
    long long v55 = *(_OWORD *)&v60[8];
    char v21 = v60[40];
    uint64_t v20 = *(void *)v60;
    id v18 = v33;
    sub_228B0991C((uint64_t)v60);
LABEL_24:
    uint64_t result = sub_228BAD6E8();
    uint64_t v41 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v42 = result & ~v41;
    unint64_t v43 = v42 >> 6;
    if (((-1 << v42) & ~*(void *)(v11 + 8 * (v42 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v42) & ~*(void *)(v11 + 8 * (v42 >> 6)))) | v42 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v44 = 0;
      unint64_t v45 = (unint64_t)(63 - v41) >> 6;
      do
      {
        if (++v43 == v45 && (v44 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v46 = v43 == v45;
        if (v43 == v45) {
          unint64_t v43 = 0;
        }
        v44 |= v46;
        uint64_t v47 = *(void *)(v11 + 8 * v43);
      }
      while (v47 == -1);
      unint64_t v14 = __clz(__rbit64(~v47)) + (v43 << 6);
    }
    v60[0] = v21;
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v18;
    uint64_t v15 = *(void *)(v7 + 56) + 136 * v14;
    *(void *)uint64_t v15 = v20;
    *(_OWORD *)(v15 + 8) = v55;
    *(_OWORD *)(v15 + 24) = v54;
    *(unsigned char *)(v15 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v21;
    *(void *)(v15 + 48) = v22;
    *(void *)(v15 + 56) = v23;
    *(void *)(v15 + 64) = v24;
    *(void *)(v15 + 72) = v25;
    *(void *)(v15 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v56;
    *(void *)(v15 + 88) = v26;
    *(void *)(v15 + 96) = v57;
    *(unsigned char *)(v15 + 104) = v27;
    *(void *)(v15 + 112) = v58;
    *(unsigned char *)(v15 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = v28;
    *(void *)(v15 + 128) = v59;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v49;
  unint64_t v30 = v51;
  if ((v53 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v48 = 1 << *(unsigned char *)(v5 + 32);
  if (v48 >= 64) {
    bzero(v30, ((unint64_t)(v48 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v30 = -1 << v48;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_228B01AC0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2682926C0);
  char v49 = a2;
  uint64_t v6 = sub_228BAD978();
  uint64_t v50 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v47 = (void *)(v5 + 64);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v5 + 64);
  unint64_t v45 = v2;
  int64_t v46 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v9)
    {
      unint64_t v18 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      int64_t v51 = v12;
      unint64_t v19 = v18 | (v12 << 6);
      goto LABEL_31;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v20 >= v46) {
      break;
    }
    char v21 = v47;
    unint64_t v22 = v47[v20];
    int64_t v23 = v12 + 1;
    if (!v22)
    {
      int64_t v23 = v12 + 2;
      if (v12 + 2 >= v46) {
        goto LABEL_33;
      }
      unint64_t v22 = v47[v23];
      if (!v22)
      {
        uint64_t v24 = v12 + 3;
        if (v12 + 3 >= v46)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v45;
          if ((v49 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v22 = v47[v24];
        if (!v22)
        {
          while (1)
          {
            int64_t v23 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v23 >= v46) {
              goto LABEL_33;
            }
            unint64_t v22 = v47[v23];
            ++v24;
            if (v22) {
              goto LABEL_30;
            }
          }
        }
        int64_t v23 = v12 + 3;
      }
    }
LABEL_30:
    unint64_t v9 = (v22 - 1) & v22;
    int64_t v51 = v23;
    unint64_t v19 = __clz(__rbit64(v22)) + (v23 << 6);
LABEL_31:
    int64_t v29 = *(void **)(*(void *)(v5 + 48) + 8 * v19);
    uint64_t v30 = *(void *)(v5 + 56) + 120 * v19;
    uint64_t v31 = *(void *)v30;
    int64_t v32 = *(void **)(v30 + 8);
    uint64_t v33 = *(void *)(v30 + 16);
    long long v54 = *(_OWORD *)(v30 + 24);
    uint64_t v34 = *(void *)(v30 + 40);
    uint64_t v35 = *(void *)(v30 + 48);
    uint64_t v36 = *(void *)(v30 + 56);
    uint64_t v37 = *(void *)(v30 + 64);
    uint64_t v38 = *(void *)(v30 + 72);
    char v39 = *(unsigned char *)(v30 + 88);
    uint64_t v40 = *(void *)(v30 + 96);
    char v41 = *(unsigned char *)(v30 + 104);
    uint64_t v52 = *(void *)(v30 + 112);
    uint64_t v53 = *(void *)(v30 + 80);
    if ((v49 & 1) == 0)
    {
      id v42 = v29;
      swift_bridgeObjectRetain();
      sub_228B09CA8(v32, v33);
      id v43 = *((id *)&v54 + 1);
      swift_bridgeObjectRetain();
      sub_228ACF3A4(v53, v39);
      sub_228ACF3A4(v40, v41);
    }
    uint64_t result = sub_228BAD6E8();
    uint64_t v13 = -1 << *(unsigned char *)(v50 + 32);
    unint64_t v14 = result & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v13) >> 6;
      do
      {
        if (++v15 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v15 == v26;
        if (v15 == v26) {
          unint64_t v15 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v10 + 8 * v15);
      }
      while (v28 == -1);
      unint64_t v16 = __clz(__rbit64(~v28)) + (v15 << 6);
    }
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(void *)(*(void *)(v50 + 48) + 8 * v16) = v29;
    uint64_t v17 = *(void *)(v50 + 56) + 120 * v16;
    *(void *)uint64_t v17 = v31;
    *(void *)(v17 + 8) = v32;
    *(void *)(v17 + 16) = v33;
    *(_OWORD *)(v17 + 24) = v54;
    *(void *)(v17 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v34;
    *(void *)(v17 + 48) = v35;
    *(void *)(v17 + 56) = v36;
    *(void *)(v17 + 64) = v37;
    *(void *)(v17 + 72) = v38;
    *(void *)(v17 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v53;
    *(unsigned char *)(v17 + 88) = v39;
    *(void *)(v17 + 96) = v40;
    *(unsigned char *)(v17 + 104) = v41;
    int64_t v12 = v51;
    *(void *)(v17 + 112) = v52;
    ++*(void *)(v50 + 16);
  }
  swift_release();
  uint64_t v3 = v45;
  char v21 = v47;
  if ((v49 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v44 = 1 << *(unsigned char *)(v5 + 32);
  if (v44 >= 64) {
    bzero(v21, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v21 = -1 << v44;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v50;
  return result;
}

uint64_t sub_228B01E98(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = sub_228BAD978();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    uint64_t v33 = (void *)(v6 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v6 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v6 + 64);
    int64_t v32 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v9 << 6);
      }
      else
      {
        int64_t v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v6 + 64;
        if (v21 >= v32) {
          goto LABEL_33;
        }
        unint64_t v22 = v33[v21];
        ++v9;
        if (!v22)
        {
          int64_t v9 = v21 + 1;
          if (v21 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v22 = v33[v9];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v32)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v3;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v6 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v33 = -1 << v31;
              }
              uint64_t v4 = v3;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v22 = v33[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v9 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v9 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v22 = v33[v9];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v6 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v6 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_228BADA48();
      sub_228BADA58();
      uint64_t result = sub_228BADA88();
      uint64_t v14 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v8 + 48) + v18) = v29;
      *(void *)(*(void *)(v8 + 56) + v18) = v30;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_228B02170(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2682926E8);
  char v48 = a2;
  uint64_t v6 = sub_228BAD978();
  uint64_t v49 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v44 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v46 = (void *)(v5 + 64);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v5 + 64);
    int64_t v45 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v10 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v9)
      {
        unint64_t v18 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        int64_t v50 = v12;
        unint64_t v19 = v18 | (v12 << 6);
      }
      else
      {
        int64_t v20 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v20 >= v45) {
          goto LABEL_33;
        }
        unint64_t v21 = v46[v20];
        int64_t v22 = v12 + 1;
        if (!v21)
        {
          int64_t v22 = v12 + 2;
          if (v12 + 2 >= v45) {
            goto LABEL_33;
          }
          unint64_t v21 = v46[v22];
          if (!v21)
          {
            uint64_t v23 = v12 + 3;
            if (v12 + 3 >= v45)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v44;
              if (v48)
              {
                uint64_t v43 = 1 << *(unsigned char *)(v5 + 32);
                if (v43 >= 64) {
                  bzero(v46, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v46 = -1 << v43;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v46[v23];
            if (!v21)
            {
              while (1)
              {
                int64_t v22 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_40;
                }
                if (v22 >= v45) {
                  goto LABEL_33;
                }
                unint64_t v21 = v46[v22];
                ++v23;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v22 = v12 + 3;
          }
        }
LABEL_30:
        unint64_t v9 = (v21 - 1) & v21;
        int64_t v50 = v22;
        unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
      }
      uint64_t v28 = *(void **)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v29 = *(void *)(v5 + 56) + 96 * v19;
      uint64_t v30 = *(void *)v29;
      uint64_t v31 = *(void **)(v29 + 8);
      __int16 v32 = *(_WORD *)(v29 + 16);
      uint64_t v33 = *(void **)(v29 + 24);
      uint64_t v34 = *(void *)(v29 + 32);
      uint64_t v35 = *(void *)(v29 + 40);
      uint64_t v36 = *(void *)(v29 + 48);
      uint64_t v37 = *(void *)(v29 + 56);
      uint64_t v38 = *(void *)(v29 + 64);
      uint64_t v39 = *(void *)(v29 + 72);
      char v40 = *(unsigned char *)(v29 + 80);
      uint64_t v51 = *(void *)(v29 + 88);
      if ((v48 & 1) == 0)
      {
        id v41 = v28;
        swift_bridgeObjectRetain();
        sub_228B0A008(v31, v32);
        id v42 = v33;
        swift_bridgeObjectRetain();
        sub_228ACF3A4(v39, v40);
      }
      uint64_t result = sub_228BAD6E8();
      uint64_t v13 = -1 << *(unsigned char *)(v49 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v26 = v15 == v25;
          if (v15 == v25) {
            unint64_t v15 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v15);
        }
        while (v27 == -1);
        unint64_t v16 = __clz(__rbit64(~v27)) + (v15 << 6);
      }
      *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v49 + 48) + 8 * v16) = v28;
      uint64_t v17 = *(void *)(v49 + 56) + 96 * v16;
      *(void *)uint64_t v17 = v30;
      *(void *)(v17 + 8) = v31;
      *(_WORD *)(v17 + 16) = v32;
      *(void *)(v17 + 24) = v33;
      *(void *)(v17 + 32) = v34;
      *(void *)(v17 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v35;
      *(void *)(v17 + 48) = v36;
      *(void *)(v17 + 56) = v37;
      *(void *)(v17 + 64) = v38;
      *(void *)(v17 + 72) = v39;
      *(unsigned char *)(v17 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v40;
      int64_t v12 = v50;
      *(void *)(v17 + 88) = v51;
      ++*(void *)(v49 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v49;
  return result;
}

uint64_t sub_228B02500(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  int64_t v46 = a6;
  unint64_t v9 = v6;
  uint64_t v11 = a3(0);
  uint64_t v47 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v14 = *v6;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v48 = a2;
  uint64_t v15 = sub_228BAD978();
  uint64_t v16 = v15;
  if (!*(void *)(v14 + 16)) {
    goto LABEL_41;
  }
  uint64_t v17 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v18 = *(void *)(v14 + 64);
  int64_t v45 = (void *)(v14 + 64);
  if (v17 < 64) {
    uint64_t v19 = ~(-1 << v17);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v18;
  uint64_t v43 = v6;
  int64_t v44 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v21 = v15 + 64;
  uint64_t result = swift_retain();
  int64_t v23 = 0;
  while (1)
  {
    if (v20)
    {
      unint64_t v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v26 = v25 | (v23 << 6);
      goto LABEL_22;
    }
    int64_t v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v44) {
      break;
    }
    uint64_t v28 = v45;
    unint64_t v29 = v45[v27];
    ++v23;
    if (!v29)
    {
      int64_t v23 = v27 + 1;
      if (v27 + 1 >= v44) {
        goto LABEL_34;
      }
      unint64_t v29 = v45[v23];
      if (!v29)
      {
        int64_t v30 = v27 + 2;
        if (v30 >= v44)
        {
LABEL_34:
          swift_release();
          unint64_t v9 = v43;
          if ((v48 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v29 = v45[v30];
        if (!v29)
        {
          while (1)
          {
            int64_t v23 = v30 + 1;
            if (__OFADD__(v30, 1)) {
              goto LABEL_43;
            }
            if (v23 >= v44) {
              goto LABEL_34;
            }
            unint64_t v29 = v45[v23];
            ++v30;
            if (v29) {
              goto LABEL_21;
            }
          }
        }
        int64_t v23 = v30;
      }
    }
LABEL_21:
    unint64_t v20 = (v29 - 1) & v29;
    unint64_t v26 = __clz(__rbit64(v29)) + (v23 << 6);
LABEL_22:
    uint64_t v31 = *(void **)(*(void *)(v14 + 48) + 8 * v26);
    uint64_t v32 = *(void *)(v47 + 72);
    uint64_t v33 = *(void *)(v14 + 56) + v32 * v26;
    if (v48)
    {
      sub_228B0A298(v33, (uint64_t)v13, a5);
    }
    else
    {
      sub_228B0A230(v33, (uint64_t)v13, v46);
      id v34 = v31;
    }
    uint64_t result = sub_228BAD6E8();
    uint64_t v35 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v21 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v36) & ~*(void *)(v21 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v21 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v24 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    *(void *)(*(void *)(v16 + 48) + 8 * v24) = v31;
    uint64_t result = sub_228B0A298((uint64_t)v13, *(void *)(v16 + 56) + v32 * v24, a5);
    ++*(void *)(v16 + 16);
  }
  swift_release();
  unint64_t v9 = v43;
  uint64_t v28 = v45;
  if ((v48 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v14 + 32);
  if (v42 >= 64) {
    bzero(v28, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v28 = -1 << v42;
  }
  *(void *)(v14 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v9 = v16;
  return result;
}

uint64_t sub_228B0288C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v41 = a2;
  uint64_t v7 = sub_228BAD978();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_47;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  BOOL v40 = (void *)(v6 + 64);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  char v38 = v3;
  int64_t v39 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v17 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v18 = v17 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v19 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      return result;
    }
    if (v19 >= v39) {
      break;
    }
    unint64_t v20 = v40;
    unint64_t v21 = v40[v19];
    ++v14;
    if (!v21)
    {
      int64_t v14 = v19 + 1;
      if (v19 + 1 >= v39) {
        goto LABEL_40;
      }
      unint64_t v21 = v40[v14];
      if (!v21)
      {
        int64_t v22 = v19 + 2;
        if (v22 >= v39)
        {
LABEL_40:
          swift_release();
          uint64_t v4 = v38;
          if ((v41 & 1) == 0) {
            goto LABEL_47;
          }
          goto LABEL_43;
        }
        unint64_t v21 = v40[v22];
        if (!v21)
        {
          while (1)
          {
            int64_t v14 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_49;
            }
            if (v14 >= v39) {
              goto LABEL_40;
            }
            unint64_t v21 = v40[v14];
            ++v22;
            if (v21) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v22;
      }
    }
LABEL_21:
    unint64_t v11 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v14 << 6);
LABEL_22:
    uint64_t v23 = 8 * v18;
    uint64_t v24 = *(void *)(*(void *)(v6 + 48) + v23);
    unint64_t v25 = *(void **)(*(void *)(v6 + 56) + v23);
    if ((v41 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v26 = v25;
    }
    sub_228BADA48();
    sub_228BADA58();
    uint64_t v27 = *(void *)(v24 + 16);
    if (v27)
    {
      uint64_t v42 = v25;
      uint64_t v28 = v6;
      uint64_t v29 = v24 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_228B09AEC(v29, (uint64_t)v48);
        sub_228B09AEC((uint64_t)v48, (uint64_t)v45);
        if (v47)
        {
          v43[0] = v45[0];
          v43[1] = v45[1];
          uint64_t v44 = v46;
          sub_228BADA58();
          sub_228BAD7C8();
          sub_228B09B48((uint64_t)v43);
        }
        else
        {
          sub_228BADA58();
          sub_228BADA58();
        }
        sub_228ACAF00((uint64_t)v48);
        v29 += 48;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease();
      uint64_t v6 = v28;
      unint64_t v25 = v42;
    }
    uint64_t result = sub_228BADA88();
    uint64_t v30 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v12 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v31) & ~*(void *)(v12 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_48;
        }
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v12 + 8 * v32);
      }
      while (v36 == -1);
      unint64_t v15 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = 8 * v15;
    *(void *)(*(void *)(v8 + 48) + v16) = v24;
    *(void *)(*(void *)(v8 + 56) + v16) = v25;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v38;
  unint64_t v20 = v40;
  if ((v41 & 1) == 0) {
    goto LABEL_47;
  }
LABEL_43:
  uint64_t v37 = 1 << *(unsigned char *)(v6 + 32);
  if (v37 >= 64) {
    bzero(v20, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v20 = -1 << v37;
  }
  *(void *)(v6 + 16) = 0;
LABEL_47:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

void sub_228B02C44(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_228BAD778();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_228BAD6E8();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            unint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1) {
              *uint64_t v16 = *v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            int64_t v19 = (char *)(v18 + 136 * v3);
            unint64_t v20 = (char *)(v18 + 136 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 136))
            {
              memmove(v19, v20, 0x88uLL);
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  *unint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_228B02E04(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_228BAD778();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_228BAD6E8();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            unint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1) {
              *uint64_t v16 = *v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            int64_t v19 = (char *)(v18 + 120 * v3);
            unint64_t v20 = (char *)(v18 + 120 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 120))
            {
              memmove(v19, v20, 0x78uLL);
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  *unint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_228B02FC4(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_228BAD778();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_228BAD6E8();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            unint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1) {
              *uint64_t v16 = *v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            int64_t v19 = (char *)(v18 + 96 * v3);
            unint64_t v20 = (char *)(v18 + 96 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 96))
            {
              memmove(v19, v20, 0x60uLL);
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  *unint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_228B03184(unint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v4 = a1;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (a1 + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v9 = ~v6;
    uint64_t v10 = sub_228BAD778();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v11 = (v10 + 1) & v9;
      do
      {
        id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v7);
        uint64_t v13 = sub_228BAD6E8();

        unint64_t v14 = v13 & v9;
        if (v4 >= (uint64_t)v11)
        {
          if (v14 < v11 || v4 < (uint64_t)v14) {
            goto LABEL_6;
          }
        }
        else if (v14 < v11 && v4 < (uint64_t)v14)
        {
          goto LABEL_6;
        }
        uint64_t v17 = *(void *)(a2 + 48);
        uint64_t v18 = (void *)(v17 + 8 * v4);
        int64_t v19 = (void *)(v17 + 8 * v7);
        if (v4 != v7 || v18 >= v19 + 1) {
          *uint64_t v18 = *v19;
        }
        uint64_t v20 = *(void *)(a2 + 56);
        uint64_t v21 = *(void *)(*(void *)(a3(0) - 8) + 72);
        int64_t v22 = v21 * v4;
        unint64_t v23 = v20 + v21 * v4;
        int64_t v24 = v21 * v7;
        unint64_t v25 = v20 + v21 * v7 + v21;
        if (v22 < v24 || v23 >= v25)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v22 == v24) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v9;
      }
      while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    uint64_t v27 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v28 = *v27;
    uint64_t v29 = (-1 << v4) - 1;
  }
  else
  {
    uint64_t v27 = (uint64_t *)(v5 + 8 * (a1 >> 6));
    uint64_t v29 = *v27;
    uint64_t v28 = (-1 << a1) - 1;
  }
  *uint64_t v27 = v29 & v28;
  uint64_t v30 = *(void *)(a2 + 16);
  BOOL v31 = __OFSUB__(v30, 1);
  uint64_t v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_228B03380(unint64_t result, uint64_t a2)
{
  int64_t v2 = result;
  uint64_t v3 = a2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v5 = (result + 1) & ~v4;
  if (((1 << v5) & *(void *)(a2 + 64 + 8 * (v5 >> 6))) != 0)
  {
    uint64_t v25 = a2;
    uint64_t v6 = ~v4;
    uint64_t result = sub_228BAD778();
    if ((*(void *)(v3 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      unint64_t v7 = (result + 1) & v6;
      a2 = v25;
      while (1)
      {
        uint64_t v8 = *(void *)(*(void *)(a2 + 48) + 8 * v5);
        sub_228BADA48();
        sub_228BADA58();
        uint64_t v9 = *(void *)(v8 + 16);
        if (v9)
        {
          uint64_t v10 = v8 + 32;
          swift_bridgeObjectRetain();
          do
          {
            sub_228B09AEC(v10, (uint64_t)v31);
            sub_228B09AEC((uint64_t)v31, (uint64_t)v28);
            if (v30)
            {
              v26[0] = v28[0];
              v26[1] = v28[1];
              uint64_t v27 = v29;
              sub_228BADA58();
              sub_228BAD7C8();
              sub_228B09B48((uint64_t)v26);
            }
            else
            {
              sub_228BADA58();
              sub_228BADA58();
            }
            sub_228ACAF00((uint64_t)v31);
            v10 += 48;
            --v9;
          }
          while (v9);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t v11 = sub_228BADA88();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v6;
        if (v2 >= (uint64_t)v7)
        {
          a2 = v25;
          if (v12 < v7) {
            goto LABEL_5;
          }
        }
        else
        {
          a2 = v25;
          if (v12 >= v7) {
            goto LABEL_18;
          }
        }
        if (v2 >= (uint64_t)v12)
        {
LABEL_18:
          uint64_t v13 = *(void *)(a2 + 48);
          unint64_t v14 = (void *)(v13 + 8 * v2);
          uint64_t v15 = (void *)(v13 + 8 * v5);
          if (v2 != v5 || v14 >= v15 + 1) {
            void *v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          uint64_t v17 = (void *)(v16 + 8 * v2);
          uint64_t v18 = (void *)(v16 + 8 * v5);
          if (v2 != v5 || (int64_t v2 = v5, v17 >= v18 + 1))
          {
            void *v17 = *v18;
            int64_t v2 = v5;
          }
        }
LABEL_5:
        unint64_t v5 = (v5 + 1) & v6;
        if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
          goto LABEL_26;
        }
      }
    }
    a2 = v25;
LABEL_26:
    int64_t v19 = (uint64_t *)(v3 + 8 * ((unint64_t)v2 >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << v2) - 1;
  }
  else
  {
    int64_t v19 = (uint64_t *)(v3 + 8 * (result >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << result) - 1;
  }
  *int64_t v19 = v20 & v21;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_228B03604(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_228BAD778();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_228BADA48();
        sub_228BAD2C8();
        uint64_t result = sub_228BADA88();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        uint64_t v11 = (void *)(v10 + 8 * v3);
        unint64_t v12 = (void *)(v10 + 8 * v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          void *v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t result = v13 + 8 * v3;
        if (v3 < (uint64_t)v6 || result >= v13 + 8 * v6 + 8)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          BOOL v14 = v3 == v6;
          int64_t v3 = v6;
          if (v14) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_19;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_19:
    uint64_t v15 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v16 = *v15;
    uint64_t v17 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v15 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v17 = *v15;
    uint64_t v16 = (-1 << result) - 1;
  }
  *uint64_t v15 = v17 & v16;
  uint64_t v18 = *(void *)(a2 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v20;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_228B037E0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2682927D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_228BAD968();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_228B03984()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682927C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_228BAD968();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    sub_228AD2234(*(void *)(v2 + 56) + 8 * v15, (uint64_t)v21);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t result = (void *)sub_228AD2184((uint64_t)v21, *(void *)(v4 + 56) + v16);
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_228B03B44()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292688);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_228BAD968();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v34 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v34 >= v13) {
      goto LABEL_26;
    }
    unint64_t v35 = *(void *)(v6 + 8 * v34);
    ++v9;
    if (!v35)
    {
      int64_t v9 = v34 + 1;
      if (v34 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v35 = *(void *)(v6 + 8 * v9);
      if (!v35) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v35 - 1) & v35;
    unint64_t v15 = __clz(__rbit64(v35)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 136 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    long long v21 = *(_OWORD *)(v19 + 16);
    long long v20 = *(_OWORD *)(v19 + 32);
    long long v22 = *(_OWORD *)(v19 + 64);
    long long v40 = *(_OWORD *)(v19 + 48);
    long long v41 = v22;
    long long v24 = *(_OWORD *)(v19 + 96);
    long long v23 = *(_OWORD *)(v19 + 112);
    long long v25 = *(_OWORD *)(v19 + 80);
    uint64_t v45 = *(void *)(v19 + 128);
    long long v43 = v24;
    long long v44 = v23;
    long long v42 = v25;
    long long v37 = *(_OWORD *)v19;
    long long v38 = v21;
    long long v39 = v20;
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v26 = *(void *)(v4 + 56) + v18;
    *(_OWORD *)uint64_t v26 = v37;
    long long v27 = v38;
    long long v28 = v39;
    long long v29 = v41;
    *(_OWORD *)(v26 + 48) = v40;
    *(_OWORD *)(v26 + 64) = v29;
    *(_OWORD *)(v26 + 16) = v27;
    *(_OWORD *)(v26 + 32) = v28;
    long long v30 = v42;
    long long v31 = v43;
    long long v32 = v44;
    *(void *)(v26 + 128) = v45;
    *(_OWORD *)(v26 + 96) = v31;
    *(_OWORD *)(v26 + 112) = v32;
    *(_OWORD *)(v26 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v30;
    id v33 = v17;
    uint64_t result = (void *)sub_228B0991C((uint64_t)&v37);
  }
  int64_t v36 = v34 + 2;
  if (v36 >= v13) {
    goto LABEL_26;
  }
  unint64_t v35 = *(void *)(v6 + 8 * v36);
  if (v35)
  {
    int64_t v9 = v36;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v35 = *(void *)(v6 + 8 * v9);
    ++v36;
    if (v35) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_228B03D60()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2682926C0);
  long long v38 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_228BAD968();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t v37 = v3;
    uint64_t result = (void *)swift_release();
    *long long v38 = v37;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  BOOL v6 = v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5;
  uint64_t v42 = v3;
  if (v6)
  {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v5);
    uint64_t v3 = v42;
  }
  uint64_t v40 = v1 + 64;
  uint64_t v41 = v1;
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      uint64_t v13 = v41;
      uint64_t v3 = v42;
      goto LABEL_12;
    }
    int64_t v34 = v7 + 1;
    uint64_t v13 = v41;
    uint64_t v3 = v42;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v34 >= v39) {
      goto LABEL_26;
    }
    unint64_t v35 = *(void *)(v40 + 8 * v34);
    ++v7;
    if (!v35)
    {
      int64_t v7 = v34 + 1;
      if (v34 + 1 >= v39) {
        goto LABEL_26;
      }
      unint64_t v35 = *(void *)(v40 + 8 * v7);
      if (!v35) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v35 - 1) & v35;
    unint64_t v12 = __clz(__rbit64(v35)) + (v7 << 6);
LABEL_12:
    uint64_t v14 = 8 * v12;
    unint64_t v15 = *(void **)(*(void *)(v13 + 48) + 8 * v12);
    uint64_t v16 = 120 * v12;
    uint64_t v17 = *(void *)(v13 + 56) + v16;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void **)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    uint64_t v22 = *(void *)(v17 + 48);
    uint64_t v21 = *(void *)(v17 + 56);
    uint64_t v23 = *(void *)(v17 + 64);
    uint64_t v24 = *(void *)(v17 + 72);
    uint64_t v25 = *(void *)(v17 + 80);
    char v26 = *(unsigned char *)(v17 + 88);
    uint64_t v27 = *(void *)(v17 + 96);
    char v28 = *(unsigned char *)(v17 + 104);
    uint64_t v29 = *(void *)(v17 + 112);
    uint64_t v30 = *(void *)(v17 + 40);
    long long v43 = *(_OWORD *)(v17 + 24);
    *(void *)(*(void *)(v3 + 48) + v14) = v15;
    uint64_t v31 = *(void *)(v3 + 56) + v16;
    *(void *)uint64_t v31 = v18;
    *(void *)(v31 + 8) = v19;
    *(void *)(v31 + 16) = v20;
    *(_OWORD *)(v31 + 24) = v43;
    *(void *)(v31 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v30;
    *(void *)(v31 + 48) = v22;
    *(void *)(v31 + 56) = v21;
    *(void *)(v31 + 64) = v23;
    *(void *)(v31 + 72) = v24;
    *(void *)(v31 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v25;
    *(unsigned char *)(v31 + 88) = v26;
    *(void *)(v31 + 96) = v27;
    *(unsigned char *)(v31 + 104) = v28;
    *(void *)(v31 + 112) = v29;
    id v32 = v15;
    swift_bridgeObjectRetain();
    sub_228B09CA8(v19, v20);
    id v33 = *((id *)&v43 + 1);
    swift_bridgeObjectRetain();
    sub_228ACF3A4(v25, v26);
    uint64_t result = (void *)sub_228ACF3A4(v27, v28);
  }
  int64_t v36 = v34 + 2;
  if (v36 >= v39) {
    goto LABEL_26;
  }
  unint64_t v35 = *(void *)(v40 + 8 * v36);
  if (v35)
  {
    int64_t v7 = v36;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v7 >= v39) {
      goto LABEL_26;
    }
    unint64_t v35 = *(void *)(v40 + 8 * v7);
    ++v36;
    if (v35) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_228B03FF0(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_228BAD968();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_228B0418C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2682926E8);
  int64_t v36 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_228BAD968();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t v35 = v3;
    uint64_t result = (void *)swift_release();
    *int64_t v36 = v35;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  BOOL v6 = v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5;
  uint64_t v39 = v3;
  if (v6)
  {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v5);
    uint64_t v3 = v39;
  }
  uint64_t v38 = v1 + 64;
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      uint64_t v3 = v39;
      goto LABEL_12;
    }
    int64_t v32 = v7 + 1;
    uint64_t v3 = v39;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v32 >= v37) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v38 + 8 * v32);
    ++v7;
    if (!v33)
    {
      int64_t v7 = v32 + 1;
      if (v32 + 1 >= v37) {
        goto LABEL_26;
      }
      unint64_t v33 = *(void *)(v38 + 8 * v7);
      if (!v33) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v33 - 1) & v33;
    unint64_t v12 = __clz(__rbit64(v33)) + (v7 << 6);
LABEL_12:
    uint64_t v13 = 8 * v12;
    int64_t v14 = *(void **)(*(void *)(v1 + 48) + 8 * v12);
    uint64_t v15 = 96 * v12;
    uint64_t v16 = *(void *)(v1 + 56) + v15;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void **)(v16 + 8);
    int64_t v19 = *(void **)(v16 + 24);
    uint64_t v21 = *(void *)(v16 + 40);
    uint64_t v20 = *(void *)(v16 + 48);
    uint64_t v22 = *(void *)(v16 + 56);
    uint64_t v23 = *(void *)(v16 + 64);
    uint64_t v24 = *(void *)(v16 + 72);
    char v25 = *(unsigned char *)(v16 + 80);
    uint64_t v26 = *(void *)(v16 + 88);
    uint64_t v27 = *(void *)(v16 + 32);
    __int16 v28 = *(_WORD *)(v16 + 16);
    *(void *)(*(void *)(v3 + 48) + v13) = v14;
    uint64_t v29 = *(void *)(v3 + 56) + v15;
    *(void *)uint64_t v29 = v17;
    *(void *)(v29 + 8) = v18;
    *(_WORD *)(v29 + 16) = v28;
    *(void *)(v29 + 24) = v19;
    *(void *)(v29 + 32) = v27;
    *(void *)(v29 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v21;
    *(void *)(v29 + 48) = v20;
    *(void *)(v29 + 56) = v22;
    *(void *)(v29 + 64) = v23;
    *(void *)(v29 + 72) = v24;
    *(unsigned char *)(v29 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v25;
    *(void *)(v29 + 88) = v26;
    id v30 = v14;
    swift_bridgeObjectRetain();
    sub_228B0A008(v18, v28);
    id v31 = v19;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_228ACF3A4(v24, v25);
  }
  int64_t v34 = v32 + 2;
  if (v34 >= v37) {
    goto LABEL_26;
  }
  unint64_t v33 = *(void *)(v38 + 8 * v34);
  if (v33)
  {
    int64_t v7 = v34;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v7 >= v37) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v38 + 8 * v7);
    ++v34;
    if (v33) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_228B043EC(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  int64_t v32 = a3;
  unint64_t v33 = a4;
  BOOL v6 = v4;
  uint64_t v7 = a1(0);
  uint64_t v31 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v30 - v8;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v10 = *v4;
  uint64_t v11 = sub_228BAD968();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
    id result = (id)swift_release();
LABEL_28:
    *BOOL v6 = v12;
    return result;
  }
  id v30 = v6;
  id result = (id)(v11 + 64);
  uint64_t v14 = v10 + 64;
  unint64_t v15 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 64 + 8 * v15) {
    id result = memmove(result, (const void *)(v10 + 64), 8 * v15);
  }
  int64_t v17 = 0;
  *(void *)(v12 + 16) = *(void *)(v10 + 16);
  uint64_t v18 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & *(void *)(v10 + 64);
  int64_t v21 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      unint64_t v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v23 = v22 | (v17 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v27 >= v21) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v14 + 8 * v27);
    ++v17;
    if (!v28)
    {
      int64_t v17 = v27 + 1;
      if (v27 + 1 >= v21) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v14 + 8 * v17);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = (v28 - 1) & v28;
    unint64_t v23 = __clz(__rbit64(v28)) + (v17 << 6);
LABEL_12:
    uint64_t v24 = 8 * v23;
    char v25 = *(void **)(*(void *)(v10 + 48) + 8 * v23);
    unint64_t v26 = *(void *)(v31 + 72) * v23;
    sub_228B0A230(*(void *)(v10 + 56) + v26, (uint64_t)v9, v32);
    *(void *)(*(void *)(v12 + 48) + v24) = v25;
    sub_228B0A298((uint64_t)v9, *(void *)(v12 + 56) + v26, v33);
    id result = v25;
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v21)
  {
LABEL_26:
    id result = (id)swift_release();
    BOOL v6 = v30;
    goto LABEL_28;
  }
  unint64_t v28 = *(void *)(v14 + 8 * v29);
  if (v28)
  {
    int64_t v17 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v17 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v17 >= v21) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v14 + 8 * v17);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_228B0464C(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_228BAD968();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    swift_bridgeObjectRetain();
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_228B047EC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_228AD17F8(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_228B037E0();
LABEL_7:
    unint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v1__isPlatformVersionAtLeast(2, 18, 1, 0) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = 8 * v10;
    *(void *)(v16[6] + v19) = a2;
    *(void *)(v16[7] + v19) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_228B010D0(result, a3 & 1);
  uint64_t result = sub_228AD17F8(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    unint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_228BADA18();
  __break(1u);
  return result;
}

id sub_228B04928(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_228AD1914((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_228B03B44();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7] + 136 * v9;
      return (id)sub_228B09B9C(a1, v16);
    }
    goto LABEL_13;
  }
  sub_228B01680(v12, a3 & 1);
  unint64_t v18 = sub_228AD1914((uint64_t)a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_19:
    sub_228AD25BC(0, &qword_268292670);
    id result = (id)sub_228BADA18();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_13:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  *(void *)(v15[6] + 8 * v9) = a2;
  uint64_t v20 = v15[7] + 136 * v9;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)a1;
  long long v21 = *(_OWORD *)(a1 + 16);
  long long v22 = *(_OWORD *)(a1 + 32);
  long long v23 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v20 + 48) = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v20 + 64) = v23;
  *(_OWORD *)(v20 + 16) = v21;
  *(_OWORD *)(v20 + 32) = v22;
  long long v24 = *(_OWORD *)(a1 + 80);
  long long v25 = *(_OWORD *)(a1 + 96);
  long long v26 = *(_OWORD *)(a1 + 112);
  *(void *)(v20 + 128) = *(void *)(a1 + 128);
  *(_OWORD *)(v20 + 96) = v25;
  *(_OWORD *)(v20 + 112) = v26;
  *(_OWORD *)(v20 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v24;
  uint64_t v27 = v15[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  void v15[2] = v29;

  return a2;
}

id sub_228B04AD8(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_228AD19E0((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_228B03D60();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7] + 120 * v9;
      return (id)sub_228B09FAC(a1, v16);
    }
    goto LABEL_13;
  }
  sub_228B01AC0(v12, a3 & 1);
  unint64_t v18 = sub_228AD19E0((uint64_t)a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_19:
    sub_228AD25BC(0, (unint64_t *)&qword_2682926B0);
    id result = (id)sub_228BADA18();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_13:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  *(void *)(v15[6] + 8 * v9) = a2;
  uint64_t v20 = v15[7] + 120 * v9;
  long long v21 = *(_OWORD *)a1;
  long long v22 = *(_OWORD *)(a1 + 16);
  long long v23 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v20 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v20 + 48) = v23;
  *(_OWORD *)uint64_t v20 = v21;
  *(_OWORD *)(v20 + 16) = v22;
  long long v24 = *(_OWORD *)(a1 + 64);
  long long v25 = *(_OWORD *)(a1 + 80);
  long long v26 = *(_OWORD *)(a1 + 96);
  *(void *)(v20 + 112) = *(void *)(a1 + 112);
  *(_OWORD *)(v20 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v25;
  *(_OWORD *)(v20 + 96) = v26;
  *(_OWORD *)(v20 + 64) = v24;
  uint64_t v27 = v15[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  void v15[2] = v29;

  return a2;
}

id sub_228B04C80(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_228AD1A30((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_228B0418C();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7] + 96 * v9;
      return (id)sub_228B0A1D4((uint64_t)a1, v16);
    }
    goto LABEL_13;
  }
  sub_228B02170(v12, a3 & 1);
  unint64_t v18 = sub_228AD1A30((uint64_t)a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_19:
    sub_228AD25BC(0, &qword_2682926D0);
    id result = (id)sub_228BADA18();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_13:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  *(void *)(v15[6] + 8 * v9) = a2;
  uint64_t v20 = (_OWORD *)(v15[7] + 96 * v9);
  long long v21 = a1[1];
  *uint64_t v20 = *a1;
  v20[1] = v21;
  long long v22 = a1[2];
  long long v23 = a1[3];
  long long v24 = a1[5];
  v20[4] = a1[4];
  void v20[5] = v24;
  void v20[2] = v22;
  v20[3] = v23;
  uint64_t v25 = v15[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  void v15[2] = v27;

  return a2;
}

id sub_228B04E18(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_228AD1A80((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 >= v12 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v15 = *v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      uint64_t v17 = type metadata accessor for UserAnnotationViewModel(0);
      return (id)sub_228B0A404(a1, v16 + *(void *)(*(void *)(v17 - 8) + 72) * v9, type metadata accessor for UserAnnotationViewModel);
    }
    goto LABEL_11;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_228B043EC(type metadata accessor for UserAnnotationViewModel, &qword_268292720, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel);
    goto LABEL_7;
  }
  sub_228B02500(v12, a3 & 1, type metadata accessor for UserAnnotationViewModel, &qword_268292720, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel);
  unint64_t v19 = sub_228AD1A80((uint64_t)a2);
  if ((v13 & 1) != (v20 & 1))
  {
LABEL_15:
    type metadata accessor for MapBridgingUserAnnotation();
    id result = (id)sub_228BADA18();
    __break(1u);
    return result;
  }
  unint64_t v9 = v19;
  uint64_t v15 = *v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  sub_228B0556C(v9, (uint64_t)a2, a1, v15, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel);

  return a2;
}

id sub_228B05024(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_228AD1AD4((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 >= v12 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v15 = *v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      uint64_t v17 = type metadata accessor for MarkerAnnotationViewModel(0);
      return (id)sub_228B0A404(a1, v16 + *(void *)(*(void *)(v17 - 8) + 72) * v9, type metadata accessor for MarkerAnnotationViewModel);
    }
    goto LABEL_11;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_228B043EC(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_268292770, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel);
    goto LABEL_7;
  }
  sub_228B02500(v12, a3 & 1, type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_268292770, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel);
  unint64_t v19 = sub_228AD1AD4((uint64_t)a2);
  if ((v13 & 1) != (v20 & 1))
  {
LABEL_15:
    type metadata accessor for MapBridgingMarker();
    id result = (id)sub_228BADA18();
    __break(1u);
    return result;
  }
  unint64_t v9 = v19;
  uint64_t v15 = *v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  sub_228B0556C(v9, (uint64_t)a2, a1, v15, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel);

  return a2;
}

id sub_228B05230(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_228AD1B28((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 >= v12 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v15 = *v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      uint64_t v17 = type metadata accessor for CustomAnnotationViewModel(0);
      return (id)sub_228B0A404(a1, v16 + *(void *)(*(void *)(v17 - 8) + 72) * v9, type metadata accessor for CustomAnnotationViewModel);
    }
    goto LABEL_11;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_228B043EC(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_2682927B0, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel);
    goto LABEL_7;
  }
  sub_228B02500(v12, a3 & 1, type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_2682927B0, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel);
  unint64_t v19 = sub_228AD1B28((uint64_t)a2);
  if ((v13 & 1) != (v20 & 1))
  {
LABEL_15:
    type metadata accessor for MapBridgingCustomAnnotation();
    id result = (id)sub_228BADA18();
    __break(1u);
    return result;
  }
  unint64_t v9 = v19;
  uint64_t v15 = *v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  sub_228B0556C(v9, (uint64_t)a2, a1, v15, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel);

  return a2;
}

uint64_t sub_228B0543C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_228AD183C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_228B03984();
      goto LABEL_7;
    }
    sub_228B01388(v13, a3 & 1);
    unint64_t v19 = sub_228AD183C(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_228BADA18();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7] + 8 * v10;
    return sub_228B0AB54(a1, v17);
  }
LABEL_13:

  return sub_228B05614(v10, a2, a1, v16);
}

uint64_t sub_228B0556C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v10 = a4[7];
  uint64_t v11 = a5(0);
  uint64_t result = sub_228B0A298(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a6);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_228B05614(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_228AD2184(a3, a4[7] + 8 * a1);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_228B05680@<X0>(_DWORD *a1@<X8>)
{
  sub_228AC5A84();
  uint64_t result = sub_228BAC478();
  *a1 = result;
  return result;
}

uint64_t sub_228B05714@<X0>(_DWORD *a1@<X8>)
{
  type metadata accessor for StaticMapBridgingView(0);
  sub_228AC5A84();
  uint64_t result = sub_228BAC478();
  *a1 = result;
  return result;
}

uint64_t sub_228B057AC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_228B05850(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (uint64_t)a2 + v6 + 7;
    unint64_t v13 = (v11 & 0xFFFFFFFFFFFFFFF8) + 15;
    unint64_t v12 = *(void *)(v11 & 0xFFFFFFFFFFFFFFF8);
    sub_228B0596C(v12);
    *uint64_t v10 = v12;
    BOOL v14 = *(void **)(v13 & 0xFFFFFFFFFFFFFFF8);
    *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8) = v14;
    id v15 = v14;
  }
  return v4;
}

unint64_t sub_228B0596C(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

void sub_228B059B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = a1 + *(void *)(v3 + 56) + 7;
  unint64_t v5 = (v4 & 0xFFFFFFFFFFFFFFF8) + 15;
  sub_228B05A34(*(void *)(v4 & 0xFFFFFFFFFFFFFFF8));
  uint64_t v6 = *(void **)(v5 & 0xFFFFFFFFFFFFFFF8);
}

unint64_t sub_228B05A34(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_228B05A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = v6 + a2;
  unint64_t v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  unint64_t v9 = *(void *)(v8 & 0xFFFFFFFFFFFFFFF8);
  sub_228B0596C(v9);
  void *v7 = v9;
  uint64_t v11 = *(void **)(v10 & 0xFFFFFFFFFFFFFFF8);
  *(void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = v11;
  id v12 = v11;
  return a1;
}

uint64_t sub_228B05B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v6 + a2;
  unint64_t v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  unint64_t v9 = *(void *)(v8 & 0xFFFFFFFFFFFFFFF8);
  sub_228B0596C(v9);
  unint64_t v11 = *(void *)v7;
  *(void *)unint64_t v7 = v9;
  v7 += 15;
  sub_228B05A34(v11);
  id v12 = *(void **)(v10 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = *(void **)(v7 & 0xFFFFFFFFFFFFFFF8);
  *(void *)(v7 & 0xFFFFFFFFFFFFFFF8) = v12;
  id v14 = v12;

  return a1;
}

uint64_t sub_228B05BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  *(void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_228B05C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v9 = *(void *)v7;
  *(void *)unint64_t v7 = *v8;
  v7 += 15;
  sub_228B05A34(v9);
  unint64_t v10 = *(void **)(v7 & 0xFFFFFFFFFFFFFFF8);
  *(void *)(v7 & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_228B05CE8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x228B05E4CLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v1__isPlatformVersionAtLeast(2, 18, 1, 0) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  if ((v17 + 1) >= 2) {
    return v17;
  }
  else {
    return 0;
  }
}

void sub_228B05E60(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFE)
            {
              unint64_t v19 = (void *)((((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              if (a2 > 0x7FFFFFFE)
              {
                *unint64_t v19 = 0;
                *(_DWORD *)unint64_t v19 = a2 - 0x7FFFFFFF;
              }
              else
              {
                *unint64_t v19 = a2;
              }
            }
            else
            {
              unint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    unsigned int v17 = ~v8 + a2;
    bzero(a1, ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x228B06068);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for StaticMapBridgingViewCoordinator(uint64_t a1)
{
  return sub_228AC29CC(a1, qword_268292528);
}

uint64_t sub_228B060B0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_228B060F4()
{
  return type metadata accessor for StaticMapBridgingViewCoordinator(0);
}

__n128 __swift_memcpy40_4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for MapCamera(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MapCamera(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v3;
  return result;
}

uint64_t *sub_228B06164(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    uint64_t v8 = a2[4];
    a1[3] = a2[3];
    a1[4] = v8;
    uint64_t v9 = a2[6];
    a1[5] = a2[5];
    a1[6] = v9;
    uint64_t v10 = a2[8];
    a1[7] = a2[7];
    a1[8] = v10;
    uint64_t v11 = a2[10];
    a1[9] = a2[9];
    a1[10] = v11;
    uint64_t v12 = a2[12];
    a1[11] = a2[11];
    a1[12] = v12;
    uint64_t v13 = a2[15];
    unint64_t v14 = a2[16];
    uint64_t v15 = a2[14];
    a1[13] = a2[13];
    a1[14] = v15;
    a1[15] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_228B0596C(v14);
    int v16 = (void *)a2[17];
    a1[16] = v14;
    a1[17] = (uint64_t)v16;
    uint64_t v17 = a3[14];
    unint64_t v18 = (uint64_t *)((char *)a1 + v17);
    unint64_t v19 = (uint64_t *)((char *)a2 + v17);
    id v20 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268291BE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_228BACB68();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v18, v19, v21);
    }
    else
    {
      *unint64_t v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[15];
    long long v23 = (uint64_t *)((char *)a1 + v22);
    long long v24 = (uint64_t *)((char *)a2 + v22);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2682925C0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_228BAC848();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *long long v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = a3[16];
    uint64_t v27 = (char *)a1 + v26;
    BOOL v28 = (char *)a2 + v26;
    uint64_t v29 = *(void *)v28;
    uint64_t v30 = *((void *)v28 + 1);
    uint64_t v31 = *((void *)v28 + 2);
    uint64_t v32 = *((void *)v28 + 3);
    uint64_t v33 = *((void *)v28 + 4);
    uint64_t v34 = *((void *)v28 + 5);
    uint64_t v35 = *((void *)v28 + 6);
    uint64_t v36 = *((void *)v28 + 7);
    uint64_t v38 = *((void *)v28 + 8);
    uint64_t v39 = *((void *)v28 + 9);
    char v40 = v28[80];
    char v42 = v28[81];
    sub_228AD2340(*(void *)v28, v30, v31, v32, v33, v34, v35, v36, v38, v39, v40, v42);
    *(void *)uint64_t v27 = v29;
    *((void *)v27 + 1) = v30;
    *((void *)v27 + 2) = v31;
    *((void *)v27 + 3) = v32;
    *((void *)v27 + 4) = v33;
    *((void *)v27 + 5) = v34;
    *((void *)v27 + 6) = v35;
    *((void *)v27 + 7) = v36;
    *((void *)v27 + 8) = v38;
    *((void *)v27 + 9) = v39;
    v27[80] = v40;
    v27[81] = v42;
  }
  return a1;
}

uint64_t sub_228B06448(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_228B05A34(*(void *)(a1 + 128));

  uint64_t v4 = a1 + a2[14];
  __swift_instantiateConcreteTypeFromMangledName(&qword_268291BE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_228BACB68();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[15];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2682925C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_228BAC848();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[16];
  return sub_228AD24B0(*(void *)v8, *(void *)(v8 + 8), *(void *)(v8 + 16), *(void *)(v8 + 24), *(void *)(v8 + 32), *(void *)(v8 + 40), *(void *)(v8 + 48), *(void *)(v8 + 56), *(void *)(v8 + 64), *(void *)(v8 + 72), *(unsigned char *)(v8 + 80), *(unsigned char *)(v8 + 81));
}

void *sub_228B065D8(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  uint64_t v10 = a2[11];
  a1[10] = a2[10];
  a1[11] = v10;
  uint64_t v11 = a2[13];
  a1[12] = a2[12];
  a1[13] = v11;
  uint64_t v12 = a2[15];
  a1[14] = a2[14];
  a1[15] = v12;
  unint64_t v13 = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_228B0596C(v13);
  unint64_t v14 = (void *)a2[17];
  a1[16] = v13;
  a1[17] = v14;
  uint64_t v15 = a3[14];
  int v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  id v18 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268291BE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_228BACB68();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v16, v17, v19);
  }
  else
  {
    *int v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = a3[15];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2682925C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = sub_228BAC848();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else
  {
    *uint64_t v21 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = a3[16];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)v26;
  uint64_t v28 = *((void *)v26 + 1);
  uint64_t v29 = *((void *)v26 + 2);
  uint64_t v30 = *((void *)v26 + 3);
  uint64_t v31 = *((void *)v26 + 4);
  uint64_t v32 = *((void *)v26 + 5);
  uint64_t v33 = *((void *)v26 + 6);
  uint64_t v34 = *((void *)v26 + 7);
  uint64_t v36 = *((void *)v26 + 8);
  uint64_t v37 = *((void *)v26 + 9);
  char v38 = v26[80];
  char v40 = v26[81];
  sub_228AD2340(*(void *)v26, v28, v29, v30, v31, v32, v33, v34, v36, v37, v38, v40);
  *(void *)uint64_t v25 = v27;
  *((void *)v25 + 1) = v28;
  *((void *)v25 + 2) = v29;
  *((void *)v25 + 3) = v30;
  *((void *)v25 + 4) = v31;
  *((void *)v25 + 5) = v32;
  *((void *)v25 + 6) = v33;
  *((void *)v25 + 7) = v34;
  *((void *)v25 + 8) = v36;
  *((void *)v25 + 9) = v37;
  v25[80] = v38;
  v25[81] = v40;
  return a1;
}

void *sub_228B06870(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  unint64_t v6 = a2[16];
  sub_228B0596C(v6);
  unint64_t v7 = a1[16];
  a1[16] = v6;
  sub_228B05A34(v7);
  uint64_t v8 = (void *)a1[17];
  uint64_t v9 = (void *)a2[17];
  a1[17] = v9;
  id v10 = v9;

  if (a1 != a2)
  {
    uint64_t v11 = a3[14];
    uint64_t v12 = (void *)((char *)a1 + v11);
    unint64_t v13 = (void *)((char *)a2 + v11);
    sub_228AC1A50((uint64_t)a1 + v11, &qword_268291BE0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268291BE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_228BACB68();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[15];
    int v16 = (void *)((char *)a1 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    sub_228AC1A50((uint64_t)a1 + v15, &qword_2682925C0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2682925C0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_228BAC848();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *int v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v19 = a3[16];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)v21;
  uint64_t v23 = *((void *)v21 + 1);
  uint64_t v24 = *((void *)v21 + 2);
  uint64_t v25 = *((void *)v21 + 3);
  uint64_t v26 = *((void *)v21 + 4);
  uint64_t v27 = *((void *)v21 + 5);
  uint64_t v28 = *((void *)v21 + 6);
  uint64_t v29 = *((void *)v21 + 7);
  uint64_t v43 = *((void *)v21 + 8);
  uint64_t v44 = *((void *)v21 + 9);
  char v45 = v21[80];
  char v46 = v21[81];
  sub_228AD2340(*(void *)v21, v23, v24, v25, v26, v27, v28, v29, v43, v44, v45, v46);
  uint64_t v30 = *(void *)v20;
  uint64_t v31 = *((void *)v20 + 1);
  uint64_t v32 = *((void *)v20 + 2);
  uint64_t v33 = *((void *)v20 + 3);
  uint64_t v34 = *((void *)v20 + 4);
  uint64_t v35 = *((void *)v20 + 5);
  uint64_t v36 = *((void *)v20 + 6);
  uint64_t v37 = *((void *)v20 + 7);
  uint64_t v38 = *((void *)v20 + 8);
  uint64_t v39 = *((void *)v20 + 9);
  char v40 = v20[80];
  char v41 = v20[81];
  *(void *)uint64_t v20 = v22;
  *((void *)v20 + 1) = v23;
  *((void *)v20 + 2) = v24;
  *((void *)v20 + 3) = v25;
  *((void *)v20 + 4) = v26;
  *((void *)v20 + 5) = v27;
  *((void *)v20 + 6) = v28;
  *((void *)v20 + 7) = v29;
  *((void *)v20 + 8) = v43;
  *((void *)v20 + 9) = v44;
  v20[80] = v45;
  v20[81] = v46;
  sub_228AD24B0(v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41);
  return a1;
}

uint64_t sub_228B06BF0(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v8;
  long long v9 = *(_OWORD *)(a2 + 96);
  long long v10 = *(_OWORD *)(a2 + 112);
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  uint64_t v12 = a3[14];
  unint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291BE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_228BACB68();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  uint64_t v17 = a3[15];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682925C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_228BAC848();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  uint64_t v22 = a3[16];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  long long v25 = *(_OWORD *)(v24 + 48);
  *(_OWORD *)(v23 + 32) = *(_OWORD *)(v24 + 32);
  *(_OWORD *)(v23 + 48) = v25;
  *(_OWORD *)(v23 + 64) = *(_OWORD *)(v24 + 64);
  *(_WORD *)(v23 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_WORD *)(v24 + 80);
  long long v26 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v26;
  return a1;
}

uint64_t sub_228B06DC0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  unint64_t v13 = *(void *)(a1 + 128);
  *(_OWORD *)(a1 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_OWORD *)(a2 + 120);
  sub_228B05A34(v13);
  uint64_t v14 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);

  if (a1 != a2)
  {
    uint64_t v15 = a3[14];
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (const void *)(a2 + v15);
    sub_228AC1A50(a1 + v15, &qword_268291BE0);
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268291BE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_228BACB68();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    uint64_t v20 = a3[15];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (const void *)(a2 + v20);
    sub_228AC1A50(a1 + v20, &qword_2682925C0);
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682925C0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_228BAC848();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
  }
  uint64_t v25 = a3[16];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  char v28 = *(unsigned char *)(v27 + 80);
  char v29 = *(unsigned char *)(v27 + 81);
  uint64_t v30 = *(void *)v26;
  uint64_t v31 = *(void *)(v26 + 8);
  uint64_t v32 = *(void *)(v26 + 16);
  uint64_t v33 = *(void *)(v26 + 24);
  uint64_t v34 = *(void *)(v26 + 32);
  uint64_t v35 = *(void *)(v26 + 40);
  uint64_t v36 = *(void *)(v26 + 48);
  uint64_t v37 = *(void *)(v26 + 56);
  uint64_t v38 = *(void *)(v26 + 64);
  uint64_t v39 = *(void *)(v26 + 72);
  char v40 = *(unsigned char *)(v26 + 80);
  char v41 = *(unsigned char *)(v26 + 81);
  long long v42 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v42;
  long long v43 = *(_OWORD *)(v27 + 48);
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_OWORD *)(v26 + 48) = v43;
  *(_OWORD *)(v26 + 64) = *(_OWORD *)(v27 + 64);
  *(unsigned char *)(v26 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v28;
  *(unsigned char *)(v26 + 81) = v29;
  sub_228AD24B0(v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41);
  return a1;
}

uint64_t sub_228B0706C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_228B07080);
}

uint64_t sub_228B07080(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682925C8);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 56);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682925D0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 60);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_228B071B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_228B071C8);
}

void *sub_228B071C8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *__n128 result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682925C8);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 56);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682925D0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 60);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_228B072FC()
{
  sub_228B07430(319, &qword_2682925F0, MEMORY[0x263F19798]);
  if (v0 <= 0x3F)
  {
    sub_228B07430(319, (unint64_t *)&unk_2682925F8, MEMORY[0x263F18DD8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_228B07430(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_228BAC598();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_228B07484()
{
  return sub_228B091A0(qword_268292430, (void (*)(uint64_t))type metadata accessor for StaticMapBridgingView);
}

uint64_t sub_228B074CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_228B074E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v9 = *(void *)(a5 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](a1);
  uint64_t v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v16 = &v19[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *))(v9 + 16))(v12);
  sub_228BAC4B8();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v12, a5);
  uint64_t v21 = a5;
  uint64_t v22 = a6;
  sub_228B3C21C((uint64_t)v16, (uint64_t)sub_228B0AC38, (uint64_t)v20, a4, MEMORY[0x263F8E628], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8E658], v17);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v14 + 8))(v16, a4);
}

void (*sub_228B076DC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_228B077F8(v6, a2, a3);
  return sub_228B07744;
}

void (*sub_228B07748(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_228B07880(v6, a2, a3);
  return sub_228B07744;
}

void sub_228B077B0(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_228B077F8(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  char v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x22A6A6FA0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    uint64_t *v3 = v4;
    return sub_228B07878;
  }
  __break(1u);
  return result;
}

uint64_t sub_228B07878()
{
  return swift_unknownObjectRelease();
}

uint64_t (*sub_228B07880(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  char v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x22A6A6FA0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    uint64_t *v3 = v4;
    return sub_228B0B0DC;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_228B07900(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  v32[3] = sub_228AD25BC(0, &qword_268292678);
  v32[4] = &off_26DD21E98;
  v32[0] = a1;
  sub_228B099C8((uint64_t)v32, (uint64_t)v31);
  sub_228B099C8((uint64_t)v31, (uint64_t)v28);
  uint64_t v9 = swift_allocObject();
  sub_228B09A30(v31, v9 + 16);
  *(void *)(v9 + 56) = a2;
  long long v10 = *(_OWORD *)(a5 + 112);
  *(_OWORD *)(v9 + 16__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_OWORD *)(a5 + 96);
  *(_OWORD *)(v9 + 176) = v10;
  *(void *)(v9 + 192) = *(void *)(a5 + 128);
  long long v11 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v9 + 112) = v11;
  long long v12 = *(_OWORD *)(a5 + 80);
  *(_OWORD *)(v9 + 128) = *(_OWORD *)(a5 + 64);
  *(_OWORD *)(v9 + 144) = v12;
  long long v13 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)a5;
  *(_OWORD *)(v9 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v13;
  if (a3)
  {
    id v14 = a1;
    sub_228B0991C(a5);
    id v15 = a2;
    swift_retain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = sub_228B09A48;
    v16[3] = v9;
    v16[4] = a3;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = sub_228B09A48;
    *(void *)(v17 + 24) = v9;
    swift_retain();
    uint64_t v18 = sub_228B09AA0;
  }
  else
  {
    uint64_t v19 = v29;
    uint64_t v20 = v30;
    __swift_project_boxed_opaque_existential_1(v28, v29);
    uint64_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
    id v22 = a1;
    sub_228B0991C(a5);
    uint64_t v23 = v21(a2, v19, v20);
    if (v23)
    {
      uint64_t v24 = (void *)v23;
      self;
      uint64_t v25 = (void *)swift_dynamicCastObjCClass();
      if (v25)
      {
        uint64_t v26 = v25;
        sub_228B14420(v25);
        objc_msgSend(v26, sel_setNeedsDisplay);
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    uint64_t v18 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  return v18;
}

uint64_t (*sub_228B07B54(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  v32[3] = sub_228AD25BC(0, (unint64_t *)&unk_268292FB0);
  v32[4] = &off_26DD22238;
  v32[0] = a1;
  sub_228B099C8((uint64_t)v32, (uint64_t)v31);
  sub_228B099C8((uint64_t)v31, (uint64_t)v28);
  uint64_t v9 = swift_allocObject();
  sub_228B09A30(v31, v9 + 16);
  *(void *)(v9 + 56) = a2;
  long long v10 = *(_OWORD *)(a5 + 112);
  *(_OWORD *)(v9 + 16__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_OWORD *)(a5 + 96);
  *(_OWORD *)(v9 + 176) = v10;
  *(void *)(v9 + 192) = *(void *)(a5 + 128);
  long long v11 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v9 + 112) = v11;
  long long v12 = *(_OWORD *)(a5 + 80);
  *(_OWORD *)(v9 + 128) = *(_OWORD *)(a5 + 64);
  *(_OWORD *)(v9 + 144) = v12;
  long long v13 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)a5;
  *(_OWORD *)(v9 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v13;
  if (a3)
  {
    id v14 = a1;
    sub_228B0991C(a5);
    id v15 = a2;
    swift_retain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = sub_228B0AF20;
    v16[3] = v9;
    v16[4] = a3;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = sub_228B0AF20;
    *(void *)(v17 + 24) = v9;
    swift_retain();
    uint64_t v18 = sub_228B0B0D4;
  }
  else
  {
    uint64_t v19 = v29;
    uint64_t v20 = v30;
    __swift_project_boxed_opaque_existential_1(v28, v29);
    uint64_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
    id v22 = a1;
    sub_228B0991C(a5);
    uint64_t v23 = v21(a2, v19, v20);
    if (v23)
    {
      uint64_t v24 = (void *)v23;
      self;
      uint64_t v25 = (void *)swift_dynamicCastObjCClass();
      if (v25)
      {
        uint64_t v26 = v25;
        sub_228B14420(v25);
        objc_msgSend(v26, sel_setNeedsDisplay);
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    uint64_t v18 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  return v18;
}

uint64_t (*sub_228B07DA8(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  v40[3] = sub_228AD25BC(0, &qword_268292678);
  v40[4] = &off_26DD21E98;
  v40[0] = a1;
  sub_228B099C8((uint64_t)v40, (uint64_t)v39);
  sub_228B099C8((uint64_t)v39, (uint64_t)v36);
  uint64_t v9 = swift_allocObject();
  sub_228B09A30(v39, v9 + 16);
  *(void *)(v9 + 56) = a2;
  long long v10 = *(_OWORD *)(a5 + 80);
  *(_OWORD *)(v9 + 128) = *(_OWORD *)(a5 + 64);
  *(_OWORD *)(v9 + 144) = v10;
  *(_OWORD *)(v9 + 16__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_OWORD *)(a5 + 96);
  *(void *)(v9 + 176) = *(void *)(a5 + 112);
  long long v11 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)a5;
  *(_OWORD *)(v9 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v11;
  long long v12 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v9 + 112) = v12;
  if (a3)
  {
    id v13 = a1;
    id v14 = a2;
    sub_228B09D54(a5);
    swift_retain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
    id v15 = (void *)swift_allocObject();
    void v15[2] = sub_228B09F84;
    v15[3] = v9;
    v15[4] = a3;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_228B09F84;
    *(void *)(v16 + 24) = v9;
    swift_retain();
    uint64_t v17 = sub_228B09F98;
  }
  else
  {
    uint64_t v18 = v37;
    uint64_t v19 = v38;
    __swift_project_boxed_opaque_existential_1(v36, v37);
    uint64_t v20 = *(uint64_t (**)(id, uint64_t, uint64_t))(v19 + 48);
    id v21 = a1;
    id v22 = a2;
    sub_228B09D54(a5);
    uint64_t v23 = v20(v22, v18, v19);
    if (v23)
    {
      uint64_t v24 = (void *)v23;
      self;
      uint64_t v25 = (void *)swift_dynamicCastObjCClass();
      if (v25)
      {
        uint64_t v26 = v25;
        long long v32 = *(_OWORD *)(a5 + 64);
        long long v33 = *(_OWORD *)(a5 + 80);
        long long v34 = *(_OWORD *)(a5 + 96);
        uint64_t v35 = *(void *)(a5 + 112);
        long long v28 = *(_OWORD *)a5;
        long long v29 = *(_OWORD *)(a5 + 16);
        long long v30 = *(_OWORD *)(a5 + 32);
        long long v31 = *(_OWORD *)(a5 + 48);
        sub_228B14130(v25);
        objc_msgSend(v26, sel_setNeedsDisplay, v28, v29, v30, v31, v32, v33, v34, v35);
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
    uint64_t v17 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
  return v17;
}

uint64_t (*sub_228B0802C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  v40[3] = sub_228AD25BC(0, (unint64_t *)&unk_268292FB0);
  v40[4] = &off_26DD22238;
  v40[0] = a1;
  sub_228B099C8((uint64_t)v40, (uint64_t)v39);
  sub_228B099C8((uint64_t)v39, (uint64_t)v36);
  uint64_t v9 = swift_allocObject();
  sub_228B09A30(v39, v9 + 16);
  *(void *)(v9 + 56) = a2;
  long long v10 = *(_OWORD *)(a5 + 80);
  *(_OWORD *)(v9 + 128) = *(_OWORD *)(a5 + 64);
  *(_OWORD *)(v9 + 144) = v10;
  *(_OWORD *)(v9 + 16__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_OWORD *)(a5 + 96);
  *(void *)(v9 + 176) = *(void *)(a5 + 112);
  long long v11 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)a5;
  *(_OWORD *)(v9 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v11;
  long long v12 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v9 + 112) = v12;
  if (a3)
  {
    id v13 = a1;
    id v14 = a2;
    sub_228B09D54(a5);
    swift_retain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
    id v15 = (void *)swift_allocObject();
    void v15[2] = sub_228B0AF24;
    v15[3] = v9;
    v15[4] = a3;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_228B0AF24;
    *(void *)(v16 + 24) = v9;
    swift_retain();
    uint64_t v17 = sub_228B0B0D8;
  }
  else
  {
    uint64_t v18 = v37;
    uint64_t v19 = v38;
    __swift_project_boxed_opaque_existential_1(v36, v37);
    uint64_t v20 = *(uint64_t (**)(id, uint64_t, uint64_t))(v19 + 48);
    id v21 = a1;
    id v22 = a2;
    sub_228B09D54(a5);
    uint64_t v23 = v20(v22, v18, v19);
    if (v23)
    {
      uint64_t v24 = (void *)v23;
      self;
      uint64_t v25 = (void *)swift_dynamicCastObjCClass();
      if (v25)
      {
        uint64_t v26 = v25;
        long long v32 = *(_OWORD *)(a5 + 64);
        long long v33 = *(_OWORD *)(a5 + 80);
        long long v34 = *(_OWORD *)(a5 + 96);
        uint64_t v35 = *(void *)(a5 + 112);
        long long v28 = *(_OWORD *)a5;
        long long v29 = *(_OWORD *)(a5 + 16);
        long long v30 = *(_OWORD *)(a5 + 32);
        long long v31 = *(_OWORD *)(a5 + 48);
        sub_228B14130(v25);
        objc_msgSend(v26, sel_setNeedsDisplay, v28, v29, v30, v31, v32, v33, v34, v35);
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
    uint64_t v17 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
  return v17;
}

uint64_t (*sub_228B082B0(void *a1, void *a2, uint64_t a3, uint64_t a4, long long *a5))()
{
  v38[3] = sub_228AD25BC(0, &qword_268292678);
  v38[4] = &off_26DD21E98;
  v38[0] = a1;
  sub_228B099C8((uint64_t)v38, (uint64_t)v37);
  sub_228B099C8((uint64_t)v37, (uint64_t)v34);
  uint64_t v9 = swift_allocObject();
  sub_228B09A30(v37, v9 + 16);
  *(void *)(v9 + 56) = a2;
  long long v10 = a5[3];
  *(_OWORD *)(v9 + 96) = a5[2];
  *(_OWORD *)(v9 + 112) = v10;
  long long v11 = a5[5];
  *(_OWORD *)(v9 + 128) = a5[4];
  *(_OWORD *)(v9 + 144) = v11;
  long long v12 = a5[1];
  *(_OWORD *)(v9 + 64) = *a5;
  *(_OWORD *)(v9 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v12;
  if (a3)
  {
    id v13 = a1;
    id v14 = a2;
    sub_228B0A030((uint64_t)a5);
    swift_retain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    id v15 = (void *)swift_allocObject();
    void v15[2] = sub_228B0A1C0;
    v15[3] = v9;
    v15[4] = a3;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_228B0A1C0;
    *(void *)(v16 + 24) = v9;
    swift_retain();
    uint64_t v17 = sub_228B09F98;
  }
  else
  {
    uint64_t v18 = v35;
    uint64_t v19 = v36;
    __swift_project_boxed_opaque_existential_1(v34, v35);
    uint64_t v20 = *(uint64_t (**)(id, uint64_t, uint64_t))(v19 + 48);
    id v21 = a1;
    id v22 = a2;
    sub_228B0A030((uint64_t)a5);
    uint64_t v23 = v20(v22, v18, v19);
    if (v23)
    {
      uint64_t v24 = (void *)v23;
      self;
      uint64_t v25 = (void *)swift_dynamicCastObjCClass();
      if (v25)
      {
        uint64_t v26 = v25;
        long long v30 = a5[2];
        long long v31 = a5[3];
        long long v32 = a5[4];
        long long v33 = a5[5];
        long long v28 = *a5;
        long long v29 = a5[1];
        sub_228B13C9C(v25);
        objc_msgSend(v26, sel_setNeedsDisplay, v28, v29, v30, v31, v32, v33);
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    uint64_t v17 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
  return v17;
}

uint64_t (*sub_228B08514(void *a1, void *a2, uint64_t a3, uint64_t a4, long long *a5))()
{
  v38[3] = sub_228AD25BC(0, (unint64_t *)&unk_268292FB0);
  v38[4] = &off_26DD22238;
  v38[0] = a1;
  sub_228B099C8((uint64_t)v38, (uint64_t)v37);
  sub_228B099C8((uint64_t)v37, (uint64_t)v34);
  uint64_t v9 = swift_allocObject();
  sub_228B09A30(v37, v9 + 16);
  *(void *)(v9 + 56) = a2;
  long long v10 = a5[3];
  *(_OWORD *)(v9 + 96) = a5[2];
  *(_OWORD *)(v9 + 112) = v10;
  long long v11 = a5[5];
  *(_OWORD *)(v9 + 128) = a5[4];
  *(_OWORD *)(v9 + 144) = v11;
  long long v12 = a5[1];
  *(_OWORD *)(v9 + 64) = *a5;
  *(_OWORD *)(v9 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v12;
  if (a3)
  {
    id v13 = a1;
    id v14 = a2;
    sub_228B0A030((uint64_t)a5);
    swift_retain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    id v15 = (void *)swift_allocObject();
    void v15[2] = sub_228B0AF28;
    v15[3] = v9;
    v15[4] = a3;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_228B0AF28;
    *(void *)(v16 + 24) = v9;
    swift_retain();
    uint64_t v17 = sub_228B0B0D8;
  }
  else
  {
    uint64_t v18 = v35;
    uint64_t v19 = v36;
    __swift_project_boxed_opaque_existential_1(v34, v35);
    uint64_t v20 = *(uint64_t (**)(id, uint64_t, uint64_t))(v19 + 48);
    id v21 = a1;
    id v22 = a2;
    sub_228B0A030((uint64_t)a5);
    uint64_t v23 = v20(v22, v18, v19);
    if (v23)
    {
      uint64_t v24 = (void *)v23;
      self;
      uint64_t v25 = (void *)swift_dynamicCastObjCClass();
      if (v25)
      {
        uint64_t v26 = v25;
        long long v30 = a5[2];
        long long v31 = a5[3];
        long long v32 = a5[4];
        long long v33 = a5[5];
        long long v28 = *a5;
        long long v29 = a5[1];
        sub_228B13C9C(v25);
        objc_msgSend(v26, sel_setNeedsDisplay, v28, v29, v30, v31, v32, v33);
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    uint64_t v17 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
  return v17;
}

uint64_t (*sub_228B08778(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v9 = type metadata accessor for UserAnnotationViewModel(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v9 - 8);
  id v13 = (double *)((char *)&v38[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v38[-1] - v14;
  v42[3] = sub_228AD25BC(0, &qword_268292678);
  v42[4] = &off_26DD21E98;
  v42[0] = a1;
  sub_228B099C8((uint64_t)v42, (uint64_t)v41);
  sub_228B0A230(a5, (uint64_t)v15, type metadata accessor for UserAnnotationViewModel);
  sub_228B099C8((uint64_t)v41, (uint64_t)v38);
  sub_228B0A230((uint64_t)v15, (uint64_t)v13, type metadata accessor for UserAnnotationViewModel);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v17 = swift_allocObject();
  sub_228B09A30(v41, v17 + 16);
  *(void *)(v17 + 56) = a2;
  sub_228B0A298((uint64_t)v15, v17 + v16, type metadata accessor for UserAnnotationViewModel);
  if (a3)
  {
    id v18 = a1;
    id v19 = a2;
    swift_retain();
    sub_228B0A300((uint64_t)v13, type metadata accessor for UserAnnotationViewModel);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
    uint64_t v20 = (void *)swift_allocObject();
    void v20[2] = sub_228B0A364;
    v20[3] = v17;
    v20[4] = a3;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = sub_228B0A364;
    *(void *)(v21 + 24) = v17;
    swift_retain();
    id v22 = sub_228B09F98;
  }
  else
  {
    uint64_t v23 = v39;
    uint64_t v24 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    uint64_t v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 24);
    id v26 = a1;
    uint64_t v27 = v25(a2, v23, v24);
    if (v27)
    {
      long long v28 = (void *)v27;
      type metadata accessor for SwiftUIAnnotationView();
      long long v29 = (char *)swift_dynamicCastClass();
      if (v29)
      {
        long long v30 = v29;
        double v31 = v13[3];
        double v32 = v13[4];
        long long v33 = (double *)&v29[OBJC_IVAR____TtC15_MapKit_SwiftUI21SwiftUIAnnotationView_contentAnchorPoint];
        *long long v33 = v31;
        v33[1] = v32;
        objc_msgSend(v29, sel_frame);
        objc_msgSend(v30, sel_setCenterOffset_, v34 * 0.5 - v31 * v34, v35 * 0.5 - v32 * v35);
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
    sub_228B0A300((uint64_t)v13, type metadata accessor for UserAnnotationViewModel);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
    id v22 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  return v22;
}

uint64_t (*sub_228B08AF8(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v9 = type metadata accessor for UserAnnotationViewModel(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v9 - 8);
  id v13 = (double *)((char *)&v38[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v38[-1] - v14;
  v42[3] = sub_228AD25BC(0, (unint64_t *)&unk_268292FB0);
  v42[4] = &off_26DD22238;
  v42[0] = a1;
  sub_228B099C8((uint64_t)v42, (uint64_t)v41);
  sub_228B0A230(a5, (uint64_t)v15, type metadata accessor for UserAnnotationViewModel);
  sub_228B099C8((uint64_t)v41, (uint64_t)v38);
  sub_228B0A230((uint64_t)v15, (uint64_t)v13, type metadata accessor for UserAnnotationViewModel);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v17 = swift_allocObject();
  sub_228B09A30(v41, v17 + 16);
  *(void *)(v17 + 56) = a2;
  sub_228B0A298((uint64_t)v15, v17 + v16, type metadata accessor for UserAnnotationViewModel);
  if (a3)
  {
    id v18 = a1;
    id v19 = a2;
    swift_retain();
    sub_228B0A300((uint64_t)v13, type metadata accessor for UserAnnotationViewModel);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
    uint64_t v20 = (void *)swift_allocObject();
    void v20[2] = sub_228B0A364;
    v20[3] = v17;
    v20[4] = a3;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = sub_228B0A364;
    *(void *)(v21 + 24) = v17;
    swift_retain();
    id v22 = sub_228B0B0D8;
  }
  else
  {
    uint64_t v23 = v39;
    uint64_t v24 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    uint64_t v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 24);
    id v26 = a1;
    uint64_t v27 = v25(a2, v23, v24);
    if (v27)
    {
      long long v28 = (void *)v27;
      type metadata accessor for SwiftUIAnnotationView();
      long long v29 = (char *)swift_dynamicCastClass();
      if (v29)
      {
        long long v30 = v29;
        double v31 = v13[3];
        double v32 = v13[4];
        long long v33 = (double *)&v29[OBJC_IVAR____TtC15_MapKit_SwiftUI21SwiftUIAnnotationView_contentAnchorPoint];
        *long long v33 = v31;
        v33[1] = v32;
        objc_msgSend(v29, sel_frame);
        objc_msgSend(v30, sel_setCenterOffset_, v34 * 0.5 - v31 * v34, v35 * 0.5 - v32 * v35);
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
    sub_228B0A300((uint64_t)v13, type metadata accessor for UserAnnotationViewModel);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
    id v22 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  return v22;
}

unint64_t sub_228B08E78(void *a1, uint64_t *a2)
{
  uint64_t v2 = a1[2];
  if (!v2) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v4 = (void *)sub_228BAD988();
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  unint64_t result = sub_228AD18A8(v6);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v4;
  }
  uint64_t v9 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v4[6] + v1__isPlatformVersionAtLeast(2, 18, 1, 0) = v6;
    *(void *)(v4[7] + v1__isPlatformVersionAtLeast(2, 18, 1, 0) = v5;
    uint64_t v11 = v4[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v4[2] = v13;
    if (!--v2) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 2;
    uint64_t v6 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_228AD18A8(v6);
    uint64_t v9 = v14;
    uint64_t v5 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_228B08F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  long long v29 = a6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v15)
  {
    v25[1] = v6;
    uint64_t v32 = MEMORY[0x263F8EE78];
    uint64_t v27 = (char *)v25 - v13;
    long long v28 = v14;
    sub_228BAD8A8();
    uint64_t v17 = (void **)(a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)));
    uint64_t v26 = *(void *)(v11 + 72);
    do
    {
      uint64_t v18 = *(int *)(v10 + 48);
      uint64_t v19 = (uint64_t)&v27[v18];
      uint64_t v20 = *v17;
      sub_228B0A230((uint64_t)v17 + v18, (uint64_t)&v27[v18], a5);
      uint64_t v22 = (uint64_t)v28;
      uint64_t v21 = v29;
      uint64_t v23 = (uint64_t)v28 + *(int *)(v10 + 48);
      *long long v28 = v20;
      sub_228B0A298(v19, v23, v21);
      id v24 = v20;
      swift_getAtKeyPath();
      sub_228AC1A50(v22, a4);
      uint64_t v30 = v31;
      sub_228BAD878();
      sub_228BAD8B8();
      sub_228BAD8C8();
      sub_228BAD888();
      uint64_t v17 = (void **)((char *)v17 + v26);
      --v15;
    }
    while (v15);
    return v32;
  }
  return result;
}

uint64_t sub_228B0914C()
{
  return sub_228BACAA8();
}

uint64_t sub_228B09170()
{
  return sub_228BACA58();
}

uint64_t sub_228B091A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_228B091E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_51Tm(a1, &qword_2682928D0, a2);
}

uint64_t sub_228B091F4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_228AE6418(a1, a2, a3, a4, &qword_2682928D0);
}

uint64_t sub_228B09214@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_51Tm(a1, &qword_2682928D8, a2);
}

uint64_t sub_228B09220(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_228AE6418(a1, a2, a3, a4, &qword_2682928D8);
}

uint64_t sub_228B09240@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_51Tm(a1, &qword_2682928E0, a2);
}

uint64_t sub_228B0924C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_228AE6418(a1, a2, a3, a4, &qword_2682928E0);
}

uint64_t sub_228B0926C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_51Tm(a1, &qword_2682928E8, a2);
}

uint64_t sub_228B09278(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_228AE6418(a1, a2, a3, a4, &qword_2682928E8);
}

uint64_t sub_228B09298@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_51Tm(a1, &qword_2682928F0, a2);
}

uint64_t sub_228B092A4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_228AE6418(a1, a2, a3, a4, &qword_2682928F0);
}

uint64_t sub_228B092C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_51Tm(a1, &qword_268292900, a2);
}

uint64_t sub_228B092D0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_228AE6418(a1, a2, a3, a4, &qword_268292900);
}

uint64_t sub_228B092F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_51Tm(a1, &qword_268292908, a2);
}

uint64_t sub_228B092FC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_228AE6418(a1, a2, a3, a4, &qword_268292908);
}

uint64_t sub_228B0931C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_51Tm(a1, &qword_268292910, a2);
}

uint64_t keypath_get_51Tm@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3 = *a1 + *a2;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  *(_DWORD *)a3 = *(_DWORD *)v3;
  *(void *)(a3 + 8) = v5;
  *(void *)(a3 + 16) = v4;
  *(void *)(a3 + 24) = v6;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_228B09380(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_228AE6418(a1, a2, a3, a4, &qword_268292910);
}

unint64_t sub_228B093A0(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_228B05A34(result);
  }
  return result;
}

uint64_t sub_228B093B4(unint64_t a1, void *a2)
{
  sub_228AE6A20(a1, a2, (uint64_t)v25);
  uint64_t result = sub_228ACD8BC((uint64_t)v25, (uint64_t)&v26, (uint64_t *)&unk_268292640);
  if (v27[24] != 2)
  {
    long long v28 = v26;
    *(_OWORD *)long long v29 = *(_OWORD *)v27;
    *(_OWORD *)&v29[9] = *(_OWORD *)&v27[9];
    sub_228B096B4((uint64_t)&v28, (uint64_t)v30);
    sub_228B096B4((uint64_t)v30, (uint64_t)&v31);
    unint64_t v4 = v31;
    switch(v31 >> 61)
    {
      case 0uLL:
        v31 &= 0x1FFFFFFFFFFFFFFFuLL;
        objc_msgSend(a2, sel_setRegion_, sub_228B66604(*(double *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10), *(double *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x18), *(double *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x20), *(double *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x28)));
        break;
      case 1uLL:
        v31 &= 0x1FFFFFFFFFFFFFFFuLL;
        objc_msgSend(a2, sel_setVisibleMapRect_edgePadding_, *(double *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10), *(double *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x18), *(double *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x20), *(double *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x28), *((double *)&v28 + 1), *(_OWORD *)v29, *(double *)&v29[16]);
        break;
      case 2uLL:
        v31 &= 0x1FFFFFFFFFFFFFFFuLL;
        uint64_t v5 = *(unsigned __int8 *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        id v6 = *(id *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        sub_228B09724((uint64_t)v25, (void (*)(void, void, void, void, void, void))sub_228B09764);
        objc_msgSend(a2, sel_frame);
        double v8 = v7;
        double v10 = v9;
        uint64_t v11 = self;
        id v12 = objc_msgSend(v11, sel_cameraLookingAtMapItem_forViewSize_allowPitch_, v6, v5, v8, v10);
        objc_msgSend(v12, sel_centerCoordinate);
        double v14 = v13;
        double v16 = v15;
        objc_msgSend(v12, sel_centerCoordinateDistance);
        double v18 = v17;
        objc_msgSend(v12, sel_heading);
        double v20 = v19;
        objc_msgSend(v12, sel_pitch);
        double v22 = v21;

        id v23 = objc_msgSend(v11, sel_cameraLookingAtCenterCoordinate_fromDistance_pitch_heading_, v14, v16, v18, v22, v20);
        objc_msgSend(a2, sel_setCamera_, v23);
        sub_228B09724((uint64_t)v25, (void (*)(void, void, void, void, void, void))sub_228B09710);

        break;
      case 3uLL:
        v31 &= 0x1FFFFFFFFFFFFFFFuLL;
        id v24 = objc_msgSend(self, sel_cameraLookingAtCenterCoordinate_fromDistance_pitch_heading_, *(double *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10), *(double *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x18), *(double *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x20), *(double *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x30), *(double *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x28));
        objc_msgSend(a2, sel_setCamera_, v24);

        break;
      default:
        return sub_228B09724((uint64_t)v25, (void (*)(void, void, void, void, void, void))sub_228B09710);
    }
    return sub_228B09724((uint64_t)v25, (void (*)(void, void, void, void, void, void))sub_228B09710);
  }
  return result;
}

uint64_t sub_228B096B4(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_228B09710(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 != 2) {
    return sub_228B05A34(result);
  }
  return result;
}

uint64_t sub_228B09724(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

unint64_t sub_228B09764(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 != 2) {
    return sub_228B0596C(result);
  }
  return result;
}

uint64_t sub_228B09778(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 104);
  char v4 = *(unsigned char *)(a1 + 112);
  uint64_t v5 = *(void *)(a1 + 120);
  char v6 = *(unsigned char *)(a1 + 128);
  id v7 = *(id *)(a1 + 56);
  swift_bridgeObjectRetain();
  id v8 = v2;
  swift_bridgeObjectRetain();
  sub_228ACF3A4(v3, v4);
  sub_228ACF3A4(v5, v6);
  return a1;
}

uint64_t sub_228B09800()
{
  return swift_deallocObject();
}

uint64_t sub_228B09810@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_228B09840(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 96);
  char v4 = *(unsigned char *)(a1 + 104);
  uint64_t v5 = *(void *)(a1 + 112);
  char v6 = *(unsigned char *)(a1 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_228AD26A8(v3, v4);
  sub_228AD26A8(v5, v6);
  return a1;
}

uint64_t sub_228B098C0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_228B0991C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  char v3 = *(unsigned char *)(a1 + 104);
  uint64_t v4 = *(void *)(a1 + 112);
  char v5 = *(unsigned char *)(a1 + 120);
  id v6 = *(id *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_228ACF3A4(v2, v3);
  sub_228ACF3A4(v4, v5);
  return a1;
}

uint64_t sub_228B099A0()
{
  return sub_228B1480C(*(void *)(v0 + 16));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

void sub_228B099C0(uint64_t a1)
{
  sub_228B1489C(a1, *(void *)(v1 + 16));
}

uint64_t sub_228B099C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_228B09A30(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_228B09A48(uint64_t a1)
{
  sub_228B1434C(a1, (void *)(v1 + 16), *(void *)(v1 + 56));
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_228B09AA0()
{
  return sub_228B1460C(*(uint64_t (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_228B09AAC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_228B09AE4()
{
  return sub_228B1463C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_228B09AEC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_228B09B48(uint64_t a1)
{
  return a1;
}

uint64_t sub_228B09B9C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_228B09BF8(uint64_t a1)
{
  long long v2 = *(void **)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void **)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 88);
  char v6 = *(unsigned char *)(a1 + 96);
  uint64_t v11 = *(void *)(a1 + 104);
  char v7 = *(unsigned char *)(a1 + 112);
  id v8 = *(id *)a1;
  swift_bridgeObjectRetain();
  sub_228B09CA8(v2, v3);
  id v9 = v4;
  swift_bridgeObjectRetain();
  sub_228ACF3A4(v5, v6);
  sub_228ACF3A4(v11, v7);
  return a1;
}

id sub_228B09CA8(void *a1, uint64_t a2)
{
  if (a2 < 0)
  {
    return a1;
  }
  else
  {
    swift_bridgeObjectRetain();
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t sub_228B09CF8()
{
  return swift_deallocObject();
}

void sub_228B09D08(void *a1, uint64_t a2)
{
  if (a2 < 0)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_228B09D54(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 80);
  char v6 = *(unsigned char *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 96);
  char v8 = *(unsigned char *)(a1 + 104);
  swift_bridgeObjectRetain();
  sub_228B09CA8(v2, v3);
  id v9 = v4;
  swift_bridgeObjectRetain();
  sub_228ACF3A4(v5, v6);
  sub_228ACF3A4(v7, v8);
  return a1;
}

uint64_t sub_228B09DF0(uint64_t a1)
{
  return a1;
}

uint64_t sub_228B09E20(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 80);
  char v6 = *(unsigned char *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 96);
  char v8 = *(unsigned char *)(a1 + 104);
  swift_bridgeObjectRelease();
  sub_228B09D08(v2, v3);
  swift_bridgeObjectRelease();

  sub_228AD26A8(v5, v6);
  sub_228AD26A8(v7, v8);
  return a1;
}

uint64_t sub_228B09EBC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_228B09EF4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_228B09F50(uint64_t a1)
{
  return a1;
}

void sub_228B09F84(uint64_t a1)
{
  sub_228B14034(a1, (void *)(v1 + 16), *(void *)(v1 + 56));
}

uint64_t sub_228B09F98()
{
  return sub_228B1AC6C(v0[2], v0[3], v0[4]);
}

uint64_t sub_228B09FA4()
{
  return sub_228B1AC68(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_228B09FAC(uint64_t a1, uint64_t a2)
{
  return a2;
}

id sub_228B0A008(void *a1, __int16 a2)
{
  if (a2 < 0) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t sub_228B0A014()
{
  return swift_deallocObject();
}

void sub_228B0A024(void *a1, __int16 a2)
{
  if (a2 < 0) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_228B0A030(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 72);
  char v5 = *(unsigned char *)(a1 + 80);
  __int16 v6 = *(_WORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_228B0A008(v2, v6);
  id v7 = v3;
  swift_bridgeObjectRetain();
  sub_228ACF3A4(v4, v5);
  return a1;
}

uint64_t sub_228B0A0B0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_228B0A10C(uint64_t a1)
{
  return a1;
}

uint64_t sub_228B0A13C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 72);
  char v5 = *(unsigned char *)(a1 + 80);
  __int16 v6 = *(_WORD *)(a1 + 16);
  swift_bridgeObjectRelease();
  sub_228B0A024(v2, v6);
  swift_bridgeObjectRelease();

  sub_228AD26A8(v4, v5);
  return a1;
}

void sub_228B0A1C0(uint64_t a1)
{
  sub_228B13BB0(a1, (void *)(v1 + 16), *(void *)(v1 + 56));
}

uint64_t sub_228B0A1D4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_228B0A230(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_228B0A298(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_228B0A300(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_228B0A36C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_228B0A3B0(id result, char a2)
{
  if (!a2) {
    return result;
  }
  return result;
}

void sub_228B0A3C0(id a1, char a2)
{
  if (!a2) {
}
  }

uint64_t sub_228B0A3D4(uint64_t a1)
{
  return sub_228B0AA58(a1, type metadata accessor for MarkerAnnotationViewModel, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_228B134B4);
}

uint64_t sub_228B0A404(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_228B0A470(uint64_t a1)
{
  return sub_228B0AA58(a1, type metadata accessor for CustomAnnotationViewModel, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_228B131F4);
}

uint64_t sub_228B0A4A0()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_99Tm()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_228AD26A8(*(void *)(v0 + 160), *(unsigned char *)(v0 + 168));
  sub_228AD26A8(*(void *)(v0 + 176), *(unsigned char *)(v0 + 184));

  return swift_deallocObject();
}

uint64_t sub_228B0A528()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_133Tm()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  swift_bridgeObjectRelease();
  sub_228B09D08(*(void **)(v0 + 72), *(void *)(v0 + 80));

  swift_bridgeObjectRelease();
  sub_228AD26A8(*(void *)(v0 + 144), *(unsigned char *)(v0 + 152));
  sub_228AD26A8(*(void *)(v0 + 160), *(unsigned char *)(v0 + 168));

  return swift_deallocObject();
}

uint64_t sub_228B0A5BC()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_167Tm()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  swift_bridgeObjectRelease();
  sub_228B0A024(*(void **)(v0 + 72), *(_WORD *)(v0 + 80));

  swift_bridgeObjectRelease();
  sub_228AD26A8(*(void *)(v0 + 136), *(unsigned char *)(v0 + 144));

  return swift_deallocObject();
}

uint64_t objectdestroy_199Tm()
{
  uint64_t v1 = type metadata accessor for UserAnnotationViewModel(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v2 + 8)) {
    swift_release();
  }
  unint64_t v3 = v0 + v2 + *(int *)(v1 + 36);
  uint64_t v4 = sub_228BACE18();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

void sub_228B0A760(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UserAnnotationViewModel(0) - 8);
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_228B13790(a1, (void *)(v1 + 16), v4, v5);
}

uint64_t objectdestroy_222Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for MarkerAnnotationViewModel(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;

  uint64_t v4 = (id *)(v0 + v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v5 = (char *)v4 + v1[19];
  uint64_t v6 = sub_228BACE18();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  __swift_destroy_boxed_opaque_existential_0(v0 + v3);

  return swift_deallocObject();
}

uint64_t objectdestroy_253Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for CustomAnnotationViewModel(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;

  uint64_t v4 = v0 + v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v5 = v4 + v1[18];
  uint64_t v6 = sub_228BACE18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  __swift_destroy_boxed_opaque_existential_0(v0 + v3);

  return swift_deallocObject();
}

uint64_t sub_228B0AA58(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = v3 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);

  return a3(a1, v7, v3 + v6, v8);
}

uint64_t objectdestroy_102Tm()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_228B0AB54(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_228B0ABB0()
{
  return swift_deallocObject();
}

uint64_t (*sub_228B0ABC0())(uint64_t a1, uint64_t a2)
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  long long v3 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 24) = v3;
  *(void *)(v2 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v3;
  return sub_228B0AC2C;
}

uint64_t sub_228B0AC1C()
{
  return swift_deallocObject();
}

uint64_t sub_228B0AC2C(uint64_t a1, uint64_t a2)
{
  return sub_228B074E8(a1, a2, v2[5], v2[2], v2[3], v2[4]);
}

uint64_t sub_228B0AC38()
{
  return AGGraphSetOutputValue();
}

uint64_t sub_228B0AC88(uint64_t a1)
{
  return sub_228AE3A24(a1, *(void *)(v1 + 16));
}

uint64_t sub_228B0AC90(uint64_t a1)
{
  return sub_228AE3AB8(a1);
}

uint64_t sub_228B0AC98(uint64_t a1)
{
  return sub_228AE3B58(a1);
}

uint64_t sub_228B0ACA0()
{
  return swift_deallocObject();
}

uint64_t sub_228B0ACB0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_228B3C2F8(a1, a2);
}

uint64_t sub_228B0AD18@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_228B3C2F8(a1, a2);
}

unint64_t destroy for MapCameraPosition.Storage(unint64_t *a1)
{
  return sub_228B05A34(*a1);
}

uint64_t initializeWithCopy for StaticMapBridgingViewCoordinator.ResolvedCameraPosition(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a2;
  sub_228B0596C(*(void *)a2);
  *(void *)a1 = v4;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for StaticMapBridgingViewCoordinator.ResolvedCameraPosition(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a2;
  sub_228B0596C(*(void *)a2);
  unint64_t v5 = *(void *)a1;
  *(void *)a1 = v4;
  sub_228B05A34(v5);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for StaticMapBridgingViewCoordinator.ResolvedCameraPosition(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  sub_228B05A34(v4);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticMapBridgingViewCoordinator.ResolvedCameraPosition(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticMapBridgingViewCoordinator.ResolvedCameraPosition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticMapBridgingViewCoordinator.ResolvedCameraPosition()
{
  return &type metadata for StaticMapBridgingViewCoordinator.ResolvedCameraPosition;
}

ValueMetadata *type metadata accessor for VersionSeed()
{
  return &type metadata for VersionSeed;
}

uint64_t sub_228B0B0F4()
{
  if (*v0 == -1) {
    return 0x64696C61766E69;
  }
  if (*v0) {
    return sub_228BAD9C8();
  }
  return 0x7974706D65;
}

uint64_t Map.init<A, B>(mapRect:interactionModes:showsUserLocation:userTrackingMode:annotationItems:annotationContent:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, int a3@<W2>, long long *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v35 = a6;
  uint64_t v36 = a7;
  int v38 = a3;
  uint64_t v37 = a9;
  uint64_t v34 = a12;
  uint64_t v32 = a5;
  uint64_t v33 = a10;
  uint64_t v17 = *a1;
  uint64_t v16 = a1[1];
  long long v31 = *((_OWORD *)a1 + 1);
  uint64_t v18 = a1[4];
  uint64_t v19 = a1[5];
  uint64_t v20 = sub_228BAD718();
  MEMORY[0x270FA5388](v20 - 8);
  double v22 = (char *)&v31 - v21;
  uint64_t v23 = *a2;
  char v24 = *((unsigned char *)a4 + 16);
  v42[0] = v17;
  v42[1] = v16 | 0x4000000000000000;
  long long v43 = v31;
  uint64_t v44 = v18;
  uint64_t v45 = v19;
  uint64_t v46 = 0;
  uint64_t v41 = v23;
  long long v39 = *a4;
  char v40 = v24;
  uint64_t v25 = *(void *)(a8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v22, v32, a8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, a8);
  long long v26 = (void *)swift_allocObject();
  uint64_t v27 = v33;
  _OWORD v26[2] = a8;
  v26[3] = v27;
  uint64_t v28 = v34;
  v26[4] = a11;
  v26[5] = v28;
  uint64_t v29 = v35;
  v26[6] = a13;
  v26[7] = v29;
  v26[8] = v36;
  return sub_228B7DD30((uint64_t)v42, &v41, v38, (uint64_t)&v39, (uint64_t)v22, (uint64_t)sub_228B0B378, (uint64_t)v26, v37);
}

uint64_t sub_228B0B340()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t Map.init<A, B>(coordinateRegion:interactionModes:showsUserLocation:userTrackingMode:annotationItems:annotationContent:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, int a3@<W2>, long long *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v35 = a6;
  uint64_t v36 = a7;
  int v38 = a3;
  uint64_t v37 = a9;
  uint64_t v34 = a12;
  uint64_t v32 = a5;
  uint64_t v33 = a10;
  uint64_t v17 = *a1;
  uint64_t v16 = a1[1];
  long long v31 = *((_OWORD *)a1 + 1);
  uint64_t v18 = a1[4];
  uint64_t v19 = a1[5];
  uint64_t v20 = sub_228BAD718();
  MEMORY[0x270FA5388](v20 - 8);
  double v22 = (char *)&v31 - v21;
  uint64_t v23 = *a2;
  char v24 = *((unsigned char *)a4 + 16);
  v42[0] = v17;
  v42[1] = v16 | 0x8000000000000000;
  long long v43 = v31;
  uint64_t v44 = v18;
  uint64_t v45 = v19;
  uint64_t v46 = 0;
  uint64_t v41 = v23;
  long long v39 = *a4;
  char v40 = v24;
  uint64_t v25 = *(void *)(a8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v22, v32, a8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, a8);
  long long v26 = (void *)swift_allocObject();
  uint64_t v27 = v33;
  _OWORD v26[2] = a8;
  v26[3] = v27;
  uint64_t v28 = v34;
  v26[4] = a11;
  v26[5] = v28;
  uint64_t v29 = v35;
  v26[6] = a13;
  v26[7] = v29;
  v26[8] = v36;
  return sub_228B7DD30((uint64_t)v42, &v41, v38, (uint64_t)&v39, (uint64_t)v22, (uint64_t)sub_228B0B378, (uint64_t)v26, v37);
}

uint64_t sub_228B0B54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = *(void *)(a5 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](a1);
  id v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13(v10);
  (*(void (**)(uint64_t, uint64_t))(a7 + 8))(a5, a7);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, a5);
}

uint64_t sub_228B0B640(uint64_t a1)
{
  return sub_228B0B54C(a1, v1[7], v1[8], v1[2], v1[3], v1[4], v1[5]);
}

__n128 Map.init<>(mapRect:interactionModes:showsUserLocation:userTrackingMode:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char a3@<W2>, __n128 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5 = *a2;
  unsigned __int8 v6 = a4[1].n128_u8[0];
  uint64_t v7 = *(void *)(a1 + 8) | 0x4000000000000000;
  *(void *)a5 = *(void *)a1;
  *(void *)(a5 + 8) = v7;
  long long v8 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a5 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a5 + 32) = v8;
  *(void *)(a5 + 48) = 0;
  *(void *)(a5 + 56) = v5;
  *(unsigned char *)(a5 + 64) = a3;
  __n128 result = *a4;
  *(__n128 *)(a5 + 72) = *a4;
  *(unsigned char *)(a5 + 88) = v6;
  return result;
}

__n128 Map.init<>(coordinateRegion:interactionModes:showsUserLocation:userTrackingMode:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char a3@<W2>, __n128 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5 = *a2;
  unsigned __int8 v6 = a4[1].n128_u8[0];
  unint64_t v7 = *(void *)(a1 + 8) | 0x8000000000000000;
  *(void *)a5 = *(void *)a1;
  *(void *)(a5 + 8) = v7;
  long long v8 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a5 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a5 + 32) = v8;
  *(void *)(a5 + 48) = 0;
  *(void *)(a5 + 56) = v5;
  *(unsigned char *)(a5 + 64) = a3;
  __n128 result = *a4;
  *(__n128 *)(a5 + 72) = *a4;
  *(unsigned char *)(a5 + 88) = v6;
  return result;
}

uint64_t Map.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

double Map.init<>(bounds:interactionModes:scope:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _OWORD *a5@<X8>)
{
  uint64_t v9 = *a2;
  sub_228B0B858(a1, (uint64_t)v15);
  sub_228BAD178();
  long long v18 = 0uLL;
  *(void *)&long long v19 = 0;
  *((void *)&v19 + 1) = 1;
  long long v20 = 0u;
  long long v21 = 0u;
  LOBYTE(v22) = 0;
  sub_228B05A34(v16);
  swift_release();
  *(void *)&v24[16] = 0;
  *(void *)char v24 = 0;
  long long v23 = 0uLL;
  v24[8] = 0;
  v24[24] = 1;
  *(void *)&long long v17 = 0;
  long long v16 = 0xA000000000000000;
  BYTE8(v17) = 0;
  sub_228B0B8C0((uint64_t)v15, (uint64_t)&v18);
  *((void *)&v22 + 1) = v9;
  sub_228B0E2FC(v23, *((uint64_t *)&v23 + 1), *(uint64_t *)v24, v24[8], (void (*)(uint64_t, uint64_t))sub_228B0A3C0);
  long long v23 = 0uLL;
  v24[8] = 0;
  *(void *)char v24 = 0;
  *(void *)&v24[16] = a3;
  v24[24] = a4 & 1;
  sub_228B0B928(a1);
  long long v10 = v23;
  a5[6] = v22;
  a5[7] = v10;
  a5[8] = *(_OWORD *)v24;
  *(_OWORD *)((char *)a5 + 137) = *(_OWORD *)&v24[9];
  long long v11 = v19;
  a5[2] = v18;
  a5[3] = v11;
  long long v12 = v21;
  a5[4] = v20;
  a5[5] = v12;
  double result = *(double *)&v16;
  long long v14 = v17;
  *a5 = v16;
  a5[1] = v14;
  return result;
}

uint64_t sub_228B0B858(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_268292B80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_228B0B8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_268292B80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_228B0B928(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_268292B80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Map.init<A>(bounds:interactionModes:scope:content:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void (*a5)(uint64_t)@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v24 = a3;
  uint64_t v25 = a7;
  int v23 = a4 & 1;
  MEMORY[0x270FA5388](a1);
  long long v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v29[0] = MEMORY[0x263F8E628];
  v29[1] = v13;
  v29[2] = MEMORY[0x263F8E638];
  v29[3] = v14;
  uint64_t v15 = type metadata accessor for MapContentView();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  long long v18 = &v22[-v17];
  uint64_t v19 = *a2;
  uint64_t v30 = 0xA000000000000000;
  uint64_t v20 = sub_228B0B858(a1, (uint64_t)v29);
  uint64_t v28 = v19;
  memset(v26, 0, sizeof(v26));
  char v27 = 0;
  a5(v20);
  sub_228B1CE4C(&v30, (uint64_t)v29, &v28, (uint64_t)v26, v24, v23, (uint64_t)v12, (uint64_t)v18, a6);
  sub_228B0B928(a1);
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v16 + 32))(v25, v18, v15);
}

double Map.init<>(initialPosition:bounds:interactionModes:scope:)@<D0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, _OWORD *a6@<X8>)
{
  unint64_t v10 = *a1;
  uint64_t v11 = *a3;
  sub_228B0B858(a2, (uint64_t)v17);
  sub_228BAD178();
  long long v20 = 0uLL;
  *(void *)&long long v21 = 0;
  *((void *)&v21 + 1) = 1;
  long long v22 = 0u;
  long long v23 = 0u;
  LOBYTE(v24) = 0;
  sub_228B05A34(v18);
  swift_release();
  *(void *)&v26[16] = 0;
  *(void *)long long v26 = 0;
  long long v25 = 0uLL;
  v26[8] = 0;
  v26[24] = 1;
  *(void *)&long long v19 = 0;
  long long v18 = v10;
  BYTE8(v19) = 0;
  sub_228B0B8C0((uint64_t)v17, (uint64_t)&v20);
  *((void *)&v24 + 1) = v11;
  sub_228B0E2FC(v25, *((uint64_t *)&v25 + 1), *(uint64_t *)v26, v26[8], (void (*)(uint64_t, uint64_t))sub_228B0A3C0);
  long long v25 = 0uLL;
  v26[8] = 0;
  *(void *)long long v26 = 0;
  *(void *)&v26[16] = a4;
  v26[24] = a5 & 1;
  sub_228B0B928(a2);
  long long v12 = v25;
  a6[6] = v24;
  a6[7] = v12;
  a6[8] = *(_OWORD *)v26;
  *(_OWORD *)((char *)a6 + 137) = *(_OWORD *)&v26[9];
  long long v13 = v21;
  a6[2] = v20;
  a6[3] = v13;
  long long v14 = v23;
  a6[4] = v22;
  a6[5] = v14;
  double result = *(double *)&v18;
  long long v16 = v19;
  *a6 = v18;
  a6[1] = v16;
  return result;
}

uint64_t Map.init<A>(initialPosition:bounds:interactionModes:scope:content:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, void (*a6)(uint64_t)@<X5>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  long long v24 = a6;
  uint64_t v26 = a4;
  uint64_t v27 = a8;
  int v25 = a5 & 1;
  MEMORY[0x270FA5388](a1);
  long long v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[0] = MEMORY[0x263F8E628];
  v31[1] = v15;
  long long v31[2] = MEMORY[0x263F8E638];
  v31[3] = a9;
  uint64_t v16 = type metadata accessor for MapContentView();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  long long v19 = (char *)&v24 - v18;
  uint64_t v20 = *a1;
  uint64_t v21 = *a3;
  uint64_t v32 = v20;
  uint64_t v22 = sub_228B0B858(a2, (uint64_t)v31);
  uint64_t v30 = v21;
  memset(v28, 0, sizeof(v28));
  char v29 = 0;
  v24(v22);
  sub_228B1CE4C(&v32, (uint64_t)v31, &v30, (uint64_t)v28, v26, v25, (uint64_t)v14, (uint64_t)v19, a7);
  sub_228B0B928(a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(v27, v19, v16);
}

uint64_t Map.init<>(position:bounds:interactionModes:scope:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, _OWORD *a6@<X8>)
{
  long long v16 = *a1;
  uint64_t v10 = *((void *)a1 + 2);
  uint64_t v11 = *a3;
  sub_228B0B858(a2, (uint64_t)v26);
  sub_228BAD178();
  long long v19 = 0uLL;
  *(void *)&long long v20 = 0;
  *((void *)&v20 + 1) = 1;
  long long v21 = 0u;
  long long v22 = 0u;
  LOBYTE(v23) = 0;
  sub_228B05A34(v17);
  swift_release();
  *(void *)&v25[16] = 0;
  *(void *)int v25 = 0;
  long long v24 = 0uLL;
  v25[8] = 0;
  v25[24] = 1;
  *(void *)&long long v18 = v10;
  BYTE8(v18) = 1;
  sub_228B0B8C0((uint64_t)v26, (uint64_t)&v19);
  *((void *)&v23 + 1) = v11;
  sub_228B0E2FC(v24, *((uint64_t *)&v24 + 1), *(uint64_t *)v25, v25[8], (void (*)(uint64_t, uint64_t))sub_228B0A3C0);
  long long v24 = 0uLL;
  v25[8] = 0;
  *(void *)int v25 = 0;
  *(void *)&v25[16] = a4;
  v25[24] = a5 & 1;
  long long v12 = v20;
  a6[2] = v19;
  a6[3] = v12;
  long long v13 = v22;
  a6[4] = v21;
  a6[5] = v13;
  *a6 = v16;
  a6[1] = v18;
  long long v14 = v24;
  a6[6] = v23;
  a6[7] = v14;
  a6[8] = *(_OWORD *)v25;
  *(_OWORD *)((char *)a6 + 137) = *(_OWORD *)&v25[9];
  return sub_228B0B928(a2);
}

uint64_t Map.init<A>(position:bounds:interactionModes:scope:content:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, void (*a6)(uint64_t)@<X5>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  int v25 = a6;
  uint64_t v27 = a4;
  uint64_t v28 = a8;
  int v26 = a5 & 1;
  MEMORY[0x270FA5388](a1);
  long long v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32[0] = MEMORY[0x263F8E628];
  v32[1] = v15;
  v32[2] = MEMORY[0x263F8E638];
  v32[3] = a9;
  uint64_t v16 = type metadata accessor for MapContentView();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  long long v19 = (char *)&v25 - v18;
  long long v20 = *a1;
  uint64_t v21 = *((void *)a1 + 2);
  uint64_t v22 = *a3;
  long long v33 = v20;
  uint64_t v34 = v21;
  uint64_t v23 = sub_228B0B858(a2, (uint64_t)v32);
  uint64_t v31 = v22;
  memset(v29, 0, sizeof(v29));
  char v30 = 0;
  v25(v23);
  sub_228B1D064((uint64_t *)&v33, (uint64_t)v32, &v31, (uint64_t)v29, v27, v26, (uint64_t)v14, (uint64_t)v19, a7);
  sub_228B0B928(a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(v28, v19, v16);
}

uint64_t Map.init<A>(bounds:interactionModes:selection:scope:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v57 = a4;
  uint64_t v58 = a8;
  uint64_t v60 = a3;
  uint64_t v54 = a1;
  int v56 = a5 & 1;
  uint64_t v47 = a7;
  uint64_t v52 = type metadata accessor for MapSelectionManagerBox();
  uint64_t v12 = sub_228BAD218();
  uint64_t v49 = v12;
  uint64_t v13 = sub_228BAD718();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v51 = (char *)v42 - v14;
  v62[0] = a6;
  v62[1] = &type metadata for EmptyMapContent;
  uint64_t v59 = a6;
  v62[2] = a7;
  v62[3] = &protocol witness table for EmptyMapContent;
  uint64_t v55 = type metadata accessor for MapContentView();
  uint64_t v53 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v50 = (uint64_t)v42 - v15;
  sub_228BAD718();
  uint64_t v16 = sub_228BAD218();
  uint64_t v45 = *(void *)(v16 - 8);
  uint64_t v17 = v45;
  uint64_t v18 = *(void *)(v45 + 64);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)v42 - v20;
  uint64_t v48 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v44 = (char *)v42 - v22;
  uint64_t v46 = *a2;
  long long v43 = *(void (**)(char *, uint64_t))(v17 + 16);
  uint64_t v24 = v23;
  v43(v21, a3);
  sub_228BAD5A8();
  uint64_t v25 = sub_228BAD598();
  unint64_t v26 = (*(unsigned __int8 *)(v17 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v42[1] = v26 + v18;
  uint64_t v27 = (char *)swift_allocObject();
  uint64_t v28 = MEMORY[0x263F8F500];
  *((void *)v27 + 2) = v25;
  *((void *)v27 + 3) = v28;
  uint64_t v29 = v47;
  *((void *)v27 + 4) = v59;
  *((void *)v27 + 5) = v29;
  char v30 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v30(&v27[v26], v21, v24);
  ((void (*)(char *, uint64_t, uint64_t))v43)(v21, v60, v24);
  uint64_t v31 = sub_228BAD598();
  uint64_t v32 = (char *)swift_allocObject();
  *((void *)v32 + 2) = v31;
  uint64_t v33 = v59;
  *((void *)v32 + 3) = MEMORY[0x263F8F500];
  *((void *)v32 + 4) = v33;
  *((void *)v32 + 5) = v29;
  v30(&v32[v26], v21, v24);
  uint64_t v34 = v44;
  sub_228BAD208();
  uint64_t v63 = 0xA000000000000000;
  uint64_t v35 = v54;
  sub_228B0B858(v54, (uint64_t)v62);
  uint64_t v61 = v46;
  uint64_t v36 = v48;
  uint64_t v37 = (uint64_t)v51;
  uint64_t v38 = v49;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v34, v49);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v38);
  uint64_t v39 = v50;
  sub_228B1CE4C(&v63, (uint64_t)v62, &v61, v37, v57, v56, v40, v50, (uint64_t)&type metadata for EmptyMapContent);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v60, v24);
  sub_228B0B928(v35);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v38);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v58, v39, v55);
}

uint64_t sub_228B0C708@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_228BAD718();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - v3;
  uint64_t v5 = sub_228BAD218();
  MEMORY[0x22A6A6930](v5);
  return sub_228B8A4C4((uint64_t)v4, a1);
}

uint64_t sub_228B0C7CC@<X0>(uint64_t a1@<X8>)
{
  sub_228BAD718();
  sub_228BAD218();

  return sub_228B0C708(a1);
}

uint64_t sub_228B0C864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = sub_228BAD718();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v13 - v9;
  v13[0] = a5;
  v13[1] = MEMORY[0x263F8E628];
  v13[2] = a6;
  v13[3] = &protocol witness table for Never;
  uint64_t v11 = (void *)type metadata accessor for MapSelectionManagerBox();
  sub_228B8A570(v11, (uint64_t)v10);
  sub_228BAD218();
  return sub_228BAD1E8();
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_228BAD718();
  uint64_t v2 = (int *)(sub_228BAD218() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  unint64_t v4 = v0 + v3 + v2[10];
  uint64_t v5 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v4, 1, v1)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v4, v1);
  }

  return swift_deallocObject();
}

uint64_t sub_228B0CA8C(uint64_t a1)
{
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  sub_228BAD718();
  uint64_t v5 = *(void *)(sub_228BAD218() - 8);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_228B0C864(a1, v6, v7, v8, v3, v4);
}

uint64_t Map.init<A, B>(bounds:interactionModes:selection:scope:content:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, void (*a6)(uint64_t)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, _UNKNOWN **a11)
{
  uint64_t v74 = a7;
  long long v75 = a6;
  uint64_t v77 = a4;
  uint64_t v82 = a3;
  uint64_t v72 = a1;
  uint64_t v78 = a8;
  uint64_t v80 = a11;
  int v76 = a5 & 1;
  MEMORY[0x270FA5388](a1);
  long long v73 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = v14;
  uint64_t v85 = MEMORY[0x263F8E628];
  uint64_t v15 = v14;
  uint64_t v86 = v16;
  id v87 = &protocol witness table for Never;
  uint64_t v17 = v16;
  uint64_t v81 = v16;
  uint64_t v69 = type metadata accessor for MapSelectionManagerBox();
  uint64_t v18 = sub_228BAD218();
  uint64_t v66 = v18;
  uint64_t v19 = sub_228BAD718();
  MEMORY[0x270FA5388](v19 - 8);
  long long v67 = (char *)&v55 - v20;
  uint64_t v84 = v15;
  uint64_t v85 = a9;
  uint64_t v79 = a9;
  uint64_t v86 = v17;
  id v87 = a11;
  uint64_t v71 = type metadata accessor for MapContentView();
  uint64_t v70 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v68 = (uint64_t)&v55 - v21;
  uint64_t v22 = v15;
  sub_228BAD718();
  uint64_t v59 = sub_228BAD218();
  uint64_t v23 = *(void *)(v59 - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  uint64_t v25 = MEMORY[0x270FA5388](v59);
  uint64_t v27 = (char *)&v55 - v26;
  uint64_t v65 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v25);
  long long v62 = (char *)&v55 - v28;
  uint64_t v63 = *a2;
  uint64_t v60 = *(void (**)(char *, uint64_t))(v23 + 16);
  v60(v27, a3);
  sub_228BAD5A8();
  uint64_t v29 = sub_228BAD598();
  uint64_t v30 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v64 = v23;
  uint64_t v31 = (v30 + 64) & ~v30;
  uint64_t v58 = v31 + v24;
  uint64_t v57 = v30 | 7;
  uint64_t v32 = (char *)swift_allocObject();
  uint64_t v33 = MEMORY[0x263F8F500];
  *((void *)v32 + 2) = v29;
  *((void *)v32 + 3) = v33;
  *((void *)v32 + 4) = v22;
  *((void *)v32 + 5) = a9;
  uint64_t v61 = v22;
  uint64_t v34 = v80;
  uint64_t v35 = v81;
  *((void *)v32 + 6) = v81;
  *((void *)v32 + 7) = v34;
  int v56 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  uint64_t v36 = v59;
  v56(&v32[v31], v27, v59);
  ((void (*)(char *, uint64_t, uint64_t))v60)(v27, v82, v36);
  uint64_t v37 = sub_228BAD598();
  uint64_t v38 = (void *)swift_allocObject();
  void v38[2] = v37;
  void v38[3] = MEMORY[0x263F8F500];
  v38[4] = v22;
  void v38[5] = v79;
  uint64_t v39 = (char *)v38 + v31;
  uint64_t v40 = v80;
  v38[6] = v35;
  v38[7] = v40;
  v56(v39, v27, v36);
  uint64_t v41 = v62;
  sub_228BAD208();
  uint64_t v88 = 0xA000000000000000;
  uint64_t v42 = v72;
  sub_228B0B858(v72, (uint64_t)&v84);
  uint64_t v83 = v63;
  uint64_t v43 = v65;
  uint64_t v44 = (uint64_t)v67;
  uint64_t v45 = v41;
  uint64_t v46 = v41;
  uint64_t v47 = v66;
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v67, v45, v66);
  uint64_t v48 = v43;
  uint64_t v49 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v43 + 56);
  uint64_t v50 = v47;
  uint64_t v51 = v49(v44, 0, 1, v47);
  uint64_t v52 = (uint64_t)v73;
  v75(v51);
  uint64_t v53 = v68;
  sub_228B1CE4C(&v88, (uint64_t)&v84, &v83, v44, v77, v76, v52, v68, v79);
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v82, v36);
  sub_228B0B928(v42);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v46, v50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 32))(v78, v53, v71);
}

uint64_t sub_228B0D118()
{
  return sub_228B0D75C((uint64_t (*)(void, void, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_228B0DEF0);
}

uint64_t sub_228B0D134(uint64_t a1)
{
  return sub_228B0D810(a1, (uint64_t (*)(uint64_t, void, void, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_228B0DFB4);
}

uint64_t Map.init<A, B>(initialPosition:bounds:interactionModes:selection:scope:content:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, void (*a7)(uint64_t)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, _UNKNOWN **a13)
{
  uint64_t v74 = a8;
  long long v75 = a7;
  uint64_t v76 = a5;
  uint64_t v81 = a4;
  uint64_t v71 = a2;
  uint64_t v77 = a9;
  uint64_t v79 = a13;
  uint64_t v80 = a11;
  int v73 = a6 & 1;
  MEMORY[0x270FA5388](a1);
  uint64_t v72 = (char *)v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = v17;
  uint64_t v84 = MEMORY[0x263F8E628];
  uint64_t v18 = v17;
  uint64_t v85 = a12;
  uint64_t v86 = &protocol witness table for Never;
  uint64_t v68 = type metadata accessor for MapSelectionManagerBox();
  uint64_t v19 = sub_228BAD218();
  uint64_t v65 = v19;
  uint64_t v20 = sub_228BAD718();
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v66 = (char *)v56 - v21;
  uint64_t v83 = v18;
  uint64_t v84 = a11;
  uint64_t v85 = a12;
  uint64_t v86 = a13;
  uint64_t v70 = type metadata accessor for MapContentView();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v67 = (uint64_t)v56 - v22;
  uint64_t v23 = v18;
  uint64_t v78 = v18;
  sub_228BAD718();
  uint64_t v57 = sub_228BAD218();
  uint64_t v24 = *(void *)(v57 - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  uint64_t v26 = MEMORY[0x270FA5388](v57);
  uint64_t v28 = (char *)v56 - v27;
  uint64_t v64 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v60 = (char *)v56 - v29;
  uint64_t v61 = *a1;
  uint64_t v62 = *a3;
  uint64_t v58 = *(void (**)(char *, uint64_t))(v24 + 16);
  v58(v28, a4);
  sub_228BAD5A8();
  uint64_t v30 = sub_228BAD598();
  uint64_t v31 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v63 = v24;
  uint64_t v32 = (v31 + 64) & ~v31;
  v56[2] = v32 + v25;
  v56[1] = v31 | 7;
  uint64_t v33 = (void *)swift_allocObject();
  uint64_t v34 = MEMORY[0x263F8F500];
  v33[2] = v30;
  v33[3] = v34;
  v33[4] = v23;
  uint64_t v35 = v80;
  v33[5] = v80;
  v33[6] = a12;
  uint64_t v59 = a12;
  v33[7] = v79;
  v56[0] = *(void *)(v24 + 32);
  uint64_t v36 = v57;
  ((void (*)(char *, char *, uint64_t))v56[0])((char *)v33 + v32, v28, v57);
  ((void (*)(char *, uint64_t, uint64_t))v58)(v28, v81, v36);
  uint64_t v37 = sub_228BAD598();
  uint64_t v38 = (void *)swift_allocObject();
  void v38[2] = v37;
  uint64_t v39 = v78;
  void v38[3] = MEMORY[0x263F8F500];
  v38[4] = v39;
  void v38[5] = v35;
  uint64_t v40 = (char *)v38 + v32;
  uint64_t v41 = v79;
  v38[6] = a12;
  v38[7] = v41;
  ((void (*)(char *, char *, uint64_t))v56[0])(v40, v28, v36);
  uint64_t v42 = v60;
  sub_228BAD208();
  uint64_t v87 = v61;
  uint64_t v43 = v71;
  sub_228B0B858(v71, (uint64_t)&v83);
  uint64_t v82 = v62;
  uint64_t v44 = v64;
  uint64_t v45 = (uint64_t)v66;
  uint64_t v46 = v42;
  uint64_t v47 = v42;
  uint64_t v48 = v65;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v66, v46, v65);
  uint64_t v49 = v44;
  uint64_t v50 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56);
  uint64_t v51 = v48;
  uint64_t v52 = v50(v45, 0, 1, v48);
  uint64_t v53 = (uint64_t)v72;
  v75(v52);
  uint64_t v54 = v67;
  sub_228B1CE4C(&v87, (uint64_t)&v83, &v82, v45, v76, v73, v53, v67, v80);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v81, v36);
  sub_228B0B928(v43);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v47, v51);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 32))(v77, v54, v70);
}

uint64_t sub_228B0D75C(uint64_t (*a1)(void, void, char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *((void *)v1 + 4);
  uint64_t v4 = *((void *)v1 + 5);
  uint64_t v5 = *((void *)v1 + 6);
  uint64_t v6 = *((void *)v1 + 7);
  sub_228BAD718();
  uint64_t v7 = *(void *)(sub_228BAD218() - 8);
  return a1(*((void *)v1 + 2), *((void *)v1 + 3), &v1[(*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)], v3, v4, v5, v6);
}

uint64_t sub_228B0D810(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *((void *)v2 + 4);
  uint64_t v6 = *((void *)v2 + 5);
  uint64_t v7 = *((void *)v2 + 6);
  uint64_t v8 = *((void *)v2 + 7);
  sub_228BAD718();
  uint64_t v9 = *(void *)(sub_228BAD218() - 8);
  return a2(a1, *((void *)v2 + 2), *((void *)v2 + 3), &v2[(*(unsigned __int8 *)(v9 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)], v5, v6, v7, v8);
}

uint64_t Map.init<A, B>(position:bounds:interactionModes:selection:scope:content:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, void (*a7)(uint64_t)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, _UNKNOWN **a13)
{
  uint64_t v79 = a8;
  uint64_t v80 = a7;
  uint64_t v81 = a5;
  uint64_t v87 = a4;
  uint64_t v76 = a2;
  uint64_t v82 = a9;
  uint64_t v85 = a13;
  uint64_t v86 = a11;
  int v78 = a6 & 1;
  MEMORY[0x270FA5388](a1);
  uint64_t v77 = (char *)v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = v17;
  uint64_t v90 = MEMORY[0x263F8E628];
  uint64_t v18 = v17;
  uint64_t v91 = a12;
  unint64_t v92 = &protocol witness table for Never;
  uint64_t v73 = type metadata accessor for MapSelectionManagerBox();
  uint64_t v19 = sub_228BAD218();
  uint64_t v70 = v19;
  uint64_t v20 = sub_228BAD718();
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v71 = (char *)v60 - v21;
  uint64_t v89 = v18;
  uint64_t v90 = a11;
  uint64_t v91 = a12;
  unint64_t v92 = a13;
  uint64_t v75 = type metadata accessor for MapContentView();
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v72 = (uint64_t)v60 - v22;
  uint64_t v84 = v18;
  sub_228BAD718();
  uint64_t v61 = sub_228BAD218();
  uint64_t v23 = *(void *)(v61 - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  MEMORY[0x270FA5388](v61);
  uint64_t v83 = (char *)v60 - v25;
  uint64_t v69 = *(void *)(v19 - 8);
  uint64_t v26 = MEMORY[0x270FA5388]((char *)v60 - v25);
  uint64_t v64 = (char *)v60 - v27;
  long long v66 = *a1;
  uint64_t v65 = *((void *)a1 + 2);
  uint64_t v67 = *a3;
  uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v23 + 16);
  v62(v26, a4);
  sub_228BAD5A8();
  uint64_t v28 = sub_228BAD598();
  uint64_t v29 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v68 = v23;
  uint64_t v30 = (v29 + 64) & ~v29;
  v60[2] = v30 + v24;
  v60[1] = v29 | 7;
  uint64_t v31 = (char *)swift_allocObject();
  uint64_t v32 = MEMORY[0x263F8F500];
  *((void *)v31 + 2) = v28;
  *((void *)v31 + 3) = v32;
  uint64_t v33 = v86;
  *((void *)v31 + 4) = v18;
  *((void *)v31 + 5) = v33;
  uint64_t v63 = a12;
  uint64_t v34 = v85;
  *((void *)v31 + 6) = a12;
  *((void *)v31 + 7) = v34;
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  uint64_t v36 = v83;
  uint64_t v37 = v61;
  v35(&v31[v30], v83, v61);
  uint64_t v38 = v36;
  uint64_t v39 = v37;
  ((void (*)(char *, uint64_t, uint64_t))v62)(v38, v87, v37);
  uint64_t v40 = sub_228BAD598();
  uint64_t v41 = (void *)swift_allocObject();
  long long v41[2] = v40;
  uint64_t v42 = v83;
  uint64_t v43 = v84;
  v41[3] = MEMORY[0x263F8F500];
  v41[4] = v43;
  v41[5] = v33;
  uint64_t v44 = (char *)v41 + v30;
  uint64_t v45 = v85;
  v41[6] = a12;
  v41[7] = v45;
  v35(v44, v42, v39);
  uint64_t v46 = v64;
  sub_228BAD208();
  long long v93 = v66;
  uint64_t v94 = v65;
  uint64_t v47 = v76;
  sub_228B0B858(v76, (uint64_t)&v89);
  uint64_t v88 = v67;
  uint64_t v48 = v69;
  uint64_t v49 = (uint64_t)v71;
  uint64_t v50 = v46;
  uint64_t v51 = v46;
  uint64_t v52 = v70;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v71, v50, v70);
  uint64_t v53 = v48;
  uint64_t v54 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56);
  uint64_t v55 = v52;
  uint64_t v56 = v54(v49, 0, 1, v52);
  uint64_t v57 = (uint64_t)v77;
  v80(v56);
  uint64_t v58 = v72;
  sub_228B1D064((uint64_t *)&v93, (uint64_t)&v89, &v88, v49, v81, v78, v57, v72, v86);
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v87, v39);
  sub_228B0B928(v47);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v51, v55);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v74 + 32))(v82, v58, v75);
}

uint64_t sub_228B0DEF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_228BAD718();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - v3;
  uint64_t v5 = sub_228BAD218();
  MEMORY[0x22A6A6930](v5);
  return sub_228B8A4C4((uint64_t)v4, a1);
}

uint64_t sub_228B0DFB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = sub_228BAD718();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v14 - v10;
  v14[0] = a5;
  v14[1] = MEMORY[0x263F8E628];
  v14[2] = a7;
  v14[3] = &protocol witness table for Never;
  uint64_t v12 = (void *)type metadata accessor for MapSelectionManagerBox();
  sub_228B8A570(v12, (uint64_t)v11);
  sub_228BAD218();
  return sub_228BAD1E8();
}

double Map.init<>(bounds:interactionModes:selection:scope:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, _OWORD *a6@<X8>)
{
  uint64_t v8 = *a2;
  uint64_t v9 = *a3;
  uint64_t v10 = a3[1];
  uint64_t v11 = (void *)a3[2];
  sub_228BAD5A8();
  id v12 = v11;
  swift_retain();
  swift_retain();
  uint64_t v13 = sub_228BAD598();
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t v15 = MEMORY[0x263F8F500];
  v14[2] = v13;
  v14[3] = v15;
  void v14[4] = v9;
  v14[5] = v10;
  v14[6] = v11;
  uint64_t v16 = sub_228BAD598();
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v16;
  void v17[3] = v15;
  v17[4] = v9;
  v17[5] = v10;
  v17[6] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292830);
  sub_228BAD208();
  long long v24 = v28;
  uint64_t v18 = v29;
  LOBYTE(v13) = BYTE8(v29);
  sub_228B0B858(a1, (uint64_t)v27);
  sub_228BAD178();
  long long v30 = 0uLL;
  *(void *)&long long v31 = 0;
  *((void *)&v31 + 1) = 1;
  long long v32 = 0u;
  long long v33 = 0u;
  LOBYTE(v34) = 0;
  sub_228B05A34(v28);
  swift_release();
  *(void *)&v36[16] = 0;
  *(void *)uint64_t v36 = 0;
  long long v35 = 0uLL;
  char v36[8] = 0;
  v36[24] = 1;
  *(void *)&long long v29 = 0;
  long long v28 = 0xA000000000000000;
  BYTE8(v29) = 0;
  sub_228B0B8C0((uint64_t)v27, (uint64_t)&v30);
  *((void *)&v34 + 1) = v8;
  sub_228B0E2FC(v35, *((uint64_t *)&v35 + 1), *(uint64_t *)v36, v36[8], (void (*)(uint64_t, uint64_t))sub_228B0E370);
  long long v35 = v24;
  *(void *)uint64_t v36 = v18;
  char v36[8] = v13;
  *(void *)&v36[16] = a4;
  v36[24] = a5 & 1;
  sub_228B0B928(a1);
  long long v19 = v35;
  a6[6] = v34;
  a6[7] = v19;
  a6[8] = *(_OWORD *)v36;
  *(_OWORD *)((char *)a6 + 137) = *(_OWORD *)&v36[9];
  long long v20 = v31;
  a6[2] = v30;
  a6[3] = v20;
  long long v21 = v33;
  a6[4] = v32;
  a6[5] = v21;
  double result = *(double *)&v28;
  long long v23 = v29;
  *a6 = v28;
  a6[1] = v23;
  return result;
}

void sub_228B0E2FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  if (a2)
  {
    swift_release();
    swift_release();
    a5(a3, a4);
  }
}

void sub_228B0E370(id a1, unsigned __int8 a2)
{
  if (a2 <= 1u) {
}
  }

uint64_t Map.init<A>(bounds:interactionModes:selection:scope:content:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, void (*a6)(id)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v39 = a7;
  uint64_t v40 = a6;
  uint64_t v43 = a4;
  uint64_t v35 = a1;
  uint64_t v44 = a9;
  uint64_t v36 = a10;
  uint64_t v38 = a8;
  int v42 = a5 & 1;
  MEMORY[0x270FA5388](a1);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v37 = sub_228B0E6B8();
  uint64_t v48 = &type metadata for MapFeature;
  uint64_t v49 = a8;
  uint64_t v50 = (void *)v37;
  uint64_t v51 = a10;
  uint64_t v41 = type metadata accessor for MapContentView();
  uint64_t v15 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v17 = (char *)&v33 - v16;
  uint64_t v34 = *a2;
  uint64_t v18 = *a3;
  uint64_t v19 = a3[1];
  long long v20 = (void *)a3[2];
  sub_228BAD5A8();
  id v21 = v20;
  swift_retain();
  swift_retain();
  uint64_t v22 = sub_228BAD598();
  long long v23 = (void *)swift_allocObject();
  uint64_t v24 = MEMORY[0x263F8F500];
  v23[2] = v22;
  v23[3] = v24;
  v23[4] = v18;
  v23[5] = v19;
  v23[6] = v20;
  uint64_t v25 = sub_228BAD598();
  uint64_t v26 = (void *)swift_allocObject();
  _OWORD v26[2] = v25;
  void v26[3] = v24;
  v26[4] = v18;
  v26[5] = v19;
  v26[6] = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292830);
  sub_228BAD208();
  long long v28 = v48;
  uint64_t v27 = v49;
  long long v29 = v50;
  LOBYTE(v19) = v51;
  uint64_t v52 = 0xA000000000000000;
  uint64_t v30 = v35;
  sub_228B0B858(v35, (uint64_t)&v48);
  uint64_t v47 = v34;
  v45[0] = v28;
  v45[1] = v27;
  _OWORD v45[2] = v29;
  char v46 = v19;
  swift_retain();
  swift_retain();
  id v31 = sub_228B0E738(v29, v19);
  v40(v31);
  sub_228B1CE4C(&v52, (uint64_t)&v48, &v47, (uint64_t)v45, v43, v42, (uint64_t)v14, (uint64_t)v17, v38);
  swift_release();
  swift_release();
  sub_228B0E370(v29, v19);
  sub_228B0B928(v30);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(v44, v17, v41);
}

unint64_t sub_228B0E6B8()
{
  unint64_t result = qword_268292838[0];
  if (!qword_268292838[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268292838);
  }
  return result;
}

uint64_t sub_228B0E714(uint64_t a1)
{
  return sub_228B0F374(a1);
}

id sub_228B0E738(id result, unsigned __int8 a2)
{
  if (a2 <= 1u) {
    return result;
  }
  return result;
}

double Map.init<>(initialPosition:bounds:interactionModes:selection:scope:)@<D0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, _OWORD *a7@<X8>)
{
  unint64_t v9 = *a1;
  uint64_t v26 = *a3;
  uint64_t v10 = *a4;
  uint64_t v11 = a4[1];
  id v12 = (void *)a4[2];
  sub_228BAD5A8();
  id v13 = v12;
  swift_retain();
  swift_retain();
  uint64_t v14 = sub_228BAD598();
  uint64_t v15 = (void *)swift_allocObject();
  uint64_t v16 = MEMORY[0x263F8F500];
  void v15[2] = v14;
  v15[3] = v16;
  v15[4] = v10;
  v15[5] = v11;
  v15[6] = v12;
  uint64_t v17 = sub_228BAD598();
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = v17;
  void v18[3] = v16;
  v18[4] = v10;
  v18[5] = v11;
  v18[6] = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292830);
  sub_228BAD208();
  long long v25 = v30;
  uint64_t v19 = v31;
  LOBYTE(v14) = BYTE8(v31);
  sub_228B0B858(a2, (uint64_t)v29);
  sub_228BAD178();
  long long v32 = 0uLL;
  *(void *)&long long v33 = 0;
  *((void *)&v33 + 1) = 1;
  long long v34 = 0u;
  long long v35 = 0u;
  LOBYTE(v36) = 0;
  sub_228B05A34(v30);
  swift_release();
  *(void *)&v38[16] = 0;
  *(void *)uint64_t v38 = 0;
  long long v37 = 0uLL;
  v38[8] = 0;
  v38[24] = 1;
  *(void *)&long long v31 = 0;
  long long v30 = v9;
  BYTE8(v31) = 0;
  sub_228B0B8C0((uint64_t)v29, (uint64_t)&v32);
  *((void *)&v36 + 1) = v26;
  sub_228B0E2FC(v37, *((uint64_t *)&v37 + 1), *(uint64_t *)v38, v38[8], (void (*)(uint64_t, uint64_t))sub_228B0E370);
  long long v37 = v25;
  *(void *)uint64_t v38 = v19;
  v38[8] = v14;
  *(void *)&v38[16] = a5;
  v38[24] = a6 & 1;
  sub_228B0B928(a2);
  long long v20 = v37;
  a7[6] = v36;
  a7[7] = v20;
  a7[8] = *(_OWORD *)v38;
  *(_OWORD *)((char *)a7 + 137) = *(_OWORD *)&v38[9];
  long long v21 = v33;
  a7[2] = v32;
  a7[3] = v21;
  long long v22 = v35;
  a7[4] = v34;
  a7[5] = v22;
  double result = *(double *)&v30;
  long long v24 = v31;
  *a7 = v30;
  a7[1] = v24;
  return result;
}

uint64_t Map.init<A>(initialPosition:bounds:interactionModes:selection:scope:content:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, void (*a7)(id)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v40 = a8;
  uint64_t v41 = a7;
  uint64_t v44 = a5;
  uint64_t v36 = a2;
  uint64_t v45 = a9;
  uint64_t v37 = a11;
  uint64_t v39 = a10;
  int v43 = a6 & 1;
  MEMORY[0x270FA5388](a1);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v38 = sub_228B0E6B8();
  uint64_t v49 = &type metadata for MapFeature;
  uint64_t v50 = a10;
  uint64_t v51 = (void *)v38;
  uint64_t v52 = a11;
  uint64_t v42 = type metadata accessor for MapContentView();
  uint64_t v16 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t v34 = *a1;
  uint64_t v35 = *a3;
  uint64_t v19 = *a4;
  uint64_t v20 = a4[1];
  long long v21 = (void *)a4[2];
  sub_228BAD5A8();
  id v22 = v21;
  swift_retain();
  swift_retain();
  uint64_t v23 = sub_228BAD598();
  long long v24 = (void *)swift_allocObject();
  uint64_t v25 = MEMORY[0x263F8F500];
  v24[2] = v23;
  v24[3] = v25;
  v24[4] = v19;
  _OWORD v24[5] = v20;
  v24[6] = v21;
  uint64_t v26 = sub_228BAD598();
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = v26;
  v27[3] = v25;
  v27[4] = v19;
  v27[5] = v20;
  v27[6] = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292830);
  sub_228BAD208();
  long long v28 = v49;
  uint64_t v29 = v50;
  long long v30 = v51;
  LOBYTE(v2__isPlatformVersionAtLeast(2, 18, 1, 0) = v52;
  uint64_t v53 = v34;
  uint64_t v31 = v36;
  sub_228B0B858(v36, (uint64_t)&v49);
  uint64_t v48 = v35;
  v46[0] = v28;
  v46[1] = v29;
  v46[2] = v30;
  char v47 = v20;
  swift_retain();
  swift_retain();
  id v32 = sub_228B0E738(v30, v20);
  v41(v32);
  sub_228B1CE4C(&v53, (uint64_t)&v49, &v48, (uint64_t)v46, v44, v43, (uint64_t)v15, (uint64_t)v18, v39);
  swift_release();
  swift_release();
  sub_228B0E370(v30, v20);
  sub_228B0B928(v31);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(v45, v18, v42);
}

uint64_t Map.init<>(position:bounds:interactionModes:selection:scope:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, _OWORD *a7@<X8>)
{
  long long v24 = *a1;
  uint64_t v9 = *((void *)a1 + 2);
  uint64_t v25 = *a3;
  uint64_t v10 = *a4;
  uint64_t v11 = a4[1];
  id v12 = (void *)a4[2];
  sub_228BAD5A8();
  id v13 = v12;
  swift_retain();
  swift_retain();
  uint64_t v14 = sub_228BAD598();
  uint64_t v15 = (void *)swift_allocObject();
  uint64_t v16 = MEMORY[0x263F8F500];
  void v15[2] = v14;
  v15[3] = v16;
  v15[4] = v10;
  v15[5] = v11;
  v15[6] = v12;
  uint64_t v17 = sub_228BAD598();
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = v17;
  void v18[3] = v16;
  v18[4] = v10;
  v18[5] = v11;
  v18[6] = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292830);
  sub_228BAD208();
  uint64_t v19 = (void *)v29;
  LOBYTE(v1__isPlatformVersionAtLeast(2, 18, 1, 0) = BYTE8(v29);
  sub_228B0B858(a2, (uint64_t)v37);
  swift_retain();
  swift_retain();
  sub_228B0E738((id)v29, BYTE8(v29));
  sub_228BAD178();
  long long v30 = 0uLL;
  *(void *)&long long v31 = 0;
  *((void *)&v31 + 1) = 1;
  long long v32 = 0u;
  long long v33 = 0u;
  LOBYTE(v34) = 0;
  sub_228B05A34(v28);
  swift_release();
  *(void *)&v36[16] = 0;
  *(void *)uint64_t v36 = 0;
  long long v35 = 0uLL;
  char v36[8] = 0;
  v36[24] = 1;
  *(void *)&long long v29 = v9;
  BYTE8(v29) = 1;
  sub_228B0B8C0((uint64_t)v37, (uint64_t)&v30);
  *((void *)&v34 + 1) = v25;
  sub_228B0E2FC(v35, *((uint64_t *)&v35 + 1), *(uint64_t *)v36, v36[8], (void (*)(uint64_t, uint64_t))sub_228B0E370);
  long long v35 = v28;
  *(void *)uint64_t v36 = v19;
  char v36[8] = v10;
  *(void *)&v36[16] = a5;
  v36[24] = a6 & 1;
  long long v20 = v31;
  a7[2] = v30;
  a7[3] = v20;
  long long v21 = v33;
  a7[4] = v32;
  a7[5] = v21;
  *a7 = v24;
  a7[1] = v29;
  long long v22 = v35;
  a7[6] = v34;
  a7[7] = v22;
  a7[8] = *(_OWORD *)v36;
  *(_OWORD *)((char *)a7 + 137) = *(_OWORD *)&v36[9];
  swift_release();
  swift_release();
  sub_228B0E370(v19, v10);
  return sub_228B0B928(a2);
}

uint64_t Map.init<A>(position:bounds:interactionModes:selection:scope:content:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, void (*a7)(id)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v42 = a8;
  int v43 = a7;
  uint64_t v46 = a5;
  uint64_t v38 = a2;
  uint64_t v47 = a9;
  uint64_t v39 = a11;
  uint64_t v41 = a10;
  int v45 = a6 & 1;
  MEMORY[0x270FA5388](a1);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v40 = sub_228B0E6B8();
  uint64_t v51 = &type metadata for MapFeature;
  uint64_t v52 = a10;
  uint64_t v53 = (void *)v40;
  uint64_t v54 = a11;
  uint64_t v44 = type metadata accessor for MapContentView();
  uint64_t v16 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v18 = (char *)&v34 - v17;
  long long v36 = *a1;
  uint64_t v35 = *((void *)a1 + 2);
  uint64_t v37 = *a3;
  uint64_t v19 = *a4;
  uint64_t v20 = a4[1];
  long long v21 = (void *)a4[2];
  sub_228BAD5A8();
  id v22 = v21;
  swift_retain();
  swift_retain();
  uint64_t v23 = sub_228BAD598();
  long long v24 = (void *)swift_allocObject();
  uint64_t v25 = MEMORY[0x263F8F500];
  v24[2] = v23;
  v24[3] = v25;
  v24[4] = v19;
  _OWORD v24[5] = v20;
  v24[6] = v21;
  uint64_t v26 = sub_228BAD598();
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = v26;
  v27[3] = v25;
  v27[4] = v19;
  v27[5] = v20;
  v27[6] = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292830);
  sub_228BAD208();
  long long v28 = v51;
  uint64_t v29 = v52;
  long long v30 = v53;
  LOBYTE(v2__isPlatformVersionAtLeast(2, 18, 1, 0) = v54;
  long long v55 = v36;
  uint64_t v56 = v35;
  uint64_t v31 = v38;
  sub_228B0B858(v38, (uint64_t)&v51);
  uint64_t v50 = v37;
  v48[0] = v28;
  v48[1] = v29;
  v48[2] = v30;
  char v49 = v20;
  swift_retain();
  swift_retain();
  id v32 = sub_228B0E738(v30, v20);
  v43(v32);
  sub_228B1D064((uint64_t *)&v55, (uint64_t)&v51, &v50, (uint64_t)v48, v46, v45, (uint64_t)v15, (uint64_t)v18, v41);
  swift_release();
  swift_release();
  sub_228B0E370(v30, v20);
  sub_228B0B928(v31);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(v47, v18, v44);
}

void *sub_228B0F318@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682928C0);
  double result = MEMORY[0x22A6A6930](&v4, v2);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_228B0F374(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 8)) {
    id v1 = *(id *)a1;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682928C0);
  return sub_228BAD1E8();
}

uint64_t objectdestroy_29Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t Map.init<A, B>(bounds:interactionModes:selection:scope:content:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, void (*a6)(uint64_t)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v75 = a7;
  uint64_t v76 = a6;
  uint64_t v78 = a4;
  uint64_t v83 = a3;
  uint64_t v73 = a1;
  uint64_t v79 = a8;
  uint64_t v81 = a11;
  int v77 = a5 & 1;
  MEMORY[0x270FA5388](a1);
  uint64_t v74 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v14 + 8);
  uint64_t v85 = v16;
  uint64_t v86 = v16;
  uint64_t v17 = v16;
  uint64_t v87 = v15;
  uint64_t v88 = v14;
  uint64_t v18 = v14;
  uint64_t v82 = v14;
  uint64_t v70 = type metadata accessor for MapSelectionManagerBox();
  uint64_t v19 = sub_228BAD218();
  uint64_t v67 = v19;
  uint64_t v20 = sub_228BAD718();
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v68 = (char *)&v56 - v21;
  uint64_t v85 = v17;
  uint64_t v86 = a9;
  uint64_t v80 = a9;
  uint64_t v87 = v18;
  uint64_t v88 = a11;
  uint64_t v72 = type metadata accessor for MapSelectableContentView();
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v69 = (uint64_t)&v56 - v22;
  uint64_t v23 = v17;
  sub_228BAD718();
  uint64_t v60 = sub_228BAD218();
  uint64_t v24 = *(void *)(v60 - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  uint64_t v26 = MEMORY[0x270FA5388](v60);
  long long v28 = (char *)&v56 - v27;
  uint64_t v66 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v63 = (char *)&v56 - v29;
  uint64_t v64 = *a2;
  uint64_t v61 = *(void (**)(char *, uint64_t))(v24 + 16);
  v61(v28, a3);
  sub_228BAD5A8();
  uint64_t v30 = sub_228BAD598();
  uint64_t v31 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v65 = v24;
  uint64_t v32 = (v31 + 64) & ~v31;
  uint64_t v59 = v32 + v25;
  uint64_t v58 = v31 | 7;
  long long v33 = (char *)swift_allocObject();
  uint64_t v34 = MEMORY[0x263F8F500];
  *((void *)v33 + 2) = v30;
  *((void *)v33 + 3) = v34;
  *((void *)v33 + 4) = v23;
  *((void *)v33 + 5) = a9;
  uint64_t v62 = v23;
  uint64_t v35 = v81;
  uint64_t v36 = v82;
  *((void *)v33 + 6) = v82;
  *((void *)v33 + 7) = v35;
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  uint64_t v37 = v60;
  v57(&v33[v32], v28, v60);
  ((void (*)(char *, uint64_t, uint64_t))v61)(v28, v83, v37);
  uint64_t v38 = sub_228BAD598();
  uint64_t v39 = (void *)swift_allocObject();
  long long v39[2] = v38;
  v39[3] = MEMORY[0x263F8F500];
  v39[4] = v23;
  v39[5] = v80;
  unint64_t v40 = (char *)v39 + v32;
  uint64_t v41 = v81;
  v39[6] = v36;
  v39[7] = v41;
  v57(v40, v28, v37);
  uint64_t v42 = v63;
  sub_228BAD208();
  uint64_t v89 = 0xA000000000000000;
  uint64_t v43 = v73;
  sub_228B0B858(v73, (uint64_t)&v85);
  uint64_t v84 = v64;
  uint64_t v44 = v66;
  uint64_t v45 = (uint64_t)v68;
  uint64_t v46 = v42;
  uint64_t v47 = v42;
  uint64_t v48 = v67;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v68, v46, v67);
  uint64_t v49 = v44;
  uint64_t v50 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56);
  uint64_t v51 = v48;
  uint64_t v52 = v50(v45, 0, 1, v48);
  uint64_t v53 = (uint64_t)v74;
  v76(v52);
  uint64_t v54 = v69;
  sub_228B1D2A0(&v89, (uint64_t)&v85, &v84, v45, v78, v77, v53, v69, v80);
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v83, v37);
  sub_228B0B928(v43);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v47, v51);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 32))(v79, v54, v72);
}

uint64_t sub_228B0FA14()
{
  return sub_228B0D75C((uint64_t (*)(void, void, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_228B1066C);
}

uint64_t sub_228B0FA30(uint64_t a1)
{
  return sub_228B0D810(a1, (uint64_t (*)(uint64_t, void, void, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_228B10728);
}

uint64_t Map.init<A, B>(initialPosition:bounds:interactionModes:selection:scope:content:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, void (*a7)(uint64_t)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v77 = a8;
  uint64_t v78 = a7;
  uint64_t v79 = a5;
  uint64_t v84 = a4;
  uint64_t v74 = a2;
  uint64_t v80 = a9;
  uint64_t v82 = a13;
  int v76 = a6 & 1;
  MEMORY[0x270FA5388](a1);
  uint64_t v75 = (char *)v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(v17 + 8);
  uint64_t v86 = v19;
  uint64_t v87 = v19;
  uint64_t v20 = v19;
  uint64_t v88 = v18;
  uint64_t v89 = v17;
  uint64_t v21 = v17;
  uint64_t v83 = v17;
  uint64_t v71 = type metadata accessor for MapSelectionManagerBox();
  uint64_t v22 = sub_228BAD218();
  uint64_t v68 = v22;
  uint64_t v23 = sub_228BAD718();
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v69 = (char *)v59 - v24;
  uint64_t v86 = v20;
  uint64_t v87 = a11;
  uint64_t v81 = a11;
  uint64_t v88 = v21;
  uint64_t v89 = a13;
  uint64_t v73 = type metadata accessor for MapSelectableContentView();
  uint64_t v72 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v70 = (uint64_t)v59 - v25;
  uint64_t v26 = v20;
  sub_228BAD718();
  uint64_t v60 = sub_228BAD218();
  uint64_t v27 = *(void *)(v60 - 8);
  uint64_t v28 = *(void *)(v27 + 64);
  uint64_t v29 = MEMORY[0x270FA5388](v60);
  uint64_t v31 = (char *)v59 - v30;
  uint64_t v67 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v63 = (char *)v59 - v32;
  uint64_t v64 = *a1;
  uint64_t v65 = *a3;
  uint64_t v61 = *(void (**)(char *, uint64_t))(v27 + 16);
  v61(v31, a4);
  sub_228BAD5A8();
  uint64_t v33 = sub_228BAD598();
  uint64_t v34 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v66 = v27;
  uint64_t v35 = (v34 + 64) & ~v34;
  v59[2] = v35 + v28;
  v59[1] = v34 | 7;
  uint64_t v36 = (void *)swift_allocObject();
  uint64_t v37 = MEMORY[0x263F8F500];
  v36[2] = v33;
  void v36[3] = v37;
  v36[4] = v26;
  v36[5] = a11;
  uint64_t v62 = v26;
  uint64_t v38 = v82;
  uint64_t v39 = v83;
  v36[6] = v83;
  v36[7] = v38;
  v59[0] = *(void *)(v27 + 32);
  uint64_t v40 = v60;
  ((void (*)(char *, char *, uint64_t))v59[0])((char *)v36 + v35, v31, v60);
  ((void (*)(char *, uint64_t, uint64_t))v61)(v31, v84, v40);
  uint64_t v41 = sub_228BAD598();
  uint64_t v42 = (void *)swift_allocObject();
  void v42[2] = v41;
  v42[3] = MEMORY[0x263F8F500];
  v42[4] = v26;
  void v42[5] = v81;
  uint64_t v43 = (char *)v42 + v35;
  uint64_t v44 = v82;
  v42[6] = v39;
  v42[7] = v44;
  ((void (*)(char *, char *, uint64_t))v59[0])(v43, v31, v40);
  uint64_t v45 = v63;
  sub_228BAD208();
  uint64_t v90 = v64;
  uint64_t v46 = v74;
  sub_228B0B858(v74, (uint64_t)&v86);
  uint64_t v85 = v65;
  uint64_t v47 = v67;
  uint64_t v48 = (uint64_t)v69;
  uint64_t v49 = v45;
  uint64_t v50 = v45;
  uint64_t v51 = v68;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v69, v49, v68);
  uint64_t v52 = v47;
  uint64_t v53 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56);
  uint64_t v54 = v51;
  uint64_t v55 = v53(v48, 0, 1, v51);
  uint64_t v56 = (uint64_t)v75;
  v78(v55);
  uint64_t v57 = v70;
  sub_228B1D2A0(&v90, (uint64_t)&v86, &v85, v48, v79, v76, v56, v70, v81);
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v84, v40);
  sub_228B0B928(v46);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v50, v54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v80, v57, v73);
}

uint64_t Map.init<A, B>(position:bounds:interactionModes:selection:scope:content:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, void (*a7)(uint64_t)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v82 = a8;
  uint64_t v83 = a7;
  uint64_t v84 = a5;
  uint64_t v90 = a4;
  uint64_t v79 = a2;
  uint64_t v85 = a9;
  uint64_t v88 = a13;
  int v81 = a6 & 1;
  MEMORY[0x270FA5388](a1);
  uint64_t v80 = (char *)v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(v17 + 8);
  uint64_t v92 = v19;
  uint64_t v93 = v19;
  uint64_t v20 = v19;
  uint64_t v94 = v18;
  uint64_t v95 = v17;
  uint64_t v21 = v17;
  uint64_t v89 = v17;
  uint64_t v76 = type metadata accessor for MapSelectionManagerBox();
  uint64_t v22 = sub_228BAD218();
  uint64_t v73 = v22;
  uint64_t v23 = sub_228BAD718();
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v74 = (char *)v63 - v24;
  uint64_t v92 = v20;
  uint64_t v93 = a11;
  uint64_t v87 = a11;
  uint64_t v94 = v21;
  uint64_t v95 = a13;
  uint64_t v78 = type metadata accessor for MapSelectableContentView();
  uint64_t v77 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v75 = (uint64_t)v63 - v25;
  uint64_t v26 = v20;
  sub_228BAD718();
  uint64_t v64 = sub_228BAD218();
  uint64_t v27 = *(void *)(v64 - 8);
  uint64_t v28 = *(void *)(v27 + 64);
  MEMORY[0x270FA5388](v64);
  uint64_t v86 = (char *)v63 - v29;
  uint64_t v72 = *(void *)(v22 - 8);
  uint64_t v30 = MEMORY[0x270FA5388]((char *)v63 - v29);
  uint64_t v67 = (char *)v63 - v31;
  long long v69 = *a1;
  uint64_t v68 = *((void *)a1 + 2);
  uint64_t v70 = *a3;
  uint64_t v65 = *(void (**)(uint64_t, uint64_t))(v27 + 16);
  v65(v30, a4);
  sub_228BAD5A8();
  uint64_t v32 = sub_228BAD598();
  uint64_t v33 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v71 = v27;
  uint64_t v34 = (v33 + 64) & ~v33;
  v63[2] = v34 + v28;
  v63[1] = v33 | 7;
  uint64_t v35 = (char *)swift_allocObject();
  uint64_t v36 = MEMORY[0x263F8F500];
  *((void *)v35 + 2) = v32;
  *((void *)v35 + 3) = v36;
  *((void *)v35 + 4) = v20;
  *((void *)v35 + 5) = a11;
  uint64_t v66 = v20;
  uint64_t v37 = v88;
  uint64_t v38 = v89;
  *((void *)v35 + 6) = v89;
  *((void *)v35 + 7) = v37;
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  uint64_t v40 = v86;
  uint64_t v41 = v64;
  v39(&v35[v34], v86, v64);
  uint64_t v42 = v40;
  uint64_t v43 = v41;
  ((void (*)(char *, uint64_t, uint64_t))v65)(v42, v90, v41);
  uint64_t v44 = sub_228BAD598();
  uint64_t v45 = (void *)swift_allocObject();
  _OWORD v45[2] = v44;
  void v45[3] = MEMORY[0x263F8F500];
  v45[4] = v26;
  uint64_t v46 = v86;
  v45[5] = v87;
  uint64_t v47 = (char *)v45 + v34;
  uint64_t v48 = v88;
  v45[6] = v38;
  v45[7] = v48;
  v39(v47, v46, v43);
  uint64_t v49 = v67;
  sub_228BAD208();
  long long v96 = v69;
  uint64_t v97 = v68;
  uint64_t v50 = v79;
  sub_228B0B858(v79, (uint64_t)&v92);
  uint64_t v91 = v70;
  uint64_t v51 = v72;
  uint64_t v52 = (uint64_t)v74;
  uint64_t v53 = v49;
  uint64_t v54 = v49;
  uint64_t v55 = v73;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v74, v53, v73);
  uint64_t v56 = v51;
  uint64_t v57 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56);
  uint64_t v58 = v55;
  uint64_t v59 = v57(v52, 0, 1, v55);
  uint64_t v60 = (uint64_t)v80;
  v83(v59);
  uint64_t v61 = v75;
  sub_228B1D4AC((uint64_t *)&v96, (uint64_t)&v92, &v91, v52, v84, v81, v60, v75, v87);
  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v90, v43);
  sub_228B0B928(v50);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v54, v58);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v77 + 32))(v85, v61, v78);
}

uint64_t sub_228B1066C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_228BAD718();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - v3;
  uint64_t v5 = sub_228BAD218();
  MEMORY[0x22A6A6930](v5);
  return sub_228B8AE74((uint64_t)v4, a1);
}

uint64_t sub_228B10728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = sub_228BAD718();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v15 - v10;
  uint64_t v12 = *(void *)(a7 + 8);
  v15[0] = a5;
  v15[1] = a5;
  void v15[2] = v12;
  v15[3] = a7;
  uint64_t v13 = type metadata accessor for MapSelectionManagerBox();
  sub_228B8AF24(v13, (uint64_t)v11);
  sub_228BAD218();
  return sub_228BAD1E8();
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_228BAD718();
  uint64_t v2 = (int *)(sub_228BAD218() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  unint64_t v4 = v0 + v3 + v2[10];
  uint64_t v5 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v4, 1, v1)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v4, v1);
  }

  return swift_deallocObject();
}

uint64_t sub_228B10944()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_228B10988()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_228B10A18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    uint64_t *v3 = *a2;
    unint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_228B10AD0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_228B10AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_228B10B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_228B10B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_228B10BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_228B10C3C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_228B10D98(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x228B10FB0);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for Map()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_228B10FF0(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t Group<A>.init(content:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  unsigned int v5 = (void (*)(void))MEMORY[0x270FA5388](a1);
  unsigned int v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5();
  sub_228BAD128();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, a3);
}

uint64_t static Group<A>._makeMapContent(content:inputs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_228BAC5E8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unsigned int v10 = (char *)v12 - v9;
  v12[0] = a3;
  v12[1] = a4;
  swift_getKeyPath();
  sub_228BAD138();
  sub_228BAC5E8();
  sub_228BAC5F8();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(a4 + 32))(v10, a2, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_228B11234()
{
  return sub_228BAD118();
}

uint64_t sub_228B11270()
{
  return 16;
}

__n128 sub_228B1127C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t static Group<A>._mapContentCount(inputs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_228B112C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Group<A>._makeMapContent(content:inputs:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t sub_228B112CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static Group<A>._mapContentCount(inputs:)(a1, *(void *)(a2 + 16), *(void *)(a3 - 8));
}

uint64_t sub_228B112F0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_228B11340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7)
{
  v41[0] = a2;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292790);
  MEMORY[0x270FA5388](v12 - 8);
  unsigned int v14 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for CustomAnnotationViewModel(0);
  uint64_t v43 = *(void *)(v45 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v45);
  uint64_t v44 = (uint64_t)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v42 = (uint64_t)v41 - v17;
  uint64_t v46 = a4;
  uint64_t v47 = a5;
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  uint64_t v48 = a6;
  uint64_t v51 = a6;
  uint64_t v52 = a7;
  uint64_t v18 = type metadata accessor for MapSelectionManagerBox();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v41 - v20;
  uint64_t v22 = sub_228BAD218();
  uint64_t v23 = sub_228BAD718();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)v41 - v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))((char *)v41 - v25, a1, v23);
  uint64_t v27 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v26, 1, v22) == 1)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    char v28 = 0;
  }
  else
  {
    MEMORY[0x22A6A6930](v22);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v22);
    char v28 = sub_228B8B088(v18);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  uint64_t v29 = v41[0];
  uint64_t v30 = *(void *)(v41[0] + 16);
  if (!v30) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v31 = *(void *)(type metadata accessor for MapContentList.Item(0) - 8);
  uint64_t v32 = (uint64_t *)(v29 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80)));
  uint64_t v33 = (unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
  uint64_t v34 = *(void *)(v31 + 72);
  swift_bridgeObjectRetain();
  unint64_t v35 = MEMORY[0x263F8EE78];
  BOOL v36 = v28 & 1;
  v41[1] = a7;
  do
  {
    sub_228B17EFC(v32, v36, v46, v48, (uint64_t)v14);
    if ((*v33)(v14, 1, v45) == 1)
    {
      sub_228AC1A50((uint64_t)v14, &qword_268292790);
    }
    else
    {
      uint64_t v37 = v42;
      sub_228B1A88C((uint64_t)v14, v42, type metadata accessor for CustomAnnotationViewModel);
      sub_228B1A88C(v37, v44, type metadata accessor for CustomAnnotationViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v35 = sub_228B767B4(0, *(void *)(v35 + 16) + 1, 1, v35);
      }
      unint64_t v39 = *(void *)(v35 + 16);
      unint64_t v38 = *(void *)(v35 + 24);
      if (v39 >= v38 >> 1) {
        unint64_t v35 = sub_228B767B4(v38 > 1, v39 + 1, 1, v35);
      }
      *(void *)(v35 + 16) = v39 + 1;
      sub_228B1A88C(v44, v35+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v39, type metadata accessor for CustomAnnotationViewModel);
    }
    uint64_t v32 = (uint64_t *)((char *)v32 + v34);
    --v30;
  }
  while (v30);
  swift_bridgeObjectRelease();
  return v35;
}

unint64_t sub_228B11848(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v44 = a4;
  uint64_t v45 = a1;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292750);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for MarkerAnnotationViewModel(0);
  uint64_t v48 = *(void *)(v50 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v50);
  uint64_t v49 = (uint64_t)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v47 = (uint64_t)&v43 - v18;
  uint64_t v52 = a6;
  uint64_t v53 = a7;
  uint64_t v54 = a6;
  uint64_t v55 = a7;
  uint64_t v56 = a8;
  uint64_t v57 = a9;
  uint64_t v51 = a9;
  uint64_t v19 = type metadata accessor for MapSelectionManagerBox();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v43 - v21;
  uint64_t v23 = sub_228BAD218();
  uint64_t v24 = sub_228BAD718();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v43 - v26;
  int v46 = a3;
  if (a3)
  {
    char v28 = 1;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v27, v45, v24);
    uint64_t v29 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v23) == 1)
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
      char v28 = 0;
    }
    else
    {
      MEMORY[0x22A6A6930](v23);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v23);
      char v28 = sub_228B8B088(v19);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    }
  }
  uint64_t v30 = v44;
  uint64_t v31 = *(void *)(v44 + 16);
  if (!v31) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v32 = *(void *)(type metadata accessor for MapContentList.Item(0) - 8);
  uint64_t v33 = (uint64_t *)(v30 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80)));
  uint64_t v34 = (unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
  uint64_t v35 = *(void *)(v32 + 72);
  swift_bridgeObjectRetain();
  unint64_t v36 = MEMORY[0x263F8EE78];
  int v37 = v46 & 1;
  int v38 = v28 & 1;
  int v46 = v37;
  LODWORD(v45) = v38;
  do
  {
    sub_228B1840C(v33, v37, v38, v52, a8, (uint64_t)v15);
    if ((*v34)(v15, 1, v50) == 1)
    {
      sub_228AC1A50((uint64_t)v15, &qword_268292750);
    }
    else
    {
      uint64_t v39 = v47;
      sub_228B1A88C((uint64_t)v15, v47, type metadata accessor for MarkerAnnotationViewModel);
      sub_228B1A88C(v39, v49, type metadata accessor for MarkerAnnotationViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v36 = sub_228B76A08(0, *(void *)(v36 + 16) + 1, 1, v36);
      }
      unint64_t v41 = *(void *)(v36 + 16);
      unint64_t v40 = *(void *)(v36 + 24);
      if (v41 >= v40 >> 1) {
        unint64_t v36 = sub_228B76A08(v40 > 1, v41 + 1, 1, v36);
      }
      *(void *)(v36 + 16) = v41 + 1;
      sub_228B1A88C(v49, v36+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v41, type metadata accessor for MarkerAnnotationViewModel);
      int v37 = v46;
      int v38 = v45;
    }
    uint64_t v33 = (uint64_t *)((char *)v33 + v35);
    --v31;
  }
  while (v31);
  swift_bridgeObjectRelease();
  return v36;
}

unint64_t sub_228B11D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7)
{
  v41[0] = a2;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292700);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for UserAnnotationViewModel(0);
  uint64_t v43 = *(void *)(v45 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v45);
  uint64_t v44 = (uint64_t)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v42 = (uint64_t)v41 - v17;
  uint64_t v46 = a4;
  uint64_t v47 = a5;
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  uint64_t v48 = a6;
  uint64_t v51 = a6;
  uint64_t v52 = a7;
  uint64_t v18 = type metadata accessor for MapSelectionManagerBox();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v41 - v20;
  uint64_t v22 = sub_228BAD218();
  uint64_t v23 = sub_228BAD718();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)v41 - v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))((char *)v41 - v25, a1, v23);
  uint64_t v27 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v26, 1, v22) == 1)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    char v28 = 0;
  }
  else
  {
    MEMORY[0x22A6A6930](v22);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v22);
    char v28 = sub_228B8B088(v18);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  uint64_t v29 = v41[0];
  uint64_t v30 = *(void *)(v41[0] + 16);
  if (!v30) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v31 = *(void *)(type metadata accessor for MapContentList.Item(0) - 8);
  uint64_t v32 = (uint64_t *)(v29 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80)));
  uint64_t v33 = (unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
  uint64_t v34 = *(void *)(v31 + 72);
  swift_bridgeObjectRetain();
  unint64_t v35 = MEMORY[0x263F8EE78];
  int v36 = v28 & 1;
  v41[1] = a7;
  do
  {
    sub_228B18A6C(v32, v36, v46, v48, (uint64_t)v14);
    if ((*v33)(v14, 1, v45) == 1)
    {
      sub_228AC1A50((uint64_t)v14, &qword_268292700);
    }
    else
    {
      uint64_t v37 = v42;
      sub_228B1A88C((uint64_t)v14, v42, type metadata accessor for UserAnnotationViewModel);
      sub_228B1A88C(v37, v44, type metadata accessor for UserAnnotationViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v35 = sub_228B76A3C(0, *(void *)(v35 + 16) + 1, 1, v35);
      }
      unint64_t v39 = *(void *)(v35 + 16);
      unint64_t v38 = *(void *)(v35 + 24);
      if (v39 >= v38 >> 1) {
        unint64_t v35 = sub_228B76A3C(v38 > 1, v39 + 1, 1, v35);
      }
      *(void *)(v35 + 16) = v39 + 1;
      sub_228B1A88C(v44, v35+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v39, type metadata accessor for UserAnnotationViewModel);
    }
    uint64_t v32 = (uint64_t *)((char *)v32 + v34);
    --v30;
  }
  while (v30);
  swift_bridgeObjectRelease();
  return v35;
}

void *sub_228B12288(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MapContentList.Item(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (void *)((char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v10 = a1;
  uint64_t v11 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v12 = *(void *)(v6 + 72);
  v38[1] = v10;
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  uint64_t v43 = v8;
  uint64_t v40 = v5;
  uint64_t v41 = v2;
  uint64_t v39 = v12;
  do
  {
    sub_228B19B10(v11, (uint64_t)v8, type metadata accessor for MapContentList.Item);
    sub_228B19B10((uint64_t)v8 + *(int *)(v5 + 24), (uint64_t)v4, type metadata accessor for MapContentList.Item.Content);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v47 = v13;
      uint64_t v14 = *(void **)v4;
      __int16 v15 = *((_WORD *)v4 + 4);
      uint64_t v16 = *((void *)v4 + 2);
      uint64_t v17 = *((void *)v4 + 3);
      uint64_t v18 = *((void *)v4 + 4);
      uint64_t v19 = *((void *)v4 + 5);
      uint64_t v20 = *((void *)v4 + 6);
      uint64_t v21 = *((void *)v4 + 7);
      uint64_t v22 = *((void *)v4 + 8);
      int v23 = v4[72];
      uint64_t v24 = *((void *)v4 + 10);
      uint64_t v25 = *v8;
      char v48 = v4[72];
      uint64_t v45 = v25;
      uint64_t v46 = v24;
      if (v16)
      {
        int v42 = v23;
        sub_228AD25BC(0, (unint64_t *)&qword_268292340);
        swift_bridgeObjectRetain();
        sub_228B0A008(v14, v15);
        swift_bridgeObjectRetain();
        char v26 = v42;
        sub_228ACF3A4(v22, v42);
        swift_retain();
        uint64_t v27 = sub_228BAD6D8();
        uint64_t v8 = v43;
        uint64_t v44 = v27;
        sub_228B0A024(v14, v15);
        swift_bridgeObjectRelease();
        swift_release();
        sub_228AD26A8(v22, v26);
        LOBYTE(v23) = v48;
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_228B0A008(v14, v15);
        swift_bridgeObjectRetain();
        sub_228ACF3A4(v22, v23);
        sub_228B0A024(v14, v15);
        swift_bridgeObjectRelease();
        sub_228AD26A8(v22, v23);
        uint64_t v44 = 0;
      }
      sub_228B19B78((uint64_t)v8, type metadata accessor for MapContentList.Item);
      char v28 = v47;
      uint64_t v29 = v20;
      __int16 v30 = v15;
      uint64_t v31 = v22;
      uint64_t v32 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v28 = sub_228B76CF0(0, v28[2] + 1, 1, v28);
      }
      unint64_t v34 = v28[2];
      unint64_t v33 = v28[3];
      unint64_t v35 = v28;
      if (v34 >= v33 >> 1) {
        unint64_t v35 = sub_228B76CF0((void *)(v33 > 1), v34 + 1, 1, v28);
      }
      v35[2] = v34 + 1;
      uint64_t v13 = v35;
      int v36 = &v35[12 * v34];
      v36[4] = v45;
      v36[5] = v32;
      *((_WORD *)v36 + 24) = v30;
      v36[7] = v44;
      char v36[8] = v17;
      v36[9] = v18;
      v36[10] = v19;
      v36[11] = v29;
      v36[12] = v21;
      v36[13] = v31;
      *((unsigned char *)v36 + 112) = v23;
      v36[15] = v46;
      uint64_t v5 = v40;
      uint64_t v12 = v39;
      uint64_t v8 = v43;
    }
    else
    {
      sub_228B19B78((uint64_t)v4, type metadata accessor for MapContentList.Item.Content);
      sub_228B19B78((uint64_t)v8, type metadata accessor for MapContentList.Item);
    }
    v11 += v12;
    --v9;
  }
  while (v9);
  swift_bridgeObjectRelease();
  return v13;
}

void *sub_228B126B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MapContentList.Item(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v10 = a1;
  uint64_t v11 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v12 = *(void *)(v6 + 72);
  uint64_t v51 = v10;
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  uint64_t v57 = v8;
  uint64_t v53 = v5;
  uint64_t v54 = v2;
  uint64_t v52 = v12;
  do
  {
    sub_228B19B10(v11, (uint64_t)v8, type metadata accessor for MapContentList.Item);
    sub_228B19B10((uint64_t)v8 + *(int *)(v5 + 24), (uint64_t)v4, type metadata accessor for MapContentList.Item.Content);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v62 = v13;
      uint64_t v14 = *(void **)v4;
      uint64_t v15 = *((void *)v4 + 1);
      uint64_t v16 = *((void *)v4 + 3);
      uint64_t v17 = *((void *)v4 + 4);
      uint64_t v18 = *((void *)v4 + 5);
      uint64_t v19 = *((void *)v4 + 6);
      uint64_t v20 = *((void *)v4 + 7);
      uint64_t v64 = *((void *)v4 + 2);
      uint64_t v65 = v20;
      uint64_t v21 = *((void *)v4 + 8);
      uint64_t v22 = *((void *)v4 + 9);
      int v23 = v4[80];
      uint64_t v24 = *((void *)v4 + 11);
      int v25 = v4[96];
      uint64_t v61 = *((void *)v4 + 13);
      uint64_t v26 = *v8;
      unsigned __int8 v69 = v23;
      int v67 = v25;
      unsigned __int8 v68 = v25;
      uint64_t v59 = v24;
      uint64_t v60 = v26;
      uint64_t v66 = v15;
      if (v16)
      {
        uint64_t v56 = v22;
        uint64_t v63 = sub_228AD25BC(0, (unint64_t *)&qword_268292340);
        swift_bridgeObjectRetain();
        sub_228B09CA8(v14, v66);
        swift_bridgeObjectRetain();
        sub_228ACF3A4(v22, v23);
        uint64_t v27 = v59;
        sub_228ACF3A4(v59, v67);
        swift_retain();
        uint64_t v28 = sub_228BAD6D8();
        uint64_t v29 = v14;
        uint64_t v30 = v64;
        uint64_t v8 = v57;
        uint64_t v58 = v28;
        sub_228B09D08(v14, v66);
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v31 = v56;
        sub_228AD26A8(v56, v23);
        uint64_t v32 = v27;
        sub_228AD26A8(v27, v67);
        LODWORD(v63) = v69;
        int v67 = v68;
        uint64_t v33 = v31;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v55 = v14;
        sub_228B09CA8(v14, v15);
        swift_bridgeObjectRetain();
        sub_228ACF3A4(v22, v23);
        uint64_t v34 = v59;
        char v35 = v67;
        sub_228ACF3A4(v59, v67);
        uint64_t v36 = v15;
        uint64_t v30 = v64;
        sub_228B09D08(v55, v36);
        swift_bridgeObjectRelease();
        LODWORD(v63) = v23;
        sub_228AD26A8(v22, v23);
        uint64_t v32 = v34;
        sub_228AD26A8(v34, v35);
        uint64_t v58 = 0;
        uint64_t v33 = v22;
        uint64_t v29 = v55;
      }
      sub_228B19B78((uint64_t)v8, type metadata accessor for MapContentList.Item);
      uint64_t v37 = v62;
      uint64_t v38 = v30;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v39 = v66;
        uint64_t v40 = v29;
      }
      else
      {
        uint64_t v39 = v66;
        uint64_t v40 = v29;
        uint64_t v37 = sub_228B76E18(0, v37[2] + 1, 1, v37);
      }
      uint64_t v41 = v65;
      char v42 = v67;
      char v43 = v63;
      unint64_t v45 = v37[2];
      unint64_t v44 = v37[3];
      uint64_t v46 = v37;
      if (v45 >= v44 >> 1)
      {
        uint64_t v56 = v33;
        uint64_t v48 = v65;
        uint64_t v49 = sub_228B76E18((void *)(v44 > 1), v45 + 1, 1, v37);
        char v43 = v63;
        char v42 = v67;
        uint64_t v46 = v49;
        uint64_t v41 = v48;
        uint64_t v33 = v56;
      }
      v46[2] = v45 + 1;
      uint64_t v13 = v46;
      uint64_t v47 = &v46[15 * v45];
      v47[4] = v60;
      v47[5] = v40;
      v47[6] = v39;
      v47[7] = v38;
      uint64_t v8 = v57;
      v47[8] = v58;
      v47[9] = v17;
      v47[10] = v18;
      v47[11] = v19;
      v47[12] = v41;
      v47[13] = v21;
      v47[14] = v33;
      *((unsigned char *)v47 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = v43;
      v47[16] = v32;
      *((unsigned char *)v47 + 136) = v42;
      v47[18] = v61;
      uint64_t v5 = v53;
      uint64_t v12 = v52;
    }
    else
    {
      sub_228B19B78((uint64_t)v4, type metadata accessor for MapContentList.Item.Content);
      sub_228B19B78((uint64_t)v8, type metadata accessor for MapContentList.Item);
    }
    v11 += v12;
    --v9;
  }
  while (v9);
  swift_bridgeObjectRelease();
  return v13;
}

void *sub_228B12BA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (long long *)((char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for MapContentList.Item(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v10 = a1;
  uint64_t v11 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v12 = *(void *)(v6 + 72);
  uint64_t v48 = v10;
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  uint64_t v49 = v5;
  uint64_t v50 = v2;
  uint64_t v51 = v12;
  uint64_t v52 = v8;
  do
  {
    sub_228B19B10(v11, (uint64_t)v8, type metadata accessor for MapContentList.Item);
    sub_228B19B10((uint64_t)v8 + *(int *)(v5 + 24), (uint64_t)v4, type metadata accessor for MapContentList.Item.Content);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      uint64_t v55 = v9;
      uint64_t v59 = v13;
      long long v14 = v4[1];
      long long v70 = *v4;
      long long v71 = v14;
      long long v15 = v4[3];
      long long v72 = v4[2];
      long long v73 = v15;
      long long v16 = v4[5];
      long long v74 = v4[4];
      long long v75 = v16;
      long long v17 = v4[7];
      long long v76 = v4[6];
      long long v77 = v17;
      uint64_t v18 = *v8;
      long long v56 = v71;
      long long v57 = v70;
      LODWORD(v9) = v72;
      long long v19 = v73;
      uint64_t v20 = v74;
      uint64_t v62 = *((void *)&v75 + 1);
      uint64_t v21 = v75;
      uint64_t v63 = *((void *)&v74 + 1);
      uint64_t v22 = *((void *)&v76 + 1);
      int v60 = v17;
      int v61 = v76;
      uint64_t v58 = *((void *)&v17 + 1);
      if (*((void *)&v72 + 1))
      {
        uint64_t v53 = sub_228AD25BC(0, (unint64_t *)&qword_268292340);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v23 = v62;
        char v24 = v61;
        sub_228ACF3A4(v62, v61);
        uint64_t v25 = v22;
        int v54 = v9;
        uint64_t v9 = v22;
        char v26 = v60;
        sub_228ACF3A4(v25, v60);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_228ACF3A4(v23, v24);
        uint64_t v27 = v9;
        char v28 = v26;
        uint64_t v22 = v9;
        LOBYTE(v9) = v54;
        sub_228ACF3A4(v27, v28);
        swift_retain();
        uint64_t v29 = (void *)sub_228BAD6D8();
        sub_228B19BD8((uint64_t)&v70);
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v30 = v62;
        char v31 = v61;
        sub_228ACF3A4(v62, v61);
        char v32 = v60;
        sub_228ACF3A4(v22, v60);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_228ACF3A4(v30, v31);
        sub_228ACF3A4(v22, v32);
        sub_228B19BD8((uint64_t)&v70);
        uint64_t v29 = 0;
      }
      *(void *)&v64[0] = v18;
      *(_OWORD *)((char *)v64 + 8) = v57;
      *(_OWORD *)((char *)&v64[1] + 8) = v56;
      BYTE8(v64[2]) = v9;
      *(void *)uint64_t v65 = v29;
      *(_OWORD *)&v65[8] = v19;
      *(void *)&v65[24] = v20;
      uint64_t v33 = v62;
      *(void *)&long long v66 = v63;
      *((void *)&v66 + 1) = v21;
      *(void *)&long long v67 = v62;
      char v34 = v61;
      BYTE8(v67) = v61;
      *(void *)&long long v68 = v22;
      uint64_t v35 = v22;
      char v36 = v60;
      BYTE8(v68) = v60;
      uint64_t v69 = v58;
      id v37 = v29;
      sub_228B0991C((uint64_t)v64);
      sub_228AD26A8(v35, v36);
      sub_228AD26A8(v33, v34);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      sub_228B09840((uint64_t)v64);
      uint64_t v8 = v52;
      sub_228B19B78((uint64_t)v52, type metadata accessor for MapContentList.Item);
      uint64_t v13 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_228B76F40(0, v13[2] + 1, 1, v13);
      }
      uint64_t v5 = v49;
      uint64_t v9 = v55;
      unint64_t v39 = v13[2];
      unint64_t v38 = v13[3];
      if (v39 >= v38 >> 1) {
        uint64_t v13 = sub_228B76F40((void *)(v38 > 1), v39 + 1, 1, v13);
      }
      v13[2] = v39 + 1;
      uint64_t v40 = &v13[17 * v39];
      *((_OWORD *)v40 + 2) = v64[0];
      long long v41 = v64[1];
      long long v42 = v64[2];
      long long v43 = *(_OWORD *)&v65[16];
      *((_OWORD *)v40 + 5) = *(_OWORD *)v65;
      *((_OWORD *)v40 + 6) = v43;
      *((_OWORD *)v40 + 3) = v41;
      *((_OWORD *)v40 + 4) = v42;
      long long v44 = v66;
      long long v45 = v67;
      long long v46 = v68;
      v40[20] = v69;
      *((_OWORD *)v40 + 8) = v45;
      *((_OWORD *)v40 + 9) = v46;
      *((_OWORD *)v40 + 7) = v44;
      uint64_t v12 = v51;
    }
    else
    {
      sub_228B19B78((uint64_t)v4, type metadata accessor for MapContentList.Item.Content);
      sub_228B19B78((uint64_t)v8, type metadata accessor for MapContentList.Item);
    }
    v11 += v12;
    --v9;
  }
  while (v9);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_228B130C0()
{
  return sub_228B13120(&qword_2682928D0);
}

uint64_t sub_228B130CC()
{
  return sub_228B13120(&qword_2682928D8);
}

uint64_t sub_228B130D8()
{
  return sub_228B13120(&qword_2682928E0);
}

uint64_t sub_228B130E4()
{
  return sub_228B13120(&qword_2682928E8);
}

uint64_t sub_228B130F0()
{
  return sub_228B13120(&qword_2682928F0);
}

uint64_t sub_228B130FC()
{
  return sub_228B13120(&qword_268292900);
}

uint64_t sub_228B13108()
{
  return sub_228B13120(&qword_268292908);
}

uint64_t sub_228B13114()
{
  return sub_228B13120(&qword_268292910);
}

uint64_t sub_228B13120(void *a1)
{
  uint64_t v2 = *(unsigned int *)(v1 + *a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_228B13178()
{
  uint64_t v0 = sub_228BAC508();
  __swift_allocate_value_buffer(v0, qword_26829D4F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26829D4F8);
  return sub_228BAC4F8();
}

void sub_228B131F4(uint64_t a1, id a2, uint64_t a3, void *a4)
{
  objc_msgSend(a2, sel_setCoordinate_, *(double *)(a3 + 56), *(double *)(a3 + 64));
  if (*(void *)(a3 + 16)) {
    uint64_t v8 = (void *)sub_228BAD3D8();
  }
  else {
    uint64_t v8 = 0;
  }
  objc_msgSend(a2, sel_setTitle_, v8);

  if (*(void *)(a3 + 32)) {
    uint64_t v9 = (void *)sub_228BAD3D8();
  }
  else {
    uint64_t v9 = 0;
  }
  objc_msgSend(a2, sel_setSubtitle_, v9);

  uint64_t v10 = a4[3];
  uint64_t v11 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v10);
  uint64_t v12 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v11 + 24))(a2, v10, v11);
  if (v12)
  {
    id v14 = (id)v12;
    type metadata accessor for SwiftUIAnnotationView();
    uint64_t v13 = (char *)swift_dynamicCastClass();
    if (v13) {
      sub_228B13344(v13, a1);
    }
  }
}

id sub_228B13344(char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = swift_retain();
  sub_228BA813C(v6);
  swift_release();
  double v7 = *(double *)(v3 + 80);
  double v8 = *(double *)(v3 + 88);
  uint64_t v9 = (double *)&a1[OBJC_IVAR____TtC15_MapKit_SwiftUI21SwiftUIAnnotationView_contentAnchorPoint];
  *uint64_t v9 = v7;
  v9[1] = v8;
  objc_msgSend(a1, sel_frame);
  objc_msgSend(a1, sel_setCenterOffset_, v10 * 0.5 - v7 * v10, v11 * 0.5 - v8 * v11);
  if ((*(unsigned char *)(v3 + 120) & 1) == 0)
  {
    double v13 = *(double *)(v3 + 104);
    double v12 = *(double *)(v3 + 112);
    id v14 = (double *)&a1[OBJC_IVAR____TtC15_MapKit_SwiftUI21SwiftUIAnnotationView_accessoryAnchorPoint];
    double *v14 = v13;
    v14[1] = v12;
    objc_msgSend(a1, sel_frame);
    objc_msgSend(a1, sel_setAccessoryOffset_, -(v15 * 0.5 - v13 * v15), -(v16 * 0.5 - v12 * v16));
  }
  if (a2)
  {
    uint64_t v17 = 1;
    objc_msgSend(a1, sel_setTitleVisibility_, 1);
  }
  else
  {
    objc_msgSend(a1, sel_setTitleVisibility_, qword_228BB1A70[*(char *)(v3 + 48)]);
    uint64_t v17 = qword_228BB1A70[*(char *)(v3 + 49)];
  }

  return objc_msgSend(a1, sel_setSubtitleVisibility_, v17);
}

void sub_228B134B4(uint64_t a1, id a2, uint64_t a3, void *a4)
{
  objc_msgSend(a2, sel_setCoordinate_, *(double *)(a3 + 88), *(double *)(a3 + 96));
  if (*(void *)(a3 + 16)) {
    double v8 = (void *)sub_228BAD3D8();
  }
  else {
    double v8 = 0;
  }
  objc_msgSend(a2, sel_setTitle_, v8);

  if (*(void *)(a3 + 32)) {
    uint64_t v9 = (void *)sub_228BAD3D8();
  }
  else {
    uint64_t v9 = 0;
  }
  objc_msgSend(a2, sel_setSubtitle_, v9);

  uint64_t v10 = a4[3];
  uint64_t v11 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v10);
  uint64_t v12 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v11 + 24))(a2, v10, v11);
  if (v12)
  {
    id v14 = (id)v12;
    self;
    double v13 = (void *)swift_dynamicCastObjCClass();
    if (v13) {
      sub_228B13608(v13, a1);
    }
  }
}

id sub_228B13608(void *a1, uint64_t a2)
{
  objc_msgSend(a1, sel_setMarkerTintColor_, *(void *)(v2 + 112));
  uint64_t v5 = *(void **)(v2 + 40);
  if (v5) {
    id v6 = objc_msgSend(*(id *)(v2 + 40), sel__muid);
  }
  else {
    id v6 = 0;
  }
  objc_msgSend(a1, sel__setFeatureId_, v6);
  if (*(void *)(v2 + 64)) {
    double v7 = (void *)sub_228BAD3D8();
  }
  else {
    double v7 = 0;
  }
  objc_msgSend(a1, sel_setGlyphText_, v7);

  objc_msgSend(a1, sel_setGlyphImage_, *(void *)(v2 + 72));
  id v8 = objc_msgSend(v5, sel__styleAttributes);
  objc_msgSend(a1, sel__setStyleAttributes_, v8);

  if (a2)
  {
    uint64_t v9 = 1;
    objc_msgSend(a1, sel_setTitleVisibility_, 1);
  }
  else
  {
    objc_msgSend(a1, sel_setTitleVisibility_, qword_228BB1A70[*(char *)(v2 + 80)]);
    uint64_t v9 = qword_228BB1A70[*(char *)(v2 + 81)];
  }
  objc_msgSend(a1, sel_setSubtitleVisibility_, v9);
  LODWORD(v1__isPlatformVersionAtLeast(2, 18, 1, 0) = 1148846080;
  objc_msgSend(a1, sel_setDisplayPriority_, v10);
  uint64_t v11 = *(unsigned __int8 *)(v2 + 104);

  return objc_msgSend(a1, sel_setEnabled_, v11);
}

void sub_228B13790(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a3, v6, v7);
  if (v8)
  {
    id v16 = (id)v8;
    type metadata accessor for SwiftUIAnnotationView();
    uint64_t v9 = (char *)swift_dynamicCastClass();
    if (v9)
    {
      double v10 = v9;
      double v11 = *(double *)(a4 + 24);
      double v12 = *(double *)(a4 + 32);
      double v13 = (double *)&v9[OBJC_IVAR____TtC15_MapKit_SwiftUI21SwiftUIAnnotationView_contentAnchorPoint];
      *double v13 = v11;
      v13[1] = v12;
      objc_msgSend(v9, sel_frame);
      objc_msgSend(v10, sel_setCenterOffset_, v14 * 0.5 - v11 * v14, v15 * 0.5 - v12 * v15);
    }
  }
}

id sub_228B138A4(char *a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  double v6 = *(double *)(v2 + 24);
  double v7 = *(double *)(v2 + 32);
  uint64_t v8 = (double *)&a1[OBJC_IVAR____TtC15_MapKit_SwiftUI21SwiftUIAnnotationView_contentAnchorPoint];
  double *v8 = v6;
  v8[1] = v7;
  objc_msgSend(a1, sel_frame);
  id result = objc_msgSend(a1, sel_setCenterOffset_, v9 * 0.5 - v6 * v9, v10 * 0.5 - v7 * v10);
  double v12 = *(uint64_t (**)(void *))(v2 + 8);
  if (v12 && v4 != (void *)1)
  {
    v14[0] = v4;
    v14[1] = v5;
    sub_228AD2688((uint64_t)v12);
    sub_228B19C48(v4, v5);
    uint64_t v13 = v12(v14);
    sub_228BA813C(v13);
    swift_release();
    sub_228B1A848(v4, v5);
    return (id)sub_228AD2678((uint64_t)v12);
  }
  return result;
}

char *sub_228B139D8(void *a1, void *a2)
{
  if (*(void *)(v2 + 8))
  {
    if (a2)
    {
      id v4 = a2;
      uint64_t v5 = (void *)sub_228BAD3D8();
      id v6 = objc_msgSend(v4, sel_dequeueReusableAnnotationViewWithIdentifier_forAnnotation_, v5, a1);

      type metadata accessor for SwiftUIAnnotationView();
      double v7 = (char *)swift_dynamicCastClassUnconditional();
      id v8 = objc_msgSend(v4, sel_userLocation);
      if (v8)
      {

        id v9 = objc_msgSend(v4, sel_userLocation);
        uint64_t v10 = (uint64_t)objc_msgSend(v9, sel_location);
        id v11 = (id)v10;
        id v12 = objc_msgSend(v9, sel_heading);

LABEL_8:
        v17[0] = v10;
        v17[1] = v12;
        sub_228B138A4(v7, (uint64_t)v17);
        sub_228B1A848((void *)v10, v12);
        return v7;
      }
    }
    else
    {
      type metadata accessor for SwiftUIAnnotationView();
      id v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      id v14 = a1;
      double v15 = (void *)sub_228BAD3D8();
      double v7 = (char *)objc_msgSend(v13, sel_initWithAnnotation_reuseIdentifier_, v14, v15);
    }
    id v12 = 0;
    uint64_t v10 = 1;
    goto LABEL_8;
  }
  return 0;
}

uint64_t sub_228B13BA4@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

void sub_228B13BB0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a3, v4, v5);
  if (v6)
  {
    id v9 = (id)v6;
    self;
    double v7 = (void *)swift_dynamicCastObjCClass();
    if (v7)
    {
      id v8 = v7;
      sub_228B13C9C(v7);
      objc_msgSend(v8, sel_setNeedsDisplay);
    }
  }
}

void sub_228B13C9C(void *a1)
{
  double v2 = *(double *)(v1 + 32);
  uint64_t v3 = *(unsigned int *)(v1 + 40);
  uint64_t v4 = *(unsigned int *)(v1 + 44);
  double v5 = *(double *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  double v7 = *(double *)(v1 + 64);
  uint64_t v8 = *(void *)(v1 + 72);
  int v9 = *(unsigned __int8 *)(v1 + 80);
  swift_bridgeObjectRetain();
  objc_msgSend(a1, sel_setLineWidth_, v2);
  objc_msgSend(a1, sel_setLineCap_, v3);
  objc_msgSend(a1, sel_setLineJoin_, v4);
  objc_msgSend(a1, sel_setMiterLimit_, v5);
  if (*(void *)(v6 + 16))
  {
    uint64_t v10 = swift_bridgeObjectRetain();
    sub_228B14930(v10);
    swift_bridgeObjectRelease();
    sub_228AD25BC(0, &qword_268292B10);
    id v11 = (void *)sub_228BAD498();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v11 = 0;
  }
  objc_msgSend(a1, sel_setLineDashPattern_, v11);

  objc_msgSend(a1, sel_setLineDashPhase_, v7);
  swift_bridgeObjectRelease();
  if (!v9)
  {
    sub_228AD25BC(0, (unint64_t *)&qword_268292340);
    goto LABEL_17;
  }
  self;
  if (!swift_dynamicCastObjCClass())
  {
    sub_228AD25BC(0, (unint64_t *)&qword_268292340);
    if (!*(void *)(v8 + 16))
    {
      sub_228BAD108();
      goto LABEL_18;
    }
LABEL_17:
    swift_retain();
LABEL_18:
    uint64_t v21 = sub_228BAD6D8();
    objc_msgSend(a1, sel_setStrokeColor_, v21);
    long long v19 = (void *)v21;
    goto LABEL_23;
  }
  uint64_t v23 = MEMORY[0x263F8EE78];
  uint64_t v12 = *(void *)(v8 + 16);
  if (v12)
  {
    sub_228AD25BC(0, (unint64_t *)&qword_268292340);
    sub_228ACF3A4(v8, 1);
    id v13 = a1;
    id v14 = (uint64_t *)(v8 + 40);
    double v15 = (void *)MEMORY[0x263F8EE78];
    do
    {
      uint64_t v16 = *v14;
      swift_retain_n();
      sub_228BAD6D8();
      MEMORY[0x22A6A6BE0]();
      if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_228BAD4D8();
      }
      sub_228BAD528();
      sub_228BAD4B8();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        double v15 = sub_228B767E8(0, v15[2] + 1, 1, v15);
      }
      unint64_t v18 = v15[2];
      unint64_t v17 = v15[3];
      if (v18 >= v17 >> 1) {
        double v15 = sub_228B767E8((void *)(v17 > 1), v18 + 1, 1, v15);
      }
      void v15[2] = v18 + 1;
      v15[v18 + 4] = v16;
      swift_release();
      v14 += 2;
      --v12;
    }
    while (v12);
    sub_228AD26A8(v8, 1);
  }
  else
  {
    id v20 = a1;
  }
  sub_228BAD6A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v19 = a1;
LABEL_23:
}

void sub_228B14034(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a3, v4, v5);
  if (v6)
  {
    id v9 = (id)v6;
    self;
    double v7 = (void *)swift_dynamicCastObjCClass();
    if (v7)
    {
      uint64_t v8 = v7;
      sub_228B14130(v7);
      objc_msgSend(v8, sel_setNeedsDisplay);
    }
  }
}

void sub_228B14130(void *a1)
{
  double v3 = *(double *)(v1 + 40);
  uint64_t v4 = *(unsigned int *)(v1 + 48);
  uint64_t v5 = *(unsigned int *)(v1 + 52);
  double v6 = *(double *)(v1 + 56);
  uint64_t v7 = *(void *)(v1 + 64);
  double v8 = *(double *)(v1 + 72);
  uint64_t v9 = *(void *)(v1 + 80);
  char v10 = *(unsigned char *)(v1 + 88);
  uint64_t v11 = *(void *)(v1 + 96);
  char v12 = *(unsigned char *)(v1 + 104);
  swift_bridgeObjectRetain();
  objc_msgSend(a1, sel_setLineWidth_, v3);
  objc_msgSend(a1, sel_setLineCap_, v4);
  objc_msgSend(a1, sel_setLineJoin_, v5);
  objc_msgSend(a1, sel_setMiterLimit_, v6);
  if (*(void *)(v7 + 16))
  {
    uint64_t v13 = swift_bridgeObjectRetain();
    sub_228B14930(v13);
    swift_bridgeObjectRelease();
    sub_228AD25BC(0, &qword_268292B10);
    id v14 = (void *)sub_228BAD498();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v14 = 0;
  }
  objc_msgSend(a1, sel_setLineDashPattern_, v14);

  objc_msgSend(a1, sel_setLineDashPhase_, v8);
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0 && !*(void *)(v9 + 16)) {
    sub_228BAD108();
  }
  else {
    swift_retain();
  }
  sub_228AD25BC(0, (unint64_t *)&qword_268292340);
  double v15 = (void *)sub_228BAD6D8();
  objc_msgSend(a1, sel_setStrokeColor_, v15);

  if ((v12 & 1) != 0 && !*(void *)(v11 + 16)) {
    sub_228BAD108();
  }
  else {
    swift_retain();
  }
  id v16 = (id)sub_228BAD6D8();
  objc_msgSend(a1, sel_setFillColor_, v16);
}

void sub_228B1434C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a3, v4, v5);
  if (v6)
  {
    id v9 = (id)v6;
    self;
    uint64_t v7 = (void *)swift_dynamicCastObjCClass();
    if (v7)
    {
      double v8 = v7;
      sub_228B14420(v7);
      objc_msgSend(v8, sel_setNeedsDisplay);
    }
  }
}

void sub_228B14420(void *a1)
{
  uint64_t v2 = v1;
  long long v4 = *(_OWORD *)(v1 + 72);
  long long v11 = *(_OWORD *)(v1 + 56);
  long long v12 = v4;
  double v13 = *(double *)(v1 + 88);
  uint64_t v5 = *((void *)&v4 + 1);
  double v6 = *(double *)&v11;
  sub_228B17EA4((uint64_t)&v11);
  objc_msgSend(a1, sel_setLineWidth_, v6);
  objc_msgSend(a1, sel_setLineCap_, DWORD2(v11));
  objc_msgSend(a1, sel_setLineJoin_, HIDWORD(v11));
  objc_msgSend(a1, sel_setMiterLimit_, *(double *)&v12);
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = swift_bridgeObjectRetain();
    sub_228B14930(v7);
    sub_228B17ED0((uint64_t)&v11);
    sub_228AD25BC(0, &qword_268292B10);
    double v8 = (void *)sub_228BAD498();
    swift_bridgeObjectRelease();
  }
  else
  {
    double v8 = 0;
  }
  objc_msgSend(a1, sel_setLineDashPattern_, v8);

  objc_msgSend(a1, sel_setLineDashPhase_, v13);
  sub_228B17ED0((uint64_t)&v11);
  if ((*(unsigned char *)(v2 + 104) & 1) != 0 && !*(void *)(*(void *)(v2 + 96) + 16)) {
    sub_228BAD108();
  }
  else {
    swift_retain();
  }
  sub_228AD25BC(0, (unint64_t *)&qword_268292340);
  id v9 = (void *)sub_228BAD6D8();
  objc_msgSend(a1, sel_setStrokeColor_, v9);

  if ((*(unsigned char *)(v2 + 120) & 1) != 0 && !*(void *)(*(void *)(v2 + 112) + 16)) {
    sub_228BAD108();
  }
  else {
    swift_retain();
  }
  char v10 = (void *)sub_228BAD6D8();
  objc_msgSend(a1, sel_setFillColor_, v10);
}

uint64_t sub_228B1460C(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_228B1463C(uint64_t (*a1)(void))
{
  return a1(0);
}

id sub_228B1466C(uint64_t a1)
{
  id v2 = objc_msgSend(*v1, sel_viewForAnnotation_, a1);

  return v2;
}

id sub_228B146A8(uint64_t a1)
{
  id v2 = objc_msgSend(*v1, sel_rendererForOverlay_, a1);

  return v2;
}

uint64_t sub_228B146E4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_228B1474C()
{
  return 0xFFFFFFFFLL;
}

uint64_t sub_228B1480C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    uint64_t v2 = swift_bridgeObjectRetain() + 40;
    do
    {
      double v3 = *(void (**)(uint64_t))(v2 - 8);
      uint64_t v4 = swift_retain();
      v3(v4);
      swift_release();
      v2 += 16;
      --v1;
    }
    while (v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_228B1489C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = a2 + 40;
    do
    {
      uint64_t v5 = *(void (**)(uint64_t))(v4 - 8);
      uint64_t v6 = swift_retain();
      v5(v6);
      swift_release();
      v4 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_228B14930(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    sub_228BAD8A8();
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 8;
      sub_228BAC458();
      sub_228BAD878();
      sub_228BAD8B8();
      sub_228BAD8C8();
      sub_228BAD888();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

id sub_228B149D8()
{
  uint64_t v1 = &v0[qword_2682928D0];
  type metadata accessor for CustomAnnotationViewModel(0);
  type metadata accessor for MapBridgingCustomAnnotation();
  sub_228B17CFC(&qword_268292B38, (void (*)(uint64_t))type metadata accessor for MapBridgingCustomAnnotation);
  uint64_t v2 = v0;
  sub_228B1474C();
  *(_DWORD *)uint64_t v1 = -1;
  *((void *)v1 + 1) = 0;
  *((void *)v1 + 2) = v3;
  *((void *)v1 + 3) = v4;
  uint64_t v5 = &v2[qword_2682928D8];
  type metadata accessor for MarkerAnnotationViewModel(0);
  type metadata accessor for MapBridgingMarker();
  sub_228B17CFC(&qword_268292B40, (void (*)(uint64_t))type metadata accessor for MapBridgingMarker);
  sub_228B1474C();
  *(_DWORD *)uint64_t v5 = -1;
  *((void *)v5 + 1) = 0;
  *((void *)v5 + 2) = v6;
  *((void *)v5 + 3) = v7;
  double v8 = &v2[qword_2682928E0];
  sub_228B1474C();
  *(_DWORD *)double v8 = -1;
  *((void *)v8 + 1) = 0;
  *((void *)v8 + 2) = v9;
  *((void *)v8 + 3) = v10;
  long long v11 = &v2[qword_2682928E8];
  type metadata accessor for UserAnnotationViewModel(0);
  type metadata accessor for MapBridgingUserAnnotation();
  sub_228B17CFC((unint64_t *)&unk_268292B48, (void (*)(uint64_t))type metadata accessor for MapBridgingUserAnnotation);
  sub_228B1474C();
  *(_DWORD *)long long v11 = -1;
  *((void *)v11 + 1) = 0;
  *((void *)v11 + 2) = v12;
  *((void *)v11 + 3) = v13;
  id v14 = &v2[qword_2682928F0];
  sub_228B1474C();
  *(_DWORD *)id v14 = -1;
  *((void *)v14 + 1) = 0;
  *((void *)v14 + 2) = v15;
  *((void *)v14 + 3) = v16;
  *(void *)&v2[qword_2682928F8] = 0;
  unint64_t v17 = &v2[qword_268292900];
  sub_228AD25BC(0, &qword_2682926D0);
  sub_228B1AB60((unint64_t *)&unk_268292B58, &qword_2682926D0);
  sub_228B1474C();
  *(_DWORD *)unint64_t v17 = -1;
  *((void *)v17 + 1) = 0;
  *((void *)v17 + 2) = v18;
  *((void *)v17 + 3) = v19;
  id v20 = &v2[qword_268292908];
  sub_228AD25BC(0, (unint64_t *)&qword_2682926B0);
  sub_228B1AB60((unint64_t *)&unk_268292B68, (unint64_t *)&qword_2682926B0);
  sub_228B1474C();
  *(_DWORD *)id v20 = -1;
  *((void *)v20 + 1) = 0;
  *((void *)v20 + 2) = v21;
  *((void *)v20 + 3) = v22;
  uint64_t v23 = &v2[qword_268292910];
  sub_228AD25BC(0, &qword_268292670);
  sub_228B1AB60(&qword_268292B78, &qword_268292670);
  sub_228B1474C();
  *(_DWORD *)uint64_t v23 = -1;
  *((void *)v23 + 1) = 0;
  *((void *)v23 + 2) = v24;
  *((void *)v23 + 3) = v25;
  *(void *)&v2[qword_268292918] = 0;

  v27.receiver = v2;
  v27.super_class = (Class)type metadata accessor for MapContentCoordinator();
  return objc_msgSendSuper2(&v27, sel_init);
}

id sub_228B14D6C()
{
  return sub_228B149D8();
}

id sub_228B14D90()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MapContentCoordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_228B14E04(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for MapContentCoordinator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t destroy for CircleOverlayViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_228AD26A8(*(void *)(a1 + 96), *(unsigned char *)(a1 + 104));
  uint64_t v2 = *(void *)(a1 + 112);
  char v3 = *(unsigned char *)(a1 + 120);

  return sub_228AD26A8(v2, v3);
}

uint64_t initializeWithCopy for CircleOverlayViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void **)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v6;
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  char v8 = *(unsigned char *)(a2 + 104);
  swift_bridgeObjectRetain();
  id v9 = v5;
  swift_bridgeObjectRetain();
  sub_228ACF3A4(v7, v8);
  *(void *)(a1 + 96) = v7;
  *(unsigned char *)(a1 + 104) = v8;
  uint64_t v10 = *(void *)(a2 + 112);
  LOBYTE(v7) = *(unsigned char *)(a2 + 120);
  sub_228ACF3A4(v10, v7);
  *(void *)(a1 + 112) = v10;
  *(unsigned char *)(a1 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = v7;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  return a1;
}

uint64_t assignWithCopy for CircleOverlayViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 8);
  long long v5 = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 8) = v4;
  uint64_t v6 = *(void **)(a1 + 48);
  uint64_t v7 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v7;
  id v8 = v7;

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v9 = *(void *)(a2 + 96);
  char v10 = *(unsigned char *)(a2 + 104);
  sub_228ACF3A4(v9, v10);
  uint64_t v11 = *(void *)(a1 + 96);
  char v12 = *(unsigned char *)(a1 + 104);
  *(void *)(a1 + 96) = v9;
  *(unsigned char *)(a1 + 104) = v10;
  sub_228AD26A8(v11, v12);
  uint64_t v13 = *(void *)(a2 + 112);
  char v14 = *(unsigned char *)(a2 + 120);
  sub_228ACF3A4(v13, v14);
  uint64_t v15 = *(void *)(a1 + 112);
  char v16 = *(unsigned char *)(a1 + 120);
  *(void *)(a1 + 112) = v13;
  *(unsigned char *)(a1 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = v14;
  sub_228AD26A8(v15, v16);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = result;
  return result;
}

uint64_t assignWithTake for CircleOverlayViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  long long v4 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  char v6 = *(unsigned char *)(a2 + 104);
  uint64_t v7 = *(void *)(a1 + 96);
  char v8 = *(unsigned char *)(a1 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = v6;
  sub_228AD26A8(v7, v8);
  char v9 = *(unsigned char *)(a2 + 120);
  uint64_t v10 = *(void *)(a1 + 112);
  char v11 = *(unsigned char *)(a1 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = v9;
  sub_228AD26A8(v10, v11);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for CircleOverlayViewModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 136)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CircleOverlayViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CircleOverlayViewModel()
{
  return &type metadata for CircleOverlayViewModel;
}

uint64_t destroy for PolygonOverlayViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_228B09D08(*(void **)(a1 + 8), *(void *)(a1 + 16));

  swift_bridgeObjectRelease();
  sub_228AD26A8(*(void *)(a1 + 80), *(unsigned char *)(a1 + 88));
  uint64_t v2 = *(void *)(a1 + 96);
  char v3 = *(unsigned char *)(a1 + 104);

  return sub_228AD26A8(v2, v3);
}

uint64_t initializeWithCopy for PolygonOverlayViewModel(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_228B09CA8(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  uint64_t v7 = *(void **)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v8;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  LOBYTE(v6) = *(unsigned char *)(a2 + 88);
  id v11 = v7;
  swift_bridgeObjectRetain();
  sub_228ACF3A4(v10, v6);
  *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v10;
  *(unsigned char *)(a1 + 88) = v6;
  uint64_t v12 = *(void *)(a2 + 96);
  LOBYTE(v1__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 104);
  sub_228ACF3A4(v12, v10);
  *(void *)(a1 + 96) = v12;
  *(unsigned char *)(a1 + 104) = v10;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t assignWithCopy for PolygonOverlayViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  sub_228B09CA8(v4, v5);
  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  sub_228B09D08(v7, v8);
  uint64_t v9 = *(void **)(a1 + 32);
  uint64_t v10 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v10;
  id v11 = v10;

  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v12 = *(void *)(a2 + 80);
  LOBYTE(v5) = *(unsigned char *)(a2 + 88);
  sub_228ACF3A4(v12, v5);
  uint64_t v13 = *(void *)(a1 + 80);
  char v14 = *(unsigned char *)(a1 + 88);
  *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v12;
  *(unsigned char *)(a1 + 88) = v5;
  sub_228AD26A8(v13, v14);
  uint64_t v15 = *(void *)(a2 + 96);
  LOBYTE(v5) = *(unsigned char *)(a2 + 104);
  sub_228ACF3A4(v15, v5);
  uint64_t v16 = *(void *)(a1 + 96);
  char v17 = *(unsigned char *)(a1 + 104);
  *(void *)(a1 + 96) = v15;
  *(unsigned char *)(a1 + 104) = v5;
  sub_228AD26A8(v16, v17);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for PolygonOverlayViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void **)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  sub_228B09D08(v5, v6);
  long long v7 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  char v9 = *(unsigned char *)(a2 + 88);
  uint64_t v10 = *(void *)(a1 + 80);
  char v11 = *(unsigned char *)(a1 + 88);
  *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = v9;
  sub_228AD26A8(v10, v11);
  char v12 = *(unsigned char *)(a2 + 104);
  uint64_t v13 = *(void *)(a1 + 96);
  char v14 = *(unsigned char *)(a1 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = v12;
  sub_228AD26A8(v13, v14);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for PolygonOverlayViewModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PolygonOverlayViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PolygonOverlayViewModel()
{
  return &type metadata for PolygonOverlayViewModel;
}

uint64_t destroy for PolylineOverlayViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_228B0A024(*(void **)(a1 + 8), *(_WORD *)(a1 + 16));

  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 72);
  char v3 = *(unsigned char *)(a1 + 80);

  return sub_228AD26A8(v2, v3);
}

uint64_t initializeWithCopy for PolylineOverlayViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  __int16 v5 = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_228B0A008(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = v5;
  uint64_t v6 = *(void **)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  char v10 = *(unsigned char *)(a2 + 80);
  id v11 = v6;
  swift_bridgeObjectRetain();
  sub_228ACF3A4(v9, v10);
  *(void *)(a1 + 72) = v9;
  *(unsigned char *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v10;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t assignWithCopy for PolylineOverlayViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 8);
  __int16 v5 = *(_WORD *)(a2 + 16);
  sub_228B0A008(v4, v5);
  uint64_t v6 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  __int16 v7 = *(_WORD *)(a1 + 16);
  *(_WORD *)(a1 + 16) = v5;
  sub_228B0A024(v6, v7);
  uint64_t v8 = *(void **)(a1 + 24);
  uint64_t v9 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v9;
  id v10 = v9;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 72);
  LOBYTE(v5) = *(unsigned char *)(a2 + 80);
  sub_228ACF3A4(v11, v5);
  uint64_t v12 = *(void *)(a1 + 72);
  char v13 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v5;
  sub_228AD26A8(v12, v13);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for PolylineOverlayViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  __int16 v4 = *(_WORD *)(a2 + 16);
  long long v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  __int16 v6 = *(_WORD *)(a1 + 16);
  *(_WORD *)(a1 + 16) = v4;
  sub_228B0A024(v5, v6);
  __int16 v7 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v8;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  char v9 = *(unsigned char *)(a2 + 80);
  uint64_t v10 = *(void *)(a1 + 72);
  char v11 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v9;
  sub_228AD26A8(v10, v11);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for PolylineOverlayViewModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PolylineOverlayViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PolylineOverlayViewModel()
{
  return &type metadata for PolylineOverlayViewModel;
}

uint64_t sub_228B15A90(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    char v9 = a2 + 1;
    uint64_t v8 = a2[1];
    swift_bridgeObjectRetain();
    if (v8)
    {
      uint64_t v10 = a2[2];
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v10;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 8) = *v9;
    }
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_WORD *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *((_WORD *)a2 + 20);
    uint64_t v11 = *(int *)(a3 + 36);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    uint64_t v14 = sub_228BACE18();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_228B15BA0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 8)) {
    swift_release();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_228BACE18();
  __int16 v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_228B15C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  __int16 v7 = (_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *v7;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_WORD *)(a2 + 40);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_228BACE18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

uint64_t sub_228B15CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8))
  {
    if (v6)
    {
      uint64_t v8 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v6;
      *(void *)(a1 + 16) = v8;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
LABEL_8:
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_228BACE18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t sub_228B15E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_WORD *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_228BACE18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t sub_228B15EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8))
  {
    if (v6)
    {
      uint64_t v8 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v6;
      *(void *)(a1 + 16) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  swift_release();
LABEL_8:
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_228BACE18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_228B15FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_228B15FC0);
}

uint64_t sub_228B15FC0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_228BACE18();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_228B16070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_228B16084);
}

void *sub_228B16084(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *__n128 result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_228BACE18();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for UserAnnotationViewModel(uint64_t a1)
{
  return sub_228AC29CC(a1, (uint64_t *)&unk_2682929A8);
}

uint64_t sub_228B1614C()
{
  uint64_t result = sub_228BACE18();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_228B16210(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = (void *)a2[5];
    *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v8;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v9 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v9;
    uint64_t v10 = (void *)a2[9];
    *(void *)(a1 + 72) = v10;
    *(unsigned char *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *((unsigned char *)a2 + 80);
    *(unsigned char *)(a1 + 81) = *((unsigned char *)a2 + 81);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
    *(_WORD *)(a1 + 104) = *((_WORD *)a2 + 52);
    uint64_t v11 = (void *)a2[14];
    uint64_t v12 = *(int *)(a3 + 68);
    uint64_t v19 = (uint64_t)a2 + v12;
    uint64_t v20 = a1 + v12;
    *(void *)(a1 + 112) = v11;
    uint64_t v13 = sub_228BACE18();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v8;
    swift_bridgeObjectRetain();
    id v15 = v10;
    id v16 = v11;
    v18(v20, v19, v13);
  }
  return v5;
}

uint64_t sub_228B16388(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 68);
  uint64_t v5 = sub_228BACE18();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_228B16430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  uint64_t v8 = *(void **)(a2 + 72);
  *(void *)(a1 + 72) = v8;
  *(_WORD *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  uint64_t v9 = *(void **)(a2 + 112);
  uint64_t v10 = *(int *)(a3 + 68);
  uint64_t v17 = a2 + v10;
  uint64_t v18 = a1 + v10;
  *(void *)(a1 + 112) = v9;
  uint64_t v11 = sub_228BACE18();
  id v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v12 = v6;
  swift_bridgeObjectRetain();
  id v13 = v8;
  id v14 = v9;
  v16(v18, v17, v11);
  return a1;
}

uint64_t sub_228B1654C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a1 + 40);
  uint64_t v7 = *(void **)(a2 + 40);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v7;
  id v8 = v7;

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void **)(a1 + 72);
  uint64_t v10 = *(void **)(a2 + 72);
  *(void *)(a1 + 72) = v10;
  id v11 = v10;

  *(unsigned char *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  id v12 = *(void **)(a1 + 112);
  id v13 = *(void **)(a2 + 112);
  *(void *)(a1 + 112) = v13;
  id v14 = v13;

  uint64_t v15 = *(int *)(a3 + 68);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_228BACE18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t sub_228B166B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  uint64_t v4 = *(int *)(a3 + 68);
  uint64_t v5 = a2 + v4;
  uint64_t v6 = a1 + v4;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v7 = sub_228BACE18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, v5, v7);
  return a1;
}

uint64_t sub_228B16780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  id v8 = *(void **)(a1 + 40);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);

  *(_WORD *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  id v11 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);

  uint64_t v12 = *(int *)(a3 + 68);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_228BACE18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_228B16894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_228B168A8);
}

uint64_t sub_228B168A8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_228BACE18();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    id v11 = (char *)a1 + *(int *)(a3 + 68);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_228B16958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_228B1696C);
}

void *sub_228B1696C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_228BACE18();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 68);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MarkerAnnotationViewModel(uint64_t a1)
{
  return sub_228AC29CC(a1, (uint64_t *)&unk_2682929B8);
}

uint64_t sub_228B16A34()
{
  uint64_t result = sub_228BACE18();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_228B16B18(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = (void *)a2[5];
    *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v8;
    *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(void *)(a1 + 72) = a2[9];
    *(_OWORD *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *((_OWORD *)a2 + 5);
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
    uint64_t v9 = *(int *)(a3 + 64);
    uint64_t v15 = (uint64_t)a2 + v9;
    uint64_t v10 = a1 + v9;
    *(_WORD *)(a1 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = *((_WORD *)a2 + 60);
    uint64_t v11 = sub_228BACE18();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v13 = v8;
    swift_retain();
    v12(v10, v15, v11);
  }
  return v5;
}

uint64_t sub_228B16C7C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 64);
  uint64_t v5 = sub_228BACE18();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_228B16D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v6;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v7 = *(int *)(a3 + 64);
  uint64_t v13 = a2 + v7;
  uint64_t v8 = a1 + v7;
  *(_WORD *)(a1 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_WORD *)(a2 + 120);
  uint64_t v9 = sub_228BACE18();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v6;
  swift_retain();
  v10(v8, v13, v9);
  return a1;
}

uint64_t sub_228B16E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a1 + 40);
  uint64_t v7 = *(void **)(a2 + 40);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v7;
  id v8 = v7;

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  long long v9 = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v9;
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  uint64_t v10 = *(int *)(a3 + 64);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_228BACE18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_228B16F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v4 = *(int *)(a3 + 64);
  uint64_t v5 = a2 + v4;
  uint64_t v6 = a1 + v4;
  *(_WORD *)(a1 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_WORD *)(a2 + 120);
  uint64_t v7 = sub_228BACE18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, v5, v7);
  return a1;
}

uint64_t sub_228B17040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  id v8 = *(void **)(a1 + 40);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);

  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(_OWORD *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_WORD *)(a1 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_WORD *)(a2 + 120);
  uint64_t v9 = *(int *)(a3 + 64);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_228BACE18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_228B1713C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_228B17150);
}

uint64_t sub_228B17150(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_228BACE18();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 64);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_228B17200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_228B17214);
}

void *sub_228B17214(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_228BACE18();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 64);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for CustomAnnotationViewModel(uint64_t a1)
{
  return sub_228AC29CC(a1, qword_2682929C8);
}

uint64_t sub_228B172DC()
{
  uint64_t result = sub_228BACE18();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for MapStyle.Standard()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_228B1740C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_228B1744C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_228B174BC(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_228B1750C(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_228B17554(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for MapContentCoordinator.MapContentStorage()
{
  return swift_getGenericMetadata();
}

uint64_t sub_228B175AC(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2 >> 62;
  if (!(a2 >> 62) || v2 == 2 || v2 == 1)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t destroy for RegionBinding(uint64_t a1)
{
  return sub_228B17624(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t sub_228B17624(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2 >> 62;
  if (!(a2 >> 62) || v2 == 2 || v2 == 1)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t *initializeWithCopy for RegionBinding(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  sub_228B175AC(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  return a1;
}

uint64_t *assignWithCopy for RegionBinding(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  sub_228B175AC(*a2, v4);
  uint64_t v10 = *a1;
  unint64_t v11 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  sub_228B17624(v10, v11);
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for RegionBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v3;
  sub_228B17624(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for RegionBinding(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 57) >> 5) | (4
                                                          * ((*(void *)(a1 + 8) >> 57) & 0x18 | *(void *)(a1 + 8) & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RegionBinding(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_OWORD *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(void *)(result + 48) = 0;
    }
  }
  return result;
}

uint64_t sub_228B178CC(uint64_t a1)
{
  return *(void *)(a1 + 8) >> 62;
}

uint64_t sub_228B178D8(uint64_t result)
{
  *(void *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_228B178E8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 8) = *(void *)(result + 8) & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for RegionBinding()
{
  return &type metadata for RegionBinding;
}

unint64_t sub_228B17910()
{
  unint64_t result = qword_268292A60;
  if (!qword_268292A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268292A60);
  }
  return result;
}

unint64_t sub_228B17964(uint64_t a1)
{
  unint64_t result = sub_228B1798C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_228B1798C()
{
  unint64_t result = qword_268292A70;
  if (!qword_268292A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268292A70);
  }
  return result;
}

unint64_t sub_228B179E0(uint64_t a1)
{
  unint64_t result = sub_228B17A08();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_228B17A08()
{
  unint64_t result = qword_268292A78;
  if (!qword_268292A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268292A78);
  }
  return result;
}

unint64_t sub_228B17A5C(uint64_t a1)
{
  unint64_t result = sub_228B17A84();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_228B17A84()
{
  unint64_t result = qword_268292A88;
  if (!qword_268292A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268292A88);
  }
  return result;
}

unint64_t sub_228B17AD8(uint64_t a1)
{
  unint64_t result = sub_228B17B00();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_228B17B00()
{
  unint64_t result = qword_268292A90;
  if (!qword_268292A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268292A90);
  }
  return result;
}

unint64_t sub_228B17B54(uint64_t a1)
{
  unint64_t result = sub_228B17B7C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_228B17B7C()
{
  unint64_t result = qword_268292AA0;
  if (!qword_268292AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268292AA0);
  }
  return result;
}

unint64_t sub_228B17BD0(uint64_t a1)
{
  unint64_t result = sub_228B17BF8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_228B17BF8()
{
  unint64_t result = qword_268292AA8;
  if (!qword_268292AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268292AA8);
  }
  return result;
}

uint64_t sub_228B17C4C(uint64_t a1)
{
  uint64_t result = sub_228B17CFC((unint64_t *)&unk_268292AB8, (void (*)(uint64_t))type metadata accessor for UserAnnotationViewModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_228B17CA4(uint64_t a1)
{
  uint64_t result = sub_228B17CFC((unint64_t *)&unk_268292AC8, (void (*)(uint64_t))type metadata accessor for UserAnnotationViewModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_228B17CFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_228B17D44(uint64_t a1)
{
  uint64_t result = sub_228B17CFC((unint64_t *)&unk_268292AD8, (void (*)(uint64_t))type metadata accessor for MarkerAnnotationViewModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_228B17D9C(uint64_t a1)
{
  uint64_t result = sub_228B17CFC((unint64_t *)&unk_268292AE8, (void (*)(uint64_t))type metadata accessor for MarkerAnnotationViewModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_228B17DF4(uint64_t a1)
{
  uint64_t result = sub_228B17CFC((unint64_t *)&unk_268292AF8, (void (*)(uint64_t))type metadata accessor for CustomAnnotationViewModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_228B17E4C(uint64_t a1)
{
  uint64_t result = sub_228B17CFC(&qword_268292B08, (void (*)(uint64_t))type metadata accessor for CustomAnnotationViewModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_228B17EA4(uint64_t a1)
{
  return a1;
}

uint64_t sub_228B17ED0(uint64_t a1)
{
  return a1;
}

uint64_t sub_228B17EFC@<X0>(uint64_t *a1@<X0>, BOOL a2@<W1>, uint64_t a3@<X2>, char *a4@<X4>, uint64_t a5@<X8>)
{
  long long v68 = a4;
  BOOL v69 = a2;
  uint64_t v71 = a3;
  uint64_t v72 = a5;
  uint64_t v70 = sub_228BAD718();
  uint64_t v67 = *(void *)(v70 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v70);
  uint64_t v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v59 - v9;
  uint64_t v11 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ResolvedAnnotation();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (uint64_t *)((char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for MapContentList.Item(0);
  uint64_t v18 = a1;
  sub_228B19B10((uint64_t)a1 + *(int *)(v17 + 24), (uint64_t)v13, type metadata accessor for MapContentList.Item.Content);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_228B19B78((uint64_t)v13, type metadata accessor for MapContentList.Item.Content);
    uint64_t v19 = type metadata accessor for CustomAnnotationViewModel(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v72, 1, 1, v19);
  }
  else
  {
    uint64_t v21 = v72;
    long long v66 = v8;
    uint64_t v22 = v67;
    sub_228B1A88C((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ResolvedAnnotation);
    uint64_t v23 = (char *)v18 + *(int *)(v17 + 28);
    uint64_t v65 = v10;
    long long v68 = v23;
    sub_228B69708(v71, (uint64_t)v10);
    uint64_t v24 = (int *)v14;
    uint64_t v64 = *v18;
    swift_bridgeObjectRetain();
    uint64_t v25 = (void *)sub_228BACBC8();
    if (v25)
    {
      char v26 = v25;
      id v27 = objc_msgSend(v25, sel_string);

      uint64_t v28 = sub_228BAD408();
      uint64_t v61 = v29;
      uint64_t v62 = v28;
    }
    else
    {
      uint64_t v61 = 0;
      uint64_t v62 = 0;
    }
    uint64_t v30 = v22;
    uint64_t v31 = v21;
    char v32 = (void *)sub_228BACBB8();
    if (v32)
    {
      uint64_t v33 = v32;
      id v34 = objc_msgSend(v32, sel_string);

      uint64_t v35 = sub_228BAD408();
      uint64_t v60 = v36;
    }
    else
    {
      uint64_t v35 = 0;
      uint64_t v60 = 0;
    }
    id v37 = v24;
    unint64_t v38 = *(void **)((char *)v16 + v24[12]);
    uint64_t v39 = v24[10];
    int v63 = *((unsigned __int8 *)v16 + v24[9]);
    LODWORD(v67) = *((unsigned __int8 *)v16 + v39);
    uint64_t v40 = *(void *)((char *)v16 + v24[7]);
    uint64_t v42 = *v16;
    uint64_t v41 = v16[1];
    uint64_t v43 = v16[2];
    uint64_t v44 = v16[3];
    long long v45 = v66;
    uint64_t v46 = v70;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v66, v65, v70);
    uint64_t v72 = v35;
    BOOL v69 = v69 && (*(uint64_t (**)(char *, uint64_t))(*(void *)(v71 - 8) + 48))(v45, 1) != 1;
    uint64_t v47 = *(void (**)(char *, uint64_t))(v30 + 8);
    id v48 = v38;
    swift_retain();
    v47(v45, v46);
    uint64_t v49 = (char *)v16 + v37[11];
    uint64_t v50 = v37;
    uint64_t v52 = *(void *)v49;
    uint64_t v51 = *((void *)v49 + 1);
    LODWORD(v71) = v49[16];
    char v53 = *((unsigned char *)v16 + v50[13]);
    sub_228B19B78((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ResolvedAnnotation);
    uint64_t v54 = type metadata accessor for CustomAnnotationViewModel(0);
    uint64_t v55 = v31 + *(int *)(v54 + 64);
    uint64_t v56 = sub_228BACE18();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v55, v68, v56);
    uint64_t v57 = v62;
    *(void *)uint64_t v31 = v64;
    *(void *)(v31 + 8) = v57;
    uint64_t v58 = v72;
    *(void *)(v31 + 16) = v61;
    *(void *)(v31 + 24) = v58;
    *(void *)(v31 + 32) = v60;
    *(void *)(v31 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v38;
    *(unsigned char *)(v31 + 48) = v63;
    *(unsigned char *)(v31 + 49) = v67;
    *(void *)(v31 + 56) = v42;
    *(void *)(v31 + 64) = v41;
    *(void *)(v31 + 72) = v40;
    *(void *)(v31 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v43;
    *(void *)(v31 + 88) = v44;
    *(unsigned char *)(v31 + 96) = v69;
    *(void *)(v31 + 104) = v52;
    *(void *)(v31 + 112) = v51;
    *(unsigned char *)(v31 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = v71;
    *(unsigned char *)(v31 + 121) = v53;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v31, 0, 1, v54);
  }
}

uint64_t sub_228B1840C@<X0>(uint64_t *a1@<X0>, int a2@<W1>, int a3@<W2>, char *a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v79 = a6;
  uint64_t v72 = a5;
  LODWORD(v73) = a3;
  LODWORD(v75) = a2;
  uint64_t v80 = type metadata accessor for MarkerAnnotationViewModel(0);
  uint64_t v78 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v74 = a4;
  uint64_t v10 = sub_228BAD718();
  uint64_t v76 = *(void *)(v10 - 8);
  uint64_t v77 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v65 - v14;
  uint64_t v16 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ResolvedMarker();
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for MapContentList.Item(0);
  sub_228B19B10((uint64_t)a1 + *(int *)(v22 + 24), (uint64_t)v18, type metadata accessor for MapContentList.Item.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v65 = v13;
    uint64_t v66 = v22;
    uint64_t v71 = v15;
    sub_228B1A88C((uint64_t)v18, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ResolvedMarker);
    uint64_t v23 = (void *)sub_228BACBB8();
    uint64_t v70 = (int *)v19;
    if (v23)
    {
      uint64_t v24 = v23;
      id v25 = objc_msgSend(v23, sel_string);

      uint64_t v26 = sub_228BAD408();
      uint64_t v68 = v27;
      uint64_t v69 = v26;
    }
    else
    {
      uint64_t v68 = 0;
      uint64_t v69 = 0;
    }
    uint64_t v29 = (uint64_t)v74;
    char v30 = v73;
    uint64_t v31 = (void *)sub_228BACBD8();
    if (v31)
    {
      char v32 = v31;
      id v33 = objc_msgSend(v31, sel_string);

      uint64_t v73 = sub_228BAD408();
      uint64_t v67 = v34;
    }
    else
    {
      uint64_t v73 = 0;
      uint64_t v67 = 0;
    }
    uint64_t v35 = (uint64_t)v71;
    long long v74 = (char *)a1 + *(int *)(v66 + 28);
    sub_228B69708(v29, (uint64_t)v71);
    if (v75)
    {
      LODWORD(v72) = 1;
    }
    else
    {
      uint64_t v36 = v76;
      id v37 = v65;
      uint64_t v38 = v35;
      uint64_t v39 = v77;
      (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v65, v38, v77);
      BOOL v40 = (v30 & 1) != 0
         && (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v37, 1, v29) != 1;
      LODWORD(v72) = v40;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v39);
    }
    uint64_t v41 = v70;
    uint64_t v42 = *a1;
    swift_bridgeObjectRetain();
    uint64_t v43 = (void *)sub_228BACBC8();
    uint64_t v75 = v42;
    if (v43)
    {
      uint64_t v44 = v43;
      id v45 = objc_msgSend(v43, sel_string);

      uint64_t v46 = sub_228BAD408();
      uint64_t v65 = v47;
      uint64_t v66 = v46;
    }
    else
    {
      uint64_t v65 = 0;
      uint64_t v66 = 0;
    }
    id v48 = *(void **)&v21[v41[9]];
    char v49 = v21[v41[10]];
    id v50 = v48;
    uint64_t v51 = sub_228BACBA8();
    __int16 v52 = *((_WORD *)v21 + 8);
    uint64_t v53 = *(void *)v21;
    uint64_t v54 = *((void *)v21 + 1);
    char v55 = v21[18];
    uint64_t v56 = &v9[*(int *)(v80 + 68)];
    uint64_t v57 = sub_228BACE18();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v56, v74, v57);
    uint64_t v58 = v66;
    *(void *)uint64_t v9 = v75;
    *((void *)v9 + 1) = v58;
    uint64_t v59 = v69;
    *((void *)v9 + 2) = v65;
    *((void *)v9 + 3) = v59;
    *((void *)v9 + 4) = v68;
    *((void *)v9 + 5) = v48;
    v9[48] = v49;
    uint64_t v60 = v67;
    *((void *)v9 + 7) = v73;
    *((void *)v9 + 8) = v60;
    *((void *)v9 + 9) = v51;
    *((_WORD *)v9 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v52;
    *((void *)v9 + 11) = v53;
    *((void *)v9 + 12) = v54;
    v9[104] = v72;
    v9[105] = v55;
    *((void *)v9 + 14) = 0;
    if (*(void *)&v21[v41[11]])
    {
      sub_228AD25BC(0, (unint64_t *)&qword_268292340);
      swift_retain();
      uint64_t v61 = sub_228BAD6D8();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v71, v77);
      sub_228B19B78((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ResolvedMarker);

      *((void *)v9 + 14) = v61;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v76 + 8))(v71, v77);
      sub_228B19B78((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ResolvedMarker);
    }
    uint64_t v62 = v79;
    uint64_t v63 = v80;
    uint64_t v64 = v78;
    sub_228B19B10((uint64_t)v9, v79, type metadata accessor for MarkerAnnotationViewModel);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v64 + 56))(v62, 0, 1, v63);
    return sub_228B19B78((uint64_t)v9, type metadata accessor for MarkerAnnotationViewModel);
  }
  else
  {
    sub_228B19B78((uint64_t)v18, type metadata accessor for MapContentList.Item.Content);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56))(v79, 1, 1, v80);
  }
}

uint64_t sub_228B18A6C@<X0>(uint64_t *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, char *a4@<X4>, uint64_t a5@<X8>)
{
  id v33 = a4;
  int v35 = a2;
  uint64_t v36 = a3;
  uint64_t v34 = sub_228BAD718();
  uint64_t v7 = *(void *)(v34 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v34);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v13 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ResolvedUserAnnotation();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for MapContentList.Item(0);
  sub_228B19B10((uint64_t)a1 + *(int *)(v19 + 24), (uint64_t)v15, type metadata accessor for MapContentList.Item.Content);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_228B1A88C((uint64_t)v15, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ResolvedUserAnnotation);
    id v33 = (char *)a1 + *(int *)(v19 + 28);
    sub_228B69708(v36, (uint64_t)v12);
    uint64_t v20 = *a1;
    uint64_t v22 = *((void *)v18 + 2);
    uint64_t v21 = *((void *)v18 + 3);
    uint64_t v23 = *(void *)v18;
    uint64_t v24 = *((void *)v18 + 1);
    uint64_t v25 = v34;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v34);
    BOOL v26 = (v35 & 1) != 0
       && (*(unsigned int (**)(char *, uint64_t))(*(void *)(v36 - 8) + 48))(v10, 1) != 1;
    swift_bridgeObjectRetain();
    sub_228AD2688(v22);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v25);
    char v29 = v18[40];
    sub_228B19B78((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ResolvedUserAnnotation);
    uint64_t v30 = type metadata accessor for UserAnnotationViewModel(0);
    uint64_t v31 = a5 + *(int *)(v30 + 36);
    uint64_t v32 = sub_228BACE18();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v31, v33, v32);
    *(void *)a5 = v20;
    *(void *)(a5 + 8) = v22;
    *(void *)(a5 + 16) = v21;
    *(void *)(a5 + 24) = v23;
    *(void *)(a5 + 32) = v24;
    *(unsigned char *)(a5 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v26;
    *(unsigned char *)(a5 + 41) = v29;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a5, 0, 1, v30);
  }
  else
  {
    sub_228B19B78((uint64_t)v15, type metadata accessor for MapContentList.Item.Content);
    uint64_t v27 = type metadata accessor for UserAnnotationViewModel(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(a5, 1, 1, v27);
  }
}

void *sub_228B18E3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8) >> 62;
  if (v3)
  {
    if (v3 == 1)
    {
      swift_retain();
      swift_retain();
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292B28);
      MEMORY[0x22A6A6930](&v13, v4);
      swift_release();
      uint64_t result = (void *)swift_release();
      long long v6 = v14;
      *(_OWORD *)a1 = v13;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = 0;
      char v7 = 1;
    }
    else
    {
      swift_retain();
      swift_retain();
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292B20);
      MEMORY[0x22A6A6930](&v13, v11);
      swift_release();
      uint64_t result = (void *)swift_release();
      long long v12 = v14;
      *(_OWORD *)a1 = v13;
      *(_OWORD *)(a1 + 16) = v12;
      *(void *)(a1 + 32) = 0;
      char v7 = 2;
    }
    *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v7;
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292B18);
    uint64_t result = MEMORY[0x22A6A6930](&v13, v8);
    uint64_t v9 = v15;
    long long v10 = v14;
    *(_OWORD *)a1 = v13;
    *(_OWORD *)(a1 + 16) = v10;
    *(void *)(a1 + 32) = v9;
    *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
  }
  return result;
}

void sub_228B18F80(void *a1)
{
  uint64_t v3 = *v1;
  unint64_t v4 = v1[1];
  if (v4 >> 62)
  {
    if (v4 >> 62 == 1)
    {
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_268292B28);
      MEMORY[0x22A6A6930](&v79);
      double v6 = v79;
      double v5 = v80;
      double v8 = v81;
      double v7 = v82;
      objc_msgSend(a1, sel_visibleMapRect);
      if (v6 != v12 || v5 != v9 || v8 != v10 || v7 != v11)
      {
        if (qword_268291370 != -1) {
          swift_once();
        }
        uint64_t v16 = sub_228BAC508();
        __swift_project_value_buffer(v16, (uint64_t)qword_26829D4F8);
        uint64_t v17 = sub_228BAC4E8();
        os_log_type_t v18 = sub_228BAD668();
        if (os_log_type_enabled(v17, v18))
        {
          uint64_t v19 = (uint8_t *)swift_slowAlloc();
          *(double *)&uint64_t v20 = COERCE_DOUBLE(swift_slowAlloc());
          *(_DWORD *)uint64_t v19 = 136380675;
          double v79 = *(double *)&v20;
          type metadata accessor for MKMapRect(0);
          uint64_t v21 = sub_228BAD418();
          sub_228AD11A0(v21, v22, (uint64_t *)&v79);
          sub_228BAD738();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_228ABB000, v17, v18, "mapview -> model %{private}s", v19, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x22A6A7BE0](v20, -1, -1);
          MEMORY[0x22A6A7BE0](v19, -1, -1);
        }

        objc_msgSend(a1, sel_visibleMapRect);
LABEL_40:
        double v79 = *(double *)&v23;
        double v80 = v24;
        double v81 = v25;
        double v82 = v26;
        sub_228BAD1E8();
LABEL_41:
        swift_release();
        swift_release();
        return;
      }
      if (qword_268291370 != -1) {
        swift_once();
      }
      uint64_t v74 = sub_228BAC508();
      __swift_project_value_buffer(v74, (uint64_t)qword_26829D4F8);
      uint64_t v42 = sub_228BAC4E8();
      os_log_type_t v57 = sub_228BAD668();
      if (os_log_type_enabled(v42, v57))
      {
        uint64_t v58 = (uint8_t *)swift_slowAlloc();
        *(double *)&uint64_t v59 = COERCE_DOUBLE(swift_slowAlloc());
        *(_DWORD *)uint64_t v58 = 136380675;
        double v79 = *(double *)&v59;
        type metadata accessor for MKMapRect(0);
        goto LABEL_51;
      }
    }
    else
    {
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_268292B20);
      MEMORY[0x22A6A6930](&v79);
      double v49 = v79;
      double v48 = v80;
      double v51 = v81;
      double v50 = v82;
      objc_msgSend(a1, sel_region);
      if (vabdd_f64(v49, v55) >= 0.00000000999999994
        || vabdd_f64(v48, v52) >= 0.00000000999999994
        || vabdd_f64(v51, v53) >= 0.00000000999999994
        || vabdd_f64(v50, v54) >= 0.00000000999999994)
      {
        if (qword_268291370 != -1) {
          swift_once();
        }
        uint64_t v60 = sub_228BAC508();
        __swift_project_value_buffer(v60, (uint64_t)qword_26829D4F8);
        uint64_t v61 = sub_228BAC4E8();
        os_log_type_t v62 = sub_228BAD668();
        if (os_log_type_enabled(v61, v62))
        {
          uint64_t v63 = (uint8_t *)swift_slowAlloc();
          *(double *)&uint64_t v64 = COERCE_DOUBLE(swift_slowAlloc());
          *(_DWORD *)uint64_t v63 = 136380675;
          double v79 = *(double *)&v64;
          type metadata accessor for MKCoordinateRegion(0);
          uint64_t v65 = sub_228BAD418();
          sub_228AD11A0(v65, v66, (uint64_t *)&v79);
          sub_228BAD738();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_228ABB000, v61, v62, "mapview -> model %{private}s", v63, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x22A6A7BE0](v64, -1, -1);
          MEMORY[0x22A6A7BE0](v63, -1, -1);
        }

        objc_msgSend(a1, sel_region);
        goto LABEL_40;
      }
      if (qword_268291370 != -1) {
        swift_once();
      }
      uint64_t v56 = sub_228BAC508();
      __swift_project_value_buffer(v56, (uint64_t)qword_26829D4F8);
      uint64_t v42 = sub_228BAC4E8();
      os_log_type_t v57 = sub_228BAD668();
      if (os_log_type_enabled(v42, v57))
      {
        uint64_t v58 = (uint8_t *)swift_slowAlloc();
        *(double *)&uint64_t v59 = COERCE_DOUBLE(swift_slowAlloc());
        *(_DWORD *)uint64_t v58 = 136380675;
        double v79 = *(double *)&v59;
        type metadata accessor for MKCoordinateRegion(0);
LABEL_51:
        uint64_t v75 = sub_228BAD418();
        sub_228AD11A0(v75, v76, (uint64_t *)&v79);
        sub_228BAD738();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_228ABB000, v42, v57, "mapview == model %{private}s", v58, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22A6A7BE0](v59, -1, -1);
        MEMORY[0x22A6A7BE0](v58, -1, -1);
        swift_release();
        swift_release();
LABEL_53:

        return;
      }
    }

    goto LABEL_41;
  }
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292B18);
  MEMORY[0x22A6A6930](&v79);
  double v27 = v79;
  double v28 = v80;
  double v29 = v82;
  double v77 = v81;
  double v78 = v83;
  id v30 = objc_msgSend(a1, sel_camera);
  objc_msgSend(v30, sel_centerCoordinate);
  double v32 = v31;
  double v34 = v33;
  objc_msgSend(v30, sel_centerCoordinateDistance);
  double v36 = v35;
  objc_msgSend(v30, sel_heading);
  double v38 = v37;
  objc_msgSend(v30, sel_pitch);
  double v40 = v39;

  if (v27 == v32 && v28 == v34 && v29 == v38 && v78 == v40 && v77 == v36)
  {
    if (qword_268291370 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_228BAC508();
    __swift_project_value_buffer(v41, (uint64_t)qword_26829D4F8);
    uint64_t v42 = sub_228BAC4E8();
    os_log_type_t v43 = sub_228BAD668();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(double *)&uint64_t v45 = COERCE_DOUBLE(swift_slowAlloc());
      double v79 = *(double *)&v45;
      *(_DWORD *)uint64_t v44 = 136380675;
      uint64_t v46 = sub_228BAD418();
      sub_228AD11A0(v46, v47, (uint64_t *)&v79);
      sub_228BAD738();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_228ABB000, v42, v43, "mapview == model %{private}s", v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22A6A7BE0](v45, -1, -1);
      MEMORY[0x22A6A7BE0](v44, -1, -1);

      sub_228B17624(v3, v4);
      return;
    }
    sub_228B17624(v3, v4);
    goto LABEL_53;
  }
  if (qword_268291370 != -1) {
    swift_once();
  }
  uint64_t v67 = sub_228BAC508();
  __swift_project_value_buffer(v67, (uint64_t)qword_26829D4F8);
  uint64_t v68 = sub_228BAC4E8();
  os_log_type_t v69 = sub_228BAD668();
  if (os_log_type_enabled(v68, v69))
  {
    uint64_t v70 = (uint8_t *)swift_slowAlloc();
    *(double *)&uint64_t v71 = COERCE_DOUBLE(swift_slowAlloc());
    double v79 = *(double *)&v71;
    *(_DWORD *)uint64_t v70 = 136380675;
    uint64_t v72 = sub_228BAD418();
    sub_228AD11A0(v72, v73, (uint64_t *)&v79);
    sub_228BAD738();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_228ABB000, v68, v69, "mapview -> model %{private}s", v70, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22A6A7BE0](v71, -1, -1);
    MEMORY[0x22A6A7BE0](v70, -1, -1);
  }

  double v79 = v32;
  double v80 = v34;
  double v81 = v36;
  double v82 = v38;
  double v83 = v40;
  sub_228BAD1E8();
  sub_228B17624(v3, v4);
}

uint64_t sub_228B19B10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_228B19B78(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_228B19BD8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  char v3 = *(unsigned char *)(a1 + 96);
  uint64_t v4 = *(void *)(a1 + 104);
  char v5 = *(unsigned char *)(a1 + 112);
  swift_bridgeObjectRelease();
  swift_release();
  sub_228AD26A8(v2, v3);
  sub_228AD26A8(v4, v5);
  return a1;
}

id sub_228B19C48(id result, void *a2)
{
  if (result != (id)1)
  {
    id v4 = result;
    id v3 = a2;
    return v4;
  }
  return result;
}

uint64_t sub_228B19C8C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_228B1A834(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_228B19CF8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_228B19CF8(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_228BAD9B8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v89 = *a1;
      uint64_t v90 = -1;
      uint64_t v91 = 1;
      uint64_t v92 = *a1;
      do
      {
        double v93 = *(double *)(v89 + 32 * v91);
        uint64_t v94 = v90;
        uint64_t v95 = v92;
        do
        {
          if (v93 >= *(double *)v95) {
            break;
          }
          if (!v89) {
            goto LABEL_141;
          }
          uint64_t v96 = *(void *)(v95 + 56);
          long long v97 = *(_OWORD *)(v95 + 40);
          long long v98 = *(_OWORD *)(v95 + 16);
          *(_OWORD *)(v95 + 32) = *(_OWORD *)v95;
          *(_OWORD *)(v95 + 48) = v98;
          *(double *)uint64_t v95 = v93;
          *(_OWORD *)(v95 + 8) = v97;
          *(void *)(v95 + 24) = v96;
          v95 -= 32;
        }
        while (!__CFADD__(v94++, 1));
        ++v91;
        v92 += 32;
        --v90;
      }
      while (v91 != v3);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v6 = result;
  uint64_t v109 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (double *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      double v12 = (char *)MEMORY[0x263F8EE78];
LABEL_103:
      uint64_t v100 = v12;
      uint64_t v111 = v9;
      if (v13 >= 2)
      {
        uint64_t v101 = *v109;
        do
        {
          unint64_t v102 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v101) {
            goto LABEL_145;
          }
          id v103 = v100;
          uint64_t v104 = *(void *)&v100[16 * v102 + 32];
          uint64_t v105 = *(void *)&v100[16 * v13 + 24];
          sub_228B1A3EC((double *)(v101 + 32 * v104), (double *)(v101 + 32 * *(void *)&v100[16 * v13 + 16]), v101 + 32 * v105, __dst);
          if (v1) {
            break;
          }
          if (v105 < v104) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v103 = sub_228B1A820((uint64_t)v103);
          }
          if (v102 >= *((void *)v103 + 2)) {
            goto LABEL_134;
          }
          double v106 = &v103[16 * v102 + 32];
          *(void *)double v106 = v104;
          *((void *)v106 + 1) = v105;
          unint64_t v107 = *((void *)v103 + 2);
          if (v13 > v107) {
            goto LABEL_135;
          }
          memmove(&v103[16 * v13 + 16], &v103[16 * v13 + 32], 16 * (v107 - v13));
          uint64_t v100 = v103;
          *((void *)v103 + 2) = v107 - 1;
          unint64_t v13 = v107 - 1;
        }
        while (v107 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v111 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v111 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    type metadata accessor for MKMapRect(0);
    uint64_t v8 = sub_228BAD508();
    *(void *)(v8 + 16) = v7;
    uint64_t v111 = v8;
    __dst = (double *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v110 = *a1 + 64;
  uint64_t v108 = *a1 + 24;
  double v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v112 = v6;
  uint64_t v113 = v3;
  uint64_t v114 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 32 * v10);
      uint64_t v16 = 32 * v14;
      double v17 = *(double *)(v11 + 32 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        os_log_type_t v18 = (double *)(v110 + 32 * v14);
        double v19 = v15;
        while (1)
        {
          double v20 = v19;
          double v19 = *v18;
          if (v15 < v17 == *v18 >= v20) {
            break;
          }
          ++v10;
          v18 += 4;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v21 = 32 * v10;
          uint64_t v22 = v10;
          uint64_t v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              double v24 = (_OWORD *)(v11 + v16);
              uint64_t v25 = v11 + v21;
              long long v26 = *(_OWORD *)(v11 + v16);
              long long v27 = *(_OWORD *)(v11 + v16 + 16);
              long long v28 = *(_OWORD *)(v11 + v21 - 16);
              *double v24 = *(_OWORD *)(v11 + v21 - 32);
              v24[1] = v28;
              *(_OWORD *)(v25 - 32) = v26;
              *(_OWORD *)(v25 - 16) = v27;
            }
            ++v23;
            v21 -= 32;
            v16 += 32;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v29 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v29 >= v3) {
      uint64_t v29 = v3;
    }
    if (v29 < v14) {
      break;
    }
    if (v10 != v29)
    {
      uint64_t v30 = v108 + 32 * v10;
      do
      {
        double v31 = *(double *)(v11 + 32 * v10);
        uint64_t v32 = v14;
        uint64_t v33 = v30;
        do
        {
          double v34 = (long long *)(v33 - 56);
          if (v31 >= *(double *)(v33 - 56)) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          long long v36 = *v34;
          long long v35 = *(_OWORD *)(v33 - 40);
          *(void *)(v33 - 32) = *(void *)v33;
          v33 -= 32;
          long long v37 = *(_OWORD *)(v33 + 16);
          v34[2] = v36;
          void v34[3] = v35;
          *(double *)(v33 - 24) = v31;
          *(_OWORD *)(v33 - 16) = v37;
          ++v32;
        }
        while (v10 != v32);
        ++v10;
        v30 += 32;
      }
      while (v10 != v29);
      uint64_t v10 = v29;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v12 = sub_228B1A668(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v39 = *((void *)v12 + 2);
    unint64_t v38 = *((void *)v12 + 3);
    unint64_t v13 = v39 + 1;
    uint64_t v11 = v114;
    if (v39 >= v38 >> 1)
    {
      uint64_t v88 = sub_228B1A668((char *)(v38 > 1), v39 + 1, 1, v12);
      uint64_t v11 = v114;
      double v12 = v88;
    }
    *((void *)v12 + 2) = v13;
    double v40 = v12 + 32;
    uint64_t v41 = &v12[16 * v39 + 32];
    *(void *)uint64_t v41 = v14;
    *((void *)v41 + 1) = v10;
    if (v39)
    {
      while (1)
      {
        unint64_t v42 = v13 - 1;
        if (v13 >= 4)
        {
          unint64_t v47 = &v40[16 * v13];
          uint64_t v48 = *((void *)v47 - 8);
          uint64_t v49 = *((void *)v47 - 7);
          BOOL v53 = __OFSUB__(v49, v48);
          uint64_t v50 = v49 - v48;
          if (v53) {
            goto LABEL_120;
          }
          uint64_t v52 = *((void *)v47 - 6);
          uint64_t v51 = *((void *)v47 - 5);
          BOOL v53 = __OFSUB__(v51, v52);
          uint64_t v45 = v51 - v52;
          char v46 = v53;
          if (v53) {
            goto LABEL_121;
          }
          unint64_t v54 = v13 - 2;
          double v55 = &v40[16 * v13 - 32];
          uint64_t v57 = *(void *)v55;
          uint64_t v56 = *((void *)v55 + 1);
          BOOL v53 = __OFSUB__(v56, v57);
          uint64_t v58 = v56 - v57;
          if (v53) {
            goto LABEL_123;
          }
          BOOL v53 = __OFADD__(v45, v58);
          uint64_t v59 = v45 + v58;
          if (v53) {
            goto LABEL_126;
          }
          if (v59 >= v50)
          {
            double v77 = &v40[16 * v42];
            uint64_t v79 = *(void *)v77;
            uint64_t v78 = *((void *)v77 + 1);
            BOOL v53 = __OFSUB__(v78, v79);
            uint64_t v80 = v78 - v79;
            if (v53) {
              goto LABEL_130;
            }
            BOOL v70 = v45 < v80;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v71 = *((void *)v12 + 4);
            uint64_t v72 = *((void *)v12 + 5);
            BOOL v53 = __OFSUB__(v72, v71);
            uint64_t v64 = v72 - v71;
            char v65 = v53;
            goto LABEL_77;
          }
          uint64_t v44 = *((void *)v12 + 4);
          uint64_t v43 = *((void *)v12 + 5);
          BOOL v53 = __OFSUB__(v43, v44);
          uint64_t v45 = v43 - v44;
          char v46 = v53;
        }
        if (v46) {
          goto LABEL_122;
        }
        unint64_t v54 = v13 - 2;
        uint64_t v60 = &v40[16 * v13 - 32];
        uint64_t v62 = *(void *)v60;
        uint64_t v61 = *((void *)v60 + 1);
        BOOL v63 = __OFSUB__(v61, v62);
        uint64_t v64 = v61 - v62;
        char v65 = v63;
        if (v63) {
          goto LABEL_125;
        }
        unint64_t v66 = &v40[16 * v42];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        BOOL v53 = __OFSUB__(v67, v68);
        uint64_t v69 = v67 - v68;
        if (v53) {
          goto LABEL_128;
        }
        if (__OFADD__(v64, v69)) {
          goto LABEL_129;
        }
        if (v64 + v69 >= v45)
        {
          BOOL v70 = v45 < v69;
LABEL_83:
          if (v70) {
            unint64_t v42 = v54;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v65) {
          goto LABEL_124;
        }
        unint64_t v73 = &v40[16 * v42];
        uint64_t v75 = *(void *)v73;
        uint64_t v74 = *((void *)v73 + 1);
        BOOL v53 = __OFSUB__(v74, v75);
        uint64_t v76 = v74 - v75;
        if (v53) {
          goto LABEL_127;
        }
        if (v76 < v64) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v81 = v42 - 1;
        if (v42 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        double v82 = v12;
        double v83 = &v40[16 * v81];
        uint64_t v84 = *(void *)v83;
        uint64_t v85 = &v40[16 * v42];
        uint64_t v86 = *((void *)v85 + 1);
        sub_228B1A3EC((double *)(v11 + 32 * *(void *)v83), (double *)(v11 + 32 * *(void *)v85), v11 + 32 * v86, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v86 < v84) {
          goto LABEL_117;
        }
        if (v42 > *((void *)v82 + 2)) {
          goto LABEL_118;
        }
        *(void *)double v83 = v84;
        *(void *)&v40[16 * v81 + 8] = v86;
        unint64_t v87 = *((void *)v82 + 2);
        if (v42 >= v87) {
          goto LABEL_119;
        }
        double v12 = v82;
        unint64_t v13 = v87 - 1;
        memmove(&v40[16 * v42], v85 + 16, 16 * (v87 - 1 - v42));
        *((void *)v82 + 2) = v87 - 1;
        uint64_t v11 = v114;
        if (v87 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v112;
    uint64_t v3 = v113;
    if (v10 >= v113)
    {
      uint64_t v9 = v111;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_228BAD928();
  __break(1u);
  return result;
}

uint64_t sub_228B1A3EC(double *__src, double *a2, unint64_t a3, double *__dst)
{
  id v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 31;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 5;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 31;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 5;
  long long v28 = __src;
  long long v27 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[4 * v13] <= __dst) {
        memmove(__dst, a2, 32 * v13);
      }
      os_log_type_t v18 = &v4[4 * v13];
      long long v26 = v18;
      long long v28 = v6;
      if (v7 < v6 && v11 >= 32)
      {
        double v19 = (double *)(a3 - 32);
        double v20 = v6;
        while (1)
        {
          uint64_t v21 = v19 + 4;
          double v22 = *(v20 - 4);
          v20 -= 4;
          if (*(v18 - 4) >= v22)
          {
            long long v26 = v18 - 4;
            if (v21 < v18 || v19 >= v18 || v21 != v18)
            {
              long long v24 = *((_OWORD *)v18 - 1);
              *(_OWORD *)double v19 = *((_OWORD *)v18 - 2);
              *((_OWORD *)v19 + 1) = v24;
            }
            double v20 = v6;
            v18 -= 4;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v21 != v6 || v19 >= v6)
            {
              long long v23 = *((_OWORD *)v20 + 1);
              *(_OWORD *)double v19 = *(_OWORD *)v20;
              *((_OWORD *)v19 + 1) = v23;
            }
            long long v28 = v20;
            if (v20 <= v7) {
              goto LABEL_42;
            }
          }
          v19 -= 4;
          uint64_t v6 = v20;
          if (v18 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[4 * v10] <= __dst) {
      memmove(__dst, __src, 32 * v10);
    }
    uint64_t v14 = &v4[4 * v10];
    long long v26 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
          {
            long long v17 = *((_OWORD *)v4 + 1);
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
            *((_OWORD *)v7 + 1) = v17;
          }
          v4 += 4;
          long long v27 = v4;
          double v15 = v6;
        }
        else
        {
          double v15 = v6 + 4;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
          {
            long long v16 = *((_OWORD *)v6 + 1);
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
            *((_OWORD *)v7 + 1) = v16;
          }
        }
        v7 += 4;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      long long v28 = v7;
    }
LABEL_42:
    sub_228B1A764((void **)&v28, (const void **)&v27, &v26);
    return 1;
  }
  uint64_t result = sub_228BAD998();
  __break(1u);
  return result;
}

char *sub_228B1A668(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268292B30);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_228B1A764(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 31;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -32)
  {
    uint64_t result = (char *)sub_228BAD998();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
    {
      return (char *)memmove(result, v3, 32 * v7);
    }
  }
  return result;
}

char *sub_228B1A820(uint64_t a1)
{
  return sub_228B1A668(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_228B1A834(uint64_t a1)
{
  return sub_228B500A0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_228B1A848(void *a1, void *a2)
{
  if (a1 != (void *)1)
  {
  }
}

uint64_t sub_228B1A88C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_228B1A990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t result = swift_bridgeObjectRelease();
LABEL_33:
    char v27 = 1;
    double v5 = 0.0;
    double v7 = 0.0;
    double v11 = 0.0;
    double v12 = 0.0;
    goto LABEL_34;
  }
  uint64_t v28 = a1;
  swift_bridgeObjectRetain();
  sub_228B19C8C(&v28);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v28 + 16);
  if (!v3)
  {
    uint64_t result = swift_release();
    goto LABEL_33;
  }
  double v5 = *(double *)(v28 + 32);
  double v4 = *(double *)(v28 + 40);
  double v6 = fmax(v5 + *(double *)(v28 + 48), -INFINITY);
  double v7 = fmin(v4, INFINITY);
  double v8 = fmax(v4 + *(double *)(v28 + 56), -INFINITY);
  uint64_t v9 = v3 - 1;
  if (v9)
  {
    uint64_t v13 = (double *)(v28 + 88);
    int v14 = 1;
    double v15 = 0.0;
    double v16 = 0.0;
    do
    {
      double v17 = *(v13 - 3);
      double v18 = *(v13 - 2);
      double v19 = *v13;
      double v20 = v17 - v6;
      double v21 = -INFINITY;
      if ((v14 & 1) == 0) {
        double v21 = v16;
      }
      if (v21 < v20) {
        int v22 = 0;
      }
      else {
        int v22 = v14;
      }
      if (v21 < v20)
      {
        double v23 = *(v13 - 3);
      }
      else
      {
        double v20 = v16;
        double v23 = v15;
      }
      if (v6 < v17)
      {
        int v14 = v22;
        double v16 = v20;
        double v15 = v23;
      }
      double v24 = v17 + *(v13 - 1);
      if (v6 <= v24) {
        double v6 = v24;
      }
      if (v18 < v7) {
        double v7 = *(v13 - 2);
      }
      if (v8 <= v18 + v19) {
        double v8 = v18 + v19;
      }
      v13 += 4;
      --v9;
    }
    while (v9);
    uint64_t result = swift_release();
    double v11 = v6 - v5;
    double v12 = v8 - v7;
    if ((v14 & 1) == 0)
    {
      double v25 = *(double *)(MEMORY[0x263F10860] + 16);
      if (v25 - v11 < v16)
      {
        double v11 = v25 - v16;
        double v5 = v15;
      }
    }
  }
  else
  {
    uint64_t result = swift_release();
    double v11 = v6 - v5;
    double v12 = v8 - v7;
  }
  if (v5 == *MEMORY[0x263F10858] && v7 == *(double *)(MEMORY[0x263F10858] + 8)) {
    goto LABEL_33;
  }
  char v27 = 0;
LABEL_34:
  *(double *)a2 = v5;
  *(double *)(a2 + 8) = v7;
  *(double *)(a2 + 16) = v11;
  *(double *)(a2 + 24) = v12;
  *(unsigned char *)(a2 + 32) = v27;
  return result;
}

uint64_t sub_228B1AB60(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_228AD25BC(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Region(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Region(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_228B1AC48(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t sub_228B1AC50(uint64_t result, char a2)
{
  *(unsigned char *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Region()
{
  return &type metadata for Region;
}

uint64_t sub_228B1AC80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t sub_228B1ACBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + qword_2682928D0 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_228B784A0(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if (v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
    uint64_t v6 = sub_228BAD948();
    swift_release();
  }
  else
  {
    sub_228BAD9F8();
    uint64_t v6 = v5;
  }
  swift_release();
  uint64_t v7 = *(void *)(v2 + qword_2682928D8 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_228B784A0(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if (v8 < 0 || (v8 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
    unint64_t v9 = sub_228BAD948();
    swift_release();
  }
  else
  {
    sub_228BAD9F8();
    unint64_t v9 = v8;
  }
  swift_release();
  v65[0] = v6;
  sub_228B75330(v9);
  unint64_t v10 = v6;
  uint64_t v11 = *(void *)(v2 + qword_2682928E0 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_228B784A0(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if (v12 < 0 || (v12 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
    unint64_t v13 = sub_228BAD948();
    swift_release();
  }
  else
  {
    sub_228BAD9F8();
    unint64_t v13 = v12;
  }
  swift_release();
  v65[0] = v10;
  uint64_t result = sub_228B75330(v13);
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_228BAD958();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)((v65[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t v63 = a1;
  uint64_t v64 = v2;
  if (v15)
  {
    if (v15 < 1)
    {
      __break(1u);
      goto LABEL_104;
    }
    uint64_t v17 = 0;
    double v18 = (void *)MEMORY[0x263F8EE78];
    do
    {
      if ((v10 & 0xC000000000000001) != 0)
      {
        double v19 = (void *)MEMORY[0x22A6A6FA0](v17, v10);
      }
      else
      {
        double v19 = *(void **)(v10 + 8 * v17 + 32);
        swift_unknownObjectRetain();
      }
      objc_msgSend(v19, sel_coordinate);
      MKMapPoint v20 = MKMapPointForCoordinate(v66);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        double v18 = sub_228B77064(0, v18[2] + 1, 1, v18);
      }
      unint64_t v22 = v18[2];
      unint64_t v21 = v18[3];
      if (v22 >= v21 >> 1) {
        double v18 = sub_228B77064((void *)(v21 > 1), v22 + 1, 1, v18);
      }
      ++v17;
      void v18[2] = v22 + 1;
      double v23 = (MKMapPoint *)&v18[4 * v22];
      v23[2] = v20;
      v23[3].x = 0.0;
      v23[3].y = 0.0;
      swift_unknownObjectRelease();
    }
    while (v15 != v17);
  }
  else
  {
    double v18 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = v64;
  uint64_t v25 = *(void *)(v64 + qword_268292900 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_228B784A0(v25);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  v65[0] = v16;
  if ((v26 & 0x8000000000000000) == 0 && (v26 & 0x4000000000000000) == 0)
  {
    uint64_t v27 = *(void *)(v26 + 16);
    if (v27) {
      goto LABEL_28;
    }
LABEL_43:
    swift_release();
    unint64_t v31 = MEMORY[0x263F8EE78];
    goto LABEL_44;
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_228BAD958();
  uint64_t result = swift_release();
  if (!v27) {
    goto LABEL_43;
  }
LABEL_28:
  if (v27 < 1)
  {
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  for (uint64_t i = 0; i != v27; ++i)
  {
    if ((v26 & 0xC000000000000001) != 0) {
      id v29 = (id)MEMORY[0x22A6A6FA0](i, v26);
    }
    else {
      id v29 = *(id *)(v26 + 8 * i + 32);
    }
    uint64_t v30 = v29;
    if ((uint64_t)objc_msgSend(v29, sel_pointCount) < 1)
    {
    }
    else
    {
      sub_228BAD878();
      sub_228BAD8B8();
      sub_228BAD8C8();
      sub_228BAD888();
    }
  }
  swift_release();
  uint64_t v24 = v64;
  unint64_t v31 = v65[0];
  uint64_t v16 = MEMORY[0x263F8EE78];
LABEL_44:
  uint64_t v32 = *(void *)(v24 + qword_268292908 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_228B784A0(v32);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  v65[0] = v16;
  if ((v33 & 0x8000000000000000) == 0 && (v33 & 0x4000000000000000) == 0)
  {
    uint64_t v34 = *(void *)(v33 + 16);
    if (v34) {
      goto LABEL_47;
    }
LABEL_58:
    swift_release();
    uint64_t v38 = MEMORY[0x263F8EE78];
    goto LABEL_59;
  }
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_228BAD958();
  uint64_t result = swift_release();
  if (!v34) {
    goto LABEL_58;
  }
LABEL_47:
  if (v34 < 1)
  {
LABEL_105:
    __break(1u);
    return result;
  }
  for (uint64_t j = 0; j != v34; ++j)
  {
    if ((v33 & 0xC000000000000001) != 0) {
      id v36 = (id)MEMORY[0x22A6A6FA0](j, v33);
    }
    else {
      id v36 = *(id *)(v33 + 8 * j + 32);
    }
    long long v37 = v36;
    if ((uint64_t)objc_msgSend(v36, sel_pointCount) < 1)
    {
    }
    else
    {
      sub_228BAD878();
      sub_228BAD8B8();
      sub_228BAD8C8();
      sub_228BAD888();
    }
  }
  swift_release();
  uint64_t v38 = v65[0];
LABEL_59:
  swift_bridgeObjectRetain();
  if ((v31 & 0x8000000000000000) != 0 || (v31 & 0x4000000000000000) != 0) {
    goto LABEL_98;
  }
  sub_228BAD9F8();
  unint64_t v39 = v31;
LABEL_62:
  swift_release();
  swift_bridgeObjectRetain();
  if (v38 < 0 || (v38 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
    unint64_t v40 = sub_228BAD948();
    swift_release();
  }
  else
  {
    sub_228BAD9F8();
    unint64_t v40 = v38;
  }
  swift_release();
  v65[0] = v39;
  sub_228B75300(v40);
  uint64_t v41 = *(void *)(v64 + qword_268292910 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_228B784A0(v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if (v42 < 0 || (v42 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
    unint64_t v43 = sub_228BAD948();
    swift_release();
  }
  else
  {
    sub_228BAD9F8();
    unint64_t v43 = v42;
  }
  swift_release();
  v65[0] = v39;
  sub_228B75300(v43);
  if (v39 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_228BAD958();
    swift_bridgeObjectRelease();
    if (v44) {
      goto LABEL_70;
    }
  }
  else
  {
    uint64_t v44 = *(void *)((v65[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v44)
    {
LABEL_70:
      unint64_t v45 = 0;
      uint64_t v64 = v39 & 0xFFFFFFFFFFFFFF8;
      double v46 = *MEMORY[0x263F10860];
      double v47 = *(double *)(MEMORY[0x263F10860] + 16);
      double v48 = *MEMORY[0x263F10860] + v47;
      do
      {
        if ((v39 & 0xC000000000000001) != 0)
        {
          uint64_t v38 = MEMORY[0x22A6A6FA0](v45, v39);
          BOOL v49 = __OFADD__(v45++, 1);
          if (v49) {
            goto LABEL_96;
          }
        }
        else
        {
          if (v45 >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_97;
          }
          uint64_t v38 = *(void *)(v39 + 32 + 8 * v45);
          swift_unknownObjectRetain();
          BOOL v49 = __OFADD__(v45++, 1);
          if (v49)
          {
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __swift_instantiateConcreteTypeFromMangledName(&qword_268293FE0);
            unint64_t v39 = sub_228BAD948();
            swift_release();
            goto LABEL_62;
          }
        }
        objc_msgSend((id)v38, sel_boundingMapRect);
        double v52 = v51;
        uint64_t v54 = v53;
        double v55 = v50;
        uint64_t v57 = v56;
        double v58 = v51 + v50;
        if (v52 < -v47 || v47 < v58)
        {
          if (v47 < v50)
          {
            do
              double v55 = v55 - v47;
            while (v47 < v55);
            double v58 = v52 + v55;
          }
          while (v48 < v58)
          {
            double v52 = v52 - v47;
            double v58 = v55 + v52;
          }
          while (v58 < v46)
          {
            double v52 = v47 + v52;
            double v58 = v55 + v52;
          }
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v18 = sub_228B77064(0, v18[2] + 1, 1, v18);
        }
        unint64_t v61 = v18[2];
        unint64_t v60 = v18[3];
        if (v61 >= v60 >> 1) {
          double v18 = sub_228B77064((void *)(v60 > 1), v61 + 1, 1, v18);
        }
        void v18[2] = v61 + 1;
        uint64_t v62 = (double *)&v18[4 * v61];
        v62[4] = v52;
        *((void *)v62 + 5) = v54;
        v62[6] = v55;
        *((void *)v62 + 7) = v57;
        swift_unknownObjectRelease();
      }
      while (v45 != v44);
    }
  }
  swift_bridgeObjectRelease();
  sub_228B1A990((uint64_t)v18, (uint64_t)v65);
  return sub_228ACD8BC((uint64_t)v65, v63, (uint64_t *)&unk_268293010);
}

uint64_t sub_228B1B598(uint64_t a1)
{
  uint64_t result = sub_228B3C304(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  uint64_t v5 = (void *)sub_228B3C728(result, v3, 0, a1);
  id v6 = v5;
  return (uint64_t)v5;
}

uint64_t sub_228B1B608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_228B3C3B4(a1);
  if (v6) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v7 = type metadata accessor for UserAnnotationViewModel(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a2;
    uint64_t v11 = 1;
  }
  else
  {
    sub_228B3C43C(result, v5, a1, a2);
    uint64_t v12 = type metadata accessor for UserAnnotationViewModel(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a2;
    uint64_t v11 = 0;
  }

  return v8(v10, v11, 1, v9);
}

void sub_228B1B6EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = sub_228AFA864(a1, a2, a3, a4, a5);
  uint64_t v14 = sub_228AD25BC(0, (unint64_t *)&unk_268292FB0);
  uint64_t v15 = type metadata accessor for CustomAnnotationViewModel(0);
  uint64_t v16 = sub_228B4CEAC(&qword_268292780, 255, (void (*)(uint64_t))type metadata accessor for CustomAnnotationViewModel);
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  unint64_t v8 = sub_228B3C550(v6, KeyPath, (uint64_t)v18, &qword_268292788, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel);
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t v17 = MEMORY[0x263F8EE78];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_228BAD958();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x263F8EE78];
    goto LABEL_12;
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v9) {
    goto LABEL_11;
  }
LABEL_3:
  if (v9 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v10 = 0;
  do
  {
    if ((v8 & 0xC000000000000001) != 0) {
      MEMORY[0x22A6A6FA0](v10, v8);
    }
    else {
      id v11 = *(id *)(v8 + 8 * v10 + 32);
    }
    ++v10;
    sub_228BAD878();
    sub_228BAD8B8();
    sub_228BAD8C8();
    sub_228BAD888();
  }
  while (v9 != v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v17;
LABEL_12:
  swift_bridgeObjectRetain();
  if (v12 < 0 || (v12 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
    sub_228BAD948();
    swift_release();
  }
  else
  {
    sub_228BAD9F8();
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
  unint64_t v13 = (void *)sub_228BAD498();
  objc_msgSend(a1, sel_addAnnotations_, v13, v14, v15, &off_26DD22238, v16);
  swift_bridgeObjectRelease();
}

void sub_228B1B980(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = sub_228AF8480(a1, a2, a3, a4, a5);
  uint64_t v14 = sub_228AD25BC(0, (unint64_t *)&unk_268292FB0);
  uint64_t v15 = type metadata accessor for MarkerAnnotationViewModel(0);
  uint64_t v16 = sub_228B4CEAC((unint64_t *)&unk_268292740, 255, (void (*)(uint64_t))type metadata accessor for MarkerAnnotationViewModel);
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  unint64_t v8 = sub_228B3C550(v6, KeyPath, (uint64_t)v18, &qword_268293FB0, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel);
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t v17 = MEMORY[0x263F8EE78];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_228BAD958();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x263F8EE78];
    goto LABEL_12;
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v9) {
    goto LABEL_11;
  }
LABEL_3:
  if (v9 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v10 = 0;
  do
  {
    if ((v8 & 0xC000000000000001) != 0) {
      MEMORY[0x22A6A6FA0](v10, v8);
    }
    else {
      id v11 = *(id *)(v8 + 8 * v10 + 32);
    }
    ++v10;
    sub_228BAD878();
    sub_228BAD8B8();
    sub_228BAD8C8();
    sub_228BAD888();
  }
  while (v9 != v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v17;
LABEL_12:
  swift_bridgeObjectRetain();
  if (v12 < 0 || (v12 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
    sub_228BAD948();
    swift_release();
  }
  else
  {
    sub_228BAD9F8();
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
  unint64_t v13 = (void *)sub_228BAD498();
  objc_msgSend(a1, sel_addAnnotations_, v13, v14, v15, &off_26DD22238, v16);
  swift_bridgeObjectRelease();
}

void sub_228B1BC14(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = sub_228AF65A0(a1, a2, a3, a4, a5);
  uint64_t v12 = sub_228AD25BC(0, (unint64_t *)&unk_268292FB0);
  uint64_t v13 = type metadata accessor for UserAnnotationViewModel(0);
  uint64_t v14 = sub_228B4CEAC(&qword_2682926F0, 255, (void (*)(uint64_t))type metadata accessor for UserAnnotationViewModel);
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  unint64_t v8 = sub_228B3C550(v6, KeyPath, (uint64_t)v15, &qword_2682926F8, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel);
  swift_bridgeObjectRelease();
  swift_release_n();
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_228BAD958();
    swift_bridgeObjectRelease();
    if (!v9) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v9) {
      goto LABEL_9;
    }
  }
  if (v9 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v9; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0)
    {
      MEMORY[0x22A6A6FA0](i, v8);
      swift_unknownObjectRelease();
    }
  }
LABEL_9:
  swift_bridgeObjectRelease();
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
    sub_228BAD948();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
  id v11 = (void *)sub_228BAD498();
  objc_msgSend(a1, sel_addAnnotations_, v11, v12, v13, &off_26DD22238, v14);
  swift_bridgeObjectRelease();
}

void sub_228B1BE28(void *a1, void *a2, void *a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292700);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UserAnnotationViewModel(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    id v20 = a3;
    if (objc_msgSend(v20, sel_showsUserLocation) && (uint64_t v14 = *(void **)(v3 + qword_2682928F8)) != 0)
    {
      sub_228B1B608(*(void *)(v3 + qword_2682928E8 + 16), (uint64_t)v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      {

        sub_228AC1A50((uint64_t)v9, &qword_268292700);
      }
      else
      {
        sub_228B4D404((uint64_t)v9, (uint64_t)v13, type metadata accessor for UserAnnotationViewModel);
        v21[0] = a1;
        v21[1] = a2;
        id v16 = a2;
        uint64_t v17 = v14;
        id v18 = a1;
        sub_228B138A4(v17, (uint64_t)v21);

        sub_228B3D868((uint64_t)v13, type metadata accessor for UserAnnotationViewModel);
      }
    }
    else
    {
      id v15 = v20;
    }
  }
}

id sub_228B1C06C(uint64_t a1, id a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292700);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  unint64_t v102 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v109 = (char *)&v95 - v9;
  uint64_t v103 = type metadata accessor for UserAnnotationViewModel(0);
  uint64_t v108 = *(void *)(v103 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v103);
  long long v97 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  long long v98 = (char *)&v95 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292790);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v107 = (uint64_t)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for CustomAnnotationViewModel(0);
  uint64_t v15 = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  uint64_t v101 = (uint64_t)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292750);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  id v20 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  unint64_t v22 = (char *)&v95 - v21;
  uint64_t v23 = type metadata accessor for MarkerAnnotationViewModel(0);
  uint64_t v24 = *(void **)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v100 = (uint64_t)&v95 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v95 - v27;
  type metadata accessor for MapBridgingMarker();
  uint64_t v110 = swift_dynamicCastClass();
  if (v110)
  {
    uint64_t v99 = v2;
    uint64_t v29 = *(void *)(v2 + qword_2682928E0 + 16);
    uint64_t v30 = *(void *)(v29 + 16);
    id v104 = a2;
    uint64_t v105 = a1;
    uint64_t v96 = v15;
    if (v30)
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v31 = sub_228AD1AD4(v110);
      if (v32)
      {
        sub_228B4D098(*(void *)(v29 + 56) + v24[9] * v31, (uint64_t)v22, type metadata accessor for MarkerAnnotationViewModel);
        uint64_t v33 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v24[7];
        v33(v22, 0, 1, v23);
      }
      else
      {
        uint64_t v33 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v24[7];
        v33(v22, 1, 1, v23);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v33 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v24[7];
      v33(v22, 1, 1, v23);
      swift_unknownObjectRetain();
    }
    uint64_t v34 = (unsigned int (*)(char *, uint64_t, uint64_t))v24[6];
    if (v34(v22, 1, v23) != 1)
    {
      sub_228B4D404((uint64_t)v22, (uint64_t)v28, type metadata accessor for MarkerAnnotationViewModel);
      if (v104)
      {
        id v40 = v104;
        uint64_t v41 = (void *)sub_228BAD3D8();
        id v42 = objc_msgSend(v40, sel_dequeueReusableAnnotationViewWithIdentifier_forAnnotation_, v41, v110);

        self;
        id v43 = (id)swift_dynamicCastObjCClassUnconditional();
      }
      else
      {
        sub_228AD25BC(0, &qword_268293830);
        id v44 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
        swift_unknownObjectRetain();
        unint64_t v45 = (void *)sub_228BAD3D8();
        id v43 = objc_msgSend(v44, sel_initWithAnnotation_reuseIdentifier_, v110, v45);

        swift_unknownObjectRelease();
      }
      sub_228B13608(v43, 0);
      swift_unknownObjectRelease();
      double v46 = type metadata accessor for MarkerAnnotationViewModel;
      uint64_t v47 = (uint64_t)v28;
      goto LABEL_43;
    }
    swift_unknownObjectRelease();
    sub_228AC1A50((uint64_t)v22, &qword_268292750);
    uint64_t v35 = *(void *)(v99 + qword_2682928D8 + 16);
    if (*(void *)(v35 + 16))
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v36 = sub_228AD1AD4(v110);
      if (v37)
      {
        sub_228B4D098(*(void *)(v35 + 56) + v24[9] * v36, (uint64_t)v20, type metadata accessor for MarkerAnnotationViewModel);
        uint64_t v38 = v20;
        uint64_t v39 = 0;
      }
      else
      {
        uint64_t v38 = v20;
        uint64_t v39 = 1;
      }
      v33(v38, v39, 1, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v33(v20, 1, 1, v23);
      swift_unknownObjectRetain();
    }
    a2 = v104;
    if (v34(v20, 1, v23) != 1)
    {
      uint64_t v60 = v100;
      sub_228B4D404((uint64_t)v20, v100, type metadata accessor for MarkerAnnotationViewModel);
      if (a2)
      {
        id v61 = a2;
        uint64_t v62 = (void *)sub_228BAD3D8();
        id v63 = objc_msgSend(v61, sel_dequeueReusableAnnotationViewWithIdentifier_forAnnotation_, v62, v110);

        self;
        id v43 = (id)swift_dynamicCastObjCClassUnconditional();
      }
      else
      {
        sub_228AD25BC(0, &qword_268293830);
        id v77 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
        swift_unknownObjectRetain();
        uint64_t v78 = (void *)sub_228BAD3D8();
        id v43 = objc_msgSend(v77, sel_initWithAnnotation_reuseIdentifier_, v110, v78);

        swift_unknownObjectRelease();
      }
      sub_228B13608(v43, 0);
      swift_unknownObjectRelease();
      double v46 = type metadata accessor for MarkerAnnotationViewModel;
      uint64_t v47 = v60;
      goto LABEL_43;
    }
    swift_unknownObjectRelease();
    sub_228AC1A50((uint64_t)v20, &qword_268292750);
    uint64_t v3 = v99;
    uint64_t v15 = v96;
  }
  type metadata accessor for MapBridgingCustomAnnotation();
  uint64_t v48 = swift_dynamicCastClass();
  uint64_t v49 = v108;
  uint64_t v50 = (uint64_t)v109;
  if (v48)
  {
    uint64_t v51 = v48;
    uint64_t v52 = *(void *)(v3 + qword_2682928D0 + 16);
    if (*(void *)(v52 + 16))
    {
      uint64_t v53 = v108;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v54 = sub_228AD1B28(v51);
      if (v55)
      {
        uint64_t v56 = v107;
        sub_228B4D098(*(void *)(v52 + 56) + *(void *)(v15 + 72) * v54, v107, type metadata accessor for CustomAnnotationViewModel);
        uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
        uint64_t v58 = v56;
        uint64_t v59 = 0;
      }
      else
      {
        uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
        uint64_t v56 = v107;
        uint64_t v58 = v107;
        uint64_t v59 = 1;
      }
      uint64_t v64 = v106;
      v57(v58, v59, 1, v106);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v49 = v53;
      uint64_t v50 = (uint64_t)v109;
    }
    else
    {
      uint64_t v64 = v106;
      uint64_t v56 = v107;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v107, 1, 1, v106);
      swift_unknownObjectRetain();
    }
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v56, 1, v64) == 1)
    {
      swift_unknownObjectRelease();
      sub_228AC1A50(v56, &qword_268292790);
      goto LABEL_32;
    }
    uint64_t v72 = v56;
    uint64_t v73 = v101;
    sub_228B4D404(v72, v101, type metadata accessor for CustomAnnotationViewModel);
    if (a2)
    {
      id v74 = a2;
      uint64_t v75 = (void *)sub_228BAD3D8();
      id v76 = objc_msgSend(v74, sel_dequeueReusableAnnotationViewWithIdentifier_forAnnotation_, v75, v51);

      type metadata accessor for SwiftUIAnnotationView();
      id v43 = (id)swift_dynamicCastClassUnconditional();
    }
    else
    {
      type metadata accessor for SwiftUIAnnotationView();
      id v79 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      swift_unknownObjectRetain();
      uint64_t v80 = (void *)sub_228BAD3D8();
      id v43 = objc_msgSend(v79, sel_initWithAnnotation_reuseIdentifier_, v51, v80);

      swift_unknownObjectRelease();
    }
    sub_228B13344((char *)v43, 0);
    swift_unknownObjectRelease();
    double v46 = type metadata accessor for CustomAnnotationViewModel;
    uint64_t v47 = v73;
LABEL_43:
    sub_228B3D868(v47, v46);
    return v43;
  }
LABEL_32:
  self;
  if (swift_dynamicCastObjCClass())
  {
    uint64_t v65 = *(void *)(v3 + qword_2682928F0 + 16);
    uint64_t v66 = sub_228B1B598(v65);
    uint64_t v67 = (uint64_t)v102;
    if (v66)
    {
      uint64_t v68 = (void *)v66;
      if (*(void *)(v65 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v69 = sub_228AD1A80((uint64_t)v68);
        if (v70)
        {
          sub_228B4D098(*(void *)(v65 + 56) + *(void *)(v49 + 72) * v69, v50, type metadata accessor for UserAnnotationViewModel);
          uint64_t v71 = 0;
        }
        else
        {
          uint64_t v71 = 1;
        }
        uint64_t v81 = v103;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v50, v71, 1, v103);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v50, 1, v81) != 1)
        {
          uint64_t v87 = v50;
          uint64_t v88 = (uint64_t)v98;
          goto LABEL_59;
        }
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v50, 1, 1, v103);
      }

      sub_228AC1A50(v50, &qword_268292700);
    }
    uint64_t v82 = *(void *)(v3 + qword_2682928E8 + 16);
    uint64_t v83 = sub_228B1B598(v82);
    if (v83)
    {
      uint64_t v68 = (void *)v83;
      if (!*(void *)(v82 + 16))
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v67, 1, 1, v103);
LABEL_57:

        sub_228AC1A50(v67, &qword_268292700);
        return 0;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v84 = sub_228AD1A80((uint64_t)v68);
      if (v85)
      {
        sub_228B4D098(*(void *)(v82 + 56) + *(void *)(v49 + 72) * v84, v67, type metadata accessor for UserAnnotationViewModel);
        uint64_t v86 = 0;
      }
      else
      {
        uint64_t v86 = 1;
      }
      uint64_t v89 = v103;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v67, v86, 1, v103);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v67, 1, v89) == 1) {
        goto LABEL_57;
      }
      uint64_t v87 = v67;
      uint64_t v88 = (uint64_t)v97;
LABEL_59:
      sub_228B4D404(v87, v88, type metadata accessor for UserAnnotationViewModel);
      uint64_t v90 = sub_228B139D8(v68, a2);
      uint64_t v91 = qword_2682928F8;
      uint64_t v92 = *(void **)(v3 + qword_2682928F8);
      *(void *)(v3 + qword_2682928F8) = v90;

      sub_228B3D868(v88, type metadata accessor for UserAnnotationViewModel);
      id v43 = *(id *)(v3 + v91);
      id v93 = v43;
      return v43;
    }
  }
  return 0;
}

uint64_t sub_228B1CE4C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v10 = *a1;
  uint64_t v17 = *a3;
  sub_228BAD178();
  *(void *)(a8 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
  *(void *)(a8 + 48) = 0;
  *(void *)(a8 + 32) = 0;
  *(void *)(a8 + 56) = 1;
  *(_OWORD *)(a8 + 64) = 0u;
  *(_OWORD *)(a8 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = 0u;
  *(unsigned char *)(a8 + 96) = 0;
  uint64_t v11 = (int *)type metadata accessor for MapContentView();
  uint64_t v12 = a8 + v11[15];
  type metadata accessor for MapSelectionManagerBox();
  uint64_t v13 = sub_228BAD218();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  sub_228B3E644(v23, v24, 0, 0);
  uint64_t v14 = a8 + v11[16];
  *(void *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 8) = 1;
  *(void *)(a8 + 8) = 0;
  *(void *)(a8 + 16) = 0;
  *(void *)a8 = v10;
  *(unsigned char *)(a8 + 24) = 0;
  sub_228B3E5E0(a2, a8 + 32, qword_268292B80);
  *(void *)(a8 + 104) = v17;
  uint64_t v15 = sub_228BAD718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v12, a4, v15);
  *(void *)uint64_t v14 = a5;
  *(unsigned char *)(v14 + 8) = a6 & 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32))(a8 + v11[17], a7, a9);
}

uint64_t sub_228B1D064@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v10 = a1[1];
  uint64_t v17 = a1[2];
  uint64_t v18 = *a1;
  uint64_t v19 = *a3;
  sub_228BAD178();
  *(void *)a8 = v25;
  *(void *)(a8 + 8) = v26;
  *(void *)(a8 + 16) = 0;
  *(unsigned char *)(a8 + 24) = 0;
  *(void *)(a8 + 32) = 0;
  *(void *)(a8 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
  *(void *)(a8 + 48) = 0;
  *(void *)(a8 + 56) = 1;
  *(_OWORD *)(a8 + 64) = 0u;
  *(_OWORD *)(a8 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = 0u;
  *(unsigned char *)(a8 + 96) = 0;
  uint64_t v11 = (int *)type metadata accessor for MapContentView();
  uint64_t v12 = a8 + v11[15];
  type metadata accessor for MapSelectionManagerBox();
  uint64_t v13 = sub_228BAD218();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = a8 + v11[16];
  *(void *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 8) = 1;
  if (v10)
  {
    sub_228B3E644(v25, v26, 0, 0);
    *(void *)a8 = v18;
    *(void *)(a8 + 8) = v10;
    *(void *)(a8 + 16) = v17;
    *(unsigned char *)(a8 + 24) = 1;
  }
  sub_228B3E5E0(a2, a8 + 32, qword_268292B80);
  *(void *)(a8 + 104) = v19;
  uint64_t v15 = sub_228BAD718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v12, a4, v15);
  *(void *)uint64_t v14 = a5;
  *(unsigned char *)(v14 + 8) = a6 & 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32))(a8 + v11[17], a7, a9);
}

uint64_t sub_228B1D2A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v10 = *a1;
  uint64_t v17 = *a3;
  sub_228BAD178();
  *(void *)(a8 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
  *(void *)(a8 + 48) = 0;
  *(void *)(a8 + 32) = 0;
  *(void *)(a8 + 56) = 1;
  *(_OWORD *)(a8 + 64) = 0u;
  *(_OWORD *)(a8 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = 0u;
  *(unsigned char *)(a8 + 96) = 0;
  uint64_t v11 = (int *)type metadata accessor for MapSelectableContentView();
  uint64_t v12 = a8 + v11[15];
  type metadata accessor for MapSelectionManagerBox();
  uint64_t v13 = sub_228BAD218();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  sub_228B3E644(v23, v24, 0, 0);
  uint64_t v14 = a8 + v11[16];
  *(void *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 8) = 1;
  *(void *)(a8 + 8) = 0;
  *(void *)(a8 + 16) = 0;
  *(void *)a8 = v10;
  *(unsigned char *)(a8 + 24) = 0;
  sub_228B3E5E0(a2, a8 + 32, qword_268292B80);
  *(void *)(a8 + 104) = v17;
  uint64_t v15 = sub_228BAD718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v12, a4, v15);
  *(void *)uint64_t v14 = a5;
  *(unsigned char *)(v14 + 8) = a6 & 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32))(a8 + v11[17], a7, a9);
}

uint64_t sub_228B1D4AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v10 = a1[1];
  uint64_t v17 = a1[2];
  uint64_t v18 = *a1;
  uint64_t v19 = *a3;
  sub_228BAD178();
  *(void *)a8 = v25;
  *(void *)(a8 + 8) = v26;
  *(void *)(a8 + 16) = 0;
  *(unsigned char *)(a8 + 24) = 0;
  *(void *)(a8 + 32) = 0;
  *(void *)(a8 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
  *(void *)(a8 + 48) = 0;
  *(void *)(a8 + 56) = 1;
  *(_OWORD *)(a8 + 64) = 0u;
  *(_OWORD *)(a8 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = 0u;
  *(unsigned char *)(a8 + 96) = 0;
  uint64_t v11 = (int *)type metadata accessor for MapSelectableContentView();
  uint64_t v12 = a8 + v11[15];
  type metadata accessor for MapSelectionManagerBox();
  uint64_t v13 = sub_228BAD218();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = a8 + v11[16];
  *(void *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 8) = 1;
  if (v10)
  {
    sub_228B3E644(v25, v26, 0, 0);
    *(void *)a8 = v18;
    *(void *)(a8 + 8) = v10;
    *(void *)(a8 + 16) = v17;
    *(unsigned char *)(a8 + 24) = 1;
  }
  sub_228B3E5E0(a2, a8 + 32, qword_268292B80);
  *(void *)(a8 + 104) = v19;
  uint64_t v15 = sub_228BAD718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v12, a4, v15);
  *(void *)uint64_t v14 = a5;
  *(unsigned char *)(v14 + 8) = a6 & 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32))(a8 + v11[17], a7, a9);
}

uint64_t MapSelectableContentView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = a1;
  uint64_t v38 = a2;
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v32 = v4;
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  char v37 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v5 + 16);
  uint64_t v8 = *(void *)(v5 + 32);
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v40 = v7;
  uint64_t v41 = v7;
  uint64_t v42 = v9;
  uint64_t v43 = v8;
  uint64_t v10 = v9;
  uint64_t v35 = v8;
  uint64_t v36 = v9;
  uint64_t v11 = v8;
  type metadata accessor for MapSelectionManagerBox();
  sub_228BAD218();
  uint64_t v12 = sub_228BAD718();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v33 = *(void *)(v3 + 40);
  uint64_t v40 = v7;
  uint64_t v41 = v7;
  uint64_t v42 = v4;
  uint64_t v43 = v10;
  uint64_t v44 = v11;
  uint64_t v45 = v33;
  uint64_t v16 = type metadata accessor for _MapContentView();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  id v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  unint64_t v22 = (char *)&v32 - v21;
  sub_228B1DBF4();
  long long v46 = v48;
  uint64_t v47 = v49;
  sub_228AD2708(v2 + 32, (uint64_t)&v40, qword_268292B80);
  uint64_t v39 = *(void *)(v2 + 104);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v2 + *(int *)(v3 + 60), v12);
  uint64_t v23 = *(int *)(v3 + 68);
  uint64_t v24 = v2 + *(int *)(v3 + 64);
  uint64_t v25 = *(void *)v24;
  LOBYTE(v3) = *(unsigned char *)(v24 + 8);
  uint64_t v26 = v2 + v23;
  uint64_t v27 = (uint64_t)v37;
  uint64_t v28 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v37, v26, v32);
  sub_228B1DA84((uint64_t)&v46, (uint64_t)&v40, &v39, (uint64_t)v15, v25, v3, v27, (uint64_t)v20, v7, v28);
  swift_getWitnessTable();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v29(v22, v20, v16);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v17 + 8);
  v30(v20, v16);
  v29(v38, v22, v16);
  return ((uint64_t (*)(char *, uint64_t))v30)(v22, v16);
}

uint64_t type metadata accessor for _MapContentView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_228B1DA84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *a3;
  *(_OWORD *)a8 = *(_OWORD *)a1;
  *(void *)(a8 + 16) = v13;
  sub_228ACD8BC(a2, a8 + 24, qword_268292B80);
  *(void *)(a8 + 96) = v14;
  uint64_t v15 = (int *)type metadata accessor for _MapContentView();
  uint64_t v16 = a8 + v15[19];
  type metadata accessor for MapSelectionManagerBox();
  sub_228BAD218();
  uint64_t v17 = sub_228BAD718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a4, v17);
  uint64_t v18 = a8 + v15[20];
  *(void *)uint64_t v18 = a5;
  *(unsigned char *)(v18 + 8) = a6 & 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(a8 + v15[21], a7, a10);
}

uint64_t sub_228B1DBF4()
{
  if (*(unsigned char *)(v0 + 24))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268292F68);
    return sub_228BAD1F8();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_268293020);
    return sub_228BAD1A8();
  }
}

uint64_t MapContentView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = a1;
  uint64_t v38 = a2;
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v33 = v4;
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v36 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(_UNKNOWN ***)(v5 + 32);
  uint64_t v40 = *(void *)(v5 + 16);
  uint64_t v41 = MEMORY[0x263F8E628];
  uint64_t v8 = v40;
  uint64_t v35 = v40;
  uint64_t v9 = MEMORY[0x263F8E628];
  uint64_t v42 = v7;
  uint64_t v43 = &protocol witness table for Never;
  uint64_t v10 = v7;
  uint64_t v34 = v7;
  type metadata accessor for MapSelectionManagerBox();
  sub_228BAD218();
  uint64_t v11 = sub_228BAD718();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = *(void *)(v3 + 40);
  uint64_t v40 = v8;
  uint64_t v41 = v9;
  uint64_t v42 = (_UNKNOWN **)v4;
  uint64_t v43 = v10;
  uint64_t v44 = &protocol witness table for Never;
  uint64_t v45 = v15;
  uint64_t v16 = type metadata accessor for _MapContentView();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  id v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  unint64_t v22 = (char *)&v32 - v21;
  sub_228B1DBF4();
  long long v46 = v48;
  uint64_t v47 = v49;
  sub_228AD2708(v2 + 32, (uint64_t)&v40, qword_268292B80);
  uint64_t v39 = *(void *)(v2 + 104);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v2 + *(int *)(v3 + 60), v11);
  uint64_t v23 = *(int *)(v3 + 68);
  uint64_t v24 = v2 + *(int *)(v3 + 64);
  uint64_t v25 = *(void *)v24;
  LOBYTE(v3) = *(unsigned char *)(v24 + 8);
  uint64_t v26 = v2 + v23;
  uint64_t v27 = (uint64_t)v36;
  uint64_t v28 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v36, v26, v33);
  sub_228B1DA84((uint64_t)&v46, (uint64_t)&v40, &v39, (uint64_t)v14, v25, v3, v27, (uint64_t)v20, MEMORY[0x263F8E628], v28);
  swift_getWitnessTable();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v29(v22, v20, v16);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v17 + 8);
  v30(v20, v16);
  v29(v38, v22, v16);
  return ((uint64_t (*)(char *, uint64_t))v30)(v22, v16);
}

uint64_t sub_228B1E010()
{
  return sub_228B1E040();
}

uint64_t sub_228B1E028()
{
  return sub_228B1E040();
}

uint64_t sub_228B1E040()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_228B1E078()
{
  type metadata accessor for MapSelectionManagerBox();
  sub_228BAD218();
  uint64_t result = sub_228BAD718();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_228B1E1A0(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = (unint64_t)a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6 & 0xF8 | 7;
  uint64_t v8 = ((v6 & 0xF8) + 23) & ~v7;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v9 = *(void *)(v5 + 64);
  }
  else {
    size_t v9 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v10 = 8;
  if (v9 > 8) {
    uint64_t v10 = v9;
  }
  uint64_t v11 = v8 | 1;
  uint64_t v76 = v10;
  size_t v12 = (v8 | 1) + v10;
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  unint64_t v15 = ((v14 + 9 + ((v12 + (((v6 & 0xF8) + 119) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v14)
      + *(void *)(v13 + 64);
  int v16 = (*(_DWORD *)(v13 + 80) | v6) & 0x100000;
  if ((v14 | v7) == 7 && v16 == 0 && v15 <= 0x18)
  {
    unsigned int v20 = *(unsigned __int8 *)(a2 + 24);
    if (v20 >= 2) {
      unsigned int v20 = *(_DWORD *)a2 + 2;
    }
    int v70 = *(_DWORD *)(v5 + 84);
    uint64_t v72 = v14 + 9;
    uint64_t v73 = v11;
    uint64_t v74 = *(void *)(*(void *)(a3 + 24) - 8);
    uint64_t v75 = *(void *)(a3 + 24);
    unint64_t v71 = *(void *)(v5 + 64);
    uint64_t v68 = *(void *)(*(void *)(a3 + 16) - 8);
    uint64_t v69 = *(void *)(a3 + 16);
    if (v20 == 1)
    {
      uint64_t v21 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v21;
      unint64_t v22 = *(void *)(a2 + 16);
      swift_retain();
      swift_retain();
      sub_228B0596C(v22);
      *(void *)(v4 + 16) = v22;
      char v23 = 1;
    }
    else
    {
      uint64_t v24 = *(void *)a2;
      sub_228B0596C(*(void *)a2);
      uint64_t v25 = *(void *)(a2 + 8);
      *(void *)unint64_t v4 = v24;
      *(void *)(v4 + 8) = v25;
      swift_retain();
      char v23 = 0;
    }
    uint64_t v26 = ~v7;
    *(unsigned char *)(v4 + 24) = v23;
    unint64_t v27 = v4 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v28 = (_OWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 32);
    unint64_t v29 = a2 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (a2 & 0xFFFFFFFFFFFFFFF8) + 32;
    unint64_t v31 = *(void *)(v29 + 56);
    LODWORD(v32) = -1;
    if (v31 < 0xFFFFFFFF) {
      uint64_t v32 = *(void *)(v29 + 56);
    }
    if ((int)v32 - 1 < 0)
    {
      if (v31)
      {
        *(void *)((v4 & 0xFFFFFFFFFFFFFFF8) + 56) = v31;
        *(void *)((v4 & 0xFFFFFFFFFFFFFFF8) + 64) = *(void *)(v30 + 32);
        (**(void (***)(unint64_t, unint64_t))(v31 - 8))((v4 & 0xFFFFFFFFFFFFFFF8) + 32, v30);
      }
      else
      {
        long long v36 = *(_OWORD *)v30;
        long long v37 = *(_OWORD *)(v30 + 16);
        *(void *)((v4 & 0xFFFFFFFFFFFFFFF8) + 64) = *(void *)(v30 + 32);
        *uint64_t v28 = v36;
        *(_OWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 48) = v37;
      }
      uint64_t v38 = *(void *)(v30 + 40);
      *(unsigned char *)((v4 & 0xFFFFFFFFFFFFFFF8) + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(v30 + 48);
      *(void *)((v4 & 0xFFFFFFFFFFFFFFF8) + 72) = v38;
      uint64_t v39 = *(void *)(v30 + 56);
      *(unsigned char *)((v4 & 0xFFFFFFFFFFFFFFF8) + 96) = *(unsigned char *)(v30 + 64);
      *(void *)((v4 & 0xFFFFFFFFFFFFFFF8) + 88) = v39;
    }
    else
    {
      *uint64_t v28 = *(_OWORD *)v30;
      long long v33 = *(_OWORD *)(v30 + 16);
      long long v34 = *(_OWORD *)(v30 + 32);
      long long v35 = *(_OWORD *)(v30 + 48);
      *(unsigned char *)((v4 & 0xFFFFFFFFFFFFFFF8) + 96) = *(unsigned char *)(v30 + 64);
      *(_OWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 64) = v34;
      *(_OWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v35;
      *(_OWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 48) = v33;
    }
    uint64_t v40 = ~v14;
    *(void *)(v27 + 104) = *(void *)(v29 + 104);
    uint64_t v41 = (v27 + v7 + 112) & v26;
    uint64_t v42 = (v29 + v7 + 112) & v26;
    uint64_t v43 = (void *)((v42 + 15) & 0xFFFFFFFFFFFFFFF8);
    if (*v43 < 0xFFFFFFFFuLL)
    {
      memcpy((void *)((v27 + v7 + 112) & v26), (const void *)((v29 + v7 + 112) & v26), v12);
      uint64_t v52 = v74;
      uint64_t v51 = v75;
      uint64_t v54 = v72;
      uint64_t v53 = v73;
      uint64_t v55 = v76;
LABEL_61:
      uint64_t v63 = v53 + v55;
      unint64_t v64 = ((v41 | 7) + v63) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v65 = ((v42 | 7) + v63) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v66 = *(void *)v65;
      *(unsigned char *)(v64 + 8) = *(unsigned char *)(v65 + 8);
      *(void *)unint64_t v64 = v66;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v52 + 16))((v54 + v64) & v40, (v54 + v65) & v40, v51);
      return v4;
    }
    *(void *)uint64_t v41 = *(void *)v42;
    uint64_t v44 = (void *)((v41 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v44 = *v43;
    uint64_t v45 = (void *)(((unint64_t)v44 + v7 + 8) & v26);
    long long v46 = (unsigned __int8 *)(((unint64_t)v43 + v7 + 8) & v26);
    unsigned int v47 = v46[v76];
    swift_retain();
    swift_retain();
    if (v47 < 3)
    {
      unint64_t v49 = v71;
    }
    else
    {
      if (v76 <= 3) {
        uint64_t v48 = v76;
      }
      else {
        uint64_t v48 = 4;
      }
      unint64_t v49 = v71;
      switch(v48)
      {
        case 1:
          int v50 = *v46;
          goto LABEL_40;
        case 2:
          int v50 = *(unsigned __int16 *)v46;
          goto LABEL_40;
        case 3:
          int v50 = *(unsigned __int16 *)v46 | (v46[2] << 16);
          goto LABEL_40;
        case 4:
          int v50 = *(_DWORD *)v46;
LABEL_40:
          int v56 = (v50 | ((v47 - 3) << (8 * v76))) + 3;
          unsigned int v57 = v50 + 3;
          if (v76 >= 4) {
            unsigned int v47 = v57;
          }
          else {
            unsigned int v47 = v56;
          }
          break;
        default:
          break;
      }
    }
    if (v47 == 2)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v68 + 48))(v46, 1, v69))
      {
        uint64_t v58 = v45;
        memcpy(v45, v46, v9);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v68 + 16))(v45, v46, v69);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v45, 0, 1, v69);
        uint64_t v58 = v45;
      }
      char v59 = 2;
    }
    else
    {
      if (v47 != 1)
      {
        uint64_t v60 = *(void **)v46;
        void *v45 = *(void *)v46;
        *((unsigned char *)v45 + v76) = 0;
        id v61 = v60;
LABEL_55:
        uint64_t v52 = v74;
        uint64_t v51 = v75;
        uint64_t v54 = v72;
        uint64_t v53 = v73;
        uint64_t v55 = 8;
        if (v49 > 8) {
          uint64_t v55 = v49;
        }
        uint64_t v62 = 8;
        if (v49 + 1 > 8) {
          uint64_t v62 = v49 + 1;
        }
        if (!v70) {
          uint64_t v55 = v62;
        }
        goto LABEL_61;
      }
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v68 + 48))(v46, 1, v69))
      {
        uint64_t v58 = v45;
        memcpy(v45, v46, v9);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v68 + 16))(v45, v46, v69);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v45, 0, 1, v69);
        uint64_t v58 = v45;
      }
      char v59 = 1;
    }
    *((unsigned char *)v58 + v76) = v59;
    goto LABEL_55;
  }
  unint64_t v19 = *(void *)a2;
  *(void *)unint64_t v4 = *(void *)a2;
  unint64_t v4 = v19 + (((v14 | v7) + 16) & ~(v14 | v7));
  swift_retain();
  return v4;
}

uint64_t sub_228B1E75C(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a1 + 2;
  }
  if (v4 == 1)
  {
    swift_release();
    swift_release();
    sub_228B05A34(*(void *)(a1 + 16));
  }
  else
  {
    sub_228B05A34(*(void *)a1);
    swift_release();
  }
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF) {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  }
  if ((int)v7 - 1 < 0 && v6) {
    __swift_destroy_boxed_opaque_existential_0(v5 + 32);
  }
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  uint64_t v12 = ~v11;
  uint64_t v13 = (v5 + v11 + 112) & ~v11;
  unint64_t v14 = *(void *)(v9 + 64);
  unint64_t v15 = (void *)((v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v15 <= 0xFFFFFFFEuLL)
  {
    if (v10) {
      unint64_t v23 = *(void *)(v9 + 64);
    }
    else {
      unint64_t v23 = v14 + 1;
    }
    if (v23 <= 8) {
      uint64_t v18 = 8;
    }
    else {
      uint64_t v18 = v23;
    }
  }
  else
  {
    swift_release();
    swift_release();
    int v16 = (unsigned __int8 *)(((unint64_t)v15 + v11 + 8) & v12);
    if (v10) {
      unint64_t v17 = v14;
    }
    else {
      unint64_t v17 = v14 + 1;
    }
    if (v17 <= 8) {
      uint64_t v18 = 8;
    }
    else {
      uint64_t v18 = v17;
    }
    unsigned int v19 = v16[v18];
    unsigned int v20 = v19 - 3;
    if (v19 >= 3)
    {
      if (v18 <= 3) {
        uint64_t v21 = v18;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *v16;
          goto LABEL_33;
        case 2:
          int v22 = *(unsigned __int16 *)v16;
          goto LABEL_33;
        case 3:
          int v22 = *(unsigned __int16 *)v16 | (v16[2] << 16);
          goto LABEL_33;
        case 4:
          int v22 = *(_DWORD *)v16;
LABEL_33:
          int v24 = (v22 | (v20 << (8 * v18))) + 3;
          unsigned int v19 = v22 + 3;
          if (v18 < 4) {
            unsigned int v19 = v24;
          }
          break;
        default:
          break;
      }
    }
    if (v19 == 2 || v19 == 1)
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48))(v16, 1, v8)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(v16, v8);
      }
    }
    else
    {
    }
  }
  uint64_t v25 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v26 = *(uint64_t (**)(unint64_t))(v25 + 8);
  unint64_t v27 = (((v18 + ((v11 + 16) & v12) + v13 + 8) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v25 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);

  return v26(v27);
}

uint64_t sub_228B1EA18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6 = *(unsigned __int8 *)(a2 + 24);
  if (v6 >= 2) {
    unsigned int v6 = *(_DWORD *)a2 + 2;
  }
  if (v6 == 1)
  {
    uint64_t v7 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v7;
    unint64_t v8 = *(void *)(a2 + 16);
    swift_retain();
    swift_retain();
    sub_228B0596C(v8);
    *(void *)(a1 + 16) = v8;
    char v9 = 1;
  }
  else
  {
    uint64_t v10 = *(void *)a2;
    sub_228B0596C(*(void *)a2);
    uint64_t v11 = *(void *)(a2 + 8);
    *(void *)a1 = v10;
    *(void *)(a1 + 8) = v11;
    swift_retain();
    char v9 = 0;
  }
  *(unsigned char *)(a1 + 24) = v9;
  unint64_t v12 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = (_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
  unint64_t v14 = a2 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (a2 & 0xFFFFFFFFFFFFFFF8) + 32;
  unint64_t v16 = *(void *)(v14 + 56);
  LODWORD(v17) = -1;
  if (v16 < 0xFFFFFFFF) {
    uint64_t v17 = *(void *)(v14 + 56);
  }
  if ((int)v17 - 1 < 0)
  {
    if (v16)
    {
      *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56) = v16;
      *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = *(void *)(v15 + 32);
      (**(void (***)(unint64_t, unint64_t))(v16 - 8))((a1 & 0xFFFFFFFFFFFFFFF8) + 32, v15);
    }
    else
    {
      long long v21 = *(_OWORD *)v15;
      long long v22 = *(_OWORD *)(v15 + 16);
      *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = *(void *)(v15 + 32);
      *uint64_t v13 = v21;
      *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v22;
    }
    uint64_t v23 = *(void *)(v15 + 40);
    *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(v15 + 48);
    *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 72) = v23;
    uint64_t v24 = *(void *)(v15 + 56);
    *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(unsigned char *)(v15 + 64);
    *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 88) = v24;
  }
  else
  {
    *uint64_t v13 = *(_OWORD *)v15;
    long long v18 = *(_OWORD *)(v15 + 16);
    long long v19 = *(_OWORD *)(v15 + 32);
    long long v20 = *(_OWORD *)(v15 + 48);
    *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(unsigned char *)(v15 + 64);
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = v19;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v20;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v18;
  }
  *(void *)(v12 + 104) = *(void *)(v14 + 104);
  uint64_t v25 = *(void *)(a3 + 16);
  uint64_t v26 = *(void *)(v25 - 8);
  int v27 = *(_DWORD *)(v26 + 84);
  uint64_t v28 = *(_DWORD *)(v26 + 80) & 0xF8;
  uint64_t v29 = v28 | 7;
  uint64_t v30 = (v12 + (v28 | 7) + 112) & ~(v28 | 7);
  uint64_t v31 = (v14 + (v28 | 7) + 112) & ~(v28 | 7);
  size_t v32 = *(void *)(v26 + 64);
  uint64_t v33 = (v28 + 23) & ~(v28 | 7);
  long long v34 = (void *)((v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v34 >= 0xFFFFFFFFuLL)
  {
    uint64_t v60 = (v28 + 23) & ~(v28 | 7);
    uint64_t v61 = a3;
    uint64_t v35 = ~v29;
    BOOL v36 = v27 == 0;
    *(void *)uint64_t v30 = *(void *)v31;
    long long v37 = (void *)((v30 + 15) & 0xFFFFFFFFFFFFFFF8);
    *long long v37 = *v34;
    uint64_t v38 = v29 + 8;
    __dst = (void *)(((unint64_t)v37 + v38) & v35);
    uint64_t v39 = (unsigned __int8 *)(((unint64_t)v34 + v38) & v35);
    if (v36) {
      size_t v40 = v32 + 1;
    }
    else {
      size_t v40 = v32;
    }
    if (v40 <= 8) {
      uint64_t v41 = 8;
    }
    else {
      uint64_t v41 = v40;
    }
    unsigned int v42 = v39[v41];
    swift_retain();
    swift_retain();
    if (v42 >= 3)
    {
      if (v41 <= 3) {
        uint64_t v43 = v41;
      }
      else {
        uint64_t v43 = 4;
      }
      switch(v43)
      {
        case 1:
          int v44 = *v39;
          goto LABEL_36;
        case 2:
          int v44 = *(unsigned __int16 *)v39;
          goto LABEL_36;
        case 3:
          int v44 = *(unsigned __int16 *)v39 | (v39[2] << 16);
          goto LABEL_36;
        case 4:
          int v44 = *(_DWORD *)v39;
LABEL_36:
          int v46 = (v44 | ((v42 - 3) << (8 * v41))) + 3;
          unsigned int v47 = v44 + 3;
          if (v41 >= 4) {
            unsigned int v42 = v47;
          }
          else {
            unsigned int v42 = v46;
          }
          break;
        default:
          break;
      }
    }
    if (v42 == 2)
    {
      uint64_t v48 = __dst;
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v26 + 48))(v39, 1, v25))
      {
        memcpy(__dst, v39, v40);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v26 + 16))(__dst, v39, v25);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
      }
      char v51 = 2;
    }
    else
    {
      if (v42 != 1)
      {
        unint64_t v49 = *(void **)v39;
        void *__dst = *(void *)v39;
        *((unsigned char *)__dst + v41) = 0;
        id v50 = v49;
LABEL_51:
        uint64_t v33 = v60;
        a3 = v61;
        goto LABEL_52;
      }
      uint64_t v48 = __dst;
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v26 + 48))(v39, 1, v25))
      {
        memcpy(__dst, v39, v40);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v26 + 16))(__dst, v39, v25);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
      }
      char v51 = 1;
    }
    *((unsigned char *)v48 + v41) = v51;
    goto LABEL_51;
  }
  if (v27) {
    size_t v40 = *(void *)(v26 + 64);
  }
  else {
    size_t v40 = v32 + 1;
  }
  uint64_t v45 = 8;
  if (v40 > 8) {
    uint64_t v45 = v40;
  }
  memcpy((void *)v30, (const void *)v31, v45 + v33 + 1);
LABEL_52:
  uint64_t v52 = 8;
  if (v40 > 8) {
    uint64_t v52 = v40;
  }
  uint64_t v53 = (v33 | 1) + v52;
  unint64_t v54 = ((v30 | 7) + v53) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v55 = ((v31 | 7) + v53) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v56 = *(void *)v55;
  *(unsigned char *)(v54 + 8) = *(unsigned char *)(v55 + 8);
  *(void *)unint64_t v54 = v56;
  uint64_t v57 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v57 + 16))((*(unsigned __int8 *)(v57 + 80) + 9 + v54) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80), (*(unsigned __int8 *)(v57 + 80) + 9 + v55) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
  return a1;
}

uint64_t sub_228B1EEF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    unsigned int v6 = *(unsigned __int8 *)(a1 + 24);
    if (v6 >= 2) {
      unsigned int v6 = *(_DWORD *)a1 + 2;
    }
    if (v6 == 1)
    {
      swift_release();
      swift_release();
      sub_228B05A34(*(void *)(a1 + 16));
    }
    else
    {
      sub_228B05A34(*(void *)a1);
      swift_release();
    }
    unsigned int v7 = *(unsigned __int8 *)(a2 + 24);
    if (v7 >= 2) {
      unsigned int v7 = *(_DWORD *)a2 + 2;
    }
    if (v7 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      unint64_t v8 = *(void *)(a2 + 16);
      swift_retain();
      swift_retain();
      sub_228B0596C(v8);
      *(void *)(a1 + 16) = v8;
      *(unsigned char *)(a1 + 24) = 1;
    }
    else
    {
      uint64_t v9 = *(void *)a2;
      sub_228B0596C(*(void *)a2);
      *(void *)a1 = v9;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 24) = 0;
      swift_retain();
    }
  }
  unint64_t v10 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = (_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
  unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (a2 & 0xFFFFFFFFFFFFFFF8) + 32;
  unint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  LODWORD(v15) = -1;
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  else {
    uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  }
  int v17 = v16 - 1;
  unint64_t v18 = *(void *)(v12 + 56);
  if (v18 < 0xFFFFFFFF) {
    uint64_t v15 = *(void *)(v12 + 56);
  }
  int v19 = v15 - 1;
  if ((v17 & 0x80000000) == 0)
  {
    if (v19 < 0) {
      goto LABEL_19;
    }
LABEL_24:
    _OWORD *v11 = *(_OWORD *)v13;
    long long v20 = *(_OWORD *)(v13 + 16);
    long long v21 = *(_OWORD *)(v13 + 32);
    long long v22 = *(_OWORD *)(v13 + 48);
    *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(unsigned char *)(v13 + 64);
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = v21;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v22;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v20;
    goto LABEL_31;
  }
  if ((v19 & 0x80000000) == 0)
  {
    if (v14) {
      __swift_destroy_boxed_opaque_existential_0((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
    }
    goto LABEL_24;
  }
  if (v14)
  {
    uint64_t v23 = (uint64_t *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
    if (v18)
    {
      __swift_assign_boxed_opaque_existential_1(v23, (uint64_t *)v13);
      goto LABEL_30;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
LABEL_29:
    long long v24 = *(_OWORD *)v13;
    long long v25 = *(_OWORD *)(v13 + 16);
    *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = *(void *)(v13 + 32);
    _OWORD *v11 = v24;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v25;
    goto LABEL_30;
  }
LABEL_19:
  if (!v18) {
    goto LABEL_29;
  }
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56) = v18;
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = *(void *)(v13 + 32);
  (**(void (***)(unint64_t, unint64_t))(v18 - 8))((a1 & 0xFFFFFFFFFFFFFFF8) + 32, v13);
LABEL_30:
  uint64_t v26 = *(void *)(v13 + 40);
  *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(v13 + 48);
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 72) = v26;
  uint64_t v27 = *(void *)(v13 + 56);
  *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(unsigned char *)(v13 + 64);
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 88) = v27;
LABEL_31:
  *(void *)(v10 + 104) = *(void *)(v12 + 104);
  uint64_t v90 = a3;
  uint64_t v28 = *(void *)(a3 + 16);
  uint64_t v29 = *(void *)(v28 - 8);
  int v30 = *(_DWORD *)(v29 + 84);
  uint64_t v31 = *(_DWORD *)(v29 + 80) & 0xF8;
  uint64_t v32 = v31 | 7;
  uint64_t v33 = ~(v31 | 7);
  long long v34 = (void *)((v10 + (v31 | 7) + 112) & v33);
  uint64_t v35 = (void *)((v12 + (v31 | 7) + 112) & v33);
  size_t v36 = *(void *)(v29 + 64);
  uint64_t v89 = (v31 + 23) & v33;
  long long v37 = (void *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v38 = (unint64_t *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v39 = *v38;
  if (*v37 < 0xFFFFFFFFuLL)
  {
    if (v39 >= 0xFFFFFFFF)
    {
      uint64_t v87 = v34;
      uint64_t v88 = v35;
      *long long v34 = *v35;
      *long long v37 = *v38;
      uint64_t v48 = (void *)(((unint64_t)v37 + v32 + 8) & v33);
      unint64_t v49 = (unsigned __int8 *)(((unint64_t)v38 + v32 + 8) & v33);
      if (v30) {
        size_t v42 = v36;
      }
      else {
        size_t v42 = v36 + 1;
      }
      if (v42 <= 8) {
        uint64_t v50 = 8;
      }
      else {
        uint64_t v50 = v42;
      }
      unsigned int v51 = v49[v50];
      swift_retain();
      swift_retain();
      if (v51 >= 3)
      {
        if (v50 <= 3) {
          uint64_t v52 = v50;
        }
        else {
          uint64_t v52 = 4;
        }
        switch(v52)
        {
          case 1:
            int v53 = *v49;
            goto LABEL_81;
          case 2:
            int v53 = *(unsigned __int16 *)v49;
            goto LABEL_81;
          case 3:
            int v53 = *(unsigned __int16 *)v49 | (v49[2] << 16);
            goto LABEL_81;
          case 4:
            int v53 = *(_DWORD *)v49;
LABEL_81:
            int v68 = (v53 | ((v51 - 3) << (8 * v50))) + 3;
            unsigned int v69 = v53 + 3;
            if (v50 >= 4) {
              unsigned int v51 = v69;
            }
            else {
              unsigned int v51 = v68;
            }
            break;
          default:
            break;
        }
      }
      if (v51 == 2)
      {
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v29 + 48))(v49, 1, v28))
        {
          memcpy(v48, v49, v42);
        }
        else
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v29 + 16))(v48, v49, v28);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v48, 0, 1, v28);
        }
        uint64_t v67 = v90;
        *((unsigned char *)v48 + v5__isPlatformVersionAtLeast(2, 18, 1, 0) = 2;
        goto LABEL_141;
      }
      if (v51 == 1)
      {
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v29 + 48))(v49, 1, v28))
        {
          memcpy(v48, v49, v42);
        }
        else
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v29 + 16))(v48, v49, v28);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v48, 0, 1, v28);
        }
        uint64_t v67 = v90;
        *((unsigned char *)v48 + v5__isPlatformVersionAtLeast(2, 18, 1, 0) = 1;
        goto LABEL_141;
      }
      int v70 = *(void **)v49;
      *uint64_t v48 = *(void *)v49;
      *((unsigned char *)v48 + v5__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
LABEL_135:
      id v78 = v70;
      uint64_t v67 = v90;
      goto LABEL_141;
    }
    if (v30) {
      size_t v42 = *(void *)(*(void *)(v28 - 8) + 64);
    }
    else {
      size_t v42 = v36 + 1;
    }
    uint64_t v61 = 8;
    if (v42 > 8) {
      uint64_t v61 = v42;
    }
    uint64_t v62 = v89;
    size_t v63 = v61 + v89 + 1;
    unint64_t v64 = v34;
    unint64_t v65 = (unint64_t)v35;
    uint64_t v66 = v35;
    unint64_t v54 = (unint64_t)v34;
LABEL_106:
    memcpy(v64, v66, v63);
    uint64_t v67 = v90;
    goto LABEL_142;
  }
  uint64_t v88 = v35;
  if (v39 < 0xFFFFFFFF)
  {
    unint64_t v54 = (unint64_t)v34;
    swift_release();
    swift_release();
    unint64_t v55 = (unsigned __int8 *)(((unint64_t)v37 + v32 + 8) & v33);
    if (v30) {
      size_t v42 = v36;
    }
    else {
      size_t v42 = v36 + 1;
    }
    if (v42 <= 8) {
      uint64_t v56 = 8;
    }
    else {
      uint64_t v56 = v42;
    }
    unsigned int v57 = v55[v56];
    unsigned int v58 = v57 - 3;
    if (v57 >= 3)
    {
      if (v56 <= 3) {
        uint64_t v59 = v56;
      }
      else {
        uint64_t v59 = 4;
      }
      switch(v59)
      {
        case 1:
          int v60 = *v55;
          goto LABEL_98;
        case 2:
          int v60 = *(unsigned __int16 *)v55;
          goto LABEL_98;
        case 3:
          int v60 = *(unsigned __int16 *)v55 | (v55[2] << 16);
          goto LABEL_98;
        case 4:
          int v60 = *(_DWORD *)v55;
LABEL_98:
          int v71 = (v60 | (v58 << (8 * v56))) + 3;
          unsigned int v57 = v60 + 3;
          if (v56 < 4) {
            unsigned int v57 = v71;
          }
          break;
        default:
          break;
      }
    }
    if (v57 == 2 || v57 == 1)
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v29 + 48))(v55, 1, v28)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v29 + 8))(v55, v28);
      }
    }
    else
    {
    }
    unint64_t v65 = (unint64_t)v88;
    uint64_t v62 = v89;
    size_t v63 = v56 + v89 + 1;
    unint64_t v64 = (void *)v54;
    uint64_t v66 = v88;
    goto LABEL_106;
  }
  uint64_t v87 = v34;
  *long long v34 = *v35;
  swift_retain();
  swift_release();
  *long long v37 = *v38;
  swift_retain();
  swift_release();
  size_t v40 = (unsigned __int8 *)(((unint64_t)v37 + v32 + 8) & v33);
  uint64_t v41 = (unsigned __int8 *)(((unint64_t)v38 + v32 + 8) & v33);
  if (v30) {
    size_t v42 = v36;
  }
  else {
    size_t v42 = v36 + 1;
  }
  if (v40 != v41)
  {
    if (v42 <= 8) {
      uint64_t v43 = 8;
    }
    else {
      uint64_t v43 = v42;
    }
    unsigned int v44 = v40[v43];
    unsigned int v45 = v44 - 3;
    if (v44 >= 3)
    {
      if (v43 <= 3) {
        uint64_t v46 = v43;
      }
      else {
        uint64_t v46 = 4;
      }
      switch(v46)
      {
        case 1:
          int v47 = *v40;
          goto LABEL_110;
        case 2:
          int v47 = *(unsigned __int16 *)v40;
          goto LABEL_110;
        case 3:
          int v47 = *(unsigned __int16 *)v40 | (v40[2] << 16);
          goto LABEL_110;
        case 4:
          int v47 = *(_DWORD *)v40;
LABEL_110:
          int v72 = (v47 | (v45 << (8 * v43))) + 3;
          unsigned int v44 = v47 + 3;
          if (v43 < 4) {
            unsigned int v44 = v72;
          }
          break;
        default:
          break;
      }
    }
    if (v44 == 2 || v44 == 1)
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v29 + 48))(v40, 1, v28)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v29 + 8))(v40, v28);
      }
    }
    else
    {
    }
    unsigned int v73 = v41[v43];
    unsigned int v74 = v73 - 3;
    if (v73 >= 3)
    {
      if (v43 <= 3) {
        uint64_t v75 = v43;
      }
      else {
        uint64_t v75 = 4;
      }
      switch(v75)
      {
        case 1:
          int v76 = *v41;
          goto LABEL_126;
        case 2:
          int v76 = *(unsigned __int16 *)v41;
          goto LABEL_126;
        case 3:
          int v76 = *(unsigned __int16 *)v41 | (v41[2] << 16);
          goto LABEL_126;
        case 4:
          int v76 = *(_DWORD *)v41;
LABEL_126:
          int v77 = (v76 | (v74 << (8 * v43))) + 3;
          unsigned int v73 = v76 + 3;
          if (v43 < 4) {
            unsigned int v73 = v77;
          }
          break;
        default:
          break;
      }
    }
    if (v73 == 2)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v29 + 48))(v41, 1, v28))
      {
        memcpy(v40, v41, v42);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v29 + 16))(v40, v41, v28);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v29 + 56))(v40, 0, 1, v28);
      }
      uint64_t v67 = v90;
      char v79 = 2;
      goto LABEL_140;
    }
    if (v73 == 1)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v29 + 48))(v41, 1, v28))
      {
        memcpy(v40, v41, v42);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v29 + 16))(v40, v41, v28);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v29 + 56))(v40, 0, 1, v28);
      }
      uint64_t v67 = v90;
      char v79 = 1;
LABEL_140:
      v40[v43] = v79;
      goto LABEL_141;
    }
    int v70 = *(void **)v41;
    *(void *)size_t v40 = *(void *)v41;
    v40[v43] = 0;
    goto LABEL_135;
  }
  uint64_t v67 = v90;
LABEL_141:
  unint64_t v65 = (unint64_t)v88;
  uint64_t v62 = v89;
  unint64_t v54 = (unint64_t)v87;
LABEL_142:
  uint64_t v80 = 8;
  if (v42 > 8) {
    uint64_t v80 = v42;
  }
  uint64_t v81 = (v62 | 1) + v80;
  unint64_t v82 = ((v54 | 7) + v81) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v83 = ((v65 | 7) + v81) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v84 = *(void *)v83;
  *(unsigned char *)(v82 + 8) = *(unsigned char *)(v83 + 8);
  *(void *)unint64_t v82 = v84;
  uint64_t v85 = *(void *)(*(void *)(v67 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v85 + 24))((*(unsigned __int8 *)(v85 + 80) + 9 + v82) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80), (*(unsigned __int8 *)(v85 + 80) + 9 + v83) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        uint64_t *v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          uint64_t *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_228B1FB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5 = *(unsigned __int8 *)(a2 + 24);
  if (v5 >= 2) {
    unsigned int v5 = *(_DWORD *)a2 + 2;
  }
  if (v5 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    char v6 = 1;
  }
  else
  {
    char v6 = 0;
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(unsigned char *)(a1 + 24) = v6;
  unint64_t v7 = a1 & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v7 + 32) = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
  long long v8 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 48);
  long long v9 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 64);
  long long v10 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 80);
  *(unsigned char *)(v7 + 96) = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 96);
  *(_OWORD *)(v7 + 64) = v9;
  *(_OWORD *)(v7 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v10;
  *(_OWORD *)(v7 + 48) = v8;
  *(void *)(v7 + 104) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 104);
  uint64_t v11 = *(void *)(a3 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(_DWORD *)(v12 + 84);
  uint64_t v14 = *(_DWORD *)(v12 + 80) & 0xF8;
  uint64_t v15 = v14 | 7;
  unint64_t v16 = ((a1 & 0xFFFFFFFFFFFFFFF8) + (v14 | 7) + 112) & ~(v14 | 7);
  unint64_t v17 = ((a2 & 0xFFFFFFFFFFFFFFF8) + (v14 | 7) + 112) & ~(v14 | 7);
  size_t v18 = *(void *)(v12 + 64);
  uint64_t v19 = (v14 + 23) & ~(v14 | 7);
  long long v20 = (void *)((v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v20 < 0xFFFFFFFFuLL)
  {
    if (v13) {
      size_t v27 = *(void *)(v12 + 64);
    }
    else {
      size_t v27 = v18 + 1;
    }
    uint64_t v33 = 8;
    if (v27 > 8) {
      uint64_t v33 = v27;
    }
    memcpy((void *)v16, (const void *)(((a2 & 0xFFFFFFFFFFFFFFF8) + (v14 | 7) + 112) & ~(v14 | 7)), v33 + v19 + 1);
  }
  else
  {
    uint64_t v21 = ~v15;
    BOOL v22 = v13 == 0;
    *(void *)unint64_t v16 = *(void *)v17;
    uint64_t v23 = (void *)((v16 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v23 = *v20;
    uint64_t v24 = v15 + 8;
    long long v25 = (void *)(((unint64_t)v23 + v24) & v21);
    uint64_t v26 = (unsigned __int8 *)(((unint64_t)v20 + v24) & v21);
    if (v22) {
      size_t v27 = v18 + 1;
    }
    else {
      size_t v27 = v18;
    }
    if (v27 <= 8) {
      uint64_t v28 = 8;
    }
    else {
      uint64_t v28 = v27;
    }
    unsigned int v29 = v26[v28];
    unsigned int v30 = v29 - 3;
    if (v29 >= 3)
    {
      if (v28 <= 3) {
        uint64_t v31 = v28;
      }
      else {
        uint64_t v31 = 4;
      }
      switch(v31)
      {
        case 1:
          int v32 = *v26;
          goto LABEL_28;
        case 2:
          int v32 = *(unsigned __int16 *)v26;
          goto LABEL_28;
        case 3:
          int v32 = *(unsigned __int16 *)v26 | (v26[2] << 16);
          goto LABEL_28;
        case 4:
          int v32 = *(_DWORD *)v26;
LABEL_28:
          int v34 = (v32 | (v30 << (8 * v28))) + 3;
          unsigned int v29 = v32 + 3;
          if (v28 < 4) {
            unsigned int v29 = v34;
          }
          break;
        default:
          break;
      }
    }
    if (v29 == 2)
    {
      __dsta = v25;
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v12 + 48))(v26, 1, v11))
      {
        memcpy(__dsta, v26, v27);
        *((unsigned char *)__dsta + v28) = 2;
        goto LABEL_40;
      }
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v12 + 32))(__dsta, v26, v11);
      uint64_t v35 = __dsta;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dsta, 0, 1, v11);
      char v36 = 2;
    }
    else
    {
      if (v29 != 1)
      {
        *long long v25 = *(void *)v26;
        *((unsigned char *)v25 + v28) = 0;
        goto LABEL_40;
      }
      __dst = v25;
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v12 + 48))(v26, 1, v11))
      {
        memcpy(__dst, v26, v27);
        *((unsigned char *)__dst + v28) = 1;
        goto LABEL_40;
      }
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v12 + 32))(__dst, v26, v11);
      uint64_t v35 = __dst;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
      char v36 = 1;
    }
    v35[v28] = v36;
  }
LABEL_40:
  uint64_t v37 = 8;
  if (v27 > 8) {
    uint64_t v37 = v27;
  }
  uint64_t v38 = (v19 | 1) + v37;
  unint64_t v39 = ((v16 | 7) + v38) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v40 = ((v17 | 7) + v38) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = *(void *)v40;
  *(unsigned char *)(v39 + 8) = *(unsigned char *)(v40 + 8);
  *(void *)unint64_t v39 = v41;
  uint64_t v42 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v42 + 32))((*(unsigned __int8 *)(v42 + 80) + 9 + v39) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80), (*(unsigned __int8 *)(v42 + 80) + 9 + v40) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
  return a1;
}

uint64_t sub_228B1FF20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    unsigned int v6 = *(unsigned __int8 *)(a1 + 24);
    if (v6 >= 2) {
      unsigned int v6 = *(_DWORD *)a1 + 2;
    }
    if (v6 == 1)
    {
      swift_release();
      swift_release();
      sub_228B05A34(*(void *)(a1 + 16));
    }
    else
    {
      sub_228B05A34(*(void *)a1);
      swift_release();
    }
    unsigned int v7 = *(unsigned __int8 *)(a2 + 24);
    if (v7 >= 2) {
      unsigned int v7 = *(_DWORD *)a2 + 2;
    }
    if (v7 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      char v8 = 1;
    }
    else
    {
      char v8 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    *(unsigned char *)(a1 + 24) = v8;
  }
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  long long v10 = (_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
  unint64_t v11 = a2 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = (_OWORD *)(v11 + 32);
  unint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  LODWORD(v14) = -1;
  if (v13 < 0xFFFFFFFF) {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  }
  if ((int)v14 - 1 >= 0) {
    goto LABEL_16;
  }
  unint64_t v49 = *(void *)(v11 + 56);
  if (v49 >= 0xFFFFFFFF) {
    LODWORD(v49) = -1;
  }
  if ((int)v49 - 1 >= 0)
  {
    if (v13) {
      __swift_destroy_boxed_opaque_existential_0((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
    }
LABEL_16:
    *long long v10 = *v12;
    long long v15 = *(_OWORD *)(v11 + 48);
    long long v16 = *(_OWORD *)(v11 + 64);
    long long v17 = *(_OWORD *)(v11 + 80);
    *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(unsigned char *)(v11 + 96);
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = v16;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v17;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v15;
    goto LABEL_17;
  }
  if (v13) {
    __swift_destroy_boxed_opaque_existential_0((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
  }
  long long v61 = *v12;
  long long v62 = *(_OWORD *)(v11 + 48);
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = *(void *)(v11 + 64);
  *long long v10 = v61;
  *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v62;
  uint64_t v63 = *(void *)(v11 + 72);
  *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(v11 + 80);
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 72) = v63;
  uint64_t v64 = *(void *)(v11 + 88);
  *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(unsigned char *)(v11 + 96);
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 88) = v64;
LABEL_17:
  *(void *)(v9 + 104) = *(void *)(v11 + 104);
  uint64_t v86 = a3;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = *(void *)(v18 - 8);
  int v20 = *(_DWORD *)(v19 + 84);
  uint64_t v21 = *(_DWORD *)(v19 + 80) & 0xF8;
  uint64_t v22 = v21 | 7;
  unint64_t v23 = v11 + (v21 | 7);
  uint64_t v24 = ~(v21 | 7);
  uint64_t v25 = (v9 + (v21 | 7) + 112) & v24;
  uint64_t v26 = (void *)((v23 + 112) & v24);
  size_t v27 = *(void *)(v19 + 64);
  uint64_t v85 = (v21 + 23) & v24;
  uint64_t v28 = (void *)((v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v29 = (unint64_t *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v30 = *v29;
  if (*v28 < 0xFFFFFFFFuLL)
  {
    if (v30 < 0xFFFFFFFF)
    {
      if (v20) {
        size_t v34 = *(void *)(*(void *)(v18 - 8) + 64);
      }
      else {
        size_t v34 = v27 + 1;
      }
      uint64_t v56 = 8;
      if (v34 > 8) {
        uint64_t v56 = v34;
      }
      uint64_t v57 = v85;
      size_t v58 = v56 + v85 + 1;
      uint64_t v59 = (void *)v25;
      uint64_t v60 = (uint64_t)v26;
      goto LABEL_100;
    }
    *(void *)uint64_t v25 = *v26;
    *uint64_t v28 = *v29;
    uint64_t v40 = v22 + 8;
    uint64_t v41 = (void *)(((unint64_t)v28 + v22 + 8) & v24);
    uint64_t v42 = (unsigned __int8 *)(((unint64_t)v29 + v40) & v24);
    if (v20) {
      size_t v34 = v27;
    }
    else {
      size_t v34 = v27 + 1;
    }
    if (v34 <= 8) {
      uint64_t v43 = 8;
    }
    else {
      uint64_t v43 = v34;
    }
    unsigned int v44 = v42[v43];
    unsigned int v45 = v44 - 3;
    if (v44 < 3)
    {
      uint64_t v47 = v18;
    }
    else
    {
      if (v43 <= 3) {
        uint64_t v46 = v43;
      }
      else {
        uint64_t v46 = 4;
      }
      uint64_t v47 = v18;
      switch(v46)
      {
        case 1:
          int v48 = *v42;
          goto LABEL_75;
        case 2:
          int v48 = *(unsigned __int16 *)v42;
          goto LABEL_75;
        case 3:
          int v48 = *(unsigned __int16 *)v42 | (v42[2] << 16);
          goto LABEL_75;
        case 4:
          int v48 = *(_DWORD *)v42;
LABEL_75:
          int v65 = (v48 | (v45 << (8 * v43))) + 3;
          unsigned int v44 = v48 + 3;
          if (v43 < 4) {
            unsigned int v44 = v65;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v60 = (uint64_t)v26;
    if (v44 != 2)
    {
      if (v44 == 1)
      {
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v19 + 48))(v42, 1, v47))
        {
          memcpy(v41, v42, v34);
          char v66 = 1;
LABEL_87:
          *((unsigned char *)v41 + v43) = v66;
          goto LABEL_88;
        }
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v19 + 32))(v41, v42, v47);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v41, 0, 1, v47);
        *((unsigned char *)v41 + v43) = 1;
      }
      else
      {
        *uint64_t v41 = *(void *)v42;
        *((unsigned char *)v41 + v43) = 0;
      }
LABEL_88:
      uint64_t v57 = v85;
      uint64_t v67 = v86;
      goto LABEL_135;
    }
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v19 + 48))(v42, 1, v47))
    {
      memcpy(v41, v42, v34);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v19 + 32))(v41, v42, v47);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v41, 0, 1, v47);
    }
    char v66 = 2;
    goto LABEL_87;
  }
  uint64_t v84 = (v23 + 112) & v24;
  if (v30 < 0xFFFFFFFF)
  {
    swift_release();
    swift_release();
    uint64_t v50 = (unsigned __int8 *)(((unint64_t)v28 + v22 + 8) & v24);
    if (v20) {
      size_t v34 = v27;
    }
    else {
      size_t v34 = v27 + 1;
    }
    if (v34 <= 8) {
      uint64_t v51 = 8;
    }
    else {
      uint64_t v51 = v34;
    }
    unsigned int v52 = v50[v51];
    unsigned int v53 = v52 - 3;
    if (v52 >= 3)
    {
      if (v51 <= 3) {
        uint64_t v54 = v51;
      }
      else {
        uint64_t v54 = 4;
      }
      switch(v54)
      {
        case 1:
          int v55 = *v50;
          goto LABEL_92;
        case 2:
          int v55 = *(unsigned __int16 *)v50;
          goto LABEL_92;
        case 3:
          int v55 = *(unsigned __int16 *)v50 | (v50[2] << 16);
          goto LABEL_92;
        case 4:
          int v55 = *(_DWORD *)v50;
LABEL_92:
          int v68 = (v55 | (v53 << (8 * v51))) + 3;
          unsigned int v52 = v55 + 3;
          if (v51 < 4) {
            unsigned int v52 = v68;
          }
          break;
        default:
          break;
      }
    }
    if (v52 == 2 || v52 == 1)
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v19 + 48))(v50, 1, v18)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v19 + 8))(v50, v18);
      }
    }
    else
    {
    }
    uint64_t v60 = v84;
    uint64_t v69 = v51 + v85;
    uint64_t v57 = v85;
    size_t v58 = v69 + 1;
    uint64_t v59 = (void *)v25;
    uint64_t v26 = (void *)v84;
LABEL_100:
    memcpy(v59, v26, v58);
    uint64_t v67 = v86;
    goto LABEL_135;
  }
  *(void *)uint64_t v25 = *v26;
  swift_release();
  *uint64_t v28 = *v29;
  swift_release();
  uint64_t v31 = v22 + 8;
  int v32 = (unsigned __int8 *)(((unint64_t)v28 + v22 + 8) & v24);
  uint64_t v33 = (unsigned __int8 *)(((unint64_t)v29 + v31) & v24);
  if (v20) {
    size_t v34 = v27;
  }
  else {
    size_t v34 = v27 + 1;
  }
  if (v32 == v33) {
    goto LABEL_134;
  }
  if (v34 <= 8) {
    uint64_t v35 = 8;
  }
  else {
    uint64_t v35 = v34;
  }
  unsigned int v36 = v32[v35];
  unsigned int v37 = v36 - 3;
  if (v36 >= 3)
  {
    if (v35 <= 3) {
      uint64_t v38 = v35;
    }
    else {
      uint64_t v38 = 4;
    }
    switch(v38)
    {
      case 1:
        int v39 = *v32;
        goto LABEL_104;
      case 2:
        int v39 = *(unsigned __int16 *)v32;
        goto LABEL_104;
      case 3:
        int v39 = *(unsigned __int16 *)v32 | (v32[2] << 16);
        goto LABEL_104;
      case 4:
        int v39 = *(_DWORD *)v32;
LABEL_104:
        int v70 = (v39 | (v37 << (8 * v35))) + 3;
        unsigned int v36 = v39 + 3;
        if (v35 < 4) {
          unsigned int v36 = v70;
        }
        break;
      default:
        break;
    }
  }
  if (v36 == 2 || v36 == 1)
  {
    if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v19 + 48))(v32, 1, v18)) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v19 + 8))(v32, v18);
    }
  }
  else
  {
  }
  unsigned int v71 = v33[v35];
  unsigned int v72 = v71 - 3;
  if (v71 >= 3)
  {
    if (v35 <= 3) {
      uint64_t v73 = v35;
    }
    else {
      uint64_t v73 = 4;
    }
    switch(v73)
    {
      case 1:
        int v74 = *v33;
        goto LABEL_120;
      case 2:
        int v74 = *(unsigned __int16 *)v33;
        goto LABEL_120;
      case 3:
        int v74 = *(unsigned __int16 *)v33 | (v33[2] << 16);
        goto LABEL_120;
      case 4:
        int v74 = *(_DWORD *)v33;
LABEL_120:
        int v75 = (v74 | (v72 << (8 * v35))) + 3;
        unsigned int v71 = v74 + 3;
        if (v35 < 4) {
          unsigned int v71 = v75;
        }
        break;
      default:
        break;
    }
  }
  if (v71 == 2)
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v19 + 48))(v33, 1, v18))
    {
      memcpy(v32, v33, v34);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v19 + 32))(v32, v33, v18);
      (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v19 + 56))(v32, 0, 1, v18);
    }
    char v76 = 2;
    goto LABEL_133;
  }
  if (v71 == 1)
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v19 + 48))(v33, 1, v18))
    {
      memcpy(v32, v33, v34);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v19 + 32))(v32, v33, v18);
      (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v19 + 56))(v32, 0, 1, v18);
    }
    char v76 = 1;
LABEL_133:
    v32[v35] = v76;
    goto LABEL_134;
  }
  *(void *)int v32 = *(void *)v33;
  v32[v35] = 0;
LABEL_134:
  uint64_t v57 = v85;
  uint64_t v67 = v86;
  uint64_t v60 = v84;
LABEL_135:
  uint64_t v77 = 8;
  if (v34 > 8) {
    uint64_t v77 = v34;
  }
  uint64_t v78 = (v57 | 1) + v77;
  unint64_t v79 = ((v25 | 7) + v78) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v80 = ((v60 | 7) + v78) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v81 = *(void *)v80;
  *(unsigned char *)(v79 + 8) = *(unsigned char *)(v80 + 8);
  *(void *)unint64_t v79 = v81;
  uint64_t v82 = *(void *)(*(void *)(v67 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v82 + 40))((*(unsigned __int8 *)(v82 + 80) + 9 + v79) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80), (*(unsigned __int8 *)(v82 + 80) + 9 + v80) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80));
  return a1;
}

uint64_t type metadata accessor for MapSelectableContentView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_228B20870()
{
  type metadata accessor for MapSelectionManagerBox();
  sub_228BAD218();
  uint64_t result = sub_228BAD718();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_228B209A4(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = (unint64_t)a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6 & 0xF8 | 7;
  uint64_t v8 = ((v6 & 0xF8) + 23) & ~v7;
  if (*(_DWORD *)(v5 + 84)) {
    unint64_t v9 = *(void *)(v5 + 64);
  }
  else {
    unint64_t v9 = *(void *)(v5 + 64) + 1;
  }
  if (v9 <= 8) {
    uint64_t v10 = 8;
  }
  else {
    uint64_t v10 = v9;
  }
  uint64_t v11 = v8 | 1;
  size_t v12 = (v8 | 1) + v10;
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  unint64_t v15 = ((v14 + 9 + ((v12 + (((v6 & 0xF8) + 119) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v14)
      + *(void *)(v13 + 64);
  int v16 = (*(_DWORD *)(v13 + 80) | v6) & 0x100000;
  if ((v14 | v7) != 7 || v16 != 0 || v15 > 0x18)
  {
    unint64_t v19 = *(void *)a2;
    *(void *)unint64_t v4 = *(void *)a2;
    unint64_t v4 = v19 + (((v14 | v7) + 16) & ~(v14 | v7));
    swift_retain();
  }
  else
  {
    unsigned int v20 = *(unsigned __int8 *)(a2 + 24);
    if (v20 >= 2) {
      unsigned int v20 = *(_DWORD *)a2 + 2;
    }
    size_t __n = v9;
    uint64_t v66 = *(void *)(*(void *)(a3 + 16) - 8);
    uint64_t v72 = *(void *)(*(void *)(a3 + 24) - 8);
    uint64_t v73 = *(void *)(a3 + 24);
    uint64_t v70 = v14 + 9;
    uint64_t v71 = v11;
    int v68 = *(_DWORD *)(v5 + 84);
    unint64_t v69 = *(void *)(v5 + 64);
    uint64_t v67 = *(void *)(a3 + 16);
    if (v20 == 1)
    {
      uint64_t v21 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v21;
      unint64_t v22 = *(void *)(a2 + 16);
      swift_retain();
      swift_retain();
      sub_228B0596C(v22);
      *(void *)(v4 + 16) = v22;
      char v23 = 1;
    }
    else
    {
      unint64_t v24 = *(void *)a2;
      sub_228B0596C(*(void *)a2);
      uint64_t v25 = *(void *)(a2 + 8);
      *(void *)unint64_t v4 = v24;
      *(void *)(v4 + 8) = v25;
      swift_retain();
      char v23 = 0;
    }
    uint64_t v26 = ~v7;
    *(unsigned char *)(v4 + 24) = v23;
    unint64_t v27 = v4 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v28 = (_OWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 32);
    unint64_t v29 = a2 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (a2 & 0xFFFFFFFFFFFFFFF8) + 32;
    unint64_t v31 = *(void *)(v29 + 56);
    LODWORD(v32) = -1;
    if (v31 < 0xFFFFFFFF) {
      uint64_t v32 = *(void *)(v29 + 56);
    }
    if ((int)v32 - 1 < 0)
    {
      if (v31)
      {
        *(void *)((v4 & 0xFFFFFFFFFFFFFFF8) + 56) = v31;
        *(void *)((v4 & 0xFFFFFFFFFFFFFFF8) + 64) = *(void *)(v30 + 32);
        (**(void (***)(unint64_t, unint64_t))(v31 - 8))((v4 & 0xFFFFFFFFFFFFFFF8) + 32, v30);
      }
      else
      {
        long long v36 = *(_OWORD *)v30;
        long long v37 = *(_OWORD *)(v30 + 16);
        *(void *)((v4 & 0xFFFFFFFFFFFFFFF8) + 64) = *(void *)(v30 + 32);
        *uint64_t v28 = v36;
        *(_OWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 48) = v37;
      }
      uint64_t v38 = *(void *)(v30 + 40);
      *(unsigned char *)((v4 & 0xFFFFFFFFFFFFFFF8) + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(v30 + 48);
      *(void *)((v4 & 0xFFFFFFFFFFFFFFF8) + 72) = v38;
      uint64_t v39 = *(void *)(v30 + 56);
      *(unsigned char *)((v4 & 0xFFFFFFFFFFFFFFF8) + 96) = *(unsigned char *)(v30 + 64);
      *(void *)((v4 & 0xFFFFFFFFFFFFFFF8) + 88) = v39;
    }
    else
    {
      *uint64_t v28 = *(_OWORD *)v30;
      long long v33 = *(_OWORD *)(v30 + 16);
      long long v34 = *(_OWORD *)(v30 + 32);
      long long v35 = *(_OWORD *)(v30 + 48);
      *(unsigned char *)((v4 & 0xFFFFFFFFFFFFFFF8) + 96) = *(unsigned char *)(v30 + 64);
      *(_OWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 64) = v34;
      *(_OWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v35;
      *(_OWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 48) = v33;
    }
    uint64_t v40 = ~v14;
    *(void *)(v27 + 104) = *(void *)(v29 + 104);
    uint64_t v41 = (v27 + v7 + 112) & v26;
    uint64_t v42 = (v29 + v7 + 112) & v26;
    uint64_t v43 = (void *)((v42 + 15) & 0xFFFFFFFFFFFFFFF8);
    if (*v43 < 0xFFFFFFFFuLL)
    {
      memcpy((void *)((v27 + v7 + 112) & v26), (const void *)((v29 + v7 + 112) & v26), v12);
      uint64_t v51 = v72;
      uint64_t v52 = v73;
      uint64_t v54 = v70;
      uint64_t v53 = v71;
    }
    else
    {
      *(void *)uint64_t v41 = *(void *)v42;
      unsigned int v44 = (void *)((v41 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v44 = *v43;
      unsigned int v45 = (unsigned char *)(((unint64_t)v44 + v7 + 8) & v26);
      uint64_t v46 = (unsigned __int8 *)(((unint64_t)v43 + v7 + 8) & v26);
      unsigned int v47 = v46[v10];
      swift_retain();
      swift_retain();
      if (v47 < 3)
      {
        unint64_t v49 = v69;
      }
      else
      {
        if (v10 <= 3) {
          uint64_t v48 = v10;
        }
        else {
          uint64_t v48 = 4;
        }
        unint64_t v49 = v69;
        switch(v48)
        {
          case 1:
            int v50 = *v46;
            goto LABEL_41;
          case 2:
            int v50 = *(unsigned __int16 *)v46;
            goto LABEL_41;
          case 3:
            int v50 = *(unsigned __int16 *)v46 | (v46[2] << 16);
            goto LABEL_41;
          case 4:
            int v50 = *(_DWORD *)v46;
LABEL_41:
            int v55 = (v50 | ((v47 - 3) << (8 * v10))) + 3;
            unsigned int v56 = v50 + 3;
            if (v10 >= 4) {
              unsigned int v47 = v56;
            }
            else {
              unsigned int v47 = v55;
            }
            break;
          default:
            break;
        }
      }
      if (v47 == 2)
      {
        unsigned char *v45 = *v46;
        v45[v10] = 2;
        uint64_t v52 = v73;
      }
      else if (v47 == 1)
      {
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v66 + 48))(v46, 1, v67))
        {
          memcpy(v45, v46, __n);
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v66 + 16))(v45, v46, v67);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v66 + 56))(v45, 0, 1, v67);
        }
        uint64_t v52 = v73;
        v45[v10] = 1;
      }
      else
      {
        uint64_t v52 = v73;
        uint64_t v57 = *(void **)v46;
        *(void *)unsigned int v45 = *(void *)v46;
        v45[v10] = 0;
        id v58 = v57;
      }
      uint64_t v53 = v71;
      uint64_t v51 = v72;
      uint64_t v54 = v70;
      uint64_t v59 = 8;
      if (v49 > 8) {
        uint64_t v59 = v49;
      }
      uint64_t v60 = 8;
      if (v49 + 1 > 8) {
        uint64_t v60 = v49 + 1;
      }
      if (v68) {
        uint64_t v10 = v59;
      }
      else {
        uint64_t v10 = v60;
      }
    }
    unint64_t v61 = ((v41 | 7) + v53 + v10) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v62 = ((v42 | 7) + v53 + v10) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v63 = *(void *)v62;
    *(unsigned char *)(v61 + 8) = *(unsigned char *)(v62 + 8);
    *(void *)unint64_t v61 = v63;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v51 + 16))((v54 + v61) & v40, (v54 + v62) & v40, v52);
  }
  return v4;
}

uint64_t sub_228B20ED4(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a1 + 2;
  }
  if (v4 == 1)
  {
    swift_release();
    swift_release();
    sub_228B05A34(*(void *)(a1 + 16));
  }
  else
  {
    sub_228B05A34(*(void *)a1);
    swift_release();
  }
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF) {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  }
  if ((int)v7 - 1 < 0 && v6) {
    __swift_destroy_boxed_opaque_existential_0(v5 + 32);
  }
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  uint64_t v12 = ~v11;
  uint64_t v13 = (v5 + v11 + 112) & ~v11;
  unint64_t v14 = *(void *)(v9 + 64);
  unint64_t v15 = (void *)((v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v15 <= 0xFFFFFFFEuLL)
  {
    if (v10) {
      unint64_t v23 = *(void *)(v9 + 64);
    }
    else {
      unint64_t v23 = v14 + 1;
    }
    if (v23 <= 8) {
      uint64_t v18 = 8;
    }
    else {
      uint64_t v18 = v23;
    }
  }
  else
  {
    swift_release();
    swift_release();
    int v16 = (unsigned __int8 *)(((unint64_t)v15 + v11 + 8) & v12);
    if (v10) {
      unint64_t v17 = v14;
    }
    else {
      unint64_t v17 = v14 + 1;
    }
    if (v17 <= 8) {
      uint64_t v18 = 8;
    }
    else {
      uint64_t v18 = v17;
    }
    unsigned int v19 = v16[v18];
    unsigned int v20 = v19 - 3;
    if (v19 >= 3)
    {
      if (v18 <= 3) {
        uint64_t v21 = v18;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *v16;
          goto LABEL_33;
        case 2:
          int v22 = *(unsigned __int16 *)v16;
          goto LABEL_33;
        case 3:
          int v22 = *(unsigned __int16 *)v16 | (v16[2] << 16);
          goto LABEL_33;
        case 4:
          int v22 = *(_DWORD *)v16;
LABEL_33:
          int v24 = (v22 | (v20 << (8 * v18))) + 3;
          unsigned int v19 = v22 + 3;
          if (v18 < 4) {
            unsigned int v19 = v24;
          }
          break;
        default:
          break;
      }
    }
    if (v19 != 2)
    {
      if (v19 == 1)
      {
        if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48))(v16, 1, v8)) {
          (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(v16, v8);
        }
      }
      else
      {
      }
    }
  }
  uint64_t v25 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v26 = *(uint64_t (**)(unint64_t))(v25 + 8);
  unint64_t v27 = (((v18 + ((v11 + 16) & v12) + v13 + 8) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v25 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);

  return v26(v27);
}

uint64_t sub_228B21190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6 = *(unsigned __int8 *)(a2 + 24);
  if (v6 >= 2) {
    unsigned int v6 = *(_DWORD *)a2 + 2;
  }
  if (v6 == 1)
  {
    uint64_t v7 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v7;
    unint64_t v8 = *(void *)(a2 + 16);
    swift_retain();
    swift_retain();
    sub_228B0596C(v8);
    *(void *)(a1 + 16) = v8;
    char v9 = 1;
  }
  else
  {
    uint64_t v10 = *(void *)a2;
    sub_228B0596C(*(void *)a2);
    uint64_t v11 = *(void *)(a2 + 8);
    *(void *)a1 = v10;
    *(void *)(a1 + 8) = v11;
    swift_retain();
    char v9 = 0;
  }
  *(unsigned char *)(a1 + 24) = v9;
  unint64_t v12 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = (_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
  unint64_t v14 = a2 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (a2 & 0xFFFFFFFFFFFFFFF8) + 32;
  unint64_t v16 = *(void *)(v14 + 56);
  LODWORD(v17) = -1;
  if (v16 < 0xFFFFFFFF) {
    uint64_t v17 = *(void *)(v14 + 56);
  }
  if ((int)v17 - 1 < 0)
  {
    if (v16)
    {
      *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56) = v16;
      *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = *(void *)(v15 + 32);
      (**(void (***)(unint64_t, unint64_t))(v16 - 8))((a1 & 0xFFFFFFFFFFFFFFF8) + 32, v15);
    }
    else
    {
      long long v21 = *(_OWORD *)v15;
      long long v22 = *(_OWORD *)(v15 + 16);
      *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = *(void *)(v15 + 32);
      *uint64_t v13 = v21;
      *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v22;
    }
    uint64_t v23 = *(void *)(v15 + 40);
    *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(v15 + 48);
    *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 72) = v23;
    uint64_t v24 = *(void *)(v15 + 56);
    *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(unsigned char *)(v15 + 64);
    *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 88) = v24;
  }
  else
  {
    *uint64_t v13 = *(_OWORD *)v15;
    long long v18 = *(_OWORD *)(v15 + 16);
    long long v19 = *(_OWORD *)(v15 + 32);
    long long v20 = *(_OWORD *)(v15 + 48);
    *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(unsigned char *)(v15 + 64);
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = v19;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v20;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v18;
  }
  *(void *)(v12 + 104) = *(void *)(v14 + 104);
  uint64_t v25 = *(void *)(a3 + 16);
  uint64_t v26 = *(void *)(v25 - 8);
  int v27 = *(_DWORD *)(v26 + 84);
  uint64_t v28 = *(_DWORD *)(v26 + 80) & 0xF8;
  uint64_t v29 = v28 | 7;
  uint64_t v30 = (v12 + (v28 | 7) + 112) & ~(v28 | 7);
  uint64_t v31 = (v14 + (v28 | 7) + 112) & ~(v28 | 7);
  unint64_t v32 = *(void *)(v26 + 64);
  uint64_t v33 = (v28 + 23) & ~(v28 | 7);
  long long v34 = (void *)((v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v34 < 0xFFFFFFFFuLL)
  {
    if (!v27) {
      ++v32;
    }
    if (v32 <= 8) {
      uint64_t v41 = 8;
    }
    else {
      uint64_t v41 = v32;
    }
    memcpy((void *)v30, (const void *)v31, v41 + v33 + 1);
  }
  else
  {
    uint64_t v57 = (v28 + 23) & ~(v28 | 7);
    uint64_t v58 = a3;
    uint64_t v35 = ~v29;
    BOOL v36 = v27 == 0;
    *(void *)uint64_t v30 = *(void *)v31;
    long long v37 = (void *)((v30 + 15) & 0xFFFFFFFFFFFFFFF8);
    *long long v37 = *v34;
    uint64_t v38 = v29 + 8;
    __dst = (unsigned char *)(((unint64_t)v37 + v38) & v35);
    uint64_t v39 = (unsigned __int8 *)(((unint64_t)v34 + v38) & v35);
    if (v36) {
      size_t v40 = v32 + 1;
    }
    else {
      size_t v40 = v32;
    }
    if (v40 <= 8) {
      uint64_t v41 = 8;
    }
    else {
      uint64_t v41 = v40;
    }
    unsigned int v42 = v39[v41];
    swift_retain();
    swift_retain();
    if (v42 >= 3)
    {
      if (v41 <= 3) {
        uint64_t v43 = v41;
      }
      else {
        uint64_t v43 = 4;
      }
      switch(v43)
      {
        case 1:
          int v44 = *v39;
          goto LABEL_36;
        case 2:
          int v44 = *(unsigned __int16 *)v39;
          goto LABEL_36;
        case 3:
          int v44 = *(unsigned __int16 *)v39 | (v39[2] << 16);
          goto LABEL_36;
        case 4:
          int v44 = *(_DWORD *)v39;
LABEL_36:
          int v45 = (v44 | ((v42 - 3) << (8 * v41))) + 3;
          unsigned int v46 = v44 + 3;
          if (v41 >= 4) {
            unsigned int v42 = v46;
          }
          else {
            unsigned int v42 = v45;
          }
          break;
        default:
          break;
      }
    }
    if (v42 == 2)
    {
      unsigned __int8 v47 = *v39;
      uint64_t v33 = v57;
      unsigned char *__dst = v47;
      __dst[v41] = 2;
      a3 = v58;
    }
    else if (v42 == 1)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v26 + 48))(v39, 1, v25))
      {
        memcpy(__dst, v39, v40);
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v26 + 16))(__dst, v39, v25);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
      }
      uint64_t v33 = v57;
      a3 = v58;
      __dst[v41] = 1;
    }
    else
    {
      a3 = v58;
      uint64_t v48 = *(void **)v39;
      *(void *)__dst = *(void *)v39;
      __dst[v41] = 0;
      id v49 = v48;
      uint64_t v33 = v57;
    }
  }
  uint64_t v50 = v41 + v33 + 1;
  unint64_t v51 = ((v30 | 7) + v50) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v52 = ((v31 | 7) + v50) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v53 = *(void *)v52;
  *(unsigned char *)(v51 + 8) = *(unsigned char *)(v52 + 8);
  *(void *)unint64_t v51 = v53;
  uint64_t v54 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v54 + 16))((*(unsigned __int8 *)(v54 + 80) + 9 + v51) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80), (*(unsigned __int8 *)(v54 + 80) + 9 + v52) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
  return a1;
}

uint64_t sub_228B215FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    unsigned int v6 = *(unsigned __int8 *)(a1 + 24);
    if (v6 >= 2) {
      unsigned int v6 = *(_DWORD *)a1 + 2;
    }
    if (v6 == 1)
    {
      swift_release();
      swift_release();
      sub_228B05A34(*(void *)(a1 + 16));
    }
    else
    {
      sub_228B05A34(*(void *)a1);
      swift_release();
    }
    unsigned int v7 = *(unsigned __int8 *)(a2 + 24);
    if (v7 >= 2) {
      unsigned int v7 = *(_DWORD *)a2 + 2;
    }
    if (v7 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      unint64_t v8 = *(void *)(a2 + 16);
      swift_retain();
      swift_retain();
      sub_228B0596C(v8);
      *(void *)(a1 + 16) = v8;
      *(unsigned char *)(a1 + 24) = 1;
    }
    else
    {
      uint64_t v9 = *(void *)a2;
      sub_228B0596C(*(void *)a2);
      *(void *)a1 = v9;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 24) = 0;
      swift_retain();
    }
  }
  unint64_t v10 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = (_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
  unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (a2 & 0xFFFFFFFFFFFFFFF8) + 32;
  unint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  LODWORD(v15) = -1;
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  else {
    uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  }
  int v17 = v16 - 1;
  unint64_t v18 = *(void *)(v12 + 56);
  if (v18 < 0xFFFFFFFF) {
    uint64_t v15 = *(void *)(v12 + 56);
  }
  int v19 = v15 - 1;
  if ((v17 & 0x80000000) == 0)
  {
    if (v19 < 0) {
      goto LABEL_19;
    }
LABEL_24:
    _OWORD *v11 = *(_OWORD *)v13;
    long long v20 = *(_OWORD *)(v13 + 16);
    long long v21 = *(_OWORD *)(v13 + 32);
    long long v22 = *(_OWORD *)(v13 + 48);
    *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(unsigned char *)(v13 + 64);
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = v21;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v22;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v20;
    goto LABEL_31;
  }
  if ((v19 & 0x80000000) == 0)
  {
    if (v14) {
      __swift_destroy_boxed_opaque_existential_0((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
    }
    goto LABEL_24;
  }
  if (v14)
  {
    uint64_t v23 = (uint64_t *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
    if (v18)
    {
      __swift_assign_boxed_opaque_existential_1(v23, (uint64_t *)v13);
      goto LABEL_30;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
LABEL_29:
    long long v24 = *(_OWORD *)v13;
    long long v25 = *(_OWORD *)(v13 + 16);
    *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = *(void *)(v13 + 32);
    _OWORD *v11 = v24;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v25;
    goto LABEL_30;
  }
LABEL_19:
  if (!v18) {
    goto LABEL_29;
  }
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56) = v18;
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = *(void *)(v13 + 32);
  (**(void (***)(unint64_t, unint64_t))(v18 - 8))((a1 & 0xFFFFFFFFFFFFFFF8) + 32, v13);
LABEL_30:
  uint64_t v26 = *(void *)(v13 + 40);
  *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(v13 + 48);
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 72) = v26;
  uint64_t v27 = *(void *)(v13 + 56);
  *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(unsigned char *)(v13 + 64);
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 88) = v27;
LABEL_31:
  *(void *)(v10 + 104) = *(void *)(v12 + 104);
  uint64_t v82 = a3;
  uint64_t v28 = *(void *)(a3 + 16);
  uint64_t v29 = *(void *)(v28 - 8);
  int v30 = *(_DWORD *)(v29 + 84);
  uint64_t v31 = *(_DWORD *)(v29 + 80) & 0xF8;
  uint64_t v32 = v31 | 7;
  unint64_t v33 = v12 + (v31 | 7);
  uint64_t v34 = ~(v31 | 7);
  uint64_t v35 = (v10 + (v31 | 7) + 112) & v34;
  uint64_t v36 = (v33 + 112) & v34;
  size_t v37 = *(void *)(v29 + 64);
  uint64_t v81 = (v31 + 23) & v34;
  uint64_t v38 = (void *)((v35 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v39 = (unint64_t *)((v36 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v40 = *v39;
  if (*v38 >= 0xFFFFFFFFuLL)
  {
    uint64_t v79 = v28;
    uint64_t v80 = (v33 + 112) & v34;
    if (v40 >= 0xFFFFFFFF)
    {
      *(void *)uint64_t v35 = *(void *)v36;
      swift_retain();
      swift_release();
      *uint64_t v38 = *v39;
      swift_retain();
      swift_release();
      uint64_t v41 = (unsigned __int8 *)(((unint64_t)v38 + v32 + 8) & v34);
      unsigned int v42 = (unsigned __int8 *)(((unint64_t)v39 + v32 + 8) & v34);
      if (!v30) {
        ++v37;
      }
      if (v37 <= 8) {
        uint64_t v43 = 8;
      }
      else {
        uint64_t v43 = v37;
      }
      if (v41 == v42) {
        goto LABEL_128;
      }
      unsigned int v44 = v41[v43];
      unsigned int v45 = v44 - 3;
      if (v44 >= 3)
      {
        if (v43 <= 3) {
          uint64_t v46 = v43;
        }
        else {
          uint64_t v46 = 4;
        }
        switch(v46)
        {
          case 1:
            int v47 = *v41;
            goto LABEL_106;
          case 2:
            int v47 = *(unsigned __int16 *)v41;
            goto LABEL_106;
          case 3:
            int v47 = *(unsigned __int16 *)v41 | (v41[2] << 16);
            goto LABEL_106;
          case 4:
            int v47 = *(_DWORD *)v41;
LABEL_106:
            int v65 = (v47 | (v45 << (8 * v43))) + 3;
            unsigned int v44 = v47 + 3;
            if (v43 < 4) {
              unsigned int v44 = v65;
            }
            break;
          default:
            break;
        }
      }
      if (v44 != 2)
      {
        if (v44 == 1)
        {
          if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v29 + 48))(v41, 1, v79)) {
            (*(void (**)(unsigned __int8 *, uint64_t))(v29 + 8))(v41, v79);
          }
        }
        else
        {
        }
      }
      unsigned int v66 = v42[v43];
      unsigned int v67 = v66 - 3;
      if (v66 >= 3)
      {
        if (v43 <= 3) {
          uint64_t v68 = v43;
        }
        else {
          uint64_t v68 = 4;
        }
        switch(v68)
        {
          case 1:
            int v69 = *v42;
            goto LABEL_122;
          case 2:
            int v69 = *(unsigned __int16 *)v42;
            goto LABEL_122;
          case 3:
            int v69 = *(unsigned __int16 *)v42 | (v42[2] << 16);
            goto LABEL_122;
          case 4:
            int v69 = *(_DWORD *)v42;
LABEL_122:
            int v70 = (v69 | (v67 << (8 * v43))) + 3;
            unsigned int v66 = v69 + 3;
            if (v43 < 4) {
              unsigned int v66 = v70;
            }
            break;
          default:
            break;
        }
      }
      if (v66 != 2)
      {
        if (v66 != 1) {
          goto LABEL_126;
        }
        goto LABEL_87;
      }
LABEL_127:
      *uint64_t v41 = *v42;
      v41[v43] = 2;
LABEL_128:
      uint64_t v63 = v82;
      goto LABEL_129;
    }
    swift_release();
    swift_release();
    unint64_t v51 = (unsigned __int8 *)(((unint64_t)v38 + v32 + 8) & v34);
    if (v30) {
      unint64_t v52 = v37;
    }
    else {
      unint64_t v52 = v37 + 1;
    }
    if (v52 <= 8) {
      uint64_t v43 = 8;
    }
    else {
      uint64_t v43 = v52;
    }
    unsigned int v53 = v51[v43];
    unsigned int v54 = v53 - 3;
    if (v53 < 3)
    {
      uint64_t v56 = v81;
LABEL_77:
      if (v53 == 2) {
        goto LABEL_101;
      }
    }
    else
    {
      if (v43 <= 3) {
        uint64_t v55 = v43;
      }
      else {
        uint64_t v55 = 4;
      }
      uint64_t v56 = v81;
      switch(v55)
      {
        case 1:
          int v57 = *v51;
          break;
        case 2:
          int v57 = *(unsigned __int16 *)v51;
          break;
        case 3:
          int v57 = *(unsigned __int16 *)v51 | (v51[2] << 16);
          break;
        case 4:
          int v57 = *(_DWORD *)v51;
          break;
        default:
          goto LABEL_77;
      }
      int v64 = (v57 | (v54 << (8 * v43))) + 3;
      unsigned int v53 = v57 + 3;
      if (v43 < 4) {
        unsigned int v53 = v64;
      }
      if (v53 == 2) {
        goto LABEL_101;
      }
    }
    if (v53 == 1)
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v29 + 48))(v51, 1, v79)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v29 + 8))(v51, v79);
      }
    }
    else
    {
    }
LABEL_101:
    size_t v59 = v43 + v56 + 1;
    uint64_t v60 = (void *)v35;
    uint64_t v36 = v80;
    goto LABEL_102;
  }
  if (v40 >= 0xFFFFFFFF)
  {
    uint64_t v79 = v28;
    uint64_t v80 = (v33 + 112) & v34;
    *(void *)uint64_t v35 = *(void *)v36;
    *uint64_t v38 = *v39;
    uint64_t v41 = (unsigned __int8 *)(((unint64_t)v38 + v32 + 8) & v34);
    unsigned int v42 = (unsigned __int8 *)(((unint64_t)v39 + v32 + 8) & v34);
    if (!v30) {
      ++v37;
    }
    if (v37 <= 8) {
      uint64_t v43 = 8;
    }
    else {
      uint64_t v43 = v37;
    }
    unsigned int v48 = v42[v43];
    swift_retain();
    swift_retain();
    if (v48 >= 3)
    {
      if (v43 <= 3) {
        uint64_t v49 = v43;
      }
      else {
        uint64_t v49 = 4;
      }
      switch(v49)
      {
        case 1:
          int v50 = *v42;
          goto LABEL_82;
        case 2:
          int v50 = *(unsigned __int16 *)v42;
          goto LABEL_82;
        case 3:
          int v50 = *(unsigned __int16 *)v42 | (v42[2] << 16);
          goto LABEL_82;
        case 4:
          int v50 = *(_DWORD *)v42;
LABEL_82:
          int v61 = (v50 | ((v48 - 3) << (8 * v43))) + 3;
          unsigned int v62 = v50 + 3;
          if (v43 >= 4) {
            unsigned int v48 = v62;
          }
          else {
            unsigned int v48 = v61;
          }
          break;
        default:
          break;
      }
    }
    if (v48 != 2)
    {
      if (v48 != 1)
      {
LABEL_126:
        uint64_t v63 = v82;
        uint64_t v71 = *(void **)v42;
        *(void *)uint64_t v41 = *(void *)v42;
        v41[v43] = 0;
        id v72 = v71;
LABEL_129:
        uint64_t v36 = v80;
        uint64_t v56 = v81;
        goto LABEL_130;
      }
LABEL_87:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v29 + 48))(v42, 1, v79))
      {
        memcpy(v41, v42, v37);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v29 + 16))(v41, v42, v79);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v29 + 56))(v41, 0, 1, v79);
      }
      uint64_t v63 = v82;
      v41[v43] = 1;
      goto LABEL_129;
    }
    goto LABEL_127;
  }
  if (v30) {
    unint64_t v58 = *(void *)(v29 + 64);
  }
  else {
    unint64_t v58 = v37 + 1;
  }
  if (v58 <= 8) {
    uint64_t v43 = 8;
  }
  else {
    uint64_t v43 = v58;
  }
  uint64_t v56 = v81;
  size_t v59 = v43 + v81 + 1;
  uint64_t v60 = (void *)v35;
LABEL_102:
  memcpy(v60, (const void *)v36, v59);
  uint64_t v63 = v82;
LABEL_130:
  uint64_t v73 = v43 + v56 + 1;
  unint64_t v74 = ((v35 | 7) + v73) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v75 = ((v36 | 7) + v73) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v76 = *(void *)v75;
  *(unsigned char *)(v74 + 8) = *(unsigned char *)(v75 + 8);
  *(void *)unint64_t v74 = v76;
  uint64_t v77 = *(void *)(*(void *)(v63 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v77 + 24))((*(unsigned __int8 *)(v77 + 80) + 9 + v74) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80), (*(unsigned __int8 *)(v77 + 80) + 9 + v75) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80));
  return a1;
}

uint64_t sub_228B21E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  unsigned int v5 = *(unsigned __int8 *)(a2 + 24);
  if (v5 >= 2) {
    unsigned int v5 = *(_DWORD *)a2 + 2;
  }
  if (v5 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    char v6 = 1;
  }
  else
  {
    char v6 = 0;
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(unsigned char *)(a1 + 24) = v6;
  unint64_t v7 = a1 & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v7 + 32) = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
  long long v8 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 48);
  long long v9 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 64);
  long long v10 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 80);
  *(unsigned char *)(v7 + 96) = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 96);
  *(_OWORD *)(v7 + 64) = v9;
  *(_OWORD *)(v7 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v10;
  *(_OWORD *)(v7 + 48) = v8;
  *(void *)(v7 + 104) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 104);
  uint64_t v11 = *(void *)(a3 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(_DWORD *)(v12 + 84);
  uint64_t v14 = *(_DWORD *)(v12 + 80) & 0xF8;
  uint64_t v15 = v14 | 7;
  unint64_t v16 = ((a1 & 0xFFFFFFFFFFFFFFF8) + (v14 | 7) + 112) & ~(v14 | 7);
  unint64_t v17 = ((a2 & 0xFFFFFFFFFFFFFFF8) + (v14 | 7) + 112) & ~(v14 | 7);
  unint64_t v18 = *(void *)(v12 + 64);
  uint64_t v19 = (v14 + 23) & ~(v14 | 7);
  long long v20 = (void *)((v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v20 < 0xFFFFFFFFuLL)
  {
    if (!v13) {
      ++v18;
    }
    if (v18 <= 8) {
      uint64_t v28 = 8;
    }
    else {
      uint64_t v28 = v18;
    }
    memcpy((void *)v16, (const void *)(((a2 & 0xFFFFFFFFFFFFFFF8) + (v14 | 7) + 112) & ~(v14 | 7)), v28 + v19 + 1);
  }
  else
  {
    uint64_t v21 = ~v15;
    BOOL v22 = v13 == 0;
    *(void *)unint64_t v16 = *(void *)v17;
    uint64_t v23 = (void *)((v16 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v23 = *v20;
    uint64_t v24 = v15 + 8;
    long long v25 = (unsigned char *)(((unint64_t)v23 + v24) & v21);
    uint64_t v26 = (unsigned __int8 *)(((unint64_t)v20 + v24) & v21);
    if (v22) {
      size_t v27 = v18 + 1;
    }
    else {
      size_t v27 = v18;
    }
    if (v27 <= 8) {
      uint64_t v28 = 8;
    }
    else {
      uint64_t v28 = v27;
    }
    unsigned int v29 = v26[v28];
    unsigned int v30 = v29 - 3;
    if (v29 >= 3)
    {
      if (v28 <= 3) {
        uint64_t v31 = v28;
      }
      else {
        uint64_t v31 = 4;
      }
      switch(v31)
      {
        case 1:
          int v32 = *v26;
          goto LABEL_28;
        case 2:
          int v32 = *(unsigned __int16 *)v26;
          goto LABEL_28;
        case 3:
          int v32 = *(unsigned __int16 *)v26 | (v26[2] << 16);
          goto LABEL_28;
        case 4:
          int v32 = *(_DWORD *)v26;
LABEL_28:
          int v33 = (v32 | (v30 << (8 * v28))) + 3;
          unsigned int v29 = v32 + 3;
          if (v28 < 4) {
            unsigned int v29 = v33;
          }
          break;
        default:
          break;
      }
    }
    if (v29 == 2)
    {
      *long long v25 = *v26;
      v25[v28] = 2;
    }
    else if (v29 == 1)
    {
      uint64_t v34 = v25;
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v12 + 48))(v26, 1, v11))
      {
        memcpy(v34, v26, v27);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v12 + 32))(v34, v26, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v34, 0, 1, v11);
      }
      *((unsigned char *)v34 + v28) = 1;
      uint64_t v3 = a3;
    }
    else
    {
      *(void *)long long v25 = *(void *)v26;
      v25[v28] = 0;
    }
  }
  uint64_t v35 = v28 + v19 + 1;
  unint64_t v36 = ((v16 | 7) + v35) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = ((v17 | 7) + v35) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = *(void *)v37;
  *(unsigned char *)(v36 + 8) = *(unsigned char *)(v37 + 8);
  *(void *)unint64_t v36 = v38;
  uint64_t v39 = *(void *)(*(void *)(v3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v39 + 32))((*(unsigned __int8 *)(v39 + 80) + 9 + v36) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80), (*(unsigned __int8 *)(v39 + 80) + 9 + v37) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
  return a1;
}

uint64_t sub_228B221C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    unsigned int v6 = *(unsigned __int8 *)(a1 + 24);
    if (v6 >= 2) {
      unsigned int v6 = *(_DWORD *)a1 + 2;
    }
    if (v6 == 1)
    {
      swift_release();
      swift_release();
      sub_228B05A34(*(void *)(a1 + 16));
    }
    else
    {
      sub_228B05A34(*(void *)a1);
      swift_release();
    }
    unsigned int v7 = *(unsigned __int8 *)(a2 + 24);
    if (v7 >= 2) {
      unsigned int v7 = *(_DWORD *)a2 + 2;
    }
    if (v7 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      char v8 = 1;
    }
    else
    {
      char v8 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    *(unsigned char *)(a1 + 24) = v8;
  }
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  long long v10 = (_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
  unint64_t v11 = a2 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = (_OWORD *)(v11 + 32);
  unint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  LODWORD(v14) = -1;
  if (v13 < 0xFFFFFFFF) {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  }
  if ((int)v14 - 1 >= 0) {
    goto LABEL_16;
  }
  unint64_t v44 = *(void *)(v11 + 56);
  if (v44 >= 0xFFFFFFFF) {
    LODWORD(v44) = -1;
  }
  if ((int)v44 - 1 >= 0)
  {
    if (v13) {
      __swift_destroy_boxed_opaque_existential_0((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
    }
LABEL_16:
    *long long v10 = *v12;
    long long v15 = *(_OWORD *)(v11 + 48);
    long long v16 = *(_OWORD *)(v11 + 64);
    long long v17 = *(_OWORD *)(v11 + 80);
    *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(unsigned char *)(v11 + 96);
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = v16;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v17;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v15;
    goto LABEL_17;
  }
  if (v13) {
    __swift_destroy_boxed_opaque_existential_0((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
  }
  long long v52 = *v12;
  long long v53 = *(_OWORD *)(v11 + 48);
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = *(void *)(v11 + 64);
  *long long v10 = v52;
  *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v53;
  uint64_t v54 = *(void *)(v11 + 72);
  *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(v11 + 80);
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 72) = v54;
  uint64_t v55 = *(void *)(v11 + 88);
  *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(unsigned char *)(v11 + 96);
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 88) = v55;
LABEL_17:
  *(void *)(v9 + 104) = *(void *)(v11 + 104);
  uint64_t v75 = a3;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = *(void *)(v18 - 8);
  int v20 = *(_DWORD *)(v19 + 84);
  uint64_t v21 = *(_DWORD *)(v19 + 80) & 0xF8;
  uint64_t v22 = v21 | 7;
  uint64_t v23 = ~(v21 | 7);
  uint64_t v24 = (v9 + (v21 | 7) + 112) & v23;
  uint64_t v25 = (v11 + (v21 | 7) + 112) & v23;
  size_t v26 = *(void *)(v19 + 64);
  uint64_t v74 = (v21 + 23) & v23;
  size_t v27 = (void *)((v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = (unint64_t *)((v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = *v28;
  if (*v27 < 0xFFFFFFFFuLL)
  {
    if (v29 >= 0xFFFFFFFF)
    {
      *(void *)uint64_t v24 = *(void *)v25;
      *size_t v27 = *v28;
      uint64_t v39 = v22 + 8;
      uint64_t v31 = (unsigned __int8 *)(((unint64_t)v27 + v22 + 8) & v23);
      int v32 = (unsigned __int8 *)(((unint64_t)v28 + v39) & v23);
      if (v20) {
        size_t v33 = v26;
      }
      else {
        size_t v33 = v26 + 1;
      }
      if (v33 <= 8) {
        uint64_t v34 = 8;
      }
      else {
        uint64_t v34 = v33;
      }
      unsigned int v40 = v32[v34];
      unsigned int v41 = v40 - 3;
      if (v40 >= 3)
      {
        if (v34 <= 3) {
          uint64_t v42 = v34;
        }
        else {
          uint64_t v42 = 4;
        }
        switch(v42)
        {
          case 1:
            int v43 = *v32;
            goto LABEL_74;
          case 2:
            int v43 = *(unsigned __int16 *)v32;
            goto LABEL_74;
          case 3:
            int v43 = *(unsigned __int16 *)v32 | (v32[2] << 16);
            goto LABEL_74;
          case 4:
            int v43 = *(_DWORD *)v32;
LABEL_74:
            int v56 = (v43 | (v41 << (8 * v34))) + 3;
            unsigned int v40 = v43 + 3;
            if (v34 < 4) {
              unsigned int v40 = v56;
            }
            break;
          default:
            break;
        }
      }
      if (v40 != 2)
      {
        if (v40 == 1)
        {
          uint64_t v57 = v18;
          if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v19 + 48))(v32, 1, v18))
          {
LABEL_115:
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v19 + 32))(v31, v32, v57);
            (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v19 + 56))(v31, 0, 1, v57);
            goto LABEL_116;
          }
LABEL_79:
          memcpy(v31, v32, v33);
LABEL_116:
          v31[v34] = 1;
LABEL_119:
          uint64_t v59 = v74;
          uint64_t v60 = v75;
          goto LABEL_120;
        }
LABEL_118:
        *(void *)uint64_t v31 = *(void *)v32;
        v31[v34] = 0;
        goto LABEL_119;
      }
LABEL_117:
      unsigned __int8 *v31 = *v32;
      v31[v34] = 2;
      goto LABEL_119;
    }
    if (v20) {
      unint64_t v51 = *(void *)(v19 + 64);
    }
    else {
      unint64_t v51 = v26 + 1;
    }
    if (v51 <= 8) {
      uint64_t v34 = 8;
    }
    else {
      uint64_t v34 = v51;
    }
  }
  else
  {
    uint64_t v73 = v18;
    if (v29 >= 0xFFFFFFFF)
    {
      *(void *)uint64_t v24 = *(void *)v25;
      swift_release();
      *size_t v27 = *v28;
      swift_release();
      uint64_t v30 = v22 + 8;
      uint64_t v31 = (unsigned __int8 *)(((unint64_t)v27 + v22 + 8) & v23);
      int v32 = (unsigned __int8 *)(((unint64_t)v28 + v30) & v23);
      if (v20) {
        size_t v33 = v26;
      }
      else {
        size_t v33 = v26 + 1;
      }
      if (v33 <= 8) {
        uint64_t v34 = 8;
      }
      else {
        uint64_t v34 = v33;
      }
      if (v31 == v32) {
        goto LABEL_119;
      }
      unsigned int v35 = v31[v34];
      unsigned int v36 = v35 - 3;
      if (v35 >= 3)
      {
        if (v34 <= 3) {
          uint64_t v37 = v34;
        }
        else {
          uint64_t v37 = 4;
        }
        switch(v37)
        {
          case 1:
            int v38 = *v31;
            goto LABEL_94;
          case 2:
            int v38 = *(unsigned __int16 *)v31;
            goto LABEL_94;
          case 3:
            int v38 = *(unsigned __int16 *)v31 | (v31[2] << 16);
            goto LABEL_94;
          case 4:
            int v38 = *(_DWORD *)v31;
LABEL_94:
            int v61 = (v38 | (v36 << (8 * v34))) + 3;
            unsigned int v35 = v38 + 3;
            if (v34 < 4) {
              unsigned int v35 = v61;
            }
            break;
          default:
            break;
        }
      }
      if (v35 != 2)
      {
        if (v35 == 1)
        {
          if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v19 + 48))(v31, 1, v73)) {
            (*(void (**)(unsigned __int8 *, uint64_t))(v19 + 8))(v31, v73);
          }
        }
        else
        {
        }
      }
      unsigned int v62 = v32[v34];
      unsigned int v63 = v62 - 3;
      if (v62 >= 3)
      {
        if (v34 <= 3) {
          uint64_t v64 = v34;
        }
        else {
          uint64_t v64 = 4;
        }
        switch(v64)
        {
          case 1:
            int v65 = *v32;
            goto LABEL_110;
          case 2:
            int v65 = *(unsigned __int16 *)v32;
            goto LABEL_110;
          case 3:
            int v65 = *(unsigned __int16 *)v32 | (v32[2] << 16);
            goto LABEL_110;
          case 4:
            int v65 = *(_DWORD *)v32;
LABEL_110:
            int v66 = (v65 | (v63 << (8 * v34))) + 3;
            unsigned int v62 = v65 + 3;
            if (v34 < 4) {
              unsigned int v62 = v66;
            }
            break;
          default:
            break;
        }
      }
      if (v62 != 2)
      {
        if (v62 == 1)
        {
          uint64_t v57 = v73;
          if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v19 + 48))(v32, 1, v73)) {
            goto LABEL_115;
          }
          goto LABEL_79;
        }
        goto LABEL_118;
      }
      goto LABEL_117;
    }
    swift_release();
    swift_release();
    unsigned int v45 = (unsigned __int8 *)(((unint64_t)v27 + v22 + 8) & v23);
    if (v20) {
      unint64_t v46 = v26;
    }
    else {
      unint64_t v46 = v26 + 1;
    }
    if (v46 <= 8) {
      uint64_t v34 = 8;
    }
    else {
      uint64_t v34 = v46;
    }
    unsigned int v47 = v45[v34];
    unsigned int v48 = v47 - 3;
    if (v47 >= 3)
    {
      if (v34 <= 3) {
        uint64_t v49 = v34;
      }
      else {
        uint64_t v49 = 4;
      }
      switch(v49)
      {
        case 1:
          int v50 = *v45;
          goto LABEL_83;
        case 2:
          int v50 = *(unsigned __int16 *)v45;
          goto LABEL_83;
        case 3:
          int v50 = *(unsigned __int16 *)v45 | (v45[2] << 16);
          goto LABEL_83;
        case 4:
          int v50 = *(_DWORD *)v45;
LABEL_83:
          int v58 = (v50 | (v48 << (8 * v34))) + 3;
          unsigned int v47 = v50 + 3;
          if (v34 < 4) {
            unsigned int v47 = v58;
          }
          break;
        default:
          break;
      }
    }
    if (v47 != 2)
    {
      if (v47 == 1)
      {
        if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v19 + 48))(v45, 1, v73)) {
          (*(void (**)(unsigned __int8 *, uint64_t))(v19 + 8))(v45, v73);
        }
      }
      else
      {
      }
    }
  }
  uint64_t v59 = v74;
  memcpy((void *)v24, (const void *)v25, v34 + v74 + 1);
  uint64_t v60 = v75;
LABEL_120:
  uint64_t v67 = v34 + v59 + 1;
  unint64_t v68 = ((v24 | 7) + v67) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v69 = ((v25 | 7) + v67) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v70 = *(void *)v69;
  *(unsigned char *)(v68 + 8) = *(unsigned char *)(v69 + 8);
  *(void *)unint64_t v68 = v70;
  uint64_t v71 = *(void *)(*(void *)(v60 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v71 + 40))((*(unsigned __int8 *)(v71 + 80) + 9 + v68) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80), (*(unsigned __int8 *)(v71 + 80) + 9 + v69) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80));
  return a1;
}

uint64_t sub_228B22960(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v7 = v6;
  unsigned int v8 = *(_DWORD *)(v6 + 84);
  if (v8 <= 0x7FFFFFFE) {
    unsigned int v9 = 2147483646;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  int v10 = *(_DWORD *)(v4 + 80);
  if (!*(_DWORD *)(v4 + 84)) {
    ++v5;
  }
  uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
  if (v5 <= 8) {
    uint64_t v12 = 8;
  }
  else {
    uint64_t v12 = v5;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = v10 & 0xF8;
  uint64_t v14 = v13 | 7;
  uint64_t v15 = v12 + ((v13 + 23) & ~(v13 | 7)) + 1;
  uint64_t v16 = v11 + 9;
  int v17 = a2 - v9;
  if (a2 <= v9) {
    goto LABEL_28;
  }
  unint64_t v18 = ((v16 + ((v15 + ((v13 + 119) & ~v14) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v11)
      + *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  char v19 = 8 * v18;
  if (v18 <= 3)
  {
    unsigned int v22 = ((v17 + ~(-1 << v19)) >> v19) + 1;
    if (HIWORD(v22))
    {
      int v20 = *(_DWORD *)(a1 + v18);
      if (!v20) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v22 > 0xFF)
    {
      int v20 = *(unsigned __int16 *)(a1 + v18);
      if (!*(_WORD *)(a1 + v18)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v22 < 2)
    {
LABEL_28:
      unint64_t v24 = ((a1 & 0xFFFFFFFFFFFFFFF8) + v14 + 112) & ~v14;
      if (v8 > 0x7FFFFFFE) {
        return (*(uint64_t (**)(unint64_t))(v7 + 48))((v16 + (((v24 | 7) + v15) & 0xFFFFFFFFFFFFFFF8)) & ~v11);
      }
      unint64_t v25 = *(void *)((v24 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v25 >= 0xFFFFFFFF) {
        LODWORD(v25) = -1;
      }
      if ((v25 + 1) >= 2) {
        return v25;
      }
      else {
        return 0;
      }
    }
  }
  int v20 = *(unsigned __int8 *)(a1 + v18);
  if (!*(unsigned char *)(a1 + v18)) {
    goto LABEL_28;
  }
LABEL_20:
  int v23 = (v20 - 1) << v19;
  if (v18 > 3) {
    int v23 = 0;
  }
  if (v18)
  {
    if (v18 > 3) {
      LODWORD(v18) = 4;
    }
    switch((int)v18)
    {
      case 2:
        LODWORD(v18) = *(unsigned __int16 *)a1;
        break;
      case 3:
        LODWORD(v18) = *(unsigned __int16 *)a1 | (*(unsigned __int8 *)(a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v18) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v18) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v9 + (v18 | v23) + 1;
}

void sub_228B22BC0(unint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v10 = 2147483646;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  BOOL v11 = *(_DWORD *)(v6 + 84) == 0;
  uint64_t v12 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v13 = v12 | 7;
  uint64_t v14 = (v12 + 119) & ~(v12 | 7);
  uint64_t v15 = (v12 + 23) & ~(v12 | 7);
  if (v11) {
    ++v7;
  }
  if (v7 <= 8) {
    unint64_t v7 = 8;
  }
  size_t v16 = v7 + v15 + 1;
  unint64_t v17 = (v16 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = *(unsigned __int8 *)(v8 + 80);
  size_t v19 = ((v18 + 9 + v17) & ~v18) + *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  BOOL v20 = a3 >= v10;
  unsigned int v21 = a3 - v10;
  if (v21 != 0 && v20)
  {
    if (v19 <= 3)
    {
      unsigned int v25 = ((v21 + ~(-1 << (8 * v19))) >> (8 * v19)) + 1;
      if (HIWORD(v25))
      {
        int v22 = 4;
      }
      else if (v25 >= 0x100)
      {
        int v22 = 2;
      }
      else
      {
        int v22 = v25 > 1;
      }
    }
    else
    {
      int v22 = 1;
    }
  }
  else
  {
    int v22 = 0;
  }
  if (v10 < a2)
  {
    unsigned int v23 = ~v10 + a2;
    if (v19 < 4)
    {
      int v24 = (v23 >> (8 * v19)) + 1;
      if (v19)
      {
        int v26 = v23 & ~(-1 << (8 * v19));
        bzero((void *)a1, v19);
        if (v19 == 3)
        {
          *(_WORD *)a1 = v26;
          *(unsigned char *)(a1 + 2) = BYTE2(v26);
        }
        else if (v19 == 2)
        {
          *(_WORD *)a1 = v26;
        }
        else
        {
          *(unsigned char *)a1 = v26;
        }
      }
    }
    else
    {
      bzero((void *)a1, v19);
      *(_DWORD *)a1 = v23;
      int v24 = 1;
    }
    switch(v22)
    {
      case 1:
        *(unsigned char *)(a1 + v19) = v24;
        return;
      case 2:
        *(_WORD *)(a1 + v19) = v24;
        return;
      case 3:
        goto LABEL_56;
      case 4:
        *(_DWORD *)(a1 + v19) = v24;
        return;
      default:
        return;
    }
  }
  switch(v22)
  {
    case 1:
      *(unsigned char *)(a1 + v19) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_28;
    case 2:
      *(_WORD *)(a1 + v19) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_28;
    case 3:
LABEL_56:
      __break(1u);
      JUMPOUT(0x228B22F58);
    case 4:
      *(_DWORD *)(a1 + v19) = 0;
      goto LABEL_27;
    default:
LABEL_27:
      if (a2)
      {
LABEL_28:
        unint64_t v27 = ((a1 & 0xFFFFFFFFFFFFFFF8) + v13 + 112) & ~v13;
        if (v9 > 0x7FFFFFFE)
        {
          uint64_t v28 = *(void (**)(unint64_t))(v8 + 56);
          v28((v18 + 9 + (((v27 | 7) + v16) & 0xFFFFFFFFFFFFFFF8)) & ~v18);
        }
        else if (a2 > 0x7FFFFFFE)
        {
          if (v16 <= 3) {
            int v29 = ~(-1 << (8 * v16));
          }
          else {
            int v29 = -1;
          }
          if (v16)
          {
            int v30 = v29 & (a2 - 0x7FFFFFFF);
            if (v16 <= 3) {
              int v31 = v16;
            }
            else {
              int v31 = 4;
            }
            bzero((void *)v27, v16);
            switch(v31)
            {
              case 2:
                *(_WORD *)unint64_t v27 = v30;
                break;
              case 3:
                *(_WORD *)unint64_t v27 = v30;
                *(unsigned char *)(v27 + 2) = BYTE2(v30);
                break;
              case 4:
                *(_DWORD *)unint64_t v27 = v30;
                break;
              default:
                *(unsigned char *)unint64_t v27 = v30;
                break;
            }
          }
        }
        else
        {
          *(void *)((v27 + 15) & 0xFFFFFFFFFFFFFFF8) = a2;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for MapContentView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_228B22FA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v36 = a1;
  uint64_t v40 = a9;
  uint64_t v58 = *MEMORY[0x263EF8340];
  uint64_t v54 = a6;
  uint64_t v55 = a7;
  type metadata accessor for MapBridgingView();
  swift_getWitnessTable();
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  uint64_t v52 = OpaqueTypeMetadata2;
  uint64_t v53 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v17 = type metadata accessor for MapPreferenceWrapper();
  uint64_t v39 = sub_228BAC5E8();
  uint64_t v38 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v35 = (uint64_t)&v32 - v18;
  uint64_t v19 = a3;
  uint64_t v52 = a3;
  uint64_t v53 = a4;
  uint64_t v54 = a5;
  uint64_t v55 = a6;
  uint64_t v56 = a7;
  uint64_t v57 = a8;
  uint64_t v20 = type metadata accessor for _MapContentView.Child();
  uint64_t v34 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  unsigned int v23 = (char *)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  size_t v33 = (char *)&v32 - v24;
  uint64_t v52 = v19;
  uint64_t v53 = a4;
  uint64_t v54 = a5;
  uint64_t v55 = a6;
  uint64_t v56 = a7;
  uint64_t v57 = a8;
  type metadata accessor for _MapContentView();
  uint64_t v45 = v19;
  uint64_t v46 = a4;
  uint64_t v47 = a5;
  uint64_t v48 = a6;
  uint64_t v49 = a7;
  uint64_t v50 = a8;
  uint64_t v51 = v36;
  swift_getWitnessTable();
  sub_228BACFC8();
  unsigned int v25 = v33;
  swift_dynamicCast();
  uint64_t v26 = v34;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v23, v25, v20);
  uint64_t v42 = v17;
  uint64_t v43 = v20;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v27 = sub_228BAC488();
  sub_228AC7E20((uint64_t)v23, (uint64_t)sub_228AC986C, (uint64_t)v41, v20, MEMORY[0x263F8E628], v27, MEMORY[0x263F8E658], v28);
  int v29 = *(void (**)(char *, uint64_t))(v26 + 8);
  v29(v23, v20);
  uint64_t v30 = v35;
  sub_228ACB078(v52, v35);
  swift_getWitnessTable();
  sub_228BACFD8();
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v30, v39);
  return ((uint64_t (*)(char *, uint64_t))v29)(v25, v20);
}

uint64_t sub_228B23444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10)
{
  uint64_t v153 = a7;
  uint64_t v154 = a8;
  uint64_t v152 = a6;
  uint64_t v149 = a4;
  uint64_t v150 = a5;
  uint64_t v145 = a3;
  uint64_t v140 = a2;
  uint64_t v135 = a1;
  uint64_t v119 = a9;
  uint64_t v151 = a10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F28);
  uint64_t v122 = *(void *)(v14 - 8);
  uint64_t v123 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v120 = v16;
  uint64_t v121 = (char *)&v116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v141 = (uint64_t)&v116 - v17;
  uint64_t v200 = a4;
  uint64_t v201 = a5;
  uint64_t v202 = a7;
  uint64_t v203 = a8;
  type metadata accessor for MapSelectionManagerBox();
  sub_228BAD218();
  uint64_t v156 = sub_228BAD718();
  uint64_t v18 = sub_228BAC5E8();
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v118 = v18;
  MEMORY[0x270FA5388](v18);
  unint64_t v155 = (unsigned int *)((char *)&v116 - v19);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F30);
  uint64_t v126 = *(void *)(v20 - 8);
  uint64_t v127 = v20;
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v124 = v22;
  uint64_t v125 = (char *)&v116 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v159 = (char *)&v116 - v23;
  uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F38);
  uint64_t v157 = *(void *)(v147 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v147);
  uint64_t v128 = v25;
  uint64_t v129 = (char *)&v116 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v160 = (uint64_t)&v116 - v26;
  uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268292F40);
  uint64_t v158 = *(void *)(v148 - 8);
  uint64_t v146 = *(void *)(v158 + 64);
  uint64_t v27 = MEMORY[0x270FA5388](v148);
  id v144 = (char *)&v116 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v163 = (uint64_t)&v116 - v29;
  uint64_t v30 = sub_228BAC5E8();
  uint64_t v142 = *(void *)(v30 - 8);
  uint64_t v143 = v30;
  MEMORY[0x270FA5388](v30);
  uint64_t v139 = (uint64_t)&v116 - v31;
  uint64_t v32 = type metadata accessor for _MapContentOutputs(0);
  MEMORY[0x270FA5388](v32 - 8);
  uint64_t v162 = (uint64_t)&v116 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_228BACD78();
  uint64_t v137 = *(void *)(v34 - 8);
  char v138 = (char *)v34;
  MEMORY[0x270FA5388](v34);
  char v136 = (char *)&v116 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_228BAC608();
  uint64_t v131 = *(void *)(v36 - 8);
  uint64_t v37 = v131;
  uint64_t v132 = v36;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v134 = (char *)&v116 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  unsigned int v41 = (char *)&v116 - v40;
  uint64_t v130 = (char *)&v116 - v40;
  uint64_t v42 = sub_228BACB48();
  uint64_t v133 = *(void *)(v42 - 8);
  uint64_t v43 = v133;
  MEMORY[0x270FA5388](v42);
  uint64_t v45 = (char *)&v116 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for _MapContentInputs(0);
  uint64_t v47 = (int *)(v46 - 8);
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  uint64_t v50 = (char *)&v116 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v48);
  uint64_t v161 = (uint64_t)&v116 - v51;
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  uint64_t v53 = v42;
  v52(v45, v135, v42);
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
  uint64_t v55 = v41;
  uint64_t v56 = v132;
  v54(v55, v140, v132);
  *(_DWORD *)&v50[v47[9]] = *MEMORY[0x263F288F8];
  v52(v50, (uint64_t)v45, v42);
  uint64_t v57 = v130;
  v54(&v50[v47[7]], (uint64_t)v130, v56);
  v54(v134, (uint64_t)v57, v56);
  uint64_t v58 = v136;
  sub_228BACD58();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v57, v56);
  (*(void (**)(char *, uint64_t))(v133 + 8))(v45, v53);
  (*(void (**)(char *, char *, char *))(v137 + 32))(&v50[v47[8]], v58, v138);
  char v138 = v50;
  sub_228B4D404((uint64_t)v50, v161, type metadata accessor for _MapContentInputs);
  sub_228AC1BFC();
  sub_228BACD48();
  sub_228AC1BA8();
  sub_228BACD48();
  sub_228AC1B54();
  sub_228BACD48();
  sub_228AC1B00();
  sub_228BACD48();
  sub_228AC1AAC();
  sub_228BACD48();
  sub_228AC19FC();
  sub_228BACD48();
  uint64_t v60 = v149;
  uint64_t v59 = v150;
  uint64_t v194 = v149;
  uint64_t v195 = v150;
  uint64_t v61 = v152;
  uint64_t v62 = v153;
  uint64_t v196 = v152;
  uint64_t v197 = v153;
  uint64_t v63 = v154;
  uint64_t v64 = v151;
  uint64_t v198 = v154;
  uint64_t v199 = v151;
  uint64_t v200 = v149;
  uint64_t v201 = v150;
  uint64_t v202 = v152;
  uint64_t v203 = v153;
  uint64_t v204 = v154;
  uint64_t v205 = v151;
  type metadata accessor for _MapContentView();
  uint64_t v140 = sub_228BAC5E8();
  uint64_t v65 = v139;
  sub_228B538E4((void (*)(uint64_t))sub_228B3C174, v61, v139);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 32))(v65, v161, v61, v64);
  (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v65, v143);
  uint64_t v188 = v60;
  uint64_t v189 = v59;
  uint64_t v190 = v61;
  uint64_t v191 = v62;
  uint64_t v192 = v63;
  uint64_t v193 = v64;
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F68);
  sub_228B538E4((void (*)(uint64_t))sub_228B3C18C, v66, v163);
  uint64_t v182 = v60;
  uint64_t v183 = v59;
  uint64_t v184 = v61;
  uint64_t v185 = v62;
  uint64_t v186 = v63;
  uint64_t v187 = v64;
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(qword_268292B80);
  sub_228B538E4((void (*)(uint64_t))sub_228B3C1A4, v67, v160);
  uint64_t v176 = v60;
  uint64_t v177 = v59;
  uint64_t v178 = v61;
  uint64_t v179 = v62;
  uint64_t v180 = v63;
  uint64_t v181 = v64;
  sub_228B538E4((void (*)(uint64_t))sub_228B3C1BC, (uint64_t)&type metadata for MapInteractionModes, (uint64_t)v159);
  uint64_t v170 = v60;
  uint64_t v171 = v59;
  uint64_t v172 = v61;
  uint64_t v173 = v62;
  uint64_t v174 = v63;
  uint64_t v175 = v64;
  sub_228B538E4((void (*)(uint64_t))sub_228B3C1D4, v156, (uint64_t)v155);
  uint64_t v164 = v60;
  uint64_t v165 = v59;
  unint64_t v68 = v144;
  uint64_t v166 = v61;
  uint64_t v167 = v62;
  uint64_t v69 = v158;
  uint64_t v168 = v63;
  uint64_t v169 = v64;
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F70);
  uint64_t v71 = v141;
  sub_228B538E4((void (*)(uint64_t))sub_228B3C1EC, v70, v141);
  int v72 = sub_228ABF6B8();
  int v73 = sub_228ABF6D8();
  int v74 = sub_228ABF968();
  int v75 = sub_228ABF988();
  int v76 = sub_228ABF9A8();
  int v77 = sub_228ABF928();
  uint64_t v78 = v148;
  LODWORD(v145) = v77;
  uint64_t result = (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v69 + 16))(v68, v163, v148);
  if (v146 != 4)
  {
    __break(1u);
    goto LABEL_7;
  }
  LODWORD(v143) = v76;
  LODWORD(v146) = v75;
  LODWORD(v142) = *v68;
  uint64_t v81 = *(char **)(v69 + 8);
  uint64_t v80 = v69 + 8;
  id v144 = v81;
  ((void (*)(_DWORD *, uint64_t))v81)(v68, v78);
  uint64_t v82 = v157;
  unint64_t v83 = v129;
  uint64_t v84 = v147;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v157 + 16))(v129, v160, v147);
  if (v128 != 4)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v85 = v84;
  LODWORD(v139) = v74;
  LODWORD(v14__isPlatformVersionAtLeast(2, 18, 1, 0) = v73;
  uint64_t v158 = v80;
  int v86 = *(_DWORD *)v83;
  uint64_t v89 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
  uint64_t v87 = v82 + 8;
  uint64_t v88 = v89;
  v89((uint64_t)v83, v85);
  uint64_t v91 = v125;
  uint64_t v90 = v126;
  uint64_t v92 = v127;
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v126 + 16))(v125, v159, v127);
  if (v124 != 4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  LODWORD(v136) = v86;
  LODWORD(v137) = v72;
  uint64_t v157 = v87;
  LODWORD(v135) = *(_DWORD *)v91;
  id v93 = *(void (**)(char *, uint64_t))(v90 + 8);
  v93(v91, v92);
  uint64_t v94 = v155;
  LODWORD(v156) = sub_228ACB118(v155);
  uint64_t v96 = v122;
  uint64_t v95 = v123;
  long long v97 = v121;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v122 + 16))(v121, v71, v123);
  if (v120 == 4)
  {
    LODWORD(v134) = *(_DWORD *)v97;
    long long v98 = v97;
    uint64_t v99 = *(void (**)(char *, uint64_t))(v96 + 8);
    v99(v98, v95);
    v99((char *)v71, v95);
    (*(void (**)(unsigned int *, uint64_t))(v117 + 8))(v94, v118);
    v93(v159, v92);
    v88(v160, v147);
    ((void (*)(uint64_t, uint64_t))v144)(v163, v148);
    sub_228B3D868(v162, type metadata accessor for _MapContentOutputs);
    uint64_t v100 = (uint64_t)v138;
    sub_228B4D404(v161, (uint64_t)v138, type metadata accessor for _MapContentInputs);
    uint64_t v102 = v149;
    uint64_t v101 = v150;
    uint64_t v200 = v149;
    uint64_t v201 = v150;
    uint64_t v104 = v152;
    uint64_t v103 = v153;
    uint64_t v202 = v152;
    uint64_t v203 = v153;
    uint64_t v105 = v154;
    uint64_t v106 = v151;
    uint64_t v204 = v154;
    uint64_t v205 = v151;
    uint64_t v107 = type metadata accessor for _MapContentView.Child();
    uint64_t v108 = v119;
    v119[3] = v107;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v108);
    int v110 = v140;
    *(_DWORD *)boxed_opaque_existential_0 = v137;
    *((_DWORD *)boxed_opaque_existential_0 + 1) = v110;
    int v111 = v146;
    *((_DWORD *)boxed_opaque_existential_0 + 2) = v139;
    *((_DWORD *)boxed_opaque_existential_0 + 3) = v111;
    int v112 = v145;
    *((_DWORD *)boxed_opaque_existential_0 + 4) = v143;
    *((_DWORD *)boxed_opaque_existential_0 + 5) = v112;
    int v113 = (int)v136;
    *((_DWORD *)boxed_opaque_existential_0 + 6) = v142;
    *((_DWORD *)boxed_opaque_existential_0 + 7) = v113;
    int v114 = v156;
    *((_DWORD *)boxed_opaque_existential_0 + 8) = v135;
    *((_DWORD *)boxed_opaque_existential_0 + 9) = v114;
    *((_DWORD *)boxed_opaque_existential_0 + 1__isPlatformVersionAtLeast(2, 18, 1, 0) = v134;
    uint64_t v200 = v102;
    uint64_t v201 = v101;
    uint64_t v202 = v104;
    uint64_t v203 = v103;
    uint64_t v204 = v105;
    uint64_t v205 = v106;
    uint64_t v115 = type metadata accessor for _MapContentView.Child();
    return sub_228B4D404(v100, (uint64_t)boxed_opaque_existential_0 + *(int *)(v115 + 108), type metadata accessor for _MapContentInputs);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_228B241D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v17 = a4;
  uint64_t v18 = a5;
  uint64_t v19 = a6;
  uint64_t v20 = a7;
  uint64_t v9 = type metadata accessor for _MapContentView();
  uint64_t v10 = a1 + *(int *)(v9 + 84);
  void v14[2] = v9;
  v14[3] = a4;
  uint64_t v11 = sub_228BAC4A8();
  sub_228B3C21C(v10, (uint64_t)sub_228B4D7C8, (uint64_t)v14, a4, MEMORY[0x263F8E628], v11, MEMORY[0x263F8E658], v12);
  return v15;
}

uint64_t sub_228B24280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = a2;
  uint64_t v14 = a3;
  uint64_t v15 = a4;
  uint64_t v16 = a5;
  uint64_t v17 = a6;
  uint64_t v18 = a7;
  void v12[2] = type metadata accessor for _MapContentView();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F68);
  uint64_t v9 = sub_228BAC4A8();
  sub_228B3C21C(a1, (uint64_t)sub_228B4D7C8, (uint64_t)v12, v8, MEMORY[0x263F8E628], v9, MEMORY[0x263F8E658], v10);
  return v13;
}

uint64_t sub_228B24334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = a2;
  uint64_t v14 = a3;
  uint64_t v15 = a4;
  uint64_t v16 = a5;
  uint64_t v7 = a1 + 24;
  uint64_t v17 = a6;
  uint64_t v18 = a7;
  void v12[2] = type metadata accessor for _MapContentView();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_268292B80);
  uint64_t v9 = sub_228BAC4A8();
  sub_228B3C21C(v7, (uint64_t)sub_228B4D7C8, (uint64_t)v12, v8, MEMORY[0x263F8E628], v9, MEMORY[0x263F8E658], v10);
  return v13;
}

uint64_t sub_228B243E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  uint64_t v14 = a4;
  uint64_t v15 = a5;
  uint64_t v7 = a1 + 96;
  uint64_t v16 = a6;
  uint64_t v17 = a7;
  v11[2] = type metadata accessor for _MapContentView();
  uint64_t v8 = sub_228BAC4A8();
  sub_228B3C21C(v7, (uint64_t)sub_228B3C2F8, (uint64_t)v11, (uint64_t)&type metadata for MapInteractionModes, MEMORY[0x263F8E628], v8, MEMORY[0x263F8E658], v9);
  return v12;
}

uint64_t sub_228B24490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v12 = type metadata accessor for _MapContentView();
  uint64_t v13 = a1 + *(int *)(v12 + 76);
  void v17[2] = v12;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a5;
  uint64_t v22 = a6;
  type metadata accessor for MapSelectionManagerBox();
  sub_228BAD218();
  uint64_t v18 = sub_228BAD718();
  uint64_t v14 = sub_228BAC4A8();
  sub_228B3C21C(v13, (uint64_t)sub_228B4D7C8, (uint64_t)v17, v18, MEMORY[0x263F8E628], v14, MEMORY[0x263F8E658], v15);
  return v19;
}

uint64_t sub_228B24588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v17 = a4;
  uint64_t v18 = a5;
  uint64_t v19 = a6;
  uint64_t v20 = a7;
  uint64_t v8 = type metadata accessor for _MapContentView();
  uint64_t v9 = a1 + *(int *)(v8 + 80);
  void v14[2] = v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F70);
  uint64_t v11 = sub_228BAC4A8();
  sub_228B3C21C(v9, (uint64_t)sub_228B3C2F8, (uint64_t)v14, v10, MEMORY[0x263F8E628], v11, MEMORY[0x263F8E658], v12);
  return v15;
}

unint64_t sub_228B24644@<X0>(void *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292F68);
  uint64_t Value = (void *)AGGraphGetValue();
  uint64_t v3 = Value[1];
  unint64_t v4 = Value[2];
  *a1 = *Value;
  a1[1] = v3;
  a1[2] = v4;
  swift_retain();
  swift_retain();

  return sub_228B0596C(v4);
}

uint64_t sub_228B246C0@<X0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_268292B80);
  uint64_t Value = AGGraphGetValue();
  return sub_228AD2708(Value, a1, qword_268292B80);
}

uint64_t sub_228B24718@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for MapSelectionManagerBox();
  sub_228BAD218();
  uint64_t v2 = sub_228BAD718();
  uint64_t Value = AGGraphGetValue();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, Value, v2);
}

uint64_t sub_228B247C4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v35 = *(void *)(v4 + 64);
  unint64_t v5 = (void *)MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v5[2];
  uint64_t v33 = v5[3];
  uint64_t v34 = v8;
  uint64_t v9 = v5[6];
  uint64_t v36 = v5[5];
  uint64_t v37 = v9;
  *(void *)&long long v41 = v8;
  *((void *)&v41 + 1) = v33;
  uint64_t v42 = v36;
  uint64_t v43 = v9;
  uint64_t v10 = type metadata accessor for MapBridgingView();
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v41 = v10;
  *((void *)&v41 + 1) = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  *(void *)&long long v41 = v10;
  *((void *)&v41 + 1) = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v41 = OpaqueTypeMetadata2;
  *((void *)&v41 + 1) = OpaqueTypeConformance2;
  v32[2] = swift_getOpaqueTypeMetadata2();
  *(void *)&long long v41 = OpaqueTypeMetadata2;
  *((void *)&v41 + 1) = OpaqueTypeConformance2;
  v32[1] = swift_getOpaqueTypeConformance2();
  uint64_t v14 = type metadata accessor for MapPreferenceWrapper();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v32 - v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292F70);
  uint64_t Value = AGGraphGetValue();
  v32[0] = *(void *)Value;
  char v22 = *(unsigned char *)(Value + 8);
  sub_228B24644(&v41);
  long long v39 = v41;
  uint64_t v40 = v42;
  uint64_t v23 = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v2, a1);
  unint64_t v24 = (*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v25 = (char *)swift_allocObject();
  uint64_t v26 = v33;
  *((void *)v25 + 2) = v34;
  *((void *)v25 + 3) = v26;
  uint64_t v27 = v36;
  *((void *)v25 + 4) = *(void *)(a1 + 32);
  *((void *)v25 + 5) = v27;
  uint64_t v28 = *(void *)(a1 + 56);
  *((void *)v25 + 6) = v37;
  *((void *)v25 + 7) = v28;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v25[v24], v23, a1);
  sub_228B25B5C(v32[0], v22, &v39, (uint64_t)sub_228B4CC08, (uint64_t)v25, (uint64_t)v18);
  swift_getWitnessTable();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v29(v20, v18, v14);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v15 + 8);
  v30(v18, v14);
  v29(v38, v20, v14);
  return ((uint64_t (*)(char *, uint64_t))v30)(v20, v14);
}

uint64_t sub_228B24B6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10)
{
  uint64_t v118 = a6;
  uint64_t v103 = (char *)a2;
  uint64_t v114 = a1;
  uint64_t v117 = a9;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268293258);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v116 = (void *)((char *)v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682925D0);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v115 = (void *)((char *)v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682925C8);
  MEMORY[0x270FA5388](v19 - 8);
  int v111 = (void *)((char *)v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(qword_268292EA0);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v108 = (uint64_t)v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for _MapContentInputs(0);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v119 = (uint64_t)v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = a4;
  *(void *)&long long v124 = a5;
  *((void *)&v124 + 1) = a7;
  *(void *)&long long v125 = a8;
  type metadata accessor for MapSelectionManagerBox();
  sub_228BAD218();
  uint64_t v25 = sub_228BAD718();
  MEMORY[0x270FA5388](v25 - 8);
  *(void *)&long long v120 = (char *)v88 - v26;
  uint64_t v123 = a4;
  *(void *)&long long v124 = a5;
  *((void *)&v124 + 1) = a7;
  *(void *)&long long v125 = a8;
  uint64_t v27 = type metadata accessor for MapBridgingView();
  uint64_t v112 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v107 = (uint64_t)v88 - v28;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v123 = v27;
  *(void *)&long long v124 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v109 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v106 = (char *)v88 - v31;
  uint64_t v113 = v27;
  uint64_t v123 = v27;
  uint64_t v105 = WitnessTable;
  *(void *)&long long v124 = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v110 = OpaqueTypeMetadata2;
  uint64_t v123 = OpaqueTypeMetadata2;
  uint64_t v104 = OpaqueTypeConformance2;
  *(void *)&long long v124 = OpaqueTypeConformance2;
  uint64_t v33 = swift_getOpaqueTypeMetadata2();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v37 = (char *)v88 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  long long v39 = (char *)v88 - v38;
  uint64_t v123 = a4;
  *(void *)&long long v124 = a5;
  *((void *)&v124 + 1) = v118;
  *(void *)&long long v125 = a7;
  *((void *)&v125 + 1) = a8;
  *(void *)&long long v126 = a10;
  uint64_t v40 = type metadata accessor for _MapContentView.Child();
  uint64_t v41 = sub_228AE3C04();
  if (v41)
  {
    uint64_t v102 = v42;
    uint64_t v118 = v41;
    uint64_t v43 = sub_228AE3C68();
    if (v43) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v118 = sub_228B78CF8(MEMORY[0x263F8EE78]);
    uint64_t v102 = v53;
    uint64_t v43 = sub_228AE3C68();
    if (v43)
    {
LABEL_3:
      uint64_t v100 = v44;
      uint64_t v101 = v43;
      uint64_t v45 = sub_228AE3CCC();
      if (v45) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  uint64_t v101 = sub_228B78CF8(MEMORY[0x263F8EE78]);
  uint64_t v100 = v54;
  uint64_t v45 = sub_228AE3CCC();
  if (v45)
  {
LABEL_4:
    uint64_t v98 = v46;
    uint64_t v99 = v45;
    uint64_t v47 = sub_228AE3D30();
    if (v47) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t v99 = sub_228B78CF8(MEMORY[0x263F8EE78]);
  uint64_t v98 = v55;
  uint64_t v47 = sub_228AE3D30();
  if (v47)
  {
LABEL_5:
    uint64_t v96 = v48;
    uint64_t v97 = v47;
    uint64_t v49 = sub_228AE3D94();
    if (v49) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t v95 = sub_228B78CF8(MEMORY[0x263F8EE78]);
    uint64_t v94 = v57;
    uint64_t v51 = sub_228AE3DF8();
    if (v51) {
      goto LABEL_7;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t v97 = sub_228B78CF8(MEMORY[0x263F8EE78]);
  uint64_t v96 = v56;
  uint64_t v49 = sub_228AE3D94();
  if (!v49) {
    goto LABEL_12;
  }
LABEL_6:
  uint64_t v94 = v50;
  uint64_t v95 = v49;
  uint64_t v51 = sub_228AE3DF8();
  if (v51)
  {
LABEL_7:
    uint64_t v92 = v52;
    uint64_t v93 = v51;
    goto LABEL_14;
  }
LABEL_13:
  uint64_t v93 = sub_228B78CF8(MEMORY[0x263F8EE78]);
  uint64_t v92 = v58;
LABEL_14:
  sub_228B24644(&v132);
  long long v130 = v132;
  uint64_t v131 = v133;
  sub_228B246C0((uint64_t)v129);
  uint64_t v128 = *(void *)AGGraphGetValue();
  sub_228B24718(v120);
  uint64_t result = AGGraphGetCurrentAttribute();
  if (result == *MEMORY[0x263F288F8])
  {
    __break(1u);
  }
  else
  {
    id v60 = (id)AGGraphGetAttributeSubgraph();
    v88[1] = a7;
    v88[0] = a8;
    v88[2] = a4;
    uint64_t v89 = (uint64_t)v60;
    sub_228B4D098(a3 + *(int *)(v40 + 108), v119, type metadata accessor for _MapContentInputs);
    uint64_t v61 = v108;
    sub_228AD2708((uint64_t)v103, v108, qword_268292EA0);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v63 = (uint64_t)v111;
    *int v111 = KeyPath;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268291BE0);
    swift_storeEnumTagMultiPayload();
    uint64_t v64 = swift_getKeyPath();
    uint64_t v103 = v39;
    uint64_t v65 = (uint64_t)v115;
    *uint64_t v115 = v64;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2682925C0);
    swift_storeEnumTagMultiPayload();
    uint64_t v66 = swift_getKeyPath();
    uint64_t v123 = swift_getKeyPath();
    long long v124 = 0u;
    long long v125 = 0u;
    long long v126 = 0u;
    memset(v127, 0, 26);
    uint64_t v67 = swift_getKeyPath();
    uint64_t v91 = v37;
    uint64_t v68 = (uint64_t)v116;
    *uint64_t v116 = v67;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293850);
    swift_storeEnumTagMultiPayload();
    uint64_t v69 = swift_getKeyPath();
    uint64_t v70 = v34;
    uint64_t v71 = swift_getKeyPath();
    uint64_t v72 = swift_getKeyPath();
    uint64_t v90 = v33;
    uint64_t v73 = v72;
    uint64_t v121 = swift_getKeyPath();
    char v122 = 0;
    uint64_t v74 = swift_getKeyPath();
    uint64_t v87 = v61;
    *((void *)&v86 + 1) = v94;
    *(void *)&long long v86 = v95;
    uint64_t v75 = v107;
    sub_228B2575C(v118, v102, v101, v100, v99, v98, v97, v96, v107, v86, v93, v92, &v130, (uint64_t)v129, &v128, v120, v89, v119, v87,
      v114,
      v63,
      v65,
      v66,
      0,
      (long long *)&v123,
      v68,
      v69,
      0,
      v71,
      0,
      0,
      v73,
      0,
      0,
      &v121,
      v74,
      0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293260);
    sub_228BAC958();
    uint64_t v76 = swift_allocObject();
    long long v120 = xmmword_228BAF4E0;
    *(_OWORD *)(v76 + 16) = xmmword_228BAF4E0;
    swift_retain();
    sub_228BAC948();
    int v77 = v106;
    uint64_t v78 = v113;
    MEMORY[0x22A6A67D0](1, v76, v113, v105);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v75, v78);
    uint64_t v79 = swift_allocObject();
    *(_OWORD *)(v79 + 16) = v120;
    sub_228BAC938();
    uint64_t v80 = v91;
    uint64_t v81 = v110;
    MEMORY[0x22A6A67D0](1, v79, v110, v104);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v109 + 8))(v77, v81);
    uint64_t v82 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
    uint64_t v83 = (uint64_t)v103;
    uint64_t v84 = v90;
    v82(v103, v80, v90);
    uint64_t v85 = *(void (**)(char *, uint64_t))(v70 + 8);
    v85(v80, v84);
    v82(v117, (char *)v83, v84);
    return ((uint64_t (*)(uint64_t, uint64_t))v85)(v83, v84);
  }
  return result;
}

uint64_t sub_228B2575C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, uint64_t a12, long long *a13, uint64_t a14, uint64_t *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,long long *a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,char a34,uint64_t *a35,uint64_t a36,char a37)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = a6;
  *(void *)(a9 + 48) = a7;
  long long v38 = *a13;
  uint64_t v39 = *((void *)a13 + 2);
  uint64_t v40 = *a15;
  long long v55 = *a25;
  long long v57 = a25[1];
  long long v60 = a25[2];
  long long v62 = a25[3];
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = a11;
  *(void *)(a9 + 88) = a12;
  uint64_t v56 = *((void *)a25 + 8);
  uint64_t v59 = *((void *)a25 + 9);
  char v58 = *((unsigned char *)a25 + 80);
  char v61 = *((unsigned char *)a25 + 81);
  *(void *)(a9 + 112) = v39;
  uint64_t v63 = *a35;
  char v64 = *((unsigned char *)a35 + 8);
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 96) = v38;
  sub_228ACD8BC(a14, a9 + 120, qword_268292B80);
  *(void *)(a9 + 192) = v40;
  uint64_t v41 = (int *)type metadata accessor for MapBridgingView();
  uint64_t v42 = a9 + v41[21];
  type metadata accessor for MapSelectionManagerBox();
  sub_228BAD218();
  uint64_t v43 = sub_228BAD718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32))(v42, a16, v43);
  *(void *)(a9 + v41[22]) = a17;
  sub_228B4D404(a18, a9 + v41[23], type metadata accessor for _MapContentInputs);
  sub_228ACD8BC(a19, a9 + v41[24], qword_268292EA0);
  *(void *)(a9 + v41[25]) = a20;
  uint64_t v44 = (uint64_t *)(a9 + v41[26]);
  *uint64_t v44 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293840);
  swift_storeEnumTagMultiPayload();
  uint64_t v45 = (uint64_t *)(a9 + v41[27]);
  uint64_t *v45 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293270);
  swift_storeEnumTagMultiPayload();
  sub_228ACD8BC(a21, a9 + v41[28], &qword_2682925C8);
  sub_228ACD8BC(a22, a9 + v41[29], (uint64_t *)&unk_2682925D0);
  uint64_t v46 = a9 + v41[30];
  *(void *)uint64_t v46 = a23;
  *(unsigned char *)(v46 + 8) = a24 & 1;
  uint64_t v47 = a9 + v41[31];
  *(_OWORD *)uint64_t v47 = v55;
  *(_OWORD *)(v47 + 16) = v57;
  *(_OWORD *)(v47 + 32) = v60;
  *(_OWORD *)(v47 + 48) = v62;
  *(void *)(v47 + 64) = v56;
  *(void *)(v47 + 72) = v59;
  *(unsigned char *)(v47 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v58;
  *(unsigned char *)(v47 + 81) = v61;
  sub_228ACD8BC(a26, a9 + v41[32], &qword_268293258);
  uint64_t v48 = a9 + v41[33];
  *(void *)uint64_t v48 = a27;
  *(unsigned char *)(v48 + 8) = a28 & 1;
  uint64_t v49 = a9 + v41[34];
  *(void *)uint64_t v49 = a29;
  *(void *)(v49 + 8) = a30;
  *(unsigned char *)(v49 + 16) = a31 & 1;
  uint64_t v50 = a9 + v41[35];
  *(void *)uint64_t v50 = a32;
  *(void *)(v50 + 8) = a33;
  *(unsigned char *)(v50 + 16) = a34 & 1;
  uint64_t v51 = a9 + v41[36];
  *(void *)uint64_t v51 = v63;
  *(unsigned char *)(v51 + 8) = v64;
  uint64_t v52 = a9 + v41[37];
  *(void *)uint64_t v52 = a36;
  *(unsigned char *)(v52 + 8) = a37 & 1;
  uint64_t v53 = a9 + v41[38];
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v53 = result;
  *(unsigned char *)(v53 + 8) = 0;
  return result;
}

double sub_228B25B5C@<D0>(uint64_t a1@<X0>, char a2@<W1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v26 = a5;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268292FF0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v25 = *a3;
  uint64_t v14 = *((void *)a3 + 2);
  type metadata accessor for MapPreferenceWrapperHolder();
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = swift_unknownObjectWeakAssign();
  sub_228AD2184(v16, v15 + 16);
  sub_228B4CEAC(&qword_268292FC0, v17, (void (*)(uint64_t))type metadata accessor for MapPreferenceWrapperHolder);
  *(void *)a6 = sub_228BAC798();
  *(void *)(a6 + 8) = v18;
  *(void *)(a6 + 16) = swift_getKeyPath();
  *(unsigned char *)(a6 + 24) = 0;
  *(void *)(a6 + 32) = 0;
  *(unsigned char *)(a6 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 1;
  *(void *)(a6 + 48) = swift_getKeyPath();
  uint64_t v19 = type metadata accessor for MapPreferenceWrapper();
  *(void *)(a6 + 56) = 0;
  *(void *)(a6 + 64) = 0;
  *(unsigned char *)(a6 + 72) = 0;
  uint64_t v20 = type metadata accessor for KeyframeAnimationState();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v13, 1, 1, v20);
  sub_228B261C0((uint64_t)v13);
  *(void *)(a6 + 32) = a1;
  *(unsigned char *)(a6 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = a2 & 1;
  uint64_t v21 = a6 + *(int *)(v19 + 52);
  double result = *(double *)&v25;
  *(_OWORD *)uint64_t v21 = v25;
  *(void *)(v21 + 16) = v14;
  uint64_t v23 = (void *)(a6 + *(int *)(v19 + 56));
  uint64_t v24 = v26;
  *uint64_t v23 = a4;
  v23[1] = v24;
  return result;
}

uint64_t sub_228B25D60@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for MapBridgingView();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  uint64_t v2 = type metadata accessor for MapPreferenceWrapper();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_228B25E98()
{
  return sub_228BAC968();
}

uint64_t sub_228B25F20(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_228B25F50(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_228B22FA8);
}

uint64_t sub_228B25F38(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_228B25F50(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_228B25E98);
}

uint64_t sub_228B25F50(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, void, void, void, void, void, void))
{
  return a5(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7]);
}

void sub_228B25F6C()
{
}

uint64_t sub_228B25FB8()
{
  type metadata accessor for MapPreferenceWrapperHolder();
  sub_228B4CEAC(&qword_268292FC0, v0, (void (*)(uint64_t))type metadata accessor for MapPreferenceWrapperHolder);
  sub_228BAC518();
  sub_228BAC528();

  return swift_release();
}

uint64_t sub_228B2603C()
{
  sub_228AD21E0(v0 + 16);

  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t type metadata accessor for MapPreferenceWrapperHolder()
{
  return self;
}

uint64_t sub_228B26098@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for MapPreferenceWrapperHolder();
  uint64_t result = sub_228BAC518();
  *a1 = result;
  return result;
}

double sub_228B260D4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  sub_228AD266C(v1, v2);
  double v3 = sub_228AD0160(v1, v2);
  sub_228AD25F8(v1, v2);
  return v3;
}

uint64_t sub_228B2612C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  char v4 = *(unsigned char *)(v0 + 72);
  sub_228B3F400(v1, v2, v3, v4);
  uint64_t v5 = sub_228AD036C(v1, v2, v3, v4);
  sub_228AD2814(v1, v2, v3, v4);
  return v5;
}

uint64_t sub_228B261C0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268292FF0);
  MEMORY[0x270FA5388](v2);
  sub_228AD2708(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_268292FF0);
  sub_228BAD178();
  return sub_228AC1A50(a1, (uint64_t *)&unk_268292FF0);
}

uint64_t sub_228B26278(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268292FF0);
  MEMORY[0x270FA5388](v2 - 8);
  sub_228AD2708(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_268292FF0);
  __swift_instantiateConcreteTypeFromMangledName(qword_268293128);
  sub_228BAD198();
  return sub_228AC1A50(a1, (uint64_t *)&unk_268292FF0);
}

void (*sub_228B26338(void **a1, uint64_t a2))(uint64_t a1, char a2)
{
  size_t v5 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268292FF0) - 8) + 64);
  *a1 = malloc(v5);
  a1[1] = malloc(v5);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_268293128);
  a1[2] = (void *)v6;
  uint64_t v7 = malloc(*(void *)(*(void *)(v6 - 8) + 64));
  a1[3] = v7;
  sub_228AD2708(v2 + *(int *)(a2 + 48), (uint64_t)v7, qword_268293128);
  sub_228BAD188();
  return sub_228B2642C;
}

void sub_228B2642C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 24);
  uint64_t v3 = *(void **)a1;
  char v4 = *(void **)(a1 + 8);
  if (a2)
  {
    sub_228AD2708(*(void *)(a1 + 8), (uint64_t)v3, (uint64_t *)&unk_268292FF0);
    sub_228BAD198();
    sub_228AC1A50((uint64_t)v2, qword_268293128);
    uint64_t v5 = (uint64_t)v4;
    uint64_t v6 = (uint64_t *)&unk_268292FF0;
  }
  else
  {
    sub_228BAD198();
    uint64_t v6 = qword_268293128;
    uint64_t v5 = (uint64_t)v2;
  }
  sub_228AC1A50(v5, v6);
  free(v2);
  free(v4);

  free(v3);
}

uint64_t sub_228B264E4()
{
  return sub_228BAD1E8();
}

uint64_t sub_228B26544@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_228BACDF8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268293280);
  sub_228BAC868();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268293288);
  sub_228BAC868();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268293290);
  sub_228BAC868();
  uint64_t v28 = *(void *)(a1 + 24);
  uint64_t v29 = sub_228B0A36C(&qword_268293298, &qword_268293280);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v27 = sub_228B0A36C(&qword_2682932A0, &qword_268293288);
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v25 = sub_228B0A36C(&qword_2682932A8, &qword_268293290);
  swift_getWitnessTable();
  sub_228BAC778();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2682932B0);
  swift_getWitnessTable();
  sub_228B4CDE4();
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v4 = sub_228BAC418();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v6 = sub_228B4CEAC(&qword_2682932C8, 255, MEMORY[0x263F07490]);
  uint64_t v20 = OpaqueTypeMetadata2;
  uint64_t v21 = v4;
  uint64_t v22 = OpaqueTypeConformance2;
  uint64_t v23 = v6;
  swift_getOpaqueTypeMetadata2();
  sub_228B4CEAC(&qword_2682932D0, 255, MEMORY[0x263F1A1B0]);
  uint64_t v7 = sub_228BAC658();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v17 - v12;
  sub_228B26948(a1, (uint64_t)v11);
  uint64_t v20 = OpaqueTypeMetadata2;
  uint64_t v21 = v4;
  uint64_t v22 = OpaqueTypeConformance2;
  uint64_t v23 = v6;
  uint64_t v19 = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v14(v13, v11, v7);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v11, v7);
  v14(v18, v13, v7);
  return ((uint64_t (*)(char *, uint64_t))v15)(v13, v7);
}

uint64_t sub_228B26948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v32[1] = a2;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268292FF0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32[0] = sub_228BACDF8();
  MEMORY[0x270FA5388](v32[0]);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(qword_268293128);
  sub_228BAD188();
  uint64_t v11 = type metadata accessor for KeyframeAnimationState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v8, 1, v11);
  sub_228AC1A50((uint64_t)v8, (uint64_t *)&unk_268292FF0);
  sub_228BACDE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = *(void *)(a1 + 24);
  *(void *)(v13 + 16) = *(void *)(a1 + 16);
  *(void *)(v13 + 24) = v14;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v13 + v12, (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268293280);
  sub_228BAC868();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268293288);
  sub_228BAC868();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268293290);
  sub_228BAC868();
  uint64_t v15 = sub_228B0A36C(&qword_268293298, &qword_268293280);
  uint64_t v41 = v14;
  uint64_t v42 = v15;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v17 = sub_228B0A36C(&qword_2682932A0, &qword_268293288);
  uint64_t v39 = WitnessTable;
  uint64_t v40 = v17;
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v19 = sub_228B0A36C(&qword_2682932A8, &qword_268293290);
  uint64_t v37 = v18;
  uint64_t v38 = v19;
  swift_getWitnessTable();
  uint64_t v20 = sub_228BAC778();
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2682932B0);
  uint64_t v22 = swift_getWitnessTable();
  unint64_t v23 = sub_228B4CDE4();
  uint64_t v33 = v20;
  uint64_t v34 = v21;
  uint64_t v35 = v22;
  unint64_t v36 = v23;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v25 = sub_228BAC418();
  uint64_t v33 = v20;
  uint64_t v34 = v21;
  uint64_t v35 = v22;
  unint64_t v36 = v23;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v27 = sub_228B4CEAC(&qword_2682932C8, 255, MEMORY[0x263F07490]);
  uint64_t v33 = OpaqueTypeMetadata2;
  uint64_t v34 = v25;
  uint64_t v35 = OpaqueTypeConformance2;
  unint64_t v36 = v27;
  uint64_t v28 = swift_getOpaqueTypeMetadata2();
  uint64_t v29 = sub_228B4CEAC(&qword_2682932D0, 255, MEMORY[0x263F1A1B0]);
  uint64_t v33 = OpaqueTypeMetadata2;
  uint64_t v34 = v25;
  uint64_t v35 = OpaqueTypeConformance2;
  unint64_t v36 = v27;
  uint64_t v30 = swift_getOpaqueTypeConformance2();
  return sub_228B28BF0((uint64_t)v10, (uint64_t)sub_228B4CEF8, v13, v32[0], v28, v29, v30);
}

uint64_t sub_228B26E20(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_268292EA0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(uint64_t, char *))(v1 + *(int *)(a1 + 56));
  uint64_t v7 = *(void *)(v1 + 8);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(qword_268293128);
  sub_228BAD1A8();
  v6(v7, v5);
  swift_release();
  return sub_228AC1A50((uint64_t)v5, qword_268292EA0);
}

uint64_t sub_228B26F0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v4 + 16))((char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = *(void *)(a1 + 24);
  *(void *)(v7 + 16) = *(void *)(a1 + 16);
  *(void *)(v7 + 24) = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v7 + v6, (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268293280);
  sub_228BAC868();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268293288);
  sub_228BAC868();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268293290);
  sub_228BAC868();
  uint64_t v9 = sub_228B0A36C(&qword_268293298, &qword_268293280);
  v16[4] = v8;
  v16[5] = v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = sub_228B0A36C(&qword_2682932A0, &qword_268293288);
  v16[2] = WitnessTable;
  v16[3] = v11;
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v13 = sub_228B0A36C(&qword_2682932A8, &qword_268293290);
  v16[0] = v12;
  v16[1] = v13;
  swift_getWitnessTable();
  uint64_t result = sub_228BAC768();
  *a2 = result;
  a2[1] = v15;
  return result;
}

uint64_t sub_228B27168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v71 = a5;
  uint64_t v60 = type metadata accessor for MapSizingInformation();
  uint64_t v61 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_228BAC6E8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682932E0);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v15);
  long long v55 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268293280);
  uint64_t v56 = a3;
  uint64_t v19 = sub_228BAC868();
  uint64_t v62 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  long long v57 = (char *)&v55 - v20;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268293288);
  uint64_t v63 = v19;
  uint64_t v21 = sub_228BAC868();
  uint64_t v67 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  char v64 = (char *)&v55 - v22;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268293290);
  uint64_t v68 = v21;
  uint64_t v23 = sub_228BAC868();
  uint64_t v69 = *(void *)(v23 - 8);
  uint64_t v70 = v23;
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v65 = (char *)&v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v66 = (char *)&v55 - v26;
  uint64_t v27 = type metadata accessor for MapPreferenceWrapper();
  sub_228B26E20(v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2682932E8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v58, v10);
  uint64_t v28 = a2;
  double v29 = sub_228B260D4();
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v30(v9, 1, 1, v10);
  sub_228AC1A50((uint64_t)v9, &qword_2682932F0);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v9, v13, v10);
  uint64_t v31 = v57;
  v30(v9, 0, 1, v10);
  uint64_t v32 = v28;
  uint64_t v33 = v60;
  *(double *)&v9[*(int *)(v60 + 20)] = v29;
  sub_228B4D404((uint64_t)v9, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for MapSizingInformation);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v17, 0, 1, v33);
  sub_228B0A36C(&qword_2682932F8, &qword_2682932E8);
  uint64_t v34 = v56;
  uint64_t v35 = v55;
  sub_228BAD018();
  sub_228AC1A50((uint64_t)v17, &qword_2682932E0);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v35, v34);
  uint64_t v36 = *(void *)(v28 + 32);
  LOBYTE(v34) = *(unsigned char *)(v28 + 40);
  sub_228AD2234(*(void *)(v28 + 8) + 16, (uint64_t)&v76);
  if (v34)
  {
    uint64_t v37 = MEMORY[0x263F8EE78];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268293320);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_228BAF4E0;
    *(void *)(inited + 32) = v36;
    sub_228AD2234((uint64_t)&v76, inited + 40);
    uint64_t v37 = inited;
  }
  unint64_t v39 = sub_228AE2B20(v37);
  sub_228AD21E0((uint64_t)&v76);
  unint64_t v76 = v39;
  uint64_t v40 = sub_228B0A36C(&qword_268293298, &qword_268293280);
  uint64_t v78 = a4;
  uint64_t v79 = v40;
  uint64_t v41 = v63;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_228B4D46C();
  uint64_t v43 = v64;
  sub_228BAD018();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v31, v41);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268293308);
  sub_228AD2234(*(void *)(v32 + 8) + 16, (uint64_t)&v76);
  char v77 = 0;
  uint64_t v44 = sub_228B0A36C(&qword_2682932A0, &qword_268293288);
  uint64_t v74 = WitnessTable;
  uint64_t v75 = v44;
  uint64_t v45 = v68;
  uint64_t v46 = swift_getWitnessTable();
  sub_228B0A36C((unint64_t *)&unk_268293310, &qword_268293308);
  uint64_t v47 = v65;
  sub_228BAD018();
  sub_228AC1A50((uint64_t)&v76, &qword_268291BD0);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v43, v45);
  uint64_t v48 = sub_228B0A36C(&qword_2682932A8, &qword_268293290);
  uint64_t v72 = v46;
  uint64_t v73 = v48;
  uint64_t v49 = v70;
  swift_getWitnessTable();
  uint64_t v50 = v69;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  uint64_t v52 = v66;
  v51(v66, v47, v49);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v50 + 8);
  v53(v47, v49);
  v51(v71, v52, v49);
  return ((uint64_t (*)(char *, uint64_t))v53)(v52, v49);
}

uint64_t sub_228B279D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v72 = a1;
  char v77 = a5;
  uint64_t v7 = sub_228BAC418();
  uint64_t v75 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v74 = (char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MapPreferenceWrapper();
  uint64_t v71 = *(void *)(v9 - 8);
  uint64_t v69 = *(void *)(v71 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v70 = (char *)v54 - v10;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268293280);
  uint64_t v73 = a3;
  sub_228BAC868();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268293288);
  sub_228BAC868();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268293290);
  sub_228BAC868();
  uint64_t v11 = sub_228B0A36C(&qword_268293298, &qword_268293280);
  uint64_t v79 = a4;
  uint64_t v89 = a4;
  uint64_t v90 = v11;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = sub_228B0A36C(&qword_2682932A0, &qword_268293288);
  uint64_t v87 = WitnessTable;
  uint64_t v88 = v13;
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v15 = sub_228B0A36C(&qword_2682932A8, &qword_268293290);
  uint64_t v85 = v14;
  uint64_t v86 = v15;
  swift_getWitnessTable();
  uint64_t v16 = sub_228BAC778();
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2682932B0);
  uint64_t v18 = swift_getWitnessTable();
  unint64_t v19 = sub_228B4CDE4();
  *(void *)&long long v82 = v16;
  *((void *)&v82 + 1) = v17;
  uint64_t v83 = v18;
  unint64_t v84 = v19;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v67 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v66 = (char *)v54 - v21;
  uint64_t v57 = v16;
  *(void *)&long long v82 = v16;
  *((void *)&v82 + 1) = v17;
  uint64_t v63 = v17;
  uint64_t v61 = v18;
  uint64_t v83 = v18;
  unint64_t v84 = v19;
  unint64_t v59 = v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v23 = sub_228B4CEAC(&qword_2682932C8, 255, MEMORY[0x263F07490]);
  uint64_t v68 = OpaqueTypeMetadata2;
  *(void *)&long long v82 = OpaqueTypeMetadata2;
  *((void *)&v82 + 1) = v7;
  uint64_t v76 = v7;
  uint64_t v62 = OpaqueTypeConformance2;
  uint64_t v83 = OpaqueTypeConformance2;
  unint64_t v84 = v23;
  uint64_t v56 = v23;
  uint64_t v65 = swift_getOpaqueTypeMetadata2();
  uint64_t v64 = *(void *)(v65 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v65);
  uint64_t v58 = (char *)v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v60 = (char *)v54 - v26;
  uint64_t v27 = v9;
  uint64_t v28 = v9;
  uint64_t v29 = v78;
  sub_228B26F0C(v28, (uint64_t *)&v82);
  long long v81 = v82;
  uint64_t v30 = v29;
  uint64_t v31 = sub_228B2612C();
  if (v31)
  {
    uint64_t v32 = swift_retain();
    sub_228AD2820(v32);
  }
  uint64_t v80 = v31;
  uint64_t v33 = v71;
  long long v55 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 16);
  uint64_t v34 = v70;
  v55(v70, v30, v27);
  uint64_t v35 = *(unsigned __int8 *)(v33 + 80);
  uint64_t v36 = (v35 + 32) & ~v35;
  v69 += v36;
  v54[1] = v35 | 7;
  uint64_t v37 = swift_allocObject();
  uint64_t v38 = v73;
  uint64_t v39 = v79;
  *(void *)(v37 + 16) = v73;
  *(void *)(v37 + 24) = v39;
  uint64_t v40 = *(void (**)(uint64_t, char *, uint64_t))(v33 + 32);
  v40(v37 + v36, v34, v27);
  swift_checkMetadataState();
  uint64_t v41 = v66;
  sub_228BAD0E8();
  swift_release();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2682932D8);
  uint64_t v42 = v74;
  sub_228BAC628();
  v55(v34, v78, v27);
  uint64_t v43 = swift_allocObject();
  uint64_t v44 = v79;
  *(void *)(v43 + 16) = v38;
  *(void *)(v43 + 24) = v44;
  v40(v43 + v36, v34, v27);
  uint64_t v45 = v58;
  uint64_t v46 = v68;
  uint64_t v47 = v76;
  sub_228BAD0E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v42, v47);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v41, v46);
  uint64_t v48 = v64;
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
  uint64_t v50 = v60;
  uint64_t v51 = v65;
  v49(v60, v45, v65);
  uint64_t v52 = *(void (**)(char *, uint64_t))(v48 + 8);
  v52(v45, v51);
  v49(v77, v50, v51);
  return ((uint64_t (*)(char *, uint64_t))v52)(v50, v51);
}

uint64_t sub_228B2819C(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
  uint64_t result = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  if (*a1) {
    BOOL v12 = *a2 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    uint64_t v33 = v8;
    uint64_t v13 = *(uint64_t (**)(uint64_t))(*(void *)v11 + 80);
    swift_retain();
    uint64_t v14 = swift_retain();
    if ((v13(v14) & 1) != 0 || (uint64_t v15 = type metadata accessor for MapPreferenceWrapper(), !sub_228B2612C()))
    {
      swift_release();
      return swift_release();
    }
    else
    {
      uint64_t v17 = v16;
      sub_228AD2234(*(void *)(a3 + 8) + 16, (uint64_t)v34);
      uint64_t v18 = (void *)MEMORY[0x22A6A7CA0](v34);
      sub_228AD21E0((uint64_t)v34);
      if (v18)
      {
        id v19 = objc_msgSend(v18, sel_camera);
        uint64_t v32 = v17;
        id v20 = v19;
        objc_msgSend(v19, sel_centerCoordinate);
        uint64_t v22 = v21;
        uint64_t v24 = v23;
        objc_msgSend(v20, sel_centerCoordinateDistance);
        uint64_t v26 = v25;
        objc_msgSend(v20, sel_heading);
        uint64_t v28 = v27;
        objc_msgSend(v20, sel_pitch);
        uint64_t v30 = v29;

        v34[0] = v22;
        v34[1] = v24;
        v34[2] = v26;
        void v34[3] = v28;
        v34[4] = v30;
        v32(v34);
        sub_228B28488((uint64_t)v10, v15);
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v10, v6);
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_228B28488(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a2;
  uint64_t v26 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268292FF0);
  MEMORY[0x270FA5388](v2 - 8);
  *(void *)&long long v28 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v27 = sub_228BAC418();
  uint64_t v4 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for KeyframeAnimationState();
  uint64_t v25 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v17(v10, v26, v7);
  v17(v14, (uint64_t)v10, v7);
  sub_228BAC408();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v18 = &v14[*(int *)(v11 + 20)];
  uint64_t v19 = v27;
  (*(void (**)(char *, char *, void))(v4 + 32))(v18, v6, v27);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(&v14[*(int *)(v11 + 24)], v18, v19);
  sub_228B4D404((uint64_t)v14, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for KeyframeAnimationState);
  uint64_t v20 = v28;
  sub_228B4D098((uint64_t)v16, v28, (uint64_t (*)(void))type metadata accessor for KeyframeAnimationState);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v20, 0, 1, v11);
  sub_228B26278(v20);
  sub_228BAC8A8();
  long long v27 = v31;
  long long v28 = v30;
  uint64_t v21 = v32;
  uint64_t v22 = swift_allocObject();
  long long v23 = v27;
  *(_OWORD *)(v22 + 16) = v28;
  *(_OWORD *)(v22 + 32) = v23;
  *(void *)(v22 + 48) = v21;
  *(void *)&long long v30 = v22 | 0x6000000000000000;
  sub_228B264E4();
  return sub_228B3D868((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for KeyframeAnimationState);
}

uint64_t sub_228B28850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268292FF0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  long long v28 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = type metadata accessor for KeyframeAnimationState();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for MapPreferenceWrapper();
  uint64_t v14 = sub_228B26338(v30, v13);
  uint64_t v16 = v15;
  uint64_t v27 = v10;
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v17(v15, 1, v9))
  {
    uint64_t v18 = v16 + *(int *)(v9 + 24);
    uint64_t v19 = sub_228BAC418();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v18, v29, v19);
  }
  v14((uint64_t)v30, 0);
  __swift_instantiateConcreteTypeFromMangledName(qword_268293128);
  sub_228BAD188();
  if (v17((uint64_t)v8, 1, v9) == 1) {
    return sub_228AC1A50((uint64_t)v8, (uint64_t *)&unk_268292FF0);
  }
  sub_228B4D404((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for KeyframeAnimationState);
  sub_228AD2234(*(void *)(a3 + 8) + 16, (uint64_t)v30);
  uint64_t v21 = (void *)MEMORY[0x22A6A7CA0](v30);
  sub_228AD21E0((uint64_t)v30);
  if (v21)
  {
    sub_228BAC3F8();
    double v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
    sub_228BAC8B8();
    if (v24 < v23)
    {
      uint64_t v25 = (uint64_t)v28;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v28, 1, 1, v9);
      sub_228B26278(v25);
    }
    sub_228BAC3F8();
    sub_228BAC898();
    id v26 = objc_msgSend(self, sel_cameraLookingAtCenterCoordinate_fromDistance_pitch_heading_, *(double *)v30, *(double *)&v30[1], *(double *)&v30[2], *(double *)&v30[4], *(double *)&v30[3]);
    objc_msgSend(v21, sel_setCamera_animated_, v26, 0);
  }
  return sub_228B3D868((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for KeyframeAnimationState);
}

uint64_t sub_228B28BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v16);
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = a4;
  void v17[3] = a5;
  v17[4] = a6;
  v17[5] = a7;
  v17[6] = a2;
  v17[7] = a3;
  sub_228BAC648();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(a1, a4);
}

uint64_t sub_228B28D4C(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 120);
  unint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_228AD266C(*(void *)v2, v4);
  int v5 = sub_228AD05AC(v3, v4);
  sub_228AD25F8(v3, v4);
  return v5 & 0xFFFFFF01;
}

uint64_t sub_228B28DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 124);
  long long v5 = *(_OWORD *)(v4 + 48);
  v8[2] = *(_OWORD *)(v4 + 32);
  v8[3] = v5;
  v8[4] = *(_OWORD *)(v4 + 64);
  __int16 v9 = *(_WORD *)(v4 + 80);
  long long v6 = *(_OWORD *)(v4 + 16);
  v8[0] = *(_OWORD *)v4;
  v8[1] = v6;
  sub_228AD244C((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, void, _WORD))sub_228AD2340);
  sub_228ACFEC4(a2);
  return sub_228AD244C((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, void, _WORD))sub_228AD24B0);
}

uint64_t sub_228B28E40(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 132);
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_228AD266C(*(void *)v2, v4);
  uint64_t v5 = sub_228ACD41C(v3, v4);
  sub_228AD25F8(v3, v4);
  return v5;
}

uint64_t (*sub_228B28EA0(uint64_t a1))()
{
  uint64_t v2 = v1 + *(int *)(a1 + 136);
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  char v5 = *(unsigned char *)(v2 + 16);
  sub_228B3D138(*(void *)v2, v4, v5, (uint64_t (*)(void))sub_228AD28A4);
  uint64_t v6 = sub_228AD0A6C(v3, v4, v5);
  uint64_t v8 = v7;
  sub_228AD2698(v3, v4, v5, (uint64_t (*)(void))sub_228AD28A0);
  if (!v6) {
    return 0;
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v8;
  return sub_228B4D7B8;
}

uint64_t sub_228B28F7C(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 140);
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  char v5 = *(unsigned char *)(v2 + 16);
  sub_228B3D138(*(void *)v2, v4, v5, (uint64_t (*)(void))sub_228AD2688);
  uint64_t v6 = sub_228AD0AB0(v3, v4, v5);
  sub_228AD2698(v3, v4, v5, (uint64_t (*)(void))sub_228AD2678);
  return v6;
}

uint64_t sub_228B29024@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 144);
  uint64_t v5 = *(void *)v4;
  char v6 = *(unsigned char *)(v4 + 8);
  sub_228AD266C(*(void *)v4, v6);
  sub_228AD0D38(v5, v6, a2);

  return sub_228AD25F8(v5, v6);
}

uint64_t sub_228B29090(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 148);
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_228ACF3A4(*(void *)v2, v4);
  uint64_t v5 = sub_228AD0F54(v3, v4);
  sub_228AD26A8(v3, v4);
  return v5;
}

uint64_t sub_228B290F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F01780](a1, a2, a3, WitnessTable);
}

uint64_t sub_228B2916C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F01718](a1, a2, a3, WitnessTable);
}

void sub_228B291E8()
{
}

id sub_228B29228(uint64_t a1)
{
  type metadata accessor for _SwiftUIMKMapView();
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  type metadata accessor for SwiftUIAnnotationView();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v5 = (void *)sub_228BAD3D8();
  objc_msgSend(v3, sel_registerClass_forAnnotationViewWithReuseIdentifier_, ObjCClassFromMetadata, v5);

  sub_228AD25BC(0, &qword_268293830);
  uint64_t v6 = swift_getObjCClassFromMetadata();
  uint64_t v7 = (void *)sub_228BAD3D8();
  objc_msgSend(v3, sel_registerClass_forAnnotationViewWithReuseIdentifier_, v6, v7);

  uint64_t v8 = (void *)sub_228BAD3D8();
  objc_msgSend(v3, sel_registerClass_forAnnotationViewWithReuseIdentifier_, ObjCClassFromMetadata, v8);

  sub_228AD2234(*(void *)(v1 + *(int *)(a1 + 100)) + 16, (uint64_t)v11);
  id v9 = (id)MEMORY[0x22A6A7CA0](v11);
  sub_228AD21E0((uint64_t)v11);
  if (!v9 || (v9, v9 != v3))
  {
    swift_unknownObjectWeakAssign();
    swift_retain();
    sub_228BAC618();
    swift_release();
  }
  return v3;
}

uint64_t sub_228B293E0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_228BACAF8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getWitnessTable();
  sub_228BACE98();
  sub_228BACE88();
  char v9 = sub_228BAC5C8();
  swift_release();
  uint64_t v10 = 0;
  if ((v9 & 1) == 0)
  {
    sub_228BACE88();
    uint64_t v10 = sub_228BAC5D8();
    swift_release();
  }
  sub_228BACE68();
  uint64_t v11 = (void *)v13[1];
  sub_228BACE78();
  sub_228B29574(a1, v11, (uint64_t)v8, v10, a3);

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_228B29574(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v102 = a4;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F78);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v103[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F80);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v103[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_setDelegate_, a2);
  uint64_t v17 = (void *)MEMORY[0x263F8EED0];
  swift_unknownObjectWeakAssign();
  sub_228B4D098((uint64_t)v6 + *(int *)(a5 + 92), (uint64_t)v16, type metadata accessor for _MapContentInputs);
  uint64_t v18 = type metadata accessor for _MapContentInputs(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 0, 1, v18);
  sub_228B2C99C((uint64_t)v16);
  *(void *)((char *)a2 + *(void *)((*v17 & *a2) + 0x248)) = sub_228B29090(a5);
  swift_bridgeObjectRelease();
  sub_228AD2708((uint64_t)v6 + *(int *)(a5 + 96), (uint64_t)v13, qword_268292EA0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(qword_268292EA0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v13, 0, 1, v19);
  sub_228B2CEB0((uint64_t)v13);
  sub_228AD2234(*(uint64_t *)((char *)v6 + *(int *)(a5 + 100)) + 16, (uint64_t)v103);
  uint64_t v20 = (void *)MEMORY[0x22A6A7CA0](v103);
  sub_228AD21E0((uint64_t)v103);
  if (!v20 || (v20, v20 != a1))
  {
    swift_unknownObjectWeakAssign();
    swift_retain();
    sub_228BAC618();
    swift_release();
  }
  int v21 = *(_DWORD *)((char *)a2 + qword_2682928D0);
  uint64_t v22 = *(void *)((char *)a2 + qword_2682928D0 + 8);
  uint64_t v23 = *v6;
  uint64_t v24 = v6[1];
  int v25 = sub_228B74FA4(*v6);
  BOOL v28 = v21 != -1 && v25 != -1 && v21 == v25 && v22 == v24;
  int v29 = v28;
  if (!v28)
  {
    unint64_t v30 = sub_228B11340((uint64_t)v6 + *(int *)(a5 + 84), v23, v24, *(void *)(a5 + 16), *(void *)(a5 + 24), *(char **)(a5 + 32), *(void *)(a5 + 40));
    uint64_t KeyPath = swift_getKeyPath();
    sub_228B1B6EC(a1, v30, a3, v102, KeyPath);
    swift_release();
    swift_bridgeObjectRelease();
  }
  int v32 = *(_DWORD *)((char *)a2 + qword_2682928D8);
  uint64_t v33 = *(void *)((char *)a2 + qword_2682928D8 + 8);
  uint64_t v34 = v6[2];
  uint64_t v35 = v6[3];
  int v36 = sub_228B74FA4(v34);
  if (v32 == -1 || v36 == -1 || v32 != v36 || v33 != v35)
  {
    unint64_t v38 = sub_228B11848((uint64_t)v6 + *(int *)(a5 + 84), a3, 0, v34, v35, *(char **)(a5 + 16), *(void *)(a5 + 24), *(void *)(a5 + 32), *(void *)(a5 + 40));
    uint64_t v39 = swift_getKeyPath();
    sub_228B1B980(a1, v38, a3, v102, v39);
    swift_release();
    swift_bridgeObjectRelease();
    int v37 = 1;
  }
  else
  {
    int v37 = v29 ^ 1;
  }
  int v40 = *(_DWORD *)((char *)a2 + qword_2682928E8);
  uint64_t v41 = *(void *)((char *)a2 + qword_2682928E8 + 8);
  uint64_t v42 = v6[10];
  uint64_t v43 = v6[11];
  int v44 = sub_228B74FA4(v42);
  if (v40 == -1 || v44 == -1 || v40 != v44 || v41 != v43)
  {
    unint64_t v45 = sub_228B11D80((uint64_t)v6 + *(int *)(a5 + 84), v42, v43, *(void *)(a5 + 16), *(void *)(a5 + 24), *(char **)(a5 + 32), *(void *)(a5 + 40));
    uint64_t v46 = swift_getKeyPath();
    sub_228B1BC14(a1, v45, a3, v102, v46);
    swift_release();
    swift_bridgeObjectRelease();
  }
  int v47 = *(_DWORD *)((char *)a2 + qword_268292900);
  uint64_t v48 = *(void *)((char *)a2 + qword_268292900 + 8);
  uint64_t v49 = v6[4];
  uint64_t v50 = v6[5];
  int v51 = sub_228B74FA4(v49);
  if (v47 == -1 || v51 == -1 || v47 != v51 || v48 != v50)
  {
    uint64_t v52 = (char *)sub_228B12288(v49);
    uint64_t v53 = swift_getKeyPath();
    sub_228AFEBF0(a1, v52, a3, v102, v53);
    swift_release();
    swift_bridgeObjectRelease();
    int v37 = 1;
  }
  int v54 = *(_DWORD *)((char *)a2 + qword_268292908);
  uint64_t v55 = *(void *)((char *)a2 + qword_268292908 + 8);
  uint64_t v56 = v6[6];
  uint64_t v57 = v6[7];
  int v58 = sub_228B74FA4(v56);
  if (v54 == -1 || v58 == -1 || v54 != v58 || v55 != v57)
  {
    unint64_t v59 = sub_228B126B4(v56);
    uint64_t v60 = swift_getKeyPath();
    sub_228AFF10C(a1, (uint64_t)v59, a3, v102, v60);
    swift_release();
    swift_bridgeObjectRelease();
    int v37 = 1;
  }
  int v61 = *(_DWORD *)((char *)a2 + qword_268292910);
  uint64_t v62 = *(void *)((char *)a2 + qword_268292910 + 8);
  uint64_t v63 = v6[8];
  uint64_t v64 = v6[9];
  int v65 = sub_228B74FA4(v63);
  if (v61 == -1 || v65 == -1 || v61 != v65 || v62 != v64)
  {
    uint64_t v66 = sub_228B12BA8(v63);
    uint64_t v67 = swift_getKeyPath();
    sub_228AFF644(a1, (uint64_t)v66, a3, v102, v67);
    swift_release();
    swift_bridgeObjectRelease();
    int v37 = 1;
  }
  uint64_t v68 = v6[13];
  unint64_t v69 = v6[14];
  v103[0] = v6[12];
  v103[1] = v68;
  v103[2] = v69;
  BOOL v70 = *(void *)(v6[10] + 16) != 0;
  BOOL v71 = v102 != 0;
  swift_retain();
  swift_retain();
  sub_228B0596C(v69);
  sub_228B2D934(a1, v103, v37, v70, v71);
  swift_release();
  swift_release();
  sub_228B05A34(v69);
  sub_228B2E1E0(a1, (uint64_t)v6 + *(int *)(a5 + 84), v71);
  uint64_t v72 = sub_228B28EA0(a5);
  if (v72)
  {
    uint64_t v74 = v72;
    uint64_t v75 = v73;
    uint64_t v76 = swift_allocObject();
    *(void *)(v76 + 16) = v74;
    *(void *)(v76 + 24) = v75;
    char v77 = sub_228B3D080;
  }
  else
  {
    char v77 = sub_228AD2E20;
    uint64_t v76 = 0;
  }
  int v78 = v102 != 0;
  uint64_t v79 = swift_allocObject();
  *(void *)(v79 + 16) = v77;
  *(void *)(v79 + 24) = v76;
  sub_228B32D58((uint64_t)a1, (uint64_t)sub_228B3D048, v79, v78);
  swift_release();
  uint64_t v80 = sub_228B28F7C(a5);
  sub_228B3CE50(v80, v81);
  sub_228AD2678(v80);
  sub_228B29024(a5, v103);
  *((unsigned char *)a2 + *(void *)((*MEMORY[0x263F8EED0] & *a2) + 0x238)) = v103[0];
  sub_228B2A6AC(a1, a5);
  sub_228B2A8A0(a1, a5);
  sub_228B2C258(a1, v78);
  long long v82 = (char *)v6 + *(int *)(a5 + 152);
  uint64_t v83 = *(void *)v82;
  LOBYTE(v78) = v82[8];
  sub_228AD266C(*(void *)v82, v78);
  LOBYTE(v8__isPlatformVersionAtLeast(2, 18, 1, 0) = sub_228ACD218(v83, v78);
  sub_228AD25F8(v83, v78);
  v103[0] = v6[24];
  sub_228B331A4(a1, v80 & 1, v103);
  sub_228B2C58C(a1, a5);
  uint64_t v84 = v6[9];
  int v85 = sub_228B74FA4(v6[8]);
  uint64_t v86 = (char *)a2 + qword_268292910;
  *(_DWORD *)uint64_t v86 = v85;
  *((void *)v86 + 1) = v84;
  uint64_t v87 = v6[7];
  int v88 = sub_228B74FA4(v6[6]);
  uint64_t v89 = (char *)a2 + qword_268292908;
  *(_DWORD *)uint64_t v89 = v88;
  *((void *)v89 + 1) = v87;
  uint64_t v90 = v6[5];
  int v91 = sub_228B74FA4(v6[4]);
  uint64_t v92 = (char *)a2 + qword_268292900;
  *(_DWORD *)uint64_t v92 = v91;
  *((void *)v92 + 1) = v90;
  uint64_t v93 = v6[11];
  int v94 = sub_228B74FA4(v6[10]);
  uint64_t v95 = (char *)a2 + qword_2682928E8;
  *(_DWORD *)uint64_t v95 = v94;
  *((void *)v95 + 1) = v93;
  uint64_t v96 = v6[3];
  int v97 = sub_228B74FA4(v6[2]);
  uint64_t v98 = (char *)a2 + qword_2682928D8;
  *(_DWORD *)uint64_t v98 = v97;
  *((void *)v98 + 1) = v96;
  uint64_t v99 = v6[1];
  uint64_t result = sub_228B74FA4(*v6);
  uint64_t v101 = (char *)a2 + qword_2682928D0;
  *(_DWORD *)uint64_t v101 = result;
  *((void *)v101 + 1) = v99;
  return result;
}

uint64_t sub_228B29F04()
{
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_228BAF4E0;
  sub_228BACF58();
  sub_228B4CEAC(&qword_268292620, 255, MEMORY[0x263F1A550]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292628);
  sub_228B0A36C(&qword_268292630, &qword_268292628);
  return sub_228BAD768();
}

uint64_t sub_228B2A064(uint64_t a1, uint64_t a2)
{
  return sub_228B3CCD0(a2);
}

id sub_228B2A070@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  id result = sub_228B3CEC0(a1[2], a1[3], a1[4], a1[5]);
  *a2 = result;
  return result;
}

id sub_228B2A140()
{
  return sub_228B2A454(type metadata accessor for MapBridgingCustomAnnotation);
}

uint64_t type metadata accessor for MapBridgingCustomAnnotation()
{
  return self;
}

id sub_228B2A1BC(uint64_t a1, uint64_t a2, void *a3)
{
  if (*(void *)(a1 + *a3 + 8))
  {
    swift_bridgeObjectRetain();
    id v3 = (void *)sub_228BAD3D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

uint64_t sub_228B2A234(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v6 = sub_228BAD408();
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  uint64_t v8 = (uint64_t *)(a1 + *a4);
  uint64_t *v8 = v6;
  v8[1] = v7;

  return swift_bridgeObjectRelease();
}

id sub_228B2A2FC()
{
  return sub_228B2A454(type metadata accessor for MapBridgingMarker);
}

void sub_228B2A330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + *a5);
}

uint64_t type metadata accessor for MapBridgingMarker()
{
  return self;
}

id sub_228B2A43C()
{
  return sub_228B2A454(type metadata accessor for MapBridgingUserAnnotation);
}

id sub_228B2A454(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for MapBridgingUserAnnotation()
{
  return self;
}

void sub_228B2A4B0()
{
  sub_228B4C9C0(319, &qword_268292E90, type metadata accessor for _MapContentInputs, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for MapSelectionManagerBox();
    sub_228BAD218();
    sub_228BAD718();
    if (v1 <= 0x3F)
    {
      sub_228B4C960(319, &qword_268292E98, qword_268292EA0, MEMORY[0x263F8D8F0]);
      if (v2 <= 0x3F) {
        swift_initClassMetadata2();
      }
    }
  }
}

uint64_t sub_228B2A674(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  a2(&v3);
  return v3;
}

void sub_228B2A6AC(void *a1, uint64_t a2)
{
  sub_228B28DAC(a2, (uint64_t)v12);
  uint64_t v3 = v12[0];
  uint64_t v2 = v12[1];
  uint64_t v4 = v13;
  uint64_t v5 = v16;
  uint64_t v6 = v17;
  if (v13 != 1)
  {
    id v11 = sub_228B8A0B4();
    sub_228AD252C(v3, v2, v4);
    uint64_t v8 = v5;
    uint64_t v9 = v6;
LABEL_7:
    sub_228AD2574(v8, v9);
    uint64_t v7 = a1;
    goto LABEL_8;
  }
  if ((v15 & 1) == 0)
  {
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10908]), sel_initWithElevationStyle_, v14);
    sub_228AD252C(v3, v2, 1);
    uint64_t v8 = v5;
    uint64_t v9 = v6;
    goto LABEL_7;
  }
  uint64_t v7 = a1;
  if (v17 == 1)
  {
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10A30]), sel_init);
    sub_228AD252C(v3, v2, 1);
    sub_228AD2574(v5, 1);
  }
  else
  {
    id v11 = sub_228B8A22C();
    sub_228AD252C(v3, v2, 1);
    sub_228AD2574(v5, v6);
  }
LABEL_8:
  objc_msgSend(v7, sel_setPreferredConfiguration_, v11, a1);
}

id sub_228B2A8A0(void *a1, uint64_t a2)
{
  id v214 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F90);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v197 = (uint64_t)&v168 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v193 = (uint64_t)&v168 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v190 = (uint64_t)&v168 - v9;
  uint64_t v196 = type metadata accessor for MapUserLocationButtonConfig(0);
  uint64_t v195 = *(void *)(v196 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v196);
  uint64_t v198 = (char *)&v168 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v194 = (char *)&v168 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v191 = (char *)&v168 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F98);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v184 = (uint64_t)&v168 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v179 = (uint64_t)&v168 - v18;
  uint64_t v183 = type metadata accessor for MapCompassConfig(0);
  uint64_t v182 = *(void *)(v183 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v183);
  uint64_t v185 = (_WORD *)((char *)&v168 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v181 = (char *)&v168 - v22;
  uint64_t v216 = a2;
  uint64_t v189 = *(void *)(a2 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v187 = (char *)&v168 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v205 = (char *)&v168 - v25;
  uint64_t v203 = sub_228BAC9C8();
  uint64_t v209 = *(void *)(v203 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v203);
  uint64_t v192 = (uint64_t)&v168 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v202 = (char *)&v168 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v175 = (uint64_t)&v168 - v30;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292FA0);
  uint64_t v32 = MEMORY[0x270FA5388](v31 - 8);
  uint64_t v177 = (uint64_t)&v168 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v173 = (uint64_t)&v168 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v170 = (uint64_t)&v168 - v36;
  uint64_t v200 = type metadata accessor for MapPitchToggleConfig(0);
  uint64_t v204 = *(void *)(v200 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](v200);
  uint64_t v178 = (char *)&v168 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v174 = (void (*)(char *, uint64_t))((char *)&v168 - v40);
  MEMORY[0x270FA5388](v39);
  uint64_t v172 = (char *)&v168 - v41;
  uint64_t v42 = sub_228BAC588();
  uint64_t v211 = *(void *)(v42 - 8);
  uint64_t v212 = v42;
  MEMORY[0x270FA5388](v42);
  uint64_t v210 = (uint64_t)&v168 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292FA8);
  uint64_t v45 = MEMORY[0x270FA5388](v44 - 8);
  uint64_t v208 = (uint64_t)&v168 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v45);
  uint64_t v48 = (char *)&v168 - v47;
  uint64_t v49 = type metadata accessor for MapScaleViewConfig(0);
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  uint64_t v53 = (char *)&v168 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v51);
  uint64_t v55 = (char *)&v168 - v54;
  uint64_t v56 = type metadata accessor for MapControlsConfig();
  uint64_t v57 = MEMORY[0x270FA5388](v56);
  uint64_t v188 = (uint64_t)&v168 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = MEMORY[0x270FA5388](v57);
  uint64_t v186 = (uint64_t)&v168 - v60;
  uint64_t v61 = MEMORY[0x270FA5388](v59);
  uint64_t v180 = (char *)&v168 - v62;
  uint64_t v63 = MEMORY[0x270FA5388](v61);
  uint64_t v201 = (uint64_t)&v168 - v64;
  uint64_t v65 = MEMORY[0x270FA5388](v63);
  uint64_t v176 = (uint64_t)&v168 - v66;
  uint64_t v67 = MEMORY[0x270FA5388](v65);
  uint64_t v171 = (uint64_t)&v168 - v68;
  uint64_t v69 = MEMORY[0x270FA5388](v67);
  uint64_t v169 = (uint64_t)&v168 - v70;
  uint64_t v71 = MEMORY[0x270FA5388](v69);
  uint64_t v168 = (uint64_t)&v168 - v72;
  uint64_t v73 = MEMORY[0x270FA5388](v71);
  uint64_t v75 = (char *)&v168 - v74;
  MEMORY[0x270FA5388](v73);
  char v77 = (char *)&v168 - v76;
  uint64_t v215 = v2;
  sub_228AD07D0((uint64_t)&v168 - v76);
  uint64_t v213 = (int *)v56;
  sub_228AD2708((uint64_t)&v77[*(int *)(v56 + 20)], (uint64_t)v48, &qword_268292FA8);
  int v78 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
  int v79 = v78(v48, 1, v49);
  uint64_t v80 = (unsigned int *)MEMORY[0x263F18568];
  if (v79 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v211 + 104))(&v55[*(int *)(v49 + 28)], *MEMORY[0x263F18568], v212);
    void v55[2] = 0;
    *(_WORD *)uint64_t v55 = 512;
    sub_228AC1A50((uint64_t)v48, &qword_268292FA8);
  }
  else
  {
    sub_228B4D404((uint64_t)v48, (uint64_t)v55, type metadata accessor for MapScaleViewConfig);
  }
  sub_228B3D868((uint64_t)v77, (uint64_t (*)(void))type metadata accessor for MapControlsConfig);
  unsigned __int8 v81 = sub_228B28E40(v216);
  id v82 = v214;
  if (*v55 == 1)
  {
    uint64_t v83 = v81;
    uint64_t v84 = v211;
    switch(v81)
    {
      case 1u:
        uint64_t v83 = 2;
        break;
      case 2u:
        uint64_t v83 = 1;
        break;
      case 3u:
        uint64_t v83 = qword_228BB2438[v55[1]];
        break;
      default:
        break;
    }
  }
  else
  {
    uint64_t v83 = 1;
    uint64_t v84 = v211;
  }
  sub_228B3D868((uint64_t)v55, type metadata accessor for MapScaleViewConfig);
  objc_msgSend(v82, sel__setScaleVisibility_, v83);
  sub_228AD07D0((uint64_t)v75);
  uint64_t v85 = v208;
  sub_228AD2708((uint64_t)&v75[v213[5]], v208, &qword_268292FA8);
  if (v78((char *)v85, 1, v49) == 1)
  {
    uint64_t v86 = *v80;
    uint64_t v87 = v212;
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 104))(&v53[*(int *)(v49 + 28)], v86, v212);
    v53[2] = 0;
    *(_WORD *)uint64_t v53 = 512;
    sub_228AC1A50(v85, &qword_268292FA8);
  }
  else
  {
    sub_228B4D404(v85, (uint64_t)v53, type metadata accessor for MapScaleViewConfig);
    uint64_t v87 = v212;
  }
  sub_228B3D868((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for MapControlsConfig);
  uint64_t v88 = v210;
  uint64_t v208 = v215 + *(int *)(v216 + 108);
  sub_228ACCD10(v210);
  uint64_t v89 = sub_228B50B9C(v88);
  unint64_t v206 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
  uint64_t v207 = v84 + 8;
  v206(v88, v87);
  sub_228B3D868((uint64_t)v53, type metadata accessor for MapScaleViewConfig);
  objc_msgSend(v82, sel__setScaleControlSize_, v89);
  uint64_t v90 = v168;
  sub_228AD07D0(v168);
  uint64_t v91 = v170;
  sub_228AD2708(v90, v170, &qword_268292FA0);
  uint64_t v92 = v204 + 48;
  uint64_t v93 = (int *)v200;
  uint64_t v199 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v204 + 48);
  if (v199(v91, 1, v200) == 1)
  {
    int v94 = v172;
    sub_228BAC9B8();
    uint64_t v95 = (unsigned int *)MEMORY[0x263F18568];
    (*(void (**)(unsigned char *, void, uint64_t))(v84 + 104))(&v94[v93[7]], *MEMORY[0x263F18568], v87);
    v94[1] = 2;
    *(void *)&v94[v93[8]] = 0;
    *int v94 = 0;
    sub_228AC1A50(v91, &qword_268292FA0);
  }
  else
  {
    int v94 = v172;
    sub_228B4D404(v91, (uint64_t)v172, type metadata accessor for MapPitchToggleConfig);
    uint64_t v95 = (unsigned int *)MEMORY[0x263F18568];
  }
  sub_228B3D868(v90, (uint64_t (*)(void))type metadata accessor for MapControlsConfig);
  unsigned __int8 v96 = sub_228B28E40(v216);
  if (*v94 == 1)
  {
    uint64_t v97 = v96;
    switch(v96)
    {
      case 1u:
        uint64_t v97 = 2;
        break;
      case 2u:
        goto LABEL_19;
      case 3u:
        uint64_t v97 = qword_228BB2438[(char)v94[1]];
        break;
      default:
        break;
    }
  }
  else
  {
LABEL_19:
    uint64_t v97 = 1;
  }
  sub_228B3D868((uint64_t)v94, type metadata accessor for MapPitchToggleConfig);
  objc_msgSend(v82, sel_setPitchButtonVisibility_, v97);
  uint64_t v98 = v169;
  sub_228AD07D0(v169);
  uint64_t v99 = v173;
  sub_228AD2708(v98, v173, &qword_268292FA0);
  unsigned int v100 = v199(v99, 1, (uint64_t)v93);
  uint64_t v204 = v92;
  uint64_t v101 = v174;
  if (v100 == 1)
  {
    sub_228BAC9B8();
    (*(void (**)(unsigned char *, void, uint64_t))(v84 + 104))((unsigned char *)v101 + v93[7], *v95, v87);
    *((unsigned char *)v101 + 1) = 2;
    *(void *)((char *)v101 + v93[8]) = 0;
    *(unsigned char *)uint64_t v101 = 0;
    sub_228AC1A50(v99, &qword_268292FA0);
  }
  else
  {
    sub_228B4D404(v99, (uint64_t)v174, type metadata accessor for MapPitchToggleConfig);
  }
  sub_228B3D868(v98, (uint64_t (*)(void))type metadata accessor for MapControlsConfig);
  uint64_t v102 = v175;
  uint64_t v173 = v215 + *(int *)(v216 + 104);
  sub_228ACCCD8(v175);
  uint64_t v103 = v93[6];
  uint64_t v104 = (uint64_t)v101;
  uint64_t v105 = (char *)v101 + v103;
  uint64_t v106 = v202;
  sub_228BAC9B8();
  char v107 = sub_228BAC988();
  uint64_t v108 = v209;
  uint64_t v110 = v209 + 8;
  uint64_t v109 = *(void (**)(char *, uint64_t))(v209 + 8);
  uint64_t v111 = v203;
  v109(v106, v203);
  uint64_t v114 = *(unsigned char **)(v108 + 16);
  uint64_t v113 = v108 + 16;
  uint64_t v112 = v114;
  if (v107) {
    uint64_t v115 = v102;
  }
  else {
    uint64_t v115 = (uint64_t)v105;
  }
  uint64_t v209 = v113;
  uint64_t v172 = v112;
  ((void (*)(char *, uint64_t, uint64_t))v112)(v106, v115, v111);
  uint64_t v116 = sub_228BA6EB4(v106, 1u);
  uint64_t v175 = v110;
  uint64_t v174 = v109;
  v109((char *)v102, v111);
  sub_228B3D868(v104, type metadata accessor for MapPitchToggleConfig);
  id v117 = v214;
  objc_msgSend(v214, sel__setPitchButtonBackgroundStyle_, v116);
  uint64_t v118 = v171;
  sub_228AD07D0(v171);
  uint64_t v119 = v200;
  uint64_t v120 = v177;
  sub_228AD2708(v118, v177, &qword_268292FA0);
  if (v199(v120, 1, v119) == 1)
  {
    uint64_t v121 = v178;
    sub_228BAC9B8();
    uint64_t v122 = v212;
    (*(void (**)(unsigned char *, void, uint64_t))(v211 + 104))(&v121[*(int *)(v119 + 28)], *MEMORY[0x263F18568], v212);
    v121[1] = 2;
    *(void *)&v121[*(int *)(v119 + 32)] = 0;
    *uint64_t v121 = 0;
    sub_228AC1A50(v120, &qword_268292FA0);
    uint64_t v123 = v189;
    long long v124 = v181;
  }
  else
  {
    uint64_t v121 = v178;
    sub_228B4D404(v120, (uint64_t)v178, type metadata accessor for MapPitchToggleConfig);
    uint64_t v123 = v189;
    long long v124 = v181;
    uint64_t v122 = v212;
  }
  sub_228B3D868(v118, (uint64_t (*)(void))type metadata accessor for MapControlsConfig);
  uint64_t v125 = v210;
  sub_228ACCD10(v210);
  uint64_t v126 = sub_228ACB164(v125);
  v206(v125, v122);
  sub_228B3D868((uint64_t)v121, type metadata accessor for MapPitchToggleConfig);
  objc_msgSend(v117, sel__setPitchButtonControlSize_, v126);
  uint64_t v127 = *(void (**)(char *, uint64_t, uint64_t))(v123 + 16);
  v127(v205, v215, v216);
  uint64_t v128 = v176;
  sub_228AD07D0(v176);
  uint64_t v129 = v179;
  sub_228AD2708(v128 + v213[7], v179, &qword_268292F98);
  long long v130 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v182 + 48);
  uint64_t v131 = v183;
  if (v130(v129, 1, v183) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v211 + 104))(&v124[*(int *)(v131 + 24)], *MEMORY[0x263F18568], v122);
    *(_WORD *)long long v124 = 512;
    sub_228AC1A50(v129, &qword_268292F98);
  }
  else
  {
    sub_228B4D404(v129, (uint64_t)v124, type metadata accessor for MapCompassConfig);
  }
  sub_228B3D868(v128, (uint64_t (*)(void))type metadata accessor for MapControlsConfig);
  sub_228B28E40(v216);
  if (*v124 == 1) {
    char v132 = sub_228BAC558() ^ 1;
  }
  else {
    char v132 = 0;
  }
  sub_228B3D868((uint64_t)v124, type metadata accessor for MapCompassConfig);
  uint64_t v204 = *(void *)(v123 + 8);
  ((void (*)(char *, uint64_t))v204)(v205, v216);
  objc_msgSend(v214, sel_setShowsCompass_, v132 & 1);
  uint64_t v133 = v201;
  sub_228AD07D0(v201);
  uint64_t v134 = v184;
  sub_228AD2708(v133 + v213[7], v184, &qword_268292F98);
  if (v130(v134, 1, v131) == 1)
  {
    uint64_t v135 = v185;
    uint64_t v136 = v212;
    (*(void (**)(uint64_t, void, uint64_t))(v211 + 104))((uint64_t)v185 + *(int *)(v131 + 24), *MEMORY[0x263F18568], v212);
    *uint64_t v135 = 512;
    sub_228AC1A50(v134, &qword_268292F98);
    uint64_t v137 = (int *)v196;
    uint64_t v138 = (uint64_t)v180;
  }
  else
  {
    uint64_t v135 = v185;
    sub_228B4D404(v134, (uint64_t)v185, type metadata accessor for MapCompassConfig);
    uint64_t v137 = (int *)v196;
    uint64_t v138 = (uint64_t)v180;
    uint64_t v136 = v212;
  }
  sub_228B3D868(v201, (uint64_t (*)(void))type metadata accessor for MapControlsConfig);
  uint64_t v139 = v210;
  sub_228ACCD10(v210);
  uint64_t v140 = sub_228B66AC0(v139);
  v206(v139, v136);
  sub_228B3D868((uint64_t)v135, type metadata accessor for MapCompassConfig);
  objc_msgSend(v214, sel_setCompassViewSize_, v140);
  uint64_t v141 = v187;
  v127(v187, v215, v216);
  uint64_t v142 = v141;
  sub_228AD07D0(v138);
  uint64_t v143 = v190;
  sub_228AD2708(v138 + v213[6], v190, &qword_268292F90);
  id v144 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v195 + 48);
  if (v144(v143, 1, v137) == 1)
  {
    uint64_t v145 = v191;
    sub_228BAC9B8();
    (*(void (**)(unsigned char *, void, uint64_t))(v211 + 104))(&v145[v137[7]], *MEMORY[0x263F18568], v136);
    v145[1] = 2;
    *(void *)&v145[v137[8]] = 0;
    *uint64_t v145 = 0;
    sub_228AC1A50(v143, &qword_268292F90);
  }
  else
  {
    uint64_t v145 = v191;
    sub_228B4D404(v143, (uint64_t)v191, type metadata accessor for MapUserLocationButtonConfig);
  }
  sub_228B3D868(v138, (uint64_t (*)(void))type metadata accessor for MapControlsConfig);
  sub_228B28E40(v216);
  if (*v145 == 1) {
    char v146 = sub_228BAC558() ^ 1;
  }
  else {
    char v146 = 0;
  }
  sub_228B3D868((uint64_t)v145, type metadata accessor for MapUserLocationButtonConfig);
  ((void (*)(char *, uint64_t))v204)(v142, v216);
  objc_msgSend(v214, sel_setShowsUserTrackingButton_, v146 & 1);
  uint64_t v147 = v186;
  sub_228AD07D0(v186);
  uint64_t v148 = v193;
  sub_228AD2708(v147 + v213[6], v193, &qword_268292F90);
  unsigned int v149 = v144(v148, 1, v137);
  uint64_t v205 = (char *)v144;
  uint64_t v150 = v194;
  if (v149 == 1)
  {
    sub_228BAC9B8();
    (*(void (**)(unsigned char *, void, uint64_t))(v211 + 104))(&v150[v137[7]], *MEMORY[0x263F18568], v212);
    v150[1] = 2;
    *(void *)&v150[v137[8]] = 0;
    *uint64_t v150 = 0;
    sub_228AC1A50(v148, &qword_268292F90);
  }
  else
  {
    sub_228B4D404(v148, (uint64_t)v194, type metadata accessor for MapUserLocationButtonConfig);
  }
  sub_228B3D868(v147, (uint64_t (*)(void))type metadata accessor for MapControlsConfig);
  uint64_t v151 = v192;
  sub_228ACCCD8(v192);
  uint64_t v152 = &v150[v137[6]];
  uint64_t v153 = v202;
  sub_228BAC9B8();
  char v154 = sub_228BAC988();
  uint64_t v155 = v203;
  uint64_t v156 = (void (*)(uint64_t, uint64_t))v174;
  v174(v153, v203);
  if (v154) {
    uint64_t v157 = v151;
  }
  else {
    uint64_t v157 = (uint64_t)v152;
  }
  ((void (*)(char *, uint64_t, uint64_t))v172)(v153, v157, v155);
  uint64_t v158 = sub_228BA6EB4(v153, 1u);
  v156(v151, v155);
  sub_228B3D868((uint64_t)v150, type metadata accessor for MapUserLocationButtonConfig);
  id v159 = v214;
  objc_msgSend(v214, sel__setUserTrackingButtonBackgroundStyle_, v158);
  uint64_t v160 = v188;
  sub_228AD07D0(v188);
  uint64_t v161 = v197;
  sub_228AD2708(v160 + v213[6], v197, &qword_268292F90);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v205)(v161, 1, v137) == 1)
  {
    uint64_t v162 = v198;
    sub_228BAC9B8();
    uint64_t v163 = v212;
    (*(void (**)(unsigned char *, void, uint64_t))(v211 + 104))(&v162[v137[7]], *MEMORY[0x263F18568], v212);
    v162[1] = 2;
    *(void *)&v162[v137[8]] = 0;
    *uint64_t v162 = 0;
    sub_228AC1A50(v161, &qword_268292F90);
  }
  else
  {
    uint64_t v162 = v198;
    sub_228B4D404(v161, (uint64_t)v198, type metadata accessor for MapUserLocationButtonConfig);
    uint64_t v163 = v212;
  }
  sub_228B3D868(v160, (uint64_t (*)(void))type metadata accessor for MapControlsConfig);
  uint64_t v164 = v210;
  sub_228ACCD10(v210);
  uint64_t v165 = sub_228B97BB4(v164);
  v206(v164, v163);
  sub_228B3D868((uint64_t)v162, type metadata accessor for MapUserLocationButtonConfig);
  objc_msgSend(v159, sel__setUserTrackingControlSize_, v165);
  uint64_t v166 = v216;
  sub_228B28D4C(v216);
  LOBYTE(v165) = sub_228BAC558();
  sub_228B28D4C(v166);
  objc_msgSend(v159, sel__setShowsAppleLogo_force_, (v165 & 1) == 0, (sub_228BAC558() & 1) == 0);
  return objc_msgSend(v159, sel_setShowsAttribution_, sub_228B28D4C(v166) & 1);
}

void sub_228B2C258(void *a1, char a2)
{
  uint64_t v5 = v2 + 120;
  sub_228AD2708(v2 + 120, (uint64_t)v20, qword_268292B80);
  if (v21 == 1)
  {
    sub_228AC1A50((uint64_t)v20, qword_268292B80);
    long long v26 = 0u;
    long long v27 = 0u;
    uint64_t v28 = 0;
  }
  else
  {
    sub_228AD2708((uint64_t)v20, (uint64_t)&v26, &qword_268292F88);
    sub_228B3D088((uint64_t)v20);
    if (*((void *)&v27 + 1))
    {
      sub_228B09A30(&v26, (uint64_t)v29);
      uint64_t v6 = v30;
      uint64_t v7 = v31;
      __swift_project_boxed_opaque_existential_1(v29, v30);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 32))(v32, v6, v7);
      sub_228B3D0DC((uint64_t)v32, (uint64_t)v33);
      sub_228B3D0DC((uint64_t)v33, (uint64_t)&v26);
      if (v28) {
        uint64_t v8 = &selRef_initWithCoordinateRegion_;
      }
      else {
        uint64_t v8 = &selRef_initWithMapRect_;
      }
      id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10948]), *v8, v26, v27);
      objc_msgSend(a1, sel_setCameraBoundary_animated_, v9, a2 & 1);

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
      goto LABEL_9;
    }
  }
  sub_228AC1A50((uint64_t)&v26, &qword_268292F88);
  objc_msgSend(a1, sel_setCameraBoundary_, 0);
LABEL_9:
  sub_228AD2708(v5, (uint64_t)v20, qword_268292B80);
  if (v21 == 1) {
    goto LABEL_12;
  }
  double v10 = v22;
  char v11 = v23;
  sub_228B3D088((uint64_t)v20);
  if (v11) {
    goto LABEL_13;
  }
  sub_228AD2708(v5, (uint64_t)v20, qword_268292B80);
  if (v21 == 1)
  {
LABEL_12:
    sub_228AC1A50((uint64_t)v20, qword_268292B80);
  }
  else
  {
    double v18 = v24;
    char v19 = v25;
    sub_228B3D088((uint64_t)v20);
    if ((v19 & 1) == 0)
    {
      id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10950]), sel_initWithMinCenterCoordinateDistance_maxCenterCoordinateDistance_, v10, v18);
      goto LABEL_22;
    }
  }
LABEL_13:
  sub_228AD2708(v5, (uint64_t)v20, qword_268292B80);
  if (v21 == 1)
  {
    sub_228AC1A50((uint64_t)v20, qword_268292B80);
  }
  else
  {
    double v12 = v22;
    char v13 = v23;
    sub_228B3D088((uint64_t)v20);
    if ((v13 & 1) == 0)
    {
      id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10950]), sel_initWithMinCenterCoordinateDistance_, v12);
      goto LABEL_22;
    }
  }
  sub_228AD2708(v5, (uint64_t)v20, qword_268292B80);
  if (v21 != 1)
  {
    double v14 = v24;
    char v15 = v25;
    sub_228B3D088((uint64_t)v20);
    if (v15) {
      goto LABEL_19;
    }
    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10950]), sel_initWithMaxCenterCoordinateDistance_, v14);
LABEL_22:
    uint64_t v16 = v17;
    goto LABEL_23;
  }
  sub_228AC1A50((uint64_t)v20, qword_268292B80);
LABEL_19:
  uint64_t v16 = 0;
LABEL_23:
  objc_msgSend(a1, sel_setCameraZoomRange_, v16);
}

id sub_228B2C58C(void *a1, uint64_t a2)
{
  id v38 = a1;
  uint64_t v3 = sub_228BAC848();
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v34 - v7;
  uint64_t v35 = sub_228BACD08();
  uint64_t v9 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  char v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_228BACB68();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  char v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34[1] = a2;
  sub_228ACFE4C((uint64_t)v15);
  sub_228BACCF8();
  sub_228BACF88();
  sub_228BACB58();
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v35);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_228ACFE84((uint64_t)v8);
  uint64_t v24 = *MEMORY[0x263F18DC8];
  uint64_t v26 = v36;
  uint64_t v25 = v37;
  long long v27 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 104);
  v27(v6, v24, v37);
  char v28 = sub_228BAC838();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v26 + 8);
  v29(v6, v25);
  v29(v8, v25);
  if (v28) {
    double v30 = v19;
  }
  else {
    double v30 = v23;
  }
  sub_228ACFE84((uint64_t)v8);
  v27(v6, v24, v25);
  char v31 = sub_228BAC838();
  v29(v6, v25);
  v29(v8, v25);
  if (v31) {
    double v32 = v23;
  }
  else {
    double v32 = v19;
  }
  return objc_msgSend(v38, sel_setLayoutMargins_, v17, v30, v21, v32);
}

void sub_228B2C8F8()
{
}

uint64_t sub_228B2C924@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x200);
  swift_beginAccess();
  return sub_228AD2708(v3, a1, &qword_268292F80);
}

uint64_t sub_228B2C99C(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x200);
  swift_beginAccess();
  sub_228B3E5E0(a1, v3, &qword_268292F80);
  return swift_endAccess();
}

void sub_228B2CA1C(uint64_t *a1@<X8>)
{
  uint64_t v2 = (void *)((char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x208));
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  unint64_t v5 = v2[2];
  *a1 = *v2;
  a1[1] = v4;
  a1[2] = v5;
  sub_228B3D3C0(v3, v4, v5);
}

void sub_228B2CA58(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = (void *)((char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x208));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  unint64_t v6 = v3[2];
  *(_OWORD *)uint64_t v3 = *(_OWORD *)a1;
  v3[2] = v2;
  sub_228B3D40C(v5, v4, v6);
}

uint64_t sub_228B2CAA0()
{
  return *((unsigned __int8 *)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x210));
}

uint64_t sub_228B2CACC(uint64_t result)
{
  *((unsigned char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x210)) = result;
  return result;
}

uint64_t sub_228B2CAF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x218);
  swift_beginAccess();
  type metadata accessor for MapSelectionManagerBox();
  sub_228BAD218();
  uint64_t v4 = sub_228BAD718();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_228B2CBFC(uint64_t a1)
{
  uint64_t v3 = (char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x218);
  swift_beginAccess();
  type metadata accessor for MapSelectionManagerBox();
  sub_228BAD218();
  uint64_t v4 = sub_228BAD718();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_228B2CD08()
{
  return *((unsigned __int8 *)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x220));
}

uint64_t sub_228B2CD34(uint64_t result)
{
  *((unsigned char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x220)) = result;
  return result;
}

uint64_t sub_228B2CD60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)((char *)v2 + *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x228));
  uint64_t v4 = *v3;
  uint64_t *v3 = a1;
  v3[1] = a2;
  return sub_228AD2678(v4);
}

uint64_t sub_228B2CD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)((char *)v2 + *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x230));
  uint64_t v4 = *v3;
  uint64_t *v3 = a1;
  v3[1] = a2;
  return sub_228AD2678(v4);
}

void sub_228B2CDD8(unsigned char *a1@<X8>)
{
  *a1 = *((unsigned char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x238));
}

unsigned char *sub_228B2CE08(unsigned char *result)
{
  *((unsigned char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x238)) = *result;
  return result;
}

uint64_t sub_228B2CE38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x240);
  swift_beginAccess();
  return sub_228AD2708(v3, a1, &qword_268292F78);
}

uint64_t sub_228B2CEB0(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x240);
  swift_beginAccess();
  sub_228B3E5E0(a1, v3, &qword_268292F78);
  return swift_endAccess();
}

uint64_t sub_228B2CF30(uint64_t a1)
{
  *(void *)((char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x248)) = a1;
  return swift_bridgeObjectRelease();
}

unint64_t sub_228B2CF64@<X0>(unint64_t result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = result;
  if ((result >> 61) >= 4)
  {
    if (result >> 61 == 4)
    {
      uint64_t v12 = *MEMORY[0x263F8EED0] & *v3;
      unint64_t v13 = *(void *)((result & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      sub_228B0596C(v13);
      if (objc_msgSend(a2, sel_hasUserLocation))
      {
        id result = sub_228B05A34(v13);
        goto LABEL_14;
      }
      if (v13 != 0xA000000000000000)
      {
        sub_228B0596C(v13);
        sub_228B2CF64(v18, v13, a2);
        uint64_t v4 = v18[0];
        uint64_t v6 = v18[1];
        uint64_t v7 = v18[2];
        uint64_t v8 = v18[3];
        uint64_t v9 = v18[4];
        char v10 = v19;
        sub_228B05A34(v13);
        sub_228B05A34(v13);
        long long v16 = *(_OWORD *)(v12 + 488);
        long long v20 = *(_OWORD *)(v12 + 472);
        long long v21 = v16;
        type metadata accessor for MapBridgingViewCoordinator.ResolvedCameraPosition();
        uint64_t v17 = sub_228BAD718();
        id result = (*(uint64_t (**)(long long *, void *, uint64_t))(*(void *)(v17 - 8) + 32))(&v20, v18, v17);
        if (v23 != 2) {
          goto LABEL_15;
        }
LABEL_14:
        uint64_t v4 = 0;
        uint64_t v6 = 0;
        uint64_t v7 = 0;
        uint64_t v8 = 0;
        uint64_t v9 = 0;
        char v10 = 2;
        goto LABEL_15;
      }
      sub_228B0596C(0xA000000000000000);
      sub_228B1ACBC((uint64_t)v18);
      id result = sub_228ACD8BC((uint64_t)v18, (uint64_t)&v20, (uint64_t *)&unk_268293010);
      if (v22) {
        goto LABEL_14;
      }
      id result = swift_allocObject();
      long long v14 = v20;
      long long v15 = v21;
      uint64_t v4 = result | 0x2000000000000000;
      char v10 = 1;
    }
    else
    {
      if (result != 0xA000000000000000) {
        goto LABEL_14;
      }
      sub_228B1ACBC((uint64_t)v18);
      id result = sub_228ACD8BC((uint64_t)v18, (uint64_t)&v20, (uint64_t *)&unk_268293010);
      if (v22) {
        goto LABEL_14;
      }
      id result = swift_allocObject();
      char v10 = 0;
      long long v14 = v20;
      long long v15 = v21;
      uint64_t v4 = result | 0x2000000000000000;
    }
    *(_OWORD *)(result + 16) = v14;
    *(_OWORD *)(result + 32) = v15;
    uint64_t v8 = 0x403C000000000000;
    uint64_t v6 = 0x404C000000000000;
    uint64_t v7 = 0x404C000000000000;
    uint64_t v9 = 0x404C000000000000;
    goto LABEL_15;
  }
  uint64_t v6 = *MEMORY[0x263F834E8];
  uint64_t v7 = *(void *)(MEMORY[0x263F834E8] + 8);
  uint64_t v8 = *(void *)(MEMORY[0x263F834E8] + 16);
  uint64_t v9 = *(void *)(MEMORY[0x263F834E8] + 24);
  id result = sub_228B0596C(result);
  char v10 = 0;
LABEL_15:
  *(void *)a3 = v4;
  *(void *)(a3 + 8) = v6;
  *(void *)(a3 + 16) = v7;
  *(void *)(a3 + 24) = v8;
  *(void *)(a3 + 32) = v9;
  *(unsigned char *)(a3 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v10;
  return result;
}

uint64_t sub_228B2D1DC(unint64_t a1, void *a2, char a3)
{
  uint64_t v6 = (void *)(*MEMORY[0x263F8EED0] & *v3);
  sub_228B2CF64(a1, a2, (uint64_t)v26);
  uint64_t v7 = v6[59];
  uint64_t v8 = v6[60];
  uint64_t v9 = (uint64_t (*)(uint64_t))v6[61];
  char v10 = (void *)v6[62];
  uint64_t v20 = v7;
  uint64_t v21 = v8;
  char v22 = v9;
  char v23 = v10;
  type metadata accessor for MapBridgingViewCoordinator.ResolvedCameraPosition();
  uint64_t v11 = sub_228BAD718();
  uint64_t result = (*(uint64_t (**)(long long *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(&v27, v26, v11);
  if (v28[24] != 2)
  {
    long long v29 = v27;
    v30[0] = *(_OWORD *)v28;
    *(_OWORD *)((char *)v30 + 9) = *(_OWORD *)&v28[9];
    uint64_t v13 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v7;
    *(void *)(v14 + 24) = v8;
    *(void *)(v14 + 32) = v9;
    *(void *)(v14 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v10;
    *(void *)(v14 + 48) = v13;
    long long v15 = v30[0];
    *(_OWORD *)(v14 + 56) = v29;
    *(_OWORD *)(v14 + 72) = v15;
    *(_OWORD *)(v14 + 81) = *(_OWORD *)((char *)v30 + 9);
    *(unsigned char *)(v14 + 97) = a3 & 1;
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v7;
    *(void *)(v17 + 24) = v8;
    *(void *)(v17 + 32) = v9;
    *(void *)(v17 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v10;
    long long v18 = v30[0];
    *(_OWORD *)(v17 + 48) = v29;
    *(_OWORD *)(v17 + 64) = v18;
    *(_OWORD *)(v17 + 73) = *(_OWORD *)((char *)v30 + 9);
    *(void *)(v17 + 96) = v16;
    *(void *)(v17 + 104) = sub_228B3D920;
    *(void *)(v17 + 112) = v14;
    uint64_t v24 = sub_228B3D980;
    uint64_t v25 = v17;
    uint64_t v20 = MEMORY[0x263EF8330];
    uint64_t v21 = 1107296256;
    char v22 = sub_228B005F8;
    char v23 = &block_descriptor_136;
    char v19 = _Block_copy(&v20);
    sub_228B3D998((uint64_t)v26, (void (*)(void, void, void, void, void, void))sub_228B09764);
    sub_228B3D998((uint64_t)v26, (void (*)(void, void, void, void, void, void))sub_228B09764);
    swift_retain();
    swift_release();
    objc_msgSend(a2, sel__updateFramingUsingSetRegionBlock_, v19);
    _Block_release(v19);
    swift_release();
    return sub_228B3D998((uint64_t)v26, (void (*)(void, void, void, void, void, void))sub_228B09710);
  }
  return result;
}

void sub_228B2D4B8(uint64_t a1, double *a2, char a3)
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x22A6A7CA0](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    sub_228B096B4((uint64_t)a2, (uint64_t)v29);
    sub_228B096B4((uint64_t)v29, (uint64_t)&v30);
    unint64_t v8 = v30;
    switch(v30 >> 61)
    {
      case 0uLL:
        v30 &= 0x1FFFFFFFFFFFFFFFuLL;
        objc_msgSend(v7, sel_setRegion_animated_, a3 & 1, sub_228B66604(*(double *)(v30 + 16), *(double *)(v30 + 24), *(double *)(v30 + 32), *(double *)(v30 + 40)));
        break;
      case 1uLL:
        v30 &= 0x1FFFFFFFFFFFFFFFuLL;
        objc_msgSend(v7, sel_setVisibleMapRect_edgePadding_animated_, a3 & 1, *(double *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10), *(double *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x18), *(double *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x20), *(double *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x28), a2[1], a2[2], a2[3], a2[4]);
        break;
      case 2uLL:
        v30 &= 0x1FFFFFFFFFFFFFFFuLL;
        uint64_t v9 = *(unsigned __int8 *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        id v10 = *(id *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        objc_msgSend(v7, sel_frame);
        double v12 = v11;
        double v14 = v13;
        long long v15 = self;
        id v16 = objc_msgSend(v15, sel_cameraLookingAtMapItem_forViewSize_allowPitch_, v10, v9, v12, v14);
        objc_msgSend(v16, sel_centerCoordinate);
        double v18 = v17;
        double v20 = v19;
        objc_msgSend(v16, sel_centerCoordinateDistance);
        double v22 = v21;
        objc_msgSend(v16, sel_heading);
        double v24 = v23;
        objc_msgSend(v16, sel_pitch);
        double v26 = v25;

        id v27 = objc_msgSend(v15, sel_cameraLookingAtCenterCoordinate_fromDistance_pitch_heading_, v18, v20, v22, v26, v24);
        objc_msgSend(v7, sel_setCamera_animated_, v27, a3 & 1);

        break;
      case 3uLL:
        v30 &= 0x1FFFFFFFFFFFFFFFuLL;
        id v28 = objc_msgSend(self, sel_cameraLookingAtCenterCoordinate_fromDistance_pitch_heading_, *(double *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10), *(double *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x18), *(double *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x20), *(double *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x30), *(double *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x28));
        objc_msgSend(v7, sel_setCamera_animated_, v28, a3 & 1);

        break;
      default:
        break;
    }
  }
}

void sub_228B2D76C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v6 = a2 + 16;
    swift_beginAccess();
    uint64_t v7 = MEMORY[0x22A6A7CA0](v6);
    if (v7)
    {
      unint64_t v8 = (void *)v7;
      aBlock[4] = a3;
      aBlock[5] = a4;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_228B005F8;
      aBlock[3] = &block_descriptor_139;
      uint64_t v9 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v8, sel__performActionAsIfGoingToDefaultLocation_, v9);
      _Block_release(v9);
    }
  }
  else
  {
    a3();
  }
}

void sub_228B2D864(void *a1)
{
  uint64_t v3 = (void *)((char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x208));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  unint64_t v6 = v3[2];
  sub_228B3D3C0(*v3, v5, v6);
  if (v5)
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F68);
    MEMORY[0x22A6A6930](&v9, v7);
    sub_228B3D40C(v4, v5, v6);
    unint64_t v8 = v9;
    sub_228B2D1DC(v9, a1, 0);
    sub_228B05A34(v8);
  }
}

uint64_t sub_228B2D934(void *a1, uint64_t *a2, int a3, int a4, int a5)
{
  unint64_t v6 = v5;
  int v69 = a5;
  int v65 = a4;
  int v63 = a3;
  uint64_t v70 = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268292FF0);
  MEMORY[0x270FA5388](v8 - 8);
  id v10 = &v62[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)&v67.f64[0] = type metadata accessor for KeyframeAnimationState();
  v66.f64[0] = *(float64_t *)(*(void *)&v67.f64[0] - 8);
  MEMORY[0x270FA5388](*(void *)&v67.f64[0]);
  uint64_t v64 = &v62[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F78);
  MEMORY[0x270FA5388](v12 - 8);
  double v14 = &v62[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(qword_268292EA0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v68 = &v62[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = a2[1];
  unint64_t v19 = a2[2];
  uint64_t v72 = *a2;
  double v73 = *(double *)&v19;
  double v20 = (void *)((char *)v6 + *(void *)((*MEMORY[0x263F8EED0] & *v6) + 0x208));
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  unint64_t v23 = *((unint64_t *)v20 + 2);
  sub_228B3D3C0(*v20, v21, v23);
  if (v21)
  {
    v74.i64[0] = v22;
    v74.i64[1] = v21;
    double v75 = *(double *)&v23;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F68);
    MEMORY[0x22A6A6930](v77, v24);
    sub_228B3D40C(v22, v21, v23);
    unint64_t v25 = v77[0];
  }
  else
  {
    unint64_t v25 = 0xF000000000000007;
  }
  unint64_t v71 = v25;
  uint64_t v26 = v72;
  swift_retain();
  swift_retain();
  unint64_t v27 = *(void *)&v73;
  sub_228B0596C(*(unint64_t *)&v73);
  id v28 = (void *)((char *)v6 + *(void *)((*MEMORY[0x263F8EED0] & *v6) + 0x208));
  uint64_t v29 = *v28;
  uint64_t v30 = v28[1];
  unint64_t v31 = v28[2];
  *id v28 = v26;
  v28[1] = v18;
  _OWORD v28[2] = v27;
  sub_228B3D40C(v29, v30, v31);
  sub_228B2CE38((uint64_t)v14);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    double v32 = &qword_268292F78;
    uint64_t v33 = (uint64_t)v14;
LABEL_8:
    sub_228AC1A50(v33, v32);
    uint64_t v36 = v70;
    unint64_t v35 = v71;
    *(double *)&unint64_t v37 = v73;
    goto LABEL_16;
  }
  uint64_t v34 = v68;
  sub_228ACD8BC((uint64_t)v14, (uint64_t)v68, qword_268292EA0);
  MEMORY[0x22A6A6930](v15);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, void))(*(void *)&v66.f64[0] + 48))(v10, 1, *(void *)&v67.f64[0]) == 1)
  {
    sub_228AC1A50((uint64_t)v34, qword_268292EA0);
    double v32 = (uint64_t *)&unk_268292FF0;
    uint64_t v33 = (uint64_t)v10;
    goto LABEL_8;
  }
  id v38 = v64;
  sub_228B4D404((uint64_t)v10, (uint64_t)v64, (uint64_t (*)(void))type metadata accessor for KeyframeAnimationState);
  v74.i64[0] = v26;
  v74.i64[1] = v18;
  *(double *)&unint64_t v37 = v73;
  double v75 = v73;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F68);
  MEMORY[0x22A6A6930](v77, v39);
  unint64_t v40 = v77[0] & 0xE000000000000000;
  if ((v77[0] & 0xE000000000000000) == 0x6000000000000000)
  {
    double v41 = *(double *)((v77[0] & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
    int8x16_t v42 = vextq_s8(*(int8x16_t *)((v77[0] & 0x1FFFFFFFFFFFFFFFLL) + 0x10), *(int8x16_t *)((v77[0] & 0x1FFFFFFFFFFFFFFFLL) + 0x10), 8uLL);
    float64x2_t v66 = *(float64x2_t *)((v77[0] & 0x1FFFFFFFFFFFFFFFLL) + 0x28);
    float64x2_t v67 = (float64x2_t)v42;
  }
  else
  {
    float64x2_t v66 = 0u;
    float64x2_t v67 = 0u;
    double v41 = 0.0;
  }
  uint64_t v36 = v70;
  sub_228B05A34(v77[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
  sub_228BAC8A8();
  if (v40 == 0x6000000000000000
    && (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v67, (float64x2_t)vextq_s8(v74, v74, 8uLL)), (int32x4_t)vceqq_f64(v66, v76))), 0xFuLL))) & 1) != 0)
  {
    unint64_t v35 = v71;
    if (v41 == v75)
    {
      sub_228B093A0(v71);
      sub_228B3D868((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for KeyframeAnimationState);
      return sub_228AC1A50((uint64_t)v68, qword_268292EA0);
    }
  }
  else
  {
    unint64_t v35 = v71;
  }
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v6;
  *(void *)(v43 + 24) = v36;
  uint64_t v44 = v6;
  id v45 = v36;
  sub_228BAC618();
  swift_release();
  sub_228B3D868((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for KeyframeAnimationState);
  sub_228AC1A50((uint64_t)v68, qword_268292EA0);
LABEL_16:
  v74.i64[0] = v26;
  v74.i64[1] = v18;
  double v75 = *(double *)&v37;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F68);
  MEMORY[0x22A6A6930](v77);
  unint64_t v47 = v77[0];
  unint64_t v48 = v35 & 0xF000000000000007;
  if (*((unsigned char *)v6 + *(void *)((*MEMORY[0x263F8EED0] & *v6) + 0x210)) == 1 && v48 != 0xF000000000000007)
  {
    sub_228B0596C(v35);
    char v49 = sub_228B88A98(v35, (double *)0xA000000000000008);
    sub_228B093A0(v35);
    if ((v49 & 1) != 0 && (sub_228B88A98(v47, (double *)0xA000000000000008) & 1) == 0) {
      objc_msgSend(v36, sel__clearGesturesAndAnimations);
    }
  }
  v74.i64[0] = v72;
  v74.i64[1] = v18;
  double v75 = *(double *)&v37;
  MEMORY[0x22A6A6930](v77, v46);
  unint64_t v50 = v77[0];
  sub_228B05A34(v77[0]);
  char v51 = v69;
  if (v50 >> 61 != 4)
  {
    objc_msgSend(v36, sel_setUserTrackingMode_animated_, 0, v69 & 1);
    objc_msgSend(v36, sel_setShowsUserLocation_, v65 & 1);
  }
  if ((v47 >> 61) < 4)
  {
    if (v48 == 0xF000000000000007
      || (sub_228B3D7EC(v35),
          sub_228B0596C(v47),
          char v52 = sub_228B88A98(v35, (double *)v47),
          sub_228B05A34(v47),
          sub_228B093A0(v35),
          (v52 & 1) == 0))
    {
      sub_228B2D1DC(v47, v36, v51 & 1);
    }
    sub_228B093A0(v35);
    return sub_228B05A34(v47);
  }
  if (v47 >> 61 == 4)
  {
    int v54 = *(unsigned __int8 *)((v47 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v55 = *(double **)((v47 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
    sub_228B0596C((unint64_t)v55);
    if ((objc_msgSend(v36, sel_hasUserLocation) & 1) == 0)
    {
      unint64_t v56 = 0xF000000000000007;
      if (v48 != 0xF000000000000007 && (v71 & 0xE000000000000000) == 0x8000000000000000)
      {
        unint64_t v56 = *(void *)((v71 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        sub_228B0596C(v56);
      }
      unint64_t v57 = v56 & 0xF000000000000007;
      if (v55 == (double *)0xA000000000000000)
      {
        sub_228B0596C(0xA000000000000000);
        sub_228B0596C(0xA000000000000000);
        if (v57 == 0xF000000000000007
          || (sub_228B3D7EC(v56),
              char v60 = sub_228B88A98(v56, (double *)0xA000000000000000),
              sub_228B093A0(v56),
              (v60 & 1) == 0)
          || (v63 & 1) != 0)
        {
          sub_228B2D1DC(v47, v36, v51 & 1);
        }
        sub_228B093A0(v56);
      }
      else
      {
        sub_228B0596C((unint64_t)v55);
        if (v57 == 0xF000000000000007
          || (sub_228B3D7EC(v56), char v59 = sub_228B88A98(v56, v55), sub_228B093A0(v56), (v59 & 1) == 0))
        {
          sub_228B2D1DC(v47, v36, v51 & 1);
        }
        sub_228B093A0(v56);
        sub_228B05A34((unint64_t)v55);
      }
      unint64_t v35 = v71;
    }
    if (v54) {
      uint64_t v61 = 2;
    }
    else {
      uint64_t v61 = 1;
    }
    objc_msgSend(v36, sel_setUserTrackingMode_animated_, v61, v51 & 1);
    sub_228B093A0(v35);
    sub_228B05A34((unint64_t)v55);
    return sub_228B05A34(v47);
  }
  if (v47 == 0xA000000000000000)
  {
    if (v48 == 0xF000000000000007
      || (sub_228B0596C(v35),
          char v58 = sub_228B88A98(v35, (double *)0xA000000000000000),
          sub_228B093A0(v35),
          (v58 & 1) == 0)
      || (v63 & 1) != 0)
    {
      sub_228B2D1DC(0xA000000000000000, v36, v51 & 1);
    }
  }
  return sub_228B093A0(v35);
}

uint64_t sub_228B2E1E0(void *a1, uint64_t a2, int a3)
{
  LODWORD(v43) = a3;
  uint64_t v46 = a1;
  long long v5 = *(_OWORD *)((*MEMORY[0x263F8EED0] & *v3) + 0x1E8);
  long long v50 = *(_OWORD *)((*MEMORY[0x263F8EED0] & *v3) + 0x1D8);
  long long v51 = v5;
  uint64_t v6 = type metadata accessor for MapSelectionManagerBox();
  uint64_t v48 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = &v38[-v7];
  uint64_t v9 = sub_228BAD218();
  uint64_t v10 = sub_228BAD718();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  double v14 = &v38[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = &v38[-v16];
  uint64_t v18 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v15);
  double v20 = &v38[-v19];
  uint64_t v21 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v47 = a2;
  uint64_t v49 = v22;
  uint64_t v44 = v21;
  uint64_t v45 = v11 + 16;
  v21(v17, a2, v22);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v9) == 1)
  {
    unint64_t v23 = *(void (**)(unsigned char *, uint64_t))(v11 + 8);
    uint64_t v24 = v49;
    v23(v17, v49);
    unint64_t v25 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v25(v14, 1, 1, v9);
    int v26 = v43 & 1;
    unint64_t v27 = v46;
    sub_228B2E710(v46, (uint64_t)v14, v26);
    v23(v14, v24);
    v25(v14, 1, 1, v9);
    sub_228B3223C(v27, (uint64_t)v14, v26);
    v23(v14, v24);
  }
  else
  {
    int8x16_t v42 = v3;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 32))(v20, v17, v9);
    MEMORY[0x22A6A6930](v9);
    char v28 = sub_228B8B228(v6);
    uint64_t v29 = v48 + 8;
    unint64_t v40 = *(void (**)(unsigned char *, uint64_t))(v48 + 8);
    v40(v8, v6);
    uint64_t v48 = v29;
    if (v28)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v14, v20, v9);
      uint64_t v30 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
      unint64_t v31 = v14;
      uint64_t v32 = 0;
    }
    else
    {
      uint64_t v30 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
      unint64_t v31 = v14;
      uint64_t v32 = 1;
    }
    double v41 = v30;
    v30(v31, v32, 1, v9);
    uint64_t v33 = v46;
    int v39 = v43 & 1;
    sub_228B3223C(v46, (uint64_t)v14, v39);
    uint64_t v43 = *(void (**)(unsigned char *, uint64_t))(v11 + 8);
    v43(v14, v49);
    MEMORY[0x22A6A6930](v9);
    char v34 = sub_228B8B088(v6);
    v40(v8, v6);
    if (v34)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v14, v20, v9);
      unint64_t v35 = v14;
      uint64_t v36 = 0;
    }
    else
    {
      unint64_t v35 = v14;
      uint64_t v36 = 1;
    }
    v41(v35, v36, 1, v9);
    sub_228B2E710(v33, (uint64_t)v14, v39);
    v43(v14, v49);
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v20, v9);
  }
  v44(v14, v47, v49);
  return sub_228B2CBFC((uint64_t)v14);
}

uint64_t sub_228B2E710(void *a1, uint64_t a2, int a3)
{
  int v115 = a3;
  uint64_t v135 = a2;
  id v120 = a1;
  uint64_t v4 = (void *)(*MEMORY[0x263F8EED0] & *v3);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292700);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v111 = (uint64_t)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292790);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v112 = (uint64_t *)((char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292750);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v113 = (uint64_t *)((char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = v4[59];
  uint64_t v137 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v118 = (char *)&v110 - v13;
  uint64_t v14 = v4[60];
  uint64_t v15 = v4[61];
  uint64_t v16 = v4[62];
  uint64_t v138 = v12;
  uint64_t v139 = v14;
  uint64_t v114 = v14;
  uint64_t v117 = v15;
  uint64_t v140 = v15;
  uint64_t v141 = v16;
  uint64_t v116 = v16;
  uint64_t v17 = (void *)type metadata accessor for MapSelectionManagerBox();
  uint64_t v132 = *(v17 - 1);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v110 - v18;
  uint64_t v20 = sub_228BAD218();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v121 = (char *)&v110 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v123 = (char *)&v110 - v24;
  long long v124 = (void *)sub_228BAD718();
  uint64_t v133 = *(v124 - 1);
  uint64_t v25 = MEMORY[0x270FA5388](v124);
  uint64_t v127 = (char *)&v110 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v110 - v28;
  MEMORY[0x270FA5388](v27);
  unint64_t v31 = (char *)&v110 - v30;
  uint64_t v136 = sub_228BAD718();
  uint64_t v131 = *(void *)(v136 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v136);
  uint64_t v119 = (uint64_t)&v110 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v126 = (uint64_t)&v110 - v35;
  MEMORY[0x270FA5388](v34);
  unint64_t v37 = (char *)&v110 - v36;
  uint64_t v122 = v3;
  sub_228B2CAF8((uint64_t)v31);
  uint64_t v134 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v38 = v134(v31, 1, v20);
  uint64_t v129 = v19;
  uint64_t v130 = v21;
  uint64_t v128 = v17;
  if (v38)
  {
    uint64_t v39 = v133;
    unint64_t v40 = v124;
    uint64_t v125 = *(void (**)(char *, void *))(v133 + 8);
    v125(v31, v124);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v137 + 56))(v37, 1, 1, v12);
    LODWORD(v123) = 0;
    uint64_t v41 = v39;
  }
  else
  {
    int8x16_t v42 = v123;
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v123, v31, v20);
    uint64_t v43 = v31;
    uint64_t v44 = v124;
    uint64_t v125 = *(void (**)(char *, void *))(v133 + 8);
    v125(v43, v124);
    MEMORY[0x22A6A6930](v20);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v42, v20);
    sub_228B8A570(v17, (uint64_t)v37);
    (*(void (**)(char *, void *))(v132 + 8))(v19, v17);
    LODWORD(v123) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v137 + 48))(v37, 1, v12) != 1;
    unint64_t v40 = v44;
    uint64_t v41 = v133;
  }
  uint64_t v131 = *(void *)(v131 + 8);
  ((void (*)(char *, uint64_t))v131)(v37, v136);
  long long v124 = *(void **)(v41 + 16);
  ((void (*)(char *, uint64_t, void *))v124)(v29, v135, v40);
  if (v134(v29, 1, v20) == 1)
  {
    v125(v29, v40);
    uint64_t v45 = v126;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v137 + 56))(v126, 1, 1, v12);
    uint64_t v46 = v128;
    uint64_t v47 = v132;
  }
  else
  {
    uint64_t v48 = v40;
    uint64_t v49 = v129;
    MEMORY[0x22A6A6930](v20);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v29, v20);
    uint64_t v45 = v126;
    uint64_t v46 = v128;
    sub_228B8A570(v128, v126);
    uint64_t v47 = v132;
    long long v50 = v49;
    unint64_t v40 = v48;
    (*(void (**)(char *, void *))(v132 + 8))(v50, v46);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48))(v45, 1, v12) != 1)
    {
      ((void (*)(uint64_t, uint64_t))v131)(v45, v136);
      goto LABEL_10;
    }
  }
  ((void (*)(uint64_t, uint64_t))v131)(v45, v136);
  if (v123) {
    *((unsigned char *)v122 + *(void *)((*MEMORY[0x263F8EED0] & *v122) + 0x220)) = 1;
  }
LABEL_10:
  long long v51 = v127;
  ((void (*)(char *, uint64_t, void *))v124)(v127, v135, v40);
  if (v134(v51, 1, v20) == 1) {
    return ((uint64_t (*)(char *, void *))v125)(v51, v40);
  }
  uint64_t v135 = v12;
  uint64_t v53 = v130;
  int v54 = v121;
  (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v121, v51, v20);
  uint64_t v55 = v129;
  MEMORY[0x22A6A6930](v20);
  char v56 = sub_228B8B088((uint64_t)v46);
  unint64_t v57 = *(void (**)(char *, void *))(v47 + 8);
  v57(v55, v46);
  if ((v56 & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v54, v20);
  }
  uint64_t v134 = (uint64_t (*)(char *, uint64_t, uint64_t))v20;
  MEMORY[0x22A6A6930](v20);
  uint64_t v58 = v119;
  sub_228B8A570(v46, v119);
  uint64_t v59 = v58;
  v57(v55, v46);
  uint64_t v60 = v137;
  uint64_t v61 = v135;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48))(v59, 1, v135) != 1)
  {
    uint64_t v70 = v118;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v118, v59, v61);
    uint64_t v71 = v60;
    id v72 = objc_msgSend(v120, sel_selectedAnnotations);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
    unint64_t v73 = sub_228BAD4A8();

    MEMORY[0x270FA5388](v74);
    double v75 = v122;
    *(&v110 - 2) = (uint64_t)v122;
    *(&v110 - 1) = (uint64_t)v70;
    LOBYTE(v72) = sub_228B311E4(sub_228B3D63C, (uint64_t)(&v110 - 4), v73);
    uint64_t v76 = swift_bridgeObjectRelease();
    if (v72)
    {
      (*(void (**)(char *, uint64_t (*)(char *, uint64_t, uint64_t)))(v53 + 8))(v54, v134);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v70, v61);
LABEL_52:
      *((unsigned char *)v75 + *(void *)((*MEMORY[0x263F8EED0] & *v75) + 0x220)) = 0;
      return result;
    }
    if (*((unsigned char *)v75 + *(void *)((*MEMORY[0x263F8EED0] & *v75) + 0x220)))
    {
      (*(void (**)(char *, uint64_t (*)(char *, uint64_t, uint64_t)))(v53 + 8))(v54, v134);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v137 + 8))(v118, v135);
      goto LABEL_52;
    }
    int v79 = (char *)v75 + qword_2682928D8;
    uint64_t v80 = *(void *)((char *)v75 + qword_2682928D8 + 16);
    MEMORY[0x270FA5388](v76);
    uint64_t v81 = v114;
    *(&v110 - 6) = v135;
    *(&v110 - 5) = v81;
    uint64_t v82 = v116;
    *(&v110 - 4) = v117;
    *(&v110 - 3) = v82;
    uint64_t v83 = v118;
    *(&v110 - 2) = (uint64_t)v118;
    swift_bridgeObjectRetain();
    uint64_t v84 = v113;
    sub_228B2FB7C((uint64_t (*)(char *))sub_228B3D65C, v80, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel, type metadata accessor for MarkerAnnotationViewModel, (uint64_t)v113);
    swift_bridgeObjectRelease();
    uint64_t v85 = type metadata accessor for MarkerAnnotationViewModel(0);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v85 - 8) + 48))(v84, 1, v85) == 1)
    {
      uint64_t v86 = sub_228AC1A50((uint64_t)v84, &qword_268292750);
    }
    else
    {
      uint64_t v87 = *v84;
      swift_bridgeObjectRetain();
      sub_228B3D868((uint64_t)v84, type metadata accessor for MarkerAnnotationViewModel);
      uint64_t v88 = *((void *)v79 + 3);
      if (*(void *)(v88 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v89 = sub_228AD1964(v87);
        if (v90) {
          goto LABEL_44;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v86 = swift_bridgeObjectRelease();
    }
    uint64_t v91 = (char *)v75 + qword_2682928D0;
    uint64_t v92 = *(void *)((char *)v75 + qword_2682928D0 + 16);
    MEMORY[0x270FA5388](v86);
    *(&v110 - 6) = v135;
    *(&v110 - 5) = v81;
    uint64_t v93 = v116;
    *(&v110 - 4) = v117;
    *(&v110 - 3) = v93;
    *(&v110 - 2) = (uint64_t)v83;
    swift_bridgeObjectRetain();
    int v94 = v112;
    sub_228B2FB7C((uint64_t (*)(char *))sub_228B3D68C, v92, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel, type metadata accessor for CustomAnnotationViewModel, (uint64_t)v112);
    swift_bridgeObjectRelease();
    uint64_t v95 = type metadata accessor for CustomAnnotationViewModel(0);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v95 - 8) + 48))(v94, 1, v95) == 1)
    {
      uint64_t v96 = sub_228AC1A50((uint64_t)v94, &qword_268292790);
LABEL_48:
      uint64_t v103 = *(void *)((char *)v75 + qword_2682928E8 + 16);
      MEMORY[0x270FA5388](v96);
      uint64_t v104 = v135;
      *(&v110 - 6) = v135;
      *(&v110 - 5) = v81;
      uint64_t v105 = v116;
      *(&v110 - 4) = v117;
      *(&v110 - 3) = v105;
      *(&v110 - 2) = (uint64_t)v83;
      swift_bridgeObjectRetain();
      uint64_t v106 = v111;
      sub_228B2FB7C((uint64_t (*)(char *))sub_228B3D6BC, v103, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel, type metadata accessor for UserAnnotationViewModel, v111);
      swift_bridgeObjectRelease();
      uint64_t v107 = type metadata accessor for UserAnnotationViewModel(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 48))(v106, 1, v107) == 1)
      {
        (*(void (**)(char *, uint64_t (*)(char *, uint64_t, uint64_t)))(v53 + 8))(v54, v134);
        (*(void (**)(char *, uint64_t))(v137 + 8))(v83, v104);
        uint64_t result = sub_228AC1A50(v106, &qword_268292700);
        goto LABEL_52;
      }
      sub_228AC1A50(v106, &qword_268292700);
      uint64_t v108 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v109 = swift_allocObject();
      *(void *)(v109 + 16) = v108;
      *(unsigned char *)(v109 + 24) = v115 & 1;
      swift_retain();
      sub_228BAC618();
      swift_release();
      (*(void (**)(char *, uint64_t (*)(char *, uint64_t, uint64_t)))(v53 + 8))(v54, v134);
      (*(void (**)(char *, uint64_t))(v137 + 8))(v83, v104);
LABEL_51:
      uint64_t result = swift_release();
      goto LABEL_52;
    }
    uint64_t v97 = *v94;
    swift_bridgeObjectRetain();
    sub_228B3D868((uint64_t)v94, type metadata accessor for CustomAnnotationViewModel);
    uint64_t v88 = *((void *)v91 + 3);
    if (*(void *)(v88 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v89 = sub_228AD1964(v97);
      if (v98)
      {
LABEL_44:
        id v99 = *(id *)(*(void *)(v88 + 56) + 8 * v89);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v100 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v101 = swift_allocObject();
        *(void *)(v101 + 16) = v100;
        *(void *)(v101 + 24) = v99;
        *(unsigned char *)(v101 + 32) = v115 & 1;
        id v102 = v99;
        swift_retain();
        sub_228BAC618();

        swift_release();
        (*(void (**)(char *, uint64_t (*)(char *, uint64_t, uint64_t)))(v53 + 8))(v54, v134);
        (*(void (**)(char *, uint64_t))(v137 + 8))(v83, v135);
        goto LABEL_51;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v96 = swift_bridgeObjectRelease();
    goto LABEL_48;
  }
  ((void (*)(uint64_t, uint64_t))v131)(v59, v136);
  id v62 = objc_msgSend(v120, sel_selectedAnnotations);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
  unint64_t v63 = sub_228BAD4A8();

  if (v63 >> 62) {
    goto LABEL_54;
  }
  uint64_t v64 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v64; uint64_t v64 = sub_228BAD958())
  {
    uint64_t v65 = 4;
    while (1)
    {
      uint64_t v66 = v65 - 4;
      if ((v63 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v67 = MEMORY[0x22A6A6FA0](v65 - 4, v63);
      BOOL v68 = __OFADD__(v66, 1);
      uint64_t v69 = v65 - 3;
      if (v68) {
        goto LABEL_53;
      }
LABEL_22:
      self;
      if (!swift_dynamicCastObjCClass())
      {
        swift_bridgeObjectRelease_n();
        uint64_t v77 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v78 = swift_allocObject();
        *(void *)(v78 + 16) = v77;
        *(void *)(v78 + 24) = v67;
        *(unsigned char *)(v78 + 32) = v115 & 1;
        swift_retain();
        swift_unknownObjectRetain();
        sub_228BAC618();
        swift_unknownObjectRelease();
        swift_release();
        (*(void (**)(char *, uint64_t (*)(char *, uint64_t, uint64_t)))(v53 + 8))(v121, v134);
        uint64_t result = swift_release();
        goto LABEL_31;
      }
      swift_unknownObjectRelease();
      ++v65;
      if (v69 == v64) {
        goto LABEL_24;
      }
    }
    uint64_t v67 = *(void *)(v63 + 8 * v65);
    swift_unknownObjectRetain();
    BOOL v68 = __OFADD__(v66, 1);
    uint64_t v69 = v65 - 3;
    if (!v68) {
      goto LABEL_22;
    }
LABEL_53:
    __break(1u);
LABEL_54:
    swift_bridgeObjectRetain();
  }
LABEL_24:
  swift_bridgeObjectRelease_n();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t (*)(char *, uint64_t, uint64_t)))(v53 + 8))(v121, v134);
LABEL_31:
  *((unsigned char *)v122 + *(void *)((*MEMORY[0x263F8EED0] & *v122) + 0x220)) = 0;
  return result;
}

uint64_t sub_228B2FB7C@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(void)@<X3>, uint64_t (*a4)(void)@<X4>, uint64_t (*a5)(void)@<X5>, uint64_t (*a6)(void)@<X6>, uint64_t a7@<X8>)
{
  uint64_t v35 = a6;
  uint64_t v36 = a5;
  uint64_t v32 = a7;
  uint64_t v31 = a3(0);
  uint64_t v37 = *(void *)(v31 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v31);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v31 - v14;
  uint64_t v16 = *(void *)(a2 + 64);
  uint64_t v33 = a2 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v34 = (unint64_t)(v17 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v21 = 0;
  if (!v19) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v22 | (v21 << 6); ; unint64_t i = __clz(__rbit64(v25)) + (v21 << 6))
  {
    sub_228B4D098(*(void *)(a2 + 56) + *(void *)(v37 + 72) * i, (uint64_t)v15, a4);
    sub_228B4D404((uint64_t)v15, (uint64_t)v13, v36);
    char v27 = a1(v13);
    if (v7)
    {
      sub_228B3D868((uint64_t)v13, v35);
      return swift_release();
    }
    if (v27)
    {
      swift_release();
      uint64_t v28 = v32;
      sub_228B4D404((uint64_t)v13, v32, v36);
      uint64_t v29 = 0;
      uint64_t v30 = v31;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v28, v29, 1, v30);
    }
    uint64_t result = sub_228B3D868((uint64_t)v13, v35);
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v21++, 1)) {
      break;
    }
    if (v21 >= v34) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v33 + 8 * v21);
    if (!v25)
    {
      int64_t v26 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_28;
      }
      unint64_t v25 = *(void *)(v33 + 8 * v26);
      if (v25) {
        goto LABEL_16;
      }
      int64_t v26 = v21 + 2;
      if (v21 + 2 >= v34) {
        goto LABEL_28;
      }
      unint64_t v25 = *(void *)(v33 + 8 * v26);
      if (v25) {
        goto LABEL_16;
      }
      int64_t v26 = v21 + 3;
      if (v21 + 3 >= v34) {
        goto LABEL_28;
      }
      unint64_t v25 = *(void *)(v33 + 8 * v26);
      if (v25)
      {
LABEL_16:
        int64_t v21 = v26;
        goto LABEL_17;
      }
      int64_t v26 = v21 + 4;
      if (v21 + 4 < v34)
      {
        unint64_t v25 = *(void *)(v33 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v21 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_31;
            }
            if (v21 >= v34) {
              goto LABEL_28;
            }
            unint64_t v25 = *(void *)(v33 + 8 * v21);
            ++v26;
            if (v25) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      uint64_t v30 = v31;
      uint64_t v28 = v32;
      swift_release();
      uint64_t v29 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v28, v29, 1, v30);
    }
LABEL_17:
    unint64_t v19 = (v25 - 1) & v25;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_228B2FE80(uint64_t *a1, void *a2, char *a3)
{
  uint64_t v166 = a3;
  uint64_t v165 = *MEMORY[0x263F8EED0] & *a2;
  uint64_t v5 = v165;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292700);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v153 = (uint64_t)&v144 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = type metadata accessor for UserAnnotationViewModel(0);
  uint64_t v151 = *(void *)(v152 - 8);
  MEMORY[0x270FA5388](v152);
  uint64_t v9 = (char *)&v144 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292790);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v159 = (uint64_t)&v144 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CustomAnnotationViewModel(0);
  uint64_t v157 = *(void *)(v12 - 8);
  uint64_t v158 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v164 = (uint64_t)&v144 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(*(void *)(v5 + 472) - 8);
  MEMORY[0x270FA5388](v13);
  unsigned int v149 = (char *)&v144 - v16;
  uint64_t v171 = v17;
  uint64_t v18 = sub_228BAD718();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v155 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v170 = (char *)&v144 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v156 = (char *)&v144 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v161 = (char *)&v144 - v24;
  uint64_t v172 = v18;
  uint64_t v169 = *(void *)(v18 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v145 = (char *)&v144 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v147 = (char *)&v144 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v150 = (char *)&v144 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v144 - v32;
  uint64_t v34 = MEMORY[0x270FA5388](v31);
  char v154 = (char *)&v144 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v163 = (char *)&v144 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v148 = (char *)&v144 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v160 = (char *)&v144 - v41;
  MEMORY[0x270FA5388](v40);
  uint64_t v162 = (char *)&v144 - v42;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292750);
  MEMORY[0x270FA5388](v43 - 8);
  uint64_t v45 = (char *)&v144 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for MarkerAnnotationViewModel(0);
  uint64_t v47 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v167 = (char *)&v144 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = *a1;
  type metadata accessor for MapBridgingMarker();
  uint64_t v50 = swift_dynamicCastClass();
  char v146 = v33;
  if (!v50)
  {
LABEL_10:
    type metadata accessor for MapBridgingCustomAnnotation();
    uint64_t v56 = swift_dynamicCastClass();
    unint64_t v57 = v170;
    if (!v56) {
      goto LABEL_25;
    }
    uint64_t v58 = *(void *)((char *)a2 + qword_2682928D0 + 16);
    if (*(void *)(v58 + 16))
    {
      uint64_t v59 = v56;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v60 = sub_228AD1B28(v59);
      uint64_t v62 = v157;
      if (v61)
      {
        uint64_t v63 = v159;
        sub_228B4D098(*(void *)(v58 + 56) + *(void *)(v157 + 72) * v60, v159, type metadata accessor for CustomAnnotationViewModel);
        uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56);
        uint64_t v65 = v63;
        uint64_t v66 = 0;
      }
      else
      {
        uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v157 + 56);
        uint64_t v63 = v159;
        uint64_t v65 = v159;
        uint64_t v66 = 1;
      }
      uint64_t v81 = v158;
      v64(v65, v66, 1, v158);
      swift_bridgeObjectRelease();
      uint64_t v80 = v63;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v62 = v157;
      uint64_t v79 = v158;
      uint64_t v80 = v159;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v157 + 56))(v159, 1, 1, v158);
      swift_unknownObjectRetain();
      uint64_t v81 = v79;
    }
    uint64_t v87 = (uint64_t)v163;
    uint64_t v86 = v164;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v80, 1, v81) == 1)
    {
      swift_unknownObjectRelease();
      sub_228AC1A50(v80, &qword_268292790);
      unint64_t v57 = v170;
LABEL_25:
      self;
      if (swift_dynamicCastObjCClass())
      {
        uint64_t v88 = v153;
        sub_228B1B608(*(void *)((char *)a2 + qword_2682928E8 + 16), v153);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v151 + 48))(v88, 1, v152) == 1)
        {
          sub_228AC1A50(v88, &qword_268292700);
          goto LABEL_38;
        }
        sub_228B4D404(v88, (uint64_t)v9, type metadata accessor for UserAnnotationViewModel);
        uint64_t v101 = (uint64_t)v150;
        uint64_t v102 = v171;
        uint64_t v165 = *(void *)(v165 + 488);
        sub_228B69708(v171, (uint64_t)v150);
        uint64_t v103 = v147;
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v147, v166, v102);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v103, 0, 1, v102);
        uint64_t v104 = v169;
        uint64_t v105 = *(int *)(TupleTypeMetadata2 + 48);
        uint64_t v167 = v9;
        uint64_t v106 = &v57[v105];
        uint64_t v107 = *(void (**)(char *, uint64_t, uint64_t))(v169 + 16);
        uint64_t v108 = v101;
        uint64_t v109 = v172;
        v107(v57, v108, v172);
        uint64_t v166 = v106;
        v107(v106, (uint64_t)v103, v109);
        uint64_t v110 = v15;
        uint64_t v111 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
        if (v111(v57, 1, v102) == 1)
        {
          uint64_t v112 = *(void (**)(char *, uint64_t))(v104 + 8);
          uint64_t v113 = v172;
          v112(v103, v172);
          v112(v150, v113);
          sub_228B3D868((uint64_t)v167, type metadata accessor for UserAnnotationViewModel);
          if (v111(v166, 1, v171) == 1)
          {
            v112(v170, v113);
            char v100 = 1;
            return v100 & 1;
          }
        }
        else
        {
          uint64_t v123 = v145;
          v107(v145, (uint64_t)v170, v172);
          long long v124 = v166;
          uint64_t v125 = v171;
          unsigned int v126 = v111(v166, 1, v171);
          uint64_t v127 = (uint64_t)v150;
          uint64_t v128 = v103;
          if (v126 != 1)
          {
            uint64_t v138 = v149;
            (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v149, v124, v125);
            uint64_t v139 = v123;
            char v100 = sub_228BAD3C8();
            uint64_t v140 = *(void (**)(char *, uint64_t))(v110 + 8);
            uint64_t v144 = v110 + 8;
            v140(v138, v125);
            uint64_t v141 = *(void (**)(char *, uint64_t))(v169 + 8);
            uint64_t v142 = v128;
            uint64_t v143 = v172;
            v141(v142, v172);
            v141((char *)v127, v143);
            sub_228B3D868((uint64_t)v167, type metadata accessor for UserAnnotationViewModel);
            v140(v139, v125);
            v141(v170, v143);
            return v100 & 1;
          }
          uint64_t v129 = v123;
          uint64_t v130 = *(void (**)(char *, uint64_t))(v169 + 8);
          uint64_t v131 = v128;
          uint64_t v132 = v172;
          v130(v131, v172);
          v130((char *)v127, v132);
          sub_228B3D868((uint64_t)v167, type metadata accessor for UserAnnotationViewModel);
          (*(void (**)(char *, uint64_t))(v15 + 8))(v129, v125);
        }
        (*(void (**)(char *, uint64_t))(v155 + 8))(v170, TupleTypeMetadata2);
        char v100 = 0;
        return v100 & 1;
      }
LABEL_38:
      char v100 = 0;
      return v100 & 1;
    }
    sub_228B4D404(v80, v86, type metadata accessor for CustomAnnotationViewModel);
    uint64_t v89 = v171;
    uint64_t v167 = *(char **)(v165 + 488);
    sub_228B69708(v171, v87);
    uint64_t v90 = v15;
    uint64_t v91 = v154;
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v154, v166, v89);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v91, 0, 1, v89);
    uint64_t v92 = v156;
    uint64_t v93 = &v156[*(int *)(TupleTypeMetadata2 + 48)];
    int v94 = *(void (**)(char *, uint64_t, uint64_t))(v169 + 16);
    uint64_t v95 = v87;
    uint64_t v96 = v172;
    v94(v156, v95, v172);
    uint64_t v170 = v93;
    v94(v93, (uint64_t)v91, v96);
    uint64_t v144 = v90;
    uint64_t v97 = v89;
    char v98 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48);
    if (v98(v92, 1, v97) == 1)
    {
      swift_unknownObjectRelease();
      id v99 = *(void (**)(char *, uint64_t))(v169 + 8);
      v99(v91, v96);
      v99(v163, v96);
      sub_228B3D868(v164, type metadata accessor for CustomAnnotationViewModel);
      if (v98(v170, 1, v171) == 1)
      {
        v99(v156, v96);
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v114 = v146;
      v94(v146, (uint64_t)v92, v96);
      int v115 = v170;
      if (v98(v170, 1, v171) != 1)
      {
        uint64_t v133 = v144;
        uint64_t v134 = v149;
        uint64_t v135 = v171;
        (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v149, v115, v171);
        char v100 = sub_228BAD3C8();
        swift_unknownObjectRelease();
        uint64_t v136 = *(void (**)(char *, uint64_t))(v133 + 8);
        v136(v134, v135);
        uint64_t v137 = *(void (**)(char *, uint64_t))(v169 + 8);
        v137(v154, v96);
        v137(v163, v96);
        sub_228B3D868(v164, type metadata accessor for CustomAnnotationViewModel);
        v136(v114, v135);
        v137(v92, v96);
        return v100 & 1;
      }
      swift_unknownObjectRelease();
      uint64_t v116 = *(void (**)(char *, uint64_t))(v169 + 8);
      v116(v154, v96);
      v116(v163, v96);
      sub_228B3D868(v164, type metadata accessor for CustomAnnotationViewModel);
      (*(void (**)(char *, uint64_t))(v144 + 8))(v114, v171);
    }
    (*(void (**)(char *, uint64_t))(v155 + 8))(v156, TupleTypeMetadata2);
    goto LABEL_38;
  }
  uint64_t v51 = *(void *)((char *)a2 + qword_2682928D8 + 16);
  if (*(void *)(v51 + 16))
  {
    uint64_t v52 = v50;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v53 = sub_228AD1AD4(v52);
    if (v54)
    {
      sub_228B4D098(*(void *)(v51 + 56) + *(void *)(v47 + 72) * v53, (uint64_t)v45, type metadata accessor for MarkerAnnotationViewModel);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v45, 0, 1, v46);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v45, 1, 1, v46);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v45, 1, 1, v46);
    swift_unknownObjectRetain();
  }
  uint64_t v55 = (uint64_t)v167;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46) == 1)
  {
    swift_unknownObjectRelease();
    sub_228AC1A50((uint64_t)v45, &qword_268292750);
    goto LABEL_10;
  }
  uint64_t v164 = v49;
  sub_228B4D404((uint64_t)v45, v55, type metadata accessor for MarkerAnnotationViewModel);
  uint64_t v67 = (uint64_t)v162;
  uint64_t v68 = v171;
  uint64_t v165 = *(void *)(v165 + 488);
  sub_228B69708(v171, (uint64_t)v162);
  uint64_t v144 = v15;
  uint64_t v69 = v160;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v160, v166, v68);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v69, 0, 1, v68);
  uint64_t v70 = v169;
  uint64_t v71 = v161;
  id v72 = &v161[*(int *)(TupleTypeMetadata2 + 48)];
  unint64_t v73 = *(void (**)(char *, uint64_t, uint64_t))(v169 + 16);
  uint64_t v74 = v172;
  v73(v161, v67, v172);
  uint64_t v170 = v72;
  v73(v72, (uint64_t)v69, v74);
  uint64_t v75 = v144;
  uint64_t v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v144 + 48);
  if (v76(v71, 1, v68) != 1)
  {
    uint64_t v82 = v148;
    uint64_t v83 = v172;
    v73(v148, (uint64_t)v71, v172);
    uint64_t v84 = v170;
    if (v76(v170, 1, v68) != 1)
    {
      uint64_t v118 = v75;
      uint64_t v119 = *(void (**)(char *, char *, uint64_t))(v75 + 32);
      id v120 = v149;
      v119(v149, v84, v68);
      char v100 = sub_228BAD3C8();
      swift_unknownObjectRelease();
      uint64_t v121 = *(void (**)(char *, uint64_t))(v118 + 8);
      v121(v120, v68);
      uint64_t v122 = *(void (**)(char *, uint64_t))(v169 + 8);
      v122(v160, v83);
      v122(v162, v83);
      sub_228B3D868((uint64_t)v167, type metadata accessor for MarkerAnnotationViewModel);
      v121(v82, v68);
      v122(v71, v83);
      return v100 & 1;
    }
    swift_unknownObjectRelease();
    uint64_t v85 = *(void (**)(char *, uint64_t))(v169 + 8);
    v85(v160, v83);
    v85(v162, v83);
    sub_228B3D868((uint64_t)v167, type metadata accessor for MarkerAnnotationViewModel);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v82, v68);
    goto LABEL_20;
  }
  swift_unknownObjectRelease();
  uint64_t v77 = *(void (**)(char *, uint64_t))(v70 + 8);
  uint64_t v78 = v172;
  v77(v69, v172);
  v77(v162, v78);
  sub_228B3D868((uint64_t)v167, type metadata accessor for MarkerAnnotationViewModel);
  if (v76(v170, 1, v68) != 1)
  {
LABEL_20:
    (*(void (**)(char *, uint64_t))(v155 + 8))(v161, TupleTypeMetadata2);
    goto LABEL_38;
  }
  v77(v161, v78);
LABEL_31:
  char v100 = 1;
  return v100 & 1;
}

uint64_t sub_228B311E4(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_228BAD958();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      uint64_t v6 = 4;
      do
      {
        uint64_t v7 = v6 - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          uint64_t v8 = MEMORY[0x22A6A6FA0](v6 - 4, a3);
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v7, 1)) {
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v8 = *(void *)(a3 + 8 * v6);
          swift_unknownObjectRetain();
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        uint64_t v15 = v8;
        char v10 = a1(&v15);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          return v12 & 1;
        }
        char v11 = v10;
        swift_unknownObjectRelease();
        if (v11)
        {
          swift_bridgeObjectRelease();
          char v12 = 1;
          return v12 & 1;
        }
        ++v6;
      }
      while (v9 != v5);
    }
  }
  swift_bridgeObjectRelease();
  char v12 = 0;
  return v12 & 1;
}

uint64_t sub_228B31330(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v50 = a5;
  uint64_t v51 = a2;
  uint64_t v6 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v42 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_228BAD718();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v43 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  char v12 = (char *)&v40 - v11;
  uint64_t v13 = *(void *)(v8 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v10);
  uint64_t v49 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v40 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v40 - v19;
  type metadata accessor for MarkerAnnotationViewModel(0);
  sub_228B69708(a3, (uint64_t)v20);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v18, v51, a3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, a3);
  uint64_t v44 = TupleTypeMetadata2;
  uint64_t v21 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v47 = v13;
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v22(v12, v20, v8);
  uint64_t v46 = v21;
  uint64_t v23 = v21;
  uint64_t v24 = v8;
  v22(v23, v18, v8);
  uint64_t v45 = v6;
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v51 = v12;
  uint64_t v48 = a3;
  if (v25(v12, 1, a3) != 1)
  {
    uint64_t v41 = v20;
    uint64_t v29 = v47;
    uint64_t v30 = v24;
    v22(v49, v51, v24);
    uint64_t v31 = v46;
    uint64_t v32 = v48;
    if (v25(v46, 1, v48) != 1)
    {
      uint64_t v34 = v45;
      uint64_t v35 = v42;
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v31, v32);
      uint64_t v36 = v49;
      char v28 = sub_228BAD3C8();
      uint64_t v37 = *(void (**)(char *, uint64_t))(v34 + 8);
      v37(v35, v32);
      uint64_t v38 = *(void (**)(char *, uint64_t))(v29 + 8);
      v38(v18, v30);
      v38(v41, v30);
      v37(v36, v32);
      v38(v51, v30);
      return v28 & 1;
    }
    uint64_t v26 = v51;
    uint64_t v33 = *(void (**)(char *, uint64_t))(v29 + 8);
    v33(v18, v30);
    v33(v41, v30);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v49, v32);
    goto LABEL_6;
  }
  uint64_t v26 = v51;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v47 + 8);
  v27(v18, v24);
  v27(v20, v24);
  if (v25(v46, 1, v48) != 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v44);
    char v28 = 0;
    return v28 & 1;
  }
  v27(v26, v24);
  char v28 = 1;
  return v28 & 1;
}

uint64_t sub_228B31804(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v50 = a5;
  uint64_t v51 = a2;
  uint64_t v6 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v42 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_228BAD718();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v43 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  char v12 = (char *)&v40 - v11;
  uint64_t v13 = *(void *)(v8 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v10);
  uint64_t v49 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v40 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v40 - v19;
  type metadata accessor for CustomAnnotationViewModel(0);
  sub_228B69708(a3, (uint64_t)v20);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v18, v51, a3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, a3);
  uint64_t v44 = TupleTypeMetadata2;
  uint64_t v21 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v47 = v13;
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v22(v12, v20, v8);
  uint64_t v46 = v21;
  uint64_t v23 = v21;
  uint64_t v24 = v8;
  v22(v23, v18, v8);
  uint64_t v45 = v6;
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v51 = v12;
  uint64_t v48 = a3;
  if (v25(v12, 1, a3) != 1)
  {
    uint64_t v41 = v20;
    uint64_t v29 = v47;
    uint64_t v30 = v24;
    v22(v49, v51, v24);
    uint64_t v31 = v46;
    uint64_t v32 = v48;
    if (v25(v46, 1, v48) != 1)
    {
      uint64_t v34 = v45;
      uint64_t v35 = v42;
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v31, v32);
      uint64_t v36 = v49;
      char v28 = sub_228BAD3C8();
      uint64_t v37 = *(void (**)(char *, uint64_t))(v34 + 8);
      v37(v35, v32);
      uint64_t v38 = *(void (**)(char *, uint64_t))(v29 + 8);
      v38(v18, v30);
      v38(v41, v30);
      v37(v36, v32);
      v38(v51, v30);
      return v28 & 1;
    }
    uint64_t v26 = v51;
    uint64_t v33 = *(void (**)(char *, uint64_t))(v29 + 8);
    v33(v18, v30);
    v33(v41, v30);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v49, v32);
    goto LABEL_6;
  }
  uint64_t v26 = v51;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v47 + 8);
  v27(v18, v24);
  v27(v20, v24);
  if (v25(v46, 1, v48) != 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v44);
    char v28 = 0;
    return v28 & 1;
  }
  v27(v26, v24);
  char v28 = 1;
  return v28 & 1;
}

uint64_t sub_228B31CD8(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v50 = a5;
  uint64_t v51 = a2;
  uint64_t v6 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v42 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_228BAD718();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v43 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  char v12 = (char *)&v40 - v11;
  uint64_t v13 = *(void *)(v8 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v10);
  uint64_t v49 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v40 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v40 - v19;
  type metadata accessor for UserAnnotationViewModel(0);
  sub_228B69708(a3, (uint64_t)v20);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v18, v51, a3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, a3);
  uint64_t v44 = TupleTypeMetadata2;
  uint64_t v21 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v47 = v13;
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v22(v12, v20, v8);
  uint64_t v46 = v21;
  uint64_t v23 = v21;
  uint64_t v24 = v8;
  v22(v23, v18, v8);
  uint64_t v45 = v6;
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v51 = v12;
  uint64_t v48 = a3;
  if (v25(v12, 1, a3) != 1)
  {
    uint64_t v41 = v20;
    uint64_t v29 = v47;
    uint64_t v30 = v24;
    v22(v49, v51, v24);
    uint64_t v31 = v46;
    uint64_t v32 = v48;
    if (v25(v46, 1, v48) != 1)
    {
      uint64_t v34 = v45;
      uint64_t v35 = v42;
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v31, v32);
      uint64_t v36 = v49;
      char v28 = sub_228BAD3C8();
      uint64_t v37 = *(void (**)(char *, uint64_t))(v34 + 8);
      v37(v35, v32);
      uint64_t v38 = *(void (**)(char *, uint64_t))(v29 + 8);
      v38(v18, v30);
      v38(v41, v30);
      v37(v36, v32);
      v38(v51, v30);
      return v28 & 1;
    }
    uint64_t v26 = v51;
    uint64_t v33 = *(void (**)(char *, uint64_t))(v29 + 8);
    v33(v18, v30);
    v33(v41, v30);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v49, v32);
    goto LABEL_6;
  }
  uint64_t v26 = v51;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v47 + 8);
  v27(v18, v24);
  v27(v20, v24);
  if (v25(v46, 1, v48) != 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v44);
    char v28 = 0;
    return v28 & 1;
  }
  v27(v26, v24);
  char v28 = 1;
  return v28 & 1;
}

void sub_228B321AC(uint64_t a1, char a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = (void *)MEMORY[0x22A6A7CA0](v3);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(v4, sel_userLocation);
    objc_msgSend(v5, sel_selectAnnotation_animated_, v6, a2 & 1);
  }
}

void sub_228B3223C(void *a1, uint64_t a2, int a3)
{
  int v73 = a3;
  uint64_t v85 = a2;
  id v81 = a1;
  long long v4 = *(_OWORD *)((*MEMORY[0x263F8EED0] & *v3) + 0x1E8);
  v86[0] = *(_OWORD *)((*MEMORY[0x263F8EED0] & *v3) + 0x1D8);
  v86[1] = v4;
  uint64_t v5 = type metadata accessor for MapSelectionManagerBox();
  uint64_t v82 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v71 - v6;
  uint64_t v83 = v8;
  uint64_t v9 = sub_228BAD218();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v74 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v71 - v13;
  uint64_t v15 = sub_228BAD718();
  uint64_t v16 = *(void **)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v77 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v71 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v71 - v22;
  uint64_t v75 = v3;
  sub_228B2CAF8((uint64_t)&v71 - v22);
  uint64_t v84 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v24 = v84(v23, 1, v9);
  uint64_t v78 = v7;
  uint64_t v79 = v9;
  uint64_t v80 = v10;
  if (v24)
  {
    uint64_t v25 = (void (*)(char *, uint64_t))v16[1];
    v25(v23, v15);
    int v76 = 0;
    uint64_t v26 = v16;
    uint64_t v27 = v15;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v23, v9);
    id v72 = (void (*)(char *, uint64_t))v16;
    char v28 = v23;
    uint64_t v29 = (void (*)(char *, uint64_t))v16[1];
    v29(v28, v15);
    MEMORY[0x22A6A6930](v9);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    uint64_t v30 = v83;
    sub_228B8AAC4(v83, v86);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v7, v30);
    uint64_t v27 = v15;
    if (*(void *)&v86[0])
    {

      int v76 = 1;
    }
    else
    {
      int v76 = 0;
    }
    uint64_t v26 = v72;
    uint64_t v25 = v29;
  }
  uint64_t v31 = (void (*)(char *, uint64_t, uint64_t))v26[2];
  v31(v21, v85, v27);
  uint64_t v32 = v79;
  if (v84(v21, 1, v79) == 1)
  {
    v25(v21, v27);
    uint64_t v33 = v32;
    uint64_t v35 = v82;
    uint64_t v34 = v83;
  }
  else
  {
    id v72 = v25;
    uint64_t v36 = v78;
    MEMORY[0x22A6A6930](v32);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v21, v32);
    uint64_t v34 = v83;
    sub_228B8AAC4(v83, v86);
    uint64_t v35 = v82;
    uint64_t v37 = v36;
    uint64_t v25 = v72;
    (*(void (**)(char *, uint64_t))(v82 + 8))(v37, v34);
    uint64_t v33 = v32;
    if (*(void *)&v86[0])
    {

      uint64_t v38 = v77;
      goto LABEL_13;
    }
  }
  uint64_t v38 = v77;
  if (v76) {
    *((unsigned char *)v75 + *(void *)((*MEMORY[0x263F8EED0] & *v75) + 0x220)) = 1;
  }
LABEL_13:
  v31(v38, v85, v27);
  if (v84(v38, 1, v33) == 1)
  {
    v25(v38, v27);
    id v39 = v81;
    goto LABEL_21;
  }
  uint64_t v40 = v80;
  uint64_t v41 = v74;
  (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v74, v38, v33);
  uint64_t v42 = v78;
  MEMORY[0x22A6A6930](v33);
  char v43 = sub_228B8B228(v34);
  uint64_t v44 = *(void (**)(char *, uint64_t))(v35 + 8);
  v44(v42, v34);
  id v39 = v81;
  if ((v43 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v33);
LABEL_21:
    objc_msgSend(v39, sel_setSelectableMapFeatures_, 0);
    id v50 = objc_msgSend(v39, sel_selectedAnnotations);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
    unint64_t v51 = sub_228BAD4A8();

    if (v51 >> 62) {
      goto LABEL_50;
    }
    uint64_t v52 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v52) {
      goto LABEL_31;
    }
    goto LABEL_23;
  }
  objc_msgSend(v81, sel_setSelectableMapFeatures_, 7);
  MEMORY[0x22A6A6930](v33);
  sub_228B8AAC4(v34, v86);
  v44(v42, v34);
  uint64_t v45 = *(void **)&v86[0];
  if (!*(void *)&v86[0])
  {
    id v60 = objc_msgSend(v39, sel_selectedAnnotations);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
    unint64_t v51 = sub_228BAD4A8();

    if (v51 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_228BAD958();
      if (v61) {
        goto LABEL_35;
      }
    }
    else
    {
      uint64_t v61 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v61)
      {
LABEL_35:
        uint64_t v62 = 4;
        do
        {
          uint64_t v63 = v62 - 4;
          if ((v51 & 0xC000000000000001) != 0)
          {
            uint64_t v64 = MEMORY[0x22A6A6FA0](v62 - 4, v51);
            BOOL v56 = __OFADD__(v63, 1);
            uint64_t v65 = v62 - 3;
            if (v56)
            {
LABEL_49:
              __break(1u);
LABEL_50:
              swift_bridgeObjectRetain();
              uint64_t v52 = sub_228BAD958();
              if (!v52)
              {
LABEL_31:
                swift_bridgeObjectRelease_n();
                return;
              }
LABEL_23:
              uint64_t v53 = 4;
              while (1)
              {
                uint64_t v54 = v53 - 4;
                if ((v51 & 0xC000000000000001) != 0)
                {
                  uint64_t v55 = MEMORY[0x22A6A6FA0](v53 - 4, v51);
                  BOOL v56 = __OFADD__(v54, 1);
                  uint64_t v57 = v53 - 3;
                  if (v56) {
                    goto LABEL_48;
                  }
                }
                else
                {
                  uint64_t v55 = *(void *)(v51 + 8 * v53);
                  swift_unknownObjectRetain();
                  BOOL v56 = __OFADD__(v54, 1);
                  uint64_t v57 = v53 - 3;
                  if (v56)
                  {
LABEL_48:
                    __break(1u);
                    goto LABEL_49;
                  }
                }
                self;
                if (swift_dynamicCastObjCClass())
                {
                  swift_bridgeObjectRelease_n();
                  uint64_t v58 = swift_allocObject();
                  swift_unknownObjectWeakInit();
                  uint64_t v59 = swift_allocObject();
                  *(void *)(v59 + 16) = v58;
                  *(void *)(v59 + 24) = v55;
                  *(unsigned char *)(v59 + 32) = v73 & 1;
                  swift_retain();
                  swift_unknownObjectRetain();
                  sub_228BAC618();
                  swift_unknownObjectRelease();
                  swift_release();
                  swift_release();
                  return;
                }
                swift_unknownObjectRelease();
                ++v53;
                if (v57 == v52) {
                  goto LABEL_31;
                }
              }
            }
          }
          else
          {
            uint64_t v64 = *(void *)(v51 + 8 * v62);
            swift_unknownObjectRetain();
            BOOL v56 = __OFADD__(v63, 1);
            uint64_t v65 = v62 - 3;
            if (v56) {
              goto LABEL_49;
            }
          }
          self;
          if (swift_dynamicCastObjCClass())
          {
            swift_bridgeObjectRelease_n();
            uint64_t v69 = swift_allocObject();
            swift_unknownObjectWeakInit();
            uint64_t v70 = swift_allocObject();
            *(void *)(v70 + 16) = v69;
            *(void *)(v70 + 24) = v64;
            *(unsigned char *)(v70 + 32) = v73 & 1;
            swift_retain();
            swift_unknownObjectRetain();
            sub_228BAC618();
            swift_unknownObjectRelease();
            swift_release();
            (*(void (**)(char *, uint64_t))(v40 + 8))(v74, v33);
LABEL_46:
            swift_release();
            goto LABEL_47;
          }
          swift_unknownObjectRelease();
          ++v62;
        }
        while (v65 != v61);
      }
    }
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v74, v33);
    goto LABEL_47;
  }
  id v46 = objc_msgSend(v39, sel_selectedAnnotations);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
  unint64_t v47 = sub_228BAD4A8();

  id v48 = v45;
  char v49 = sub_228B3CCD4(v47);
  swift_bridgeObjectRelease();

  if ((v49 & 1) == 0 && (*((unsigned char *)v75 + *(void *)((*MEMORY[0x263F8EED0] & *v75) + 0x220)) & 1) == 0)
  {
    uint64_t v66 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v67 = swift_allocObject();
    *(void *)(v67 + 16) = v66;
    *(void *)(v67 + 24) = v48;
    *(unsigned char *)(v67 + 32) = v73 & 1;
    id v68 = v48;
    swift_retain();
    sub_228BAC618();

    swift_release();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v33);
    goto LABEL_46;
  }
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v33);

LABEL_47:
  *((unsigned char *)v75 + *(void *)((*MEMORY[0x263F8EED0] & *v75) + 0x220)) = 0;
}

void sub_228B32D58(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v28 = a4;
  uint64_t v34 = a3;
  uint64_t v29 = a1;
  uint64_t v6 = *MEMORY[0x263F8EED0] & *v4;
  long long v7 = *(_OWORD *)(v6 + 0x1E8);
  v35[0] = *(_OWORD *)(v6 + 0x1D8);
  v35[1] = v7;
  uint64_t v8 = type metadata accessor for MapSelectionManagerBox();
  uint64_t v32 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v31 = &v27[-v9];
  uint64_t v33 = v10;
  uint64_t v11 = sub_228BAD218();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v27[-v13];
  uint64_t v15 = sub_228BAD718();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = &v27[-v17];
  uint64_t v19 = (void *)((char *)v4 + *(void *)(v6 + 552));
  uint64_t v20 = *v19;
  uint64_t v30 = (uint64_t (*)(_OWORD *))a2;
  *uint64_t v19 = a2;
  v19[1] = v34;
  swift_retain();
  sub_228AD2678(v20);
  sub_228B2CAF8((uint64_t)v18);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v18, 1, v11))
  {
    (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v18, v15);
  }
  else
  {
    uint64_t v21 = v30;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 16))(v14, v18, v11);
    (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v18, v15);
    uint64_t v22 = v31;
    MEMORY[0x22A6A6930](v11);
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v23 = v33;
    sub_228B8AAC4(v33, v35);
    (*(void (**)(unsigned char *, uint64_t))(v32 + 8))(v22, v23);
    id v24 = *(id *)&v35[0];
    if (*(void *)&v35[0])
    {
      if (v21(v35))
      {
        uint64_t v25 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v26 = swift_allocObject();
        *(void *)(v26 + 16) = v25;
        *(void *)(v26 + 24) = v24;
        *(unsigned char *)(v26 + 32) = v28 & 1;
        swift_retain();
        id v24 = v24;
        sub_228BAC618();
        swift_release();
        swift_release();
      }
    }
  }
}

void sub_228B33130(uint64_t a1, uint64_t a2, char a3, SEL *a4)
{
  uint64_t v7 = a1 + 16;
  swift_beginAccess();
  uint64_t v8 = (void *)MEMORY[0x22A6A7CA0](v7);
  if (v8)
  {
    uint64_t v9 = v8;
    objc_msgSend(v8, *a4, a2, a3 & 1);
  }
}

id sub_228B331A4(void *a1, char a2, uint64_t *a3)
{
  uint64_t v5 = *a3;
  if ((a2 & 1) == 0) {
    uint64_t v5 = 0;
  }
  uint64_t v6 = qword_268292918;
  *(void *)(v3 + qword_268292918) = v5;
  objc_msgSend(a1, sel_setScrollEnabled_, v5 & 1);
  objc_msgSend(a1, sel_setZoomEnabled_, (*(void *)(v3 + v6) >> 1) & 1);
  objc_msgSend(a1, sel_setPitchEnabled_, (*(void *)(v3 + v6) >> 3) & 1);
  uint64_t v7 = (*(void *)(v3 + v6) >> 2) & 1;

  return objc_msgSend(a1, sel_setRotateEnabled_, v7);
}

uint64_t sub_228B3324C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268292FF0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_268292EA0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F78);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_228B2CE38((uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6))
  {
    uint64_t v13 = &qword_268292F78;
    uint64_t v14 = (uint64_t)v12;
  }
  else
  {
    sub_228AD2708((uint64_t)v12, (uint64_t)v9, qword_268292EA0);
    sub_228AC1A50((uint64_t)v12, &qword_268292F78);
    uint64_t v15 = type metadata accessor for KeyframeAnimationState();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v5, 1, 1, v15);
    sub_228BAD1E8();
    uint64_t v14 = (uint64_t)v9;
    uint64_t v13 = qword_268292EA0;
  }
  uint64_t result = sub_228AC1A50(v14, v13);
  uint64_t v17 = *(void *)((char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x248));
  uint64_t v26 = 0;
  memset(v25, 0, sizeof(v25));
  char v27 = 1;
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = v17 + 48;
    do
    {
      if ((*(unsigned char *)(v19 - 16) & 1) == 0)
      {
        uint64_t v20 = *(void (**)(_OWORD *))(v19 - 8);
        swift_retain();
        sub_228AE28D0(a1, (uint64_t *)v25, v23);
        v21[0] = v23[0];
        v21[1] = v23[1];
        void v21[2] = v23[2];
        void v21[3] = v23[3];
        v21[4] = v23[4];
        v21[5] = v23[5];
        uint64_t v22 = v24;
        v20(v21);
        swift_release();
      }
      v19 += 24;
      --v18;
    }
    while (v18);
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_228B33530(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = a3;
  uint64_t v8 = *MEMORY[0x263F8EED0] & *v4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F80);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for _MapContentInputs(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x22A6A7CA0]((char *)v4 + *(void *)(v8 + 504));
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    sub_228B2C924((uint64_t)v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      sub_228B4D404((uint64_t)v11, (uint64_t)v15, type metadata accessor for _MapContentInputs);
      AGGraphClearUpdate();
      id v19 = (id)AGSubgraphGetCurrent();
      AGSubgraphSetCurrent();
      sub_228B33790(a1, (uint64_t)v15, a2, v21, &v22, a4);
      AGSubgraphSetCurrent();

      AGGraphSetUpdate();
      uint64_t v18 = v22;
      sub_228B3D868((uint64_t)v15, type metadata accessor for _MapContentInputs);
      return v18;
    }

    sub_228AC1A50((uint64_t)v11, &qword_268292F80);
  }
  return 0;
}

uint64_t sub_228B33790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X5>, char **a5@<X8>, uint64_t a6)
{
  id v156 = a3;
  uint64_t v167 = a2;
  uint64_t v162 = a1;
  uint64_t v160 = a5;
  uint64_t v166 = a6;
  uint64_t v180 = *MEMORY[0x263EF8340];
  uint64_t v151 = type metadata accessor for MarkerAnnotationViewModel(0);
  MEMORY[0x270FA5388](v151);
  uint64_t v152 = (char *)&v151 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = (int *)type metadata accessor for ResolvedMarker();
  MEMORY[0x270FA5388](v155);
  uint64_t v158 = (uint64_t)&v151 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = type metadata accessor for CustomAnnotationViewModel(0);
  MEMORY[0x270FA5388](v153);
  uint64_t v157 = (char *)&v151 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = type metadata accessor for MapContentList.Item.Content(0);
  uint64_t v11 = MEMORY[0x270FA5388](v171);
  uint64_t v13 = (char *)&v151 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v151 - v14;
  uint64_t v154 = type metadata accessor for ResolvedAnnotation();
  MEMORY[0x270FA5388](v154);
  uint64_t v159 = (uint64_t *)((char *)&v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v172 = type metadata accessor for MapContentList.Item(0);
  uint64_t v168 = *(void *)(v172 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v172);
  uint64_t v169 = (uint64_t *)((char *)&v151 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (uint64_t *)((char *)&v151 - v19);
  uint64_t v165 = sub_228BAC5E8();
  uint64_t v164 = *(void *)(v165 - 8);
  MEMORY[0x270FA5388](v165);
  uint64_t v163 = (uint64_t)&v151 - v21;
  uint64_t v22 = type metadata accessor for _MapContentOutputs(0);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v170 = (uint64_t)&v151 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v23);
  char v27 = (char *)&v151 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v161(v27, a1, a4);
  uint64_t v179 = a4;
  uint64_t v28 = sub_228BAC488();
  sub_228AC7E20((uint64_t)v27, (uint64_t)sub_228AC1D0C, (uint64_t)v178, a4, MEMORY[0x263F8E628], v28, MEMORY[0x263F8E658], v29);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v25 + 8);
  v30(v27, a4);
  int v31 = v174;
  v161(v27, v162, a4);
  uint64_t v176 = a4;
  int v177 = v31;
  sub_228AC7E20((uint64_t)v27, (uint64_t)sub_228B3D544, (uint64_t)v175, a4, MEMORY[0x263F8E628], MEMORY[0x263F8D4F8], MEMORY[0x263F8E658], v32);
  v30(v27, a4);
  uint64_t v33 = v170;
  uint64_t v34 = v163;
  sub_228ACB078(v31, v163);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v166 + 32))(v34, v167, a4);
  (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v34, v165);
  int v35 = sub_228ABF6B8();
  int v36 = *MEMORY[0x263F288F8];
  if (v35 == *MEMORY[0x263F288F8])
  {
    uint64_t v37 = sub_228B78CF8(MEMORY[0x263F8EE78]);
  }
  else
  {
    uint64_t v37 = *(void *)AGGraphGetValue();
    swift_bridgeObjectRetain();
  }
  int v38 = sub_228ABF6D8();
  id v39 = v169;
  if (v38 == v36)
  {
    uint64_t v40 = sub_228B78CF8(MEMORY[0x263F8EE78]);
    uint64_t v41 = *(void *)(v37 + 16);
    if (!v41)
    {
LABEL_11:
      swift_bridgeObjectRelease();
      uint64_t v44 = *(void *)(v40 + 16);
      if (v44)
      {
        uint64_t v45 = v40 + ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80));
        uint64_t v46 = *(void *)(v168 + 72);
        while (1)
        {
          sub_228B4D098(v45, (uint64_t)v39, type metadata accessor for MapContentList.Item);
          sub_228B4D098((uint64_t)v39 + *(int *)(v172 + 24), (uint64_t)v13, type metadata accessor for MapContentList.Item.Content);
          if (swift_getEnumCaseMultiPayload() == 1) {
            break;
          }
          sub_228B3D868((uint64_t)v39, type metadata accessor for MapContentList.Item);
          sub_228B3D868((uint64_t)v13, type metadata accessor for MapContentList.Item.Content);
          v45 += v46;
          if (!--v44) {
            goto LABEL_15;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v56 = v158;
        sub_228B4D404((uint64_t)v13, v158, (uint64_t (*)(void))type metadata accessor for ResolvedMarker);
        uint64_t v57 = v56 + v155[8];
        uint64_t v168 = *v39;
        swift_bridgeObjectRetain();
        uint64_t v171 = v57;
        uint64_t v58 = (void *)sub_228BACBC8();
        if (v58)
        {
          uint64_t v59 = v58;
          id v60 = objc_msgSend(v58, sel_string);

          uint64_t v167 = sub_228BAD408();
          uint64_t v166 = v61;
        }
        else
        {
          uint64_t v167 = 0;
          uint64_t v166 = 0;
        }
        uint64_t v109 = (void *)sub_228BACBB8();
        if (v109)
        {
          uint64_t v110 = v109;
          id v111 = objc_msgSend(v109, sel_string);

          uint64_t v165 = sub_228BAD408();
          uint64_t v113 = v112;
        }
        else
        {
          uint64_t v165 = 0;
          uint64_t v113 = 0;
        }
        uint64_t v114 = v155;
        uint64_t v115 = v158;
        uint64_t v116 = *(void **)(v158 + v155[9]);
        char v117 = *(unsigned char *)(v158 + v155[10]);
        __int16 v118 = *(_WORD *)(v158 + 16);
        double v119 = *(double *)v158;
        double v120 = *(double *)(v158 + 8);
        char v121 = *(unsigned char *)(v158 + 18);
        uint64_t v122 = (char *)v39 + *(int *)(v172 + 28);
        uint64_t v123 = (uint64_t)v152;
        long long v124 = &v152[*(int *)(v151 + 68)];
        uint64_t v125 = sub_228BACE18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16))(v124, v122, v125);
        uint64_t v126 = v167;
        *(void *)uint64_t v123 = v168;
        *(void *)(v123 + 8) = v126;
        uint64_t v127 = v165;
        *(void *)(v123 + 16) = v166;
        *(void *)(v123 + 24) = v127;
        *(void *)(v123 + 32) = v113;
        *(void *)(v123 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v116;
        *(unsigned char *)(v123 + 48) = v117;
        *(_WORD *)(v123 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v118;
        *(double *)(v123 + 88) = v119;
        *(double *)(v123 + 96) = v120;
        *(unsigned char *)(v123 + 104) = 1;
        *(unsigned char *)(v123 + 105) = v121;
        *(void *)(v123 + 112) = 0;
        if (*(void *)(v115 + v114[11]))
        {
          sub_228AD25BC(0, (unint64_t *)&qword_268292340);
          id v128 = v116;
          swift_retain();
          *(void *)(v123 + 112) = sub_228BAD6D8();
        }
        else
        {
          id v129 = v116;
        }
        uint64_t v130 = (void *)sub_228BACBC8();
        uint64_t v131 = v130;
        if (v130)
        {
          id v132 = objc_msgSend(v130, sel_string);

          uint64_t v131 = (void *)sub_228BAD408();
          uint64_t v134 = v133;
        }
        else
        {
          uint64_t v134 = 0;
        }
        *(void *)(v123 + 56) = v131;
        *(void *)(v123 + 64) = v134;
        *(void *)(v123 + 72) = sub_228BACBA8();
        uint64_t v135 = (void *)sub_228BACBC8();
        uint64_t v136 = v135;
        if (v135)
        {
          id v137 = objc_msgSend(v135, sel_string);

          uint64_t v136 = (void *)sub_228BAD408();
          uint64_t v139 = v138;
        }
        else
        {
          uint64_t v139 = 0;
        }
        uint64_t v140 = (void *)sub_228BACBB8();
        uint64_t v141 = v140;
        if (v140)
        {
          id v142 = objc_msgSend(v140, sel_string);

          uint64_t v141 = (void *)sub_228BAD408();
          uint64_t v144 = v143;
        }
        else
        {
          uint64_t v144 = 0;
        }
        objc_allocWithZone((Class)type metadata accessor for MapBridgingMarker());
        id v145 = v116;
        id v146 = sub_228B3D1A4((uint64_t)v136, v139, (uint64_t)v141, v144, v116, v117, v119, v120);

        id v147 = v156;
        uint64_t v148 = (void *)sub_228BAD3D8();
        id v149 = objc_msgSend(v147, sel_dequeueReusableAnnotationViewWithIdentifier_forAnnotation_, v148, v146);

        self;
        uint64_t v150 = (void *)swift_dynamicCastObjCClassUnconditional();
        sub_228B13608(v150, 0);

        sub_228B3D868(v158, (uint64_t (*)(void))type metadata accessor for ResolvedMarker);
        sub_228B3D868((uint64_t)v169, type metadata accessor for MapContentList.Item);
        sub_228B3D868(v170, type metadata accessor for _MapContentOutputs);
        *uint64_t v160 = (char *)v150;
        return sub_228B3D868(v123, type metadata accessor for MarkerAnnotationViewModel);
      }
      else
      {
LABEL_15:
        swift_bridgeObjectRelease();
        uint64_t result = sub_228B3D868(v33, type metadata accessor for _MapContentOutputs);
        *uint64_t v160 = 0;
      }
      return result;
    }
  }
  else
  {
    uint64_t v40 = *(void *)AGGraphGetValue();
    swift_bridgeObjectRetain();
    uint64_t v41 = *(void *)(v37 + 16);
    if (!v41) {
      goto LABEL_11;
    }
  }
  uint64_t v42 = v37 + ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80));
  uint64_t v43 = *(void *)(v168 + 72);
  while (1)
  {
    sub_228B4D098(v42, (uint64_t)v20, type metadata accessor for MapContentList.Item);
    sub_228B4D098((uint64_t)v20 + *(int *)(v172 + 24), (uint64_t)v15, type metadata accessor for MapContentList.Item.Content);
    if (!swift_getEnumCaseMultiPayload()) {
      break;
    }
    sub_228B3D868((uint64_t)v20, type metadata accessor for MapContentList.Item);
    sub_228B3D868((uint64_t)v15, type metadata accessor for MapContentList.Item.Content);
    v42 += v43;
    if (!--v41) {
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v48 = v159;
  sub_228B4D404((uint64_t)v15, (uint64_t)v159, (uint64_t (*)(void))type metadata accessor for ResolvedAnnotation);
  uint64_t v49 = *v20;
  id v50 = (int *)v154;
  unint64_t v51 = (char *)v48 + *(int *)(v154 + 24);
  swift_bridgeObjectRetain();
  uint64_t v52 = (void *)sub_228BACBC8();
  if (v52)
  {
    uint64_t v53 = v52;
    id v54 = objc_msgSend(v52, sel_string);

    uint64_t v167 = sub_228BAD408();
    uint64_t v166 = v55;
  }
  else
  {
    uint64_t v167 = 0;
    uint64_t v166 = 0;
  }
  uint64_t v62 = v153;
  uint64_t v63 = (void *)sub_228BACBB8();
  uint64_t v171 = (uint64_t)v51;
  uint64_t v169 = (uint64_t *)v49;
  if (v63)
  {
    uint64_t v64 = v63;
    id v65 = objc_msgSend(v63, sel_string);

    uint64_t v165 = sub_228BAD408();
    uint64_t v164 = v66;
  }
  else
  {
    uint64_t v165 = 0;
    uint64_t v164 = 0;
  }
  char v67 = *((unsigned char *)v159 + v50[9]);
  LODWORD(v168) = *((unsigned __int8 *)v159 + v50[10]);
  uint64_t v68 = *v159;
  uint64_t v69 = v159[1];
  uint64_t v70 = *(void *)((char *)v159 + v50[7]);
  uint64_t v71 = v159[2];
  uint64_t v72 = v159[3];
  int v73 = (char *)v159 + v50[11];
  uint64_t v74 = *(void *)v73;
  uint64_t v75 = *((void *)v73 + 1);
  char v76 = v73[16];
  uint64_t v77 = (char *)v20 + *(int *)(v172 + 28);
  uint64_t v78 = *(int *)(v62 + 64);
  uint64_t v79 = v157;
  uint64_t v80 = &v157[v78];
  char v81 = *((unsigned char *)v159 + v50[13]);
  uint64_t v82 = sub_228BACE18();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16))(v80, v77, v82);
  uint64_t v83 = v167;
  *(void *)uint64_t v79 = v169;
  *((void *)v79 + 1) = v83;
  uint64_t v84 = v165;
  *((void *)v79 + 2) = v166;
  *((void *)v79 + 3) = v84;
  *((void *)v79 + 4) = v164;
  *((void *)v79 + 5) = 0;
  v79[48] = v67;
  v79[49] = v168;
  *((void *)v79 + 7) = v68;
  *((void *)v79 + 8) = v69;
  *((void *)v79 + 9) = v70;
  *((void *)v79 + 1__isPlatformVersionAtLeast(2, 18, 1, 0) = v71;
  *((void *)v79 + 11) = v72;
  v79[96] = 1;
  *((void *)v79 + 13) = v74;
  *((void *)v79 + 14) = v75;
  v79[120] = v76;
  v79[121] = v81;
  swift_retain();
  uint64_t v85 = (void *)sub_228BACBC8();
  uint64_t v86 = v85;
  if (v85)
  {
    id v87 = objc_msgSend(v85, sel_string);

    uint64_t v86 = (void *)sub_228BAD408();
    uint64_t v89 = v88;
  }
  else
  {
    uint64_t v89 = 0;
  }
  uint64_t v90 = (void *)sub_228BACBB8();
  uint64_t v91 = v90;
  if (v90)
  {
    id v92 = objc_msgSend(v90, sel_string);

    uint64_t v91 = (void *)sub_228BAD408();
    uint64_t v94 = v93;
  }
  else
  {
    uint64_t v94 = 0;
  }
  uint64_t v95 = (objc_class *)type metadata accessor for MapBridgingCustomAnnotation();
  uint64_t v96 = (char *)objc_allocWithZone(v95);
  uint64_t v97 = &v96[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_title];
  *(void *)uint64_t v97 = 0;
  *((void *)v97 + 1) = 0;
  char v98 = &v96[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_subtitle];
  *(void *)char v98 = 0;
  *((void *)v98 + 1) = 0;
  uint64_t v99 = OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_mapItem;
  *(void *)&v96[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_mapItem] = 0;
  *(void *)uint64_t v97 = v86;
  *((void *)v97 + 1) = v89;
  char v100 = v96;
  swift_bridgeObjectRelease();
  *(void *)char v98 = v91;
  *((void *)v98 + 1) = v94;
  swift_bridgeObjectRelease();
  uint64_t v101 = &v100[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_coordinate];
  *(void *)uint64_t v101 = v68;
  *((void *)v101 + 1) = v69;
  uint64_t v102 = *(void **)&v96[v99];
  *(void *)&v96[v99] = 0;

  v173.receiver = v100;
  v173.super_class = v95;
  id v103 = objc_msgSendSuper2(&v173, sel_init);
  id v104 = v156;
  uint64_t v105 = (void *)sub_228BAD3D8();
  id v106 = objc_msgSend(v104, sel_dequeueReusableAnnotationViewWithIdentifier_forAnnotation_, v105, v103);

  type metadata accessor for SwiftUIAnnotationView();
  uint64_t v107 = (char *)swift_dynamicCastClassUnconditional();
  uint64_t v108 = (uint64_t)v157;
  sub_228B13344(v107, 0);

  sub_228B3D868(v108, type metadata accessor for CustomAnnotationViewModel);
  sub_228B3D868((uint64_t)v159, (uint64_t (*)(void))type metadata accessor for ResolvedAnnotation);
  sub_228B3D868((uint64_t)v20, type metadata accessor for MapContentList.Item);
  uint64_t result = sub_228B3D868(v170, type metadata accessor for _MapContentOutputs);
  *uint64_t v160 = v107;
  return result;
}

id sub_228B3487C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_268292EA0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F78);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268292FF0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((unsigned char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x210)) = 1;
  if ((objc_msgSend(a1, sel_isScrollEnabled) & 1) != 0
    || (objc_msgSend(a1, sel_isZoomEnabled) & 1) != 0
    || (objc_msgSend(a1, sel_isPitchEnabled) & 1) != 0
    || (id result = objc_msgSend(a1, sel_isRotateEnabled), result))
  {
    sub_228B2CE38((uint64_t)v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
    {
      sub_228AC1A50((uint64_t)v9, &qword_268292F78);
      uint64_t v14 = type metadata accessor for KeyframeAnimationState();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
    }
    else
    {
      sub_228AD2708((uint64_t)v9, (uint64_t)v6, qword_268292EA0);
      sub_228AC1A50((uint64_t)v9, &qword_268292F78);
      MEMORY[0x22A6A6930](v3);
      sub_228AC1A50((uint64_t)v6, qword_268292EA0);
      uint64_t v15 = type metadata accessor for KeyframeAnimationState();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v12, 1, v15) != 1)
      {
        sub_228AC1A50((uint64_t)v12, (uint64_t *)&unk_268292FF0);
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = v1;
        *(void *)(v16 + 24) = a1;
        uint64_t v17 = v1;
        id v18 = a1;
        sub_228BAC618();
        return (id)swift_release();
      }
    }
    return (id)sub_228AC1A50((uint64_t)v12, (uint64_t *)&unk_268292FF0);
  }
  return result;
}

uint64_t sub_228B34BB8(void *a1, void *a2)
{
  uint64_t v3 = (void *)((char *)a1 + *(void *)((*MEMORY[0x263F8EED0] & *a1) + 0x208));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  unint64_t v6 = v3[2];
  sub_228B3D3C0(*v3, v5, v6);
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268292F68);
    sub_228BAD1E8();
    sub_228B3D40C(v4, v5, v6);
  }
  return sub_228B3324C(a2);
}

void sub_228B34C84(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_228B3487C(v4);
}

void sub_228B34CEC()
{
}

void sub_228B34D14(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_228B34D10(v4);
}

uint64_t sub_228B34D7C(id a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_268292EA0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F78);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268292FF0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = 0;
  uint64_t v15 = (unsigned char *)(v14 + 16);
  uint64_t v16 = *MEMORY[0x263F8EED0] & *v2;
  if (*((unsigned char *)v2 + *(void *)(v16 + 0x210)) == 1)
  {
    uint64_t v37 = v7;
    uint64_t v38 = v5;
    uint64_t v39 = v4;
    uint64_t v17 = (void *)((char *)v2 + *(void *)(v16 + 520));
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v20 = v17[2];
    sub_228B3D3C0(*v17, v18, v20);
    if (v18)
    {
      uint64_t v35 = v14;
      id v36 = a1;
      uint64_t v40 = v19;
      uint64_t v41 = v18;
      unint64_t v42 = v20;
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F68);
      MEMORY[0x22A6A6930](&v43);
      unint64_t v22 = v43;
      char v23 = sub_228B88A98(v43, (double *)0xA000000000000008);
      sub_228B05A34(v22);
      if (v23)
      {
        sub_228B3D40C(v19, v18, v20);
        a1 = v36;
      }
      else
      {
        uint64_t v40 = v19;
        uint64_t v41 = v18;
        unint64_t v42 = v20;
        MEMORY[0x22A6A6930](&v43, v21);
        unint64_t v24 = v43;
        sub_228B05A34(v43);
        a1 = v36;
        if (v24 >> 61 != 4 || (objc_msgSend(v36, sel_hasUserLocation) & 1) == 0)
        {
          objc_msgSend(a1, sel_setUserTrackingMode_, 0);
          uint64_t v25 = (void *)swift_allocObject();
          void v25[2] = v19;
          v25[3] = v18;
          v25[4] = v20;
          swift_retain();
          swift_retain();
          sub_228B0596C(v20);
          sub_228BAC618();
          swift_release();
        }
        sub_228B3D40C(v19, v18, v20);
      }
      uint64_t v14 = v35;
    }
    sub_228B2CE38((uint64_t)v10);
    uint64_t v26 = v39;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v10, 1, v39))
    {
      sub_228AC1A50((uint64_t)v10, &qword_268292F78);
      uint64_t v27 = type metadata accessor for KeyframeAnimationState();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v13, 1, 1, v27);
    }
    else
    {
      uint64_t v28 = (uint64_t)v37;
      sub_228AD2708((uint64_t)v10, (uint64_t)v37, qword_268292EA0);
      sub_228AC1A50((uint64_t)v10, &qword_268292F78);
      MEMORY[0x22A6A6930](v26);
      sub_228AC1A50(v28, qword_268292EA0);
      uint64_t v29 = type metadata accessor for KeyframeAnimationState();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v13, 1, v29) != 1)
      {
        sub_228AC1A50((uint64_t)v13, (uint64_t *)&unk_268292FF0);
        int v31 = (void *)swift_allocObject();
        long long v31[2] = v2;
        v31[3] = a1;
        v31[4] = v14;
        uint64_t v32 = v2;
        id v33 = a1;
        swift_retain();
        sub_228BAC618();
        swift_release();
        goto LABEL_14;
      }
    }
    sub_228AC1A50((uint64_t)v13, (uint64_t *)&unk_268292FF0);
  }
LABEL_14:
  sub_228B3524C(v15, v2, a1);
  return swift_release();
}

uint64_t sub_228B3524C(unsigned char *a1, void *a2, void *a3)
{
  uint64_t result = swift_beginAccess();
  if ((*a1 & 1) == 0)
  {
    uint64_t v7 = *(void *)((char *)a2 + *(void *)((*MEMORY[0x263F8EED0] & *a2) + 0x248));
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v7;
    *(void *)(v8 + 24) = a3;
    swift_bridgeObjectRetain();
    id v9 = a3;
    sub_228BAC618();
    return swift_release();
  }
  return result;
}

void sub_228B35310(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_228B34D7C(v4);
}

uint64_t sub_228B35378(uint64_t result, char a2, void *a3)
{
  uint64_t v13 = 0;
  memset(v12, 0, sizeof(v12));
  char v14 = 1;
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v6 = swift_bridgeObjectRetain() + 48;
    do
    {
      if (((a2 & 1) == 0) != *(unsigned char *)(v6 - 16))
      {
        uint64_t v7 = *(void (**)(_OWORD *))(v6 - 8);
        swift_retain();
        sub_228AE28D0(a3, (uint64_t *)v12, v10);
        v8[0] = v10[0];
        v8[1] = v10[1];
        v8[2] = v10[2];
        v8[3] = v10[3];
        v8[4] = v10[4];
        _OWORD v8[5] = v10[5];
        uint64_t v9 = v11;
        v7(v8);
        swift_release();
      }
      v6 += 24;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_228B35494(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_228B3DA14(v4);
}

uint64_t sub_228B354FC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = a4;
  sub_228B0596C(a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292F68);
  return sub_228BAD1E8();
}

unint64_t sub_228B35574(uint64_t a1, uint64_t a2, unint64_t a3)
{
  v7[1] = a1;
  v7[2] = a2;
  v7[3] = a3;
  swift_retain();
  swift_retain();
  sub_228B0596C(a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292F68);
  MEMORY[0x22A6A6930](v7);
  uint64_t v4 = v7[0];
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = v4;
  sub_228BAD1E8();
  swift_release();
  swift_release();
  return sub_228B05A34(a3);
}

uint64_t sub_228B35644(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = 1;
  *(void *)(v5 + 24) = a4;
  sub_228B0596C(a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292F68);
  return sub_228BAD1E8();
}

unint64_t sub_228B356C0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  v7[1] = a1;
  v7[2] = a2;
  v7[3] = a3;
  swift_retain();
  swift_retain();
  sub_228B0596C(a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292F68);
  MEMORY[0x22A6A6930](v7);
  uint64_t v4 = v7[0];
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = 1;
  *(void *)(v5 + 24) = v4;
  sub_228BAD1E8();
  swift_release();
  swift_release();
  return sub_228B05A34(a3);
}

void sub_228B35794(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  id v7 = a1;
  sub_228B3DCA8(a4);
}

void sub_228B35800(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_228B3DF98(v4);
}

void sub_228B35868(void *a1)
{
  uint64_t v3 = (void *)((char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x208));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  unint64_t v6 = v3[2];
  sub_228B3D3C0(*v3, v5, v6);
  if (v5)
  {
    id v7 = (void *)swift_allocObject();
    v7[2] = v4;
    v7[3] = v5;
    void v7[4] = v6;
    v7[5] = v1;
    void v7[6] = a1;
    sub_228B3D3C0(v4, v5, v6);
    uint64_t v8 = v1;
    id v9 = a1;
    sub_228BAC618();
    swift_release();
    sub_228B3D40C(v4, v5, v6);
  }
}

uint64_t sub_228B3596C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_228B3324C(a5);
}

void sub_228B359DC(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_228B35868(v4);
}

void sub_228B35A44(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  swift_unknownObjectRetain();
  id v5 = a1;
  sub_228B3E0E8();

  swift_unknownObjectRelease();
}

uint64_t sub_228B35AC0(void *a1, void *a2)
{
  id v24 = a2;
  id v25 = a1;
  uint64_t v3 = *MEMORY[0x263F8EED0] & *v2;
  long long v26 = *(_OWORD *)(v3 + 0x1D8);
  long long v4 = *(_OWORD *)(v3 + 488);
  long long v27 = v26;
  long long v28 = v4;
  uint64_t v5 = type metadata accessor for MapSelectionManagerBox();
  MEMORY[0x270FA5388](v5);
  v23[1] = (char *)v23 - v6;
  uint64_t v7 = v26;
  *(void *)&long long v26 = sub_228BAD718();
  v23[0] = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  id v9 = (char *)v23 - v8;
  uint64_t v10 = sub_228BAD218();
  uint64_t v11 = sub_228BAD718();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v23 - v14;
  uint64_t v16 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)v23 - v17;
  sub_228B2CAF8((uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v10) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v15, v10);
  id v20 = objc_msgSend(v24, sel_annotation);
  id v21 = objc_msgSend(v25, sel_annotations);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268292690);
  unint64_t v22 = sub_228BAD4A8();

  swift_unknownObjectRetain();
  LOBYTE(v21) = sub_228B3D2A4(v22, (uint64_t)v20);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v9, 1, 1, v7);
    MEMORY[0x22A6A6930](v10);
    sub_228B8B5E0((uint64_t)v9, v5);
    (*(void (**)(char *, void))(v23[0] + 8))(v9, v26);
    sub_228BAD1E8();
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v10);
    return swift_unknownObjectRelease();
  }
}

void sub_228B35ED4(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  sub_228B35AC0(v6, v7);
}

uint64_t sub_228B35F50(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  long long v27 = a1;
  uint64_t v28 = a2;
  long long v4 = *(_OWORD *)((*MEMORY[0x263F8EED0] & *v2) + 0x1E8);
  v30[0] = *(_OWORD *)((*MEMORY[0x263F8EED0] & *v2) + 0x1D8);
  v30[1] = v4;
  uint64_t v5 = type metadata accessor for MapSelectionManagerBox();
  uint64_t v29 = *(char **)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v7 = (char *)&v26 - v6;
  uint64_t v8 = sub_228BAD218();
  uint64_t v9 = sub_228BAD718();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v14 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v26 - v15;
  sub_228B2CAF8((uint64_t)v13);
  uint64_t v17 = v14;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v8) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  uint64_t v19 = v27;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v16, v13, v8);
  uint64_t v20 = v17;
  MEMORY[0x22A6A6930](v8);
  char v21 = sub_228B8B228(v5);
  (*((void (**)(char *, uint64_t))v29 + 1))(v7, v5);
  if ((v21 & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v16, v8);
  }
  uint64_t v29 = v16;
  self;
  uint64_t v22 = swift_dynamicCastObjCClass();
  if (!v22) {
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v29, v8);
  }
  uint64_t v23 = v22;
  id v24 = *(uint64_t (**)(_OWORD *))((char *)v3 + *(void *)((*MEMORY[0x263F8EED0] & *v3) + 0x228));
  if (v24)
  {
    *(void *)&v30[0] = v22;
    swift_unknownObjectRetain_n();
    sub_228AD2688((uint64_t)v24);
    if (v24(v30))
    {
      swift_unknownObjectRetain();
      objc_msgSend(v19, sel_deselectAnnotation_animated_, v23, 0);
      sub_228AD2678((uint64_t)v24);
      swift_unknownObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v29, v8);
    }
    sub_228AD2678((uint64_t)v24);
  }
  else
  {
    swift_unknownObjectRetain_n();
  }
  *(void *)&v30[0] = v23;
  swift_unknownObjectRetain();
  id v25 = v29;
  MEMORY[0x22A6A6930](v8);
  sub_228B8B390((uint64_t)v30, v5);
  swift_unknownObjectRelease();
  sub_228BAD1E8();
  swift_unknownObjectRelease_n();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v25, v8);
}

void sub_228B36368(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  swift_unknownObjectRetain();
  id v7 = a1;
  sub_228B35F50(v6, a4);

  swift_unknownObjectRelease();
}

uint64_t sub_228B363E8(void *a1, void *a2)
{
  uint64_t v109 = a2;
  id v89 = a1;
  uint64_t v3 = *MEMORY[0x263F8EED0] & *v2;
  uint64_t v4 = *(void *)(v3 + 0x1D8);
  uint64_t v91 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v88 = (char *)v84 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292700);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v94 = (uint64_t)v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for UserAnnotationViewModel(0);
  uint64_t v107 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v95 = (uint64_t)v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292790);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v98 = (uint64_t)v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CustomAnnotationViewModel(0);
  uint64_t v96 = *(void *)(v11 - 8);
  uint64_t v97 = v11;
  MEMORY[0x270FA5388](v11);
  id v92 = (char *)v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_228BAD718();
  uint64_t v102 = *(void *)(v13 - 8);
  uint64_t v103 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v90 = (uint64_t)v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v101 = (uint64_t)v84 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292750);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v105 = (uint64_t)v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for MarkerAnnotationViewModel(0);
  uint64_t v104 = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  uint64_t v20 = (char *)v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(v3 + 480);
  uint64_t v100 = v4;
  uint64_t v110 = v4;
  uint64_t v111 = v21;
  long long v99 = *(_OWORD *)(v3 + 488);
  long long v112 = v99;
  uint64_t v22 = type metadata accessor for MapSelectionManagerBox();
  uint64_t v108 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  id v24 = (char *)v84 - v23;
  uint64_t v25 = sub_228BAD218();
  uint64_t v26 = sub_228BAD718();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)v84 - v29;
  uint64_t v31 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v28);
  id v33 = (char *)v84 - v32;
  sub_228B2CAF8((uint64_t)v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v30, 1, v25) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v30, v26);
  }
  uint64_t v85 = v20;
  uint64_t v35 = v109;
  id v87 = v2;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v33, v30, v25);
  MEMORY[0x22A6A6930](v25);
  char v36 = sub_228B8B088(v22);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v108 + 8);
  uint64_t v86 = v22;
  v37(v24, v22);
  if ((v36 & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v33, v25);
  }
  id v38 = objc_msgSend(v35, sel_annotation);
  uint64_t v39 = v87;
  uint64_t v40 = v107;
  if (v38)
  {
    id v41 = v38;
    type metadata accessor for MapBridgingMarker();
    uint64_t v42 = swift_dynamicCastClass();
    if (v42)
    {
      v84[1] = v41;
      uint64_t v108 = v25;
      uint64_t v43 = *(void *)((char *)v39 + qword_2682928D8 + 16);
      if (*(void *)(v43 + 16))
      {
        uint64_t v44 = v42;
        v84[0] = v31;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v45 = sub_228AD1AD4(v44);
        if (v46)
        {
          uint64_t v47 = v104;
          uint64_t v48 = v105;
          sub_228B4D098(*(void *)(v43 + 56) + *(void *)(v104 + 72) * v45, v105, type metadata accessor for MarkerAnnotationViewModel);
          uint64_t v49 = 0;
        }
        else
        {
          uint64_t v49 = 1;
          uint64_t v47 = v104;
          uint64_t v48 = v105;
        }
        uint64_t v35 = v109;
        uint64_t v50 = v106;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v48, v49, 1, v106);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v51 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v48, 1, v50);
        uint64_t v31 = v84[0];
        uint64_t v40 = v107;
        if (v51 != 1)
        {
          uint64_t v61 = (uint64_t)v85;
          sub_228B4D404(v48, (uint64_t)v85, type metadata accessor for MarkerAnnotationViewModel);
          uint64_t v62 = v61;
          uint64_t v63 = v101;
          sub_228B69708(v100, v101);
          uint64_t v25 = v108;
          MEMORY[0x22A6A6930](v108);
          sub_228B8B5E0(v63, v86);
          (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v63, v103);
          sub_228BAD1E8();
          swift_unknownObjectRelease();
          uint64_t v64 = type metadata accessor for MarkerAnnotationViewModel;
          uint64_t v65 = v62;
          goto LABEL_33;
        }
      }
      else
      {
        uint64_t v48 = v105;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v104 + 56))(v105, 1, 1, v106);
        uint64_t v35 = v109;
      }
      swift_unknownObjectRelease();
      sub_228AC1A50(v48, &qword_268292750);
      uint64_t v39 = v87;
      uint64_t v25 = v108;
    }
    else
    {
      swift_unknownObjectRelease();
      uint64_t v35 = v109;
    }
  }
  uint64_t v106 = (uint64_t)v24;
  if (!objc_msgSend(v35, sel_annotation)) {
    goto LABEL_25;
  }
  type metadata accessor for MapBridgingCustomAnnotation();
  uint64_t v52 = swift_dynamicCastClass();
  if (!v52)
  {
    swift_unknownObjectRelease();
    goto LABEL_25;
  }
  uint64_t v53 = *(void *)((char *)v39 + qword_2682928D0 + 16);
  if (*(void *)(v53 + 16))
  {
    uint64_t v54 = v52;
    uint64_t v108 = v25;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v55 = sub_228AD1B28(v54);
    if (v56)
    {
      uint64_t v57 = v96;
      uint64_t v58 = v98;
      sub_228B4D098(*(void *)(v53 + 56) + *(void *)(v96 + 72) * v55, v98, type metadata accessor for CustomAnnotationViewModel);
      uint64_t v59 = 0;
      uint64_t v60 = (uint64_t)v92;
    }
    else
    {
      uint64_t v59 = 1;
      uint64_t v60 = (uint64_t)v92;
      uint64_t v58 = v98;
      uint64_t v57 = v96;
    }
    uint64_t v66 = v97;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56))(v58, v59, 1, v97);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v67 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v58, 1, v66);
    uint64_t v40 = v107;
    uint64_t v25 = v108;
    if (v67 == 1) {
      goto LABEL_24;
    }
    sub_228B4D404(v58, v60, type metadata accessor for CustomAnnotationViewModel);
    uint64_t v81 = v60;
    uint64_t v82 = v101;
    sub_228B69708(v100, v101);
    MEMORY[0x22A6A6930](v25);
    sub_228B8B5E0(v82, v86);
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v82, v103);
    sub_228BAD1E8();
    swift_unknownObjectRelease();
    uint64_t v64 = type metadata accessor for CustomAnnotationViewModel;
    uint64_t v65 = v81;
LABEL_33:
    sub_228B3D868(v65, v64);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v33, v25);
  }
  uint64_t v58 = v98;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 56))(v98, 1, 1, v97);
LABEL_24:
  swift_unknownObjectRelease();
  sub_228AC1A50(v58, &qword_268292790);
  uint64_t v39 = v87;
LABEL_25:
  if (!objc_msgSend(v35, sel_annotation)) {
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v33, v25);
  }
  uint64_t v68 = v33;
  self;
  uint64_t v69 = swift_dynamicCastObjCClass();
  if (!v69)
  {
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v33, v25);
  }
  uint64_t v70 = v69;
  uint64_t v71 = v94;
  sub_228B1B608(*(void *)((char *)v39 + qword_2682928E8 + 16), v94);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v71, 1, v93) == 1)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v68, v25);
    swift_unknownObjectRelease();
    return sub_228AC1A50(v71, &qword_268292700);
  }
  else
  {
    v84[0] = v31;
    sub_228B4D404(v71, v95, type metadata accessor for UserAnnotationViewModel);
    uint64_t v72 = v90;
    uint64_t v73 = v100;
    sub_228B69708(v100, v90);
    uint64_t v74 = v91;
    int v75 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v72, 1, v73);
    uint64_t v77 = v101;
    uint64_t v76 = v102;
    if (v75 == 1)
    {
      uint64_t v78 = v72;
      uint64_t v79 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
      uint64_t v80 = v103;
      v79(v78, v103);
      objc_msgSend(v89, sel_deselectAnnotation_animated_, v70, 0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v77, 1, 1, v73);
      MEMORY[0x22A6A6930](v25);
      sub_228B8B5E0(v77, v86);
      v79(v77, v80);
      sub_228BAD1E8();
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v83 = v88;
      (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v88, v72, v73);
      (*(void (**)(uint64_t, char *, uint64_t))(v74 + 16))(v77, v83, v73);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v74 + 56))(v77, 0, 1, v73);
      MEMORY[0x22A6A6930](v25);
      sub_228B8B5E0(v77, v86);
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v77, v103);
      sub_228BAD1E8();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v83, v73);
    }
    sub_228B3D868(v95, type metadata accessor for UserAnnotationViewModel);
    return (*(uint64_t (**)(char *, uint64_t))(v84[0] + 8))(v68, v25);
  }
}

void sub_228B3727C(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  sub_228B363E8(v6, v7);
}

void sub_228B372F8(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_msgSend(v3, sel_location);
  id v6 = v4;
  id v5 = objc_msgSend(v3, sel_heading);

  sub_228B1BE28(v4, v5, a1);
}

void sub_228B373A8(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  sub_228B372F8(v6, v7);
}

void *sub_228B37424(void *a1, uint64_t a2)
{
  void (*v21)(long long *__return_ptr, uint64_t *);
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  char v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  long long aBlock;
  long long v49;
  void (*v50)();
  uint64_t v51;

  id v3 = v2;
  char v46 = a1;
  id v5 = (void *)MEMORY[0x263F8EED0];
  uint64_t v6 = *MEMORY[0x263F8EED0] & *v3;
  uint64_t v7 = sub_228BAD2E8();
  uint64_t v44 = *(void *)(v7 - 8);
  unint64_t v45 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v42 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_228BAD308();
  id v41 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v40 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v10 = *(_OWORD *)(v6 + 488);
  uint64_t aBlock = *(_OWORD *)(v6 + 472);
  uint64_t v49 = v10;
  uint64_t v11 = type metadata accessor for MapSelectionManagerBox();
  uint64_t v37 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v36 - v12;
  uint64_t v14 = sub_228BAD218();
  uint64_t v39 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = sub_228BAD718();
  id v38 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v36 - v18;
  self;
  uint64_t v20 = swift_dynamicCastObjCClass();
  if (v20
    && (uint64_t v21 = *(void (**)(long long *__return_ptr, uint64_t *))((char *)v3 + *(void *)((*v5 & *v3) + 0x230))) != 0)
  {
    uint64_t v47 = v20;
    sub_228AD2688((uint64_t)v21);
    swift_unknownObjectRetain();
    v21(&aBlock, &v47);
    uint64_t v22 = *((void *)&v49 + 1);
    uint64_t v23 = (uint64_t)v50;
    id v24 = __swift_project_boxed_opaque_existential_1(&aBlock, *((uint64_t *)&v49 + 1));
    uint64_t v25 = sub_228B33530((uint64_t)v24, v46, v22, v23);
    sub_228AD2678((uint64_t)v21);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
  }
  else
  {
    uint64_t v25 = sub_228B1C06C(a2, v46);
    if (!v25)
    {
      self;
      if (swift_dynamicCastObjCClass())
      {
        sub_228B2CAF8((uint64_t)v19);
        uint64_t v26 = v39;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v19, 1, v14))
        {
          (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v17);
          uint64_t v27 = 0;
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v16, v19, v14);
          (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v17);
          MEMORY[0x22A6A6930](v14);
          (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v14);
          uint64_t v27 = sub_228B8B088(v11);
          (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v11);
        }
        sub_228AD25BC(0, &qword_268292FD0);
        uint64_t v28 = (void *)sub_228BAD688();
        uint64_t v29 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = v29;
        *(unsigned char *)(v30 + 24) = v27 & 1;
        uint64_t v50 = sub_228B3D180;
        int v51 = v30;
        *(void *)&uint64_t aBlock = MEMORY[0x263EF8330];
        *((void *)&aBlock + 1) = 1107296256;
        *(void *)&uint64_t v49 = sub_228B005F8;
        *((void *)&v49 + 1) = &block_descriptor_0;
        uint64_t v31 = _Block_copy(&aBlock);
        swift_release();
        uint64_t v32 = v40;
        sub_228BAD2F8();
        *(void *)&uint64_t aBlock = MEMORY[0x263F8EE78];
        sub_228B4CEAC(&qword_268292FD8, 255, MEMORY[0x263F8F030]);
        __swift_instantiateConcreteTypeFromMangledName(&qword_268292FE0);
        sub_228B0A36C(&qword_268292FE8, &qword_268292FE0);
        id v33 = v42;
        uint64_t v34 = v45;
        sub_228BAD768();
        MEMORY[0x22A6A6DF0](0, v32, v33, v31);
        _Block_release(v31);

        (*(void (**)(char *, uint64_t))(v44 + 8))(v33, v34);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v43);
      }
      return 0;
    }
  }
  return v25;
}

void sub_228B37AE4(uint64_t a1, char a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  id v4 = (void *)MEMORY[0x22A6A7CA0](v3);
  if (v4)
  {
    id v5 = v4;
    if (objc_msgSend(v4, sel_showsUserLocation))
    {
      id v6 = objc_msgSend(v5, sel_userLocation);
      id v7 = objc_msgSend(v5, sel_viewForAnnotation_, v6);

      objc_msgSend(v7, sel_setEnabled_, a2 & 1);
      id v5 = v7;
    }
  }
}

id sub_228B37BAC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_228B385BC(a1, a2, a3, a4, (uint64_t (*)(id, uint64_t))sub_228B37424);
}

id sub_228B37BC4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  swift_unknownObjectRetain();
  id v5 = a1;
  id v6 = sub_228B3E388();

  swift_unknownObjectRelease();

  return v6;
}

uint64_t sub_228B37C38()
{
  return 1;
}

id sub_228B37C40(void *a1)
{
  id v81 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292700);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v80 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UserAnnotationViewModel(0);
  uint64_t v78 = *(void *)(v3 - 8);
  uint64_t v79 = v3;
  MEMORY[0x270FA5388](v3);
  id v5 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292790);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CustomAnnotationViewModel(0);
  uint64_t v77 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292750);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for MarkerAnnotationViewModel(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  if (!swift_dynamicCastObjCClass())
  {
    uint64_t v73 = v16;
    uint64_t v74 = v15;
    uint64_t v69 = v11;
    uint64_t v70 = v18;
    int v75 = v14;
    uint64_t v76 = v5;
    uint64_t v71 = v9;
    uint64_t v72 = v8;
    uint64_t v20 = v79;
    type metadata accessor for MapBridgingMarker();
    uint64_t v21 = swift_dynamicCastClass();
    uint64_t v22 = v82;
    uint64_t v23 = (uint64_t)v80;
    if (v21)
    {
      uint64_t v24 = *(void *)((char *)v82 + qword_2682928D8 + 16);
      if (*(void *)(v24 + 16))
      {
        uint64_t v25 = v21;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v26 = sub_228AD1AD4(v25);
        uint64_t v27 = (uint64_t)v75;
        uint64_t v28 = v73;
        if (v29)
        {
          sub_228B4D098(*(void *)(v24 + 56) + *(void *)(v73 + 72) * v26, (uint64_t)v75, type metadata accessor for MarkerAnnotationViewModel);
          uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
          uint64_t v31 = v27;
          uint64_t v32 = 0;
        }
        else
        {
          uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56);
          uint64_t v31 = (uint64_t)v75;
          uint64_t v32 = 1;
        }
        uint64_t v33 = v74;
        v30(v31, v32, 1, v74);
        uint64_t v34 = (uint64_t)v70;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v27, 1, v33) != 1)
        {
          sub_228B4D404(v27, v34, type metadata accessor for MarkerAnnotationViewModel);
          int v19 = *(unsigned __int8 *)(v34 + 105);
          char v46 = type metadata accessor for MarkerAnnotationViewModel;
          uint64_t v47 = v34;
          goto LABEL_26;
        }
      }
      else
      {
        uint64_t v27 = (uint64_t)v75;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56))(v75, 1, 1, v74);
      }
      sub_228AC1A50(v27, &qword_268292750);
      uint64_t v23 = (uint64_t)v80;
    }
    type metadata accessor for MapBridgingCustomAnnotation();
    uint64_t v35 = swift_dynamicCastClass();
    uint64_t v36 = (uint64_t)v76;
    uint64_t v37 = v78;
    if (v35)
    {
      uint64_t v38 = *(void *)((char *)v22 + qword_2682928D0 + 16);
      if (*(void *)(v38 + 16))
      {
        uint64_t v39 = v35;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v40 = sub_228AD1B28(v39);
        uint64_t v41 = v71;
        if (v42)
        {
          uint64_t v43 = v77;
          uint64_t v44 = (uint64_t)v72;
          sub_228B4D098(*(void *)(v38 + 56) + *(void *)(v77 + 72) * v40, (uint64_t)v72, type metadata accessor for CustomAnnotationViewModel);
          uint64_t v45 = 0;
        }
        else
        {
          uint64_t v45 = 1;
          uint64_t v44 = (uint64_t)v72;
          uint64_t v43 = v77;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v44, v45, 1, v41);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        int v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v44, 1, v41);
        uint64_t v20 = v79;
        if (v48 != 1)
        {
          uint64_t v50 = (uint64_t)v69;
          sub_228B4D404(v44, (uint64_t)v69, type metadata accessor for CustomAnnotationViewModel);
          int v19 = *(unsigned __int8 *)(v50 + 121);
          char v46 = type metadata accessor for CustomAnnotationViewModel;
          uint64_t v47 = v50;
          goto LABEL_26;
        }
      }
      else
      {
        uint64_t v44 = (uint64_t)v72;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56))(v72, 1, 1, v71);
      }
      sub_228AC1A50(v44, &qword_268292790);
    }
    self;
    if (!swift_dynamicCastObjCClass()) {
      return 0;
    }
    sub_228B1B608(*(void *)((char *)v22 + qword_2682928E8 + 16), v23);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v23, 1, v20) == 1)
    {
      sub_228AC1A50(v23, &qword_268292700);
      return 0;
    }
    sub_228B4D404(v23, v36, type metadata accessor for UserAnnotationViewModel);
    int v19 = *(unsigned __int8 *)(v36 + 41);
    char v46 = type metadata accessor for UserAnnotationViewModel;
    uint64_t v47 = v36;
LABEL_26:
    sub_228B3D868(v47, v46);
    goto LABEL_27;
  }
  int v19 = *((unsigned __int8 *)v82 + *(void *)((*MEMORY[0x263F8EED0] & *v82) + 0x238));
LABEL_27:
  id v49 = 0;
  switch(v19)
  {
    case 3:
      id v54 = v81;
      while (1)
      {
        id v55 = objc_msgSend(v54, sel_nextResponder);
        if (!v55) {
          break;
        }
        id v56 = v55;

        self;
        uint64_t v57 = swift_dynamicCastObjCClass();
        id v54 = v56;
        if (v57)
        {
          id v58 = (id)v57;
LABEL_39:
          uint64_t v65 = self;
          sub_228AD25BC(0, &qword_268292FC8);
          id v52 = (id)sub_228BAD6C8();

          id v53 = objc_msgSend(v65, sel_mapItemDetailWithPresentationStyle_, v52);
          goto LABEL_40;
        }
      }
      id v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E10]), sel_init);

      goto LABEL_39;
    case 4:
      id v59 = v81;
      break;
    case 5:
      uint64_t v64 = self;
      id v52 = objc_msgSend(self, sel_openInMaps);
      id v53 = objc_msgSend(v64, sel_mapItemDetailWithPresentationStyle_, v52);
      goto LABEL_40;
    case 6:
      return v49;
    default:
      int v51 = self;
      sub_228AD25BC(0, &qword_268292FC8);
      id v52 = (id)sub_228BAD6B8();
      id v53 = objc_msgSend(v51, sel_mapItemDetailWithPresentationStyle_, v52);
LABEL_40:
      id v49 = v53;

      return v49;
  }
  while (1)
  {
    id v60 = objc_msgSend(v59, sel_nextResponder);
    if (!v60) {
      break;
    }
    id v61 = v60;

    self;
    uint64_t v62 = swift_dynamicCastObjCClass();
    id v59 = v61;
    if (v62)
    {
      id v63 = (id)v62;
      goto LABEL_43;
    }
  }
  id v63 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E10]), sel_init);

LABEL_43:
  int v67 = self;
  id v68 = objc_msgSend(self, sel_sheetPresentedFromViewController_, v63);

  id v49 = objc_msgSend(v67, sel_mapItemDetailWithPresentationStyle_, v68);
  return v49;
}

id sub_228B385A4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_228B385BC(a1, a2, a3, a4, (uint64_t (*)(id, uint64_t))sub_228B37C40);
}

id sub_228B385BC(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(id, uint64_t))
{
  id v8 = a3;
  swift_unknownObjectRetain();
  id v9 = a1;
  uint64_t v10 = (void *)a5(v8, a4);

  swift_unknownObjectRelease();

  return v10;
}

id sub_228B3863C()
{
  uint64_t v1 = (void *)MEMORY[0x263F8EED0];
  uint64_t v2 = (void *)(*MEMORY[0x263F8EED0] & *v0);
  swift_unknownObjectWeakInit();
  uint64_t v3 = (char *)v0 + *(void *)((*v1 & *v0) + 0x200);
  uint64_t v4 = type metadata accessor for _MapContentInputs(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  id v5 = (void *)((char *)v0 + *(void *)((*v1 & *v0) + 0x208));
  v5[1] = 0;
  uint64_t v5[2] = 0;
  *id v5 = 0;
  *((unsigned char *)v0 + *(void *)((*v1 & *v0) + 0x210)) = 0;
  uint64_t v6 = (char *)v0 + *(void *)((*v1 & *v0) + 0x218);
  uint64_t v8 = v2[60];
  uint64_t v9 = v2[61];
  uint64_t v10 = v2[62];
  uint64_t v18 = v2[59];
  uint64_t v7 = v18;
  uint64_t v19 = v8;
  uint64_t v20 = v9;
  uint64_t v21 = v10;
  type metadata accessor for MapSelectionManagerBox();
  uint64_t v11 = sub_228BAD218();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  *((unsigned char *)v0 + *(void *)((*v1 & *v0) + 0x220)) = 0;
  uint64_t v12 = (void *)((char *)v0 + *(void *)((*v1 & *v0) + 0x228));
  *uint64_t v12 = 0;
  v12[1] = 0;
  uint64_t v13 = (void *)((char *)v0 + *(void *)((*v1 & *v0) + 0x230));
  *uint64_t v13 = 0;
  v13[1] = 0;
  *((unsigned char *)v0 + *(void *)((*v1 & *v0) + 0x238)) = 6;
  uint64_t v14 = (char *)v0 + *(void *)((*v1 & *v0) + 0x240);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(qword_268292EA0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(void *)((char *)v0 + *(void *)((*v1 & *v0) + 0x248)) = MEMORY[0x263F8EE78];
  uint64_t v18 = v7;
  uint64_t v19 = v8;
  uint64_t v20 = v9;
  uint64_t v21 = v10;
  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for MapBridgingViewCoordinator();
  return objc_msgSendSuper2(&v17, sel_init);
}

id sub_228B3895C()
{
  return sub_228B3863C();
}

uint64_t sub_228B38980()
{
  uint64_t v1 = (void *)MEMORY[0x263F8EED0];
  swift_unknownObjectWeakDestroy();
  sub_228AC1A50((uint64_t)v0 + *(void *)((*v1 & *v0) + 0x200), &qword_268292F80);
  uint64_t v2 = (char *)v0 + *(void *)((*v1 & *v0) + 0x208);
  sub_228B3D40C(*(void *)v2, *((void *)v2 + 1), *((void *)v2 + 2));
  uint64_t v3 = (char *)v0 + *(void *)((*v1 & *v0) + 0x218);
  type metadata accessor for MapSelectionManagerBox();
  sub_228BAD218();
  uint64_t v4 = sub_228BAD718();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_228AD2678(*(void *)((char *)v0 + *(void *)((*v1 & *v0) + 0x228)));
  sub_228AD2678(*(void *)((char *)v0 + *(void *)((*v1 & *v0) + 0x230)));
  sub_228AC1A50((uint64_t)v0 + *(void *)((*v1 & *v0) + 0x240), &qword_268292F78);
  return swift_bridgeObjectRelease();
}

id sub_228B38B84()
{
  long long v2 = *(_OWORD *)((*MEMORY[0x263F8EED0] & *v0) + 0x1D8);
  long long v3 = *(_OWORD *)((*MEMORY[0x263F8EED0] & *v0) + 0x1E8);
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for MapBridgingViewCoordinator();
  return objc_msgSendSuper2(&v4, sel_dealloc, v2, v3);
}

uint64_t sub_228B38C08(void *a1)
{
  long long v2 = (void *)MEMORY[0x263F8EED0];
  swift_unknownObjectWeakDestroy();
  sub_228AC1A50((uint64_t)a1 + *(void *)((*v2 & *a1) + 0x200), &qword_268292F80);
  long long v3 = (char *)a1 + *(void *)((*v2 & *a1) + 0x208);
  sub_228B3D40C(*(void *)v3, *((void *)v3 + 1), *((void *)v3 + 2));
  objc_super v4 = (char *)a1 + *(void *)((*v2 & *a1) + 0x218);
  type metadata accessor for MapSelectionManagerBox();
  sub_228BAD218();
  uint64_t v5 = sub_228BAD718();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_228AD2678(*(void *)((char *)a1 + *(void *)((*v2 & *a1) + 0x228)));
  sub_228AD2678(*(void *)((char *)a1 + *(void *)((*v2 & *a1) + 0x230)));
  sub_228AC1A50((uint64_t)a1 + *(void *)((*v2 & *a1) + 0x240), &qword_268292F78);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for MapBridgingViewCoordinator()
{
  return swift_getGenericMetadata();
}

uint64_t sub_228B38E28()
{
  return swift_getWitnessTable();
}

uint64_t sub_228B38E88()
{
  return swift_getWitnessTable();
}

uint64_t sub_228B38EF4()
{
  type metadata accessor for MapSelectionManagerBox();
  sub_228BAD218();
  uint64_t result = sub_228BAD718();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_228B39014(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v5 = a3[2];
  uint64_t v6 = a3[3];
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(void *)(v6 - 8);
  int v9 = *(_DWORD *)(v8 + 80) | *(_DWORD *)(v7 + 80);
  uint64_t v10 = v9 & 0xF8 | 7u;
  if (*(_DWORD *)(v7 + 84)) {
    size_t v11 = *(void *)(*(void *)(a3[2] - 8) + 64);
  }
  else {
    size_t v11 = *(void *)(*(void *)(a3[2] - 8) + 64) + 1;
  }
  if (*(_DWORD *)(v8 + 84)) {
    size_t v12 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  else {
    size_t v12 = *(void *)(*(void *)(v6 - 8) + 64) + 1;
  }
  if (v11 <= v12) {
    unint64_t v13 = v12;
  }
  else {
    unint64_t v13 = v11;
  }
  if (v13 <= 8) {
    unint64_t v13 = 8;
  }
  unint64_t v69 = v13;
  uint64_t v14 = v13 + ((v10 + 16) & ~v10) + 1;
  uint64_t v15 = a3[4];
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(_DWORD *)(v16 + 80);
  unint64_t v18 = ((v17 + 9 + ((v14 + ((v10 + 104) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v17) + *(void *)(v16 + 64);
  int v19 = (*(_DWORD *)(v16 + 80) | v9) & 0x100000;
  uint64_t v20 = *a2;
  *a1 = *a2;
  if ((v17 | v10) == 7 && v19 == 0 && v18 <= 0x18)
  {
    uint64_t v62 = v6;
    uint64_t v63 = v7;
    uint64_t v64 = v5;
    uint64_t v65 = v17 + 9;
    size_t __n = v14;
    uint64_t v67 = v16;
    uint64_t v68 = v15;
    uint64_t v23 = ~v10;
    unint64_t v24 = a2[2];
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    sub_228B0596C(v24);
    a1[2] = v24;
    unint64_t v25 = ((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v26 = ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v27 = *(void *)(v26 + 24);
    LODWORD(v28) = -1;
    if (v27 < 0xFFFFFFFF) {
      uint64_t v28 = *(void *)(v26 + 24);
    }
    if ((int)v28 - 1 < 0)
    {
      if (v27)
      {
        *(void *)(v25 + 24) = v27;
        *(void *)(v25 + 32) = *(void *)(v26 + 32);
        (**(void (***)(unint64_t, unint64_t))(v27 - 8))(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8, ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
      }
      else
      {
        long long v32 = *(_OWORD *)v26;
        long long v33 = *(_OWORD *)(v26 + 16);
        *(void *)(v25 + 32) = *(void *)(v26 + 32);
        *(_OWORD *)unint64_t v25 = v32;
        *(_OWORD *)(v25 + 16) = v33;
      }
      uint64_t v34 = *(void *)(v26 + 40);
      *(unsigned char *)(v25 + 48) = *(unsigned char *)(v26 + 48);
      *(void *)(v25 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v34;
      uint64_t v35 = *(void *)(v26 + 56);
      *(unsigned char *)(v25 + 64) = *(unsigned char *)(v26 + 64);
      *(void *)(v25 + 56) = v35;
    }
    else
    {
      *(_OWORD *)unint64_t v25 = *(_OWORD *)v26;
      long long v29 = *(_OWORD *)(v26 + 16);
      long long v30 = *(_OWORD *)(v26 + 32);
      long long v31 = *(_OWORD *)(v26 + 48);
      *(unsigned char *)(v25 + 64) = *(unsigned char *)(v26 + 64);
      *(_OWORD *)(v25 + 32) = v30;
      *(_OWORD *)(v25 + 48) = v31;
      *(_OWORD *)(v25 + 16) = v29;
    }
    uint64_t v36 = ~v17;
    uint64_t v37 = (void *)(((unint64_t)a1 + 103) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v38 = (void *)(((unint64_t)a2 + 103) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v37 = *v38;
    uint64_t v39 = ((unint64_t)v37 + v10 + 8) & v23;
    uint64_t v40 = ((unint64_t)v38 + v10 + 8) & v23;
    uint64_t v41 = (void *)((v40 + 15) & 0xFFFFFFFFFFFFFFF8);
    if (*v41 < 0xFFFFFFFFuLL)
    {
      size_t v48 = __n;
      memcpy((void *)v39, (const void *)v40, __n);
      uint64_t v50 = v67;
      uint64_t v49 = v68;
      uint64_t v51 = v65;
LABEL_56:
      unint64_t v57 = ((v39 | 7) + v48) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v58 = ((v40 | 7) + v48) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v59 = *(void *)v58;
      *(unsigned char *)(v57 + 8) = *(unsigned char *)(v58 + 8);
      *(void *)unint64_t v57 = v59;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v50 + 16))((v51 + v57) & v36, (v51 + v58) & v36, v49);
      return a1;
    }
    uint64_t v61 = ((unint64_t)v38 + v10 + 8) & v23;
    *(void *)uint64_t v39 = *(void *)v40;
    char v42 = (void *)((v39 + 15) & 0xFFFFFFFFFFFFFFF8);
    *char v42 = *v41;
    uint64_t v43 = (void *)(((unint64_t)v42 + v10 + 8) & v23);
    uint64_t v44 = (unsigned __int8 *)(((unint64_t)v41 + v10 + 8) & v23);
    unsigned int v45 = v44[v69];
    swift_retain();
    swift_retain();
    if (v45 >= 3)
    {
      if (v69 <= 3) {
        uint64_t v46 = v69;
      }
      else {
        uint64_t v46 = 4;
      }
      switch(v46)
      {
        case 1:
          int v47 = *v44;
          goto LABEL_40;
        case 2:
          int v47 = *(unsigned __int16 *)v44;
          goto LABEL_40;
        case 3:
          int v47 = *(unsigned __int16 *)v44 | (v44[2] << 16);
          goto LABEL_40;
        case 4:
          int v47 = *(_DWORD *)v44;
LABEL_40:
          int v52 = (v47 | ((v45 - 3) << (8 * v69))) + 3;
          unsigned int v53 = v47 + 3;
          if (v69 >= 4) {
            unsigned int v45 = v53;
          }
          else {
            unsigned int v45 = v52;
          }
          break;
        default:
          break;
      }
    }
    if (v45 == 2)
    {
      size_t v48 = __n;
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v8 + 48))(v44, 1, v62))
      {
        memcpy(v43, v44, v12);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v8 + 16))(v43, v44, v62);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v43, 0, 1, v62);
      }
      char v56 = 2;
    }
    else
    {
      if (v45 != 1)
      {
        id v54 = *(void **)v44;
        *uint64_t v43 = *(void *)v44;
        *((unsigned char *)v43 + v69) = 0;
        id v55 = v54;
        uint64_t v50 = v67;
        uint64_t v49 = v68;
        size_t v48 = __n;
LABEL_55:
        uint64_t v51 = v65;
        uint64_t v40 = v61;
        goto LABEL_56;
      }
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v63 + 48))(v44, 1, v64))
      {
        memcpy(v43, v44, v11);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v63 + 16))(v43, v44, v64);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v43, 0, 1, v64);
      }
      size_t v48 = __n;
      char v56 = 1;
    }
    *((unsigned char *)v43 + v69) = v56;
    uint64_t v50 = v67;
    uint64_t v49 = v68;
    goto LABEL_55;
  }
  a1 = (uint64_t *)(v20 + (((v17 | v10) + 16) & ~(v17 | v10)));
  swift_retain();
  return a1;
}

uint64_t sub_228B395C0(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  sub_228B05A34(*(void *)(a1 + 16));
  unint64_t v4 = (a1 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = *(void *)(v4 + 24);
  LODWORD(v6) = -1;
  if (v5 < 0xFFFFFFFF) {
    uint64_t v6 = *(void *)(v4 + 24);
  }
  if ((int)v6 - 1 < 0 && v5) {
    __swift_destroy_boxed_opaque_existential_0(v4);
  }
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v37 = a2;
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t v11 = (*(_DWORD *)(v10 + 80) | *(_DWORD *)(v9 + 80)) & 0xF8 | 7u;
  uint64_t v12 = ~v11;
  unint64_t v13 = (v11 + 8 + ((a1 + 103) & 0xFFFFFFFFFFFFFFF8)) & ~v11;
  int v14 = *(_DWORD *)(v9 + 84);
  unint64_t v15 = *(void *)(v9 + 64);
  int v16 = *(_DWORD *)(v10 + 84);
  unint64_t v17 = *(void *)(v10 + 64);
  unint64_t v18 = (void *)((v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v18 <= 0xFFFFFFFEuLL)
  {
    if (v14) {
      unint64_t v27 = *(void *)(*(void *)(v8 - 8) + 64);
    }
    else {
      unint64_t v27 = v15 + 1;
    }
    if (v16) {
      unint64_t v28 = *(void *)(*(void *)(v7 - 8) + 64);
    }
    else {
      unint64_t v28 = v17 + 1;
    }
    if (v27 <= v28) {
      unint64_t v27 = v28;
    }
    if (v27 <= 8) {
      uint64_t v22 = 8;
    }
    else {
      uint64_t v22 = v27;
    }
    uint64_t v29 = v37;
  }
  else
  {
    uint64_t v35 = v7;
    uint64_t v36 = v8;
    swift_release();
    swift_release();
    if (v14) {
      unint64_t v19 = v15;
    }
    else {
      unint64_t v19 = v15 + 1;
    }
    uint64_t v20 = (id *)(((unint64_t)v18 + v11 + 8) & ~v11);
    if (v16) {
      unint64_t v21 = v17;
    }
    else {
      unint64_t v21 = v17 + 1;
    }
    if (v19 <= v21) {
      unint64_t v19 = v21;
    }
    if (v19 <= 8) {
      uint64_t v22 = 8;
    }
    else {
      uint64_t v22 = v19;
    }
    unsigned int v23 = *((unsigned __int8 *)v20 + v22);
    unsigned int v24 = v23 - 3;
    if (v23 >= 3)
    {
      if (v22 <= 3) {
        uint64_t v25 = v22;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *(unsigned __int8 *)v20;
          goto LABEL_39;
        case 2:
          int v26 = *(unsigned __int16 *)v20;
          goto LABEL_39;
        case 3:
          int v26 = *(unsigned __int16 *)(((unint64_t)v18 + v11 + 8) & ~v11) | (*(unsigned __int8 *)((((unint64_t)v18 + v11 + 8) & ~v11) + 2) << 16);
          goto LABEL_39;
        case 4:
          int v26 = *(_DWORD *)v20;
LABEL_39:
          int v30 = (v26 | (v24 << (8 * v22))) + 3;
          unsigned int v23 = v26 + 3;
          if (v22 < 4) {
            unsigned int v23 = v30;
          }
          break;
        default:
          break;
      }
    }
    if (v23 == 2)
    {
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v10 + 48))(v20, 1, v35)) {
        (*(void (**)(id *, uint64_t))(v10 + 8))(v20, v35);
      }
    }
    else if (v23 == 1)
    {
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v9 + 48))(v20, 1, v36)) {
        (*(void (**)(id *, uint64_t))(v9 + 8))(v20, v36);
      }
    }
    else
    {
    }
    uint64_t v12 = ~v11;
    uint64_t v29 = v37;
  }
  uint64_t v31 = *(void *)(*(void *)(v29 + 32) - 8);
  long long v32 = *(uint64_t (**)(unint64_t))(v31 + 8);
  unint64_t v33 = (((v13 + ((v11 + 16) & v12) + v22 + 8) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v31 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);

  return v32(v33);
}

void *sub_228B3992C(void *a1, void *a2, void *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  unint64_t v7 = a2[2];
  swift_retain();
  swift_retain();
  sub_228B0596C(v7);
  a1[2] = v7;
  unint64_t v8 = ((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = *(void *)(v9 + 24);
  LODWORD(v11) = -1;
  if (v10 < 0xFFFFFFFF) {
    uint64_t v11 = *(void *)(v9 + 24);
  }
  if ((int)v11 - 1 < 0)
  {
    if (v10)
    {
      *(void *)(v8 + 24) = v10;
      *(void *)(v8 + 32) = *(void *)(v9 + 32);
      (**(void (***)(unint64_t, unint64_t))(v10 - 8))(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8, ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
    }
    else
    {
      long long v15 = *(_OWORD *)v9;
      long long v16 = *(_OWORD *)(v9 + 16);
      *(void *)(v8 + 32) = *(void *)(v9 + 32);
      *(_OWORD *)unint64_t v8 = v15;
      *(_OWORD *)(v8 + 16) = v16;
    }
    uint64_t v17 = *(void *)(v9 + 40);
    *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
    *(void *)(v8 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v17;
    uint64_t v18 = *(void *)(v9 + 56);
    *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
    *(void *)(v8 + 56) = v18;
  }
  else
  {
    *(_OWORD *)unint64_t v8 = *(_OWORD *)v9;
    long long v12 = *(_OWORD *)(v9 + 16);
    long long v13 = *(_OWORD *)(v9 + 32);
    long long v14 = *(_OWORD *)(v9 + 48);
    *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
    *(_OWORD *)(v8 + 32) = v13;
    *(_OWORD *)(v8 + 48) = v14;
    *(_OWORD *)(v8 + 16) = v12;
  }
  unint64_t v19 = (void *)(((unint64_t)a1 + 103) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void *)(((unint64_t)a2 + 103) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v19 = *v20;
  uint64_t v21 = *(void *)(a3[2] - 8);
  uint64_t v22 = *(void *)(a3[3] - 8);
  uint64_t v23 = (*(_DWORD *)(v22 + 80) | *(_DWORD *)(v21 + 80)) & 0xF8 | 7u;
  uint64_t v24 = v23 + 8;
  uint64_t v25 = ((unint64_t)v19 + v23 + 8) & ~v23;
  uint64_t v26 = ((unint64_t)v20 + v23 + 8) & ~v23;
  int v27 = *(_DWORD *)(v21 + 84);
  uint64_t v28 = *(void *)(v21 + 64);
  int v29 = *(_DWORD *)(v22 + 84);
  unint64_t v30 = *(void *)(v22 + 64);
  uint64_t v31 = (v23 + 16) & ~v23;
  long long v32 = (void *)((v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v32 >= 0xFFFFFFFFuLL)
  {
    uint64_t v58 = a3[3];
    uint64_t v59 = a3[2];
    uint64_t v60 = (v23 + 16) & ~v23;
    uint64_t v61 = a3;
    uint64_t v33 = ~v23;
    if (v27) {
      size_t v34 = *(void *)(*(void *)(a3[2] - 8) + 64);
    }
    else {
      size_t v34 = v28 + 1;
    }
    BOOL v35 = v29 == 0;
    *(void *)uint64_t v25 = *(void *)v26;
    uint64_t v36 = (void *)((v25 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v36 = *v32;
    uint64_t v37 = (void *)(((unint64_t)v36 + v24) & v33);
    uint64_t v38 = (unsigned __int8 *)(((unint64_t)v32 + v24) & v33);
    if (v35) {
      size_t v39 = v30 + 1;
    }
    else {
      size_t v39 = v30;
    }
    size_t __n = v34;
    if (v34 <= v39) {
      unint64_t v40 = v39;
    }
    else {
      unint64_t v40 = v34;
    }
    if (v40 <= 8) {
      uint64_t v41 = 8;
    }
    else {
      uint64_t v41 = v40;
    }
    unsigned int v42 = v38[v41];
    swift_retain();
    swift_retain();
    if (v42 >= 3)
    {
      if (v41 <= 3) {
        uint64_t v43 = v41;
      }
      else {
        uint64_t v43 = 4;
      }
      switch(v43)
      {
        case 1:
          int v44 = *v38;
          goto LABEL_42;
        case 2:
          int v44 = *(unsigned __int16 *)v38;
          goto LABEL_42;
        case 3:
          int v44 = *(unsigned __int16 *)v38 | (v38[2] << 16);
          goto LABEL_42;
        case 4:
          int v44 = *(_DWORD *)v38;
LABEL_42:
          int v46 = (v44 | ((v42 - 3) << (8 * v41))) + 3;
          unsigned int v47 = v44 + 3;
          if (v41 >= 4) {
            unsigned int v42 = v47;
          }
          else {
            unsigned int v42 = v46;
          }
          break;
        default:
          break;
      }
    }
    if (v42 == 2)
    {
      a3 = v61;
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v22 + 48))(v38, 1, v58))
      {
        memcpy(v37, v38, v39);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v22 + 16))(v37, v38, v58);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v37, 0, 1, v58);
      }
      char v50 = 2;
    }
    else
    {
      if (v42 != 1)
      {
        size_t v48 = *(void **)v38;
        *uint64_t v37 = *(void *)v38;
        *((unsigned char *)v37 + v41) = 0;
        id v49 = v48;
        a3 = v61;
LABEL_57:
        uint64_t v31 = v60;
        goto LABEL_58;
      }
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v21 + 48))(v38, 1, v59))
      {
        memcpy(v37, v38, __n);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v21 + 16))(v37, v38, v59);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v37, 0, 1, v59);
      }
      a3 = v61;
      char v50 = 1;
    }
    *((unsigned char *)v37 + v41) = v50;
    goto LABEL_57;
  }
  if (v27) {
    unint64_t v45 = *(void *)(*(void *)(a3[2] - 8) + 64);
  }
  else {
    unint64_t v45 = v28 + 1;
  }
  if (!v29) {
    ++v30;
  }
  if (v45 > v30) {
    unint64_t v30 = v45;
  }
  if (v30 <= 8) {
    uint64_t v41 = 8;
  }
  else {
    uint64_t v41 = v30;
  }
  memcpy((void *)v25, (const void *)v26, (v31 | 1) + v41);
LABEL_58:
  uint64_t v51 = (v31 | 1) + v41;
  unint64_t v52 = ((v25 | 7) + v51) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v53 = ((v26 | 7) + v51) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v54 = *(void *)v53;
  *(unsigned char *)(v52 + 8) = *(unsigned char *)(v53 + 8);
  *(void *)unint64_t v52 = v54;
  uint64_t v55 = *(void *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v55 + 16))((*(unsigned __int8 *)(v55 + 80) + 9 + v52) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80), (*(unsigned __int8 *)(v55 + 80) + 9 + v53) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
  return a1;
}

void *sub_228B39E38(void *a1, void *a2, void *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  unint64_t v6 = a2[2];
  sub_228B0596C(v6);
  unint64_t v7 = a1[2];
  a1[2] = v6;
  sub_228B05A34(v7);
  unint64_t v8 = ((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = *(void *)(v8 + 24);
  LODWORD(v11) = -1;
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v12) = -1;
  }
  else {
    uint64_t v12 = *(void *)(v8 + 24);
  }
  int v13 = v12 - 1;
  unint64_t v14 = *(void *)(v9 + 24);
  if (v14 < 0xFFFFFFFF) {
    uint64_t v11 = *(void *)(v9 + 24);
  }
  int v15 = v11 - 1;
  if ((v13 & 0x80000000) == 0)
  {
    if (v15 < 0) {
      goto LABEL_8;
    }
LABEL_13:
    *(_OWORD *)unint64_t v8 = *(_OWORD *)v9;
    long long v16 = *(_OWORD *)(v9 + 16);
    long long v17 = *(_OWORD *)(v9 + 32);
    long long v18 = *(_OWORD *)(v9 + 48);
    *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
    *(_OWORD *)(v8 + 32) = v17;
    *(_OWORD *)(v8 + 48) = v18;
    *(_OWORD *)(v8 + 16) = v16;
    goto LABEL_20;
  }
  if ((v15 & 0x80000000) == 0)
  {
    if (v10) {
      __swift_destroy_boxed_opaque_existential_0(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
    }
    goto LABEL_13;
  }
  if (v10)
  {
    unint64_t v19 = (uint64_t *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
    if (v14)
    {
      __swift_assign_boxed_opaque_existential_1(v19, (uint64_t *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8));
      goto LABEL_19;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
LABEL_18:
    long long v20 = *(_OWORD *)v9;
    long long v21 = *(_OWORD *)(v9 + 16);
    *(void *)(v8 + 32) = *(void *)(v9 + 32);
    *(_OWORD *)unint64_t v8 = v20;
    *(_OWORD *)(v8 + 16) = v21;
    goto LABEL_19;
  }
LABEL_8:
  if (!v14) {
    goto LABEL_18;
  }
  *(void *)(v8 + 24) = v14;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  (**(void (***)(unint64_t, unint64_t))(v14 - 8))(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8, ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
LABEL_19:
  uint64_t v22 = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v22;
  uint64_t v23 = *(void *)(v9 + 56);
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  *(void *)(v8 + 56) = v23;
LABEL_20:
  uint64_t v24 = (void *)(((unint64_t)a1 + 103) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = (void *)(((unint64_t)a2 + 103) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v24 = *v25;
  uint64_t v96 = a3[3];
  uint64_t v97 = *(void *)(a3[2] - 8);
  uint64_t v26 = *(void *)(v96 - 8);
  uint64_t v27 = (*(_DWORD *)(v26 + 80) | *(_DWORD *)(v97 + 80)) & 0xF8 | 7u;
  uint64_t v28 = v27 + 8;
  uint64_t v29 = ~v27;
  unint64_t v30 = (void *)(((unint64_t)v24 + v27 + 8) & ~v27);
  uint64_t v31 = (void *)(((unint64_t)v25 + v27 + 8) & ~v27);
  int v32 = *(_DWORD *)(v97 + 84);
  size_t v33 = *(void *)(v97 + 64);
  uint64_t v95 = v26;
  int v34 = *(_DWORD *)(v26 + 84);
  size_t v35 = *(void *)(v26 + 64);
  uint64_t v101 = (v27 + 16) & ~v27;
  uint64_t v36 = (void *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v37 = (unint64_t *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v38 = *v37;
  if (*v36 >= 0xFFFFFFFFuLL)
  {
    uint64_t v93 = a3[2];
    __src = v31;
    long long v99 = a3;
    if (v38 >= 0xFFFFFFFF)
    {
      uint64_t v92 = ((unint64_t)v24 + v27 + 8) & ~v27;
      void *v30 = *v31;
      swift_retain();
      swift_release();
      *uint64_t v36 = *v37;
      swift_retain();
      swift_release();
      if (!v32) {
        ++v33;
      }
      size_t v39 = (unsigned __int8 *)(((unint64_t)v36 + v28) & v29);
      unint64_t v40 = (unsigned __int8 *)(((unint64_t)v37 + v28) & v29);
      if (!v34) {
        ++v35;
      }
      if (v33 <= v35) {
        unint64_t v41 = v35;
      }
      else {
        unint64_t v41 = v33;
      }
      if (v41 <= 8) {
        uint64_t v42 = 8;
      }
      else {
        uint64_t v42 = v41;
      }
      if (v39 == v40) {
        goto LABEL_156;
      }
      unsigned int v43 = v39[v42];
      unsigned int v44 = v43 - 3;
      if (v43 < 3)
      {
        uint64_t v46 = v97;
LABEL_91:
        if (v43 == 2)
        {
LABEL_131:
          if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v95 + 48))(v39, 1, v96)) {
            (*(void (**)(unsigned __int8 *, uint64_t))(v95 + 8))(v39, v96);
          }
          goto LABEL_133;
        }
      }
      else
      {
        if (v42 <= 3) {
          uint64_t v45 = v42;
        }
        else {
          uint64_t v45 = 4;
        }
        uint64_t v46 = v97;
        switch(v45)
        {
          case 1:
            int v47 = *v39;
            break;
          case 2:
            int v47 = *(unsigned __int16 *)v39;
            break;
          case 3:
            int v47 = *(unsigned __int16 *)v39 | (v39[2] << 16);
            break;
          case 4:
            int v47 = *(_DWORD *)v39;
            break;
          default:
            goto LABEL_91;
        }
        int v77 = (v47 | (v44 << (8 * v42))) + 3;
        unsigned int v43 = v47 + 3;
        if (v42 < 4) {
          unsigned int v43 = v77;
        }
        if (v43 == 2) {
          goto LABEL_131;
        }
      }
      if (v43 == 1)
      {
        if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v46 + 48))(v39, 1, v93)) {
          (*(void (**)(unsigned __int8 *, uint64_t))(v46 + 8))(v39, v93);
        }
      }
      else
      {
      }
LABEL_133:
      unsigned int v78 = v40[v42];
      unsigned int v79 = v78 - 3;
      if (v78 >= 3)
      {
        if (v42 <= 3) {
          uint64_t v80 = v42;
        }
        else {
          uint64_t v80 = 4;
        }
        switch(v80)
        {
          case 1:
            int v81 = *v40;
            goto LABEL_142;
          case 2:
            int v81 = *(unsigned __int16 *)v40;
            goto LABEL_142;
          case 3:
            int v81 = *(unsigned __int16 *)v40 | (v40[2] << 16);
            goto LABEL_142;
          case 4:
            int v81 = *(_DWORD *)v40;
LABEL_142:
            int v82 = (v81 | (v79 << (8 * v42))) + 3;
            unsigned int v78 = v81 + 3;
            if (v42 < 4) {
              unsigned int v78 = v82;
            }
            break;
          default:
            break;
        }
      }
      if (v78 == 2)
      {
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v95 + 48))(v40, 1, v96))
        {
          memcpy(v39, v40, v35);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v95 + 16))(v39, v40, v96);
          (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v95 + 56))(v39, 0, 1, v96);
        }
        char v85 = 2;
      }
      else
      {
        if (v78 != 1)
        {
          uint64_t v83 = *(void **)v40;
          *(void *)size_t v39 = *(void *)v40;
          v39[v42] = 0;
          id v84 = v83;
LABEL_156:
          a3 = v99;
          uint64_t v68 = v92;
          goto LABEL_157;
        }
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v46 + 48))(v40, 1, v93))
        {
          memcpy(v39, v40, v33);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v46 + 16))(v39, v40, v93);
          (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v46 + 56))(v39, 0, 1, v93);
        }
        char v85 = 1;
      }
      v39[v42] = v85;
      goto LABEL_156;
    }
    uint64_t v55 = (void *)(((unint64_t)v24 + v27 + 8) & ~v27);
    swift_release();
    swift_release();
    if (v32) {
      unint64_t v56 = v33;
    }
    else {
      unint64_t v56 = v33 + 1;
    }
    unint64_t v57 = (unsigned __int8 *)(((unint64_t)v36 + v28) & v29);
    if (v34) {
      size_t v58 = v35;
    }
    else {
      size_t v58 = v35 + 1;
    }
    if (v56 <= v58) {
      unint64_t v56 = v58;
    }
    if (v56 <= 8) {
      uint64_t v42 = 8;
    }
    else {
      uint64_t v42 = v56;
    }
    unsigned int v59 = v57[v42];
    unsigned int v60 = v59 - 3;
    if (v59 < 3)
    {
      uint64_t v62 = v101;
      uint64_t v63 = v97;
LABEL_86:
      if (v59 == 2)
      {
LABEL_121:
        uint64_t v63 = v95;
        uint64_t v69 = v96;
        int v70 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v95 + 48))(v57, 1, v96);
        goto LABEL_122;
      }
    }
    else
    {
      if (v42 <= 3) {
        uint64_t v61 = v42;
      }
      else {
        uint64_t v61 = 4;
      }
      uint64_t v62 = v101;
      uint64_t v63 = v97;
      switch(v61)
      {
        case 1:
          int v64 = *v57;
          break;
        case 2:
          int v64 = *(unsigned __int16 *)v57;
          break;
        case 3:
          int v64 = *(unsigned __int16 *)v57 | (v57[2] << 16);
          break;
        case 4:
          int v64 = *(_DWORD *)v57;
          break;
        default:
          goto LABEL_86;
      }
      int v76 = (v64 | (v60 << (8 * v42))) + 3;
      unsigned int v59 = v64 + 3;
      if (v42 < 4) {
        unsigned int v59 = v76;
      }
      if (v59 == 2) {
        goto LABEL_121;
      }
    }
    if (v59 != 1)
    {

LABEL_124:
      uint64_t v68 = (uint64_t)v55;
      unint64_t v67 = (unint64_t)__src;
      memcpy(v55, __src, (v62 | 1) + v42);
      a3 = v99;
      goto LABEL_158;
    }
    uint64_t v69 = v93;
    int v70 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v63 + 48))(v57, 1, v93);
LABEL_122:
    if (!v70) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v63 + 8))(v57, v69);
    }
    goto LABEL_124;
  }
  if (v38 >= 0xFFFFFFFF)
  {
    uint64_t v94 = a3[2];
    __src = v31;
    uint64_t v100 = a3;
    if (!v32) {
      ++v33;
    }
    uint64_t v48 = ((unint64_t)v24 + v27 + 8) & ~v27;
    void *v30 = *v31;
    *uint64_t v36 = *v37;
    id v49 = (void *)(((unint64_t)v36 + v28) & v29);
    char v50 = (unsigned __int8 *)(((unint64_t)v37 + v28) & v29);
    if (!v34) {
      ++v35;
    }
    if (v33 <= v35) {
      unint64_t v51 = v35;
    }
    else {
      unint64_t v51 = v33;
    }
    if (v51 <= 8) {
      uint64_t v42 = 8;
    }
    else {
      uint64_t v42 = v51;
    }
    unsigned int v52 = v50[v42];
    swift_retain();
    swift_retain();
    if (v52 >= 3)
    {
      if (v42 <= 3) {
        uint64_t v53 = v42;
      }
      else {
        uint64_t v53 = 4;
      }
      switch(v53)
      {
        case 1:
          int v54 = *v50;
          goto LABEL_99;
        case 2:
          int v54 = *(unsigned __int16 *)v50;
          goto LABEL_99;
        case 3:
          int v54 = *(unsigned __int16 *)v50 | (v50[2] << 16);
          goto LABEL_99;
        case 4:
          int v54 = *(_DWORD *)v50;
LABEL_99:
          int v71 = (v54 | ((v52 - 3) << (8 * v42))) + 3;
          unsigned int v72 = v54 + 3;
          if (v42 >= 4) {
            unsigned int v52 = v72;
          }
          else {
            unsigned int v52 = v71;
          }
          break;
        default:
          break;
      }
    }
    if (v52 == 2)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v95 + 48))(v50, 1, v96))
      {
        memcpy(v49, v50, v35);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v95 + 16))(v49, v50, v96);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(v49, 0, 1, v96);
      }
      char v75 = 2;
    }
    else
    {
      if (v52 != 1)
      {
        uint64_t v73 = *(void **)v50;
        *id v49 = *(void *)v50;
        *((unsigned char *)v49 + v42) = 0;
        id v74 = v73;
LABEL_114:
        a3 = v100;
        uint64_t v68 = v48;
LABEL_157:
        unint64_t v67 = (unint64_t)__src;
        uint64_t v62 = v101;
        goto LABEL_158;
      }
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v97 + 48))(v50, 1, v94))
      {
        memcpy(v49, v50, v33);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v97 + 16))(v49, v50, v94);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v97 + 56))(v49, 0, 1, v94);
      }
      char v75 = 1;
    }
    *((unsigned char *)v49 + v42) = v75;
    goto LABEL_114;
  }
  if (v32) {
    unint64_t v65 = *(void *)(*(void *)(a3[2] - 8) + 64);
  }
  else {
    unint64_t v65 = v33 + 1;
  }
  if (v34) {
    unint64_t v66 = *(void *)(v26 + 64);
  }
  else {
    unint64_t v66 = v35 + 1;
  }
  if (v65 <= v66) {
    unint64_t v65 = v66;
  }
  if (v65 <= 8) {
    uint64_t v42 = 8;
  }
  else {
    uint64_t v42 = v65;
  }
  uint64_t v62 = (v27 + 16) & ~v27;
  unint64_t v67 = (unint64_t)v31;
  uint64_t v68 = ((unint64_t)v24 + v27 + 8) & ~v27;
  memcpy(v30, v31, (v101 | 1) + v42);
LABEL_158:
  uint64_t v86 = (v62 | 1) + v42;
  unint64_t v87 = ((v68 | 7) + v86) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v88 = ((v67 | 7) + v86) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v89 = *(void *)v88;
  *(unsigned char *)(v87 + 8) = *(unsigned char *)(v88 + 8);
  *(void *)unint64_t v87 = v89;
  uint64_t v90 = *(void *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v90 + 24))((*(unsigned __int8 *)(v90 + 80) + 9 + v87) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80), (*(unsigned __int8 *)(v90 + 80) + 9 + v88) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80));
  return a1;
}

uint64_t sub_228B3A8BC(uint64_t a1, uint64_t a2, void *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  unint64_t v5 = (a1 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (a2 + 31) & 0xFFFFFFFFFFFFFFF8;
  long long v8 = *(_OWORD *)(v6 + 32);
  long long v7 = *(_OWORD *)(v6 + 48);
  long long v9 = *(_OWORD *)(v6 + 16);
  *(unsigned char *)(v5 + 64) = *(unsigned char *)(v6 + 64);
  *(_OWORD *)(v5 + 32) = v8;
  *(_OWORD *)(v5 + 48) = v7;
  *(_OWORD *)(v5 + 16) = v9;
  *(_OWORD *)unint64_t v5 = *(_OWORD *)v6;
  unint64_t v10 = (void *)((a1 + 103) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)((a2 + 103) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v10 = *v11;
  uint64_t v12 = a3[2];
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = a3[3];
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = (*(_DWORD *)(v15 + 80) | *(_DWORD *)(v13 + 80)) & 0xF8 | 7u;
  uint64_t v17 = v16 + 8;
  uint64_t v18 = ((unint64_t)v10 + v16 + 8) & ~v16;
  uint64_t v19 = ((unint64_t)v11 + v16 + 8) & ~v16;
  int v20 = *(_DWORD *)(v13 + 84);
  uint64_t v21 = *(void *)(v13 + 64);
  int v22 = *(_DWORD *)(v15 + 84);
  unint64_t v23 = *(void *)(v15 + 64);
  uint64_t v24 = (v16 + 16) & ~v16;
  uint64_t v25 = (void *)((v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v25 >= 0xFFFFFFFFuLL)
  {
    uint64_t v48 = (v16 + 16) & ~v16;
    uint64_t v49 = v18;
    uint64_t v26 = ~v16;
    if (v20) {
      size_t v27 = *(void *)(*(void *)(v12 - 8) + 64);
    }
    else {
      size_t v27 = v21 + 1;
    }
    BOOL v28 = v22 == 0;
    *(void *)uint64_t v18 = *(void *)v19;
    uint64_t v29 = (void *)((v18 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v29 = *v25;
    __dst = (void *)(((unint64_t)v29 + v17) & v26);
    unint64_t v30 = (unsigned __int8 *)(((unint64_t)v25 + v17) & v26);
    if (v28) {
      size_t v31 = v23 + 1;
    }
    else {
      size_t v31 = v23;
    }
    if (v27 <= v31) {
      unint64_t v32 = v31;
    }
    else {
      unint64_t v32 = v27;
    }
    if (v32 <= 8) {
      uint64_t v33 = 8;
    }
    else {
      uint64_t v33 = v32;
    }
    unsigned int v34 = v30[v33];
    unsigned int v35 = v34 - 3;
    if (v34 >= 3)
    {
      if (v33 <= 3) {
        uint64_t v36 = v33;
      }
      else {
        uint64_t v36 = 4;
      }
      switch(v36)
      {
        case 1:
          int v37 = *v30;
          goto LABEL_34;
        case 2:
          int v37 = *(unsigned __int16 *)v30;
          goto LABEL_34;
        case 3:
          int v37 = *(unsigned __int16 *)v30 | (v30[2] << 16);
          goto LABEL_34;
        case 4:
          int v37 = *(_DWORD *)v30;
LABEL_34:
          int v39 = (v37 | (v35 << (8 * v33))) + 3;
          unsigned int v34 = v37 + 3;
          if (v33 < 4) {
            unsigned int v34 = v39;
          }
          break;
        default:
          break;
      }
    }
    if (v34 == 2)
    {
      uint64_t v24 = v48;
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48))(v30, 1, v14))
      {
        memcpy(__dst, v30, v31);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v15 + 32))(__dst, v30, v14);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
      }
      *((unsigned char *)__dst + v33) = 2;
    }
    else
    {
      if (v34 == 1)
      {
        uint64_t v40 = v12;
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t))(v13 + 48))(v30, 1))
        {
          memcpy(__dst, v30, v27);
        }
        else
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v13 + 32))(__dst, v30, v40);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v40);
        }
        uint64_t v24 = v48;
        uint64_t v18 = v49;
        *((unsigned char *)__dst + v33) = 1;
        goto LABEL_48;
      }
      uint64_t v24 = v48;
      void *__dst = *(void *)v30;
      *((unsigned char *)__dst + v33) = 0;
    }
    uint64_t v18 = v49;
    goto LABEL_48;
  }
  if (v20) {
    unint64_t v38 = *(void *)(*(void *)(v12 - 8) + 64);
  }
  else {
    unint64_t v38 = v21 + 1;
  }
  if (!v22) {
    ++v23;
  }
  if (v38 > v23) {
    unint64_t v23 = v38;
  }
  if (v23 <= 8) {
    uint64_t v33 = 8;
  }
  else {
    uint64_t v33 = v23;
  }
  memcpy((void *)v18, (const void *)v19, (v24 | 1) + v33);
LABEL_48:
  uint64_t v41 = (v24 | 1) + v33;
  unint64_t v42 = ((v18 | 7) + v41) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v43 = ((v19 | 7) + v41) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v44 = *(void *)v43;
  *(unsigned char *)(v42 + 8) = *(unsigned char *)(v43 + 8);
  *(void *)unint64_t v42 = v44;
  uint64_t v45 = *(void *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v45 + 32))((*(unsigned __int8 *)(v45 + 80) + 9 + v42) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80), (*(unsigned __int8 *)(v45 + 80) + 9 + v43) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
  return a1;
}

void *sub_228B3AD18(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  unint64_t v6 = a1[2];
  a1[2] = a2[2];
  sub_228B05A34(v6);
  unint64_t v7 = ((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = *(void *)(v7 + 24);
  LODWORD(v1__isPlatformVersionAtLeast(2, 18, 1, 0) = -1;
  if (v9 < 0xFFFFFFFF) {
    uint64_t v10 = *(void *)(v7 + 24);
  }
  if ((int)v10 - 1 >= 0) {
    goto LABEL_4;
  }
  unint64_t v50 = *(void *)(v8 + 24);
  if (v50 >= 0xFFFFFFFF) {
    LODWORD(v5__isPlatformVersionAtLeast(2, 18, 1, 0) = -1;
  }
  if ((int)v50 - 1 >= 0)
  {
    if (v9) {
      __swift_destroy_boxed_opaque_existential_0(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
    }
LABEL_4:
    *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
    long long v11 = *(_OWORD *)(v8 + 16);
    long long v12 = *(_OWORD *)(v8 + 32);
    long long v13 = *(_OWORD *)(v8 + 48);
    *(unsigned char *)(v7 + 64) = *(unsigned char *)(v8 + 64);
    *(_OWORD *)(v7 + 32) = v12;
    *(_OWORD *)(v7 + 48) = v13;
    *(_OWORD *)(v7 + 16) = v11;
    goto LABEL_5;
  }
  if (v9) {
    __swift_destroy_boxed_opaque_existential_0(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
  }
  long long v66 = *(_OWORD *)v8;
  long long v67 = *(_OWORD *)(v8 + 16);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(_OWORD *)unint64_t v7 = v66;
  *(_OWORD *)(v7 + 16) = v67;
  uint64_t v68 = *(void *)(v8 + 40);
  *(unsigned char *)(v7 + 48) = *(unsigned char *)(v8 + 48);
  *(void *)(v7 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v68;
  uint64_t v69 = *(void *)(v8 + 56);
  *(unsigned char *)(v7 + 64) = *(unsigned char *)(v8 + 64);
  *(void *)(v7 + 56) = v69;
LABEL_5:
  uint64_t v14 = (void *)(((unint64_t)a1 + 103) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)(((unint64_t)a2 + 103) & 0xFFFFFFFFFFFFFFF8);
  void *v14 = *v15;
  uint64_t v16 = *(void *)(a3 + 16);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v97 = a3;
  uint64_t v95 = *(void *)(a3 + 24);
  uint64_t v18 = *(void *)(v95 - 8);
  uint64_t v19 = (*(_DWORD *)(v18 + 80) | *(_DWORD *)(v17 + 80)) & 0xF8 | 7u;
  uint64_t v20 = v19 + 8;
  uint64_t v21 = ~v19;
  uint64_t v22 = ((unint64_t)v14 + v19 + 8) & ~v19;
  uint64_t v93 = v17;
  int v23 = *(_DWORD *)(v17 + 84);
  size_t v24 = *(void *)(v17 + 64);
  uint64_t v94 = v18;
  int v25 = *(_DWORD *)(v18 + 84);
  size_t v26 = *(void *)(v18 + 64);
  uint64_t v96 = (v19 + 16) & ~v19;
  size_t v27 = (void *)((v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  BOOL v28 = (void *)(((unint64_t)v15 + v19 + 8) & ~v19);
  uint64_t v29 = (unint64_t *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v30 = *v29;
  if (*v27 < 0xFFFFFFFFuLL)
  {
    if (v30 < 0xFFFFFFFF)
    {
      if (v23) {
        unint64_t v60 = *(void *)(*(void *)(v16 - 8) + 64);
      }
      else {
        unint64_t v60 = v24 + 1;
      }
      if (v25) {
        unint64_t v61 = *(void *)(v18 + 64);
      }
      else {
        unint64_t v61 = v26 + 1;
      }
      if (v60 <= v61) {
        unint64_t v60 = v61;
      }
      if (v60 <= 8) {
        uint64_t v35 = 8;
      }
      else {
        uint64_t v35 = v60;
      }
      uint64_t v62 = (v19 + 16) & ~v19;
      size_t v63 = (v96 | 1) + v35;
      int v64 = (void *)(((unint64_t)v14 + v19 + 8) & ~v19);
      uint64_t v39 = ((unint64_t)v15 + v19 + 8) & ~v19;
      unint64_t v65 = (const void *)v39;
      uint64_t v51 = (uint64_t)v64;
      goto LABEL_118;
    }
    if (!v23) {
      ++v24;
    }
    BOOL v31 = v25 == 0;
    uint64_t v39 = ((unint64_t)v15 + v19 + 8) & ~v19;
    *(void *)uint64_t v22 = *v28;
    *size_t v27 = *v29;
    unint64_t v32 = (unsigned __int8 *)(((unint64_t)v27 + v20) & v21);
    uint64_t v33 = (unsigned __int8 *)(((unint64_t)v29 + v20) & v21);
    if (v31) {
      ++v26;
    }
    if (v24 <= v26) {
      unint64_t v43 = v26;
    }
    else {
      unint64_t v43 = v24;
    }
    if (v43 <= 8) {
      uint64_t v35 = 8;
    }
    else {
      uint64_t v35 = v43;
    }
    unsigned int v44 = v33[v35];
    unsigned int v45 = v44 - 3;
    if (v44 < 3)
    {
      uint64_t v48 = v18;
      uint64_t v47 = v95;
LABEL_79:
      if (v44 == 2)
      {
LABEL_103:
        uint64_t v70 = ((unint64_t)v14 + v19 + 8) & ~v19;
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v48 + 48))(v33, 1, v47))
        {
          memcpy(v32, v33, v26);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v48 + 32))(v32, v33, v47);
          (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v48 + 56))(v32, 0, 1, v47);
        }
        uint64_t v74 = v97;
        char v75 = 2;
        goto LABEL_107;
      }
    }
    else
    {
      if (v35 <= 3) {
        uint64_t v46 = v35;
      }
      else {
        uint64_t v46 = 4;
      }
      uint64_t v48 = v94;
      uint64_t v47 = v95;
      switch(v46)
      {
        case 1:
          int v49 = *v33;
          break;
        case 2:
          int v49 = *(unsigned __int16 *)v33;
          break;
        case 3:
          int v49 = *(unsigned __int16 *)v33 | (v33[2] << 16);
          break;
        case 4:
          int v49 = *(_DWORD *)v33;
          break;
        default:
          goto LABEL_79;
      }
      int v76 = (v49 | (v45 << (8 * v35))) + 3;
      unsigned int v44 = v49 + 3;
      if (v35 < 4) {
        unsigned int v44 = v76;
      }
      if (v44 == 2) {
        goto LABEL_103;
      }
    }
    if (v44 != 1)
    {
LABEL_138:
      *(void *)unint64_t v32 = *(void *)v33;
      v32[v35] = 0;
      uint64_t v62 = v96;
      uint64_t v74 = v97;
      goto LABEL_153;
    }
    uint64_t v70 = ((unint64_t)v14 + v19 + 8) & ~v19;
    uint64_t v71 = v16;
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v17 + 48))(v33, 1, v16))
    {
      memcpy(v32, v33, v24);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v93 + 32))(v32, v33, v71);
      (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v93 + 56))(v32, 0, 1, v71);
    }
    uint64_t v74 = v97;
    char v75 = 1;
LABEL_107:
    v32[v35] = v75;
    uint64_t v22 = v70;
LABEL_152:
    uint64_t v62 = v96;
    goto LABEL_153;
  }
  uint64_t v92 = v16;
  if (v30 < 0xFFFFFFFF)
  {
    uint64_t v51 = ((unint64_t)v14 + v19 + 8) & ~v19;
    swift_release();
    swift_release();
    if (v23) {
      unint64_t v52 = v24;
    }
    else {
      unint64_t v52 = v24 + 1;
    }
    BOOL v31 = v25 == 0;
    uint64_t v53 = (unsigned __int8 *)(((unint64_t)v27 + v20) & v21);
    if (v31) {
      size_t v54 = v26 + 1;
    }
    else {
      size_t v54 = v26;
    }
    if (v52 <= v54) {
      unint64_t v52 = v54;
    }
    if (v52 <= 8) {
      uint64_t v35 = 8;
    }
    else {
      uint64_t v35 = v52;
    }
    unsigned int v55 = v53[v35];
    unsigned int v56 = v55 - 3;
    if (v55 < 3)
    {
      uint64_t v39 = (uint64_t)v28;
      uint64_t v58 = v93;
LABEL_84:
      if (v55 == 2)
      {
LABEL_114:
        uint64_t v58 = v94;
        uint64_t v72 = v95;
        int v73 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v94 + 48))(v53, 1, v95);
        goto LABEL_115;
      }
    }
    else
    {
      if (v35 <= 3) {
        uint64_t v57 = v35;
      }
      else {
        uint64_t v57 = 4;
      }
      uint64_t v39 = (uint64_t)v28;
      uint64_t v58 = v93;
      switch(v57)
      {
        case 1:
          int v59 = *v53;
          break;
        case 2:
          int v59 = *(unsigned __int16 *)v53;
          break;
        case 3:
          int v59 = *(unsigned __int16 *)v53 | (v53[2] << 16);
          break;
        case 4:
          int v59 = *(_DWORD *)v53;
          break;
        default:
          goto LABEL_84;
      }
      int v77 = (v59 | (v56 << (8 * v35))) + 3;
      unsigned int v55 = v59 + 3;
      if (v35 < 4) {
        unsigned int v55 = v77;
      }
      if (v55 == 2) {
        goto LABEL_114;
      }
    }
    if (v55 != 1)
    {

LABEL_117:
      uint64_t v62 = v96;
      size_t v63 = (v96 | 1) + v35;
      int v64 = (void *)v51;
      unint64_t v65 = (const void *)v39;
LABEL_118:
      memcpy(v64, v65, v63);
      uint64_t v22 = v51;
      uint64_t v74 = v97;
      goto LABEL_153;
    }
    uint64_t v72 = v92;
    int v73 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v58 + 48))(v53, 1, v92);
LABEL_115:
    if (!v73) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v58 + 8))(v53, v72);
    }
    goto LABEL_117;
  }
  uint64_t v91 = ((unint64_t)v14 + v19 + 8) & ~v19;
  *(void *)uint64_t v22 = *v28;
  swift_release();
  *size_t v27 = *v29;
  swift_release();
  if (!v23) {
    ++v24;
  }
  BOOL v31 = v25 == 0;
  unint64_t v32 = (unsigned __int8 *)(((unint64_t)v27 + v20) & v21);
  uint64_t v33 = (unsigned __int8 *)(((unint64_t)v29 + v20) & v21);
  if (v31) {
    ++v26;
  }
  if (v24 <= v26) {
    unint64_t v34 = v26;
  }
  else {
    unint64_t v34 = v24;
  }
  if (v34 <= 8) {
    uint64_t v35 = 8;
  }
  else {
    uint64_t v35 = v34;
  }
  if (v32 != v33)
  {
    unsigned int v36 = v32[v35];
    unsigned int v37 = v36 - 3;
    if (v36 < 3)
    {
      uint64_t v39 = (uint64_t)v28;
      uint64_t v41 = v94;
      uint64_t v40 = v95;
LABEL_90:
      if (v36 == 2)
      {
LABEL_125:
        if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v41 + 48))(v32, 1, v40)) {
          (*(void (**)(unsigned __int8 *, uint64_t))(v41 + 8))(v32, v40);
        }
LABEL_127:
        unsigned int v79 = v33[v35];
        unsigned int v80 = v79 - 3;
        if (v79 < 3)
        {
          uint64_t v22 = v91;
LABEL_134:
          if (v79 == 2)
          {
LABEL_147:
            if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v41 + 48))(v33, 1, v40))
            {
              memcpy(v32, v33, v26);
            }
            else
            {
              (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v41 + 32))(v32, v33, v40);
              (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v41 + 56))(v32, 0, 1, v40);
            }
            uint64_t v74 = v97;
            char v83 = 2;
LABEL_151:
            v32[v35] = v83;
            uint64_t v22 = v91;
            goto LABEL_152;
          }
        }
        else
        {
          if (v35 <= 3) {
            uint64_t v81 = v35;
          }
          else {
            uint64_t v81 = 4;
          }
          uint64_t v22 = v91;
          switch(v81)
          {
            case 1:
              int v82 = *v33;
              break;
            case 2:
              int v82 = *(unsigned __int16 *)v33;
              break;
            case 3:
              int v82 = *(unsigned __int16 *)v33 | (v33[2] << 16);
              break;
            case 4:
              int v82 = *(_DWORD *)v33;
              break;
            default:
              goto LABEL_134;
          }
          int v84 = (v82 | (v80 << (8 * v35))) + 3;
          unsigned int v79 = v82 + 3;
          if (v35 < 4) {
            unsigned int v79 = v84;
          }
          if (v79 == 2) {
            goto LABEL_147;
          }
        }
        if (v79 == 1)
        {
          if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v93 + 48))(v33, 1, v92))
          {
            memcpy(v32, v33, v24);
          }
          else
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v93 + 32))(v32, v33, v92);
            (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v93 + 56))(v32, 0, 1, v92);
          }
          uint64_t v74 = v97;
          char v83 = 1;
          goto LABEL_151;
        }
        goto LABEL_138;
      }
    }
    else
    {
      if (v35 <= 3) {
        uint64_t v38 = v35;
      }
      else {
        uint64_t v38 = 4;
      }
      uint64_t v39 = (uint64_t)v28;
      uint64_t v41 = v94;
      uint64_t v40 = v95;
      switch(v38)
      {
        case 1:
          int v42 = *v32;
          break;
        case 2:
          int v42 = *(unsigned __int16 *)v32;
          break;
        case 3:
          int v42 = *(unsigned __int16 *)v32 | (v32[2] << 16);
          break;
        case 4:
          int v42 = *(_DWORD *)v32;
          break;
        default:
          goto LABEL_90;
      }
      int v78 = (v42 | (v37 << (8 * v35))) + 3;
      unsigned int v36 = v42 + 3;
      if (v35 < 4) {
        unsigned int v36 = v78;
      }
      if (v36 == 2) {
        goto LABEL_125;
      }
    }
    if (v36 == 1)
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v93 + 48))(v32, 1, v92)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v93 + 8))(v32, v92);
      }
    }
    else
    {
    }
    goto LABEL_127;
  }
  uint64_t v62 = v96;
  uint64_t v74 = v97;
  uint64_t v22 = v91;
  uint64_t v39 = (uint64_t)v28;
LABEL_153:
  uint64_t v85 = (v62 | 1) + v35;
  unint64_t v86 = ((v22 | 7) + v85) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v87 = ((v39 | 7) + v85) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v88 = *(void *)v87;
  *(unsigned char *)(v86 + 8) = *(unsigned char *)(v87 + 8);
  *(void *)unint64_t v86 = v88;
  uint64_t v89 = *(void *)(*(void *)(v74 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v89 + 40))((*(unsigned __int8 *)(v89 + 80) + 9 + v86) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80), (*(unsigned __int8 *)(v89 + 80) + 9 + v87) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80));
  return a1;
}

uint64_t sub_228B3B738(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[2] - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(void *)(a3[3] - 8);
  uint64_t v7 = *(void *)(a3[4] - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v12 = v6 + 80;
  int v10 = *(_DWORD *)(v6 + 80);
  int v11 = *(_DWORD *)(v12 + 4);
  unint64_t v13 = *(void *)(*(void *)(a3[3] - 8) + 64);
  if (!*(_DWORD *)(v4 + 84)) {
    ++v5;
  }
  int v14 = *(_DWORD *)(v4 + 80);
  if (!v11) {
    ++v13;
  }
  if (v5 <= v13) {
    unint64_t v5 = v13;
  }
  uint64_t v15 = *(unsigned __int8 *)(v7 + 80);
  if (v5 <= 8) {
    uint64_t v16 = 8;
  }
  else {
    uint64_t v16 = v5;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v17 = (v10 | v14) & 0xF8 | 7u;
  uint64_t v18 = v16 + ((v17 + 16) & ~v17) + 1;
  uint64_t v19 = v15 + 9;
  int v20 = a2 - v9;
  if (a2 <= v9) {
    goto LABEL_32;
  }
  unint64_t v21 = ((v19 + ((v18 + ((v17 + 104) & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v15)
      + *(void *)(*(void *)(a3[4] - 8) + 64);
  char v22 = 8 * v21;
  if (v21 <= 3)
  {
    unsigned int v25 = ((v20 + ~(-1 << v22)) >> v22) + 1;
    if (HIWORD(v25))
    {
      int v23 = *(_DWORD *)((char *)a1 + v21);
      if (!v23) {
        goto LABEL_32;
      }
      goto LABEL_24;
    }
    if (v25 > 0xFF)
    {
      int v23 = *(unsigned __int16 *)((char *)a1 + v21);
      if (!*(unsigned __int16 *)((char *)a1 + v21)) {
        goto LABEL_32;
      }
      goto LABEL_24;
    }
    if (v25 < 2)
    {
LABEL_32:
      if ((v8 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v7 + 48))((v19
      }
                                                                      + (((((((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8)
                                                                          + v17
                                                                          + 80) & ~v17 | 7)
                                                                        + v18) & 0xFFFFFFFFFFFFFFF8)) & ~v15);
      unint64_t v27 = *((void *)a1 + 1);
      if (v27 >= 0xFFFFFFFF) {
        LODWORD(v27) = -1;
      }
      return (v27 + 1);
    }
  }
  int v23 = *((unsigned __int8 *)a1 + v21);
  if (!*((unsigned char *)a1 + v21)) {
    goto LABEL_32;
  }
LABEL_24:
  int v26 = (v23 - 1) << v22;
  if (v21 > 3) {
    int v26 = 0;
  }
  if (v21)
  {
    if (v21 > 3) {
      LODWORD(v21) = 4;
    }
    switch((int)v21)
    {
      case 2:
        LODWORD(v21) = *a1;
        break;
      case 3:
        LODWORD(v21) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v21) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v21) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v9 + (v21 | v26) + 1;
}

void sub_228B3B9E0(char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v6 = *(void *)(a4[2] - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(void *)(a4[3] - 8);
  uint64_t v9 = *(void *)(a4[4] - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  if (!*(_DWORD *)(v6 + 84)) {
    ++v7;
  }
  uint64_t v12 = (*(_DWORD *)(v8 + 80) | *(_DWORD *)(v6 + 80)) & 0xF8 | 7u;
  if (*(_DWORD *)(v8 + 84)) {
    unint64_t v13 = *(void *)(*(void *)(a4[3] - 8) + 64);
  }
  else {
    unint64_t v13 = *(void *)(*(void *)(a4[3] - 8) + 64) + 1;
  }
  if (v7 > v13) {
    unint64_t v13 = v7;
  }
  if (v13 <= 8) {
    unint64_t v13 = 8;
  }
  uint64_t v14 = v13 + ((v12 + 16) & ~v12) + 1;
  uint64_t v15 = *(unsigned __int8 *)(v9 + 80);
  size_t v16 = ((v15 + 9 + ((v14 + ((v12 + 104) & ~v12) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v15)
      + *(void *)(*(void *)(a4[4] - 8) + 64);
  BOOL v17 = a3 >= v11;
  unsigned int v18 = a3 - v11;
  if (v18 != 0 && v17)
  {
    if (v16 <= 3)
    {
      unsigned int v22 = ((v18 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
      if (HIWORD(v22))
      {
        int v19 = 4;
      }
      else if (v22 >= 0x100)
      {
        int v19 = 2;
      }
      else
      {
        int v19 = v22 > 1;
      }
    }
    else
    {
      int v19 = 1;
    }
  }
  else
  {
    int v19 = 0;
  }
  if (v11 < a2)
  {
    unsigned int v20 = ~v11 + a2;
    if (v16 < 4)
    {
      int v21 = (v20 >> (8 * v16)) + 1;
      if (v16)
      {
        int v23 = v20 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v23;
          a1[2] = BYTE2(v23);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v23;
        }
        else
        {
          *a1 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        a1[v16] = v21;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v21;
        return;
      case 3:
        goto LABEL_50;
      case 4:
        *(_DWORD *)&a1[v16] = v21;
        return;
      default:
        return;
    }
  }
  switch(v19)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_50:
      __break(1u);
      JUMPOUT(0x228B3BD50);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if ((v10 & 0x80000000) != 0)
        {
          size_t v24 = *(void (**)(unint64_t))(v9 + 56);
          v24((v15
             + 9
             + ((((((unint64_t)(a1 + 31) & 0xFFFFFFFFFFFFFFF8) + v12 + 80) & ~v12 | 7) + v14) & 0xFFFFFFFFFFFFFFF8)) & ~v15);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *((void *)a1 + 1) = 0;
          *((void *)a1 + 2) = 0;
          *(void *)a1 = a2 ^ 0x80000000;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t sub_228B3BD78()
{
  return swift_getWitnessTable();
}

uint64_t sub_228B3BD94()
{
  return MEMORY[0x263EFDDD8];
}

uint64_t type metadata accessor for MapBridgingView()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for MapPreferenceWrapper()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for _MapContentView.Child()
{
  return swift_getGenericMetadata();
}

uint64_t sub_228B3BDE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_228B23444(a1, a2, v3[8], v3[2], v3[3], v3[4], v3[5], v3[6], a3, v3[7]);
}

uint64_t sub_228B3BE1C(uint64_t result, void *a2)
{
  uint64_t v11 = 0;
  memset(v10, 0, sizeof(v10));
  char v12 = 1;
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v4 = swift_bridgeObjectRetain() + 48;
    do
    {
      if (*(unsigned char *)(v4 - 16) == 1)
      {
        unint64_t v5 = *(void (**)(_OWORD *))(v4 - 8);
        swift_retain();
        sub_228AE28D0(a2, (uint64_t *)v10, v8);
        v6[0] = v8[0];
        v6[1] = v8[1];
        v6[2] = v8[2];
        v6[3] = v8[3];
        void v6[4] = v8[4];
        v6[5] = v8[5];
        uint64_t v7 = v9;
        v5(v6);
        swift_release();
      }
      v4 += 24;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_228B3BF2C@<X0>(uint64_t a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, char *a5@<X8>)
{
  v21[1] = a3;
  unsigned int v22 = a2;
  v21[0] = a1;
  int v23 = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682932D8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = *(void *)(a4 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v21 - v14;
  uint64_t v16 = sub_228BAC638();
  uint64_t v18 = *(void *)(v16 - 8);
  uint64_t result = v16 - 8;
  if (*(void *)(v18 + 64) == v8)
  {
    (*(void (**)(char *, void, uint64_t))(v7 + 16))((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v21[0], v6);
    v22((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(char *, uint64_t))(v7 + 8))((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    int v19 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v19(v15, v13, a4);
    unsigned int v20 = *(void (**)(char *, uint64_t))(v10 + 8);
    v20(v13, a4);
    v19(v23, v15, a4);
    return ((uint64_t (*)(char *, uint64_t))v20)(v15, a4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_228B3C174(uint64_t a1)
{
  return sub_228B3C204(a1, sub_228B241D4);
}

uint64_t sub_228B3C18C(uint64_t a1)
{
  return sub_228B3C204(a1, sub_228B24280);
}

uint64_t sub_228B3C1A4(uint64_t a1)
{
  return sub_228B3C204(a1, sub_228B24334);
}

uint64_t sub_228B3C1BC(uint64_t a1)
{
  return sub_228B3C204(a1, sub_228B243E8);
}

uint64_t sub_228B3C1D4(uint64_t a1)
{
  return sub_228B3C204(a1, sub_228B24490);
}

uint64_t sub_228B3C1EC(uint64_t a1)
{
  return sub_228B3C204(a1, sub_228B24588);
}

uint64_t sub_228B3C204(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_228B3C21C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](a1);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v15(v12, v14);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  }
  return result;
}

uint64_t sub_228B3C2F8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result - 1;
  return result;
}

uint64_t sub_228B3C304(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  uint64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_228B3C3B4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_228B3C43C@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || (uint64_t v4 = result, 1 << *(unsigned char *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    uint64_t v6 = *(void *)(a3 + 56);
    uint64_t v7 = type metadata accessor for UserAnnotationViewModel(0);
    return sub_228B4D098(v6 + *(void *)(*(void *)(v7 - 8) + 72) * v4, a4, type metadata accessor for UserAnnotationViewModel);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  unint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_228B3C550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v29 = a6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v15)
  {
    v25[1] = v6;
    uint64_t v32 = MEMORY[0x263F8EE78];
    unint64_t v27 = (char *)v25 - v13;
    BOOL v28 = v14;
    sub_228BAD8A8();
    uint64_t v17 = (void **)(a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)));
    uint64_t v26 = *(void *)(v11 + 72);
    do
    {
      uint64_t v18 = *(int *)(v10 + 48);
      uint64_t v19 = (uint64_t)&v27[v18];
      unsigned int v20 = *v17;
      sub_228B4D098((uint64_t)v17 + v18, (uint64_t)&v27[v18], a5);
      uint64_t v22 = (uint64_t)v28;
      int v21 = v29;
      uint64_t v23 = (uint64_t)v28 + *(int *)(v10 + 48);
      *BOOL v28 = v20;
      sub_228B4D404(v19, v23, v21);
      id v24 = v20;
      swift_getAtKeyPath();
      sub_228AC1A50(v22, a4);
      uint64_t v30 = v31;
      sub_228BAD878();
      sub_228BAD8B8();
      sub_228BAD8C8();
      sub_228BAD888();
      uint64_t v17 = (void **)((char *)v17 + v26);
      --v15;
    }
    while (v15);
    return v32;
  }
  return result;
}

uint64_t sub_228B3C728(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 8 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

id sub_228B3C77C()
{
  uint64_t v1 = v0;
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + qword_268292900 + 16);
    if (*(void *)(v3 + 16))
    {
      uint64_t v4 = v2;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v5 = sub_228AD1A30(v4);
      if (v6)
      {
        uint64_t v7 = *(void *)(v3 + 56) + 96 * v5;
        unint64_t v8 = *(void **)(v7 + 8);
        uint64_t v9 = *(void **)(v7 + 24);
        uint64_t v10 = *(void *)(v7 + 32);
        uint64_t v11 = *(void *)(v7 + 48);
        uint64_t v51 = *(void *)(v7 + 56);
        uint64_t v12 = *(void *)(v7 + 64);
        uint64_t v13 = *(void *)(v7 + 72);
        int v49 = *(unsigned __int8 *)(v7 + 80);
        uint64_t v55 = *(void *)v7;
        uint64_t v57 = *(void *)(v7 + 88);
        __int16 v14 = *(_WORD *)(v7 + 16);
        swift_bridgeObjectRetain();
        uint64_t v15 = *(void *)(v7 + 40);
        sub_228B0A008(v8, v14);
        id v59 = v9;
        swift_bridgeObjectRetain();
        sub_228ACF3A4(v13, v49);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v16 = (Class *)0x263F108F0;
        if (!v49) {
          uint64_t v16 = (Class *)0x263F10A10;
        }
        id v17 = objc_msgSend(objc_allocWithZone(*v16), sel_initWithPolyline_, v4);
        *(void *)&long long v61 = v55;
        *((void *)&v61 + 1) = v8;
        LOWORD(v62) = v14;
        *((void *)&v62 + 1) = v9;
        *(void *)&long long v63 = v10;
        *((void *)&v63 + 1) = v15;
        *(void *)&long long v64 = v11;
        *((void *)&v64 + 1) = v51;
        *(void *)&long long v65 = v12;
        *((void *)&v65 + 1) = v13;
        LOBYTE(v66) = v49;
        *((void *)&v66 + 1) = v57;
        sub_228B13C9C(v17);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_228B0A024(v8, v14);
        swift_bridgeObjectRelease();

        uint64_t v18 = v13;
        char v19 = v49;
        goto LABEL_12;
      }
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  self;
  uint64_t v20 = swift_dynamicCastObjCClass();
  if (v20)
  {
    uint64_t v21 = *(void *)(v1 + qword_268292908 + 16);
    if (*(void *)(v21 + 16))
    {
      uint64_t v22 = v20;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v23 = sub_228AD19E0(v22);
      if (v24)
      {
        uint64_t v25 = *(void *)(v21 + 56) + 120 * v23;
        uint64_t v26 = *(void **)(v25 + 8);
        uint64_t v27 = *(void *)(v25 + 16);
        uint64_t v48 = *(void *)(v25 + 24);
        uint64_t v50 = *(void *)v25;
        BOOL v28 = *(void **)(v25 + 32);
        uint64_t v29 = *(void *)(v25 + 40);
        uint64_t v30 = *(void *)(v25 + 56);
        uint64_t v54 = *(void *)(v25 + 64);
        uint64_t v31 = *(void *)(v25 + 72);
        uint64_t v32 = *(void *)(v25 + 80);
        char v56 = *(unsigned char *)(v25 + 88);
        uint64_t v58 = *(void *)(v25 + 96);
        char v60 = *(unsigned char *)(v25 + 104);
        uint64_t v52 = *(void *)(v25 + 112);
        swift_bridgeObjectRetain();
        uint64_t v33 = *(void *)(v25 + 48);
        sub_228B09CA8(v26, v27);
        id v53 = v28;
        swift_bridgeObjectRetain();
        sub_228ACF3A4(v32, v56);
        sub_228ACF3A4(v58, v60);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10A00]), sel_initWithPolygon_, v22);
        *(void *)&long long v61 = v50;
        *((void *)&v61 + 1) = v26;
        *(void *)&long long v62 = v27;
        *((void *)&v62 + 1) = v48;
        *(void *)&long long v63 = v28;
        *((void *)&v63 + 1) = v29;
        *(void *)&long long v64 = v33;
        *((void *)&v64 + 1) = v30;
        *(void *)&long long v65 = v54;
        *((void *)&v65 + 1) = v31;
        BYTE8(v66) = v56;
        *(void *)&long long v67 = v58;
        BYTE8(v67) = v60;
        *(void *)&long long v68 = v52;
        sub_228B14130(v17);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_228B09D08(v26, v27);
        swift_bridgeObjectRelease();

        sub_228AD26A8(v32, v56);
        uint64_t v18 = v58;
        char v19 = v60;
LABEL_12:
        sub_228AD26A8(v18, v19);
        return v17;
      }
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  self;
  uint64_t v34 = swift_dynamicCastObjCClass();
  if (v34)
  {
    uint64_t v35 = *(void *)(v1 + qword_268292910 + 16);
    if (*(void *)(v35 + 16))
    {
      uint64_t v36 = v34;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v37 = sub_228AD1914(v36);
      if (v38)
      {
        uint64_t v39 = *(void *)(v35 + 56) + 136 * v37;
        long long v61 = *(_OWORD *)v39;
        long long v40 = *(_OWORD *)(v39 + 48);
        long long v41 = *(_OWORD *)(v39 + 64);
        long long v42 = *(_OWORD *)(v39 + 32);
        long long v62 = *(_OWORD *)(v39 + 16);
        long long v63 = v42;
        long long v64 = v40;
        long long v65 = v41;
        long long v43 = *(_OWORD *)(v39 + 80);
        long long v44 = *(_OWORD *)(v39 + 96);
        long long v45 = *(_OWORD *)(v39 + 112);
        uint64_t v69 = *(void *)(v39 + 128);
        long long v67 = v44;
        long long v68 = v45;
        long long v66 = v43;
        sub_228B0991C((uint64_t)&v61);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F108A0]), sel_initWithCircle_, v36);
        sub_228B14420(v17);
        sub_228B09840((uint64_t)&v61);
        swift_unknownObjectRelease();
        return v17;
      }
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  id v47 = objc_allocWithZone(MEMORY[0x263F109C8]);

  return objc_msgSend(v47, sel_init);
}

uint64_t sub_228B3CCD4(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_228BAD958();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 4;
      while (1)
      {
        uint64_t v4 = v3 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          MEMORY[0x22A6A6FA0](v3 - 4, a1);
          uint64_t v5 = v3 - 3;
          if (__OFADD__(v4, 1)) {
            goto LABEL_15;
          }
        }
        else
        {
          swift_unknownObjectRetain();
          uint64_t v5 = v3 - 3;
          if (__OFADD__(v4, 1))
          {
LABEL_15:
            __break(1u);
            goto LABEL_16;
          }
        }
        self;
        if (swift_dynamicCastObjCClass())
        {
          sub_228AD25BC(0, (unint64_t *)&qword_268293000);
          swift_unknownObjectRetain();
          char v6 = sub_228BAD6F8();
          swift_unknownObjectRelease_n();
          if (v6)
          {
            uint64_t v7 = 1;
            goto LABEL_18;
          }
        }
        else
        {
          swift_unknownObjectRelease();
        }
        ++v3;
        if (v5 == v2)
        {
          uint64_t v7 = 0;
          goto LABEL_18;
        }
      }
    }
  }
  uint64_t v7 = 0;
LABEL_18:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_228B3CE50(uint64_t a1, uint64_t a2)
{
  sub_228AD2688(a1);
  uint64_t v5 = (void *)((char *)v2 + *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x230));
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;

  return sub_228AD2678(v6);
}

id sub_228B3CEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MapBridgingViewCoordinator()), sel_init, a1, a2, a3, a4);
}

uint64_t sub_228B3CF00()
{
  return sub_228B25FB8();
}

uint64_t sub_228B3CF08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_51Tm(a1, &qword_2682928D0, a2);
}

uint64_t sub_228B3CF14(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_228AE6418(a1, a2, a3, a4, &qword_2682928D0);
}

uint64_t sub_228B3CF34@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_51Tm(a1, &qword_2682928D8, a2);
}

uint64_t sub_228B3CF40(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_228AE6418(a1, a2, a3, a4, &qword_2682928D8);
}

uint64_t sub_228B3CF60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_51Tm(a1, &qword_2682928E8, a2);
}

uint64_t sub_228B3CF6C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_228AE6418(a1, a2, a3, a4, &qword_2682928E8);
}

uint64_t sub_228B3CF8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_51Tm(a1, &qword_268292900, a2);
}

uint64_t sub_228B3CF98(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_228AE6418(a1, a2, a3, a4, &qword_268292900);
}

uint64_t sub_228B3CFB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_51Tm(a1, &qword_268292908, a2);
}

uint64_t sub_228B3CFC4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_228AE6418(a1, a2, a3, a4, &qword_268292908);
}

uint64_t sub_228B3CFE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_51Tm(a1, &qword_268292910, a2);
}

uint64_t sub_228B3CFF0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_228AE6418(a1, a2, a3, a4, &qword_268292910);
}

uint64_t sub_228B3D010()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_228B3D048()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_228B3D080@<X0>(unsigned char *a1@<X8>)
{
  return sub_228B8B1F4(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_228B3D088(uint64_t a1)
{
  return a1;
}

uint64_t sub_228B3D0DC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_228B3D138(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void))
{
  if (a3) {
    return a4();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_228B3D148()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_228B3D180()
{
  sub_228B37AE4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

id sub_228B3D1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6, double a7, double a8)
{
  uint64_t v15 = &v8[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_title];
  *uint64_t v15 = 0;
  v15[1] = 0;
  uint64_t v16 = &v8[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_subtitle];
  *uint64_t v16 = 0;
  v16[1] = 0;
  uint64_t v17 = OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem;
  *(void *)&v8[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem] = 0;
  uint64_t v18 = OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature;
  v8[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature] = 0;
  *uint64_t v15 = a1;
  v15[1] = a2;
  char v19 = v8;
  swift_bridgeObjectRelease();
  *uint64_t v16 = a3;
  v16[1] = a4;
  swift_bridgeObjectRelease();
  uint64_t v20 = (double *)&v19[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_coordinate];
  *uint64_t v20 = a7;
  v20[1] = a8;
  uint64_t v21 = *(void **)&v8[v17];
  *(void *)&v8[v17] = a5;
  id v22 = a5;

  v8[v18] = a6;
  v24.receiver = v19;
  v24.super_class = (Class)type metadata accessor for MapBridgingMarker();
  return objc_msgSendSuper2(&v24, sel_init);
}

id sub_228B3D2A4(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_228BAD958();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v5 = 4;
      while (1)
      {
        uint64_t v6 = v5 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v7 = (void *)MEMORY[0x22A6A6FA0](v5 - 4, a1);
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_12;
          }
        }
        else
        {
          uint64_t v7 = *(void **)(a1 + 8 * v5);
          swift_unknownObjectRetain();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_12:
            __break(1u);
            goto LABEL_13;
          }
        }
        id v9 = objc_msgSend(v7, sel_isEqual_, a2);
        swift_unknownObjectRelease();
        if ((v9 & 1) == 0)
        {
          ++v5;
          if (v8 != v4) {
            continue;
          }
        }
        goto LABEL_15;
      }
    }
  }
  id v9 = 0;
LABEL_15:
  swift_bridgeObjectRelease();
  return v9;
}

void sub_228B3D3C0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2)
  {
    swift_retain();
    swift_retain();
    sub_228B0596C(a3);
  }
}

void sub_228B3D40C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2)
  {
    swift_release();
    swift_release();
    sub_228B05A34(a3);
  }
}

uint64_t sub_228B3D45C()
{
  return swift_deallocObject();
}

uint64_t sub_228B3D46C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_228B3D4B4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_228B3324C(*(void **)(v0 + 24));
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = 1;
  return result;
}

uint64_t sub_228B3D518()
{
  return objectdestroy_86Tm(MEMORY[0x263F8EEA0]);
}

uint64_t sub_228B3D534()
{
  return sub_228B3BE1C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_228B3D53C()
{
  return sub_228B34BB8(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_228B3D544@<X0>(unsigned char *a1@<X8>)
{
  return sub_228AC7F90(a1);
}

uint64_t sub_228B3D568()
{
  return objectdestroy_86Tm(MEMORY[0x263F8EED8]);
}

void sub_228B3D584()
{
  sub_228B33130(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), (SEL *)&selRef_deselectAnnotation_animated_);
}

uint64_t sub_228B3D5B4()
{
  return objectdestroy_86Tm(MEMORY[0x263F8EED8]);
}

void sub_228B3D5D0()
{
  sub_228B33130(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), (SEL *)&selRef_selectAnnotation_animated_);
}

uint64_t objectdestroy_97Tm()
{
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_228B3D63C(uint64_t *a1)
{
  return sub_228B2FE80(a1, *(void **)(v1 + 16), *(char **)(v1 + 24)) & 1;
}

uint64_t sub_228B3D65C(uint64_t a1)
{
  return sub_228B3D6EC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_228B31330) & 1;
}

uint64_t sub_228B3D68C(uint64_t a1)
{
  return sub_228B3D6EC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_228B31804) & 1;
}

uint64_t sub_228B3D6BC(uint64_t a1)
{
  return sub_228B3D6EC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_228B31CD8) & 1;
}

uint64_t sub_228B3D6EC(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[6], v2[2], v2[3], v2[4], v2[5]) & 1;
}

uint64_t sub_228B3D71C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_228B3D754()
{
  sub_228B321AC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_228B3D760()
{
  return objectdestroy_86Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_228B3D77C()
{
  return objectdestroy_86Tm(MEMORY[0x263F8EED8]);
}

uint64_t objectdestroy_86Tm(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  return swift_deallocObject();
}

unint64_t sub_228B3D7EC(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_228B0596C(result);
  }
  return result;
}

uint64_t sub_228B3D800()
{
  return swift_deallocObject();
}

uint64_t sub_228B3D840()
{
  return sub_228B3324C(*(void **)(v0 + 24));
}

uint64_t sub_228B3D868(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for MapBridgingViewCoordinator.ResolvedCameraPosition()
{
  return swift_getGenericMetadata();
}

uint64_t sub_228B3D8E0()
{
  swift_release();
  sub_228B05A34(*(void *)(v0 + 56));

  return swift_deallocObject();
}

void sub_228B3D920()
{
  sub_228B2D4B8(*(void *)(v0 + 48), (double *)(v0 + 56), *(unsigned char *)(v0 + 97));
}

uint64_t sub_228B3D938()
{
  sub_228B05A34(*(void *)(v0 + 48));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_228B3D980()
{
  sub_228B2D76C(v0 + 48, *(void *)(v0 + 96), *(void (**)(void))(v0 + 104), *(void *)(v0 + 112));
}

uint64_t sub_228B3D998(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_228B3D9D8()
{
  return swift_deallocObject();
}

void sub_228B3D9E8()
{
  *((unsigned char *)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x210)) = 0;
}

uint64_t sub_228B3DA14(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268292FF0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F78);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_268292EA0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_228B2CE38((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_228AC1A50((uint64_t)v8, &qword_268292F78);
    BOOL v13 = 0;
  }
  else
  {
    sub_228ACD8BC((uint64_t)v8, (uint64_t)v12, qword_268292EA0);
    MEMORY[0x22A6A6930](v9);
    sub_228AC1A50((uint64_t)v12, qword_268292EA0);
    uint64_t v14 = type metadata accessor for KeyframeAnimationState();
    BOOL v13 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v5, 1, v14) != 1;
    sub_228AC1A50((uint64_t)v5, (uint64_t *)&unk_268292FF0);
  }
  uint64_t v15 = *(void *)((char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x248));
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(unsigned char *)(v16 + 24) = v13;
  *(void *)(v16 + 32) = a1;
  swift_bridgeObjectRetain();
  id v17 = a1;
  sub_228BAC618();
  return swift_release();
}

void sub_228B3DCA8(uint64_t a1)
{
  uint64_t v3 = (void *)((char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x208));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  unint64_t v6 = v3[2];
  sub_228B3D3C0(*v3, v4, v6);
  if (v4)
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F68);
    MEMORY[0x22A6A6930](&v12, v7);
    unint64_t v8 = v12;
    if (a1 == 2)
    {
      if (v12 >> 61 == 4)
      {
        if (*(unsigned char *)((v12 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) == 1) {
          goto LABEL_12;
        }
        goto LABEL_14;
      }
    }
    else
    {
      if (a1 != 1)
      {
        if (!a1 && v12 >> 61 == 4) {
          goto LABEL_13;
        }
LABEL_12:
        sub_228B3D40C(v5, v4, v6);
LABEL_15:
        sub_228B05A34(v8);
        return;
      }
      if (v12 >> 61 == 4)
      {
        if ((*(unsigned char *)((v12 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) & 1) == 0) {
          goto LABEL_12;
        }
LABEL_14:
        unint64_t v10 = *(void *)((v12 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v11 = (void *)swift_allocObject();
        v11[2] = v5;
        v11[3] = v4;
        void v11[4] = v6;
        v11[5] = v10;
        sub_228B0596C(v10);
        sub_228B3D3C0(v5, v4, v6);
        sub_228B0596C(v10);
        sub_228BAC618();
        sub_228B3D40C(v5, v4, v6);
        swift_release();
        sub_228B05A34(v10);
        goto LABEL_15;
      }
    }
LABEL_13:
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = v5;
    v9[3] = v4;
    v9[4] = v6;
    swift_retain();
    swift_retain();
    sub_228B0596C(v6);
    sub_228BAC618();
    sub_228B3D40C(v5, v4, v6);
    swift_release();
    goto LABEL_15;
  }
}

void sub_228B3DF98(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)((char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x208));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  unint64_t v7 = v4[2];
  sub_228B3D3C0(*v4, v6, v7);
  if (v6)
  {
    uint64_t v13 = v5;
    uint64_t v14 = v6;
    unint64_t v15 = v7;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292F68);
    MEMORY[0x22A6A6930](&v16, v8);
    unint64_t v9 = v16;
    sub_228B05A34(v16);
    if (v9 >> 61 != 4 || (objc_msgSend(a1, sel_hasUserLocation, v5, v6, v7) & 1) == 0)
    {
      objc_msgSend(a1, sel_setUserTrackingMode_, 0, v13, v14, v15);
      unint64_t v10 = (void *)swift_allocObject();
      void v10[2] = v5;
      v10[3] = v6;
      v10[4] = v7;
      v10[5] = v2;
      _OWORD v10[6] = a1;
      sub_228B3D3C0(v5, v6, v7);
      id v11 = v2;
      id v12 = a1;
      sub_228BAC618();
      swift_release();
    }
    sub_228B3D40C(v5, v6, v7);
  }
}

uint64_t sub_228B3E0E8()
{
  long long v1 = *(_OWORD *)((*MEMORY[0x263F8EED0] & *v0) + 0x1E8);
  v13[0] = *(_OWORD *)((*MEMORY[0x263F8EED0] & *v0) + 0x1D8);
  v13[1] = v1;
  uint64_t v2 = type metadata accessor for MapSelectionManagerBox();
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = sub_228BAD218();
  uint64_t v4 = sub_228BAD718();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v13 - v7;
  uint64_t v9 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v6);
  id v11 = (char *)v13 - v10;
  sub_228B2CAF8((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, v3);
  self;
  if (swift_dynamicCastObjCClass())
  {
    *(void *)&v13[0] = 0;
    MEMORY[0x22A6A6930](v3);
    sub_228B8B390((uint64_t)v13, v2);
    sub_228BAD1E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v3);
}

id sub_228B3E388()
{
  return sub_228B3C77C();
}

uint64_t objectdestroy_74Tm()
{
  swift_release();
  swift_release();
  sub_228B05A34(*(void *)(v0 + 32));

  return swift_deallocObject();
}

uint64_t sub_228B3E3FC()
{
  return sub_228B3596C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48));
}

unint64_t sub_228B3E424()
{
  return sub_228B356C0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_228B3E434()
{
  return sub_228B35644(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

unint64_t sub_228B3E444()
{
  return sub_228B35574(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t objectdestroy_151Tm()
{
  swift_release();
  swift_release();
  sub_228B05A34(*(void *)(v0 + 32));
  sub_228B05A34(*(void *)(v0 + 40));

  return swift_deallocObject();
}

uint64_t sub_228B3E4A4()
{
  return sub_228B354FC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t objectdestroy_83Tm()
{
  swift_release();
  swift_release();
  sub_228B05A34(*(void *)(v0 + 32));

  return swift_deallocObject();
}

uint64_t sub_228B3E4FC()
{
  return sub_228BAD1E8();
}

uint64_t sub_228B3E558()
{
  sub_228B05A34(*(void *)(v0 + 24));

  return swift_deallocObject();
}

uint64_t sub_228B3E590()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_228B3E5D0()
{
  return sub_228B35378(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_228B3E5E0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_228B3E644(unint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  if (a4)
  {
    swift_release();
    swift_release();
    return sub_228B05A34(a3);
  }
  else
  {
    sub_228B05A34(a1);
    return swift_release();
  }
}

uint64_t sub_228B3E6C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 96);
}

uint64_t sub_228B3E6D0()
{
  uint64_t result = type metadata accessor for _MapContentInputs(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_228B3E780(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v19 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = a2[4];
    *(_DWORD *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *((_DWORD *)a2 + 10);
    uint64_t v6 = *(int *)(a3 + 108);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_228BACB48();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    uint64_t v10 = (int *)type metadata accessor for _MapContentInputs(0);
    uint64_t v11 = v10[5];
    uint64_t v12 = v7 + v11;
    uint64_t v13 = v8 + v11;
    uint64_t v14 = sub_228BAC608();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = v10[6];
    uint64_t v16 = v7 + v15;
    uint64_t v17 = v8 + v15;
    uint64_t v18 = sub_228BACD78();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    *(_DWORD *)(v7 + v10[7]) = *(_DWORD *)(v8 + v10[7]);
  }
  return v3;
}

uint64_t sub_228B3E90C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 108);
  uint64_t v3 = sub_228BACB48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = type metadata accessor for _MapContentInputs(0);
  uint64_t v5 = v2 + *(int *)(v4 + 20);
  uint64_t v6 = sub_228BAC608();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v2 + *(int *)(v4 + 24);
  uint64_t v8 = sub_228BACD78();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t sub_228B3EA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_DWORD *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 108);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_228BACB48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  uint64_t v9 = (int *)type metadata accessor for _MapContentInputs(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = v6 + v10;
  uint64_t v12 = v7 + v10;
  uint64_t v13 = sub_228BAC608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = v6 + v14;
  uint64_t v16 = v7 + v14;
  uint64_t v17 = sub_228BACD78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  *(_DWORD *)(v6 + v9[7]) = *(_DWORD *)(v7 + v9[7]);
  return a1;
}

_DWORD *sub_228B3EB44(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  uint64_t v4 = *(int *)(a3 + 108);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_228BACB48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  uint64_t v8 = (int *)type metadata accessor for _MapContentInputs(0);
  uint64_t v9 = v8[5];
  uint64_t v10 = &v5[v9];
  uint64_t v11 = &v6[v9];
  uint64_t v12 = sub_228BAC608();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = v8[6];
  uint64_t v14 = &v5[v13];
  uint64_t v15 = &v6[v13];
  uint64_t v16 = sub_228BACD78();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  *(_DWORD *)&v5[v8[7]] = *(_DWORD *)&v6[v8[7]];
  return a1;
}

uint64_t sub_228B3ECC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_DWORD *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 108);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_228BACB48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  uint64_t v9 = (int *)type metadata accessor for _MapContentInputs(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = v6 + v10;
  uint64_t v12 = v7 + v10;
  uint64_t v13 = sub_228BAC608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = v6 + v14;
  uint64_t v16 = v7 + v14;
  uint64_t v17 = sub_228BACD78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  *(_DWORD *)(v6 + v9[7]) = *(_DWORD *)(v7 + v9[7]);
  return a1;
}

uint64_t sub_228B3EDFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_DWORD *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 108);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_228BACB48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 40))(v6, v7, v8);
  uint64_t v9 = (int *)type metadata accessor for _MapContentInputs(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = v6 + v10;
  uint64_t v12 = v7 + v10;
  uint64_t v13 = sub_228BAC608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = v6 + v14;
  uint64_t v16 = v7 + v14;
  uint64_t v17 = sub_228BACD78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  *(_DWORD *)(v6 + v9[7]) = *(_DWORD *)(v7 + v9[7]);
  return a1;
}

uint64_t sub_228B3EF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_228B3EF4C);
}

uint64_t sub_228B3EF4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 108);
  uint64_t v5 = type metadata accessor for _MapContentInputs(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_228B3EFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_228B3EFD0);
}

uint64_t sub_228B3EFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 108);
  uint64_t v6 = type metadata accessor for _MapContentInputs(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

void sub_228B3F044()
{
  sub_228B4C960(319, qword_2682931B0, (uint64_t *)&unk_268292FF0, MEMORY[0x263F1B5D0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_228B3F134(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *(void *)a1 = *a2;
    a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[2];
    char v9 = *((unsigned char *)a2 + 24);
    swift_retain();
    sub_228AD266C(v8, v9);
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = v9;
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *((unsigned char *)a2 + 40);
    uint64_t v10 = a2[6];
    uint64_t v11 = a2[7];
    uint64_t v12 = a2[8];
    char v13 = *((unsigned char *)a2 + 72);
    sub_228B3F400(v10, v11, v12, v13);
    *(void *)(a1 + 48) = v10;
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v12;
    *(unsigned char *)(a1 + 72) = v13;
    uint64_t v14 = a3[12];
    uint64_t v15 = (char *)(a1 + v14);
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for KeyframeAnimationState();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268292FF0);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v15, v16, v21);
      uint64_t v22 = *(int *)(v17 + 20);
      uint64_t v36 = &v16[v22];
      unint64_t v37 = &v15[v22];
      uint64_t v23 = sub_228BAC418();
      objc_super v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      v24(v37, v36, v23);
      v24(&v15[*(int *)(v17 + 24)], &v16[*(int *)(v17 + 24)], v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(qword_268293128);
    *(void *)&v15[*(int *)(v25 + 28)] = *(void *)&v16[*(int *)(v25 + 28)];
    uint64_t v26 = a3[13];
    uint64_t v27 = (void *)(a1 + v26);
    BOOL v28 = (uint64_t *)((char *)a2 + v26);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    unint64_t v30 = v28[2];
    swift_retain();
    swift_retain();
    swift_retain();
    sub_228B0596C(v30);
    v27[2] = v30;
    uint64_t v31 = a3[14];
    uint64_t v32 = (void *)(a1 + v31);
    uint64_t v33 = (uint64_t *)((char *)a2 + v31);
    uint64_t v34 = v33[1];
    void *v32 = *v33;
    v32[1] = v34;
  }
  swift_retain();
  return a1;
}

uint64_t sub_228B3F400(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return sub_228AD2860(result);
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_228B3F40C(uint64_t a1, uint64_t a2)
{
  swift_release();
  sub_228AD25F8(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  sub_228AD2814(*(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  uint64_t v5 = type metadata accessor for KeyframeAnimationState();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    uint64_t v7 = v4 + *(int *)(v5 + 20);
    uint64_t v8 = sub_228BAC418();
    char v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    v9(v7, v8);
    v9(v4 + *(int *)(v5 + 24), v8);
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_268293128);
  swift_release();
  uint64_t v10 = a1 + *(int *)(a2 + 52);
  swift_release();
  swift_release();
  sub_228B05A34(*(void *)(v10 + 16));

  return swift_release();
}

uint64_t sub_228B3F5A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 24);
  swift_retain();
  sub_228AD266C(v7, v8);
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  char v12 = *(unsigned char *)(a2 + 72);
  sub_228B3F400(v9, v10, v11, v12);
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 72) = v12;
  uint64_t v13 = a3[12];
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = type metadata accessor for KeyframeAnimationState();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268292FF0);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v14, v15, v19);
    uint64_t v20 = *(int *)(v16 + 20);
    uint64_t v36 = &v14[v20];
    unint64_t v37 = a3;
    uint64_t v21 = &v15[v20];
    uint64_t v22 = sub_228BAC418();
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    objc_super v24 = v21;
    a3 = v37;
    v23(v36, v24, v22);
    v23(&v14[*(int *)(v16 + 24)], &v15[*(int *)(v16 + 24)], v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(qword_268293128);
  *(void *)&v14[*(int *)(v25 + 28)] = *(void *)&v15[*(int *)(v25 + 28)];
  uint64_t v26 = a3[13];
  uint64_t v27 = (void *)(a1 + v26);
  BOOL v28 = (void *)(a2 + v26);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  unint64_t v30 = v28[2];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_228B0596C(v30);
  v27[2] = v30;
  uint64_t v31 = a3[14];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  uint64_t v34 = v33[1];
  void *v32 = *v33;
  v32[1] = v34;
  swift_retain();
  return a1;
}

uint64_t sub_228B3F828(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_228AD266C(v6, v7);
  uint64_t v8 = *(void *)(a1 + 16);
  char v9 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  sub_228AD25F8(v8, v9);
  uint64_t v10 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v10;
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v12 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 64);
  char v14 = *(unsigned char *)(a2 + 72);
  sub_228B3F400(v11, v12, v13, v14);
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = *(void *)(a1 + 64);
  char v18 = *(unsigned char *)(a1 + 72);
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = v12;
  *(void *)(a1 + 64) = v13;
  *(unsigned char *)(a1 + 72) = v14;
  sub_228AD2814(v15, v16, v17, v18);
  uint64_t v19 = a3[12];
  uint64_t v20 = (char *)(a1 + v19);
  uint64_t v21 = (char *)(a2 + v19);
  uint64_t v22 = type metadata accessor for KeyframeAnimationState();
  uint64_t v23 = *(void *)(v22 - 8);
  objc_super v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 24))(v20, v21, v43);
      uint64_t v44 = *(int *)(v22 + 20);
      uint64_t v50 = &v20[v44];
      long long v45 = &v21[v44];
      uint64_t v46 = sub_228BAC418();
      id v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 24);
      v47(v50, v45, v46);
      v47(&v20[*(int *)(v22 + 24)], &v21[*(int *)(v22 + 24)], v46);
      goto LABEL_7;
    }
    sub_228B3D868((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for KeyframeAnimationState);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268292FF0);
    memcpy(v20, v21, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v20, v21, v27);
  uint64_t v28 = *(int *)(v22 + 20);
  uint64_t v48 = &v21[v28];
  int v49 = &v20[v28];
  uint64_t v29 = sub_228BAC418();
  unint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
  v30(v49, v48, v29);
  v30(&v20[*(int *)(v22 + 24)], &v21[*(int *)(v22 + 24)], v29);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_7:
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(qword_268293128);
  *(void *)&v20[*(int *)(v32 + 28)] = *(void *)&v21[*(int *)(v32 + 28)];
  swift_retain();
  swift_release();
  uint64_t v33 = a3[13];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  *(void *)(a1 + v33) = *(void *)(a2 + v33);
  swift_retain();
  swift_release();
  *(void *)(v34 + 8) = *(void *)(v35 + 8);
  swift_retain();
  swift_release();
  unint64_t v36 = *(void *)(v35 + 16);
  sub_228B0596C(v36);
  unint64_t v37 = *(void *)(v34 + 16);
  *(void *)(v34 + 16) = v36;
  sub_228B05A34(v37);
  uint64_t v38 = a3[14];
  uint64_t v39 = (void *)(a1 + v38);
  long long v40 = (void *)(a2 + v38);
  uint64_t v41 = v40[1];
  *uint64_t v39 = *v40;
  v39[1] = v41;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_228B3FC00(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v6 = a3[12];
  char v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  uint64_t v9 = type metadata accessor for KeyframeAnimationState();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268292FF0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
    uint64_t v13 = *(int *)(v9 + 20);
    uint64_t v22 = &v8[v13];
    uint64_t v23 = &v7[v13];
    uint64_t v14 = sub_228BAC418();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
    v15(v23, v22, v14);
    v15(&v7[*(int *)(v9 + 24)], &v8[*(int *)(v9 + 24)], v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(qword_268293128);
  *(void *)&v7[*(int *)(v16 + 28)] = *(void *)&v8[*(int *)(v16 + 28)];
  uint64_t v17 = a3[13];
  uint64_t v18 = a3[14];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  return a1;
}

uint64_t sub_228B3FE28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  char v7 = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *(void *)(a1 + 16);
  char v9 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v7;
  sub_228AD25F8(v8, v9);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 64);
  char v11 = *(unsigned char *)(a2 + 72);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 64);
  char v15 = *(unsigned char *)(a1 + 72);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v10;
  *(unsigned char *)(a1 + 72) = v11;
  sub_228AD2814(v12, v13, v14, v15);
  uint64_t v16 = a3[12];
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = type metadata accessor for KeyframeAnimationState();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 40))(v17, v18, v35);
      uint64_t v36 = *(int *)(v19 + 20);
      long long v42 = &v17[v36];
      unint64_t v37 = &v18[v36];
      uint64_t v38 = sub_228BAC418();
      uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 40);
      v39(v42, v37, v38);
      v39(&v17[*(int *)(v19 + 24)], &v18[*(int *)(v19 + 24)], v38);
      goto LABEL_7;
    }
    sub_228B3D868((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for KeyframeAnimationState);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268292FF0);
    memcpy(v17, v18, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v17, v18, v24);
  uint64_t v25 = *(int *)(v19 + 20);
  long long v40 = &v18[v25];
  uint64_t v41 = &v17[v25];
  uint64_t v26 = sub_228BAC418();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32);
  v27(v41, v40, v26);
  v27(&v17[*(int *)(v19 + 24)], &v18[*(int *)(v19 + 24)], v26);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_7:
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(qword_268293128);
  *(void *)&v17[*(int *)(v29 + 28)] = *(void *)&v18[*(int *)(v29 + 28)];
  swift_release();
  uint64_t v30 = a3[13];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  *(void *)(a1 + v3__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + v30);
  swift_release();
  *(void *)(v31 + 8) = *(void *)(v32 + 8);
  swift_release();
  unint64_t v33 = *(void *)(v31 + 16);
  *(void *)(v31 + 16) = *(void *)(v32 + 16);
  sub_228B05A34(v33);
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  swift_release();
  return a1;
}

uint64_t sub_228B401A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_228B401B8);
}

uint64_t sub_228B401B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_268293128);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 48);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_228B4026C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_228B40280);
}

uint64_t sub_228B40280(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_268293128);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 48);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_228B4032C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 144);
}

void sub_228B40334()
{
  type metadata accessor for MapSelectionManagerBox();
  sub_228BAD218();
  sub_228BAD718();
  if (v0 <= 0x3F)
  {
    type metadata accessor for _MapContentInputs(319);
    if (v1 <= 0x3F)
    {
      sub_228B4C960(319, &qword_268293238, (uint64_t *)&unk_268292FF0, MEMORY[0x263F1B750]);
      if (v2 <= 0x3F)
      {
        sub_228B4C9C0(319, (unint64_t *)&unk_268293240, MEMORY[0x263F19168], MEMORY[0x263F185C8]);
        if (v3 <= 0x3F)
        {
          sub_228B4C9C0(319, (unint64_t *)&qword_268293800, MEMORY[0x263F18570], MEMORY[0x263F185C8]);
          if (v4 <= 0x3F)
          {
            sub_228B4C9C0(319, &qword_2682925F0, MEMORY[0x263F19798], MEMORY[0x263F185C8]);
            if (v5 <= 0x3F)
            {
              sub_228B4C9C0(319, (unint64_t *)&unk_2682925F8, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
              if (v6 <= 0x3F)
              {
                sub_228B4C9C0(319, &qword_268293250, (uint64_t (*)(uint64_t))type metadata accessor for MapControlsConfig, MEMORY[0x263F185C8]);
                if (v7 <= 0x3F) {
                  swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *sub_228B4071C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v247 = *(void *)(a3 + 24);
  uint64_t v248 = *(void *)(a3 + 16);
  uint64_t v3 = *(void *)(v248 - 8);
  uint64_t v4 = *(void *)(v247 - 8);
  int v289 = *(_DWORD *)(v4 + 80) | *(_DWORD *)(v3 + 80);
  uint64_t v305 = v289 & 0xF8 | 7u;
  uint64_t v251 = v3;
  unint64_t v5 = *(void *)(v3 + 64);
  uint64_t v246 = v4;
  int v6 = *(_DWORD *)(v4 + 84);
  size_t v7 = *(void *)(v4 + 64);
  if (!*(_DWORD *)(v3 + 84)) {
    ++v5;
  }
  if (!v6) {
    ++v7;
  }
  size_t __n = v7;
  size_t v245 = v5;
  if (v5 <= v7) {
    unint64_t v5 = v7;
  }
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  unint64_t v290 = v5;
  uint64_t v269 = sub_228BACB48();
  uint64_t v8 = *(void *)(v269 - 8);
  uint64_t v266 = v8;
  int v287 = *(_DWORD *)(v8 + 80);
  uint64_t v268 = sub_228BAC608();
  uint64_t v9 = *(void *)(v268 - 8);
  uint64_t v265 = v9;
  int v286 = *(_DWORD *)(v9 + 80);
  uint64_t v267 = sub_228BACD78();
  uint64_t v264 = *(void *)(v267 - 8);
  int v284 = *(_DWORD *)(v264 + 80);
  uint64_t v296 = v284;
  uint64_t v309 = v287 & 0xFC | v286 | v284 | 3u;
  uint64_t v272 = *(void *)(v8 + 64);
  uint64_t v270 = *(void *)(v9 + 64);
  uint64_t v274 = *(void *)(v264 + 64);
  uint64_t v259 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
  uint64_t v10 = *(void *)(v259 - 8);
  int v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = sub_228BAC418();
  uint64_t v260 = *(void *)(v12 - 8);
  uint64_t v261 = v12;
  int v13 = *(_DWORD *)(v260 + 80);
  int v282 = v13 | v11;
  uint64_t v311 = (v13 | v11);
  uint64_t v258 = v10;
  uint64_t v257 = *(void *)(v10 + 64) + v13;
  uint64_t v14 = *(void *)(v260 + 64);
  uint64_t v250 = v14 + v13;
  size_t v15 = ((v250 + (v257 & ~(unint64_t)v13)) & ~(unint64_t)v13) + v14;
  HIDWORD(v256) = *(_DWORD *)(v260 + 84);
  LODWORD(v256) = *(_DWORD *)(v10 + 84);
  size_t v262 = v15;
  uint64_t v263 = v13;
  if (!v256) {
    ++v15;
  }
  size_t v292 = v15;
  uint64_t v276 = sub_228BAC9C8();
  uint64_t v16 = *(void *)(v276 - 8);
  int v280 = *(_DWORD *)(v16 + 80);
  uint64_t v17 = v280;
  uint64_t v18 = v280 | 7;
  unint64_t v19 = *(void *)(v16 + 64);
  if (v19 <= 8) {
    uint64_t v20 = 8;
  }
  else {
    uint64_t v20 = *(void *)(v16 + 64);
  }
  uint64_t v299 = v20;
  uint64_t v294 = sub_228BAC588();
  uint64_t v21 = *(void *)(v294 - 8);
  int v279 = *(_DWORD *)(v21 + 80);
  unint64_t v22 = *(void *)(v21 + 64);
  if (v22 <= 8) {
    uint64_t v23 = 8;
  }
  else {
    uint64_t v23 = *(void *)(v21 + 64);
  }
  uint64_t v300 = v23;
  uint64_t v24 = sub_228BACB68();
  uint64_t v252 = *(void *)(v24 - 8);
  uint64_t v253 = v24;
  int v25 = *(_DWORD *)(v252 + 80);
  unint64_t v26 = *(void *)(v252 + 64);
  if (v26 <= 8) {
    unint64_t v26 = 8;
  }
  unint64_t v295 = v26;
  uint64_t v27 = sub_228BAC848();
  uint64_t v254 = *(void *)(v27 - 8);
  uint64_t v255 = v27;
  int v28 = *(_DWORD *)(v254 + 80);
  unint64_t v29 = 8;
  if (*(void *)(v254 + 64) <= 8uLL) {
    uint64_t v30 = 8;
  }
  else {
    uint64_t v30 = *(void *)(*(void *)(v27 - 8) + 64);
  }
  uint64_t v298 = v280 | 7;
  uint64_t v275 = v16;
  unsigned int v31 = *(_DWORD *)(v16 + 84);
  uint64_t v293 = v21;
  unsigned int v32 = *(_DWORD *)(v21 + 84);
  uint64_t v33 = v18 | v279;
  if (v31 <= v32) {
    unsigned int v34 = *(_DWORD *)(v21 + 84);
  }
  else {
    unsigned int v34 = v31;
  }
  if (v34 <= 0x7FFFFFFE) {
    unsigned int v34 = 2147483646;
  }
  unsigned int v278 = v34;
  uint64_t v277 = v280 + 2;
  unint64_t v35 = v19 + v279;
  unint64_t v36 = ((v22
        + 7
        + ((v35 + (v277 & ~(unint64_t)v280)) & ~(unint64_t)v279)) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v37 = ((v279 + 3) & ~(unint64_t)v279) + v22;
  unint64_t v38 = ((v279 + 2) & ~(unint64_t)v279) + v22;
  if (v38
     + ((v36
       + v279
       + ((v37 + v33 + ((v36 + v279) & ~(unint64_t)v279)) & ~v33)) & ~(unint64_t)v279)
     + 6 > 8)
    unint64_t v29 = v38
        + ((v36
          + v279
          + ((v37 + v33 + ((v36 + v279) & ~(unint64_t)v279)) & ~v33)) & ~(unint64_t)v279)
        + 6;
  uint64_t v291 = v280;
  unint64_t v39 = v309 | v311 | v280 | v305 | v279 | (unint64_t)(v25 & 0xF8) | v28 & 0xF8 | 7;
  uint64_t v40 = *a2;
  *a1 = *a2;
  if (v39 == 7 && ((v289 | v287 | v286 | v284 | v282 | v280 | v279 | v25 | v28) & 0x100000) == 0)
  {
    uint64_t v41 = v25 & 0xF8;
    uint64_t v249 = v272 + v286;
    unint64_t v42 = v249 & ~(unint64_t)v286;
    uint64_t v273 = v270 + v284;
    size_t v281 = v292 + ((v311 + 16) & ~v311);
    if (((v29
         + ((v33
           + 82
           + ((v30
             + ((v295
               + 1
               + (v28 & 0xF8 | 7)
               + ((v300
                 + 1
                 + (v41 | 7)
                 + (((v279 | 7)
                   + v299
                   + 1
                   + ((v17
                     + 8
                     + ((v281
                       + ((((v274 + 3 + ((v273 + v42) & ~(unint64_t)v284)) & 0xFFFFFFFFFFFFFFFCLL)
                         + (v311 | 7)
                         + 4
                         + ((v309
                           + ((v290 + ((v305 + 16) & ~v305) + 1 + ((v305 + 200) & ~v305) + 7) & 0xFFFFFFFFFFFFFFF8)
                           + 8) & ~v309)) & ~(v311 | 7))
                       + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & ~(v279 | 7))) & ~(v41 | 7))) & ~(v28 & 0xF8 | 7))
             + 24) & 0xFFFFFFFFFFFFFFF8)) & ~v33)
         + 104) & 0xFFFFFFFFFFFFFFF8)
       + 9 <= 0x18)
    {
      unint64_t v237 = ((v274 + 3 + ((v270 + v284 + v42) & ~(unint64_t)v284)) & 0xFFFFFFFFFFFFFFFCLL)
           + (v311 | 7)
           + 4;
      uint64_t v238 = v17 + 8;
      uint64_t v239 = v299 + 1;
      uint64_t v240 = v300 + 1;
      uint64_t v236 = v41 | 7;
      unint64_t v241 = v295 + 1;
      uint64_t v242 = v28 & 0xF8 | 7;
      uint64_t v243 = v33 + 82;
      uint64_t v235 = v18 | v279;
      size_t v227 = ((v279 + 3) & ~(unint64_t)v279) + v22;
      unint64_t v228 = v37 + v33;
      uint64_t v230 = v279 + 3;
      unsigned int v283 = v31;
      size_t v232 = v36;
      unint64_t v233 = v22 + 7;
      unint64_t v271 = v35;
      unint64_t v234 = v36 + v279;
      unsigned int v288 = v32;
      uint64_t v231 = v279 + 2;
      size_t v229 = (v231 & ~(unint64_t)v279) + v22;
      unint64_t v285 = v29;
      a1[1] = a2[1];
      uint64_t v43 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v44 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v43 = *v44;
      v43[1] = v44[1];
      long long v45 = (void *)(((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v46 = (void *)(((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8);
      void *v45 = *v46;
      v45[1] = v46[1];
      id v47 = (void *)(((unint64_t)v45 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v48 = (void *)(((unint64_t)v46 + 23) & 0xFFFFFFFFFFFFFFF8);
      *id v47 = *v48;
      v47[1] = v48[1];
      int v49 = (void *)(((unint64_t)v47 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v50 = (void *)(((unint64_t)v48 + 23) & 0xFFFFFFFFFFFFFFF8);
      *int v49 = *v50;
      v49[1] = v50[1];
      uint64_t v51 = (void *)(((unint64_t)v49 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v52 = (void *)(((unint64_t)v50 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v51 = *v52;
      v51[1] = v52[1];
      id v53 = (void *)(((unint64_t)v51 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v54 = (void *)(((unint64_t)v52 + 23) & 0xFFFFFFFFFFFFFFF8);
      void *v53 = *v54;
      v53[1] = v54[1];
      unint64_t v55 = v54[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_228B0596C(v55);
      v53[2] = v55;
      unint64_t v56 = ((unint64_t)v53 + 31) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v57 = ((unint64_t)v54 + 31) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v58 = *(void *)(v57 + 24);
      LODWORD(v59) = -1;
      if (v58 < 0xFFFFFFFF) {
        uint64_t v59 = *(void *)(v57 + 24);
      }
      if ((int)v59 - 1 < 0)
      {
        if (v58)
        {
          *(void *)(v56 + 24) = v58;
          *(void *)(v56 + 32) = *(void *)(v57 + 32);
          (**(void (***)(unint64_t, unint64_t))(v58 - 8))(((unint64_t)v53 + 31) & 0xFFFFFFFFFFFFFFF8, ((unint64_t)v54 + 31) & 0xFFFFFFFFFFFFFFF8);
        }
        else
        {
          long long v67 = *(_OWORD *)v57;
          long long v68 = *(_OWORD *)(v57 + 16);
          *(void *)(v56 + 32) = *(void *)(v57 + 32);
          *(_OWORD *)unint64_t v56 = v67;
          *(_OWORD *)(v56 + 16) = v68;
        }
        uint64_t v65 = ~v305;
        uint64_t v69 = *(void *)(v57 + 40);
        *(unsigned char *)(v56 + 48) = *(unsigned char *)(v57 + 48);
        *(void *)(v56 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v69;
        uint64_t v70 = *(void *)(v57 + 56);
        *(unsigned char *)(v56 + 64) = *(unsigned char *)(v57 + 64);
        *(void *)(v56 + 56) = v70;
        size_t v63 = v290 + ((v305 + 16) & ~v305) + 1;
        uint64_t v64 = v311 | 7;
      }
      else
      {
        *(_OWORD *)unint64_t v56 = *(_OWORD *)v57;
        long long v60 = *(_OWORD *)(v57 + 16);
        long long v61 = *(_OWORD *)(v57 + 32);
        long long v62 = *(_OWORD *)(v57 + 48);
        *(unsigned char *)(v56 + 64) = *(unsigned char *)(v57 + 64);
        *(_OWORD *)(v56 + 32) = v61;
        *(_OWORD *)(v56 + 48) = v62;
        *(_OWORD *)(v56 + 16) = v60;
        size_t v63 = v290 + ((v305 + 16) & ~v305) + 1;
        uint64_t v64 = v311 | 7;
        uint64_t v65 = ~v305;
      }
      uint64_t v71 = ~v309;
      unint64_t v72 = ~(unint64_t)v286;
      uint64_t v73 = ~v296;
      uint64_t v74 = ~v64;
      char v75 = (void *)(((unint64_t)v53 + 103) & 0xFFFFFFFFFFFFFFF8);
      int v76 = (void *)(((unint64_t)v54 + 103) & 0xFFFFFFFFFFFFFFF8);
      *char v75 = *v76;
      uint64_t v77 = ((unint64_t)v75 + v305 + 8) & v65;
      uint64_t v78 = ((unint64_t)v76 + v305 + 8) & v65;
      unsigned int v79 = (void *)((v78 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (*v79 < 0xFFFFFFFFuLL)
      {
        memcpy((void *)v77, (const void *)v78, v63);
        uint64_t v87 = v263;
        uint64_t v88 = v249;
        uint64_t v89 = ~v311;
        goto LABEL_66;
      }
      uint64_t v297 = v74;
      *(void *)uint64_t v77 = *(void *)v78;
      unsigned int v80 = (void *)((v77 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v80 = *v79;
      uint64_t v81 = (void *)(((unint64_t)v80 + v305 + 8) & v65);
      int v82 = (unsigned __int8 *)(((unint64_t)v79 + v305 + 8) & v65);
      unsigned int v83 = v82[v290];
      swift_retain();
      swift_retain();
      if (v83 < 3)
      {
        uint64_t v85 = v251;
        if (v83 == 2)
        {
LABEL_51:
          if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v246 + 48))(v82, 1, v247))
          {
            memcpy(v81, v82, __n);
          }
          else
          {
            (*(void (**)(void *, unsigned __int8 *, uint64_t))(v246 + 16))(v81, v82, v247);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v246 + 56))(v81, 0, 1, v247);
          }
          uint64_t v87 = v263;
          uint64_t v88 = v249;
          size_t v63 = v290 + ((v305 + 16) & ~v305) + 1;
          uint64_t v89 = ~v311;
          char v90 = 2;
          goto LABEL_64;
        }
      }
      else
      {
        if (v290 <= 3) {
          uint64_t v84 = v290;
        }
        else {
          uint64_t v84 = 4;
        }
        uint64_t v85 = v251;
        switch(v84)
        {
          case 1:
            int v86 = *v82;
            if (v290 < 4) {
              goto LABEL_56;
            }
            goto LABEL_85;
          case 2:
            int v86 = *(unsigned __int16 *)v82;
            if (v290 < 4) {
              goto LABEL_56;
            }
            goto LABEL_85;
          case 3:
            int v86 = *(unsigned __int16 *)v82 | (v82[2] << 16);
            if (v290 < 4) {
              goto LABEL_56;
            }
            goto LABEL_85;
          case 4:
            int v86 = *(_DWORD *)v82;
            if (v290 >= 4)
            {
LABEL_85:
              unsigned int v83 = v86 + 3;
              if (v86 != -1) {
                break;
              }
              goto LABEL_51;
            }
LABEL_56:
            unsigned int v83 = (v86 | ((v83 - 3) << (8 * v290))) + 3;
LABEL_57:
            if (v83 == 2) {
              goto LABEL_51;
            }
            break;
          default:
            goto LABEL_57;
        }
      }
      if (v83 != 1)
      {
        uint64_t v91 = *(void **)v82;
        void *v81 = *(void *)v82;
        *((unsigned char *)v81 + v29__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
        id v92 = v91;
        uint64_t v87 = v263;
        uint64_t v88 = v249;
        size_t v63 = v290 + ((v305 + 16) & ~v305) + 1;
        uint64_t v89 = ~v311;
LABEL_65:
        uint64_t v74 = v297;
LABEL_66:
        uint64_t v303 = ~v87;
        uint64_t v306 = ~v298;
        uint64_t v93 = (void *)(((v77 | 7) + v63) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v94 = (void **)(((v78 | 7) + v63) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v95 = *v94;
        *uint64_t v93 = *v94;
        uint64_t v96 = ((unint64_t)v93 + v309 + 8) & v71;
        uint64_t v97 = ((unint64_t)v94 + v309 + 8) & v71;
        uint64_t v98 = *(void (**)(uint64_t, uint64_t, uint64_t))(v266 + 16);
        id v99 = v95;
        v98(v96, v97, v269);
        unint64_t v100 = (v88 + v96) & v72;
        unint64_t v101 = (v88 + v97) & v72;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v265 + 16))(v100, v101, v268);
        unint64_t v102 = (v273 + v100) & v73;
        unint64_t v103 = (v273 + v101) & v73;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v264 + 16))(v102, v103, v267);
        *(_DWORD *)((v274 + 3 + v102) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)((v274 + 3 + v103) & 0xFFFFFFFFFFFFFFFCLL);
        unint64_t v104 = (v237 + v96) & v74;
        unint64_t v105 = (v237 + v97) & v74;
        *(void *)unint64_t v104 = *(void *)v105;
        uint64_t v106 = (void *)((v104 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v107 = (void *)((v105 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v106 = *v107;
        uint64_t v108 = (void *)(((unint64_t)v106 + v311 + 8) & v89);
        uint64_t v109 = (unsigned __int8 *)(((unint64_t)v107 + v311 + 8) & v89);
        swift_retain();
        swift_retain();
        if (v256)
        {
          if (v256 >= HIDWORD(v256)) {
            int v110 = (*(uint64_t (**)(unsigned __int8 *))(v258 + 48))(v109);
          }
          else {
            int v110 = (*(uint64_t (**)(unint64_t))(v260 + 48))((unint64_t)&v109[v257] & v303);
          }
          uint64_t v111 = v235;
          unint64_t v112 = v295;
          if (v110)
          {
LABEL_80:
            memcpy(v108, v109, v292);
            uint64_t v117 = v279 | 7;
            uint64_t v116 = v236;
            goto LABEL_93;
          }
        }
        else
        {
          uint64_t v111 = v235;
          unint64_t v112 = v295;
          if (v109[v262])
          {
            int v113 = (v109[v262] - 1) << (8 * v262);
            if (v262 > 3) {
              int v113 = 0;
            }
            if (v262)
            {
              int v114 = v262 <= 3 ? v262 : 4;
              switch(v114)
              {
                case 2:
                  int v115 = *(unsigned __int16 *)v109;
                  break;
                case 3:
                  int v115 = *(unsigned __int16 *)v109 | (v109[2] << 16);
                  break;
                case 4:
                  int v115 = *(_DWORD *)v109;
                  break;
                default:
                  int v115 = *v109;
                  break;
              }
            }
            else
            {
              int v115 = 0;
            }
            if ((v115 | v113) != 0xFFFFFFFF) {
              goto LABEL_80;
            }
          }
        }
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v258 + 16))(v108, v109, v259);
        unint64_t v118 = ((unint64_t)v108 + v257) & v303;
        unint64_t v119 = (unint64_t)&v109[v257] & v303;
        double v120 = *(void (**)(unint64_t, unint64_t, uint64_t))(v260 + 16);
        v120(v118, v119, v261);
        v120((v250 + v118) & v303, (v250 + v119) & v303, v261);
        uint64_t v117 = v279 | 7;
        uint64_t v116 = v236;
        if (!v256) {
          *((unsigned char *)v108 + v262) = 0;
        }
LABEL_93:
        char v121 = (void *)(((v104 | 7) + v281) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v122 = (void *)(((v105 | 7) + v281) & 0xFFFFFFFFFFFFFFF8);
        *char v121 = *v122;
        uint64_t v123 = (void *)(((unint64_t)v121 + v238) & v306);
        long long v124 = (unsigned __int8 *)(((unint64_t)v122 + v238) & v306);
        unsigned int v125 = v124[v299];
        swift_retain();
        if (v125 < 2)
        {
          uint64_t v127 = v300;
        }
        else
        {
          if (v299 <= 3) {
            uint64_t v126 = v299;
          }
          else {
            uint64_t v126 = 4;
          }
          uint64_t v127 = v300;
          switch(v126)
          {
            case 1:
              int v128 = *v124;
              if (v299 < 4) {
                goto LABEL_102;
              }
              goto LABEL_106;
            case 2:
              int v128 = *(unsigned __int16 *)v124;
              if (v299 < 4) {
                goto LABEL_102;
              }
              goto LABEL_106;
            case 3:
              int v128 = *(unsigned __int16 *)v124 | (v124[2] << 16);
              if (v299 < 4) {
                goto LABEL_102;
              }
              goto LABEL_106;
            case 4:
              int v128 = *(_DWORD *)v124;
              if (v299 < 4) {
LABEL_102:
              }
                unsigned int v125 = (v128 | ((v125 - 2) << (8 * v299))) + 2;
              else {
LABEL_106:
              }
                unsigned int v125 = v128 + 2;
              break;
            default:
              break;
          }
        }
        uint64_t v129 = ~v117;
        if (v125 == 1)
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v275 + 16))(v123, v124, v276);
          char v130 = 1;
        }
        else
        {
          *uint64_t v123 = *(void *)v124;
          swift_retain();
          char v130 = 0;
        }
        *((unsigned char *)v123 + v299) = v130;
        uint64_t v131 = (void *)(((unint64_t)v123 + v239 + v117) & v129);
        id v132 = (unsigned __int8 *)((unint64_t)&v124[v239 + v117] & v129);
        unsigned int v133 = v132[v127];
        unsigned int v134 = v133 - 2;
        if (v133 >= 2)
        {
          if (v127 <= 3) {
            uint64_t v135 = v127;
          }
          else {
            uint64_t v135 = 4;
          }
          switch(v135)
          {
            case 1:
              int v136 = *v132;
              if (v127 < 4) {
                goto LABEL_118;
              }
              goto LABEL_122;
            case 2:
              int v136 = *(unsigned __int16 *)v132;
              if (v127 < 4) {
                goto LABEL_118;
              }
              goto LABEL_122;
            case 3:
              int v136 = *(unsigned __int16 *)v132 | (v132[2] << 16);
              if (v127 < 4) {
                goto LABEL_118;
              }
              goto LABEL_122;
            case 4:
              int v136 = *(_DWORD *)v132;
              if (v127 < 4) {
LABEL_118:
              }
                unsigned int v133 = (v136 | (v134 << (8 * v127))) + 2;
              else {
LABEL_122:
              }
                unsigned int v133 = v136 + 2;
              break;
            default:
              break;
          }
        }
        uint64_t v137 = ~v116;
        if (v133 == 1)
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v293 + 16))(v131, v132, v294);
          char v138 = 1;
        }
        else
        {
          *uint64_t v131 = *(void *)v132;
          swift_retain();
          char v138 = 0;
        }
        *((unsigned char *)v131 + v127) = v138;
        uint64_t v139 = (void *)(((unint64_t)v131 + v240 + v116) & v137);
        uint64_t v140 = (unsigned __int8 *)((unint64_t)&v132[v240 + v116] & v137);
        unsigned int v141 = v140[v112];
        unsigned int v142 = v141 - 2;
        if (v141 >= 2)
        {
          if (v112 <= 3) {
            uint64_t v143 = v112;
          }
          else {
            uint64_t v143 = 4;
          }
          switch(v143)
          {
            case 1:
              int v144 = *v140;
              if (v112 < 4) {
                goto LABEL_134;
              }
              goto LABEL_138;
            case 2:
              int v144 = *(unsigned __int16 *)v140;
              if (v112 < 4) {
                goto LABEL_134;
              }
              goto LABEL_138;
            case 3:
              int v144 = *(unsigned __int16 *)v140 | (v140[2] << 16);
              if (v112 < 4) {
                goto LABEL_134;
              }
              goto LABEL_138;
            case 4:
              int v144 = *(_DWORD *)v140;
              if (v112 < 4) {
LABEL_134:
              }
                unsigned int v141 = (v144 | (v142 << (8 * v112))) + 2;
              else {
LABEL_138:
              }
                unsigned int v141 = v144 + 2;
              break;
            default:
              break;
          }
        }
        uint64_t v145 = ~v242;
        if (v141 == 1)
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v252 + 16))(v139, v140, v253);
          char v146 = 1;
        }
        else
        {
          *uint64_t v139 = *(void *)v140;
          swift_retain();
          char v146 = 0;
        }
        *((unsigned char *)v139 + v112) = v146;
        id v147 = (void *)(((unint64_t)v139 + v241 + v242) & v145);
        uint64_t v148 = (unsigned __int8 *)((unint64_t)&v140[v241 + v242] & v145);
        unsigned int v149 = v148[v30];
        unsigned int v150 = v149 - 2;
        if (v149 >= 2)
        {
          if (v30 <= 3) {
            uint64_t v151 = v30;
          }
          else {
            uint64_t v151 = 4;
          }
          switch(v151)
          {
            case 1:
              int v152 = *v148;
              if (v30 < 4) {
                goto LABEL_150;
              }
              goto LABEL_154;
            case 2:
              int v152 = *(unsigned __int16 *)v148;
              if (v30 < 4) {
                goto LABEL_150;
              }
              goto LABEL_154;
            case 3:
              int v152 = *(unsigned __int16 *)v148 | (v148[2] << 16);
              if (v30 < 4) {
                goto LABEL_150;
              }
              goto LABEL_154;
            case 4:
              int v152 = *(_DWORD *)v148;
              if (v30 < 4) {
LABEL_150:
              }
                unsigned int v149 = (v152 | (v150 << (8 * v30))) + 2;
              else {
LABEL_154:
              }
                unsigned int v149 = v152 + 2;
              break;
            default:
              break;
          }
        }
        uint64_t v153 = v30 + 1;
        uint64_t v312 = ~v111;
        if (v149 == 1)
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v254 + 16))(v147, v148, v255);
          char v154 = 1;
        }
        else
        {
          void *v147 = *(void *)v148;
          swift_retain();
          char v154 = 0;
        }
        *((unsigned char *)v147 + v3__isPlatformVersionAtLeast(2, 18, 1, 0) = v154;
        uint64_t v155 = (char *)v147 + v153;
        id v156 = &v148[v153];
        unint64_t v157 = (unint64_t)(v155 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v158 = (unint64_t)(v156 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v159 = *(void *)v158;
        char v160 = *(unsigned char *)(v158 + 8);
        sub_228AD266C(*(void *)v158, v160);
        *(void *)unint64_t v157 = v159;
        *(unsigned char *)(v157 + 8) = v160;
        unint64_t v161 = (unint64_t)(v155 + 23) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v162 = (unint64_t)(v156 + 23) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v163 = *(void *)v162;
        uint64_t v164 = *(void *)(v162 + 8);
        uint64_t v165 = *(void *)(v162 + 16);
        uint64_t v166 = *(void *)(v162 + 24);
        uint64_t v167 = *(void *)(v162 + 32);
        uint64_t v168 = *(void *)(v162 + 40);
        uint64_t v169 = *(void *)(v162 + 48);
        uint64_t v170 = *(void *)(v162 + 56);
        uint64_t v301 = *(void *)(v162 + 64);
        uint64_t v304 = *(void *)(v162 + 72);
        char v307 = *(unsigned char *)(v162 + 80);
        char v310 = *(unsigned char *)(v162 + 81);
        sub_228AD2340(*(void *)v162, v164, v165, v166, v167, v168, v169, v170, v301, v304, v307, v310);
        *(void *)unint64_t v161 = v163;
        *(void *)(v161 + 8) = v164;
        *(void *)(v161 + 16) = v165;
        *(void *)(v161 + 24) = v166;
        *(void *)(v161 + 32) = v167;
        *(void *)(v161 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v168;
        *(void *)(v161 + 48) = v169;
        *(void *)(v161 + 56) = v170;
        *(void *)(v161 + 64) = v301;
        *(void *)(v161 + 72) = v304;
        *(unsigned char *)(v161 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v307;
        *(unsigned char *)(v161 + 81) = v310;
        unint64_t v171 = (v243 + v161) & v312;
        unint64_t v172 = (v243 + v162) & v312;
        unsigned int v173 = *(unsigned __int8 *)(v172 + v285);
        unsigned int v174 = v173 - 2;
        if (v173 < 2)
        {
          unsigned int v176 = v283;
          unsigned int v177 = v278;
        }
        else
        {
          if (v285 <= 3) {
            uint64_t v175 = v285;
          }
          else {
            uint64_t v175 = 4;
          }
          unsigned int v176 = v283;
          unsigned int v177 = v278;
          switch(v175)
          {
            case 1:
              int v178 = *(unsigned __int8 *)v172;
              if (v285 < 4) {
                goto LABEL_167;
              }
              goto LABEL_171;
            case 2:
              int v178 = *(unsigned __int16 *)v172;
              if (v285 < 4) {
                goto LABEL_167;
              }
              goto LABEL_171;
            case 3:
              int v178 = *(unsigned __int16 *)((v243 + v162) & v312) | (*(unsigned __int8 *)(((v243 + v162) & v312) + 2) << 16);
              if (v285 < 4) {
                goto LABEL_167;
              }
              goto LABEL_171;
            case 4:
              int v178 = *(_DWORD *)v172;
              if (v285 < 4) {
LABEL_167:
              }
                unsigned int v173 = (v178 | (v174 << (8 * v285))) + 2;
              else {
LABEL_171:
              }
                unsigned int v173 = v178 + 2;
              break;
            default:
              break;
          }
        }
        unint64_t v179 = v285 + 1;
        if (v173 != 1)
        {
          *(void *)unint64_t v171 = *(void *)v172;
          *(unsigned char *)(v171 + v285) = 0;
          swift_retain();
LABEL_209:
          uint64_t v203 = (char *)(v171 + v179);
          uint64_t v204 = (unsigned __int8 *)(v172 + v179);
          unint64_t v205 = (v171 + v179 + 7) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v206 = (v172 + v179 + 7) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v207 = *(void *)v206;
          char v208 = *(unsigned char *)(v206 + 8);
          sub_228AD266C(*(void *)v206, v208);
          *(void *)unint64_t v205 = v207;
          *(unsigned char *)(v205 + 8) = v208;
          unint64_t v209 = (unint64_t)(v203 + 23) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v210 = (unint64_t)(v204 + 23) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v211 = *(void *)v210;
          uint64_t v212 = *(void *)(v210 + 8);
          LOBYTE(v205) = *(unsigned char *)(v210 + 16);
          sub_228B3D138(*(void *)v210, v212, v205, (uint64_t (*)(void))sub_228AD28A4);
          *(void *)unint64_t v209 = v211;
          *(void *)(v209 + 8) = v212;
          *(unsigned char *)(v209 + 16) = v205;
          unint64_t v213 = (unint64_t)(v203 + 47) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v214 = (unint64_t)(v204 + 47) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v215 = *(void *)v214;
          uint64_t v216 = *(void *)(v214 + 8);
          LOBYTE(v205) = *(unsigned char *)(v214 + 16);
          sub_228B3D138(*(void *)v214, v216, v205, (uint64_t (*)(void))sub_228AD2688);
          *(void *)unint64_t v213 = v215;
          *(void *)(v213 + 8) = v216;
          *(unsigned char *)(v213 + 16) = v205;
          unint64_t v217 = (unint64_t)(v203 + 71) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v218 = (unint64_t)(v204 + 71) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v219 = *(void *)v218;
          LOBYTE(v216) = *(unsigned char *)(v218 + 8);
          sub_228AD266C(*(void *)v218, v216);
          *(void *)unint64_t v217 = v219;
          *(unsigned char *)(v217 + 8) = v216;
          unint64_t v220 = (unint64_t)(v203 + 87) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v221 = (unint64_t)(v204 + 87) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v222 = *(void *)v221;
          LOBYTE(v216) = *(unsigned char *)(v221 + 8);
          sub_228ACF3A4(*(void *)v221, v216);
          *(void *)unint64_t v220 = v222;
          *(unsigned char *)(v220 + 8) = v216;
          unint64_t v223 = (unint64_t)(v203 + 103) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v224 = (unint64_t)(v204 + 103) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v225 = *(void *)v224;
          LOBYTE(v216) = *(unsigned char *)(v224 + 8);
          sub_228AD266C(*(void *)v224, v216);
          *(void *)unint64_t v223 = v225;
          *(unsigned char *)(v223 + 8) = v216;
          return a1;
        }
        uint64_t v180 = ~v291;
        unint64_t v181 = ~(unint64_t)v279;
        unint64_t v182 = (v277 + v172) & ~v291;
        if (v176 == v177)
        {
          if (!(*(unsigned int (**)(unint64_t))(v275 + 48))((v277 + v172) & v180)) {
            goto LABEL_179;
          }
        }
        else
        {
          unint64_t v183 = (v271 + v182) & v181;
          if (v288 == v177)
          {
            if (!(*(unsigned int (**)(unint64_t))(v293 + 48))((v271 + v182) & v181))
            {
LABEL_179:
              unint64_t v183 = (v271 + v182) & v181;
              uint64_t v184 = (void *)((v233 + v183) & 0xFFFFFFFFFFFFFFF8);
LABEL_183:
              *(unsigned char *)unint64_t v171 = *(unsigned char *)v172;
              *(unsigned char *)(v171 | 1) = *(unsigned char *)(v172 | 1);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v275 + 16))((v277 + v171) & v180, v182, v276);
              unint64_t v186 = (v271 + ((v277 + v171) & v180)) & v181;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v293 + 16))(v186, v183, v294);
              *(void *)((v233 + v186) & 0xFFFFFFFFFFFFFFF8) = *v184;
              swift_retain();
              goto LABEL_185;
            }
          }
          else
          {
            uint64_t v184 = (void *)((v233 + v183) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v185 = *v184;
            if (*v184 >= 0xFFFFFFFFuLL) {
              LODWORD(v185) = -1;
            }
            if ((v185 + 1) < 2) {
              goto LABEL_183;
            }
          }
        }
        memcpy((void *)v171, (const void *)v172, v232);
LABEL_185:
        uint64_t v187 = (unsigned char *)((v234 + v171) & v181);
        uint64_t v188 = (unsigned char *)((v234 + v172) & v181);
        if (v288 > 0xFE)
        {
          if (!(*(unsigned int (**)(unint64_t))(v293 + 48))((unint64_t)&v188[v230] & v181)) {
            goto LABEL_187;
          }
        }
        else if (*v188 < 2u)
        {
LABEL_187:
          *uint64_t v187 = *v188;
          *(unsigned char *)(((v234 + v171) & v181) + 1) = *(unsigned char *)(((v234 + v172) & v181) + 1);
          *(unsigned char *)(((v234 + v171) & v181) + 2) = *(unsigned char *)(((v234 + v172) & v181) + 2);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v293 + 16))((unint64_t)&v187[v230] & v181, (unint64_t)&v188[v230] & v181, v294);
          goto LABEL_190;
        }
        memcpy(v187, v188, v227);
LABEL_190:
        unint64_t v189 = (unint64_t)&v187[v228] & v312;
        unint64_t v190 = (unint64_t)&v188[v228] & v312;
        unint64_t v191 = (v277 + v190) & v180;
        if (v283 == v278)
        {
          if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v275 + 48))((v277 + v190) & v180, v283, v276))goto LABEL_195; {
        }
          }
        else
        {
          unint64_t v192 = (v271 + v191) & v181;
          if (v288 == v278)
          {
            if (!(*(unsigned int (**)(unint64_t))(v293 + 48))((v271 + v191) & v181))
            {
LABEL_195:
              unint64_t v192 = (v271 + v191) & v181;
              uint64_t v193 = (void *)((v233 + v192) & 0xFFFFFFFFFFFFFFF8);
LABEL_199:
              *(unsigned char *)unint64_t v189 = *(unsigned char *)v190;
              *(unsigned char *)(v189 | 1) = *(unsigned char *)(v190 | 1);
              unint64_t v195 = (v277 + v189) & v180;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v275 + 16))(v195, v191, v276);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v293 + 16))((v271 + v195) & v181, v192, v294);
              *(void *)((v233 + ((v271 + v195) & v181)) & 0xFFFFFFFFFFFFFFF8) = *v193;
              swift_retain();
              goto LABEL_201;
            }
          }
          else
          {
            uint64_t v193 = (void *)((v233 + v192) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v194 = *v193;
            if (*v193 >= 0xFFFFFFFFuLL) {
              LODWORD(v194) = -1;
            }
            if ((v194 + 1) < 2) {
              goto LABEL_199;
            }
          }
        }
        memcpy((void *)v189, (const void *)v190, v232);
LABEL_201:
        uint64_t v196 = (unsigned char *)((v234 + v189) & v181);
        uint64_t v197 = (unsigned __int8 *)((v234 + v190) & v181);
        if (v288 > 0xFE)
        {
          unint64_t v199 = (unint64_t)&v197[v231] & v181;
          if (!(*(unsigned int (**)(unint64_t))(v293 + 48))(v199))
          {
            LOBYTE(v198) = *v197;
            goto LABEL_207;
          }
        }
        else
        {
          unsigned int v198 = *v197;
          if (v198 <= 1)
          {
            unint64_t v199 = (unint64_t)&v197[v231] & v181;
LABEL_207:
            *uint64_t v196 = v198;
            v196[1] = v197[1];
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v293 + 16))((unint64_t)&v196[v231] & v181, v199, v294);
            unint64_t v201 = v285;
            size_t v200 = v229;
            goto LABEL_208;
          }
        }
        size_t v200 = v229;
        memcpy(v196, v197, v229);
        unint64_t v201 = v285;
LABEL_208:
        uint64_t v202 = &v196[v200];
        *uint64_t v202 = *(_WORD *)&v197[v200];
        v202[1] = *(_WORD *)&v197[v200 + 2];
        v202[2] = *(_WORD *)&v197[v200 + 4];
        *(unsigned char *)(v171 + v201) = 1;
        goto LABEL_209;
      }
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v85 + 48))(v82, 1, v248))
      {
        memcpy(v81, v82, v245);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v85 + 16))(v81, v82, v248);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v85 + 56))(v81, 0, 1, v248);
      }
      uint64_t v87 = v263;
      uint64_t v88 = v249;
      size_t v63 = v290 + ((v305 + 16) & ~v305) + 1;
      uint64_t v89 = ~v311;
      char v90 = 1;
LABEL_64:
      *((unsigned char *)v81 + v29__isPlatformVersionAtLeast(2, 18, 1, 0) = v90;
      goto LABEL_65;
    }
  }
  uint64_t v66 = v40 + ((v39 + 16) & ~v39);
  swift_retain();
  return (uint64_t *)v66;
}

uint64_t sub_228B42274(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = ((((((((((v3 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  sub_228B05A34(*(void *)(v4 + 16));
  unint64_t v5 = (v4 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)(v5 + 24);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF) {
    uint64_t v7 = *(void *)(v5 + 24);
  }
  if ((int)v7 - 1 < 0 && v6) {
    __swift_destroy_boxed_opaque_existential_0(v5);
  }
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = (*(_DWORD *)(v10 + 80) | *(_DWORD *)(v9 + 80)) & 0xF8 | 7u;
  uint64_t v12 = v11 + 8;
  unint64_t v13 = (v11 + 8 + ((v4 + 103) & 0xFFFFFFFFFFFFFFF8)) & ~v11;
  int v14 = *(_DWORD *)(v9 + 84);
  unint64_t v15 = *(void *)(v9 + 64);
  int v16 = *(_DWORD *)(v10 + 84);
  unint64_t v17 = *(void *)(v10 + 64);
  uint64_t v18 = (v11 + 16) & ~v11;
  unint64_t v19 = (void *)((v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v19 <= 0xFFFFFFFEuLL)
  {
    if (v14) {
      unint64_t v29 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
    }
    else {
      unint64_t v29 = v15 + 1;
    }
    if (v16) {
      unint64_t v30 = *(void *)(*(void *)(v8 - 8) + 64);
    }
    else {
      unint64_t v30 = v17 + 1;
    }
    if (v29 <= v30) {
      unint64_t v29 = v30;
    }
    if (v29 <= 8) {
      uint64_t v24 = 8;
    }
    else {
      uint64_t v24 = v29;
    }
  }
  else
  {
    uint64_t v156 = *(void *)(a2 + 24);
    uint64_t v159 = *(void *)(a2 + 16);
    uint64_t v162 = (v11 + 16) & ~v11;
    uint64_t v20 = ~v11;
    swift_release();
    swift_release();
    if (v14) {
      unint64_t v21 = v15;
    }
    else {
      unint64_t v21 = v15 + 1;
    }
    unint64_t v22 = (unsigned __int8 *)(((unint64_t)v19 + v12) & v20);
    if (v16) {
      unint64_t v23 = v17;
    }
    else {
      unint64_t v23 = v17 + 1;
    }
    if (v21 <= v23) {
      unint64_t v21 = v23;
    }
    if (v21 <= 8) {
      uint64_t v24 = 8;
    }
    else {
      uint64_t v24 = v21;
    }
    unsigned int v25 = v22[v24];
    unsigned int v26 = v25 - 3;
    if (v25 >= 3)
    {
      if (v24 <= 3) {
        uint64_t v27 = v24;
      }
      else {
        uint64_t v27 = 4;
      }
      switch(v27)
      {
        case 1:
          int v28 = *v22;
          if (v24 >= 4) {
            goto LABEL_46;
          }
          goto LABEL_39;
        case 2:
          int v28 = *(unsigned __int16 *)v22;
          if (v24 >= 4) {
            goto LABEL_46;
          }
          goto LABEL_39;
        case 3:
          int v28 = *(unsigned __int16 *)v22 | (v22[2] << 16);
          if (v24 < 4) {
            goto LABEL_39;
          }
          goto LABEL_46;
        case 4:
          int v28 = *(_DWORD *)v22;
          if (v24 < 4)
          {
LABEL_39:
            unsigned int v25 = (v28 | (v26 << (8 * v24))) + 3;
            break;
          }
LABEL_46:
          unsigned int v25 = v28 + 3;
          if (v25 == 2) {
            goto LABEL_47;
          }
          goto LABEL_41;
        default:
          break;
      }
    }
    if (v25 == 2)
    {
LABEL_47:
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v22, 1, v156)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(v22, v156);
      }
    }
    else
    {
LABEL_41:
      if (v25 == 1)
      {
        if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48))(v22, 1, v159)) {
          (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(v22, v159);
        }
      }
      else
      {
      }
    }
    uint64_t v18 = v162;
  }
  unsigned int v31 = (id *)((v13 + v18 + v24 + 8) & 0xFFFFFFFFFFFFFFF8);

  uint64_t v32 = sub_228BACB48();
  uint64_t v33 = *(void *)(v32 - 8);
  int v34 = *(_DWORD *)(v33 + 80) & 0xFC;
  uint64_t v35 = sub_228BAC608();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(unsigned __int8 *)(v36 + 80);
  uint64_t v38 = sub_228BACD78();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(unsigned __int8 *)(v39 + 80);
  unint64_t v41 = ((unint64_t)v31 + (v34 | v37 | v40 | 3) + 8) & ~(unint64_t)(v34 | v37 | v40 | 3);
  (*(void (**)(unint64_t, uint64_t))(v33 + 8))(v41, v32);
  uint64_t v42 = *(void *)(v33 + 64) + v37;
  (*(void (**)(unint64_t, uint64_t))(v36 + 8))((v42 + v41) & ~v37, v35);
  uint64_t v43 = *(void *)(v36 + 64) + v40;
  (*(void (**)(unint64_t, uint64_t))(v39 + 8))((v43 + ((v42 + v41) & ~v37)) & ~v40, v38);
  unint64_t v44 = (((v43 + (v42 & ~v37)) & ~v40) + *(void *)(v39 + 64) + 3) & 0xFFFFFFFFFFFFFFFCLL;
  uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
  uint64_t v45 = *(void *)(v157 - 8);
  uint64_t v46 = v45;
  LODWORD(v37) = *(unsigned __int8 *)(v45 + 80);
  uint64_t v160 = sub_228BAC418();
  uint64_t v47 = *(void *)(v160 - 8);
  uint64_t v48 = v47;
  uint64_t v49 = *(_DWORD *)(v47 + 80);
  uint64_t v50 = v49 | v37;
  uint64_t v51 = (v41 + v44 + (v50 | 7) + 4) & ~(v50 | 7);
  swift_release();
  swift_release();
  uint64_t v52 = (unsigned __int16 *)((v50 + ((v51 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v50);
  uint64_t v53 = *(unsigned int *)(v45 + 84);
  unsigned int v54 = *(_DWORD *)(v47 + 84);
  uint64_t v55 = *(void *)(v45 + 64) + v49;
  uint64_t v56 = *(void *)(v47 + 64);
  uint64_t v57 = ((v56 + v49 + (v55 & ~v49)) & ~v49) + v56;
  int v58 = v54 | v53;
  uint64_t v154 = v56 + v49;
  if (v54 | v53)
  {
    uint64_t v59 = ~v49;
    if (v53 >= v54) {
      int v60 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v46 + 48))(v52, v53, v157);
    }
    else {
      int v60 = (*(uint64_t (**)(unint64_t))(v48 + 48))(((unint64_t)v52 + v55) & ~v49);
    }
    uint64_t v61 = v51;
    if (!v60)
    {
LABEL_64:
      (*(void (**)(unsigned __int16 *, uint64_t))(v46 + 8))(v52, v157);
      unint64_t v65 = ((unint64_t)v52 + v55) & v59;
      uint64_t v66 = *(void (**)(unint64_t, uint64_t))(v48 + 8);
      v66(v65, v160);
      v66((v154 + v65) & v59, v160);
    }
  }
  else
  {
    uint64_t v59 = ~v49;
    uint64_t v61 = v51;
    if (!*((unsigned char *)v52 + v57)) {
      goto LABEL_64;
    }
    int v62 = (*((unsigned __int8 *)v52 + v57) - 1) << (8 * v57);
    if (v57 > 3) {
      int v62 = 0;
    }
    if (v57)
    {
      int v63 = v57 <= 3 ? v57 : 4;
      switch(v63)
      {
        case 2:
          int v64 = *v52;
          break;
        case 3:
          int v64 = *v52 | (*((unsigned __int8 *)v52 + 2) << 16);
          break;
        case 4:
          int v64 = *(_DWORD *)v52;
          break;
        default:
          int v64 = *(unsigned __int8 *)v52;
          break;
      }
    }
    else
    {
      int v64 = 0;
    }
    if ((v64 | v62) == 0xFFFFFFFF) {
      goto LABEL_64;
    }
  }
  uint64_t v67 = ((v50 + 16) & ~v50) + v61;
  if (!v58) {
    ++v67;
  }
  unint64_t v68 = (v67 + v57 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v69 = sub_228BAC9C8();
  uint64_t v70 = *(void *)(v69 - 8);
  uint64_t v71 = *(unsigned __int8 *)(v70 + 80);
  uint64_t v72 = v71 | 7;
  uint64_t v73 = (unsigned __int8 *)((v68 + (v71 | 7) + 8) & ~(v71 | 7));
  unint64_t v158 = *(void *)(v70 + 64);
  if (v158 <= 8) {
    uint64_t v74 = 8;
  }
  else {
    uint64_t v74 = *(void *)(*(void *)(v69 - 8) + 64);
  }
  unsigned int v75 = v73[v74];
  unsigned int v76 = v75 - 2;
  if (v75 >= 2)
  {
    if (v74 <= 3) {
      uint64_t v77 = v74;
    }
    else {
      uint64_t v77 = 4;
    }
    switch(v77)
    {
      case 1:
        int v78 = *v73;
        if (v74 >= 4) {
          goto LABEL_84;
        }
        goto LABEL_80;
      case 2:
        int v78 = *(unsigned __int16 *)v73;
        if (v74 >= 4) {
          goto LABEL_84;
        }
        goto LABEL_80;
      case 3:
        int v78 = *(unsigned __int16 *)v73 | (v73[2] << 16);
        if (v74 < 4) {
          goto LABEL_80;
        }
        goto LABEL_84;
      case 4:
        int v78 = *(_DWORD *)v73;
        if (v74 < 4)
        {
LABEL_80:
          unsigned int v75 = (v78 | (v76 << (8 * v74))) + 2;
          break;
        }
LABEL_84:
        if (v78 != -1) {
          goto LABEL_85;
        }
        goto LABEL_82;
      default:
        break;
    }
  }
  if (v75 == 1) {
LABEL_82:
  }
    (*(void (**)(unsigned __int8 *, uint64_t))(v70 + 8))(v73, v69);
  else {
LABEL_85:
  }
    swift_release();
  uint64_t v79 = sub_228BAC588();
  uint64_t v161 = v79;
  uint64_t v163 = *(void *)(v79 - 8);
  uint64_t v80 = *(unsigned __int8 *)(v163 + 80);
  uint64_t v81 = (unsigned __int8 *)((unint64_t)&v73[v74 + 1 + (v80 | 7)] & ~(v80 | 7));
  unint64_t v82 = *(void *)(v163 + 64);
  if (v82 <= 8) {
    uint64_t v83 = 8;
  }
  else {
    uint64_t v83 = *(void *)(*(void *)(v79 - 8) + 64);
  }
  unsigned int v84 = v81[v83];
  unsigned int v85 = v84 - 2;
  if (v84 >= 2)
  {
    if (v83 <= 3) {
      uint64_t v86 = v83;
    }
    else {
      uint64_t v86 = 4;
    }
    switch(v86)
    {
      case 1:
        int v87 = *v81;
        if (v83 >= 4) {
          goto LABEL_103;
        }
        goto LABEL_99;
      case 2:
        int v87 = *(unsigned __int16 *)v81;
        if (v83 >= 4) {
          goto LABEL_103;
        }
        goto LABEL_99;
      case 3:
        int v87 = *(unsigned __int16 *)v81 | (v81[2] << 16);
        if (v83 < 4) {
          goto LABEL_99;
        }
        goto LABEL_103;
      case 4:
        int v87 = *(_DWORD *)v81;
        if (v83 < 4)
        {
LABEL_99:
          unsigned int v84 = (v87 | (v85 << (8 * v83))) + 2;
          break;
        }
LABEL_103:
        if (v87 != -1) {
          goto LABEL_104;
        }
        goto LABEL_101;
      default:
        break;
    }
  }
  if (v84 == 1) {
LABEL_101:
  }
    (*(void (**)(unsigned __int8 *, uint64_t))(v163 + 8))(v81, v79);
  else {
LABEL_104:
  }
    swift_release();
  uint64_t v88 = sub_228BACB68();
  uint64_t v89 = *(void *)(v88 - 8);
  uint64_t v90 = *(_DWORD *)(v89 + 80) & 0xF8 | 7;
  uint64_t v91 = (unsigned __int8 *)((unint64_t)&v81[v83 + 1 + v90] & ~v90);
  if (*(void *)(v89 + 64) <= 8uLL) {
    uint64_t v92 = 8;
  }
  else {
    uint64_t v92 = *(void *)(v89 + 64);
  }
  unsigned int v93 = v91[v92];
  unsigned int v94 = v93 - 2;
  if (v93 >= 2)
  {
    if (v92 <= 3) {
      uint64_t v95 = v92;
    }
    else {
      uint64_t v95 = 4;
    }
    switch(v95)
    {
      case 1:
        int v96 = *v91;
        if (v92 >= 4) {
          goto LABEL_122;
        }
        goto LABEL_118;
      case 2:
        int v96 = *(unsigned __int16 *)v91;
        if (v92 >= 4) {
          goto LABEL_122;
        }
        goto LABEL_118;
      case 3:
        int v96 = *(unsigned __int16 *)v91 | (v91[2] << 16);
        if (v92 < 4) {
          goto LABEL_118;
        }
        goto LABEL_122;
      case 4:
        int v96 = *(_DWORD *)v91;
        if (v92 < 4)
        {
LABEL_118:
          unsigned int v93 = (v96 | (v94 << (8 * v92))) + 2;
          break;
        }
LABEL_122:
        if (v96 != -1) {
          goto LABEL_123;
        }
        goto LABEL_120;
      default:
        break;
    }
  }
  if (v93 == 1) {
LABEL_120:
  }
    (*(void (**)(unsigned __int8 *, uint64_t))(v89 + 8))(v91, v88);
  else {
LABEL_123:
  }
    swift_release();
  uint64_t v97 = sub_228BAC848();
  uint64_t v98 = *(void *)(v97 - 8);
  uint64_t v99 = *(_DWORD *)(v98 + 80) & 0xF8 | 7;
  unint64_t v100 = (unsigned __int8 *)((unint64_t)&v91[v92 + 1 + v99] & ~v99);
  if (*(void *)(v98 + 64) <= 8uLL) {
    uint64_t v101 = 8;
  }
  else {
    uint64_t v101 = *(void *)(v98 + 64);
  }
  unsigned int v102 = v100[v101];
  unsigned int v103 = v102 - 2;
  if (v102 >= 2)
  {
    if (v101 <= 3) {
      uint64_t v104 = v101;
    }
    else {
      uint64_t v104 = 4;
    }
    switch(v104)
    {
      case 1:
        int v105 = *v100;
        if (v101 < 4) {
          goto LABEL_137;
        }
        goto LABEL_139;
      case 2:
        int v105 = *(unsigned __int16 *)v100;
        if (v101 >= 4) {
          goto LABEL_139;
        }
        goto LABEL_137;
      case 3:
        int v105 = *(unsigned __int16 *)v100 | (v100[2] << 16);
        if (v101 < 4) {
          goto LABEL_137;
        }
        goto LABEL_139;
      case 4:
        int v105 = *(_DWORD *)v100;
        if (v101 < 4) {
LABEL_137:
        }
          unsigned int v102 = (v105 | (v103 << (8 * v101))) + 2;
        else {
LABEL_139:
        }
          unsigned int v102 = v105 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v153 = v69;
  if (v102 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(v98 + 8))(v100, v97);
  }
  else {
    swift_release();
  }
  uint64_t v106 = &v100[v101];
  sub_228AD25F8(*(void *)((unint64_t)(v106 + 8) & 0xFFFFFFFFFFFFFFF8), *(unsigned char *)(((unint64_t)(v106 + 8) & 0xFFFFFFFFFFFFFFF8) + 8));
  unint64_t v107 = (unint64_t)(v106 + 24) & 0xFFFFFFFFFFFFFFF8;
  sub_228AD24B0(*(void *)v107, *(void *)(v107 + 8), *(void *)(v107 + 16), *(void *)(v107 + 24), *(void *)(v107 + 32), *(void *)(v107 + 40), *(void *)(v107 + 48), *(void *)(v107 + 56), *(void *)(v107 + 64), *(void *)(v107 + 72), *(unsigned char *)(v107 + 80), *(unsigned char *)(v107 + 81));
  uint64_t v108 = v72 | v80;
  uint64_t v109 = (unsigned __int8 *)(((v72 | v80) + v107 + 82) & ~(v72 | v80));
  uint64_t v152 = v70;
  uint64_t v110 = *(unsigned int *)(v70 + 84);
  uint64_t v111 = *(unsigned int *)(v163 + 84);
  if (v110 <= v111) {
    unsigned int v112 = *(_DWORD *)(v163 + 84);
  }
  else {
    unsigned int v112 = *(_DWORD *)(v70 + 84);
  }
  if (v112 <= 0x7FFFFFFE) {
    int v113 = 2147483646;
  }
  else {
    int v113 = v112;
  }
  uint64_t v114 = v71 + 2;
  unint64_t v115 = v82 + 7;
  uint64_t v116 = (v80 + 2) & ~v80;
  unint64_t v117 = ((v82 + 7 + ((((v71 + 2) & ~v71) + v158 + v80) & ~v80)) & 0xFFFFFFFFFFFFFFF8) + v80 + 8;
  unint64_t v118 = ((v80 + 3) & ~v80) + v82 + v108;
  if (v82 + v116 + ((v117 + ((v118 + (v117 & ~v80)) & ~v108)) & ~v80) + 6 <= 8) {
    uint64_t v119 = 8;
  }
  else {
    uint64_t v119 = v82 + v116 + ((v117 + ((v118 + (v117 & ~v80)) & ~v108)) & ~v80) + 6;
  }
  unsigned int v120 = v109[v119];
  unsigned int v121 = v120 - 2;
  if (v120 >= 2)
  {
    if (v119 <= 3) {
      uint64_t v122 = v119;
    }
    else {
      uint64_t v122 = 4;
    }
    switch(v122)
    {
      case 1:
        int v123 = *v109;
        if (v119 >= 4) {
          goto LABEL_195;
        }
        goto LABEL_162;
      case 2:
        int v123 = *(unsigned __int16 *)v109;
        if (v119 >= 4) {
          goto LABEL_195;
        }
        goto LABEL_162;
      case 3:
        int v123 = *(unsigned __int16 *)v109 | (v109[2] << 16);
        if (v119 < 4) {
          goto LABEL_162;
        }
        goto LABEL_195;
      case 4:
        int v123 = *(_DWORD *)v109;
        if (v119 < 4)
        {
LABEL_162:
          unsigned int v120 = (v123 | (v121 << (8 * v119))) + 2;
          break;
        }
LABEL_195:
        if (v123 != -1) {
          goto LABEL_196;
        }
        goto LABEL_164;
      default:
        break;
    }
  }
  if (v120 != 1)
  {
LABEL_196:
    swift_release();
    goto LABEL_197;
  }
LABEL_164:
  uint64_t v124 = ~v71;
  uint64_t v125 = ~v80;
  unint64_t v126 = (unint64_t)&v109[v114] & ~v71;
  uint64_t v155 = ~v80;
  uint64_t v146 = v80 + 2;
  unint64_t v147 = v82 + 7;
  int v151 = v113;
  uint64_t v149 = v124;
  unint64_t v150 = ((v80 + 3) & ~v80) + v82 + v108;
  uint64_t v148 = v80 + 3;
  if (v110 == v113)
  {
    int v127 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v152 + 48))(v126, v110, v153);
LABEL_168:
    uint64_t v125 = ~v80;
    if (v127) {
      goto LABEL_174;
    }
    unint64_t v128 = (v158 + v80 + v126) & v155;
    goto LABEL_173;
  }
  unint64_t v128 = (v158 + v80 + v126) & v125;
  if (v111 == v113)
  {
    int v127 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v163 + 48))((v158 + v80 + v126) & v125, v111, v161);
    goto LABEL_168;
  }
  unint64_t v129 = *(void *)((v115 + v128) & 0xFFFFFFFFFFFFFFF8);
  if (v129 >= 0xFFFFFFFF) {
    LODWORD(v129) = -1;
  }
  if ((v129 + 1) < 2)
  {
LABEL_173:
    (*(void (**)(unint64_t, uint64_t))(v152 + 8))(v126, v153);
    (*(void (**)(unint64_t, uint64_t))(v163 + 8))(v128, v161);
    swift_release();
    uint64_t v125 = ~v80;
  }
LABEL_174:
  uint64_t v130 = ~v108;
  uint64_t v131 = (unsigned __int8 *)((unint64_t)&v109[v117] & v125);
  if (v111 <= 0xFE)
  {
    uint64_t v132 = v153;
    if (*v131 >= 2u) {
      goto LABEL_177;
    }
    goto LABEL_176;
  }
  uint64_t v132 = v153;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v163 + 48))((unint64_t)&v131[v148] & v125, v111, v161))LABEL_176:(*(void (**)(unint64_t, uint64_t))(v163 + 8))((unint64_t)&v131[v148] & v155, v161); {
LABEL_177:
  }
  unint64_t v133 = (unint64_t)&v131[v150] & v130;
  unint64_t v134 = (v114 + v133) & v149;
  if (v110 == v151)
  {
    int v135 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v152 + 48))((v114 + v133) & v149, v110, v132);
  }
  else
  {
    uint64_t v136 = ~v80;
    unint64_t v137 = (v158 + v80 + v134) & v155;
    if (v111 != v151)
    {
      unint64_t v138 = *(void *)((v147 + v137) & 0xFFFFFFFFFFFFFFF8);
      if (v138 >= 0xFFFFFFFF) {
        LODWORD(v138) = -1;
      }
      if ((v138 + 1) >= 2) {
        goto LABEL_189;
      }
      goto LABEL_188;
    }
    int v135 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v163 + 48))((v158 + v80 + v134) & v155, v111, v161);
  }
  uint64_t v136 = ~v80;
  if (!v135)
  {
    unint64_t v137 = (v158 + v80 + v134) & v155;
LABEL_188:
    (*(void (**)(unint64_t, uint64_t))(v152 + 8))(v134, v132);
    (*(void (**)(unint64_t, uint64_t))(v163 + 8))(v137, v161);
    swift_release();
    uint64_t v136 = ~v80;
  }
LABEL_189:
  uint64_t v139 = (unsigned __int8 *)((v117 + v133) & v136);
  if (v111 > 0xFE)
  {
    unint64_t v140 = (unint64_t)&v139[v146] & v136;
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v163 + 48))(v140, v111, v161)) {
      goto LABEL_197;
    }
  }
  else
  {
    if (*v139 > 1u) {
      goto LABEL_197;
    }
    unint64_t v140 = (unint64_t)&v139[v146] & v136;
  }
  (*(void (**)(unint64_t, uint64_t))(v163 + 8))(v140, v161);
LABEL_197:
  unsigned int v141 = &v109[v119];
  sub_228AD25F8(*(void *)((unint64_t)&v109[v119 + 8] & 0xFFFFFFFFFFFFFFF8), *(unsigned char *)(((unint64_t)&v109[v119 + 8] & 0xFFFFFFFFFFFFFFF8) + 8));
  sub_228AD2698(*(void *)((unint64_t)(v141 + 24) & 0xFFFFFFFFFFFFFFF8), *(void *)(((unint64_t)(v141 + 24) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(((unint64_t)(v141 + 24) & 0xFFFFFFFFFFFFFFF8) + 16), (uint64_t (*)(void))sub_228AD28A0);
  sub_228AD2698(*(void *)((unint64_t)(v141 + 48) & 0xFFFFFFFFFFFFFFF8), *(void *)(((unint64_t)(v141 + 48) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(((unint64_t)(v141 + 48) & 0xFFFFFFFFFFFFFFF8) + 16), (uint64_t (*)(void))sub_228AD2678);
  sub_228AD25F8(*(void *)((unint64_t)(v141 + 72) & 0xFFFFFFFFFFFFFFF8), *(unsigned char *)(((unint64_t)(v141 + 72) & 0xFFFFFFFFFFFFFFF8) + 8));
  sub_228AD26A8(*(void *)((unint64_t)(v141 + 88) & 0xFFFFFFFFFFFFFFF8), *(unsigned char *)(((unint64_t)(v141 + 88) & 0xFFFFFFFFFFFFFFF8) + 8));
  unint64_t v142 = (unint64_t)&v109[v119 + 104] & 0xFFFFFFFFFFFFFFF8;
  uint64_t v143 = *(void *)v142;
  char v144 = *(unsigned char *)(v142 + 8);

  return sub_228AD25F8(v143, v144);
}

void *sub_228B4345C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  unint64_t v4 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v5 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v4 = *v5;
  v4[1] = v5[1];
  unint64_t v6 = (void *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  v6[1] = v7[1];
  uint64_t v8 = (void *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v8 = *v9;
  v8[1] = v9[1];
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  uint64_t v12 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  int v14 = (void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v15 = (void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v14 = *v15;
  v14[1] = v15[1];
  unint64_t v16 = v15[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_228B0596C(v16);
  void v14[2] = v16;
  unint64_t v17 = ((unint64_t)v14 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = ((unint64_t)v15 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = *(void *)(v18 + 24);
  LODWORD(v2__isPlatformVersionAtLeast(2, 18, 1, 0) = -1;
  if (v19 < 0xFFFFFFFF) {
    uint64_t v20 = *(void *)(v18 + 24);
  }
  if ((int)v20 - 1 < 0)
  {
    if (v19)
    {
      *(void *)(v17 + 24) = v19;
      *(void *)(v17 + 32) = *(void *)(v18 + 32);
      (**(void (***)(unint64_t, unint64_t))(v19 - 8))(((unint64_t)v14 + 31) & 0xFFFFFFFFFFFFFFF8, ((unint64_t)v15 + 31) & 0xFFFFFFFFFFFFFFF8);
    }
    else
    {
      long long v25 = *(_OWORD *)v18;
      long long v26 = *(_OWORD *)(v18 + 16);
      *(void *)(v17 + 32) = *(void *)(v18 + 32);
      *(_OWORD *)unint64_t v17 = v25;
      *(_OWORD *)(v17 + 16) = v26;
    }
    uint64_t v24 = a3;
    uint64_t v27 = *(void *)(v18 + 40);
    *(unsigned char *)(v17 + 48) = *(unsigned char *)(v18 + 48);
    *(void *)(v17 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v27;
    uint64_t v28 = *(void *)(v18 + 56);
    *(unsigned char *)(v17 + 64) = *(unsigned char *)(v18 + 64);
    *(void *)(v17 + 56) = v28;
  }
  else
  {
    *(_OWORD *)unint64_t v17 = *(_OWORD *)v18;
    long long v21 = *(_OWORD *)(v18 + 16);
    long long v22 = *(_OWORD *)(v18 + 32);
    long long v23 = *(_OWORD *)(v18 + 48);
    *(unsigned char *)(v17 + 64) = *(unsigned char *)(v18 + 64);
    *(_OWORD *)(v17 + 32) = v22;
    *(_OWORD *)(v17 + 48) = v23;
    *(_OWORD *)(v17 + 16) = v21;
    uint64_t v24 = a3;
  }
  unint64_t v29 = (void *)(((unint64_t)v14 + 103) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v30 = (void *)(((unint64_t)v15 + 103) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v29 = *v30;
  uint64_t v31 = *(void *)(v24 + 16);
  uint64_t v32 = *(void *)(v24 + 24);
  uint64_t v33 = *(void *)(v31 - 8);
  uint64_t v34 = *(void *)(v32 - 8);
  uint64_t v35 = (*(_DWORD *)(v34 + 80) | *(_DWORD *)(v33 + 80)) & 0xF8 | 7u;
  uint64_t v36 = v35 + 8;
  uint64_t v37 = ((unint64_t)v29 + v35 + 8) & ~v35;
  uint64_t v38 = ((unint64_t)v30 + v35 + 8) & ~v35;
  int v39 = *(_DWORD *)(v33 + 84);
  uint64_t v40 = *(void *)(v33 + 64);
  int v41 = *(_DWORD *)(v34 + 84);
  unint64_t v42 = *(void *)(v34 + 64);
  uint64_t v43 = (v35 + 16) & ~v35;
  unint64_t v44 = (void *)((v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v44 < 0xFFFFFFFFuLL)
  {
    if (v39) {
      unint64_t v56 = *(void *)(*(void *)(v31 - 8) + 64);
    }
    else {
      unint64_t v56 = v40 + 1;
    }
    if (!v41) {
      ++v42;
    }
    if (v56 > v42) {
      unint64_t v42 = v56;
    }
    if (v42 <= 8) {
      uint64_t v52 = 8;
    }
    else {
      uint64_t v52 = v42;
    }
    memcpy((void *)v37, (const void *)v38, (v43 | 1) + v52);
  }
  else
  {
    uint64_t v282 = v31;
    uint64_t v285 = (v35 + 16) & ~v35;
    uint64_t v45 = ~v35;
    if (v39) {
      size_t v46 = *(void *)(*(void *)(v31 - 8) + 64);
    }
    else {
      size_t v46 = v40 + 1;
    }
    uint64_t v290 = v37;
    *(void *)uint64_t v37 = *(void *)v38;
    uint64_t v47 = v37 + 15;
    *(void *)(v47 & 0xFFFFFFFFFFFFFFF8) = *v44;
    uint64_t v48 = (void *)((v36 + (v47 & 0xFFFFFFFFFFFFFFF8)) & v45);
    uint64_t v49 = (unsigned __int8 *)(((unint64_t)v44 + v36) & v45);
    if (v41) {
      size_t v50 = v42;
    }
    else {
      size_t v50 = v42 + 1;
    }
    size_t v279 = v46;
    if (v46 <= v50) {
      unint64_t v51 = v50;
    }
    else {
      unint64_t v51 = v46;
    }
    if (v51 <= 8) {
      uint64_t v52 = 8;
    }
    else {
      uint64_t v52 = v51;
    }
    unsigned int v53 = v49[v52];
    swift_retain();
    swift_retain();
    if (v53 >= 3)
    {
      if (v52 <= 3) {
        uint64_t v54 = v52;
      }
      else {
        uint64_t v54 = 4;
      }
      switch(v54)
      {
        case 1:
          int v55 = *v49;
          if (v52 >= 4) {
            goto LABEL_52;
          }
          goto LABEL_41;
        case 2:
          int v55 = *(unsigned __int16 *)v49;
          if (v52 < 4) {
            goto LABEL_41;
          }
          goto LABEL_52;
        case 3:
          int v55 = *(unsigned __int16 *)v49 | (v49[2] << 16);
          if (v52 < 4) {
            goto LABEL_41;
          }
          goto LABEL_52;
        case 4:
          int v55 = *(_DWORD *)v49;
          if (v52 < 4)
          {
LABEL_41:
            unsigned int v53 = (v55 | ((v53 - 3) << (8 * v52))) + 3;
            break;
          }
LABEL_52:
          unsigned int v53 = v55 + 3;
          if (v55 == -1) {
            goto LABEL_53;
          }
          goto LABEL_43;
        default:
          break;
      }
    }
    if (v53 == 2)
    {
LABEL_53:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v34 + 48))(v49, 1, v32))
      {
        memcpy(v48, v49, v50);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v34 + 16))(v48, v49, v32);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v48, 0, 1, v32);
      }
      uint64_t v43 = v285;
      uint64_t v37 = v290;
      char v59 = 2;
    }
    else
    {
LABEL_43:
      if (v53 != 1)
      {
        uint64_t v57 = *(void **)v49;
        *uint64_t v48 = *(void *)v49;
        *((unsigned char *)v48 + v52) = 0;
        id v58 = v57;
        uint64_t v43 = v285;
        uint64_t v37 = v290;
        goto LABEL_58;
      }
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v33 + 48))(v49, 1, v282))
      {
        memcpy(v48, v49, v279);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v33 + 16))(v48, v49, v282);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v48, 0, 1, v282);
      }
      uint64_t v43 = v285;
      uint64_t v37 = v290;
      char v59 = 1;
    }
    *((unsigned char *)v48 + v52) = v59;
  }
LABEL_58:
  uint64_t v60 = (v43 | 1) + v52;
  uint64_t v61 = (void *)(((v37 | 7) + v60) & 0xFFFFFFFFFFFFFFF8);
  int v62 = (void **)(((v38 | 7) + v60) & 0xFFFFFFFFFFFFFFF8);
  int v286 = *v62;
  *uint64_t v61 = *v62;
  uint64_t v63 = sub_228BACB48();
  uint64_t v64 = *(void *)(v63 - 8);
  int v65 = *(_DWORD *)(v64 + 80) & 0xFC;
  uint64_t v66 = sub_228BAC608();
  uint64_t v67 = *(void *)(v66 - 8);
  uint64_t v68 = *(unsigned __int8 *)(v67 + 80);
  uint64_t v291 = sub_228BACD78();
  uint64_t v69 = *(void *)(v291 - 8);
  uint64_t v70 = *(unsigned __int8 *)(v69 + 80);
  uint64_t v71 = v65 | v68 | v70 | 3;
  uint64_t v72 = ((unint64_t)v61 + v71 + 8) & ~v71;
  uint64_t v73 = ((unint64_t)v62 + v71 + 8) & ~v71;
  uint64_t v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16);
  id v75 = v286;
  v74(v72, v73, v63);
  uint64_t v76 = *(void *)(v64 + 64) + v68;
  uint64_t v77 = v72;
  uint64_t v78 = (v76 + v72) & ~v68;
  uint64_t v79 = (v76 + v73) & ~v68;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16))(v78, v79, v66);
  uint64_t v80 = *(void *)(v67 + 64) + v70;
  uint64_t v81 = (v80 + v78) & ~v70;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16))(v81, (v80 + v79) & ~v70, v291);
  uint64_t v82 = *(void *)(v69 + 64) + 3;
  *(_DWORD *)((v82 + v81) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)((v82 + ((v80 + v79) & ~v70)) & 0xFFFFFFFFFFFFFFFCLL);
  unint64_t v83 = (v82 + ((v80 + (v76 & ~v68)) & ~v70)) & 0xFFFFFFFFFFFFFFFCLL;
  uint64_t v272 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
  uint64_t v84 = *(void *)(v272 - 8);
  uint64_t v85 = v84;
  LODWORD(v79) = *(unsigned __int8 *)(v84 + 80);
  uint64_t v275 = sub_228BAC418();
  uint64_t v86 = *(void *)(v275 - 8);
  uint64_t v87 = v86;
  uint64_t v88 = v84;
  LOBYTE(v89) = *(_DWORD *)(v86 + 80);
  uint64_t v90 = v89 | v79;
  uint64_t v91 = v83 + (v90 | 7) + 4;
  uint64_t v287 = (v91 + v73) & ~(v90 | 7);
  int v280 = (void *)((v91 + v77) & ~(v90 | 7));
  *int v280 = *(void *)v287;
  uint64_t v89 = v89;
  uint64_t v92 = (void *)(((unint64_t)v280 + 15) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v93 = (void *)((v287 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v92 = *v93;
  uint64_t v277 = ((unint64_t)v92 + v90 + 8) & ~v90;
  unsigned int v94 = (unsigned __int8 *)(((unint64_t)v93 + v90 + 8) & ~v90);
  uint64_t v95 = *(unsigned int *)(v85 + 84);
  uint64_t v96 = *(unsigned int *)(v86 + 84);
  uint64_t v97 = *(void *)(v88 + 64);
  unint64_t v269 = ~(unint64_t)v89;
  uint64_t v98 = v97 + v89;
  uint64_t v99 = *(void *)(v86 + 64);
  uint64_t v266 = v99 + v89;
  size_t v100 = ((v99 + v89 + ((v97 + v89) & ~v89)) & ~v89) + v99;
  int v101 = v96 | v95;
  swift_retain();
  swift_retain();
  if (v96 | v95)
  {
    if (v95 >= v96) {
      int v102 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v85 + 48))(v94, v95, v272);
    }
    else {
      int v102 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v87 + 48))((unint64_t)&v94[v98] & v269, v96, v275);
    }
    unsigned int v103 = (void *)v277;
    unint64_t v104 = (unint64_t)v280;
    if (v102)
    {
LABEL_72:
      if (v101) {
        size_t v108 = v100;
      }
      else {
        size_t v108 = v100 + 1;
      }
      memcpy(v103, v94, v108);
      goto LABEL_83;
    }
  }
  else
  {
    unsigned int v103 = (void *)v277;
    unint64_t v104 = (unint64_t)v280;
    if (v94[v100])
    {
      int v105 = (v94[v100] - 1) << (8 * v100);
      if (v100 > 3) {
        int v105 = 0;
      }
      if (v100)
      {
        int v106 = v100 <= 3 ? v100 : 4;
        switch(v106)
        {
          case 2:
            int v107 = *(unsigned __int16 *)v94;
            break;
          case 3:
            int v107 = *(unsigned __int16 *)v94 | (v94[2] << 16);
            break;
          case 4:
            int v107 = *(_DWORD *)v94;
            break;
          default:
            int v107 = *v94;
            break;
        }
      }
      else
      {
        int v107 = 0;
      }
      if ((v107 | v105) != 0xFFFFFFFF) {
        goto LABEL_72;
      }
    }
  }
  (*(void (**)(void *, unsigned __int8 *, uint64_t))(v85 + 16))(v103, v94, v272);
  uint64_t v109 = v103;
  unint64_t v110 = ((unint64_t)v103 + v98) & v269;
  unint64_t v111 = (unint64_t)&v94[v98] & v269;
  unsigned int v112 = *(void (**)(unint64_t, unint64_t, uint64_t))(v87 + 16);
  v112(v110, v111, v275);
  v112((v266 + v110) & v269, (v266 + v111) & v269, v275);
  if (!v101) {
    v109[v100] = 0;
  }
LABEL_83:
  uint64_t v113 = (v90 + 16) & ~v90;
  if (!v101) {
    ++v113;
  }
  size_t v114 = v113 + v100;
  unint64_t v115 = (void *)(((v104 | 7) + v114) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v116 = (void *)(((v287 | 7) + v114) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v115 = *v116;
  uint64_t v117 = sub_228BAC9C8();
  uint64_t v118 = *(void *)(v117 - 8);
  uint64_t v119 = *(unsigned __int8 *)(v118 + 80);
  uint64_t v120 = v119 | 7;
  uint64_t v273 = v119;
  uint64_t v276 = v117;
  v119 += 8;
  unsigned int v121 = (void *)(((unint64_t)v115 + v119) & ~v120);
  uint64_t v270 = v120;
  uint64_t v122 = (unsigned __int8 *)(((unint64_t)v116 + v119) & ~v120);
  unint64_t v283 = *(void *)(v118 + 64);
  if (v283 <= 8) {
    uint64_t v123 = 8;
  }
  else {
    uint64_t v123 = *(void *)(*(void *)(v117 - 8) + 64);
  }
  unsigned int v124 = v122[v123];
  swift_retain();
  if (v124 >= 2)
  {
    if (v123 <= 3) {
      uint64_t v125 = v123;
    }
    else {
      uint64_t v125 = 4;
    }
    switch(v125)
    {
      case 1:
        int v126 = *v122;
        if (v123 >= 4) {
          goto LABEL_102;
        }
        goto LABEL_96;
      case 2:
        int v126 = *(unsigned __int16 *)v122;
        if (v123 < 4) {
          goto LABEL_96;
        }
        goto LABEL_102;
      case 3:
        int v126 = *(unsigned __int16 *)v122 | (v122[2] << 16);
        if (v123 < 4) {
          goto LABEL_96;
        }
        goto LABEL_102;
      case 4:
        int v126 = *(_DWORD *)v122;
        if (v123 < 4)
        {
LABEL_96:
          unsigned int v124 = (v126 | ((v124 - 2) << (8 * v123))) + 2;
          break;
        }
LABEL_102:
        if (v126 != -1) {
          goto LABEL_103;
        }
        goto LABEL_98;
      default:
        break;
    }
  }
  if (v124 == 1)
  {
LABEL_98:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v118 + 16))(v121, v122, v276);
    char v127 = 1;
  }
  else
  {
LABEL_103:
    *unsigned int v121 = *(void *)v122;
    swift_retain();
    char v127 = 0;
  }
  *((unsigned char *)v121 + v123) = v127;
  uint64_t v288 = sub_228BAC588();
  uint64_t v292 = *(void *)(v288 - 8);
  uint64_t v278 = *(unsigned __int8 *)(v292 + 80);
  unint64_t v128 = (void *)(((unint64_t)v121 + v123 + (v278 | 7) + 1) & ~(v278 | 7));
  unint64_t v129 = (unsigned __int8 *)((unint64_t)&v122[v123 + 1 + (v278 | 7)] & ~(v278 | 7));
  unint64_t v267 = *(void *)(v292 + 64);
  if (v267 <= 8) {
    uint64_t v130 = 8;
  }
  else {
    uint64_t v130 = *(void *)(*(void *)(v288 - 8) + 64);
  }
  unsigned int v131 = v129[v130];
  unsigned int v132 = v131 - 2;
  if (v131 >= 2)
  {
    if (v130 <= 3) {
      uint64_t v133 = v130;
    }
    else {
      uint64_t v133 = 4;
    }
    switch(v133)
    {
      case 1:
        int v134 = *v129;
        if (v130 >= 4) {
          goto LABEL_121;
        }
        goto LABEL_115;
      case 2:
        int v134 = *(unsigned __int16 *)v129;
        if (v130 < 4) {
          goto LABEL_115;
        }
        goto LABEL_121;
      case 3:
        int v134 = *(unsigned __int16 *)v129 | (v129[2] << 16);
        if (v130 < 4) {
          goto LABEL_115;
        }
        goto LABEL_121;
      case 4:
        int v134 = *(_DWORD *)v129;
        if (v130 < 4)
        {
LABEL_115:
          unsigned int v131 = (v134 | (v132 << (8 * v130))) + 2;
          break;
        }
LABEL_121:
        if (v134 != -1) {
          goto LABEL_122;
        }
        goto LABEL_117;
      default:
        break;
    }
  }
  if (v131 == 1)
  {
LABEL_117:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v292 + 16))(v128, v129, v288);
    char v135 = 1;
  }
  else
  {
LABEL_122:
    *unint64_t v128 = *(void *)v129;
    swift_retain();
    char v135 = 0;
  }
  *((unsigned char *)v128 + v13__isPlatformVersionAtLeast(2, 18, 1, 0) = v135;
  uint64_t v136 = v130 + 1;
  uint64_t v137 = sub_228BACB68();
  uint64_t v138 = *(void *)(v137 - 8);
  uint64_t v139 = *(_DWORD *)(v138 + 80) & 0xF8 | 7;
  unint64_t v140 = (void *)(((unint64_t)v128 + v136 + v139) & ~v139);
  unsigned int v141 = (unsigned __int8 *)((unint64_t)&v129[v136 + v139] & ~v139);
  if (*(void *)(v138 + 64) <= 8uLL) {
    uint64_t v142 = 8;
  }
  else {
    uint64_t v142 = *(void *)(v138 + 64);
  }
  unsigned int v143 = v141[v142];
  unsigned int v144 = v143 - 2;
  if (v143 >= 2)
  {
    if (v142 <= 3) {
      uint64_t v145 = v142;
    }
    else {
      uint64_t v145 = 4;
    }
    switch(v145)
    {
      case 1:
        int v146 = *v141;
        if (v142 >= 4) {
          goto LABEL_140;
        }
        goto LABEL_134;
      case 2:
        int v146 = *(unsigned __int16 *)v141;
        if (v142 < 4) {
          goto LABEL_134;
        }
        goto LABEL_140;
      case 3:
        int v146 = *(unsigned __int16 *)v141 | (v141[2] << 16);
        if (v142 < 4) {
          goto LABEL_134;
        }
        goto LABEL_140;
      case 4:
        int v146 = *(_DWORD *)v141;
        if (v142 < 4)
        {
LABEL_134:
          unsigned int v143 = (v146 | (v144 << (8 * v142))) + 2;
          break;
        }
LABEL_140:
        if (v146 != -1) {
          goto LABEL_141;
        }
        goto LABEL_136;
      default:
        break;
    }
  }
  if (v143 == 1)
  {
LABEL_136:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v138 + 16))(v140, v141, v137);
    char v147 = 1;
  }
  else
  {
LABEL_141:
    *unint64_t v140 = *(void *)v141;
    swift_retain();
    char v147 = 0;
  }
  *((unsigned char *)v140 + v142) = v147;
  uint64_t v148 = v142 + 1;
  uint64_t v149 = sub_228BAC848();
  uint64_t v150 = *(void *)(v149 - 8);
  uint64_t v151 = *(_DWORD *)(v150 + 80) & 0xF8 | 7;
  uint64_t v152 = (void *)(((unint64_t)v140 + v148 + v151) & ~v151);
  uint64_t v153 = (unsigned __int8 *)((unint64_t)&v141[v148 + v151] & ~v151);
  if (*(void *)(v150 + 64) <= 8uLL) {
    uint64_t v154 = 8;
  }
  else {
    uint64_t v154 = *(void *)(v150 + 64);
  }
  unsigned int v155 = v153[v154];
  unsigned int v156 = v155 - 2;
  if (v155 >= 2)
  {
    if (v154 <= 3) {
      uint64_t v157 = v154;
    }
    else {
      uint64_t v157 = 4;
    }
    switch(v157)
    {
      case 1:
        int v158 = *v153;
        if (v154 < 4) {
          goto LABEL_153;
        }
        goto LABEL_157;
      case 2:
        int v158 = *(unsigned __int16 *)v153;
        if (v154 < 4) {
          goto LABEL_153;
        }
        goto LABEL_157;
      case 3:
        int v158 = *(unsigned __int16 *)v153 | (v153[2] << 16);
        if (v154 < 4) {
          goto LABEL_153;
        }
        goto LABEL_157;
      case 4:
        int v158 = *(_DWORD *)v153;
        if (v154 < 4) {
LABEL_153:
        }
          unsigned int v155 = (v158 | (v156 << (8 * v154))) + 2;
        else {
LABEL_157:
        }
          unsigned int v155 = v158 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v281 = v118;
  if (v155 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v150 + 16))(v152, v153, v149);
    char v159 = 1;
  }
  else
  {
    *uint64_t v152 = *(void *)v153;
    swift_retain();
    char v159 = 0;
  }
  *((unsigned char *)v152 + v154) = v159;
  uint64_t v160 = (char *)v152 + v154 + 1;
  uint64_t v161 = &v153[v154 + 1];
  unint64_t v162 = (unint64_t)(v160 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v163 = (unint64_t)(v161 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v164 = *(void *)v163;
  char v165 = *(unsigned char *)(v163 + 8);
  sub_228AD266C(*(void *)v163, v165);
  *(void *)unint64_t v162 = v164;
  *(unsigned char *)(v162 + 8) = v165;
  unint64_t v166 = (unint64_t)(v160 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v167 = (unint64_t)(v161 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v168 = *(void *)v167;
  uint64_t v169 = *(void *)(v167 + 8);
  uint64_t v170 = *(void *)(v167 + 16);
  uint64_t v171 = *(void *)(v167 + 24);
  uint64_t v172 = *(void *)(v167 + 32);
  uint64_t v173 = *(void *)(v167 + 40);
  uint64_t v174 = *(void *)(v167 + 48);
  uint64_t v175 = *(void *)(v167 + 56);
  size_t v257 = *(void *)(v167 + 64);
  uint64_t v259 = *(void *)(v167 + 72);
  char __na = *(unsigned char *)(v167 + 80);
  char v263 = *(unsigned char *)(v167 + 81);
  sub_228AD2340(*(void *)v167, v169, v170, v171, v172, v173, v174, v175, v257, v259, __na, v263);
  *(void *)unint64_t v166 = v168;
  *(void *)(v166 + 8) = v169;
  *(void *)(v166 + 16) = v170;
  *(void *)(v166 + 24) = v171;
  *(void *)(v166 + 32) = v172;
  *(void *)(v166 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v173;
  *(void *)(v166 + 48) = v174;
  *(void *)(v166 + 56) = v175;
  *(void *)(v166 + 64) = v257;
  *(void *)(v166 + 72) = v259;
  *(unsigned char *)(v166 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = __na;
  *(unsigned char *)(v166 + 81) = v263;
  uint64_t v176 = v273;
  uint64_t v177 = v270 | v278;
  uint64_t v178 = (v270 | v278) + 82;
  unint64_t v179 = (v178 + v166) & ~(v270 | v278);
  unint64_t v180 = (v178 + v167) & ~(v270 | v278);
  uint64_t v181 = *(unsigned int *)(v281 + 84);
  uint64_t v182 = *(unsigned int *)(v292 + 84);
  if (v181 <= v182) {
    unsigned int v183 = *(_DWORD *)(v292 + 84);
  }
  else {
    unsigned int v183 = *(_DWORD *)(v281 + 84);
  }
  if (v183 <= 0x7FFFFFFE) {
    int v184 = 2147483646;
  }
  else {
    int v184 = v183;
  }
  uint64_t v185 = v273 + 2;
  unint64_t v186 = v267 + 7;
  unint64_t v187 = ((v267 + 7 + ((((v273 + 2) & ~v273) + v283 + v278) & ~v278)) & 0xFFFFFFFFFFFFFFF8) + 8;
  size_t v188 = ((v278 + 3) & ~v278) + v267;
  unint64_t v189 = ((v278 + 2) & ~v278) + v267;
  uint64_t v190 = v187 + v278;
  if (v189 + ((v187 + v278 + ((v188 + v177 + ((v187 + v278) & ~v278)) & ~v177)) & ~v278) + 6 <= 8) {
    uint64_t v191 = 8;
  }
  else {
    uint64_t v191 = v189 + ((v187 + v278 + ((v188 + v177 + ((v187 + v278) & ~v278)) & ~v177)) & ~v278) + 6;
  }
  unsigned int v192 = *(unsigned __int8 *)(v180 + v191);
  unsigned int v193 = v192 - 2;
  if (v192 >= 2)
  {
    if (v191 <= 3) {
      uint64_t v194 = v191;
    }
    else {
      uint64_t v194 = 4;
    }
    switch(v194)
    {
      case 1:
        int v195 = *(unsigned __int8 *)v180;
        if (v191 >= 4) {
          goto LABEL_217;
        }
        goto LABEL_178;
      case 2:
        int v195 = *(unsigned __int16 *)v180;
        if (v191 < 4) {
          goto LABEL_178;
        }
        goto LABEL_217;
      case 3:
        int v195 = *(unsigned __int16 *)v180 | (*(unsigned __int8 *)(v180 + 2) << 16);
        if (v191 < 4) {
          goto LABEL_178;
        }
        goto LABEL_217;
      case 4:
        int v195 = *(_DWORD *)v180;
        if (v191 < 4)
        {
LABEL_178:
          unsigned int v192 = (v195 | (v193 << (8 * v191))) + 2;
          break;
        }
LABEL_217:
        if (v195 != -1) {
          goto LABEL_218;
        }
        goto LABEL_180;
      default:
        break;
    }
  }
  if (v192 == 1)
  {
LABEL_180:
    size_t v258 = ((v278 + 2) & ~v278) + v267;
    uint64_t v260 = v191;
    uint64_t v196 = ~v278;
    uint64_t v271 = v273 + 2;
    uint64_t v274 = ~v273;
    unint64_t v197 = (v185 + v180) & ~v176;
    unint64_t v268 = v267 + 7;
    uint64_t v250 = v278 + 3;
    uint64_t v251 = v278 + 2;
    size_t __n = v187;
    int v255 = v184;
    size_t v254 = v188 + v177;
    size_t v249 = v188;
    if (v181 == v184)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v281 + 48))((v185 + v180) & ~v176, v181, v276))goto LABEL_185; {
    }
      }
    else
    {
      uint64_t v198 = v283 + v278;
      unint64_t v199 = (v283 + v278 + v197) & v196;
      if (v182 == v184)
      {
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v292 + 48))(v199, v182, v288))
        {
LABEL_185:
          uint64_t v198 = v283 + v278;
          uint64_t v200 = v271;
          unint64_t v252 = (v283 + v278 + v197) & v196;
          uint64_t v264 = (void *)((v268 + v252) & 0xFFFFFFFFFFFFFFF8);
LABEL_190:
          *(unsigned char *)unint64_t v179 = *(unsigned char *)v180;
          *(unsigned char *)(v179 | 1) = *(unsigned char *)(v180 | 1);
          unint64_t v202 = (v200 + v179) & v274;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v281 + 16))(v202, v197, v276);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v292 + 16))((v198 + v202) & v196, v252, v288);
          *(void *)((v268 + ((v198 + v202) & v196)) & 0xFFFFFFFFFFFFFFF8) = *v264;
          swift_retain();
          goto LABEL_192;
        }
      }
      else
      {
        unint64_t v201 = *(void *)((v186 + v199) & 0xFFFFFFFFFFFFFFF8);
        if (v201 >= 0xFFFFFFFF) {
          LODWORD(v201) = -1;
        }
        if ((v201 + 1) < 2)
        {
          uint64_t v264 = (void *)((v186 + v199) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v200 = v271;
          unint64_t v252 = (v198 + v197) & v196;
          goto LABEL_190;
        }
      }
    }
    memcpy((void *)v179, (const void *)v180, __n);
LABEL_192:
    uint64_t v203 = ~v177;
    uint64_t v265 = (unsigned char *)v179;
    uint64_t v204 = (unsigned char *)((v190 + v179) & v196);
    uint64_t v253 = (unsigned __int8 *)v180;
    unint64_t v205 = (unsigned char *)((v190 + v180) & v196);
    if (v182 > 0xFE)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v292 + 48))((unint64_t)&v205[v250] & v196, v182, v288))goto LABEL_194; {
    }
      }
    else if (*v205 < 2u)
    {
LABEL_194:
      *uint64_t v204 = *v205;
      *(unsigned char *)(((v190 + v179) & v196) + 1) = *(unsigned char *)(((v190 + v180) & v196) + 1);
      *(unsigned char *)(((v190 + v179) & v196) + 2) = *(unsigned char *)(((v190 + v180) & v196) + 2);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v292 + 16))((unint64_t)&v204[v250] & v196, (unint64_t)&v205[v250] & v196, v288);
      goto LABEL_197;
    }
    memcpy((void *)((v190 + v179) & v196), (const void *)((v190 + v180) & v196), v249);
LABEL_197:
    unint64_t v206 = (unint64_t)&v204[v254] & v203;
    unint64_t v207 = (unint64_t)&v205[v254] & v203;
    unint64_t v208 = (v271 + v207) & v274;
    if (v181 == v255)
    {
      int v209 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v281 + 48))((v271 + v207) & v274, v181, v276);
    }
    else
    {
      uint64_t v210 = v283 + v278;
      unint64_t v211 = (v283 + v278 + v208) & v196;
      if (v182 != v255)
      {
        unint64_t v214 = *(void *)((v268 + v211) & 0xFFFFFFFFFFFFFFF8);
        if (v214 >= 0xFFFFFFFF) {
          LODWORD(v214) = -1;
        }
        uint64_t v191 = v260;
        if ((v214 + 1) < 2)
        {
          int v284 = (void *)((v268 + v211) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v213 = v271;
          unint64_t v212 = (v210 + v208) & v196;
          goto LABEL_207;
        }
LABEL_208:
        memcpy((void *)v206, (const void *)v207, __n);
LABEL_209:
        unint64_t v180 = (unint64_t)v253;
        uint64_t v216 = (unsigned char *)((v190 + v206) & v196);
        unint64_t v217 = (unsigned __int8 *)((v190 + v207) & v196);
        if (v182 > 0xFE)
        {
          unint64_t v221 = (unint64_t)&v217[v251] & v196;
          int v222 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v292 + 48))(v221, v182, v288);
          uint64_t v219 = a1;
          if (!v222)
          {
            LOBYTE(v218) = *v217;
            uint64_t v220 = v278 + 2;
            goto LABEL_220;
          }
        }
        else
        {
          unsigned int v218 = *v217;
          uint64_t v219 = a1;
          if (v218 <= 1)
          {
            uint64_t v220 = v278 + 2;
            unint64_t v221 = (unint64_t)&v217[v251] & v196;
LABEL_220:
            *uint64_t v216 = v218;
            v216[1] = v217[1];
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v292 + 16))((unint64_t)&v216[v220] & v196, v221, v288);
            size_t v223 = v258;
            goto LABEL_221;
          }
        }
        size_t v223 = v258;
        memcpy(v216, v217, v258);
LABEL_221:
        unint64_t v224 = &v216[v223];
        *unint64_t v224 = *(_WORD *)&v217[v223];
        v224[1] = *(_WORD *)&v217[v223 + 2];
        v224[2] = *(_WORD *)&v217[v223 + 4];
        *(unsigned char *)(v179 + v191) = 1;
        goto LABEL_222;
      }
      int v209 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v292 + 48))(v211, v182, v288);
    }
    uint64_t v191 = v260;
    if (!v209)
    {
      uint64_t v210 = v283 + v278;
      unint64_t v212 = (v283 + v278 + v208) & v196;
      int v284 = (void *)((v268 + v212) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v213 = v271;
LABEL_207:
      *(unsigned char *)unint64_t v206 = *(unsigned char *)v207;
      *(unsigned char *)(v206 | 1) = *(unsigned char *)(v207 | 1);
      unint64_t v215 = (v213 + v206) & v274;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v281 + 16))(v215, v208, v276);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v292 + 16))((v210 + v215) & v196, v212, v288);
      *(void *)((v268 + ((v210 + v215) & v196)) & 0xFFFFFFFFFFFFFFF8) = *v284;
      swift_retain();
      unint64_t v179 = (unint64_t)v265;
      goto LABEL_209;
    }
    goto LABEL_208;
  }
LABEL_218:
  *(void *)unint64_t v179 = *(void *)v180;
  *(unsigned char *)(v179 + v191) = 0;
  swift_retain();
  uint64_t v219 = a1;
LABEL_222:
  uint64_t v225 = (unsigned char *)(v179 + v191 + 1);
  unint64_t v226 = (unsigned __int8 *)(v180 + v191 + 1);
  unint64_t v227 = (unint64_t)(v225 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v228 = (unint64_t)(v226 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v229 = *(void *)v228;
  char v230 = *(unsigned char *)(v228 + 8);
  sub_228AD266C(*(void *)v228, v230);
  *(void *)unint64_t v227 = v229;
  *(unsigned char *)(v227 + 8) = v230;
  unint64_t v231 = (unint64_t)(v225 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v232 = (unint64_t)(v226 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v233 = *(void *)v232;
  uint64_t v234 = *(void *)(v232 + 8);
  LOBYTE(v227) = *(unsigned char *)(v232 + 16);
  sub_228B3D138(*(void *)v232, v234, v227, (uint64_t (*)(void))sub_228AD28A4);
  *(void *)unint64_t v231 = v233;
  *(void *)(v231 + 8) = v234;
  *(unsigned char *)(v231 + 16) = v227;
  unint64_t v235 = (unint64_t)(v225 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v236 = (unint64_t)(v226 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v237 = *(void *)v236;
  uint64_t v238 = *(void *)(v236 + 8);
  LOBYTE(v227) = *(unsigned char *)(v236 + 16);
  sub_228B3D138(*(void *)v236, v238, v227, (uint64_t (*)(void))sub_228AD2688);
  *(void *)unint64_t v235 = v237;
  *(void *)(v235 + 8) = v238;
  *(unsigned char *)(v235 + 16) = v227;
  unint64_t v239 = (unint64_t)(v225 + 71) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v240 = (unint64_t)(v226 + 71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v241 = *(void *)v240;
  LOBYTE(v238) = *(unsigned char *)(v240 + 8);
  sub_228AD266C(*(void *)v240, v238);
  *(void *)unint64_t v239 = v241;
  *(unsigned char *)(v239 + 8) = v238;
  unint64_t v242 = (unint64_t)(v225 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v243 = (unint64_t)(v226 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v244 = *(void *)v243;
  LOBYTE(v238) = *(unsigned char *)(v243 + 8);
  sub_228ACF3A4(*(void *)v243, v238);
  *(void *)unint64_t v242 = v244;
  *(unsigned char *)(v242 + 8) = v238;
  unint64_t v245 = (unint64_t)(v225 + 103) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v246 = (unint64_t)(v226 + 103) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v247 = *(void *)v246;
  LOBYTE(v238) = *(unsigned char *)(v246 + 8);
  sub_228AD266C(*(void *)v246, v238);
  *(void *)unint64_t v245 = v247;
  *(unsigned char *)(v245 + 8) = v238;
  return v219;
}

void *sub_228B44CB4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  unint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[1] = v7[1];
  uint64_t v8 = (void *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v8 = *v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[1] = v9[1];
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[1] = v11[1];
  uint64_t v12 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[1] = v13[1];
  int v14 = (void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v15 = (void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v14 = *v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[1] = v15[1];
  unint64_t v16 = (void *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v17 = (void *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v16 = *v17;
  swift_retain();
  swift_release();
  v16[1] = v17[1];
  swift_retain();
  swift_release();
  unint64_t v18 = v17[2];
  sub_228B0596C(v18);
  unint64_t v19 = v16[2];
  v16[2] = v18;
  sub_228B05A34(v19);
  unint64_t v20 = ((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = ((unint64_t)v17 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = *(void *)(v20 + 24);
  LODWORD(v23) = -1;
  if (v22 >= 0xFFFFFFFF) {
    LODWORD(v24) = -1;
  }
  else {
    uint64_t v24 = *(void *)(v20 + 24);
  }
  int v25 = v24 - 1;
  unint64_t v26 = *(void *)(v21 + 24);
  if (v26 < 0xFFFFFFFF) {
    uint64_t v23 = *(void *)(v21 + 24);
  }
  int v27 = v23 - 1;
  v380 = a1;
  if ((v25 & 0x80000000) == 0)
  {
    if (v27 < 0) {
      goto LABEL_8;
    }
LABEL_13:
    *(_OWORD *)unint64_t v20 = *(_OWORD *)v21;
    long long v28 = *(_OWORD *)(v21 + 16);
    long long v29 = *(_OWORD *)(v21 + 32);
    long long v30 = *(_OWORD *)(v21 + 48);
    *(unsigned char *)(v20 + 64) = *(unsigned char *)(v21 + 64);
    *(_OWORD *)(v20 + 32) = v29;
    *(_OWORD *)(v20 + 48) = v30;
    *(_OWORD *)(v20 + 16) = v28;
    goto LABEL_20;
  }
  if ((v27 & 0x80000000) == 0)
  {
    if (v22) {
      __swift_destroy_boxed_opaque_existential_0(((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8);
    }
    goto LABEL_13;
  }
  if (v22)
  {
    uint64_t v31 = (uint64_t *)(((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8);
    if (v26)
    {
      __swift_assign_boxed_opaque_existential_1(v31, (uint64_t *)(((unint64_t)v17 + 31) & 0xFFFFFFFFFFFFFFF8));
      goto LABEL_19;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
LABEL_18:
    long long v32 = *(_OWORD *)v21;
    long long v33 = *(_OWORD *)(v21 + 16);
    *(void *)(v20 + 32) = *(void *)(v21 + 32);
    *(_OWORD *)unint64_t v20 = v32;
    *(_OWORD *)(v20 + 16) = v33;
    goto LABEL_19;
  }
LABEL_8:
  if (!v26) {
    goto LABEL_18;
  }
  *(void *)(v20 + 24) = v26;
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  (**(void (***)(unint64_t, unint64_t))(v26 - 8))(((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8, ((unint64_t)v17 + 31) & 0xFFFFFFFFFFFFFFF8);
LABEL_19:
  uint64_t v34 = *(void *)(v21 + 40);
  *(unsigned char *)(v20 + 48) = *(unsigned char *)(v21 + 48);
  *(void *)(v20 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v34;
  uint64_t v35 = *(void *)(v21 + 56);
  *(unsigned char *)(v20 + 64) = *(unsigned char *)(v21 + 64);
  *(void *)(v20 + 56) = v35;
LABEL_20:
  uint64_t v36 = (void *)(((unint64_t)v16 + 103) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v37 = (void *)(((unint64_t)v17 + 103) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v36 = *v37;
  uint64_t v38 = *(void *)(a3 + 24);
  uint64_t v413 = *(void *)(a3 + 16);
  uint64_t v39 = *(void *)(v413 - 8);
  uint64_t v40 = *(void *)(v38 - 8);
  uint64_t v41 = (*(_DWORD *)(v40 + 80) | *(_DWORD *)(v39 + 80)) & 0xF8 | 7u;
  uint64_t v42 = v41 + 8;
  uint64_t v43 = ~v41;
  unint64_t v44 = (void *)(((unint64_t)v36 + v41 + 8) & ~v41);
  uint64_t v45 = (void *)(((unint64_t)v37 + v41 + 8) & ~v41);
  uint64_t v411 = v39;
  int v46 = *(_DWORD *)(v39 + 84);
  size_t v47 = *(void *)(v39 + 64);
  int v48 = *(_DWORD *)(v40 + 84);
  size_t v49 = *(void *)(v40 + 64);
  uint64_t v420 = (v41 + 16) & ~v41;
  size_t v50 = (void *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v51 = (unint64_t *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v52 = *v51;
  if (*v50 >= 0xFFFFFFFFuLL)
  {
    uint64_t v406 = v38;
    v416 = v45;
    if (v52 >= 0xFFFFFFFF)
    {
      uint64_t v402 = ((unint64_t)v36 + v41 + 8) & ~v41;
      *unint64_t v44 = *v45;
      swift_retain();
      swift_release();
      *size_t v50 = *v51;
      swift_retain();
      swift_release();
      if (v46) {
        size_t v53 = v47;
      }
      else {
        size_t v53 = v47 + 1;
      }
      uint64_t v54 = (unsigned __int8 *)(((unint64_t)v50 + v42) & v43);
      int v55 = (unsigned __int8 *)(((unint64_t)v51 + v42) & v43);
      if (v48) {
        size_t v56 = v49;
      }
      else {
        size_t v56 = v49 + 1;
      }
      if (v53 <= v56) {
        unint64_t v57 = v56;
      }
      else {
        unint64_t v57 = v53;
      }
      if (v57 <= 8) {
        uint64_t v58 = 8;
      }
      else {
        uint64_t v58 = v57;
      }
      if (v54 == v55)
      {
LABEL_153:
        uint64_t v64 = v402;
        goto LABEL_154;
      }
      unsigned int v59 = v54[v58];
      unsigned int v60 = v59 - 3;
      if (v59 >= 3)
      {
        if (v58 <= 3) {
          uint64_t v61 = v58;
        }
        else {
          uint64_t v61 = 4;
        }
        switch(v61)
        {
          case 1:
            int v62 = *v54;
            break;
          case 2:
            int v62 = *(unsigned __int16 *)v54;
            break;
          case 3:
            int v62 = *(unsigned __int16 *)v54 | (v54[2] << 16);
            break;
          case 4:
            int v62 = *(_DWORD *)v54;
            break;
          default:
            goto LABEL_129;
        }
        if (v58 < 4)
        {
          int v86 = v62 | (v60 << (8 * v58));
          unsigned int v59 = v86 + 3;
          if (v86 != -1)
          {
LABEL_130:
            if (v59 == 1)
            {
              if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v411 + 48))(v54, 1, v413)) {
                (*(void (**)(unsigned __int8 *, uint64_t))(v411 + 8))(v54, v413);
              }
            }
            else
            {
            }
            goto LABEL_137;
          }
LABEL_135:
          if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v40 + 48))(v54, 1, v406)) {
            (*(void (**)(unsigned __int8 *, uint64_t))(v40 + 8))(v54, v406);
          }
LABEL_137:
          unsigned int v87 = v55[v58];
          unsigned int v88 = v87 - 3;
          if (v87 >= 3)
          {
            if (v58 <= 3) {
              uint64_t v89 = v58;
            }
            else {
              uint64_t v89 = 4;
            }
            switch(v89)
            {
              case 1:
                int v90 = *v55;
                break;
              case 2:
                int v90 = *(unsigned __int16 *)v55;
                break;
              case 3:
                int v90 = *(unsigned __int16 *)v55 | (v55[2] << 16);
                break;
              case 4:
                int v90 = *(_DWORD *)v55;
                break;
              default:
                goto LABEL_148;
            }
            if (v58 < 4)
            {
              int v160 = v90 | (v88 << (8 * v58));
              unsigned int v87 = v160 + 3;
              if (v160 != -1) {
                goto LABEL_149;
              }
LABEL_201:
              if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v40 + 48))(v55, 1, v406))
              {
                memcpy(v54, v55, v56);
              }
              else
              {
                (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v40 + 16))(v54, v55, v406);
                (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v40 + 56))(v54, 0, 1, v406);
              }
              uint64_t v64 = v402;
              unint64_t v82 = (unint64_t)v416;
              uint64_t v78 = v420;
              v54[v58] = 2;
              goto LABEL_155;
            }
            unsigned int v87 = v90 + 3;
          }
LABEL_148:
          if (v87 != 2)
          {
LABEL_149:
            if (v87 == 1)
            {
              if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v411 + 48))(v55, 1, v413))
              {
                memcpy(v54, v55, v53);
              }
              else
              {
                (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v411 + 16))(v54, v55, v413);
                (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v411 + 56))(v54, 0, 1, v413);
              }
              uint64_t v64 = v402;
              unint64_t v82 = (unint64_t)v416;
              uint64_t v78 = v420;
              v54[v58] = 1;
              goto LABEL_155;
            }
            uint64_t v91 = *(void **)v55;
            *(void *)uint64_t v54 = *(void *)v55;
            v54[v58] = 0;
            id v92 = v91;
            goto LABEL_153;
          }
          goto LABEL_201;
        }
        unsigned int v59 = v62 + 3;
      }
LABEL_129:
      if (v59 != 2) {
        goto LABEL_130;
      }
      goto LABEL_135;
    }
    uint64_t v71 = (void *)(((unint64_t)v36 + v41 + 8) & ~v41);
    swift_release();
    swift_release();
    if (v46) {
      unint64_t v72 = v47;
    }
    else {
      unint64_t v72 = v47 + 1;
    }
    uint64_t v73 = (unsigned __int8 *)(((unint64_t)v50 + v42) & v43);
    if (v48) {
      size_t v74 = v49;
    }
    else {
      size_t v74 = v49 + 1;
    }
    if (v72 <= v74) {
      unint64_t v72 = v74;
    }
    if (v72 <= 8) {
      uint64_t v58 = 8;
    }
    else {
      uint64_t v58 = v72;
    }
    unsigned int v75 = v73[v58];
    unsigned int v76 = v75 - 3;
    if (v75 < 3)
    {
      uint64_t v78 = v420;
      if (v75 == 2)
      {
LABEL_91:
        if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v40 + 48))(v73, 1, v406)) {
          (*(void (**)(unsigned __int8 *, uint64_t))(v40 + 8))(v73, v406);
        }
LABEL_118:
        unint64_t v82 = (unint64_t)v416;
        memcpy(v71, v416, (v78 | 1) + v58);
        uint64_t v64 = (uint64_t)v71;
        goto LABEL_155;
      }
    }
    else
    {
      if (v58 <= 3) {
        uint64_t v77 = v58;
      }
      else {
        uint64_t v77 = 4;
      }
      uint64_t v78 = v420;
      switch(v77)
      {
        case 1:
          int v79 = *v73;
          if (v58 < 4) {
            goto LABEL_112;
          }
          goto LABEL_122;
        case 2:
          int v79 = *(unsigned __int16 *)v73;
          if (v58 < 4) {
            goto LABEL_112;
          }
          goto LABEL_122;
        case 3:
          int v79 = *(unsigned __int16 *)v73 | (v73[2] << 16);
          if (v58 < 4) {
            goto LABEL_112;
          }
          goto LABEL_122;
        case 4:
          int v79 = *(_DWORD *)v73;
          if (v58 >= 4)
          {
LABEL_122:
            unsigned int v75 = v79 + 3;
            if (v75 != 2) {
              break;
            }
            goto LABEL_91;
          }
LABEL_112:
          unsigned int v75 = (v79 | (v76 << (8 * v58))) + 3;
LABEL_113:
          if (v75 == 2) {
            goto LABEL_91;
          }
          break;
        default:
          goto LABEL_113;
      }
    }
    if (v75 == 1)
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v411 + 48))(v73, 1, v413)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v411 + 8))(v73, v413);
      }
    }
    else
    {
    }
    goto LABEL_118;
  }
  if (v52 >= 0xFFFFFFFF)
  {
    uint64_t v407 = v38;
    if (v46) {
      size_t v63 = *(void *)(*(void *)(v413 - 8) + 64);
    }
    else {
      size_t v63 = v47 + 1;
    }
    v416 = v45;
    uint64_t v64 = ((unint64_t)v36 + v41 + 8) & ~v41;
    *unint64_t v44 = *v45;
    *size_t v50 = *v51;
    int v65 = (void *)(((unint64_t)v50 + v42) & v43);
    uint64_t v66 = (unsigned __int8 *)(((unint64_t)v51 + v42) & v43);
    if (!v48) {
      ++v49;
    }
    if (v63 <= v49) {
      unint64_t v67 = v49;
    }
    else {
      unint64_t v67 = v63;
    }
    if (v67 <= 8) {
      uint64_t v58 = 8;
    }
    else {
      uint64_t v58 = v67;
    }
    unsigned int v68 = v66[v58];
    swift_retain();
    swift_retain();
    if (v68 >= 3)
    {
      if (v58 <= 3) {
        uint64_t v69 = v58;
      }
      else {
        uint64_t v69 = 4;
      }
      switch(v69)
      {
        case 1:
          int v70 = *v66;
          if (v58 >= 4) {
            goto LABEL_105;
          }
          goto LABEL_94;
        case 2:
          int v70 = *(unsigned __int16 *)v66;
          if (v58 < 4) {
            goto LABEL_94;
          }
          goto LABEL_105;
        case 3:
          int v70 = *(unsigned __int16 *)v66 | (v66[2] << 16);
          if (v58 < 4) {
            goto LABEL_94;
          }
          goto LABEL_105;
        case 4:
          int v70 = *(_DWORD *)v66;
          if (v58 < 4)
          {
LABEL_94:
            unsigned int v68 = (v70 | ((v68 - 3) << (8 * v58))) + 3;
            break;
          }
LABEL_105:
          unsigned int v68 = v70 + 3;
          if (v70 == -1) {
            goto LABEL_106;
          }
          goto LABEL_96;
        default:
          break;
      }
    }
    if (v68 == 2)
    {
LABEL_106:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v40 + 48))(v66, 1, v407))
      {
        memcpy(v65, v66, v49);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v40 + 16))(v65, v66, v407);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v65, 0, 1, v407);
      }
      char v85 = 2;
    }
    else
    {
LABEL_96:
      if (v68 != 1)
      {
        unint64_t v83 = *(void **)v66;
        *int v65 = *(void *)v66;
        *((unsigned char *)v65 + v58) = 0;
        id v84 = v83;
LABEL_154:
        unint64_t v82 = (unint64_t)v416;
        uint64_t v78 = v420;
        goto LABEL_155;
      }
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v411 + 48))(v66, 1, v413))
      {
        memcpy(v65, v66, v63);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v411 + 16))(v65, v66, v413);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v411 + 56))(v65, 0, 1, v413);
      }
      char v85 = 1;
    }
    *((unsigned char *)v65 + v58) = v85;
    goto LABEL_154;
  }
  if (v46) {
    unint64_t v80 = *(void *)(*(void *)(v413 - 8) + 64);
  }
  else {
    unint64_t v80 = v47 + 1;
  }
  if (v48) {
    unint64_t v81 = *(void *)(*(void *)(v38 - 8) + 64);
  }
  else {
    unint64_t v81 = v49 + 1;
  }
  if (v80 <= v81) {
    unint64_t v80 = v81;
  }
  if (v80 <= 8) {
    uint64_t v58 = 8;
  }
  else {
    uint64_t v58 = v80;
  }
  uint64_t v78 = (v41 + 16) & ~v41;
  unint64_t v82 = (unint64_t)v45;
  uint64_t v64 = ((unint64_t)v36 + v41 + 8) & ~v41;
  memcpy(v44, v45, (v420 | 1) + v58);
LABEL_155:
  uint64_t v93 = (v78 | 1) + v58;
  unsigned int v94 = (void **)(((v64 | 7) + v93) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v95 = (void **)(((v82 | 7) + v93) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v96 = *v95;
  uint64_t v97 = *v94;
  *unsigned int v94 = *v95;
  id v98 = v96;

  uint64_t v99 = sub_228BACB48();
  uint64_t v100 = *(void *)(v99 - 8);
  int v101 = *(_DWORD *)(v100 + 80) & 0xFC;
  uint64_t v102 = sub_228BAC608();
  uint64_t v103 = *(void *)(v102 - 8);
  uint64_t v104 = *(unsigned __int8 *)(v103 + 80);
  uint64_t v417 = sub_228BACD78();
  uint64_t v105 = *(void *)(v417 - 8);
  uint64_t v106 = *(unsigned __int8 *)(v105 + 80);
  uint64_t v107 = v101 | v104 | v106 | 3;
  uint64_t v108 = ((unint64_t)v94 + v107 + 8) & ~v107;
  uint64_t v421 = ((unint64_t)v95 + v107 + 8) & ~v107;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 24))(v108, v421, v99);
  uint64_t v109 = *(void *)(v100 + 64) + v104;
  uint64_t v110 = (v109 + v421) & ~v104;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 24))((v109 + v108) & ~v104, v110, v102);
  uint64_t v111 = *(void *)(v103 + 64) + v106;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 24))((v111 + ((v109 + v108) & ~v104)) & ~v106, (v111 + v110) & ~v106, v417);
  uint64_t v112 = *(void *)(v105 + 64) + 3;
  *(_DWORD *)((v112 + ((v111 + ((v109 + v108) & ~v104)) & ~v106)) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)((v112 + ((v111 + v110) & ~v106)) & 0xFFFFFFFFFFFFFFFCLL);
  unint64_t v113 = (v112 + ((v111 + (v109 & ~v104)) & ~v106)) & 0xFFFFFFFFFFFFFFFCLL;
  uint64_t v396 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
  uint64_t v114 = *(void *)(v396 - 8);
  uint64_t v115 = v114;
  LODWORD(v106) = *(unsigned __int8 *)(v114 + 80);
  uint64_t v116 = sub_228BAC418();
  uint64_t v408 = *(void *)(v116 - 8);
  uint64_t v117 = v408;
  uint64_t v118 = *(_DWORD *)(v408 + 80) | v106;
  uint64_t v119 = *(_DWORD *)(v408 + 80);
  uint64_t v120 = v113 + (v118 | 7) + 4;
  unsigned int v121 = (void *)((v120 + v108) & ~(v118 | 7));
  uint64_t v418 = v116;
  v422 = (void *)((v120 + v421) & ~(v118 | 7));
  v403 = v121;
  *unsigned int v121 = *v422;
  unint64_t v122 = (unint64_t)v121 + 15;
  swift_retain();
  swift_release();
  v122 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v123 = (void *)(((unint64_t)v422 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v122 = *v123;
  swift_retain();
  swift_release();
  uint64_t v124 = v114;
  uint64_t v125 = (unsigned __int16 *)((v118 + 8 + v122) & ~v118);
  int v126 = (unsigned __int16 *)(((unint64_t)v123 + v118 + 8) & ~v118);
  v414 = (void *)v408;
  uint64_t v127 = *(unsigned int *)(v115 + 84);
  uint64_t v128 = *(unsigned int *)(v408 + 84);
  uint64_t v129 = ~v119;
  uint64_t v130 = *(void *)(v124 + 64) + v119;
  uint64_t v131 = *(void *)(v408 + 64);
  uint64_t v132 = v131 + v119;
  size_t v133 = ((v131 + v119 + (v130 & ~v119)) & ~v119) + v131;
  int v134 = v128 | v127;
  uint64_t v392 = v129;
  uint64_t v409 = v132;
  uint64_t v389 = v130;
  if (!(v128 | v127))
  {
    char v147 = 8 * v133;
    unint64_t v142 = (unint64_t)v422;
    uint64_t v143 = v396;
    if (*((unsigned char *)v125 + v133))
    {
      int v148 = (*((unsigned __int8 *)v125 + v133) - 1) << v147;
      if (v133 > 3) {
        int v148 = 0;
      }
      if (v133)
      {
        int v149 = v133 <= 3 ? v133 : 4;
        switch(v149)
        {
          case 2:
            int v150 = *v125;
            break;
          case 3:
            int v150 = *v125 | (*((unsigned __int8 *)v125 + 2) << 16);
            break;
          case 4:
            int v150 = *(_DWORD *)v125;
            break;
          default:
            int v150 = *(unsigned __int8 *)v125;
            break;
        }
      }
      else
      {
        int v150 = 0;
      }
      if ((v150 | v148) != 0xFFFFFFFF)
      {
        if (*((unsigned char *)v126 + v133))
        {
          int v154 = (*((unsigned __int8 *)v126 + v133) - 1) << v147;
          if (v133 > 3) {
            int v154 = 0;
          }
          if (v133)
          {
            int v155 = v133 <= 3 ? v133 : 4;
            switch(v155)
            {
              case 2:
                int v156 = *v126;
                break;
              case 3:
                int v156 = *v126 | (*((unsigned __int8 *)v126 + 2) << 16);
                break;
              case 4:
                int v156 = *(_DWORD *)v126;
                break;
              default:
                int v156 = *(unsigned __int8 *)v126;
                break;
            }
          }
          else
          {
            int v156 = 0;
          }
          if ((v156 | v154) != 0xFFFFFFFF) {
            goto LABEL_159;
          }
        }
        goto LABEL_485;
      }
    }
    if (!*((unsigned char *)v126 + v133)) {
      goto LABEL_212;
    }
    int v157 = (*((unsigned __int8 *)v126 + v133) - 1) << v147;
    if (v133 > 3) {
      int v157 = 0;
    }
    if (v133)
    {
      int v158 = v133 <= 3 ? v133 : 4;
      switch(v158)
      {
        case 2:
          int v159 = *v126;
          break;
        case 3:
          int v159 = *v126 | (*((unsigned __int8 *)v126 + 2) << 16);
          break;
        case 4:
          int v159 = *(_DWORD *)v126;
          break;
        default:
          int v159 = *(unsigned __int8 *)v126;
          break;
      }
    }
    else
    {
      int v159 = 0;
    }
    if ((v159 | v157) == 0xFFFFFFFF)
    {
LABEL_212:
      (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v115 + 24))(v125, v126, v143);
      unint64_t v163 = ((unint64_t)v125 + v130) & v392;
      unint64_t v164 = ((unint64_t)v126 + v130) & v392;
      char v165 = (void (*)(unint64_t, unint64_t, uint64_t))v414[3];
      v165(v163, v164, v418);
      v165((v409 + v163) & v392, (v409 + v164) & v392, v418);
      goto LABEL_213;
    }
LABEL_207:
    (*(void (**)(unsigned __int16 *, uint64_t))(v115 + 8))(v125, v143);
    unint64_t v161 = ((unint64_t)v125 + v130) & v392;
    unint64_t v162 = (void (*)(unint64_t, uint64_t))v414[1];
    v162(v161, v418);
    v162((v409 + v161) & v392, v418);
    if (v134) {
      size_t v144 = v133;
    }
    else {
      size_t v144 = v133 + 1;
    }
    uint64_t v145 = v125;
    int v146 = v126;
    unint64_t v142 = (unint64_t)v422;
    goto LABEL_211;
  }
  if (v127 < v128)
  {
    unint64_t v135 = ((unint64_t)v125 + v130) & v129;
    uint64_t v136 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v117 + 48);
    size_t v137 = v133;
    uint64_t v138 = v125;
    uint64_t v139 = v129;
    int v383 = v136(v135, v128, v418);
    unint64_t v140 = ((unint64_t)v126 + v130) & v139;
    uint64_t v125 = v138;
    size_t v133 = v137;
    int v141 = v136(v140, v128, v418);
    int v134 = v128 | v127;
    unint64_t v142 = (unint64_t)v422;
    uint64_t v143 = v396;
    if (v383) {
      goto LABEL_158;
    }
LABEL_173:
    uint64_t v130 = v389;
    if (!v141) {
      goto LABEL_212;
    }
    goto LABEL_207;
  }
  int v151 = v128 | v127;
  uint64_t v152 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v115 + 48);
  uint64_t v143 = v396;
  int v153 = v152(v125, v127, v396);
  int v141 = v152(v126, v127, v396);
  int v134 = v151;
  unint64_t v142 = (unint64_t)v422;
  if (!v153) {
    goto LABEL_173;
  }
LABEL_158:
  if (v141)
  {
LABEL_159:
    if (v134) {
      size_t v144 = v133;
    }
    else {
      size_t v144 = v133 + 1;
    }
    uint64_t v145 = v125;
    int v146 = v126;
LABEL_211:
    memcpy(v145, v146, v144);
LABEL_213:
    uint64_t v167 = ~v118;
    unint64_t v166 = (unint64_t)v403;
    goto LABEL_214;
  }
LABEL_485:
  (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v115 + 16))(v125, v126, v143);
  unint64_t v367 = ((unint64_t)v125 + v389) & v392;
  unint64_t v368 = ((unint64_t)v126 + v389) & v392;
  v369 = (void (*)(unint64_t, unint64_t, uint64_t))v414[2];
  v369(v367, v368, v418);
  v369((v409 + v367) & v392, (v409 + v368) & v392, v418);
  uint64_t v167 = ~v118;
  unint64_t v166 = (unint64_t)v403;
  if (!v134) {
    *((unsigned char *)v125 + v133) = 0;
  }
LABEL_214:
  uint64_t v168 = (v118 + 16) & v167;
  if (!v134) {
    ++v168;
  }
  size_t v169 = v168 + v133;
  uint64_t v170 = (void *)(((v166 | 7) + v169) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v171 = (void *)(((v142 | 7) + v169) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v170 = *v171;
  swift_retain();
  swift_release();
  uint64_t v410 = sub_228BAC9C8();
  uint64_t v415 = *(void *)(v410 - 8);
  uint64_t v172 = *(unsigned __int8 *)(v415 + 80);
  uint64_t v173 = v172 | 7;
  uint64_t v384 = v172;
  v172 += 8;
  uint64_t v174 = (unsigned __int8 *)(((unint64_t)v170 + v172) & ~v173);
  uint64_t v404 = v173;
  uint64_t v175 = (unsigned __int8 *)(((unint64_t)v171 + v172) & ~v173);
  unint64_t v381 = *(void *)(v415 + 64);
  if (v381 <= 8) {
    uint64_t v176 = 8;
  }
  else {
    uint64_t v176 = *(void *)(*(void *)(v410 - 8) + 64);
  }
  if (v174 != v175)
  {
    unsigned int v177 = v174[v176];
    unsigned int v178 = v177 - 2;
    if (v177 >= 2)
    {
      if (v176 <= 3) {
        uint64_t v179 = v176;
      }
      else {
        uint64_t v179 = 4;
      }
      switch(v179)
      {
        case 1:
          int v180 = *v174;
          if (v176 >= 4) {
            goto LABEL_234;
          }
          goto LABEL_228;
        case 2:
          int v180 = *(unsigned __int16 *)v174;
          if (v176 < 4) {
            goto LABEL_228;
          }
          goto LABEL_234;
        case 3:
          int v180 = *(unsigned __int16 *)v174 | (v174[2] << 16);
          if (v176 < 4) {
            goto LABEL_228;
          }
          goto LABEL_234;
        case 4:
          int v180 = *(_DWORD *)v174;
          if (v176 < 4)
          {
LABEL_228:
            unsigned int v177 = (v180 | (v178 << (8 * v176))) + 2;
            break;
          }
LABEL_234:
          if (v180 != -1) {
            goto LABEL_235;
          }
          goto LABEL_230;
        default:
          break;
      }
    }
    if (v177 == 1) {
LABEL_230:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v415 + 8))(v174, v410);
    else {
LABEL_235:
    }
      swift_release();
    unsigned int v181 = v175[v176];
    unsigned int v182 = v181 - 2;
    if (v181 >= 2)
    {
      if (v176 <= 3) {
        uint64_t v183 = v176;
      }
      else {
        uint64_t v183 = 4;
      }
      switch(v183)
      {
        case 1:
          int v184 = *v175;
          if (v176 >= 4) {
            goto LABEL_250;
          }
          goto LABEL_244;
        case 2:
          int v184 = *(unsigned __int16 *)v175;
          if (v176 < 4) {
            goto LABEL_244;
          }
          goto LABEL_250;
        case 3:
          int v184 = *(unsigned __int16 *)v175 | (v175[2] << 16);
          if (v176 < 4) {
            goto LABEL_244;
          }
          goto LABEL_250;
        case 4:
          int v184 = *(_DWORD *)v175;
          if (v176 < 4)
          {
LABEL_244:
            unsigned int v181 = (v184 | (v182 << (8 * v176))) + 2;
            break;
          }
LABEL_250:
          if (v184 != -1) {
            goto LABEL_251;
          }
          goto LABEL_246;
        default:
          break;
      }
    }
    if (v181 == 1)
    {
LABEL_246:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v415 + 16))(v174, v175, v410);
      v174[v176] = 1;
    }
    else
    {
LABEL_251:
      *(void *)uint64_t v174 = *(void *)v175;
      v174[v176] = 0;
      swift_retain();
    }
  }
  uint64_t v185 = sub_228BAC588();
  uint64_t v186 = *(void *)(v185 - 8);
  uint64_t v419 = v185;
  uint64_t v423 = v186;
  uint64_t v400 = *(unsigned __int8 *)(v186 + 80);
  uint64_t v187 = v176 + (v400 | 7) + 1;
  size_t v188 = (unsigned __int8 *)((unint64_t)&v174[v187] & ~(v400 | 7));
  unint64_t v189 = (unsigned __int8 *)((unint64_t)&v175[v187] & ~(v400 | 7));
  unint64_t v190 = *(void *)(v186 + 64);
  if (v190 <= 8) {
    uint64_t v191 = 8;
  }
  else {
    uint64_t v191 = *(void *)(v186 + 64);
  }
  if (v188 != v189)
  {
    unsigned int v192 = v188[v191];
    unsigned int v193 = v192 - 2;
    if (v192 >= 2)
    {
      if (v191 <= 3) {
        uint64_t v194 = v191;
      }
      else {
        uint64_t v194 = 4;
      }
      switch(v194)
      {
        case 1:
          int v195 = *v188;
          if (v191 >= 4) {
            goto LABEL_270;
          }
          goto LABEL_264;
        case 2:
          int v195 = *(unsigned __int16 *)v188;
          if (v191 < 4) {
            goto LABEL_264;
          }
          goto LABEL_270;
        case 3:
          int v195 = *(unsigned __int16 *)v188 | (v188[2] << 16);
          if (v191 < 4) {
            goto LABEL_264;
          }
          goto LABEL_270;
        case 4:
          int v195 = *(_DWORD *)v188;
          if (v191 < 4)
          {
LABEL_264:
            unsigned int v192 = (v195 | (v193 << (8 * v191))) + 2;
            break;
          }
LABEL_270:
          if (v195 != -1) {
            goto LABEL_271;
          }
          goto LABEL_266;
        default:
          break;
      }
    }
    if (v192 == 1) {
LABEL_266:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v423 + 8))(v188, v185);
    else {
LABEL_271:
    }
      swift_release();
    unsigned int v196 = v189[v191];
    unsigned int v197 = v196 - 2;
    if (v196 >= 2)
    {
      if (v191 <= 3) {
        uint64_t v198 = v191;
      }
      else {
        uint64_t v198 = 4;
      }
      switch(v198)
      {
        case 1:
          int v199 = *v189;
          if (v191 >= 4) {
            goto LABEL_286;
          }
          goto LABEL_280;
        case 2:
          int v199 = *(unsigned __int16 *)v189;
          if (v191 < 4) {
            goto LABEL_280;
          }
          goto LABEL_286;
        case 3:
          int v199 = *(unsigned __int16 *)v189 | (v189[2] << 16);
          if (v191 < 4) {
            goto LABEL_280;
          }
          goto LABEL_286;
        case 4:
          int v199 = *(_DWORD *)v189;
          if (v191 < 4)
          {
LABEL_280:
            unsigned int v196 = (v199 | (v197 << (8 * v191))) + 2;
            break;
          }
LABEL_286:
          if (v199 != -1) {
            goto LABEL_287;
          }
          goto LABEL_282;
        default:
          break;
      }
    }
    if (v196 == 1)
    {
LABEL_282:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v423 + 16))(v188, v189, v419);
      v188[v191] = 1;
    }
    else
    {
LABEL_287:
      *(void *)size_t v188 = *(void *)v189;
      v188[v191] = 0;
      swift_retain();
    }
  }
  uint64_t v200 = sub_228BACB68();
  uint64_t v201 = *(void *)(v200 - 8);
  uint64_t v202 = *(_DWORD *)(v201 + 80) & 0xF8 | 7;
  uint64_t v203 = v191 + v202 + 1;
  uint64_t v204 = (unsigned __int8 *)((unint64_t)&v188[v203] & ~v202);
  unint64_t v205 = (unsigned __int8 *)((unint64_t)&v189[v203] & ~v202);
  if (*(void *)(v201 + 64) <= 8uLL) {
    uint64_t v206 = 8;
  }
  else {
    uint64_t v206 = *(void *)(v201 + 64);
  }
  if (v204 != v205)
  {
    uint64_t v207 = v200;
    unsigned int v208 = v204[v206];
    unsigned int v209 = v208 - 2;
    if (v208 >= 2)
    {
      if (v206 <= 3) {
        uint64_t v210 = v206;
      }
      else {
        uint64_t v210 = 4;
      }
      switch(v210)
      {
        case 1:
          int v211 = *v204;
          if (v206 >= 4) {
            goto LABEL_306;
          }
          goto LABEL_300;
        case 2:
          int v211 = *(unsigned __int16 *)v204;
          if (v206 < 4) {
            goto LABEL_300;
          }
          goto LABEL_306;
        case 3:
          int v211 = *(unsigned __int16 *)v204 | (v204[2] << 16);
          if (v206 < 4) {
            goto LABEL_300;
          }
          goto LABEL_306;
        case 4:
          int v211 = *(_DWORD *)v204;
          if (v206 < 4)
          {
LABEL_300:
            unsigned int v208 = (v211 | (v209 << (8 * v206))) + 2;
            break;
          }
LABEL_306:
          if (v211 != -1) {
            goto LABEL_307;
          }
          goto LABEL_302;
        default:
          break;
      }
    }
    if (v208 == 1) {
LABEL_302:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v201 + 8))(v204, v200);
    else {
LABEL_307:
    }
      swift_release();
    unsigned int v212 = v205[v206];
    unsigned int v213 = v212 - 2;
    if (v212 >= 2)
    {
      if (v206 <= 3) {
        uint64_t v214 = v206;
      }
      else {
        uint64_t v214 = 4;
      }
      switch(v214)
      {
        case 1:
          int v215 = *v205;
          if (v206 >= 4) {
            goto LABEL_322;
          }
          goto LABEL_316;
        case 2:
          int v215 = *(unsigned __int16 *)v205;
          if (v206 < 4) {
            goto LABEL_316;
          }
          goto LABEL_322;
        case 3:
          int v215 = *(unsigned __int16 *)v205 | (v205[2] << 16);
          if (v206 < 4) {
            goto LABEL_316;
          }
          goto LABEL_322;
        case 4:
          int v215 = *(_DWORD *)v205;
          if (v206 < 4)
          {
LABEL_316:
            unsigned int v212 = (v215 | (v213 << (8 * v206))) + 2;
            break;
          }
LABEL_322:
          if (v215 != -1) {
            goto LABEL_323;
          }
          goto LABEL_318;
        default:
          break;
      }
    }
    if (v212 == 1)
    {
LABEL_318:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v201 + 16))(v204, v205, v207);
      v204[v206] = 1;
    }
    else
    {
LABEL_323:
      *(void *)uint64_t v204 = *(void *)v205;
      v204[v206] = 0;
      swift_retain();
    }
  }
  unint64_t v412 = v190;
  uint64_t v216 = sub_228BAC848();
  uint64_t v217 = *(void *)(v216 - 8);
  uint64_t v218 = *(_DWORD *)(v217 + 80) & 0xF8 | 7;
  uint64_t v219 = v206 + v218 + 1;
  uint64_t v220 = (unsigned __int8 *)((unint64_t)&v204[v219] & ~v218);
  unint64_t v221 = (unsigned __int8 *)((unint64_t)&v205[v219] & ~v218);
  if (*(void *)(v217 + 64) <= 8uLL) {
    uint64_t v222 = 8;
  }
  else {
    uint64_t v222 = *(void *)(v217 + 64);
  }
  if (v220 != v221)
  {
    uint64_t v223 = v216;
    unsigned int v224 = v220[v222];
    unsigned int v225 = v224 - 2;
    if (v224 >= 2)
    {
      if (v222 <= 3) {
        uint64_t v226 = v222;
      }
      else {
        uint64_t v226 = 4;
      }
      switch(v226)
      {
        case 1:
          int v227 = *v220;
          if (v222 >= 4) {
            goto LABEL_342;
          }
          goto LABEL_336;
        case 2:
          int v227 = *(unsigned __int16 *)v220;
          if (v222 < 4) {
            goto LABEL_336;
          }
          goto LABEL_342;
        case 3:
          int v227 = *(unsigned __int16 *)v220 | (v220[2] << 16);
          if (v222 < 4) {
            goto LABEL_336;
          }
          goto LABEL_342;
        case 4:
          int v227 = *(_DWORD *)v220;
          if (v222 < 4)
          {
LABEL_336:
            unsigned int v224 = (v227 | (v225 << (8 * v222))) + 2;
            break;
          }
LABEL_342:
          if (v227 != -1) {
            goto LABEL_343;
          }
          goto LABEL_338;
        default:
          break;
      }
    }
    if (v224 == 1) {
LABEL_338:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v217 + 8))(v220, v216);
    else {
LABEL_343:
    }
      swift_release();
    unsigned int v228 = v221[v222];
    unsigned int v229 = v228 - 2;
    if (v228 >= 2)
    {
      if (v222 <= 3) {
        uint64_t v230 = v222;
      }
      else {
        uint64_t v230 = 4;
      }
      switch(v230)
      {
        case 1:
          int v231 = *v221;
          if (v222 >= 4) {
            goto LABEL_358;
          }
          goto LABEL_352;
        case 2:
          int v231 = *(unsigned __int16 *)v221;
          if (v222 < 4) {
            goto LABEL_352;
          }
          goto LABEL_358;
        case 3:
          int v231 = *(unsigned __int16 *)v221 | (v221[2] << 16);
          if (v222 < 4) {
            goto LABEL_352;
          }
          goto LABEL_358;
        case 4:
          int v231 = *(_DWORD *)v221;
          if (v222 < 4)
          {
LABEL_352:
            unsigned int v228 = (v231 | (v229 << (8 * v222))) + 2;
            break;
          }
LABEL_358:
          if (v231 != -1) {
            goto LABEL_359;
          }
          goto LABEL_354;
        default:
          break;
      }
    }
    if (v228 == 1)
    {
LABEL_354:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v217 + 16))(v220, v221, v223);
      v220[v222] = 1;
    }
    else
    {
LABEL_359:
      *(void *)uint64_t v220 = *(void *)v221;
      v220[v222] = 0;
      swift_retain();
    }
  }
  unint64_t v232 = &v220[v222 + 1];
  uint64_t v233 = &v221[v222 + 1];
  unint64_t v234 = (unint64_t)(v232 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v235 = (unint64_t)(v233 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v236 = *(void *)v235;
  char v237 = *(unsigned char *)(v235 + 8);
  sub_228AD266C(*(void *)v235, v237);
  uint64_t v238 = *(void *)v234;
  char v239 = *(unsigned char *)(v234 + 8);
  *(void *)unint64_t v234 = v236;
  *(unsigned char *)(v234 + 8) = v237;
  sub_228AD25F8(v238, v239);
  unint64_t v240 = (unint64_t)(v233 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v241 = *(void *)v240;
  uint64_t v242 = *(void *)(v240 + 8);
  unint64_t v243 = (unint64_t)(v232 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v244 = *(void *)(v240 + 16);
  uint64_t v245 = *(void *)(v240 + 24);
  uint64_t v246 = *(void *)(v240 + 32);
  uint64_t v247 = *(void *)(v240 + 40);
  uint64_t v248 = *(void *)(v240 + 48);
  uint64_t v249 = *(void *)(v240 + 56);
  __srca = *(void **)(v240 + 64);
  uint64_t v390 = *(void *)(v240 + 72);
  char v393 = *(unsigned char *)(v240 + 80);
  char v397 = *(unsigned char *)(v240 + 81);
  sub_228AD2340(*(void *)v240, v242, v244, v245, v246, v247, v248, v249, (uint64_t)__srca, v390, v393, v397);
  uint64_t v250 = *(void *)v243;
  uint64_t v251 = *(void *)(v243 + 8);
  uint64_t v252 = *(void *)(v243 + 16);
  uint64_t v253 = *(void *)(v243 + 24);
  uint64_t v254 = *(void *)(v243 + 32);
  uint64_t v255 = *(void *)(v243 + 40);
  uint64_t v256 = *(void *)(v243 + 48);
  uint64_t v257 = *(void *)(v243 + 56);
  uint64_t v258 = *(void *)(v243 + 64);
  uint64_t v259 = *(void *)(v243 + 72);
  char v260 = *(unsigned char *)(v243 + 80);
  char v261 = *(unsigned char *)(v243 + 81);
  *(void *)unint64_t v243 = v241;
  *(void *)(v243 + 8) = v242;
  *(void *)(v243 + 16) = v244;
  *(void *)(v243 + 24) = v245;
  *(void *)(v243 + 32) = v246;
  *(void *)(v243 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v247;
  *(void *)(v243 + 48) = v248;
  *(void *)(v243 + 56) = v249;
  *(void *)(v243 + 64) = __srca;
  *(void *)(v243 + 72) = v390;
  *(unsigned char *)(v243 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v393;
  *(unsigned char *)(v243 + 81) = v397;
  sub_228AD24B0(v250, v251, v252, v253, v254, v255, v256, v257, v258, v259, v260, v261);
  uint64_t v262 = v400;
  uint64_t v263 = v404 | v400;
  uint64_t v264 = ~(v404 | v400);
  uint64_t v265 = (v263 + 82 + v243) & ~v263;
  uint64_t v266 = (unsigned __int8 *)((v263 + 82 + v240) & ~v263);
  if ((unsigned __int8 *)v265 == v266)
  {
    uint64_t v280 = ~v400;
    uint64_t v281 = (v400 + 2) & ~v400;
    uint64_t v282 = v380;
    unint64_t v267 = v412;
    unint64_t v273 = ((((v381 + v400 + ((v384 + 2) & ~v384)) & ~v400) + v412 + 7) & 0xFFFFFFFFFFFFFFF8) + v400 + 8;
    unint64_t v283 = v273 & ~v400;
    uint64_t v284 = (v400 + 3) & ~v400;
    goto LABEL_474;
  }
  unint64_t v267 = v412;
  uint64_t v268 = *(unsigned int *)(v415 + 84);
  uint64_t v269 = *(unsigned int *)(v423 + 84);
  if (v268 <= v269) {
    unsigned int v270 = *(_DWORD *)(v423 + 84);
  }
  else {
    unsigned int v270 = *(_DWORD *)(v415 + 84);
  }
  if (v270 <= 0x7FFFFFFE) {
    unsigned int v270 = 2147483646;
  }
  unsigned int v398 = v270;
  uint64_t v271 = v384;
  uint64_t v405 = v384 + 2;
  uint64_t v376 = v400 + 3;
  unint64_t v272 = v412 + ((v400 + 3) & ~v400);
  size_t v373 = v412 + ((v400 + 2) & ~v400);
  unint64_t __n = ((((v381 + v400 + ((v384 + 2) & ~v384)) & ~v400) + v412 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v273 = __n + v400;
  unint64_t v274 = (__n + v400) & ~v400;
  unint64_t v377 = v272 + v263;
  if (v373 + ((__n + v400 + ((v272 + v263 + v274) & v264)) & ~v400) + 6 <= 8) {
    uint64_t v275 = 8;
  }
  else {
    uint64_t v275 = v373 + ((__n + v400 + ((v272 + v263 + v274) & v264)) & ~v400) + 6;
  }
  unsigned int v276 = *(unsigned __int8 *)(v265 + v275);
  unsigned int v277 = v276 - 2;
  if (v276 >= 2)
  {
    if (v275 <= 3) {
      uint64_t v278 = v275;
    }
    else {
      uint64_t v278 = 4;
    }
    switch(v278)
    {
      case 1:
        int v279 = *(unsigned __int8 *)v265;
        if (v275 < 4) {
          goto LABEL_378;
        }
        goto LABEL_382;
      case 2:
        int v279 = *(unsigned __int16 *)v265;
        if (v275 < 4) {
          goto LABEL_378;
        }
        goto LABEL_382;
      case 3:
        int v279 = *(unsigned __int16 *)v265 | (*(unsigned __int8 *)(v265 + 2) << 16);
        if (v275 < 4) {
          goto LABEL_378;
        }
        goto LABEL_382;
      case 4:
        int v279 = *(_DWORD *)v265;
        if (v275 < 4) {
LABEL_378:
        }
          unsigned int v276 = (v279 | (v277 << (8 * v275))) + 2;
        else {
LABEL_382:
        }
          unsigned int v276 = v279 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v280 = ~v400;
  unint64_t __src = (unint64_t)v266;
  uint64_t v401 = ~v263;
  unsigned int v385 = *(_DWORD *)(v415 + 84);
  uint64_t v391 = v381 + v262;
  uint64_t v394 = ~v271;
  uint64_t v382 = (v262 + 2) & ~v262;
  unint64_t v378 = (__n + v262) & ~v262;
  uint64_t v379 = (v262 + 3) & ~v262;
  uint64_t v375 = v262 + 2;
  if (v276 != 1)
  {
    swift_release();
    goto LABEL_421;
  }
  uint64_t v285 = (v405 + v265) & ~v271;
  if (v268 == v398)
  {
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v415 + 48))((v405 + v265) & ~v271, v268, v410)) {
      goto LABEL_395;
    }
LABEL_390:
    uint64_t v286 = (v391 + v285) & v280;
LABEL_394:
    (*(void (**)(uint64_t, uint64_t))(v415 + 8))(v285, v410);
    (*(void (**)(uint64_t, uint64_t))(v423 + 8))(v286, v419);
    swift_release();
    goto LABEL_395;
  }
  uint64_t v286 = (v391 + v285) & v280;
  if (v269 == v398)
  {
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v423 + 48))((v391 + v285) & v280, v269, v419)) {
      goto LABEL_395;
    }
    goto LABEL_390;
  }
  unint64_t v287 = *(void *)((v412 + v286 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v287 >= 0xFFFFFFFF) {
    LODWORD(v287) = -1;
  }
  if ((v287 + 1) < 2) {
    goto LABEL_394;
  }
LABEL_395:
  uint64_t v288 = (unsigned __int8 *)((v273 + v265) & v280);
  if (v269 > 0xFE)
  {
    uint64_t v291 = v385;
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v423 + 48))((unint64_t)&v288[v376] & v280, v269, v419))
    {
      goto LABEL_403;
    }
    goto LABEL_402;
  }
  unsigned int v289 = *v288;
  if (v289 >= 2) {
    int v290 = (v289 + 2147483646) & 0x7FFFFFFF;
  }
  else {
    int v290 = -1;
  }
  uint64_t v291 = v385;
  if (v290 == -1) {
LABEL_402:
  }
    (*(void (**)(unint64_t, uint64_t))(v423 + 8))((unint64_t)&v288[v376] & v280, v419);
LABEL_403:
  unint64_t v292 = (unint64_t)&v288[v377] & v401;
  unint64_t v293 = (v405 + v292) & v394;
  if (v291 == v398)
  {
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v415 + 48))((v405 + v292) & v394, v291, v410))
    {
      goto LABEL_413;
    }
LABEL_408:
    unint64_t v294 = (v391 + v293) & v280;
LABEL_412:
    (*(void (**)(unint64_t, uint64_t))(v415 + 8))(v293, v410);
    (*(void (**)(unint64_t, uint64_t))(v423 + 8))(v294, v419);
    swift_release();
    goto LABEL_413;
  }
  unint64_t v294 = (v391 + v293) & v280;
  if (v269 == v398)
  {
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v423 + 48))((v391 + v293) & v280, v269, v419))
    {
      goto LABEL_413;
    }
    goto LABEL_408;
  }
  unint64_t v295 = *(void *)((v412 + v294 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v295 >= 0xFFFFFFFF) {
    LODWORD(v295) = -1;
  }
  if ((v295 + 1) < 2) {
    goto LABEL_412;
  }
LABEL_413:
  uint64_t v296 = (unsigned __int8 *)((v273 + v292) & v280);
  if (v269 > 0xFE)
  {
    unint64_t v267 = v412;
    uint64_t v266 = (unsigned __int8 *)__src;
    uint64_t v268 = v385;
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v423 + 48))((unint64_t)&v296[v375] & v280, v269, v419))
    {
      goto LABEL_421;
    }
    goto LABEL_420;
  }
  unsigned int v297 = *v296;
  unint64_t v267 = v412;
  uint64_t v266 = (unsigned __int8 *)__src;
  if (v297 >= 2) {
    int v298 = (v297 + 2147483646) & 0x7FFFFFFF;
  }
  else {
    int v298 = -1;
  }
  uint64_t v268 = v385;
  if (v298 == -1) {
LABEL_420:
  }
    (*(void (**)(unint64_t, uint64_t))(v423 + 8))((unint64_t)&v296[v375] & v280, v419);
LABEL_421:
  unsigned int v299 = v266[v275];
  unsigned int v300 = v299 - 2;
  if (v299 >= 2)
  {
    if (v275 <= 3) {
      uint64_t v301 = v275;
    }
    else {
      uint64_t v301 = 4;
    }
    switch(v301)
    {
      case 1:
        int v302 = *v266;
        if (v275 >= 4) {
          goto LABEL_468;
        }
        goto LABEL_429;
      case 2:
        int v302 = *(unsigned __int16 *)v266;
        if (v275 < 4) {
          goto LABEL_429;
        }
        goto LABEL_468;
      case 3:
        int v302 = *(unsigned __int16 *)v266 | (v266[2] << 16);
        if (v275 < 4) {
          goto LABEL_429;
        }
        goto LABEL_468;
      case 4:
        int v302 = *(_DWORD *)v266;
        if (v275 < 4)
        {
LABEL_429:
          unsigned int v299 = (v302 | (v300 << (8 * v275))) + 2;
          break;
        }
LABEL_468:
        if (v302 != -1) {
          goto LABEL_469;
        }
        goto LABEL_431;
      default:
        break;
    }
  }
  if (v299 == 1)
  {
LABEL_431:
    unint64_t v303 = (unint64_t)&v266[v405] & v394;
    uint64_t v372 = v275;
    if (v268 == v398)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v415 + 48))((unint64_t)&v266[v405] & v394, v268, v410))goto LABEL_436; {
    }
      }
    else
    {
      unint64_t v304 = (v391 + v303) & v280;
      if (v269 == v398)
      {
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v423 + 48))((v391 + v303) & v280, v269, v419))
        {
LABEL_436:
          uint64_t v305 = v391;
          unint64_t v304 = (v391 + v303) & v280;
          unint64_t v371 = v267 + 7;
          v370 = (void *)((v267 + 7 + v304) & 0xFFFFFFFFFFFFFFF8);
LABEL_441:
          unint64_t v307 = __src;
          *(unsigned char *)uint64_t v265 = *(unsigned char *)__src;
          *(unsigned char *)(v265 | 1) = *(unsigned char *)(__src | 1);
          uint64_t v308 = (v405 + v265) & v394;
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v415 + 16))(v308, v303, v410);
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v423 + 16))((v305 + v308) & v280, v304, v419);
          *(void *)((v371 + ((v305 + v308) & v280)) & 0xFFFFFFFFFFFFFFF8) = *v370;
          swift_retain();
          goto LABEL_443;
        }
      }
      else
      {
        unint64_t v306 = *(void *)((v267 + 7 + v304) & 0xFFFFFFFFFFFFFFF8);
        if (v306 >= 0xFFFFFFFF) {
          LODWORD(v306) = -1;
        }
        if ((v306 + 1) < 2)
        {
          uint64_t v305 = v391;
          v370 = (void *)((v267 + 7 + v304) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v371 = v267 + 7;
          goto LABEL_441;
        }
      }
    }
    unint64_t v307 = __src;
    memcpy((void *)v265, (const void *)__src, __n);
LABEL_443:
    uint64_t v309 = (unsigned char *)((v273 + v265) & v280);
    char v310 = (unsigned __int8 *)((v273 + v307) & v280);
    if (v269 > 0xFE)
    {
      uint64_t v311 = v394;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v423 + 48))((unint64_t)&v310[v376] & v280, v269, v419))goto LABEL_445; {
    }
      }
    else
    {
      uint64_t v311 = v394;
      if (*v310 < 2u)
      {
LABEL_445:
        *uint64_t v309 = *v310;
        *(unsigned char *)(((v273 + v265) & v280) + 1) = v310[1];
        *(unsigned char *)(((v273 + v265) & v280) + 2) = v310[2];
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v423 + 16))((unint64_t)&v309[v376] & v280, (unint64_t)&v310[v376] & v280, v419);
        goto LABEL_448;
      }
    }
    memcpy((void *)((v273 + v265) & v280), v310, v412 + v379);
LABEL_448:
    unint64_t v312 = (unint64_t)&v309[v377] & v401;
    unint64_t v313 = (unint64_t)&v310[v377] & v401;
    unint64_t v314 = (v405 + v313) & v311;
    if (v385 == v398)
    {
      if (!(*(unsigned int (**)(unint64_t))(v415 + 48))((v405 + v313) & v311)) {
        goto LABEL_453;
      }
    }
    else
    {
      unint64_t v315 = (v391 + v314) & v280;
      if (v269 == v398)
      {
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v423 + 48))((v391 + v314) & v280, v269, v419))
        {
LABEL_453:
          unsigned int v399 = v269;
          uint64_t v316 = v391;
          unint64_t v315 = (v391 + v314) & v280;
          unint64_t v395 = v412 + 7;
          v386 = (void *)((v412 + 7 + v315) & 0xFFFFFFFFFFFFFFF8);
LABEL_458:
          *(unsigned char *)unint64_t v312 = *(unsigned char *)v313;
          *(unsigned char *)(v312 | 1) = *(unsigned char *)(v313 | 1);
          unint64_t v318 = (v405 + v312) & v311;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v415 + 16))(v318, v314, v410);
          unint64_t v319 = (v316 + v318) & v280;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v423 + 16))(v319, v315, v419);
          *(void *)((v395 + v319) & 0xFFFFFFFFFFFFFFF8) = *v386;
          swift_retain();
          uint64_t v282 = v380;
          uint64_t v269 = v399;
          goto LABEL_460;
        }
      }
      else
      {
        unint64_t v317 = *(void *)((v412 + 7 + v315) & 0xFFFFFFFFFFFFFFF8);
        if (v317 >= 0xFFFFFFFF) {
          LODWORD(v317) = -1;
        }
        if ((v317 + 1) < 2)
        {
          unsigned int v399 = v269;
          uint64_t v316 = v391;
          unint64_t v395 = v412 + 7;
          v386 = (void *)((v412 + 7 + v315) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_458;
        }
      }
    }
    memcpy((void *)v312, (const void *)v313, __n);
    uint64_t v282 = v380;
LABEL_460:
    long long v320 = (unsigned char *)((v273 + v312) & v280);
    uint64_t v321 = (unsigned __int8 *)((v273 + v313) & v280);
    if (v269 > 0xFE)
    {
      unint64_t v324 = (unint64_t)&v321[v375] & v280;
      unint64_t v267 = v412;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v423 + 48))(v324, v269, v419))
      {
        LOBYTE(v322) = *v321;
        size_t v325 = v373;
        uint64_t v323 = v375;
        goto LABEL_471;
      }
    }
    else
    {
      unsigned int v322 = *v321;
      unint64_t v267 = v412;
      if (v322 <= 1)
      {
        uint64_t v323 = v375;
        unint64_t v324 = (unint64_t)&v321[v375] & v280;
        size_t v325 = v373;
LABEL_471:
        *long long v320 = v322;
        v320[1] = v321[1];
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v423 + 16))((unint64_t)&v320[v323] & v280, v324, v419);
        goto LABEL_472;
      }
    }
    size_t v325 = v373;
    memcpy(v320, v321, v373);
LABEL_472:
    objc_super v326 = &v320[v325];
    *objc_super v326 = *(_WORD *)&v321[v325];
    v326[1] = *(_WORD *)&v321[v325 + 2];
    v326[2] = *(_WORD *)&v321[v325 + 4];
    *(unsigned char *)(v265 + v372) = 1;
    uint64_t v266 = (unsigned __int8 *)__src;
    goto LABEL_473;
  }
LABEL_469:
  *(void *)uint64_t v265 = *(void *)v266;
  *(unsigned char *)(v265 + v275) = 0;
  swift_retain();
  uint64_t v282 = v380;
LABEL_473:
  uint64_t v264 = ~v263;
  uint64_t v281 = v382;
  unint64_t v283 = v378;
  uint64_t v284 = v379;
LABEL_474:
  unint64_t v327 = v281 + v267 + ((v273 + ((v284 + v267 + v263 + v283) & v264)) & v280) + 6;
  if (v327 <= 8) {
    unint64_t v327 = 8;
  }
  unint64_t v328 = v327 + 1;
  unint64_t v329 = v265 + v328;
  v330 = &v266[v328];
  unint64_t v331 = (v329 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v332 = (unint64_t)&v266[v328 + 7] & 0xFFFFFFFFFFFFFFF8;
  uint64_t v333 = *(void *)v332;
  char v334 = *(unsigned char *)(v332 + 8);
  sub_228AD266C(*(void *)v332, v334);
  uint64_t v335 = *(void *)v331;
  char v336 = *(unsigned char *)(v331 + 8);
  *(void *)unint64_t v331 = v333;
  *(unsigned char *)(v331 + 8) = v334;
  sub_228AD25F8(v335, v336);
  unint64_t v337 = (v329 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v338 = (unint64_t)(v330 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v339 = *(void *)v338;
  uint64_t v340 = *(void *)(v338 + 8);
  LOBYTE(v331) = *(unsigned char *)(v338 + 16);
  sub_228B3D138(*(void *)v338, v340, v331, (uint64_t (*)(void))sub_228AD28A4);
  uint64_t v341 = *(void *)v337;
  uint64_t v342 = *(void *)(v337 + 8);
  char v343 = *(unsigned char *)(v337 + 16);
  *(void *)unint64_t v337 = v339;
  *(void *)(v337 + 8) = v340;
  *(unsigned char *)(v337 + 16) = v331;
  sub_228AD2698(v341, v342, v343, (uint64_t (*)(void))sub_228AD28A0);
  unint64_t v344 = (v329 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v345 = (unint64_t)(v330 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v346 = *(void *)v345;
  uint64_t v347 = *(void *)(v345 + 8);
  LOBYTE(v331) = *(unsigned char *)(v345 + 16);
  sub_228B3D138(*(void *)v345, v347, v331, (uint64_t (*)(void))sub_228AD2688);
  uint64_t v348 = *(void *)v344;
  uint64_t v349 = *(void *)(v344 + 8);
  char v350 = *(unsigned char *)(v344 + 16);
  *(void *)unint64_t v344 = v346;
  *(void *)(v344 + 8) = v347;
  *(unsigned char *)(v344 + 16) = v331;
  sub_228AD2698(v348, v349, v350, (uint64_t (*)(void))sub_228AD2678);
  unint64_t v351 = (v329 + 71) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v352 = (unint64_t)(v330 + 71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v353 = *(void *)v352;
  LOBYTE(v347) = *(unsigned char *)(v352 + 8);
  sub_228AD266C(*(void *)v352, v347);
  uint64_t v354 = *(void *)v351;
  char v355 = *(unsigned char *)(v351 + 8);
  *(void *)unint64_t v351 = v353;
  *(unsigned char *)(v351 + 8) = v347;
  sub_228AD25F8(v354, v355);
  unint64_t v356 = (v329 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v357 = (unint64_t)(v330 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v358 = *(void *)v357;
  LOBYTE(v347) = *(unsigned char *)(v357 + 8);
  sub_228ACF3A4(*(void *)v357, v347);
  uint64_t v359 = *(void *)v356;
  char v360 = *(unsigned char *)(v356 + 8);
  *(void *)unint64_t v356 = v358;
  *(unsigned char *)(v356 + 8) = v347;
  sub_228AD26A8(v359, v360);
  unint64_t v361 = (v329 + 103) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v362 = (unint64_t)(v330 + 103) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v363 = *(void *)v362;
  LOBYTE(v347) = *(unsigned char *)(v362 + 8);
  sub_228AD266C(*(void *)v362, v347);
  uint64_t v364 = *(void *)v361;
  char v365 = *(unsigned char *)(v361 + 8);
  *(void *)unint64_t v361 = v363;
  *(unsigned char *)(v361 + 8) = v347;
  sub_228AD25F8(v364, v365);
  return v282;
}

__n128 sub_228B476C8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v4 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v3 = *v4;
  unint64_t v5 = (_OWORD *)(((unint64_t)v3 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (_OWORD *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v5 = *v6;
  uint64_t v7 = (_OWORD *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (_OWORD *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v7 = *v8;
  uint64_t v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  uint64_t v11 = (_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v11 = *v12;
  unint64_t v13 = ((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = ((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8;
  long long v15 = *(_OWORD *)v14;
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(_OWORD *)unint64_t v13 = v15;
  unint64_t v16 = (v13 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (v14 + 31) & 0xFFFFFFFFFFFFFFF8;
  long long v19 = *(_OWORD *)(v17 + 32);
  long long v18 = *(_OWORD *)(v17 + 48);
  long long v20 = *(_OWORD *)(v17 + 16);
  *(unsigned char *)(v16 + 64) = *(unsigned char *)(v17 + 64);
  *(_OWORD *)(v16 + 32) = v19;
  *(_OWORD *)(v16 + 48) = v18;
  *(_OWORD *)(v16 + 16) = v20;
  *(_OWORD *)unint64_t v16 = *(_OWORD *)v17;
  unint64_t v21 = (void *)((v13 + 103) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v22 = (void *)((v14 + 103) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v21 = *v22;
  uint64_t v23 = *(void *)(a3 + 16);
  uint64_t v24 = *(void *)(a3 + 24);
  uint64_t v25 = *(void *)(v23 - 8);
  uint64_t v26 = *(void *)(v24 - 8);
  uint64_t v27 = (*(_DWORD *)(v26 + 80) | *(_DWORD *)(v25 + 80)) & 0xF8 | 7u;
  uint64_t v28 = v27 + 8;
  uint64_t v29 = ((unint64_t)v21 + v27 + 8) & ~v27;
  uint64_t v30 = ((unint64_t)v22 + v27 + 8) & ~v27;
  int v31 = *(_DWORD *)(v25 + 84);
  uint64_t v32 = *(void *)(v25 + 64);
  int v33 = *(_DWORD *)(v26 + 84);
  unint64_t v34 = *(void *)(v26 + 64);
  uint64_t v35 = (v27 + 16) & ~v27;
  uint64_t v36 = (void *)((v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v36 < 0xFFFFFFFFuLL)
  {
    if (v31) {
      unint64_t v49 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      unint64_t v49 = v32 + 1;
    }
    if (!v33) {
      ++v34;
    }
    if (v49 > v34) {
      unint64_t v34 = v49;
    }
    if (v34 <= 8) {
      uint64_t v44 = 8;
    }
    else {
      uint64_t v44 = v34;
    }
    memcpy((void *)v29, (const void *)v30, (v35 | 1) + v44);
  }
  else
  {
    uint64_t v261 = (v27 + 16) & ~v27;
    uint64_t v37 = ~v27;
    if (v31) {
      size_t v38 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      size_t v38 = v32 + 1;
    }
    BOOL v39 = v33 == 0;
    *(void *)uint64_t v29 = *(void *)v30;
    uint64_t v40 = (void *)((v29 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v40 = *v36;
    uint64_t v258 = (void *)(((unint64_t)v40 + v28) & v37);
    uint64_t v41 = (unsigned __int8 *)(((unint64_t)v36 + v28) & v37);
    if (v39) {
      size_t v42 = v34 + 1;
    }
    else {
      size_t v42 = v34;
    }
    if (v38 <= v42) {
      unint64_t v43 = v42;
    }
    else {
      unint64_t v43 = v38;
    }
    if (v43 <= 8) {
      uint64_t v44 = 8;
    }
    else {
      uint64_t v44 = v43;
    }
    unsigned int v45 = v41[v44];
    unsigned int v46 = v45 - 3;
    if (v45 >= 3)
    {
      if (v44 <= 3) {
        uint64_t v47 = v44;
      }
      else {
        uint64_t v47 = 4;
      }
      switch(v47)
      {
        case 1:
          int v48 = *v41;
          if (v44 >= 4) {
            goto LABEL_44;
          }
          goto LABEL_33;
        case 2:
          int v48 = *(unsigned __int16 *)v41;
          if (v44 < 4) {
            goto LABEL_33;
          }
          goto LABEL_44;
        case 3:
          int v48 = *(unsigned __int16 *)v41 | (v41[2] << 16);
          if (v44 < 4) {
            goto LABEL_33;
          }
          goto LABEL_44;
        case 4:
          int v48 = *(_DWORD *)v41;
          if (v44 < 4)
          {
LABEL_33:
            unsigned int v45 = (v48 | (v46 << (8 * v44))) + 3;
            break;
          }
LABEL_44:
          unsigned int v45 = v48 + 3;
          if (v45 == 2) {
            goto LABEL_45;
          }
          goto LABEL_35;
        default:
          break;
      }
    }
    if (v45 == 2)
    {
LABEL_45:
      size_t v50 = (void *)(((unint64_t)v40 + v28) & v37);
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v26 + 48))(v41, 1, v24))
      {
        memcpy(v258, v41, v42);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v26 + 32))(v258, v41, v24);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v258, 0, 1, v24);
      }
      uint64_t v35 = v261;
      char v51 = 2;
    }
    else
    {
LABEL_35:
      if (v45 != 1)
      {
        uint64_t v35 = v261;
        *uint64_t v258 = *(void *)v41;
        *((unsigned char *)v258 + v44) = 0;
        goto LABEL_50;
      }
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v25 + 48))(v41, 1, v23))
      {
        size_t v50 = v258;
        memcpy(v258, v41, v38);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v25 + 32))(v258, v41, v23);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v258, 0, 1, v23);
        size_t v50 = v258;
      }
      uint64_t v35 = v261;
      char v51 = 1;
    }
    *((unsigned char *)v50 + v44) = v51;
  }
LABEL_50:
  uint64_t v52 = (v35 | 1) + v44;
  size_t v53 = (void *)(((v29 | 7) + v52) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v54 = (void *)(((v30 | 7) + v52) & 0xFFFFFFFFFFFFFFF8);
  void *v53 = *v54;
  uint64_t v55 = *(void *)(sub_228BACB48() - 8);
  int v56 = *(_DWORD *)(v55 + 80) & 0xFC;
  uint64_t v57 = sub_228BAC608();
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v59 = *(unsigned __int8 *)(v58 + 80);
  uint64_t v259 = sub_228BACD78();
  uint64_t v60 = *(void *)(v259 - 8);
  uint64_t v61 = *(unsigned __int8 *)(v60 + 80);
  uint64_t v62 = v56 | v59 | v61 | 3;
  uint64_t v63 = ((unint64_t)v54 + v62 + 8) & ~v62;
  uint64_t v64 = ((unint64_t)v53 + v62 + 8) & ~v62;
  uint64_t v262 = v63;
  (*(void (**)(void))(v55 + 32))();
  uint64_t v65 = *(void *)(v55 + 64) + v59;
  uint64_t v66 = (v65 + v63) & ~v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 32))((v65 + v64) & ~v59, v66, v57);
  uint64_t v67 = *(void *)(v58 + 64) + v61;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))((v67 + ((v65 + v64) & ~v59)) & ~v61, (v67 + v66) & ~v61, v259);
  uint64_t v68 = *(void *)(v60 + 64) + 3;
  *(_DWORD *)((v68 + ((v67 + ((v65 + v64) & ~v59)) & ~v61)) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)((v68
                                                                                                 + ((v67 + v66) & ~v61)) & 0xFFFFFFFFFFFFFFFCLL);
  unint64_t v69 = (v68 + ((v67 + (v65 & ~v59)) & ~v61)) & 0xFFFFFFFFFFFFFFFCLL;
  uint64_t v255 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
  uint64_t v70 = *(void *)(v255 - 8);
  uint64_t v71 = v70;
  LODWORD(v57) = *(unsigned __int8 *)(v70 + 80);
  uint64_t v72 = sub_228BAC418();
  uint64_t v73 = *(void *)(v72 - 8);
  uint64_t v74 = v73;
  uint64_t v75 = v70;
  unsigned __int8 v76 = *(_DWORD *)(v73 + 80);
  uint64_t v77 = v76 | v57;
  uint64_t v78 = v69 + (v77 | 7) + 4;
  uint64_t v79 = (v78 + v64) & ~(v77 | 7);
  unint64_t v80 = (void *)((v78 + v262) & ~(v77 | 7));
  *(void *)uint64_t v79 = *v80;
  uint64_t v81 = v76;
  unint64_t v82 = (void *)((v79 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v83 = (void *)(((unint64_t)v80 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v82 = *v83;
  id v84 = (void *)(((unint64_t)v82 + v77 + 8) & ~v77);
  char v85 = (unsigned __int16 *)(((unint64_t)v83 + v77 + 8) & ~v77);
  uint64_t v86 = *(unsigned int *)(v71 + 84);
  unsigned int v87 = *(_DWORD *)(v73 + 84);
  uint64_t v88 = ~v81;
  uint64_t v89 = *(void *)(v75 + 64) + v81;
  uint64_t v90 = *(void *)(v73 + 64);
  size_t v91 = ((v90 + v81 + (v89 & ~v81)) & ~v81) + v90;
  int v92 = v87 | v86;
  unint64_t v263 = (unint64_t)v80;
  uint64_t v253 = v72;
  uint64_t v251 = v90 + v81;
  if (!(v87 | v86))
  {
    if (!*((unsigned char *)v85 + v91)) {
      goto LABEL_73;
    }
    int v95 = (*((unsigned __int8 *)v85 + v91) - 1) << (8 * v91);
    if (v91 > 3) {
      int v95 = 0;
    }
    if (v91)
    {
      int v96 = v91 <= 3 ? ((v90 + v81 + (v89 & ~v81)) & ~v81) + v90 : 4;
      switch(v96)
      {
        case 2:
          int v97 = *v85;
          break;
        case 3:
          int v97 = *v85 | (*(unsigned __int8 *)((((unint64_t)v83 + v77 + 8) & ~v77) + 2) << 16);
          break;
        case 4:
          int v97 = *(_DWORD *)v85;
          break;
        default:
          int v97 = *(unsigned __int8 *)v85;
          break;
      }
    }
    else
    {
      int v97 = 0;
    }
    if ((v97 | v95) == 0xFFFFFFFF) {
      goto LABEL_73;
    }
    goto LABEL_64;
  }
  uint64_t v93 = v84;
  if (v86 >= v87)
  {
    int v98 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v71 + 48))(((unint64_t)v83 + v77 + 8) & ~v77, v86, v255);
    id v84 = v93;
    if (!v98) {
      goto LABEL_73;
    }
LABEL_64:
    if (v92) {
      size_t v99 = v91;
    }
    else {
      size_t v99 = v91 + 1;
    }
    memcpy(v84, v85, v99);
    goto LABEL_75;
  }
  int v94 = (*(uint64_t (**)(unint64_t))(v74 + 48))(((unint64_t)v85 + v89) & v88);
  id v84 = v93;
  if (v94) {
    goto LABEL_64;
  }
LABEL_73:
  uint64_t v100 = v84;
  (*(void (**)(void *, unsigned __int16 *, uint64_t))(v71 + 32))(v84, v85, v255);
  uint64_t v101 = v79;
  unint64_t v102 = (unint64_t)&v100[v89] & v88;
  unint64_t v103 = ((unint64_t)v85 + v89) & v88;
  uint64_t v104 = *(void (**)(unint64_t, unint64_t, uint64_t))(v74 + 32);
  v104(v102, v103, v253);
  uint64_t v105 = v251 + v102;
  uint64_t v79 = v101;
  v104(v105 & v88, (v251 + v103) & v88, v253);
  if (!v92) {
    v100[v91] = 0;
  }
LABEL_75:
  uint64_t v106 = (v77 + 16) & ~v77;
  if (!v92) {
    ++v106;
  }
  size_t v107 = v106 + v91;
  uint64_t v108 = (void *)(((v79 | 7) + v107) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v109 = (void *)(((v263 | 7) + v107) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v108 = *v109;
  uint64_t v254 = sub_228BAC9C8();
  uint64_t v110 = *(void *)(v254 - 8);
  uint64_t v111 = *(unsigned __int8 *)(v110 + 80);
  uint64_t v112 = v111 | 7;
  unint64_t v113 = (void *)(((unint64_t)v108 + v111 + 8) & ~(v111 | 7));
  uint64_t v114 = (unsigned __int8 *)(((unint64_t)v109 + v111 + 8) & ~(v111 | 7));
  unint64_t v256 = *(void *)(v110 + 64);
  if (v256 <= 8) {
    uint64_t v115 = 8;
  }
  else {
    uint64_t v115 = *(void *)(*(void *)(v254 - 8) + 64);
  }
  unsigned int v116 = v114[v115];
  unsigned int v117 = v116 - 2;
  if (v116 >= 2)
  {
    if (v115 <= 3) {
      uint64_t v118 = v115;
    }
    else {
      uint64_t v118 = 4;
    }
    switch(v118)
    {
      case 1:
        int v119 = *v114;
        if (v115 >= 4) {
          goto LABEL_94;
        }
        goto LABEL_88;
      case 2:
        int v119 = *(unsigned __int16 *)v114;
        if (v115 < 4) {
          goto LABEL_88;
        }
        goto LABEL_94;
      case 3:
        int v119 = *(unsigned __int16 *)v114 | (v114[2] << 16);
        if (v115 < 4) {
          goto LABEL_88;
        }
        goto LABEL_94;
      case 4:
        int v119 = *(_DWORD *)v114;
        if (v115 < 4)
        {
LABEL_88:
          unsigned int v116 = (v119 | (v117 << (8 * v115))) + 2;
          break;
        }
LABEL_94:
        if (v119 != -1) {
          goto LABEL_95;
        }
        goto LABEL_90;
      default:
        break;
    }
  }
  if (v116 == 1)
  {
LABEL_90:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v110 + 32))(v113, v114, v254);
    char v120 = 1;
  }
  else
  {
LABEL_95:
    char v120 = 0;
    *unint64_t v113 = *(void *)v114;
  }
  *((unsigned char *)v113 + v115) = v120;
  uint64_t v121 = sub_228BAC588();
  uint64_t v260 = v121;
  uint64_t v264 = *(void *)(v121 - 8);
  uint64_t v122 = *(unsigned __int8 *)(v264 + 80);
  uint64_t v123 = v115 + 1 + (v122 | 7);
  uint64_t v124 = (void *)(((unint64_t)v113 + v123) & ~(v122 | 7));
  uint64_t v125 = (unsigned __int8 *)((unint64_t)&v114[v123] & ~(v122 | 7));
  unint64_t v126 = *(void *)(v264 + 64);
  if (v126 <= 8) {
    uint64_t v127 = 8;
  }
  else {
    uint64_t v127 = *(void *)(*(void *)(v121 - 8) + 64);
  }
  unsigned int v128 = v125[v127];
  unsigned int v129 = v128 - 2;
  if (v128 >= 2)
  {
    if (v127 <= 3) {
      uint64_t v130 = v127;
    }
    else {
      uint64_t v130 = 4;
    }
    switch(v130)
    {
      case 1:
        int v131 = *v125;
        if (v127 >= 4) {
          goto LABEL_113;
        }
        goto LABEL_107;
      case 2:
        int v131 = *(unsigned __int16 *)v125;
        if (v127 < 4) {
          goto LABEL_107;
        }
        goto LABEL_113;
      case 3:
        int v131 = *(unsigned __int16 *)v125 | (v125[2] << 16);
        if (v127 < 4) {
          goto LABEL_107;
        }
        goto LABEL_113;
      case 4:
        int v131 = *(_DWORD *)v125;
        if (v127 < 4)
        {
LABEL_107:
          unsigned int v128 = (v131 | (v129 << (8 * v127))) + 2;
          break;
        }
LABEL_113:
        if (v131 != -1) {
          goto LABEL_114;
        }
        goto LABEL_109;
      default:
        break;
    }
  }
  if (v128 == 1)
  {
LABEL_109:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v264 + 32))(v124, v125, v121);
    char v132 = 1;
  }
  else
  {
LABEL_114:
    char v132 = 0;
    *uint64_t v124 = *(void *)v125;
  }
  *((unsigned char *)v124 + v127) = v132;
  uint64_t v133 = v127 + 1;
  uint64_t v134 = sub_228BACB68();
  uint64_t v135 = *(void *)(v134 - 8);
  uint64_t v136 = *(_DWORD *)(v135 + 80) & 0xF8 | 7;
  size_t v137 = (void *)(((unint64_t)v124 + v133 + v136) & ~v136);
  uint64_t v138 = (unsigned __int8 *)((unint64_t)&v125[v133 + v136] & ~v136);
  if (*(void *)(v135 + 64) <= 8uLL) {
    uint64_t v139 = 8;
  }
  else {
    uint64_t v139 = *(void *)(v135 + 64);
  }
  unsigned int v140 = v138[v139];
  unsigned int v141 = v140 - 2;
  if (v140 >= 2)
  {
    if (v139 <= 3) {
      uint64_t v142 = v139;
    }
    else {
      uint64_t v142 = 4;
    }
    switch(v142)
    {
      case 1:
        int v143 = *v138;
        if (v139 >= 4) {
          goto LABEL_132;
        }
        goto LABEL_126;
      case 2:
        int v143 = *(unsigned __int16 *)v138;
        if (v139 < 4) {
          goto LABEL_126;
        }
        goto LABEL_132;
      case 3:
        int v143 = *(unsigned __int16 *)v138 | (v138[2] << 16);
        if (v139 < 4) {
          goto LABEL_126;
        }
        goto LABEL_132;
      case 4:
        int v143 = *(_DWORD *)v138;
        if (v139 < 4)
        {
LABEL_126:
          unsigned int v140 = (v143 | (v141 << (8 * v139))) + 2;
          break;
        }
LABEL_132:
        if (v143 != -1) {
          goto LABEL_133;
        }
        goto LABEL_128;
      default:
        break;
    }
  }
  if (v140 == 1)
  {
LABEL_128:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v135 + 32))(v137, v138, v134);
    char v144 = 1;
  }
  else
  {
LABEL_133:
    char v144 = 0;
    *size_t v137 = *(void *)v138;
  }
  *((unsigned char *)v137 + v139) = v144;
  uint64_t v145 = v139 + 1;
  uint64_t v146 = sub_228BAC848();
  uint64_t v147 = *(void *)(v146 - 8);
  uint64_t v148 = *(_DWORD *)(v147 + 80) & 0xF8 | 7;
  int v149 = (void *)(((unint64_t)v137 + v145 + v148) & ~v148);
  int v150 = (unsigned __int8 *)((unint64_t)&v138[v145 + v148] & ~v148);
  if (*(void *)(v147 + 64) <= 8uLL) {
    uint64_t v151 = 8;
  }
  else {
    uint64_t v151 = *(void *)(v147 + 64);
  }
  unsigned int v152 = v150[v151];
  unsigned int v153 = v152 - 2;
  if (v152 >= 2)
  {
    if (v151 <= 3) {
      uint64_t v154 = v151;
    }
    else {
      uint64_t v154 = 4;
    }
    switch(v154)
    {
      case 1:
        int v155 = *v150;
        if (v151 >= 4) {
          goto LABEL_151;
        }
        goto LABEL_145;
      case 2:
        int v155 = *(unsigned __int16 *)v150;
        if (v151 < 4) {
          goto LABEL_145;
        }
        goto LABEL_151;
      case 3:
        int v155 = *(unsigned __int16 *)v150 | (v150[2] << 16);
        if (v151 < 4) {
          goto LABEL_145;
        }
        goto LABEL_151;
      case 4:
        int v155 = *(_DWORD *)v150;
        if (v151 < 4)
        {
LABEL_145:
          unsigned int v152 = (v155 | (v153 << (8 * v151))) + 2;
          break;
        }
LABEL_151:
        if (v155 != -1) {
          goto LABEL_152;
        }
        goto LABEL_147;
      default:
        break;
    }
  }
  if (v152 == 1)
  {
LABEL_147:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v147 + 32))(v149, v150, v146);
    char v156 = 1;
  }
  else
  {
LABEL_152:
    char v156 = 0;
    *int v149 = *(void *)v150;
  }
  *((unsigned char *)v149 + v151) = v156;
  int v157 = (char *)v149 + v151 + 1;
  int v158 = &v150[v151 + 1];
  unint64_t v159 = (unint64_t)(v157 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v160 = (unint64_t)(v158 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v161 = *(void *)v160;
  *(unsigned char *)(v159 + 8) = *(unsigned char *)(v160 + 8);
  *(void *)unint64_t v159 = v161;
  unint64_t v162 = (unint64_t)(v157 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v163 = (unint64_t)(v158 + 23) & 0xFFFFFFFFFFFFFFF8;
  long long v165 = *(_OWORD *)(v163 + 48);
  long long v164 = *(_OWORD *)(v163 + 64);
  long long v166 = *(_OWORD *)(v163 + 32);
  *(_WORD *)(v162 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_WORD *)(v163 + 80);
  *(_OWORD *)(v162 + 48) = v165;
  *(_OWORD *)(v162 + 64) = v164;
  *(_OWORD *)(v162 + 32) = v166;
  long long v167 = *(_OWORD *)(v163 + 16);
  *(_OWORD *)unint64_t v162 = *(_OWORD *)v163;
  *(_OWORD *)(v162 + 16) = v167;
  uint64_t v168 = v112 | v122;
  uint64_t v169 = (v112 | v122) + 82;
  unint64_t v170 = (v169 + v162) & ~(v112 | v122);
  unint64_t v171 = (v169 + v163) & ~v168;
  uint64_t v250 = v110;
  uint64_t v172 = *(unsigned int *)(v110 + 84);
  unsigned int v173 = *(_DWORD *)(v264 + 84);
  if (v172 <= v173) {
    unsigned int v174 = *(_DWORD *)(v264 + 84);
  }
  else {
    unsigned int v174 = *(_DWORD *)(v110 + 84);
  }
  if (v174 <= 0x7FFFFFFE) {
    int v175 = 2147483646;
  }
  else {
    int v175 = v174;
  }
  unint64_t v176 = v126 + 7;
  unint64_t v177 = ((v126 + 7 + ((((v111 + 2) & ~v111) + v256 + v122) & ~v122)) & 0xFFFFFFFFFFFFFFF8) + 8;
  size_t v178 = ((v122 + 3) & ~v122) + v126;
  size_t v179 = ((v122 + 2) & ~v122) + v126;
  uint64_t v180 = v177 + v122;
  if (v179 + ((v177 + v122 + ((v178 + v168 + ((v177 + v122) & ~v122)) & ~v168)) & ~v122) + 6 <= 8) {
    uint64_t v181 = 8;
  }
  else {
    uint64_t v181 = v179 + ((v177 + v122 + ((v178 + v168 + ((v177 + v122) & ~v122)) & ~v168)) & ~v122) + 6;
  }
  unsigned int v182 = *(unsigned __int8 *)(v171 + v181);
  unsigned int v183 = v182 - 2;
  if (v182 >= 2)
  {
    if (v181 <= 3) {
      uint64_t v184 = v181;
    }
    else {
      uint64_t v184 = 4;
    }
    switch(v184)
    {
      case 1:
        int v185 = *(unsigned __int8 *)v171;
        if (v181 >= 4) {
          goto LABEL_209;
        }
        goto LABEL_170;
      case 2:
        int v185 = *(unsigned __int16 *)v171;
        if (v181 < 4) {
          goto LABEL_170;
        }
        goto LABEL_209;
      case 3:
        int v185 = *(unsigned __int16 *)v171 | (*(unsigned __int8 *)(v171 + 2) << 16);
        if (v181 < 4) {
          goto LABEL_170;
        }
        goto LABEL_209;
      case 4:
        int v185 = *(_DWORD *)v171;
        if (v181 < 4)
        {
LABEL_170:
          unsigned int v182 = (v185 | (v183 << (8 * v181))) + 2;
          break;
        }
LABEL_209:
        if (v185 != -1) {
          goto LABEL_210;
        }
        goto LABEL_172;
      default:
        break;
    }
  }
  if (v182 == 1)
  {
LABEL_172:
    size_t v236 = v178;
    uint64_t v237 = v122 + 3;
    size_t v241 = v179;
    uint64_t v242 = v181;
    uint64_t v186 = ~v122;
    uint64_t v248 = ~v111;
    unint64_t v249 = v176;
    uint64_t v187 = (v111 + 2 + v171) & ~v111;
    unsigned int v252 = *(_DWORD *)(v264 + 84);
    uint64_t v245 = v187;
    uint64_t v247 = v111 + 2;
    uint64_t v238 = v122 + 2;
    size_t v239 = v178 + v168;
    size_t __n = v177;
    int v240 = v175;
    if (v172 == v175)
    {
      if (!(*(unsigned int (**)(void))(v250 + 48))()) {
        goto LABEL_177;
      }
    }
    else
    {
      uint64_t v188 = v256 + v122;
      unint64_t v189 = (v256 + v122 + v187) & v186;
      if (v173 == v175)
      {
        if (!(*(unsigned int (**)(unint64_t))(v264 + 48))(v189))
        {
LABEL_177:
          uint64_t v188 = v256 + v122;
          uint64_t v190 = v247;
          unint64_t v191 = (v256 + v122 + v245) & v186;
          unint64_t v243 = (void *)((v249 + v191) & 0xFFFFFFFFFFFFFFF8);
LABEL_182:
          *(unsigned char *)unint64_t v170 = *(unsigned char *)v171;
          *(unsigned char *)(v170 | 1) = *(unsigned char *)(v171 | 1);
          unint64_t v193 = (v190 + v170) & v248;
          (*(void (**)(unint64_t))(v250 + 32))(v193);
          unint64_t v194 = (v188 + v193) & v186;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v264 + 32))(v194, v191, v260);
          *(void *)((v249 + v194) & 0xFFFFFFFFFFFFFFF8) = *v243;
          goto LABEL_184;
        }
      }
      else
      {
        unint64_t v192 = *(void *)((v176 + v189) & 0xFFFFFFFFFFFFFFF8);
        if (v192 >= 0xFFFFFFFF) {
          LODWORD(v192) = -1;
        }
        if ((v192 + 1) < 2)
        {
          unint64_t v243 = (void *)((v176 + v189) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v190 = v247;
          unint64_t v191 = v189;
          goto LABEL_182;
        }
      }
    }
    memcpy((void *)v170, (const void *)v171, __n);
LABEL_184:
    uint64_t v195 = ~v168;
    uint64_t v246 = (unsigned char *)v170;
    unsigned int v196 = (unsigned char *)((v180 + v170) & v186);
    unsigned int v197 = (unsigned char *)((v180 + v171) & v186);
    if (v252 > 0xFE)
    {
      if (!(*(unsigned int (**)(unint64_t))(v264 + 48))((unint64_t)&v197[v237] & v186)) {
        goto LABEL_186;
      }
    }
    else if (*v197 < 2u)
    {
LABEL_186:
      *unsigned int v196 = *v197;
      *(unsigned char *)(((v180 + v170) & v186) + 1) = *(unsigned char *)(((v180 + v171) & v186) + 1);
      *(unsigned char *)(((v180 + v170) & v186) + 2) = *(unsigned char *)(((v180 + v171) & v186) + 2);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v264 + 32))((unint64_t)&v196[v237] & v186, (unint64_t)&v197[v237] & v186, v260);
      goto LABEL_189;
    }
    memcpy((void *)((v180 + v170) & v186), (const void *)((v180 + v171) & v186), v236);
LABEL_189:
    unint64_t v198 = (unint64_t)&v196[v239] & v195;
    unint64_t v199 = (unint64_t)&v197[v239] & v195;
    unint64_t v200 = (v247 + v199) & v248;
    if (v172 == v240)
    {
      int v201 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v250 + 48))((v247 + v199) & v248, v172, v254);
    }
    else
    {
      uint64_t v202 = v256 + v122;
      unint64_t v203 = (v256 + v122 + v200) & v186;
      if (v252 != v240)
      {
        unint64_t v206 = *(void *)((v249 + v203) & 0xFFFFFFFFFFFFFFF8);
        if (v206 >= 0xFFFFFFFF) {
          LODWORD(v206) = -1;
        }
        uint64_t v181 = v242;
        if ((v206 + 1) < 2)
        {
          uint64_t v257 = (void *)((v249 + v203) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v205 = v247;
          unint64_t v204 = (v202 + v200) & v186;
          goto LABEL_199;
        }
LABEL_200:
        memcpy((void *)v198, (const void *)v199, __n);
LABEL_201:
        unsigned int v208 = (unsigned char *)((v180 + v198) & v186);
        unsigned int v209 = (unsigned __int8 *)((v180 + v199) & v186);
        if (v252 > 0xFE)
        {
          unint64_t v212 = (unint64_t)&v209[v238] & v186;
          if (!(*(unsigned int (**)(unint64_t))(v264 + 48))(v212))
          {
            LOBYTE(v21__isPlatformVersionAtLeast(2, 18, 1, 0) = *v209;
            uint64_t v211 = v238;
            goto LABEL_212;
          }
        }
        else
        {
          unsigned int v210 = *v209;
          if (v210 <= 1)
          {
            uint64_t v211 = v238;
            unint64_t v212 = (unint64_t)&v209[v238] & v186;
LABEL_212:
            *unsigned int v208 = v210;
            v208[1] = v209[1];
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v264 + 32))((unint64_t)&v208[v211] & v186, v212, v260);
            size_t v213 = v241;
            goto LABEL_213;
          }
        }
        size_t v213 = v241;
        memcpy(v208, v209, v241);
LABEL_213:
        int v215 = &v208[v213];
        *int v215 = *(_WORD *)&v209[v213];
        v215[1] = *(_WORD *)&v209[v213 + 2];
        v215[2] = *(_WORD *)&v209[v213 + 4];
        char v214 = 1;
        goto LABEL_214;
      }
      int v201 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v264 + 48))(v203, v252, v260);
    }
    uint64_t v181 = v242;
    if (!v201)
    {
      uint64_t v202 = v256 + v122;
      unint64_t v204 = (v256 + v122 + v200) & v186;
      uint64_t v257 = (void *)((v249 + v204) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v205 = v247;
LABEL_199:
      *(unsigned char *)unint64_t v198 = *(unsigned char *)v199;
      *(unsigned char *)(v198 | 1) = *(unsigned char *)(v199 | 1);
      unint64_t v207 = (v205 + v198) & v248;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v250 + 32))(v207, v200, v254);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v264 + 32))((v202 + v207) & v186, v204, v260);
      *(void *)((v249 + ((v202 + v207) & v186)) & 0xFFFFFFFFFFFFFFF8) = *v257;
      unint64_t v170 = (unint64_t)v246;
      goto LABEL_201;
    }
    goto LABEL_200;
  }
LABEL_210:
  char v214 = 0;
  *(void *)unint64_t v170 = *(void *)v171;
LABEL_214:
  *(unsigned char *)(v170 + v181) = v214;
  uint64_t v216 = (unsigned char *)(v170 + v181 + 1);
  uint64_t v217 = (unsigned __int8 *)(v171 + v181 + 1);
  unint64_t v218 = (unint64_t)(v216 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v219 = (unint64_t)(v217 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v220 = *(void *)v219;
  *(unsigned char *)(v218 + 8) = *(unsigned char *)(v219 + 8);
  *(void *)unint64_t v218 = v220;
  unint64_t v221 = (unint64_t)(v216 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v222 = (unint64_t)(v217 + 23) & 0xFFFFFFFFFFFFFFF8;
  long long v223 = *(_OWORD *)v222;
  *(unsigned char *)(v221 + 16) = *(unsigned char *)(v222 + 16);
  *(_OWORD *)unint64_t v221 = v223;
  unsigned int v224 = (__n128 *)((unint64_t)(v216 + 47) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v225 = (__n128 *)((unint64_t)(v217 + 47) & 0xFFFFFFFFFFFFFFF8);
  __n128 result = *v225;
  v224[1].n128_u8[0] = v225[1].n128_u8[0];
  *unsigned int v224 = result;
  unint64_t v227 = (unint64_t)(v216 + 71) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v228 = (unint64_t)(v217 + 71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v229 = *(void *)v228;
  *(unsigned char *)(v227 + 8) = *(unsigned char *)(v228 + 8);
  *(void *)unint64_t v227 = v229;
  unint64_t v230 = (unint64_t)(v216 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v231 = (unint64_t)(v217 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v232 = *(void *)v231;
  *(unsigned char *)(v230 + 8) = *(unsigned char *)(v231 + 8);
  *(void *)unint64_t v230 = v232;
  unint64_t v233 = (unint64_t)(v216 + 103) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v234 = (unint64_t)(v217 + 103) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v235 = *(void *)v234;
  *(unsigned char *)(v233 + 8) = *(unsigned char *)(v234 + 8);
  *(void *)unint64_t v233 = v235;
  return result;
}

void *sub_228B48CA4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  unint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  swift_bridgeObjectRelease();
  v6[1] = v7[1];
  uint64_t v8 = (void *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v8 = *v9;
  swift_bridgeObjectRelease();
  v8[1] = v9[1];
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  swift_bridgeObjectRelease();
  v10[1] = v11[1];
  uint64_t v12 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  swift_bridgeObjectRelease();
  v12[1] = v13[1];
  unint64_t v14 = (void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  long long v15 = (void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v14 = *v15;
  swift_bridgeObjectRelease();
  v14[1] = v15[1];
  unint64_t v16 = (void *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v17 = (void *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v16 = *v17;
  swift_release();
  v16[1] = v17[1];
  swift_release();
  unint64_t v18 = v16[2];
  v16[2] = v17[2];
  sub_228B05A34(v18);
  unint64_t v19 = ((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = ((unint64_t)v17 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = *(void *)(v19 + 24);
  LODWORD(v22) = -1;
  if (v21 < 0xFFFFFFFF) {
    uint64_t v22 = *(void *)(v19 + 24);
  }
  uint64_t v382 = a1;
  if ((int)v22 - 1 >= 0) {
    goto LABEL_4;
  }
  unint64_t v60 = *(void *)(v20 + 24);
  if (v60 >= 0xFFFFFFFF) {
    LODWORD(v6__isPlatformVersionAtLeast(2, 18, 1, 0) = -1;
  }
  if ((int)v60 - 1 >= 0)
  {
    if (v21) {
      __swift_destroy_boxed_opaque_existential_0(((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8);
    }
LABEL_4:
    *(_OWORD *)unint64_t v19 = *(_OWORD *)v20;
    long long v23 = *(_OWORD *)(v20 + 16);
    long long v24 = *(_OWORD *)(v20 + 32);
    long long v25 = *(_OWORD *)(v20 + 48);
    *(unsigned char *)(v19 + 64) = *(unsigned char *)(v20 + 64);
    *(_OWORD *)(v19 + 32) = v24;
    *(_OWORD *)(v19 + 48) = v25;
    *(_OWORD *)(v19 + 16) = v23;
    goto LABEL_5;
  }
  if (v21) {
    __swift_destroy_boxed_opaque_existential_0(((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8);
  }
  long long v73 = *(_OWORD *)v20;
  long long v74 = *(_OWORD *)(v20 + 16);
  *(void *)(v19 + 32) = *(void *)(v20 + 32);
  *(_OWORD *)unint64_t v19 = v73;
  *(_OWORD *)(v19 + 16) = v74;
  uint64_t v75 = *(void *)(v20 + 40);
  *(unsigned char *)(v19 + 48) = *(unsigned char *)(v20 + 48);
  *(void *)(v19 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v75;
  uint64_t v76 = *(void *)(v20 + 56);
  *(unsigned char *)(v19 + 64) = *(unsigned char *)(v20 + 64);
  *(void *)(v19 + 56) = v76;
LABEL_5:
  uint64_t v26 = (void *)(((unint64_t)v16 + 103) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v27 = (void *)(((unint64_t)v17 + 103) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v26 = *v27;
  uint64_t v28 = *(void *)(a3 + 16);
  uint64_t v400 = *(void *)(v28 - 8);
  uint64_t v403 = *(void *)(a3 + 24);
  uint64_t v29 = *(void *)(v403 - 8);
  uint64_t v30 = (*(_DWORD *)(v29 + 80) | *(_DWORD *)(v400 + 80)) & 0xF8 | 7u;
  uint64_t v31 = v30 + 8;
  uint64_t v32 = ~v30;
  uint64_t v33 = ((unint64_t)v26 + v30 + 8) & ~v30;
  int v34 = *(_DWORD *)(v400 + 84);
  size_t v35 = *(void *)(v400 + 64);
  int v36 = *(_DWORD *)(v29 + 84);
  size_t v37 = *(void *)(v29 + 64);
  uint64_t v407 = (v30 + 16) & ~v30;
  size_t v38 = (void *)((v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  BOOL v39 = (void *)(((unint64_t)v27 + v30 + 8) & ~v30);
  uint64_t v40 = (unint64_t *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v41 = *v40;
  if (*v38 < 0xFFFFFFFFuLL)
  {
    if (v41 < 0xFFFFFFFF)
    {
      if (v34) {
        unint64_t v70 = *(void *)(*(void *)(v28 - 8) + 64);
      }
      else {
        unint64_t v70 = v35 + 1;
      }
      if (v36) {
        unint64_t v71 = *(void *)(v29 + 64);
      }
      else {
        unint64_t v71 = v37 + 1;
      }
      if (v70 <= v71) {
        unint64_t v70 = v71;
      }
      if (v70 <= 8) {
        uint64_t v46 = 8;
      }
      else {
        uint64_t v46 = v70;
      }
      uint64_t v68 = (v30 + 16) & ~v30;
      uint64_t v50 = ((unint64_t)v27 + v30 + 8) & ~v30;
      uint64_t v72 = ((unint64_t)v26 + v30 + 8) & ~v30;
      memcpy((void *)v33, (const void *)v50, (v407 | 1) + v46);
      uint64_t v33 = v72;
      goto LABEL_115;
    }
    if (!v34) {
      ++v35;
    }
    uint64_t v50 = ((unint64_t)v27 + v30 + 8) & ~v30;
    *(void *)uint64_t v33 = *v39;
    *size_t v38 = *v40;
    size_t v53 = (void *)(((unint64_t)v38 + v31) & v32);
    uint64_t v54 = (unsigned __int8 *)(((unint64_t)v40 + v31) & v32);
    if (!v36) {
      ++v37;
    }
    if (v35 <= v37) {
      unint64_t v55 = v37;
    }
    else {
      unint64_t v55 = v35;
    }
    if (v55 <= 8) {
      uint64_t v46 = 8;
    }
    else {
      uint64_t v46 = v55;
    }
    unsigned int v56 = v54[v46];
    unsigned int v57 = v56 - 3;
    if (v56 >= 3)
    {
      if (v46 <= 3) {
        uint64_t v58 = v46;
      }
      else {
        uint64_t v58 = 4;
      }
      switch(v58)
      {
        case 1:
          int v59 = *v54;
          if (v46 >= 4) {
            goto LABEL_99;
          }
          goto LABEL_88;
        case 2:
          int v59 = *(unsigned __int16 *)v54;
          if (v46 < 4) {
            goto LABEL_88;
          }
          goto LABEL_99;
        case 3:
          int v59 = *(unsigned __int16 *)v54 | (v54[2] << 16);
          if (v46 < 4) {
            goto LABEL_88;
          }
          goto LABEL_99;
        case 4:
          int v59 = *(_DWORD *)v54;
          if (v46 < 4)
          {
LABEL_88:
            unsigned int v56 = (v59 | (v57 << (8 * v46))) + 3;
            break;
          }
LABEL_99:
          unsigned int v56 = v59 + 3;
          if (v56 == 2) {
            goto LABEL_100;
          }
          goto LABEL_90;
        default:
          break;
      }
    }
    if (v56 == 2)
    {
LABEL_100:
      uint64_t v61 = (void *)(((unint64_t)v26 + v30 + 8) & ~v30);
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v29 + 48))(v54, 1, v403))
      {
        memcpy(v53, v54, v37);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v29 + 32))(v53, v54, v403);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v53, 0, 1, v403);
      }
      uint64_t v68 = v407;
      char v80 = 2;
    }
    else
    {
LABEL_90:
      if (v56 != 1)
      {
        void *v53 = *(void *)v54;
        *((unsigned char *)v53 + v46) = 0;
        uint64_t v68 = (v30 + 16) & ~v30;
        goto LABEL_115;
      }
      uint64_t v61 = (void *)(((unint64_t)v26 + v30 + 8) & ~v30);
      uint64_t v79 = v28;
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v400 + 48))(v54, 1, v28))
      {
        memcpy(v53, v54, v35);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v400 + 32))(v53, v54, v79);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v400 + 56))(v53, 0, 1, v79);
      }
      uint64_t v68 = v407;
      char v80 = 1;
    }
    *((unsigned char *)v53 + v46) = v80;
LABEL_114:
    uint64_t v33 = (uint64_t)v61;
    goto LABEL_115;
  }
  uint64_t v397 = v28;
  if (v41 < 0xFFFFFFFF)
  {
    uint64_t v61 = (void *)(((unint64_t)v26 + v30 + 8) & ~v30);
    swift_release();
    swift_release();
    if (v34) {
      unint64_t v62 = v35;
    }
    else {
      unint64_t v62 = v35 + 1;
    }
    uint64_t v63 = (unsigned __int8 *)(((unint64_t)v38 + v31) & v32);
    if (v36) {
      size_t v64 = v37;
    }
    else {
      size_t v64 = v37 + 1;
    }
    if (v62 <= v64) {
      unint64_t v62 = v64;
    }
    if (v62 <= 8) {
      uint64_t v46 = 8;
    }
    else {
      uint64_t v46 = v62;
    }
    unsigned int v65 = v63[v46];
    unsigned int v66 = v65 - 3;
    if (v65 < 3)
    {
      uint64_t v50 = (uint64_t)v39;
      uint64_t v68 = v407;
      if (v65 == 2)
      {
LABEL_82:
        uint64_t v77 = v403;
        int v78 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v29 + 48))(v63, 1, v403);
        goto LABEL_110;
      }
    }
    else
    {
      if (v46 <= 3) {
        uint64_t v67 = v46;
      }
      else {
        uint64_t v67 = 4;
      }
      uint64_t v50 = (uint64_t)v39;
      uint64_t v68 = v407;
      switch(v67)
      {
        case 1:
          int v69 = *v63;
          if (v46 < 4) {
            goto LABEL_106;
          }
          goto LABEL_160;
        case 2:
          int v69 = *(unsigned __int16 *)v63;
          if (v46 < 4) {
            goto LABEL_106;
          }
          goto LABEL_160;
        case 3:
          int v69 = *(unsigned __int16 *)v63 | (v63[2] << 16);
          if (v46 < 4) {
            goto LABEL_106;
          }
          goto LABEL_160;
        case 4:
          int v69 = *(_DWORD *)v63;
          if (v46 >= 4)
          {
LABEL_160:
            unsigned int v65 = v69 + 3;
            if (v65 != 2) {
              break;
            }
            goto LABEL_82;
          }
LABEL_106:
          unsigned int v65 = (v69 | (v66 << (8 * v46))) + 3;
LABEL_107:
          if (v65 == 2) {
            goto LABEL_82;
          }
          break;
        default:
          goto LABEL_107;
      }
    }
    if (v65 != 1)
    {

LABEL_113:
      memcpy(v61, (const void *)v50, (v68 | 1) + v46);
      goto LABEL_114;
    }
    uint64_t v77 = v397;
    uint64_t v29 = v400;
    int v78 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v400 + 48))(v63, 1, v397);
LABEL_110:
    if (!v78) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v29 + 8))(v63, v77);
    }
    goto LABEL_113;
  }
  uint64_t v393 = ((unint64_t)v26 + v30 + 8) & ~v30;
  *(void *)uint64_t v33 = *v39;
  swift_release();
  *size_t v38 = *v40;
  swift_release();
  if (v34) {
    size_t v42 = v35;
  }
  else {
    size_t v42 = v35 + 1;
  }
  unint64_t v43 = (unsigned __int8 *)(((unint64_t)v38 + v31) & v32);
  uint64_t v44 = (unsigned __int8 *)(((unint64_t)v40 + v31) & v32);
  if (!v36) {
    ++v37;
  }
  if (v42 <= v37) {
    unint64_t v45 = v37;
  }
  else {
    unint64_t v45 = v42;
  }
  if (v45 <= 8) {
    uint64_t v46 = 8;
  }
  else {
    uint64_t v46 = v45;
  }
  if (v43 == v44)
  {
    uint64_t v33 = v393;
    uint64_t v50 = (uint64_t)v39;
    uint64_t v68 = v407;
    goto LABEL_115;
  }
  unsigned int v47 = v43[v46];
  unsigned int v48 = v47 - 3;
  size_t v390 = v42;
  if (v47 < 3)
  {
    uint64_t v50 = (uint64_t)v39;
    uint64_t v51 = v403;
    if (v47 == 2)
    {
LABEL_85:
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v29 + 48))(v43, 1, v51)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v29 + 8))(v43, v51);
      }
      goto LABEL_453;
    }
  }
  else
  {
    if (v46 <= 3) {
      uint64_t v49 = v46;
    }
    else {
      uint64_t v49 = 4;
    }
    uint64_t v50 = (uint64_t)v39;
    uint64_t v51 = v403;
    switch(v49)
    {
      case 1:
        int v52 = *v43;
        goto LABEL_446;
      case 2:
        int v52 = *(unsigned __int16 *)v43;
        goto LABEL_446;
      case 3:
        int v52 = *(unsigned __int16 *)v43 | (v43[2] << 16);
        goto LABEL_446;
      case 4:
        int v52 = *(_DWORD *)v43;
LABEL_446:
        if (v46 < 4)
        {
          int v360 = v52 | (v48 << (8 * v46));
          unsigned int v47 = v360 + 3;
          if (v360 != -1) {
            break;
          }
          goto LABEL_85;
        }
        unsigned int v47 = v52 + 3;
LABEL_448:
        if (v47 == 2) {
          goto LABEL_85;
        }
        break;
      default:
        goto LABEL_448;
    }
  }
  if (v47 == 1)
  {
    if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v400 + 48))(v43, 1, v397)) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v400 + 8))(v43, v397);
    }
  }
  else
  {
  }
LABEL_453:
  unsigned int v356 = v44[v46];
  unsigned int v357 = v356 - 3;
  if (v356 >= 3)
  {
    if (v46 <= 3) {
      uint64_t v358 = v46;
    }
    else {
      uint64_t v358 = 4;
    }
    uint64_t v33 = v393;
    switch(v358)
    {
      case 1:
        int v359 = *v44;
        goto LABEL_475;
      case 2:
        int v359 = *(unsigned __int16 *)v44;
        goto LABEL_475;
      case 3:
        int v359 = *(unsigned __int16 *)v44 | (v44[2] << 16);
        goto LABEL_475;
      case 4:
        int v359 = *(_DWORD *)v44;
LABEL_475:
        if (v46 < 4)
        {
          int v364 = v359 | (v357 << (8 * v46));
          unsigned int v356 = v364 + 3;
          if (v364 != -1) {
            goto LABEL_478;
          }
          goto LABEL_460;
        }
        unsigned int v356 = v359 + 3;
LABEL_477:
        if (v356 == 2) {
          goto LABEL_460;
        }
        break;
      default:
        goto LABEL_477;
    }
    goto LABEL_478;
  }
  uint64_t v33 = v393;
  if (v356 != 2)
  {
LABEL_478:
    if (v356 == 1)
    {
      uint64_t v68 = v407;
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v400 + 48))(v44, 1, v397))
      {
        memcpy(v43, v44, v390);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v400 + 32))(v43, v44, v397);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v400 + 56))(v43, 0, 1, v397);
      }
      uint64_t v33 = v393;
      v43[v46] = 1;
    }
    else
    {
      uint64_t v68 = v407;
      *(void *)unint64_t v43 = *(void *)v44;
      v43[v46] = 0;
    }
    goto LABEL_115;
  }
LABEL_460:
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v29 + 48))(v44, 1, v51))
  {
    memcpy(v43, v44, v37);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v29 + 32))(v43, v44, v51);
    (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v29 + 56))(v43, 0, 1, v51);
  }
  uint64_t v33 = v393;
  uint64_t v68 = v407;
  v43[v46] = 2;
LABEL_115:
  uint64_t v81 = (v68 | 1) + v46;
  unint64_t v82 = (void **)(((v33 | 7) + v81) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v83 = (void **)(((v50 | 7) + v81) & 0xFFFFFFFFFFFFFFF8);
  id v84 = *v82;
  *unint64_t v82 = *v83;

  uint64_t v85 = *(void *)(sub_228BACB48() - 8);
  int v86 = *(_DWORD *)(v85 + 80) & 0xFC;
  uint64_t v87 = sub_228BAC608();
  uint64_t v88 = *(void *)(v87 - 8);
  uint64_t v89 = *(unsigned __int8 *)(v88 + 80);
  uint64_t v404 = sub_228BACD78();
  uint64_t v90 = *(void *)(v404 - 8);
  uint64_t v91 = *(unsigned __int8 *)(v90 + 80);
  uint64_t v92 = v86 | v89 | v91 | 3;
  uint64_t v93 = ((unint64_t)v83 + v92 + 8) & ~v92;
  uint64_t v94 = ((unint64_t)v82 + v92 + 8) & ~v92;
  uint64_t v408 = v93;
  (*(void (**)(void))(v85 + 40))();
  uint64_t v95 = *(void *)(v85 + 64) + v89;
  uint64_t v96 = (v95 + v93) & ~v89;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 40))((v95 + v94) & ~v89, v96, v87);
  uint64_t v97 = *(void *)(v88 + 64) + v91;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 40))((v97 + ((v95 + v94) & ~v89)) & ~v91, (v97 + v96) & ~v91, v404);
  uint64_t v98 = *(void *)(v90 + 64) + 3;
  *(_DWORD *)((v98 + ((v97 + ((v95 + v94) & ~v89)) & ~v91)) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)((v98
                                                                                                 + ((v97 + v96) & ~v91)) & 0xFFFFFFFFFFFFFFFCLL);
  unint64_t v99 = (v98 + ((v97 + (v95 & ~v89)) & ~v91)) & 0xFFFFFFFFFFFFFFFCLL;
  uint64_t v383 = __swift_instantiateConcreteTypeFromMangledName(&qword_268292358);
  uint64_t v100 = *(void *)(v383 - 8);
  LODWORD(v96) = *(unsigned __int8 *)(v100 + 80);
  uint64_t v405 = sub_228BAC418();
  uint64_t v101 = *(void *)(v405 - 8);
  uint64_t v102 = *(_DWORD *)(v101 + 80) | v96;
  uint64_t v103 = *(_DWORD *)(v101 + 80);
  uint64_t v104 = v99 + (v102 | 7) + 4;
  uint64_t v105 = (void *)((v104 + v94) & ~(v102 | 7));
  uint64_t v391 = v105;
  uint64_t v394 = (void *)((v104 + v408) & ~(v102 | 7));
  void *v105 = *v394;
  unint64_t v106 = (unint64_t)v105 + 15;
  swift_release();
  v106 &= 0xFFFFFFFFFFFFFFF8;
  size_t v107 = (void *)(((unint64_t)v394 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v106 = *v107;
  swift_release();
  uint64_t v108 = ~v102;
  uint64_t v109 = (unsigned __int16 *)((v102 + 8 + v106) & ~v102);
  uint64_t v385 = v102;
  uint64_t v409 = (unsigned __int16 *)(((unint64_t)v107 + v102 + 8) & ~v102);
  uint64_t v398 = v100;
  uint64_t v401 = (void *)v101;
  uint64_t v110 = *(unsigned int *)(v100 + 84);
  uint64_t v111 = *(unsigned int *)(v101 + 84);
  uint64_t v112 = ~v103;
  uint64_t v113 = *(void *)(v100 + 64) + v103;
  uint64_t v114 = *(void *)(v101 + 64);
  uint64_t v115 = v114 + v103;
  size_t v116 = ((v114 + v103 + (v113 & ~v103)) & ~v103) + v114;
  int v117 = v111 | v110;
  uint64_t v388 = v108;
  uint64_t v380 = v112;
  if (!(v111 | v110))
  {
    char v126 = 8 * v116;
    uint64_t v125 = v383;
    if (*((unsigned char *)v109 + v116))
    {
      int v127 = (*((unsigned __int8 *)v109 + v116) - 1) << v126;
      if (v116 > 3) {
        int v127 = 0;
      }
      if (v116)
      {
        int v128 = v116 <= 3 ? v116 : 4;
        switch(v128)
        {
          case 2:
            int v129 = *v109;
            break;
          case 3:
            int v129 = *v109 | (*((unsigned __int8 *)v109 + 2) << 16);
            break;
          case 4:
            int v129 = *(_DWORD *)v109;
            break;
          default:
            int v129 = *(unsigned __int8 *)v109;
            break;
        }
      }
      else
      {
        int v129 = 0;
      }
      if ((v129 | v127) != 0xFFFFFFFF)
      {
        if (!*((unsigned char *)v409 + v116)) {
          goto LABEL_470;
        }
        int v134 = (*((unsigned __int8 *)v409 + v116) - 1) << v126;
        if (v116 > 3) {
          int v134 = 0;
        }
        if (v116)
        {
          int v135 = v116 <= 3 ? v116 : 4;
          switch(v135)
          {
            case 2:
              int v136 = *v409;
              break;
            case 3:
              int v136 = *v409 | (*((unsigned __int8 *)v409 + 2) << 16);
              break;
            case 4:
              int v136 = *(_DWORD *)v409;
              break;
            default:
              int v136 = *(unsigned __int8 *)v409;
              break;
          }
        }
        else
        {
          int v136 = 0;
        }
        if ((v136 | v134) == 0xFFFFFFFF) {
          goto LABEL_470;
        }
        goto LABEL_167;
      }
    }
    if (!*((unsigned char *)v409 + v116)) {
      goto LABEL_171;
    }
    int v137 = (*((unsigned __int8 *)v409 + v116) - 1) << v126;
    if (v116 > 3) {
      int v137 = 0;
    }
    if (v116)
    {
      int v138 = v116 <= 3 ? v116 : 4;
      switch(v138)
      {
        case 2:
          int v139 = *v409;
          break;
        case 3:
          int v139 = *v409 | (*((unsigned __int8 *)v409 + 2) << 16);
          break;
        case 4:
          int v139 = *(_DWORD *)v409;
          break;
        default:
          int v139 = *(unsigned __int8 *)v409;
          break;
      }
    }
    else
    {
      int v139 = 0;
    }
    if ((v139 | v137) == 0xFFFFFFFF)
    {
LABEL_171:
      (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v398 + 40))(v109, v409, v125);
      unint64_t v143 = ((unint64_t)v109 + v113) & v112;
      unint64_t v144 = ((unint64_t)v409 + v113) & v112;
      uint64_t v145 = (void (*)(unint64_t, unint64_t, uint64_t))v401[5];
      v145(v143, v144, v405);
      v145((v115 + v143) & v112, (v115 + v144) & v112, v405);
LABEL_172:
      unint64_t v146 = (unint64_t)v391;
      unint64_t v147 = (unint64_t)v394;
      uint64_t v148 = v385;
      uint64_t v149 = v388;
      goto LABEL_173;
    }
LABEL_166:
    (*(void (**)(unsigned __int16 *, uint64_t))(v398 + 8))(v109, v125);
    unint64_t v140 = ((unint64_t)v109 + v113) & v112;
    unsigned int v141 = (void (*)(unint64_t, uint64_t))v401[1];
    v141(v140, v405);
    v141((v115 + v140) & v112, v405);
    goto LABEL_167;
  }
  if (v110 < v111)
  {
    unint64_t v118 = ((unint64_t)v109 + v113) & v112;
    size_t v119 = v116;
    char v120 = v109;
    uint64_t v121 = v115;
    uint64_t v122 = (uint64_t (*)(unint64_t, uint64_t, uint64_t))v401[6];
    int v123 = v122(v118, v111, v405);
    int v124 = v122(((unint64_t)v409 + v113) & v112, v111, v405);
    uint64_t v115 = v121;
    uint64_t v109 = v120;
    size_t v116 = v119;
    uint64_t v125 = v383;
    if (v123) {
      goto LABEL_118;
    }
LABEL_130:
    uint64_t v112 = v380;
    if (!v124) {
      goto LABEL_171;
    }
    goto LABEL_166;
  }
  int v130 = v111 | v110;
  uint64_t v131 = v115;
  char v132 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v398 + 48);
  uint64_t v125 = v383;
  int v133 = v132(v109, v110, v383);
  int v124 = v132(v409, v110, v383);
  uint64_t v115 = v131;
  int v117 = v130;
  if (!v133) {
    goto LABEL_130;
  }
LABEL_118:
  if (v124)
  {
LABEL_167:
    if (v117) {
      size_t v142 = v116;
    }
    else {
      size_t v142 = v116 + 1;
    }
    memcpy(v109, v409, v142);
    goto LABEL_172;
  }
LABEL_470:
  (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v398 + 32))(v109, v409, v125);
  unint64_t v361 = ((unint64_t)v109 + v113) & v380;
  unint64_t v362 = ((unint64_t)v409 + v113) & v380;
  uint64_t v363 = (void (*)(unint64_t, unint64_t, uint64_t))v401[4];
  v363(v361, v362, v405);
  v363((v115 + v361) & v380, (v115 + v362) & v380, v405);
  unint64_t v146 = (unint64_t)v391;
  unint64_t v147 = (unint64_t)v394;
  uint64_t v148 = v385;
  uint64_t v149 = v388;
  if (!v117) {
    *((unsigned char *)v109 + v116) = 0;
  }
LABEL_173:
  uint64_t v150 = (v148 + 16) & v149;
  if (!v117) {
    ++v150;
  }
  size_t v151 = v150 + v116;
  unsigned int v152 = (void *)(((v146 | 7) + v151) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v153 = (void *)(((v147 | 7) + v151) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v152 = *v153;
  swift_release();
  uint64_t v154 = sub_228BAC9C8();
  uint64_t v402 = *(void *)(v154 - 8);
  uint64_t v155 = *(unsigned __int8 *)(v402 + 80);
  uint64_t v156 = v155 | 7;
  int v157 = (unsigned __int8 *)(((unint64_t)v152 + v155 + 8) & ~(v155 | 7));
  int v158 = (unsigned __int8 *)(((unint64_t)v153 + v155 + 8) & ~(v155 | 7));
  unint64_t v159 = *(void *)(v402 + 64);
  if (v159 <= 8) {
    uint64_t v160 = 8;
  }
  else {
    uint64_t v160 = *(void *)(*(void *)(v154 - 8) + 64);
  }
  if (v157 != v158)
  {
    unsigned int v161 = v157[v160];
    unsigned int v162 = v161 - 2;
    if (v161 >= 2)
    {
      if (v160 <= 3) {
        uint64_t v163 = v160;
      }
      else {
        uint64_t v163 = 4;
      }
      switch(v163)
      {
        case 1:
          int v164 = *v157;
          if (v160 >= 4) {
            goto LABEL_193;
          }
          goto LABEL_187;
        case 2:
          int v164 = *(unsigned __int16 *)v157;
          if (v160 < 4) {
            goto LABEL_187;
          }
          goto LABEL_193;
        case 3:
          int v164 = *(unsigned __int16 *)v157 | (v157[2] << 16);
          if (v160 < 4) {
            goto LABEL_187;
          }
          goto LABEL_193;
        case 4:
          int v164 = *(_DWORD *)v157;
          if (v160 < 4)
          {
LABEL_187:
            unsigned int v161 = (v164 | (v162 << (8 * v160))) + 2;
            break;
          }
LABEL_193:
          if (v164 != -1) {
            goto LABEL_194;
          }
          goto LABEL_189;
        default:
          break;
      }
    }
    if (v161 == 1) {
LABEL_189:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v402 + 8))(v157, v154);
    else {
LABEL_194:
    }
      swift_release();
    unsigned int v165 = v158[v160];
    unsigned int v166 = v165 - 2;
    if (v165 >= 2)
    {
      if (v160 <= 3) {
        uint64_t v167 = v160;
      }
      else {
        uint64_t v167 = 4;
      }
      switch(v167)
      {
        case 1:
          int v168 = *v158;
          if (v160 >= 4) {
            goto LABEL_209;
          }
          goto LABEL_203;
        case 2:
          int v168 = *(unsigned __int16 *)v158;
          if (v160 < 4) {
            goto LABEL_203;
          }
          goto LABEL_209;
        case 3:
          int v168 = *(unsigned __int16 *)v158 | (v158[2] << 16);
          if (v160 < 4) {
            goto LABEL_203;
          }
          goto LABEL_209;
        case 4:
          int v168 = *(_DWORD *)v158;
          if (v160 < 4)
          {
LABEL_203:
            unsigned int v165 = (v168 | (v166 << (8 * v160))) + 2;
            break;
          }
LABEL_209:
          if (v168 != -1) {
            goto LABEL_210;
          }
          goto LABEL_205;
        default:
          break;
      }
    }
    if (v165 == 1)
    {
LABEL_205:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v402 + 32))(v157, v158, v154);
      char v169 = 1;
    }
    else
    {
LABEL_210:
      char v169 = 0;
      *(void *)int v157 = *(void *)v158;
    }
    v157[v160] = v169;
  }
  uint64_t v406 = sub_228BAC588();
  uint64_t v410 = *(void *)(v406 - 8);
  uint64_t v170 = *(unsigned __int8 *)(v410 + 80);
  uint64_t v171 = v160 + (v170 | 7) + 1;
  uint64_t v172 = (unsigned __int8 *)((unint64_t)&v157[v171] & ~(v170 | 7));
  unsigned int v173 = (unsigned __int8 *)((unint64_t)&v158[v171] & ~(v170 | 7));
  unint64_t v399 = *(void *)(v410 + 64);
  if (v399 <= 8) {
    uint64_t v174 = 8;
  }
  else {
    uint64_t v174 = *(void *)(*(void *)(v406 - 8) + 64);
  }
  if (v172 != v173)
  {
    unsigned int v175 = v172[v174];
    unsigned int v176 = v175 - 2;
    if (v175 >= 2)
    {
      if (v174 <= 3) {
        uint64_t v177 = v174;
      }
      else {
        uint64_t v177 = 4;
      }
      switch(v177)
      {
        case 1:
          int v178 = *v172;
          if (v174 >= 4) {
            goto LABEL_230;
          }
          goto LABEL_224;
        case 2:
          int v178 = *(unsigned __int16 *)v172;
          if (v174 < 4) {
            goto LABEL_224;
          }
          goto LABEL_230;
        case 3:
          int v178 = *(unsigned __int16 *)v172 | (v172[2] << 16);
          if (v174 < 4) {
            goto LABEL_224;
          }
          goto LABEL_230;
        case 4:
          int v178 = *(_DWORD *)v172;
          if (v174 < 4)
          {
LABEL_224:
            unsigned int v175 = (v178 | (v176 << (8 * v174))) + 2;
            break;
          }
LABEL_230:
          if (v178 != -1) {
            goto LABEL_231;
          }
          goto LABEL_226;
        default:
          break;
      }
    }
    if (v175 == 1) {
LABEL_226:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v410 + 8))(v172, v406);
    else {
LABEL_231:
    }
      swift_release();
    unsigned int v179 = v173[v174];
    unsigned int v180 = v179 - 2;
    if (v179 >= 2)
    {
      if (v174 <= 3) {
        uint64_t v181 = v174;
      }
      else {
        uint64_t v181 = 4;
      }
      switch(v181)
      {
        case 1:
          int v182 = *v173;
          if (v174 >= 4) {
            goto LABEL_246;
          }
          goto LABEL_240;
        case 2:
          int v182 = *(unsigned __int16 *)v173;
          if (v174 < 4) {
            goto LABEL_240;
          }
          goto LABEL_246;
        case 3:
          int v182 = *(unsigned __int16 *)v173 | (v173[2] << 16);
          if (v174 < 4) {
            goto LABEL_240;
          }
          goto LABEL_246;
        case 4:
          int v182 = *(_DWORD *)v173;
          if (v174 < 4)
          {
LABEL_240:
            unsigned int v179 = (v182 | (v180 << (8 * v174))) + 2;
            break;
          }
LABEL_246:
          if (v182 != -1) {
            goto LABEL_247;
          }
          goto LABEL_242;
        default:
          break;
      }
    }
    if (v179 == 1)
    {
LABEL_242:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v410 + 32))(v172, v173, v406);
      char v183 = 1;
    }
    else
    {
LABEL_247:
      char v183 = 0;
      *(void *)uint64_t v172 = *(void *)v173;
    }
    v172[v174] = v183;
  }
  uint64_t v184 = sub_228BACB68();
  uint64_t v185 = *(void *)(v184 - 8);
  uint64_t v186 = *(_DWORD *)(v185 + 80) & 0xF8 | 7;
  uint64_t v187 = v174 + v186 + 1;
  uint64_t v188 = (unsigned __int8 *)((unint64_t)&v172[v187] & ~v186);
  unint64_t v189 = (unsigned __int8 *)((unint64_t)&v173[v187] & ~v186);
  if (*(void *)(v185 + 64) <= 8uLL) {
    uint64_t v190 = 8;
  }
  else {
    uint64_t v190 = *(void *)(v185 + 64);
  }
  if (v188 != v189)
  {
    uint64_t v191 = v184;
    unsigned int v192 = v188[v190];
    unsigned int v193 = v192 - 2;
    if (v192 >= 2)
    {
      if (v190 <= 3) {
        uint64_t v194 = v190;
      }
      else {
        uint64_t v194 = 4;
      }
      switch(v194)
      {
        case 1:
          int v195 = *v188;
          if (v190 >= 4) {
            goto LABEL_267;
          }
          goto LABEL_261;
        case 2:
          int v195 = *(unsigned __int16 *)v188;
          if (v190 < 4) {
            goto LABEL_261;
          }
          goto LABEL_267;
        case 3:
          int v195 = *(unsigned __int16 *)v188 | (v188[2] << 16);
          if (v190 < 4) {
            goto LABEL_261;
          }
          goto LABEL_267;
        case 4:
          int v195 = *(_DWORD *)v188;
          if (v190 < 4)
          {
LABEL_261:
            unsigned int v192 = (v195 | (v193 << (8 * v190))) + 2;
            break;
          }
LABEL_267:
          if (v195 != -1) {
            goto LABEL_268;
          }
          goto LABEL_263;
        default:
          break;
      }
    }
    if (v192 == 1) {
LABEL_263:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v185 + 8))(v188, v184);
    else {
LABEL_268:
    }
      swift_release();
    unsigned int v196 = v189[v190];
    unsigned int v197 = v196 - 2;
    if (v196 >= 2)
    {
      if (v190 <= 3) {
        uint64_t v198 = v190;
      }
      else {
        uint64_t v198 = 4;
      }
      switch(v198)
      {
        case 1:
          int v199 = *v189;
          if (v190 >= 4) {
            goto LABEL_283;
          }
          goto LABEL_277;
        case 2:
          int v199 = *(unsigned __int16 *)v189;
          if (v190 < 4) {
            goto LABEL_277;
          }
          goto LABEL_283;
        case 3:
          int v199 = *(unsigned __int16 *)v189 | (v189[2] << 16);
          if (v190 < 4) {
            goto LABEL_277;
          }
          goto LABEL_283;
        case 4:
          int v199 = *(_DWORD *)v189;
          if (v190 < 4)
          {
LABEL_277:
            unsigned int v196 = (v199 | (v197 << (8 * v190))) + 2;
            break;
          }
LABEL_283:
          if (v199 != -1) {
            goto LABEL_284;
          }
          goto LABEL_279;
        default:
          break;
      }
    }
    if (v196 == 1)
    {
LABEL_279:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v185 + 32))(v188, v189, v191);
      char v200 = 1;
    }
    else
    {
LABEL_284:
      char v200 = 0;
      *(void *)uint64_t v188 = *(void *)v189;
    }
    v188[v190] = v200;
  }
  uint64_t v201 = sub_228BAC848();
  uint64_t v202 = *(void *)(v201 - 8);
  uint64_t v203 = *(_DWORD *)(v202 + 80) & 0xF8 | 7;
  uint64_t v204 = v190 + v203 + 1;
  uint64_t v205 = (unsigned __int8 *)((unint64_t)&v188[v204] & ~v203);
  unint64_t v206 = (unsigned __int8 *)((unint64_t)&v189[v204] & ~v203);
  if (*(void *)(v202 + 64) <= 8uLL) {
    uint64_t v207 = 8;
  }
  else {
    uint64_t v207 = *(void *)(v202 + 64);
  }
  if (v205 != v206)
  {
    uint64_t v208 = v201;
    unsigned int v209 = v205[v207];
    unsigned int v210 = v209 - 2;
    if (v209 >= 2)
    {
      if (v207 <= 3) {
        uint64_t v211 = v207;
      }
      else {
        uint64_t v211 = 4;
      }
      switch(v211)
      {
        case 1:
          int v212 = *v205;
          if (v207 >= 4) {
            goto LABEL_304;
          }
          goto LABEL_298;
        case 2:
          int v212 = *(unsigned __int16 *)v205;
          if (v207 < 4) {
            goto LABEL_298;
          }
          goto LABEL_304;
        case 3:
          int v212 = *(unsigned __int16 *)v205 | (v205[2] << 16);
          if (v207 < 4) {
            goto LABEL_298;
          }
          goto LABEL_304;
        case 4:
          int v212 = *(_DWORD *)v205;
          if (v207 < 4)
          {
LABEL_298:
            unsigned int v209 = (v212 | (v210 << (8 * v207))) + 2;
            break;
          }
LABEL_304:
          if (v212 != -1) {
            goto LABEL_305;
          }
          goto LABEL_300;
        default:
          break;
      }
    }
    if (v209 == 1) {
LABEL_300:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v202 + 8))(v205, v201);
    else {
LABEL_305:
    }
      swift_release();
    unsigned int v213 = v206[v207];
    unsigned int v214 = v213 - 2;
    if (v213 >= 2)
    {
      if (v207 <= 3) {
        uint64_t v215 = v207;
      }
      else {
        uint64_t v215 = 4;
      }
      switch(v215)
      {
        case 1:
          int v216 = *v206;
          if (v207 >= 4) {
            goto LABEL_320;
          }
          goto LABEL_314;
        case 2:
          int v216 = *(unsigned __int16 *)v206;
          if (v207 < 4) {
            goto LABEL_314;
          }
          goto LABEL_320;
        case 3:
          int v216 = *(unsigned __int16 *)v206 | (v206[2] << 16);
          if (v207 < 4) {
            goto LABEL_314;
          }
          goto LABEL_320;
        case 4:
          int v216 = *(_DWORD *)v206;
          if (v207 < 4)
          {
LABEL_314:
            unsigned int v213 = (v216 | (v214 << (8 * v207))) + 2;
            break;
          }
LABEL_320:
          if (v216 != -1) {
            goto LABEL_321;
          }
          goto LABEL_316;
        default:
          break;
      }
    }
    if (v213 == 1)
    {
LABEL_316:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v202 + 32))(v205, v206, v208);
      char v217 = 1;
    }
    else
    {
LABEL_321:
      char v217 = 0;
      *(void *)uint64_t v205 = *(void *)v206;
    }
    v205[v207] = v217;
  }
  unint64_t v218 = &v205[v207 + 1];
  unint64_t v219 = &v206[v207 + 1];
  unint64_t v220 = (unint64_t)(v218 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v221 = (unint64_t)(v219 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v222 = *(void *)v221;
  LOBYTE(v221) = *(unsigned char *)(v221 + 8);
  uint64_t v223 = *(void *)v220;
  char v224 = *(unsigned char *)(v220 + 8);
  *(void *)unint64_t v220 = v222;
  *(unsigned char *)(v220 + 8) = v221;
  sub_228AD25F8(v223, v224);
  unint64_t v225 = (unint64_t)(v219 + 23) & 0xFFFFFFFFFFFFFFF8;
  char v226 = *(unsigned char *)(v225 + 80);
  char v227 = *(unsigned char *)(v225 + 81);
  unint64_t v228 = (unint64_t)(v218 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v229 = *(void *)v228;
  uint64_t v230 = *(void *)(v228 + 8);
  uint64_t v231 = *(void *)(v228 + 16);
  uint64_t v232 = *(void *)(v228 + 24);
  uint64_t v233 = *(void *)(v228 + 32);
  uint64_t v234 = *(void *)(v228 + 40);
  uint64_t v235 = *(void *)(v228 + 48);
  uint64_t v236 = *(void *)(v228 + 56);
  uint64_t v237 = *(void *)(v228 + 64);
  uint64_t v238 = *(void *)(v228 + 72);
  char v239 = *(unsigned char *)(v228 + 80);
  char v240 = *(unsigned char *)(v228 + 81);
  long long v241 = *(_OWORD *)(v225 + 16);
  long long v242 = *(_OWORD *)(v225 + 32);
  long long v243 = *(_OWORD *)(v225 + 48);
  long long v244 = *(_OWORD *)(v225 + 64);
  *(_OWORD *)unint64_t v228 = *(_OWORD *)v225;
  *(_OWORD *)(v228 + 16) = v241;
  *(_OWORD *)(v228 + 32) = v242;
  *(_OWORD *)(v228 + 48) = v243;
  *(_OWORD *)(v228 + 64) = v244;
  *(unsigned char *)(v228 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v226;
  *(unsigned char *)(v228 + 81) = v227;
  sub_228AD24B0(v229, v230, v231, v232, v233, v234, v235, v236, v237, v238, v239, v240);
  uint64_t v245 = v156 | v170;
  uint64_t v246 = (v156 | v170) + 82;
  uint64_t v247 = ~(v156 | v170);
  unint64_t v248 = (v246 + v228) & v247;
  unint64_t v249 = (unsigned __int8 *)((v246 + v225) & v247);
  if ((unsigned __int8 *)v248 == v249)
  {
    uint64_t v263 = ~(v156 | v170);
    uint64_t v264 = ~v170;
    uint64_t v265 = (v170 + 2) & ~v170;
    unint64_t v266 = v399;
    unint64_t v267 = ((((v159 + v170 + ((v155 + 2) & ~v155)) & ~v170) + v399 + 7) & 0xFFFFFFFFFFFFFFF8) + v170 + 8;
    unint64_t v268 = v267 & ~v170;
    uint64_t v256 = (v170 + 3) & ~v170;
    uint64_t v269 = v382;
    goto LABEL_440;
  }
  unsigned int v250 = *(_DWORD *)(v402 + 84);
  uint64_t v251 = *(unsigned int *)(v410 + 84);
  if (v250 <= v251) {
    unsigned int v252 = *(_DWORD *)(v410 + 84);
  }
  else {
    unsigned int v252 = *(_DWORD *)(v402 + 84);
  }
  if (v252 <= 0x7FFFFFFE) {
    int v253 = 2147483646;
  }
  else {
    int v253 = v252;
  }
  uint64_t v392 = v155 + 2;
  uint64_t v254 = v159 + v170;
  unint64_t v255 = ((((v159 + v170 + ((v155 + 2) & ~v155)) & ~v170) + v399 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v372 = v170 + 3;
  uint64_t v256 = (v170 + 3) & ~v170;
  uint64_t v373 = v170 + 2;
  size_t __n = v255;
  size_t v370 = v399 + ((v170 + 2) & ~v170);
  unint64_t v257 = v255 + v170;
  unint64_t v374 = v399 + v256 + v245;
  unint64_t v375 = (v255 + v170) & ~v170;
  if (v370 + ((v255 + v170 + ((v374 + v375) & v247)) & ~v170) + 6 <= 8) {
    uint64_t v258 = 8;
  }
  else {
    uint64_t v258 = v370 + ((v255 + v170 + ((v374 + v375) & v247)) & ~v170) + 6;
  }
  unsigned int v259 = *(unsigned __int8 *)(v248 + v258);
  unsigned int v260 = v259 - 2;
  uint64_t v377 = (v170 + 2) & ~v170;
  if (v259 >= 2)
  {
    if (v258 <= 3) {
      uint64_t v261 = v258;
    }
    else {
      uint64_t v261 = 4;
    }
    switch(v261)
    {
      case 1:
        int v262 = *(unsigned __int8 *)v248;
        if (v258 < 4) {
          goto LABEL_342;
        }
        goto LABEL_346;
      case 2:
        int v262 = *(unsigned __int16 *)v248;
        if (v258 < 4) {
          goto LABEL_342;
        }
        goto LABEL_346;
      case 3:
        int v262 = *(unsigned __int16 *)v248 | (*(unsigned __int8 *)(v248 + 2) << 16);
        if (v258 < 4) {
          goto LABEL_342;
        }
        goto LABEL_346;
      case 4:
        int v262 = *(_DWORD *)v248;
        if (v258 < 4) {
LABEL_342:
        }
          unsigned int v259 = (v262 | (v260 << (8 * v258))) + 2;
        else {
LABEL_346:
        }
          unsigned int v259 = v262 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v379 = v154;
  uint64_t v381 = v254;
  uint64_t v264 = ~v170;
  uint64_t v270 = ~v155;
  unint64_t v389 = (unint64_t)v249;
  unsigned int v395 = *(_DWORD *)(v402 + 84);
  int v386 = v253;
  uint64_t v376 = v256;
  uint64_t v378 = v258;
  uint64_t v384 = ~v155;
  size_t v368 = v399 + v256;
  if (v259 != 1)
  {
    swift_release();
    goto LABEL_385;
  }
  unint64_t v271 = (v392 + v248) & v270;
  if (v250 == v253)
  {
    if ((*(unsigned int (**)(unint64_t))(v402 + 48))((v392 + v248) & v270)) {
      goto LABEL_359;
    }
LABEL_354:
    unint64_t v272 = (v381 + v271) & v264;
LABEL_358:
    (*(void (**)(unint64_t, uint64_t))(v402 + 8))(v271, v154);
    (*(void (**)(unint64_t, uint64_t))(v410 + 8))(v272, v406);
    swift_release();
    goto LABEL_359;
  }
  unint64_t v272 = (v254 + v271) & v264;
  if (v251 == v253)
  {
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v410 + 48))((v254 + v271) & v264, v251, v406))
    {
      goto LABEL_359;
    }
    goto LABEL_354;
  }
  unint64_t v273 = *(void *)((v399 + v272 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v273 >= 0xFFFFFFFF) {
    LODWORD(v273) = -1;
  }
  if ((v273 + 1) < 2) {
    goto LABEL_358;
  }
LABEL_359:
  unint64_t v274 = (unsigned __int8 *)((v257 + v248) & v264);
  if (v251 > 0xFE)
  {
    int v278 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v410 + 48))((unint64_t)&v274[v372] & v264, v251, v406);
    unsigned int v279 = v395;
    uint64_t v276 = v384;
    if (v278) {
      goto LABEL_367;
    }
    goto LABEL_366;
  }
  unsigned int v275 = *v274;
  uint64_t v276 = v384;
  if (v275 >= 2) {
    int v277 = (v275 + 2147483646) & 0x7FFFFFFF;
  }
  else {
    int v277 = -1;
  }
  unsigned int v279 = v395;
  if (v277 == -1)
  {
LABEL_366:
    (*(void (**)(unint64_t, uint64_t))(v410 + 8))((unint64_t)&v274[v372] & v264, v406);
    unsigned int v279 = v395;
  }
LABEL_367:
  unint64_t v280 = (unint64_t)&v274[v374] & v247;
  unint64_t v281 = (v392 + v280) & v276;
  if (v279 == v386)
  {
    if ((*(unsigned int (**)(unint64_t))(v402 + 48))((v392 + v280) & v276)) {
      goto LABEL_377;
    }
LABEL_372:
    unint64_t v282 = (v381 + v281) & v264;
LABEL_376:
    (*(void (**)(unint64_t, uint64_t))(v402 + 8))(v281, v379);
    (*(void (**)(unint64_t, uint64_t))(v410 + 8))(v282, v406);
    swift_release();
    goto LABEL_377;
  }
  unint64_t v282 = (v381 + v281) & v264;
  if (v251 == v386)
  {
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v410 + 48))((v381 + v281) & v264, v251, v406))
    {
      goto LABEL_377;
    }
    goto LABEL_372;
  }
  unint64_t v283 = *(void *)((v399 + v282 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v283 >= 0xFFFFFFFF) {
    LODWORD(v283) = -1;
  }
  if ((v283 + 1) < 2) {
    goto LABEL_376;
  }
LABEL_377:
  uint64_t v284 = (unsigned __int8 *)((v257 + v280) & v264);
  if (v251 > 0xFE)
  {
    uint64_t v154 = v379;
    uint64_t v256 = v376;
    uint64_t v270 = v384;
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v410 + 48))((unint64_t)&v284[v373] & v264, v251, v406))
    {
      goto LABEL_385;
    }
    goto LABEL_384;
  }
  unsigned int v285 = *v284;
  uint64_t v154 = v379;
  uint64_t v256 = v376;
  if (v285 >= 2) {
    int v286 = (v285 + 2147483646) & 0x7FFFFFFF;
  }
  else {
    int v286 = -1;
  }
  uint64_t v270 = v384;
  if (v286 == -1) {
LABEL_384:
  }
    (*(void (**)(unint64_t, uint64_t))(v410 + 8))((unint64_t)&v284[v373] & v264, v406);
LABEL_385:
  unint64_t v249 = (unsigned __int8 *)v389;
  unsigned int v287 = *(unsigned __int8 *)(v389 + v378);
  unsigned int v288 = v287 - 2;
  if (v287 >= 2)
  {
    if (v378 <= 3) {
      uint64_t v289 = v378;
    }
    else {
      uint64_t v289 = 4;
    }
    unsigned int v290 = v395;
    int v291 = v386;
    switch(v289)
    {
      case 1:
        int v292 = *(unsigned __int8 *)v389;
        if (v378 < 4) {
          goto LABEL_395;
        }
        goto LABEL_434;
      case 2:
        int v292 = *(unsigned __int16 *)v389;
        if (v378 < 4) {
          goto LABEL_395;
        }
        goto LABEL_434;
      case 3:
        int v292 = *(unsigned __int16 *)v389 | (*(unsigned __int8 *)(v389 + 2) << 16);
        if (v378 < 4) {
          goto LABEL_395;
        }
        goto LABEL_434;
      case 4:
        int v292 = *(_DWORD *)v389;
        if (v378 >= 4)
        {
LABEL_434:
          if (v292 == -1) {
            break;
          }
          goto LABEL_393;
        }
LABEL_395:
        unsigned int v287 = (v292 | (v288 << (8 * v378))) + 2;
LABEL_396:
        if (v287 != 1) {
          goto LABEL_393;
        }
        break;
      default:
        goto LABEL_396;
    }
LABEL_397:
    unint64_t v293 = (v392 + v389) & v270;
    unint64_t v371 = v257;
    if (v290 == v291)
    {
      if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v402 + 48))((v392 + v389) & v270, v395, v154))goto LABEL_402; {
    }
      }
    else
    {
      unint64_t v294 = (v381 + v293) & v264;
      if (v251 == v291)
      {
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v410 + 48))((v381 + v293) & v264, v251, v406))
        {
LABEL_402:
          unsigned int v366 = v251;
          uint64_t v365 = v247;
          uint64_t v295 = v381;
          unint64_t v294 = (v381 + v293) & v264;
          unint64_t v296 = v399 + 7;
          unsigned int v297 = (void *)((v399 + 7 + v294) & 0xFFFFFFFFFFFFFFF8);
LABEL_407:
          *(unsigned char *)unint64_t v248 = *(unsigned char *)v389;
          *(unsigned char *)(v248 | 1) = *(unsigned char *)(v389 | 1);
          unint64_t v299 = (v392 + v248) & v384;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v402 + 32))(v299, v293, v379);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v410 + 32))((v295 + v299) & v264, v294, v406);
          unint64_t v300 = v389;
          *(void *)((v296 + ((v295 + v299) & v264)) & 0xFFFFFFFFFFFFFFF8) = *v297;
          uint64_t v247 = v365;
          unint64_t v257 = v371;
          uint64_t v251 = v366;
          size_t v301 = __n;
          goto LABEL_409;
        }
      }
      else
      {
        unint64_t v296 = v399 + 7;
        unint64_t v298 = *(void *)((v399 + 7 + v294) & 0xFFFFFFFFFFFFFFF8);
        if (v298 >= 0xFFFFFFFF) {
          LODWORD(v298) = -1;
        }
        if ((v298 + 1) < 2)
        {
          unsigned int v366 = v251;
          uint64_t v365 = v247;
          uint64_t v295 = v381;
          unsigned int v297 = (void *)((v296 + v294) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_407;
        }
      }
    }
    size_t v301 = __n;
    memcpy((void *)v248, (const void *)v389, __n);
    unint64_t v300 = v389;
LABEL_409:
    int v302 = (unsigned char *)((v257 + v248) & v264);
    unint64_t v303 = (unsigned __int8 *)((v257 + v300) & v264);
    if (v251 > 0xFE)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v410 + 48))((unint64_t)&v303[v372] & v264, v251, v406))goto LABEL_411; {
    }
      }
    else if (*v303 < 2u)
    {
LABEL_411:
      *int v302 = *v303;
      *(unsigned char *)(((v257 + v248) & v264) + 1) = v303[1];
      *(unsigned char *)(((v257 + v248) & v264) + 2) = v303[2];
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v410 + 32))((unint64_t)&v302[v372] & v264, (unint64_t)&v303[v372] & v264, v406);
      goto LABEL_414;
    }
    memcpy((void *)((v257 + v248) & v264), v303, v368);
LABEL_414:
    unint64_t v304 = (unint64_t)&v302[v374] & v247;
    uint64_t v263 = v247;
    unint64_t v305 = (unint64_t)&v303[v374] & v247;
    unint64_t v306 = (v392 + v305) & v384;
    if (v395 == v386)
    {
      if (!(*(unsigned int (**)(unint64_t))(v402 + 48))((v392 + v305) & v384)) {
        goto LABEL_419;
      }
    }
    else
    {
      unint64_t v307 = (v381 + v306) & v264;
      if (v251 == v386)
      {
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v410 + 48))((v381 + v306) & v264, v251, v406))
        {
LABEL_419:
          unsigned int v367 = v251;
          uint64_t v308 = v381;
          unint64_t v307 = (v381 + v306) & v264;
          unint64_t v396 = v399 + 7;
          v387 = (void *)((v399 + 7 + v307) & 0xFFFFFFFFFFFFFFF8);
LABEL_424:
          *(unsigned char *)unint64_t v304 = *(unsigned char *)v305;
          *(unsigned char *)(v304 | 1) = *(unsigned char *)(v305 | 1);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v402 + 32))((v392 + v304) & v384, v306, v379);
          unint64_t v310 = (v308 + ((v392 + v304) & v384)) & v264;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v410 + 32))(v310, v307, v406);
          *(void *)((v396 + v310) & 0xFFFFFFFFFFFFFFF8) = *v387;
          uint64_t v269 = v382;
          uint64_t v251 = v367;
          goto LABEL_426;
        }
      }
      else
      {
        unint64_t v309 = *(void *)((v399 + 7 + v307) & 0xFFFFFFFFFFFFFFF8);
        if (v309 >= 0xFFFFFFFF) {
          LODWORD(v309) = -1;
        }
        if ((v309 + 1) < 2)
        {
          unsigned int v367 = v251;
          uint64_t v308 = v381;
          unint64_t v396 = v399 + 7;
          v387 = (void *)((v399 + 7 + v307) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_424;
        }
      }
    }
    memcpy((void *)v304, (const void *)v305, v301);
    uint64_t v269 = v382;
LABEL_426:
    uint64_t v311 = (unsigned char *)((v371 + v304) & v264);
    unint64_t v312 = (unsigned __int8 *)((v371 + v305) & v264);
    if (v251 > 0xFE)
    {
      uint64_t v314 = v373;
      unint64_t v315 = (unint64_t)&v312[v373] & v264;
      int v316 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v410 + 48))(v315, v251, v406);
      unint64_t v266 = v399;
      if (!v316)
      {
        LOBYTE(v313) = *v312;
        goto LABEL_437;
      }
    }
    else
    {
      unsigned int v313 = *v312;
      unint64_t v266 = v399;
      uint64_t v314 = v373;
      if (v313 <= 1)
      {
        unint64_t v315 = (unint64_t)&v312[v373] & v264;
LABEL_437:
        *uint64_t v311 = v313;
        v311[1] = v312[1];
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v410 + 32))((unint64_t)&v311[v314] & v264, v315, v406);
        size_t v317 = v370;
        goto LABEL_438;
      }
    }
    size_t v317 = v370;
    memcpy(v311, v312, v370);
LABEL_438:
    unint64_t v318 = &v311[v317];
    *unint64_t v318 = *(_WORD *)&v312[v317];
    v318[1] = *(_WORD *)&v312[v317 + 2];
    v318[2] = *(_WORD *)&v312[v317 + 4];
    uint64_t v265 = v377;
    *(unsigned char *)(v248 + v378) = 1;
    unint64_t v249 = (unsigned __int8 *)v389;
    unint64_t v267 = v371;
    uint64_t v256 = v376;
    goto LABEL_439;
  }
  unsigned int v290 = v395;
  int v291 = v386;
  if (v287 == 1) {
    goto LABEL_397;
  }
LABEL_393:
  unint64_t v267 = v257;
  uint64_t v263 = v247;
  *(void *)unint64_t v248 = *(void *)v389;
  *(unsigned char *)(v248 + v378) = 0;
  uint64_t v269 = v382;
  unint64_t v266 = v399;
  uint64_t v265 = v377;
LABEL_439:
  unint64_t v268 = v375;
LABEL_440:
  unint64_t v319 = v265 + v266 + ((v267 + ((v256 + v266 + v245 + v268) & v263)) & v264) + 6;
  if (v319 <= 8) {
    unint64_t v319 = 8;
  }
  unint64_t v320 = v319 + 1;
  uint64_t v321 = (unsigned __int8 *)(v248 + v320);
  unsigned int v322 = &v249[v320];
  unint64_t v323 = (v248 + v320 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v324 = (unint64_t)(v322 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v325 = *(void *)v324;
  LOBYTE(v324) = *(unsigned char *)(v324 + 8);
  uint64_t v326 = *(void *)v323;
  char v327 = *(unsigned char *)(v323 + 8);
  *(void *)unint64_t v323 = v325;
  *(unsigned char *)(v323 + 8) = v324;
  sub_228AD25F8(v326, v327);
  unint64_t v328 = (unint64_t)(v321 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v329 = (unint64_t)(v322 + 23) & 0xFFFFFFFFFFFFFFF8;
  char v330 = *(unsigned char *)(v329 + 16);
  uint64_t v331 = *(void *)v328;
  uint64_t v332 = *(void *)(v328 + 8);
  char v333 = *(unsigned char *)(v328 + 16);
  *(_OWORD *)unint64_t v328 = *(_OWORD *)v329;
  *(unsigned char *)(v328 + 16) = v330;
  sub_228AD2698(v331, v332, v333, (uint64_t (*)(void))sub_228AD28A0);
  unint64_t v334 = (unint64_t)(v321 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v335 = (unint64_t)(v322 + 47) & 0xFFFFFFFFFFFFFFF8;
  char v336 = *(unsigned char *)(v335 + 16);
  uint64_t v337 = *(void *)v334;
  uint64_t v338 = *(void *)(v334 + 8);
  char v339 = *(unsigned char *)(v334 + 16);
  *(_OWORD *)unint64_t v334 = *(_OWORD *)v335;
  *(unsigned char *)(v334 + 16) = v336;
  sub_228AD2698(v337, v338, v339, (uint64_t (*)(void))sub_228AD2678);
  unint64_t v340 = (unint64_t)(v321 + 71) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v341 = (unint64_t)(v322 + 71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v342 = *(void *)v341;
  LOBYTE(v341) = *(unsigned char *)(v341 + 8);
  uint64_t v343 = *(void *)v340;
  char v344 = *(unsigned char *)(v340 + 8);
  *(void *)unint64_t v340 = v342;
  *(unsigned char *)(v340 + 8) = v341;
  sub_228AD25F8(v343, v344);
  unint64_t v345 = (unint64_t)(v321 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v346 = (unint64_t)(v322 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v347 = *(void *)v346;
  LOBYTE(v346) = *(unsigned char *)(v346 + 8);
  uint64_t v348 = *(void *)v345;
  char v349 = *(unsigned char *)(v345 + 8);
  *(void *)unint64_t v345 = v347;
  *(unsigned char *)(v345 + 8) = v346;
  sub_228AD26A8(v348, v349);
  unint64_t v350 = (unint64_t)(v321 + 103) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v351 = (unint64_t)(v322 + 103) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v352 = *(void *)v351;
  LOBYTE(v351) = *(unsigned char *)(v351 + 8);
  uint64_t v353 = *(void *)v350;
  char v354 = *(unsigned char *)(v350 + 8);
  *(void *)unint64_t v350 = v352;
  *(unsigned char *)(v350 + 8) = v351;
  sub_228AD25F8(v353, v354);
  return v269;
}