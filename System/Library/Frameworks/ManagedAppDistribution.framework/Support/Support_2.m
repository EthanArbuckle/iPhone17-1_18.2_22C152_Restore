uint64_t sub_1001BCD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v8[8] = a8;
  v8[9] = v13;
  v8[6] = a6;
  v8[7] = a7;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  v9 = type metadata accessor for AppInstallRequestType();
  v8[10] = v9;
  v8[11] = *(void *)(v9 - 8);
  v8[12] = swift_task_alloc();
  type metadata accessor for AppStoreItem(0);
  v8[13] = swift_task_alloc();
  v10 = type metadata accessor for UUID();
  v8[14] = v10;
  v8[15] = *(void *)(v10 - 8);
  v8[16] = swift_task_alloc();
  v8[17] = type metadata accessor for AppStorePreflightTask();
  v8[18] = swift_task_alloc();
  return _swift_task_switch(sub_1001BCEB8, 0, 0);
}

uint64_t sub_1001BCEB8()
{
  uint64_t v32 = v0[18];
  v42 = (int *)v0[17];
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v30 = v0[16];
  uint64_t v31 = v2;
  uint64_t v5 = v0[10];
  uint64_t v4 = v0[11];
  uint64_t v28 = v0[14];
  uint64_t v29 = v5;
  uint64_t v7 = v0[5];
  v6 = (os_unfair_lock_s *)v0[6];
  uint64_t v8 = v0[4];
  (*(void (**)(void))(v1 + 16))();
  sub_1001C678C(v8, v3, type metadata accessor for AppStoreItem);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v2, enum case for AppInstallRequestType.update(_:), v5);
  uint64_t v9 = *(void *)(v7 + 32);
  uint64_t v38 = *(void *)(v9 + 24);
  uint64_t v10 = *(void *)(v9 + 40);
  uint64_t v11 = *(void *)(v9 + 56);
  uint64_t v36 = *(void *)(v9 + 64);
  uint64_t v37 = *(void *)(v9 + 48);
  uint64_t v26 = *(void *)(v9 + 72);
  uint64_t v27 = *(void *)(v9 + 32);
  long long v35 = *(_OWORD *)(v9 + 80);
  uint64_t v12 = *(void *)(v9 + 112);
  uint64_t v33 = *(void *)(v9 + 104);
  uint64_t v34 = *(void *)(v9 + 96);
  int v13 = *(_DWORD *)(v9 + 128);
  char v40 = *(unsigned char *)(v9 + 133);
  char v41 = *(unsigned char *)(v9 + 132);
  char v39 = *(unsigned char *)(v9 + 134);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = *(void *)(v9 + 120);
  uint64_t v15 = sub_100311954(12, v6);
  uint64_t v17 = v16;
  swift_release();
  if (v17 == 2) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = v15;
  }
  if (v17 == 2) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = v17;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v32, v30, v28);
  sub_1001C6584(v3, v32 + v42[5], type metadata accessor for AppStoreItem);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v32 + v42[6], v31, v29);
  uint64_t v20 = v32 + v42[7];
  *(void *)uint64_t v20 = v38;
  *(void *)(v20 + 8) = v27;
  *(void *)(v20 + 16) = v10;
  *(void *)(v20 + 24) = v37;
  *(void *)(v20 + 32) = v11;
  *(void *)(v20 + 40) = v36;
  *(void *)(v20 + 48) = v26;
  *(_OWORD *)(v20 + 56) = v35;
  *(void *)(v20 + 72) = v34;
  *(void *)(v20 + 80) = v33;
  *(void *)(v20 + 88) = v12;
  *(void *)(v20 + 96) = v14;
  *(_DWORD *)(v20 + 104) = v13;
  *(unsigned char *)(v20 + 108) = v41;
  *(unsigned char *)(v20 + 109) = v40;
  *(unsigned char *)(v20 + 110) = v39;
  v21 = (uint64_t *)(v32 + v42[8]);
  uint64_t *v21 = v18;
  v21[1] = v19;
  v22 = (void *)swift_task_alloc();
  v0[19] = v22;
  void *v22 = v0;
  v22[1] = sub_1001BD17C;
  uint64_t v23 = v0[7];
  uint64_t v24 = v0[2];
  return sub_1003B2D3C(v24, v23);
}

uint64_t sub_1001BD17C()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001BD33C;
  }
  else {
    uint64_t v2 = sub_1001BD290;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001BD290()
{
  sub_1001C672C(*(void *)(v0 + 144), (uint64_t (*)(void))type metadata accessor for AppStorePreflightTask);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001BD33C()
{
  sub_1001C672C(*(void *)(v0 + 144), (uint64_t (*)(void))type metadata accessor for AppStorePreflightTask);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001BD3E8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManagedAppDeclarationIngester()
{
  return self;
}

void *sub_1001BD46C@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  result = sub_10023F794(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001BD4A0@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(*a1);
  *a3 = result;
  a3[1] = v5;
  return result;
}

BOOL sub_1001BD4E4(uint64_t a1)
{
  return *(void *)(a1 + 32) != 0;
}

uint64_t *sub_1001BD4F4@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = result[4];
  if (v2)
  {
    uint64_t v4 = result[2];
    uint64_t v3 = result[3];
    uint64_t v7 = result;
    uint64_t v5 = *result;
    uint64_t v6 = v7[1];
    *(void *)a2 = v5;
    *(void *)(a2 + 8) = v6;
    *(unsigned char *)(a2 + 16) = v4 & 1;
    *(void *)(a2 + 24) = v3;
    *(void *)(a2 + 32) = v2;
    sub_1001C3ED0(v5, v6, v4 & 1);
    return (uint64_t *)swift_retain();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001BD54C(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    String.index(_:offsetBy:limitedBy:)();
    return String.subscript.getter();
  }
  return result;
}

uint64_t sub_1001BD5E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[13] = a3;
  v4[14] = a4;
  v4[11] = a1;
  v4[12] = a2;
  v4[15] = type metadata accessor for DDMDeclarationStatusTemplate(0);
  v4[16] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for ManagedAppStatus.State();
  v4[17] = v5;
  v4[18] = *(void *)(v5 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DMCAppsScope();
  v4[21] = v6;
  v4[22] = *(void *)(v6 - 8);
  v4[23] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DMCAppsClient();
  v4[24] = v7;
  v4[25] = *(void *)(v7 - 8);
  v4[26] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  v4[27] = v8;
  v4[28] = *(void *)(v8 - 8);
  v4[29] = swift_task_alloc();
  return _swift_task_switch(sub_1001BD800, 0, 0);
}

uint64_t sub_1001BD800()
{
  static Logger.ddm.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    uint64_t v5 = sub_1005163F0();
    v0[10] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[%@] Adopting management from MDMv1", v3, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v6 = v0[22];
  uint64_t v7 = v0[23];
  uint64_t v8 = v0[21];
  uint64_t v10 = v0[11];
  uint64_t v9 = (os_unfair_lock_s *)v0[12];
  (*(void (**)(uint64_t, uint64_t))(v0[28] + 8))(v0[29], v0[27]);
  swift_retain();
  char v11 = sub_100311928(9, v9);
  swift_release();
  uint64_t v12 = (unsigned int *)&enum case for DMCAppsScope.system(_:);
  if (v11) {
    uint64_t v12 = (unsigned int *)&enum case for DMCAppsScope.user(_:);
  }
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v7, *v12, v8);
  DMCAppsClient.init(scope:)();
  v0[5] = sub_1000172F8((uint64_t *)&unk_1006666B0);
  v0[6] = swift_getOpaqueTypeConformance2();
  v0[7] = swift_getOpaqueTypeConformance2();
  v0[8] = swift_getOpaqueTypeConformance2();
  v0[9] = swift_getOpaqueTypeConformance2();
  sub_10019CE94(v0 + 2);
  sub_10050B3CC(v10, v9);
  int v13 = (void *)swift_task_alloc();
  v0[30] = (uint64_t)v13;
  *int v13 = v0;
  v13[1] = sub_1001BDAA4;
  return DMCAppsClient.updateApp(_:options:)(v0 + 2, 0);
}

uint64_t sub_1001BDAA4()
{
  os_log_type_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[25] + 8))(v2[26], v2[24]);
  if (v0)
  {
    uint64_t v3 = sub_1001BDD74;
  }
  else
  {
    sub_100014524((uint64_t)(v2 + 2));
    uint64_t v3 = sub_1001BDBF4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001BDBF4()
{
  uint64_t v1 = (os_unfair_lock_s *)v0[12];
  swift_retain();
  sub_100311910(4, v1);
  uint64_t v3 = v2;
  uint64_t v4 = swift_release();
  if (!v3)
  {
    __break(1u);
    return _swift_task_switch(v4, v5, v6);
  }
  uint64_t v7 = v0[31];
  sub_1004FBBB4();
  if (!v7)
  {
    uint64_t v10 = v0[20];
    uint64_t v11 = v0[17];
    uint64_t v12 = v0[18];
    uint64_t v13 = v0[14];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v10, enum case for ManagedAppStatus.State.managed(_:), v11);
    uint64_t v4 = (uint64_t)sub_1001BDE28;
    uint64_t v5 = v13;
    uint64_t v6 = 0;
    return _swift_task_switch(v4, v5, v6);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1001BDD74()
{
  sub_100014524(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001BDE28()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = (os_unfair_lock_s *)v0[12];
  uint64_t v4 = *(void (**)(char *, uint64_t, uint64_t))(v0[18] + 16);
  v4((char *)v0[19], v0[20], v0[17]);
  uint64_t v5 = v2 + *(int *)(v1 + 28);
  uint64_t updated = type metadata accessor for ManagedAppStatus.UpdateState();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 56);
  v7(v5, 1, 1, updated);
  swift_retain();
  uint64_t result = sub_100311910(5, v3);
  if (!v9)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v23 = v7;
  uint64_t v24 = updated;
  v25 = v4;
  uint64_t v10 = v0[16];
  uint64_t v11 = (os_unfair_lock_s *)v0[12];
  *(void *)(v10 + 16) = result;
  *(void *)(v10 + 24) = v9;
  swift_retain();
  uint64_t v12 = sub_100311910(4, v11);
  uint64_t v14 = v13;
  uint64_t result = swift_release();
  if (!v14)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v16 = v0[18];
  uint64_t v15 = v0[19];
  uint64_t v18 = (uint64_t *)v0[16];
  uint64_t v17 = v0[17];
  uint64_t v19 = v0[15];
  *uint64_t v18 = v12;
  v18[1] = v14;
  v25((char *)v18 + *(int *)(v19 + 24), v15, v17);
  sub_10001729C(v5, &qword_10065BD00);
  v23(v5, 1, 1, v24);
  swift_release();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v0[32] = v20;
  v0[33] = (v16 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v20(v15, v17);
  *(uint64_t *)((char *)v18 + *(int *)(v19 + 32)) = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v21 = swift_task_alloc();
  v0[34] = v21;
  *(void *)(v21 + 16) = v18;
  uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100660678 + dword_100660678);
  v22 = (void *)swift_task_alloc();
  v0[35] = v22;
  void *v22 = v0;
  v22[1] = sub_1001BE098;
  return v26((uint64_t)sub_1001C62C8, v21);
}

uint64_t sub_1001BE098(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v3;
  *(void *)(*v3 + 288) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v6 = *(void *)(v5 + 112);
    uint64_t v7 = sub_1001BE1D8;
  }
  else
  {
    uint64_t v8 = *(void *)(v5 + 112);
    *(void *)(v5 + 296) = a2;
    swift_task_dealloc();
    uint64_t v7 = sub_1001BE330;
    uint64_t v6 = v8;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1001BE1D8()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[32];
  uint64_t v2 = v0[20];
  uint64_t v4 = v0[16];
  uint64_t v3 = v0[17];
  swift_task_dealloc();
  sub_1001C672C(v4, type metadata accessor for DDMDeclarationStatusTemplate);
  v1(v2, v3);
  return _swift_task_switch(sub_1001BE284, 0, 0);
}

uint64_t sub_1001BE284()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001BE330()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[32];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v5 = (os_unfair_lock_s *)v0[12];
  swift_retain();
  char v6 = sub_100311928(9, v5);
  swift_release();
  sub_100249CF0(v6 & 1);
  sub_1001C672C(v3, type metadata accessor for DDMDeclarationStatusTemplate);
  swift_release();
  v1(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1001BE45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  sub_1000172F8(&qword_10065E4D0);
  v4[16] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Logger();
  v4[17] = v5;
  v4[18] = *(void *)(v5 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = type metadata accessor for DDMDeclarationStatusTemplate(0);
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for ManagedAppStatus.State();
  v4[23] = v6;
  v4[24] = *(void *)(v6 - 8);
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DMCAppsScope();
  v4[30] = v7;
  v4[31] = *(void *)(v7 - 8);
  v4[32] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for DMCAppsClient();
  v4[33] = v8;
  v4[34] = *(void *)(v8 - 8);
  v4[35] = swift_task_alloc();
  return _swift_task_switch(sub_1001BE704, 0, 0);
}

uint64_t sub_1001BE704()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 104);
  swift_retain();
  uint64_t v2 = sub_100311954(12, v1);
  unint64_t v4 = v3;
  swift_release();
  if (v4 == 2)
  {
LABEL_6:
    uint64_t v9 = sub_1005163F0();
    *(void *)(v0 + 288) = v9;
    uint64_t v10 = dword_100666710;
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 296) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1001BEA48;
    uint64_t v12 = *(void *)(v0 + 120);
    uint64_t v14 = *(void *)(v0 + 96);
    uint64_t v13 = *(void *)(v0 + 104);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100666710 + v10))(v14, v13, 0, 0, v12, v9);
  }
  if (!v4)
  {
    sub_1001C6440(v2, 0);
    goto LABEL_6;
  }
  uint64_t v5 = *(os_unfair_lock_s **)(v0 + 104);
  sub_1001C6440(v2, v4);
  swift_retain();
  uint64_t v6 = sub_100311954(12, v5);
  unint64_t v8 = v7;
  swift_release();
  if (v8 != 2)
  {
    if (v8 == 1) {
      goto LABEL_6;
    }
    sub_1001C6440(v6, v8);
  }
  static Logger.ddm.getter();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 138412290;
    uint64_t v20 = sub_1005163F0();
    *(void *)(v0 + 88) = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v19 = v20;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "[%@] Cannot take over management with data separation", v18, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v21 = *(void *)(v0 + 216);
  uint64_t v22 = *(void *)(v0 + 192);
  uint64_t v23 = *(void *)(v0 + 120);
  (*(void (**)(void, void))(*(void *)(v0 + 144) + 8))(*(void *)(v0 + 152), *(void *)(v0 + 136));
  *(_DWORD *)(v0 + 472) = enum case for ManagedAppStatus.State.failed(_:);
  uint64_t v24 = *(void (**)(uint64_t))(v22 + 104);
  *(void *)(v0 + 384) = v24;
  *(void *)(v0 + 392) = (v22 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v24(v21);
  return _swift_task_switch(sub_1001BFD74, v23, 0);
}

uint64_t sub_1001BEA48()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = sub_1001BF064;
  }
  else
  {

    unint64_t v3 = sub_1001BEB98;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001BEB98()
{
  id v1 = sub_1004FBD68();
  if (v1)
  {
    id v2 = v1;
  }
  else
  {
    unint64_t v3 = (void *)v0[14];
    id v2 = [objc_allocWithZone((Class)MIStoreMetadata) init];
    id v4 = [v3 bundleIdentifier];
    [v2 setSoftwareVersionBundleID:v4];

    id v5 = [v3 bundleVersion];
    [v2 setBundleVersion:v5];

    id v6 = [v3 shortVersionString];
    [v2 setBundleShortVersionString:v6];
  }
  v0[39] = v2;
  unint64_t v7 = (os_unfair_lock_s *)v0[13];
  swift_retain();
  sub_100311910(4, v7);
  uint64_t v9 = v8;
  swift_release();
  if (!v9)
  {
    __break(1u);
LABEL_16:
    __break(1u);
  }
  uint64_t v10 = (os_unfair_lock_s *)v0[13];
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setManagementDeclarationIdentifier:v11];

  swift_retain();
  sub_100311910(3, v10);
  uint64_t v13 = v12;
  swift_release();
  if (!v13) {
    goto LABEL_16;
  }
  uint64_t v14 = self;
  id v15 = objc_allocWithZone((Class)IXApplicationIdentity);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = [v15 initWithBundleID:v16];

  v0[10] = 0;
  LODWORD(v16) = [v14 updateiTunesMetadata:v2 forAppWithIdentity:v17 error:v0 + 10];

  uint64_t v18 = (void *)v0[10];
  if (v16)
  {
    uint64_t v20 = v0[31];
    uint64_t v19 = v0[32];
    uint64_t v21 = v0[30];
    uint64_t v23 = v0[12];
    uint64_t v22 = (os_unfair_lock_s *)v0[13];
    swift_retain();
    id v24 = v18;
    char v25 = sub_100311928(9, v22);
    swift_release();
    uint64_t v26 = (unsigned int *)&enum case for DMCAppsScope.system(_:);
    if (v25) {
      uint64_t v26 = (unsigned int *)&enum case for DMCAppsScope.user(_:);
    }
    (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v19, *v26, v21);
    DMCAppsClient.init(scope:)();
    v0[5] = sub_1000172F8((uint64_t *)&unk_1006666B0);
    v0[6] = swift_getOpaqueTypeConformance2();
    v0[7] = swift_getOpaqueTypeConformance2();
    v0[8] = swift_getOpaqueTypeConformance2();
    v0[9] = swift_getOpaqueTypeConformance2();
    sub_10019CE94(v0 + 2);
    sub_10050B3CC(v23, v22);
    uint64_t v27 = (void *)swift_task_alloc();
    v0[40] = v27;
    *uint64_t v27 = v0;
    v27[1] = sub_1001BF190;
    return DMCAppsClient.didInstallApplication(_:options:)(v0 + 2, 0);
  }
  else
  {
    id v28 = v18;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v29 = (uint64_t (*)(void))v0[1];
    return v29();
  }
}

uint64_t sub_1001BF064()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001BF190()
{
  id v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1001BFC20;
  }
  else
  {
    uint64_t v4 = (uint64_t)(v2 + 2);
    uint64_t v6 = v2[34];
    uint64_t v5 = v2[35];
    uint64_t v7 = v2[33];
    sub_100014524(v4);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    uint64_t v3 = sub_1001BF300;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001BF300()
{
  uint64_t v1 = v0[15];
  (*(void (**)(void, void, void))(v0[24] + 104))(v0[29], enum case for ManagedAppStatus.State.managed(_:), v0[23]);
  return _swift_task_switch(sub_1001BF3B4, v1, 0);
}

uint64_t sub_1001BF3B4()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[20];
  uint64_t v3 = (os_unfair_lock_s *)v0[13];
  uint64_t v4 = *(void (**)(char *, uint64_t, uint64_t))(v0[24] + 16);
  v4((char *)v0[28], v0[29], v0[23]);
  uint64_t v5 = v1 + *(int *)(v2 + 28);
  uint64_t updated = type metadata accessor for ManagedAppStatus.UpdateState();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 56);
  v7(v5, 1, 1, updated);
  swift_retain();
  uint64_t v8 = sub_100311910(5, v3);
  if (!v9)
  {
    __break(1u);
LABEL_7:
    __break(1u);
  }
  char v25 = v7;
  uint64_t v26 = updated;
  uint64_t v27 = v4;
  uint64_t v28 = v5;
  uint64_t v10 = v0[22];
  NSString v11 = (os_unfair_lock_s *)v0[13];
  *(void *)(v10 + 16) = v8;
  *(void *)(v10 + 24) = v9;
  swift_retain();
  uint64_t v12 = sub_100311910(4, v11);
  uint64_t v14 = v13;
  swift_release();
  if (!v14) {
    goto LABEL_7;
  }
  uint64_t v15 = v0[28];
  uint64_t v16 = v0[23];
  uint64_t v17 = v0[24];
  uint64_t v18 = (uint64_t *)v0[22];
  uint64_t v19 = v0[20];
  *uint64_t v18 = v12;
  v18[1] = v14;
  v27((char *)v18 + *(int *)(v19 + 24), v15, v16);
  sub_10001729C(v28, &qword_10065BD00);
  v25(v28, 1, 1, v26);
  swift_release();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v0[42] = v20;
  v0[43] = (v17 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v20(v15, v16);
  *(uint64_t *)((char *)v18 + *(int *)(v19 + 32)) = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v21 = swift_task_alloc();
  v0[44] = v21;
  *(void *)(v21 + 16) = v18;
  uint64_t v22 = dword_100660678;
  uint64_t v23 = (void *)swift_task_alloc();
  v0[45] = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_1001BF654;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100660678 + v22))((uint64_t)sub_1001C6AD8, v21);
}

uint64_t sub_1001BF654(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v3;
  *(void *)(*v3 + 368) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v6 = *(void *)(v5 + 120);
    uint64_t v7 = sub_1001BF7D8;
  }
  else
  {
    uint64_t v8 = *(void *)(v5 + 120);
    *(void *)(v5 + 376) = a2;
    swift_task_dealloc();
    uint64_t v7 = sub_1001BF9DC;
    uint64_t v6 = v8;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1001BF7D8()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[42];
  uint64_t v2 = v0[29];
  uint64_t v4 = v0[22];
  uint64_t v3 = v0[23];
  swift_task_dealloc();
  sub_1001C672C(v4, type metadata accessor for DDMDeclarationStatusTemplate);
  v1(v2, v3);
  return _swift_task_switch(sub_1001BF8B0, 0, 0);
}

uint64_t sub_1001BF8B0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001BF9DC()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[42];
  uint64_t v2 = v0[29];
  uint64_t v4 = v0[22];
  uint64_t v3 = v0[23];
  uint64_t v5 = (os_unfair_lock_s *)v0[13];
  swift_retain();
  char v6 = sub_100311928(9, v5);
  swift_release();
  sub_100249CF0(v6 & 1);
  sub_1001C672C(v4, type metadata accessor for DDMDeclarationStatusTemplate);
  swift_release();
  v1(v2, v3);
  return _swift_task_switch(sub_1001BFAF4, 0, 0);
}

uint64_t sub_1001BFAF4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001BFC20()
{
  uint64_t v1 = (void *)v0[39];
  uint64_t v3 = v0[34];
  uint64_t v2 = v0[35];
  uint64_t v4 = v0[33];
  sub_100014524((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1001BFD74()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v3 = (os_unfair_lock_s *)v0[13];
  uint64_t v4 = *(void (**)(char *, uint64_t, uint64_t))(v0[24] + 16);
  v4((char *)v0[26], v0[27], v0[23]);
  uint64_t v5 = v2 + *(int *)(v1 + 28);
  uint64_t updated = type metadata accessor for ManagedAppStatus.UpdateState();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 56);
  v7(v5, 1, 1, updated);
  swift_retain();
  uint64_t v8 = sub_100311910(5, v3);
  if (!v9)
  {
    __break(1u);
LABEL_7:
    __break(1u);
  }
  char v25 = v7;
  uint64_t v26 = updated;
  uint64_t v27 = v4;
  uint64_t v28 = v5;
  uint64_t v10 = v0[21];
  NSString v11 = (os_unfair_lock_s *)v0[13];
  *(void *)(v10 + 16) = v8;
  *(void *)(v10 + 24) = v9;
  swift_retain();
  uint64_t v12 = sub_100311910(4, v11);
  uint64_t v14 = v13;
  swift_release();
  if (!v14) {
    goto LABEL_7;
  }
  uint64_t v15 = v0[26];
  uint64_t v16 = v0[23];
  uint64_t v17 = v0[24];
  uint64_t v18 = v0[20];
  uint64_t v19 = (uint64_t *)v0[21];
  *uint64_t v19 = v12;
  v19[1] = v14;
  v27((char *)v19 + *(int *)(v18 + 24), v15, v16);
  sub_10001729C(v28, &qword_10065BD00);
  v25(v28, 1, 1, v26);
  swift_release();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v0[50] = v20;
  v0[51] = (v17 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v20(v15, v16);
  *(uint64_t *)((char *)v19 + *(int *)(v18 + 32)) = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v21 = swift_task_alloc();
  v0[52] = v21;
  *(void *)(v21 + 16) = v19;
  uint64_t v22 = dword_100660678;
  uint64_t v23 = (void *)swift_task_alloc();
  v0[53] = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_1001C000C;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100660678 + v22))((uint64_t)sub_1001C6AD8, v21);
}

uint64_t sub_1001C000C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v3;
  *(void *)(*v3 + 432) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v6 = *(void *)(v5 + 120);
    uint64_t v7 = sub_1001C0190;
  }
  else
  {
    uint64_t v8 = *(void *)(v5 + 120);
    *(void *)(v5 + 440) = a2;
    swift_task_dealloc();
    uint64_t v7 = sub_1001C0390;
    uint64_t v6 = v8;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1001C0190()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[50];
  uint64_t v2 = v0[27];
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[21];
  swift_task_dealloc();
  sub_1001C672C(v4, type metadata accessor for DDMDeclarationStatusTemplate);
  v1(v2, v3);
  return _swift_task_switch(sub_1001C026C, 0, 0);
}

uint64_t sub_1001C026C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001C0390()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[50];
  uint64_t v2 = v0[27];
  uint64_t v3 = v0[23];
  sub_1001C672C(v0[21], type metadata accessor for DDMDeclarationStatusTemplate);
  swift_release();
  v1(v2, v3);
  return _swift_task_switch(sub_1001C046C, 0, 0);
}

uint64_t sub_1001C046C()
{
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v1 = *(void *)(v0 + 128);
  (*(void (**)(void, void, void))(v0 + 384))(*(void *)(v0 + 200), *(unsigned int *)(v0 + 472), *(void *)(v0 + 184));
  uint64_t v3 = enum case for ManagedAppStatus.Reason.unmanagedAppAlreadyInstalled(_:);
  uint64_t v4 = type metadata accessor for ManagedAppStatus.Reason();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 104))(v1, v3, v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);
  return _swift_task_switch(sub_1001C05A4, v2, 0);
}

uint64_t sub_1001C05A4()
{
  uint64_t v1 = (os_unfair_lock_s *)v0[13];
  swift_retain();
  uint64_t v2 = sub_100311910(4, v1);
  uint64_t v4 = v3;
  swift_release();
  v0[56] = v4;
  if (!v4) {
    __break(1u);
  }
  uint64_t v5 = (os_unfair_lock_s *)v0[13];
  swift_retain();
  char v6 = sub_100311928(9, v5);
  swift_release();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[57] = v7;
  *uint64_t v7 = v0;
  if (v6 == 2)
  {
    v7[1] = sub_1001C6A60;
    uint64_t v8 = v0[16];
    uint64_t v9 = v0[25];
    uint64_t v10 = v2;
    uint64_t v11 = v4;
    char v12 = 0;
  }
  else
  {
    v7[1] = sub_1001C0738;
    uint64_t v8 = v0[16];
    uint64_t v9 = v0[25];
    uint64_t v10 = v2;
    uint64_t v11 = v4;
    char v12 = v6;
  }
  return sub_10023FB0C(v9, v8, v10, v11, v12);
}

uint64_t sub_1001C0738()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[58] = v0;
    uint64_t v3 = v2[15];
    uint64_t v4 = sub_1001C0A6C;
  }
  else
  {
    uint64_t v5 = (void (*)(uint64_t, uint64_t))v2[50];
    uint64_t v6 = v2[25];
    uint64_t v7 = v2[23];
    uint64_t v8 = v2[16];
    swift_bridgeObjectRelease();
    sub_10001729C(v8, &qword_10065E4D0);
    v5(v6, v7);
    uint64_t v4 = sub_1001C08DC;
    uint64_t v3 = 0;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1001C08DC()
{
  type metadata accessor for InternalError();
  sub_1001C62E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001C0A6C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[50];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[16];
  swift_bridgeObjectRelease();
  sub_10001729C(v4, &qword_10065E4D0);
  v1(v2, v3);
  return _swift_task_switch(sub_1001C0B3C, 0, 0);
}

uint64_t sub_1001C0B3C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001C0C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[28] = a6;
  v7[29] = v6;
  v7[26] = a4;
  v7[27] = a5;
  v7[24] = a2;
  v7[25] = a3;
  v7[23] = a1;
  v7[30] = type metadata accessor for DDMDeclarationStatusTemplate(0);
  v7[31] = swift_task_alloc();
  v7[32] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for ManagedAppStatus.State();
  v7[33] = v8;
  v7[34] = *(void *)(v8 - 8);
  v7[35] = swift_task_alloc();
  v7[36] = swift_task_alloc();
  v7[37] = swift_task_alloc();
  v7[38] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DMCAppsScope();
  v7[39] = v9;
  v7[40] = *(void *)(v9 - 8);
  v7[41] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DMCAppsClient();
  v7[42] = v10;
  v7[43] = *(void *)(v10 - 8);
  v7[44] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Logger();
  v7[45] = v11;
  v7[46] = *(void *)(v11 - 8);
  v7[47] = swift_task_alloc();
  v7[48] = swift_task_alloc();
  v7[49] = swift_task_alloc();
  return _swift_task_switch(sub_1001C0EC4, 0, 0);
}

uint64_t sub_1001C0EC4()
{
  uint64_t v1 = (os_unfair_lock_s *)v0[24];
  swift_retain();
  char v2 = sub_100311984(6, v1);
  swift_release();
  if (v2 != 2 && (v2 & 1) == 0)
  {
    static Logger.ddm.getter();
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 138412290;
      uint64_t v19 = sub_1005163F0();
      v0[22] = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v18 = v19;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "[%@] Requesting installation for required", v17, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v20 = v0[49];
    uint64_t v21 = v0[45];
    uint64_t v22 = v0[46];
    uint64_t v23 = v0[29];
    id v24 = (os_unfair_lock_s *)v0[24];
    char v25 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v0[50] = v25;
    v0[51] = (v22 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v25(v20, v21);
    uint64_t v26 = *(void *)(v23 + 32);
    v0[52] = v26;
    uint64_t v27 = *(void *)(*(void *)(v26 + 16) + 32);
    v0[53] = v27;
    swift_retain();
    swift_retain();
    uint64_t v28 = sub_100311910(3, v24);
    uint64_t v30 = v29;
    uint64_t v13 = swift_release();
    v0[54] = v30;
    if (!v30)
    {
      __break(1u);
      return _swift_task_switch(v13, v14, v31);
    }
    v0[55] = v28;
    uint64_t v13 = (uint64_t)sub_1001C1230;
    uint64_t v14 = v27;
  }
  else
  {
    static Logger.ddm.getter();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 138412290;
      uint64_t v8 = sub_1005163F0();
      v0[19] = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v7 = v8;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "[%@] Optional and uninstalled", v6, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v9 = v0[36];
    uint64_t v10 = v0[33];
    uint64_t v11 = v0[34];
    uint64_t v12 = v0[25];
    (*(void (**)(void, void))(v0[46] + 8))(v0[47], v0[45]);
    (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v9, enum case for ManagedAppStatus.State.optional(_:), v10);
    uint64_t v13 = (uint64_t)sub_1001C2C0C;
    uint64_t v14 = v12;
  }
  uint64_t v31 = 0;
  return _swift_task_switch(v13, v14, v31);
}

uint64_t sub_1001C1230()
{
  uint64_t v2 = v0[54];
  uint64_t v1 = v0[55];
  uint64_t v3 = *(void *)(v0[53] + 112);
  v0[56] = v3;
  uint64_t v4 = swift_task_alloc();
  v0[57] = v4;
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = swift_task_alloc();
  v0[58] = v5;
  *(void *)(v5 + 16) = sub_1001C693C;
  *(void *)(v5 + 24) = v4;
  uint64_t v8 = (char *)&dword_100660698 + dword_100660698;
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[59] = v6;
  void *v6 = v0;
  v6[1] = sub_1001C134C;
  return ((uint64_t (*)(uint64_t (*)@<X0>(void *@<X0>, unsigned char *@<X8>), uint64_t, uint64_t))v8)(sub_1001C6944, v5, v3);
}

uint64_t sub_1001C134C(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 480) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = sub_1001C176C;
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v7 = *(void *)(v4 + 424);
    *(unsigned char *)(v4 + 81) = a1 & 1;
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = sub_1001C14E8;
    uint64_t v6 = v7;
  }
  return _swift_task_switch(v5, v6, 0);
}

uint64_t sub_1001C14E8()
{
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1001C1550, 0, 0);
}

uint64_t sub_1001C1550()
{
  if (*(unsigned char *)(v0 + 81) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 320);
    uint64_t v2 = *(void *)(v0 + 328);
    uint64_t v3 = *(void *)(v0 + 312);
    uint64_t v5 = *(void *)(v0 + 184);
    uint64_t v4 = *(os_unfair_lock_s **)(v0 + 192);
    swift_retain();
    char v6 = sub_100311928(9, v4);
    swift_release();
    uint64_t v7 = (unsigned int *)&enum case for DMCAppsScope.system(_:);
    if (v6) {
      uint64_t v7 = (unsigned int *)&enum case for DMCAppsScope.user(_:);
    }
    (*(void (**)(uint64_t, void, uint64_t))(v1 + 104))(v2, *v7, v3);
    DMCAppsClient.init(scope:)();
    *(void *)(v0 + 112) = sub_1000172F8((uint64_t *)&unk_1006666B0);
    *(void *)(v0 + 120) = swift_getOpaqueTypeConformance2();
    *(void *)(v0 + 128) = swift_getOpaqueTypeConformance2();
    *(void *)(v0 + 136) = swift_getOpaqueTypeConformance2();
    *(void *)(v0 + 144) = swift_getOpaqueTypeConformance2();
    sub_10019CE94((uint64_t *)(v0 + 88));
    sub_10050B3CC(v5, v4);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 488) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1001C1870;
    return DMCAppsClient.updateApp(_:options:)(v0 + 88, 0);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 200);
    (*(void (**)(void, void, void))(*(void *)(v0 + 272) + 104))(*(void *)(v0 + 304), enum case for ManagedAppStatus.State.queued(_:), *(void *)(v0 + 264));
    return _swift_task_switch(sub_1001C1D84, v9, 0);
  }
}

uint64_t sub_1001C176C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001C1870()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 352);
  uint64_t v4 = *(void *)(*v1 + 344);
  uint64_t v5 = *(void *)(*v1 + 336);
  *(void *)(*v1 + 496) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0)
  {
    char v6 = sub_1001C1AE8;
  }
  else
  {
    sub_100014524(v2 + 88);
    char v6 = sub_1001C19F0;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_1001C19F0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001C1AE8()
{
  sub_100014524(v0 + 88);
  static Logger.ddm.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412547;
    uint64_t v5 = sub_1005163F0();
    *(void *)(v0 + 160) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    *(_WORD *)(v3 + 12) = 2117;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 168) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v4[1] = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[%@] Ignoring error from updating app with DMC: %{sensitive}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();

    swift_errorRelease();
  }
  else
  {
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, void))(v0 + 400))(*(void *)(v0 + 384), *(void *)(v0 + 360));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1001C1D84()
{
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[30];
  uint64_t v3 = (os_unfair_lock_s *)v0[24];
  uint64_t v4 = *(void (**)(char *, uint64_t, uint64_t))(v0[34] + 16);
  v4((char *)v0[37], v0[38], v0[33]);
  uint64_t v5 = v1 + *(int *)(v2 + 28);
  uint64_t updated = type metadata accessor for ManagedAppStatus.UpdateState();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 56);
  v7(v5, 1, 1, updated);
  swift_retain();
  uint64_t result = sub_100311910(5, v3);
  if (!v9)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v23 = v7;
  uint64_t v24 = updated;
  char v25 = v4;
  uint64_t v10 = v0[32];
  uint64_t v11 = (os_unfair_lock_s *)v0[24];
  *(void *)(v10 + 16) = result;
  *(void *)(v10 + 24) = v9;
  swift_retain();
  uint64_t v12 = sub_100311910(4, v11);
  uint64_t v14 = v13;
  uint64_t result = swift_release();
  if (!v14)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v15 = v0[37];
  uint64_t v16 = v0[33];
  uint64_t v17 = v0[34];
  uint64_t v18 = (uint64_t *)v0[32];
  uint64_t v19 = v0[30];
  *uint64_t v18 = v12;
  v18[1] = v14;
  v25((char *)v18 + *(int *)(v19 + 24), v15, v16);
  sub_10001729C(v5, &qword_10065BD00);
  v23(v5, 1, 1, v24);
  swift_release();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v0[63] = v20;
  v0[64] = (v17 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v20(v15, v16);
  *(uint64_t *)((char *)v18 + *(int *)(v19 + 32)) = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v21 = swift_task_alloc();
  v0[65] = v21;
  *(void *)(v21 + 16) = v18;
  uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100660678 + dword_100660678);
  uint64_t v22 = (void *)swift_task_alloc();
  v0[66] = v22;
  void *v22 = v0;
  v22[1] = sub_1001C1FFC;
  return v26((uint64_t)sub_1001C6AD8, v21);
}

uint64_t sub_1001C1FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v3;
  *(void *)(*v3 + 536) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v6 = *(void *)(v5 + 200);
    uint64_t v7 = sub_1001C213C;
  }
  else
  {
    uint64_t v8 = *(void *)(v5 + 200);
    *(void *)(v5 + 544) = a2;
    swift_task_dealloc();
    uint64_t v7 = sub_1001C22E4;
    uint64_t v6 = v8;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1001C213C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[63];
  uint64_t v2 = v0[38];
  uint64_t v4 = v0[32];
  uint64_t v3 = v0[33];
  swift_task_dealloc();
  sub_1001C672C(v4, type metadata accessor for DDMDeclarationStatusTemplate);
  v1(v2, v3);
  return _swift_task_switch(sub_1001C21E8, 0, 0);
}

uint64_t sub_1001C21E8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001C22E4()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[63];
  uint64_t v2 = v0[38];
  uint64_t v4 = v0[32];
  uint64_t v3 = v0[33];
  uint64_t v5 = (os_unfair_lock_s *)v0[24];
  swift_retain();
  char v6 = sub_100311928(9, v5);
  swift_release();
  sub_100249CF0(v6 & 1);
  sub_1001C672C(v4, type metadata accessor for DDMDeclarationStatusTemplate);
  swift_release();
  v1(v2, v3);
  return _swift_task_switch(sub_1001C23C8, 0, 0);
}

uint64_t sub_1001C23C8()
{
  uint64_t v2 = v0[23];
  uint64_t v1 = v0[24];
  uint64_t v3 = *(void *)(*(void *)(v0[29] + 48) + 16);
  v0[69] = v3;
  uint64_t v4 = swift_task_alloc();
  v0[70] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = swift_task_alloc();
  v0[71] = v5;
  *(void *)(v5 + 16) = sub_1001C6AD4;
  *(void *)(v5 + 24) = v4;
  uint64_t v8 = (char *)&dword_100660810 + dword_100660810;
  swift_retain();
  char v6 = (void *)swift_task_alloc();
  v0[72] = v6;
  void *v6 = v0;
  v6[1] = sub_1001C24E8;
  return ((uint64_t (*)(uint64_t (*)@<X0>(void *@<X0>, unsigned char *@<X8>), uint64_t, uint64_t))v8)(sub_1001C6A48, v5, v3);
}

uint64_t sub_1001C24E8(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 584) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = sub_1001C2824;
  }
  else
  {
    *(unsigned char *)(v4 + 82) = a1 & 1;
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = sub_1001C2674;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001C2674()
{
  char v1 = *(unsigned char *)(v0 + 82);
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 192);
  swift_retain();
  swift_retain();
  uint64_t v5 = sub_1005163F0();
  *(void *)(v0 + 592) = v5;
  id v6 = [self ephemeralSessionConfiguration];
  [v6 setHTTPShouldSetCookies:0];
  [v6 setHTTPCookieAcceptPolicy:1];
  [v6 setRequestCachePolicy:1];
  sub_100373694(1);
  id v7 = [self sessionWithConfiguration:v6];

  type metadata accessor for PlainHTTP();
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 600) = v8;
  *(unsigned char *)(v8 + 24) = 1;
  *(void *)(v8 + 16) = v7;
  *(void *)(v0 + 16) = v4;
  *(void *)(v0 + 24) = v3;
  *(void *)(v0 + 32) = v2;
  *(void *)(v0 + 40) = v8;
  *(unsigned char *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = v5;
  *(unsigned char *)(v0 + 64) = v1;
  *(void *)(v0 + 72) = 0;
  *(unsigned char *)(v0 + 80) = 1;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 608) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1001C29D8;
  uint64_t v10 = *(void *)(v0 + 216);
  uint64_t v11 = *(void *)(v0 + 224);
  uint64_t v12 = *(void *)(v0 + 208);
  return sub_1003EDE2C(v12, v10, v11);
}

uint64_t sub_1001C2824()
{
  swift_errorRelease();
  uint64_t v1 = *(void *)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  swift_retain();
  swift_retain();
  uint64_t v4 = sub_1005163F0();
  *(void *)(v0 + 592) = v4;
  id v5 = [self ephemeralSessionConfiguration];
  [v5 setHTTPShouldSetCookies:0];
  [v5 setHTTPCookieAcceptPolicy:1];
  [v5 setRequestCachePolicy:1];
  sub_100373694(1);
  id v6 = [self sessionWithConfiguration:v5];

  type metadata accessor for PlainHTTP();
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 600) = v7;
  *(unsigned char *)(v7 + 24) = 1;
  *(void *)(v7 + 16) = v6;
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v7;
  *(unsigned char *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = v4;
  *(unsigned char *)(v0 + 64) = 0;
  *(void *)(v0 + 72) = 0;
  *(unsigned char *)(v0 + 80) = 1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 608) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1001C29D8;
  uint64_t v9 = *(void *)(v0 + 216);
  uint64_t v10 = *(void *)(v0 + 224);
  uint64_t v11 = *(void *)(v0 + 208);
  return sub_1003EDE2C(v11, v9, v10);
}

uint64_t sub_1001C29D8()
{
  *(void *)(*(void *)v1 + 616) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001C32CC;
  }
  else {
    uint64_t v2 = sub_1001C2AEC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001C2AEC()
{
  uint64_t v1 = *(void **)(v0 + 592);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1001C2C0C()
{
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[31];
  uint64_t v3 = (os_unfair_lock_s *)v0[24];
  uint64_t v4 = *(void (**)(char *, uint64_t, uint64_t))(v0[34] + 16);
  v4((char *)v0[35], v0[36], v0[33]);
  uint64_t v5 = v2 + *(int *)(v1 + 28);
  uint64_t updated = type metadata accessor for ManagedAppStatus.UpdateState();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 56);
  v7(v5, 1, 1, updated);
  swift_retain();
  uint64_t result = sub_100311910(5, v3);
  if (!v9)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v23 = v7;
  uint64_t v24 = updated;
  char v25 = v4;
  uint64_t v10 = v0[31];
  uint64_t v11 = (os_unfair_lock_s *)v0[24];
  *(void *)(v10 + 16) = result;
  *(void *)(v10 + 24) = v9;
  swift_retain();
  uint64_t v12 = sub_100311910(4, v11);
  uint64_t v14 = v13;
  uint64_t result = swift_release();
  if (!v14)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v16 = v0[34];
  uint64_t v15 = v0[35];
  uint64_t v17 = v0[33];
  uint64_t v18 = v0[30];
  uint64_t v19 = (uint64_t *)v0[31];
  *uint64_t v19 = v12;
  v19[1] = v14;
  v25((char *)v19 + *(int *)(v18 + 24), v15, v17);
  sub_10001729C(v5, &qword_10065BD00);
  v23(v5, 1, 1, v24);
  swift_release();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v0[78] = v20;
  v0[79] = (v16 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v20(v15, v17);
  *(uint64_t *)((char *)v19 + *(int *)(v18 + 32)) = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v21 = swift_task_alloc();
  v0[80] = v21;
  *(void *)(v21 + 16) = v19;
  uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100660678 + dword_100660678);
  uint64_t v22 = (void *)swift_task_alloc();
  v0[81] = v22;
  void *v22 = v0;
  v22[1] = sub_1001C2E80;
  return v26((uint64_t)sub_1001C6AD8, v21);
}

uint64_t sub_1001C2E80(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v3;
  *(void *)(*v3 + 656) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v6 = *(void *)(v5 + 200);
    uint64_t v7 = sub_1001C2FC0;
  }
  else
  {
    uint64_t v8 = *(void *)(v5 + 200);
    *(void *)(v5 + 664) = a2;
    swift_task_dealloc();
    uint64_t v7 = sub_1001C3168;
    uint64_t v6 = v8;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1001C2FC0()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[78];
  uint64_t v2 = v0[36];
  uint64_t v3 = v0[33];
  uint64_t v4 = v0[31];
  swift_task_dealloc();
  sub_1001C672C(v4, type metadata accessor for DDMDeclarationStatusTemplate);
  v1(v2, v3);
  return _swift_task_switch(sub_1001C3074, 0, 0);
}

uint64_t sub_1001C3074()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001C3168()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[78];
  uint64_t v2 = v0[36];
  uint64_t v3 = v0[33];
  uint64_t v4 = v0[31];
  uint64_t v5 = (os_unfair_lock_s *)v0[24];
  swift_retain();
  char v6 = sub_100311928(9, v5);
  swift_release();
  sub_100249CF0(v6 & 1);
  sub_1001C672C(v4, type metadata accessor for DDMDeclarationStatusTemplate);
  swift_release();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1001C32CC()
{
  uint64_t v1 = *(void **)(v0 + 592);
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1001C33F0(uint64_t *a1, char a2, uint64_t a3, void *a4)
{
  void (*v48)(void **__return_ptr, uint64_t *);
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t *);
  void (*v55)(void **__return_ptr, uint64_t *);
  void v56[2];
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  uint64_t v7 = *a1;
  uint64_t v8 = (void *)a1[2];
  v54 = (uint64_t (*)(uint64_t *))a1[3];
  v55 = (void (*)(void **__return_ptr, uint64_t *))a1[1];
  v69 = v7;
  v48 = (void (*)(void **__return_ptr, uint64_t *))a1[5];
  uint64_t v9 = *(void *)(v7 + 16);
  sub_10019B2A0((uint64_t)&v69);
  swift_retain();
  swift_retain();
  swift_retain();
  if (!v9) {
    goto LABEL_21;
  }
  v49 = a2;
  uint64_t v43 = a4;
  unint64_t v10 = 0;
  v50 = v7 + 40;
  v52 = v9;
  v53 = v7;
  uint64_t v44 = v9 - 1;
  uint64_t v45 = a3;
  while (2)
  {
    uint64_t v11 = (unint64_t *)(v50 + 16 * v10);
    unint64_t v12 = v10;
    while (1)
    {
      if (v12 >= *(void *)(v7 + 16))
      {
        __break(1u);
        goto LABEL_24;
      }
      unint64_t v10 = v12 + 1;
      unint64_t v13 = *v11;
      v62 = *(v11 - 1);
      v63 = v13;
      swift_retain();
      v55(&v57, &v62);
      swift_release();
      uint64_t v8 = v57;
      uint64_t v14 = v58;
      uint64_t v15 = v59;
      uint64_t v16 = v60;
      uint64_t v17 = v61;
      v64 = (uint64_t)v57;
      v65 = v58;
      v66 = v59;
      v67 = v60;
      v68 = v61;
      if (v54(&v64)) {
        break;
      }
      sub_1001C3E7C((uint64_t)v8, v14, v15, v16, v17);
      v11 += 2;
      ++v12;
      uint64_t v7 = v53;
      if (v52 == v10) {
        goto LABEL_21;
      }
    }
    v64 = (uint64_t)v8;
    v65 = v14;
    v66 = v15;
    v67 = v16;
    v68 = v17;
    v48(&v57, &v64);
    sub_1001C3E7C((uint64_t)v8, v14, v15, v16, v17);
    uint64_t v8 = v57;
    uint64_t v18 = v60;
    uint64_t v19 = v61;
    v64 = (uint64_t)v57;
    v65 = v58;
    LOBYTE(v66) = v59;
    v57 = (void *)v60;
    v58 = v61;
    uint64_t v20 = *(void **)v45;
    uint64_t v46 = v65;
    char v47 = v59;
    unint64_t v22 = sub_100452714((uint64_t)v8, v65, v59);
    uint64_t v23 = v20[2];
    BOOL v24 = (v21 & 1) == 0;
    uint64_t v25 = v23 + v24;
    if (__OFADD__(v23, v24))
    {
      __break(1u);
      goto LABEL_27;
    }
    char v26 = v21;
    if (v20[3] >= v25)
    {
      if (v49)
      {
        if ((v21 & 1) == 0) {
          goto LABEL_18;
        }
      }
      else
      {
        sub_10052C3F4();
        if ((v26 & 1) == 0) {
          goto LABEL_18;
        }
      }
    }
    else
    {
      sub_100524D10(v25, v49 & 1);
      unint64_t v27 = sub_100452714((uint64_t)v8, v46, v47);
      if ((v26 & 1) != (v28 & 1)) {
        goto LABEL_28;
      }
      unint64_t v22 = v27;
      if ((v26 & 1) == 0)
      {
LABEL_18:
        uint64_t v34 = *(void **)v45;
        *(void *)(*(void *)v45 + 8 * (v22 >> 6) + 64) |= 1 << v22;
        uint64_t v35 = v34[6] + 24 * v22;
        *(void *)uint64_t v35 = v8;
        *(void *)(v35 + 8) = v46;
        *(unsigned char *)(v35 + 16) = v47;
        uint64_t v36 = (uint64_t *)(v34[7] + 16 * v22);
        *uint64_t v36 = v18;
        v36[1] = v19;
        uint64_t v37 = v34[2];
        BOOL v38 = __OFADD__(v37, 1);
        uint64_t v39 = v37 + 1;
        if (!v38)
        {
          v34[2] = v39;
          goto LABEL_20;
        }
LABEL_27:
        __break(1u);
LABEL_28:

        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
LABEL_29:
        v62 = 0;
        v63 = 0xE000000000000000;
        _StringGuts.grow(_:)(30);
        v41._object = (void *)0x80000001005B9220;
        v41._countAndFlagsBits = 0xD00000000000001BLL;
        String.append(_:)(v41);
        _print_unlocked<A, B>(_:_:)();
        v42._countAndFlagsBits = 39;
        v42._object = (void *)0xE100000000000000;
        String.append(_:)(v42);

        uint64_t result = _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return result;
      }
    }
    uint64_t v29 = *(void **)v45;
    uint64_t v30 = (void *)(*(void *)(*(void *)v45 + 56) + 16 * v22);
    uint64_t v31 = v30[1];
    v56[0] = *v30;
    v56[1] = v31;
    swift_retain();
    sub_1001B7358((uint64_t)v56, (uint64_t *)&v57, v43, (uint64_t)&v62);
    if (v51)
    {
LABEL_24:
      swift_release();
      v56[0] = v51;
      swift_errorRetain();
      sub_1000172F8(&qword_10065B260);
      if ((swift_dynamicCast() & 1) == 0)
      {
        sub_10017B89C((uint64_t)&v69);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        sub_1001C3EC0((uint64_t)v8, v46, v47);
        sub_10017B89C((uint64_t)&v69);
        swift_release();
        swift_release();
        swift_release();
        return swift_errorRelease();
      }
      goto LABEL_29;
    }
    swift_release();
    swift_release();
    sub_1001C3EC0((uint64_t)v8, v46, v47);
    uint64_t v8 = (void *)(v29[7] + 16 * v22);
    uint64_t v32 = v62;
    unint64_t v33 = v63;
    swift_release();
    *uint64_t v8 = v32;
    v8[1] = v33;
LABEL_20:
    v49 = 1;
    uint64_t v7 = v53;
    if (v44 != v12) {
      continue;
    }
    break;
  }
LABEL_21:
  sub_10017B89C((uint64_t)&v69);
  swift_release();
  swift_release();
  swift_release();
  sub_10017B89C((uint64_t)&v69);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1001C3904(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_1000176B4;
  return sub_1001B7A18(a1, a2, v6, v7, v8);
}

uint64_t sub_1001C39C8()
{
  if (*(void *)(v0 + 40)) {
    sub_100014524(v0 + 16);
  }

  return _swift_deallocObject(v0, 48, 7);
}

unint64_t sub_1001C3A08()
{
  unint64_t result = qword_10065BC78;
  if (!qword_10065BC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065BC78);
  }
  return result;
}

uint64_t sub_1001C3A5C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1001C3B80(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = v1 + v5;
  uint64_t v11 = *(void *)(v1 + v6);
  uint64_t v12 = *(void *)(v1 + v6 + 8);
  uint64_t v13 = *(void *)(v1 + v7);
  uint64_t v14 = *(void *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_1000176B4;
  return sub_1001B872C(a1, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_1001C3CF0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 136);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_1001C3D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1001C3D50(void **a1)
{
  sub_1002E6C04(*(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *a1);
}

uint64_t *sub_1001C3D78(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1001C3DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    swift_bridgeObjectRelease();
    sub_1001C3D08(a4, a5, a6);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001C3E7C(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    sub_1001C3EC0(result, a2, a3 & 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001C3EC0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001C3ED0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001C3EE0(void *a1)
{
  return sub_1001A17A8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001C3EFC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1003118D8(a1, *(uint64_t (**)(void))(v2 + 16), a2);
}

id sub_1001C3F18(void *a1)
{
  return sub_10023F898(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001C3F20@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1001C3F64(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *), uint64_t a3, char a4, uint64_t a5, void *a6)
{
  uint64_t v7 = v6;
  uint64_t v54 = a5;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v43 = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v11 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v44 = v9;
    uint64_t v18 = *v11;
    uint64_t v52 = *(v11 - 1);
    uint64_t v53 = v18;
    swift_retain();
    a2(&v48, &v52);
    swift_release();
    uint64_t v19 = v48;
    uint64_t v20 = v49;
    uint64_t v21 = v50;
    uint64_t v22 = v51;
    uint64_t v52 = v50;
    uint64_t v53 = v51;
    uint64_t v23 = *(void **)v54;
    unint64_t v25 = sub_100016D20(v48, v49);
    uint64_t v26 = v23[2];
    BOOL v27 = (v24 & 1) == 0;
    uint64_t v28 = v26 + v27;
    if (__OFADD__(v26, v27))
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:

      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      goto LABEL_24;
    }
    char v29 = v24;
    if (v23[3] < v28) {
      break;
    }
    if (a4)
    {
      if (v24) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_10052C5C0();
      if (v29) {
        goto LABEL_13;
      }
    }
LABEL_3:
    uint64_t v12 = *(void **)v54;
    v12[(v25 >> 6) + 8] |= 1 << v25;
    uint64_t v13 = (uint64_t *)(v12[6] + 16 * v25);
    *uint64_t v13 = v19;
    v13[1] = v20;
    uint64_t v14 = (uint64_t *)(v12[7] + 16 * v25);
    *uint64_t v14 = v21;
    v14[1] = v22;
    uint64_t v15 = v12[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_22;
    }
    v12[2] = v17;
LABEL_5:
    v11 += 2;
    a4 = 1;
    --v9;
    if (v44 == 1)
    {
      swift_release_n();
      return swift_bridgeObjectRelease_n();
    }
  }
  sub_100525054(v28, a4 & 1);
  unint64_t v30 = sub_100016D20(v19, v20);
  if ((v29 & 1) != (v31 & 1)) {
    goto LABEL_23;
  }
  unint64_t v25 = v30;
  if ((v29 & 1) == 0) {
    goto LABEL_3;
  }
LABEL_13:
  uint64_t v32 = *(void **)v54;
  unint64_t v33 = (void *)(*(void *)(*(void *)v54 + 56) + 16 * v25);
  uint64_t v34 = v33[1];
  v45[0] = *v33;
  v45[1] = v34;
  swift_retain();
  sub_1001BBC64((uint64_t)v45, &v52, a6, &v46);
  if (!v43)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v35 = (void *)(v32[7] + 16 * v25);
    uint64_t v36 = v46;
    unint64_t v37 = v47;
    swift_release();
    *uint64_t v35 = v36;
    v35[1] = v37;
    goto LABEL_5;
  }
  swift_release();
  v45[0] = v43;
  swift_errorRetain();
  sub_1000172F8(&qword_10065B260);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_errorRelease();
  }
LABEL_24:
  uint64_t v46 = 0;
  unint64_t v47 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v39._object = (void *)0x80000001005B9220;
  v39._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v39);
  _print_unlocked<A, B>(_:_:)();
  v40._countAndFlagsBits = 39;
  v40._object = (void *)0xE100000000000000;
  String.append(_:)(v40);

  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001C4324(uint64_t a1)
{
  v2[67] = v1;
  v2[66] = a1;
  uint64_t v3 = type metadata accessor for Logger();
  v2[68] = v3;
  v2[69] = *(void *)(v3 - 8);
  v2[70] = swift_task_alloc();
  sub_1000172F8((uint64_t *)&unk_10065CA40);
  v2[71] = swift_task_alloc();
  v2[72] = swift_task_alloc();
  sub_1000172F8(&qword_10065BCF8);
  v2[73] = swift_task_alloc();
  sub_1000172F8(&qword_10065BD00);
  v2[74] = swift_task_alloc();
  sub_1000172F8(&qword_10065BD08);
  v2[75] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ManagedAppStatus.State();
  v2[76] = v4;
  v2[77] = *(void *)(v4 - 8);
  v2[78] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for ManagedAppStatus();
  v2[79] = v5;
  v2[80] = *(void *)(v5 - 8);
  v2[81] = swift_task_alloc();
  return _swift_task_switch(sub_1001C4570, 0, 0);
}

uint64_t sub_1001C4570()
{
  v0[82] = *(void *)(*(void *)(*(void *)(v0[67] + 32) + 16) + 152);
  uint64_t v3 = (char *)&dword_100660828 + dword_100660828;
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[83] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1001C4654;
  return ((uint64_t (*)(void *(*)@<X0>(void **@<X0>, void *@<X8>), void))v3)(sub_1001BD46C, 0);
}

uint64_t sub_1001C4654(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[84] = a1;
  v3[85] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1001C48F4;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = v3[82];
    uint64_t v4 = sub_1001C4774;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_1001C4774()
{
  swift_release();
  return _swift_task_switch(sub_1001C47DC, 0, 0);
}

uint64_t sub_1001C47DC()
{
  uint64_t v9 = v0;
  uint64_t v1 = v0[84];
  if (*(void *)(v1 + 16))
  {
    sub_1000172F8(&qword_10065BD18);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
    uint64_t v1 = v0[84];
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v3 = v0[85];
  uint64_t v4 = (void *)v0[66];
  uint64_t v8 = v2;
  id v5 = v4;
  sub_1001C3F64(v1, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1001BBBE8, 0, 1, (uint64_t)&v8, v5);

  v0[86] = v8;
  if (v3)
  {
    return swift_release();
  }
  else
  {
    uint64_t v7 = *(void *)(v0[67] + 16);
    v0[87] = v7;
    return _swift_task_switch(sub_1001C49D8, v7, 0);
  }
}

uint64_t sub_1001C48F4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001C49D8()
{
  uint64_t v1 = *(void *)(v0[87] + 112);
  v0[88] = v1;
  uint64_t v4 = (char *)&dword_1006607E8 + dword_1006607E8;
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[89] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1001C4AB0;
  return ((uint64_t (*)(void (*)(void **@<X0>, void *@<X8>), void, uint64_t))v4)(sub_1001A2208, 0, v1);
}

uint64_t sub_1001C4AB0(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[90] = a1;
  v3[91] = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    uint64_t v4 = v3[87];
    uint64_t v5 = sub_1001C5A38;
  }
  else
  {
    uint64_t v5 = sub_1001C4BF8;
    uint64_t v4 = 0;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_1001C4BF8()
{
  v102 = v0;
  uint64_t v1 = v0[90];
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = v0[86];
  if (!v2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    v71 = _swiftEmptyArrayStorage;
LABEL_49:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v79 = (uint64_t (*)(void *))v0[1];
    return v79(v71);
  }
  uint64_t v4 = v0 + 2;
  uint64_t v5 = (uint64_t)(v0 + 6);
  uint64_t v100 = (uint64_t)(v0 + 10);
  uint64_t v6 = v0 + 14;
  uint64_t v91 = (uint64_t)(v0 + 38);
  uint64_t v89 = (uint64_t)(v0 + 42);
  v93 = v0 + 46;
  uint64_t v7 = v0[77];
  uint64_t v88 = v0[66];
  v85 = (void (**)(void, void, void))(v7 + 32);
  v86 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  uint64_t v84 = v0[80];
  v92 = (void (**)(uint64_t, uint64_t))(v0[69] + 8);
  uint64_t v97 = v0[91];
  uint64_t v8 = (os_unfair_lock_s **)(v1 + 40);
  v94 = _swiftEmptyArrayStorage;
  uint64_t v95 = (uint64_t)(v0 + 14);
  uint64_t v96 = v0[86];
  v87 = v0 + 34;
  while (1)
  {
    v99 = v8;
    uint64_t v13 = *v8;
    uint64_t v14 = *v8 + 6;
    swift_retain_n();
    os_unfair_lock_lock(v14);
    uint64_t v15 = *(void *)&v13[4]._os_unfair_lock_opaque;
    if (*(void *)(v15 + 16) && (unint64_t v16 = sub_100016D20(0x746172616C636564, 0xEE0064695F6E6F69), (v17 & 1) != 0))
    {
      sub_100017238(*(void *)(v15 + 56) + 32 * v16, (uint64_t)v4, (uint64_t *)&unk_10065C9C0);
    }
    else
    {
      *uint64_t v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      v0[5] = 1;
    }
    os_unfair_lock_unlock(v14);
    sub_100017238((uint64_t)v4, v5, &qword_10065BC40);
    if (v0[9] == 1)
    {
      sub_10001729C((uint64_t)v4, &qword_10065BC40);
      swift_release();
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      sub_10001729C((uint64_t)v93, &qword_10065BC40);
      uint64_t result = swift_release_n();
      __break(1u);
      return result;
    }
    sub_10001733C(v5, v100, (uint64_t *)&unk_10065C9C0);
    uint64_t v18 = sub_1000172F8((uint64_t *)&unk_10065C9C0);
    v0[17] = v18;
    uint64_t v19 = swift_allocObject();
    v0[14] = v19;
    sub_100017238(v100, v19 + 16, (uint64_t *)&unk_10065C9C0);
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    sub_1000144C8((uint64_t)v6, (uint64_t)(v0 + 22));
    uint64_t v98 = v2;
    if (swift_dynamicCast())
    {
      uint64_t v20 = v0[58];
      unint64_t v21 = v0[59];
      dispatch thunk of JSONDecoder.decode<A>(_:from:)();
      sub_100013510(v20, v21);
      if (v97) {
        goto LABEL_54;
      }
      swift_release();
      uint64_t v97 = 0;
      uint64_t v23 = v0[60];
      uint64_t v22 = v0[61];
      uint64_t v6 = v0 + 14;
      uint64_t v3 = v96;
    }
    else
    {
      sub_1000144C8((uint64_t)v6, (uint64_t)(v0 + 30));
      if (!swift_dynamicCast() || (uint64_t v22 = v0[55]) == 0)
      {
        v0[63] = &type metadata for String;
        sub_1000172F8(&qword_10065BC68);
        uint64_t v72 = String.init<A>(describing:)();
        uint64_t v74 = v73;
        sub_10018AC60(v6, v0[17]);
        v0[62] = swift_getDynamicType();
        sub_1000172F8(&qword_10065BC70);
        uint64_t v75 = String.init<A>(describing:)();
        uint64_t v77 = v76;
        sub_1001C3A08();
        swift_allocError();
        *(void *)uint64_t v78 = v72;
LABEL_53:
        *(void *)(v78 + 8) = v74;
        *(void *)(v78 + 16) = v75;
        *(void *)(v78 + 24) = v77;
        *(unsigned char *)(v78 + 32) = 0;
        swift_willThrow();
        goto LABEL_54;
      }
      uint64_t v23 = v0[54];
      swift_release();
    }
    sub_100014524((uint64_t)v6);
    sub_10001729C(v100, (uint64_t *)&unk_10065C9C0);
    sub_10001729C((uint64_t)(v0 + 2), &qword_10065BC40);
    swift_release();
    if (!*(void *)(v3 + 16)) {
      break;
    }
    unint64_t v24 = sub_100016D20(v23, v22);
    if ((v25 & 1) == 0) {
      break;
    }
    uint64_t v26 = *(os_unfair_lock_s **)(*(void *)(v3 + 56) + 16 * v24 + 8);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_100311910(3, v13);
    uint64_t v28 = v27;
    swift_release();
    if (!v28) {
      goto LABEL_59;
    }
    swift_retain();
    sub_100311910(4, v13);
    uint64_t v30 = v29;
    swift_release();
    if (!v30) {
      goto LABEL_60;
    }
    swift_retain();
    sub_100311910(5, v13);
    uint64_t v32 = v31;
    swift_release();
    if (!v32) {
      goto LABEL_61;
    }
    uint64_t v33 = v0[76];
    uint64_t v34 = v0[75];
    swift_retain();
    sub_100311C88(2, v26, v34);
    swift_release();
    if ((*v86)(v34, 1, v33) == 1) {
      goto LABEL_62;
    }
    uint64_t v35 = v0[74];
    (*v85)(v0[78], v0[75], v0[76]);
    swift_retain();
    sub_100311CC8(3, v26, v35);
    swift_release();
    swift_retain();
    sub_100311D08(4, v26);
    swift_release();
    swift_retain();
    sub_100311910(11, v13);
    uint64_t v37 = v36;
    swift_release();
    if (!v37) {
      goto LABEL_63;
    }
    swift_retain();
    sub_100311910(3, v13);
    uint64_t v39 = v38;
    swift_release();
    if (!v39) {
      goto LABEL_64;
    }
    swift_retain();
    uint64_t v40 = sub_100311910(4, v13);
    uint64_t v42 = v41;
    swift_release();
    if (!v42) {
      goto LABEL_65;
    }
    uint64_t v43 = v0[71];
    sub_1001BB96C(v40, v42, v0[73]);
    swift_retain();
    sub_1003119B0(14, v13, v43);
    swift_release();
    uint64_t v44 = type metadata accessor for DDMPurchaseMethod();
    uint64_t v45 = *(void *)(v44 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44) == 1) {
      goto LABEL_66;
    }
    uint64_t v46 = v0[72];
    (*(void (**)(uint64_t, void, uint64_t))(v45 + 32))(v46, v0[71], v44);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56))(v46, 0, 1, v44);
    ManagedAppStatus.init(bundleID:declarationIdentifier:declarationKey:state:updateState:reasons:name:installedVersionInfo:purchaseMethod:)();
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      uint64_t v6 = v0 + 14;
      uint64_t v3 = v96;
      uint64_t v12 = v98;
      unint64_t v47 = (unint64_t)v94;
      uint64_t v5 = (uint64_t)(v0 + 6);
    }
    else
    {
      unint64_t v47 = sub_10028F8E4(0, v94[2] + 1, 1, (unint64_t)v94);
      uint64_t v6 = v0 + 14;
      uint64_t v3 = v96;
      uint64_t v12 = v98;
      uint64_t v5 = (uint64_t)(v0 + 6);
    }
    unint64_t v49 = *(void *)(v47 + 16);
    unint64_t v48 = *(void *)(v47 + 24);
    if (v49 >= v48 >> 1) {
      unint64_t v47 = sub_10028F8E4(v48 > 1, v49 + 1, 1, v47);
    }
    uint64_t v50 = v0[81];
    uint64_t v51 = v0[79];
    *(void *)(v47 + 16) = v49 + 1;
    v94 = (void *)v47;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v84 + 32))(v47+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(void *)(v84 + 72) * v49, v50, v51);
    swift_release();
    swift_release();
LABEL_5:
    uint64_t v4 = v0 + 2;
    uint64_t v8 = v99 + 2;
    uint64_t v2 = v12 - 1;
    if (!v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
      v71 = v94;
      goto LABEL_49;
    }
  }
  uint64_t v52 = (void *)v0[66];
  swift_bridgeObjectRelease();
  static Logger.ddm.getter();
  swift_retain_n();
  id v53 = v52;
  uint64_t v54 = Logger.logObject.getter();
  os_log_type_t v55 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v54, v55))
  {
    uint64_t v9 = v0[70];
    uint64_t v10 = v0[68];
    uint64_t v11 = (void *)v0[66];
    swift_release_n();

    (*v92)(v9, v10);
LABEL_4:
    uint64_t v12 = v98;
    uint64_t v5 = (uint64_t)(v0 + 6);
    goto LABEL_5;
  }
  os_log_type_t v90 = v55;
  uint64_t v56 = v0[66];
  uint64_t v57 = swift_slowAlloc();
  v58 = (void *)swift_slowAlloc();
  v101[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v57 = 138412546;
  *(void *)(v57 + 4) = v56;
  void *v58 = v88;
  *(_WORD *)(v57 + 12) = 2082;
  swift_retain();
  os_unfair_lock_lock(v14);
  uint64_t v59 = *(void *)&v13[4]._os_unfair_lock_opaque;
  if (*(void *)(v59 + 16) && (unint64_t v60 = sub_100016D20(0x746172616C636564, 0xEE0064695F6E6F69), (v61 & 1) != 0))
  {
    uint64_t v62 = *(void *)(v59 + 56) + 32 * v60;
    uint64_t v63 = (uint64_t)(v0 + 46);
    sub_100017238(v62, (uint64_t)v93, (uint64_t *)&unk_10065C9C0);
  }
  else
  {
    uint64_t v63 = (uint64_t)(v0 + 46);
    void *v93 = 0;
    v0[47] = 0;
    v0[48] = 0;
    v0[49] = 1;
  }
  os_unfair_lock_unlock(v14);
  sub_100017238(v63, v89, &qword_10065BC40);
  if (v0[45] == 1) {
    goto LABEL_67;
  }
  sub_10001733C(v89, v91, (uint64_t *)&unk_10065C9C0);
  v0[37] = v18;
  uint64_t v64 = swift_allocObject();
  v0[34] = v64;
  sub_100017238(v91, v64 + 16, (uint64_t *)&unk_10065C9C0);
  swift_allocObject();
  JSONDecoder.init()();
  sub_1000144C8((uint64_t)v87, (uint64_t)(v0 + 26));
  if (!swift_dynamicCast())
  {
    sub_1000144C8((uint64_t)v87, (uint64_t)(v0 + 18));
    if (!swift_dynamicCast() || (unint64_t v67 = v0[53]) == 0)
    {
      v0[64] = &type metadata for String;
      sub_1000172F8(&qword_10065BC68);
      uint64_t v81 = String.init<A>(describing:)();
      uint64_t v74 = v82;
      sub_10018AC60(v87, v0[37]);
      v0[65] = swift_getDynamicType();
      sub_1000172F8(&qword_10065BC70);
      uint64_t v75 = String.init<A>(describing:)();
      uint64_t v77 = v83;
      sub_1001C3A08();
      swift_allocError();
      *(void *)uint64_t v78 = v81;
      uint64_t v95 = (uint64_t)v87;
      goto LABEL_53;
    }
    uint64_t v68 = v0[52];
    swift_release();
    goto LABEL_44;
  }
  uint64_t v65 = v0[50];
  unint64_t v66 = v0[51];
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  sub_100013510(v65, v66);
  if (!v97)
  {
    swift_release();
    uint64_t v97 = 0;
    uint64_t v68 = v0[56];
    unint64_t v67 = v0[57];
    uint64_t v6 = v0 + 14;
LABEL_44:
    uint64_t v69 = v0[70];
    uint64_t v70 = v0[68];
    sub_100014524((uint64_t)v87);
    sub_10001729C(v91, (uint64_t *)&unk_10065C9C0);
    sub_10001729C((uint64_t)v93, &qword_10065BC40);
    swift_release();
    *(void *)(v57 + 14) = sub_1000143F4(v68, v67, v101);
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v54, v90, "[%@] No app declaration status found for %{public}s", (uint8_t *)v57, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    (*v92)(v69, v70);
    uint64_t v3 = v96;
    goto LABEL_4;
  }
  uint64_t v95 = (uint64_t)(v0 + 34);
LABEL_54:
  swift_release();
  sub_100014524(v95);
  return swift_unexpectedError();
}

uint64_t sub_1001C5A38()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1001C5B1C(id *a1@<X0>, void *a2@<X8>)
{
  sub_1001A1B6C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

void sub_1001C5B38(id *a1@<X0>, BOOL *a2@<X8>)
{
  sub_100241370(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1001C5B54()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001C5BAC()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  long long v5 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1000176B4;
  *(void *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  *(_OWORD *)(v3 + 32) = v5;
  return _swift_task_switch(sub_1001B2D00, 0, 0);
}

uint64_t sub_1001C5C60()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001C5CB8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_10000B238;
  return sub_1001B2F58(a1, v4, v5, v6, v7, v8, v9, v10);
}

void sub_1001C5DA4(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1001B63EC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1001C5DAC(void *a1)
{
  return sub_100459784(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_1001C5DC8(uint64_t a1)
{
  sub_1004E5D80(a1, v1[2], v1[3], v1[4]);
}

_OWORD *sub_1001C5DD4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_1001C5DE4(id *a1@<X0>, void *a2@<X8>)
{
  sub_1001A15E4(a1, *(void **)(v2 + 16), a2);
}

void sub_1001C5E00(id *a1)
{
  sub_10023F93C(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1001C5E20(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001C5E34(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001C5E48(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001C5E94()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_1001C5F04(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1000176B4;
  return sub_1001A4BF8(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1001C6010()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1001C6070(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v12 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000176B4;
  return sub_1001AECF8(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1001C6164(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_1001C617C();
  }
  return result;
}

uint64_t sub_1001C617C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001C6184(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1000176B4;
  return sub_1001A5024(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1001C6284(void *a1)
{
  return sub_1001BC0B8(a1, *(void *)(v1 + 16), *(os_unfair_lock_s **)(v1 + 24));
}

uint64_t sub_1001C628C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1001D2100(a1, *(uint64_t (**)(void))(v2 + 16), a2);
}

uint64_t sub_1001C62A8(void **a1)
{
  return sub_1001BC5A0(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(os_unfair_lock_s **)(v1 + 32));
}

void sub_1001C62C8(id *a1@<X0>, void *a2@<X8>)
{
  sub_100240CB8(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_1001C62E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001C632C(uint64_t a1)
{
  uint64_t v13 = v1[2];
  uint64_t v10 = v1[4];
  uint64_t v11 = v1[3];
  uint64_t v4 = v1[6];
  uint64_t v9 = v1[5];
  uint64_t v5 = v1[7];
  uint64_t v6 = v1[8];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000B238;
  return sub_1002C6A58(a1, v13, v11, v10, v9, v4, v5, v6);
}

uint64_t sub_1001C6440(uint64_t a1, unint64_t a2)
{
  if (a2 != 2) {
    return sub_1001C5E34(a1, a2);
  }
  return a1;
}

uint64_t sub_1001C6450(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001C6494(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  uint64_t v11 = v2[7];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_1000176B4;
  return sub_1001BCD2C(a1, a2, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1001C6584(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001C65EC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001C672C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001C678C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *sub_1001C67F4(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1001C682C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *sub_1001C6870(uint64_t *a1)
{
  return a1;
}

unint64_t sub_1001C68A8()
{
  unint64_t result = qword_10065BE38;
  if (!qword_10065BE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065BE38);
  }
  return result;
}

uint64_t sub_1001C68FC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

BOOL sub_1001C693C(void *a1)
{
  return sub_10045F9B0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001C6944@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100328714(a1, *(uint64_t (**)(void))(v2 + 16), a2);
}

uint64_t sub_1001C6960()
{
  return sub_1001ADFDC();
}

uint64_t sub_1001C69D4()
{
  return sub_1001A7144();
}

uint64_t sub_1001C6A48@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1001C628C(a1, a2);
}

uint64_t sub_1001C6A60()
{
  return sub_1001C0738();
}

void sub_1001C6AD8(id *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_1001C6AF0(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC28ManagedAppDistributionDaemon8Download_storage;
  uint64_t v6 = _swiftEmptyArrayStorage;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  uint64_t v11 = 0;
  __int16 v12 = 255;
  swift_unknownObjectWeakInit();
  sub_1001C7724((uint64_t)&v6, (uint64_t)v13);
  sub_1000172F8(&qword_10065BF18);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 112) = 0;
  sub_1001C7790((uint64_t)v13, v4 + 16);
  sub_1001C77C8((uint64_t)v13);
  *(void *)(v1 + v3) = v4;
  sub_1001C77F8(a1, v1 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon8Download_request);
  return v1;
}

uint64_t sub_1001C6BC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  *a1 = result;
  return result;
}

uint64_t sub_1001C6BF4()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_1001C6C14, 0, 0);
}

uint64_t sub_1001C6C14()
{
  uint64_t v9 = v0;
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(*(void *)(v0 + 16)
                                      + OBJC_IVAR____TtC28ManagedAppDistributionDaemon8Download_storage)
                          + 112);
  os_unfair_lock_lock(v1);
  sub_1001C6BC0((uint64_t *)&v8);
  os_unfair_lock_unlock(v1);
  uint64_t v2 = v8;
  if (v8)
  {
    uint64_t v3 = *(os_unfair_lock_s **)&v8[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_state];
    uint64_t v4 = (uint64_t)&v3[4];
    uint64_t v5 = v3 + 25;
    os_unfair_lock_lock(v3 + 25);
    sub_10024CB8C(v4);
    os_unfair_lock_unlock(v5);
  }
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1001C6D14()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_1001C6D34, 0, 0);
}

uint64_t sub_1001C6D34()
{
  uint64_t v9 = v0;
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(*(void *)(v0 + 16)
                                      + OBJC_IVAR____TtC28ManagedAppDistributionDaemon8Download_storage)
                          + 112);
  os_unfair_lock_lock(v1);
  sub_1001C6BC0((uint64_t *)&v8);
  os_unfair_lock_unlock(v1);
  uint64_t v2 = v8;
  if (v8)
  {
    uint64_t v3 = *(os_unfair_lock_s **)&v8[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_state];
    uint64_t v4 = (uint64_t)&v3[4];
    uint64_t v5 = v3 + 25;
    os_unfair_lock_lock(v3 + 25);
    sub_10024CB70(v4);
    os_unfair_lock_unlock(v5);
  }
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1001C6E34(uint64_t a1)
{
  uint64_t result = swift_unknownObjectWeakAssign();
  *(unsigned char *)(a1 + 81) = 1;
  return result;
}

uint64_t sub_1001C6E64(uint64_t a1)
{
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = v1;
  return _swift_task_switch(sub_1001C6E84, 0, 0);
}

uint64_t sub_1001C6E84()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)(v0 + 104) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon8Download_storage);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 28;
  os_unfair_lock_lock(v1 + 28);
  sub_1001C710C(v2, v0 + 16);
  os_unfair_lock_unlock(v3);
  if (*(unsigned __int8 *)(v0 + 88) == 255)
  {
    sub_1001C7580(v0 + 16);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v6;
    void *v6 = v0;
    v6[1] = sub_1001C7018;
    uint64_t v7 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 104);
    return withCheckedContinuation<A>(isolation:function:_:)(v7, 0, 0, 0x2928746C75736572, 0xE800000000000000, sub_1001C763C, v8, &type metadata for DownloadResult);
  }
  else
  {
    sub_1001C7644(v0 + 16, *(void *)(v0 + 96));
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_1001C7018()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1001C710C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001C76BC(a1 + 8, a2);
}

void sub_1001C713C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(a2 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon8Download_storage);
  p_os_unfair_lock_opaque = (unint64_t *)&v2[4]._os_unfair_lock_opaque;
  uint64_t v4 = v2 + 28;
  os_unfair_lock_lock(v2 + 28);
  sub_1001C76A0(p_os_unfair_lock_opaque);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_1001C71A0(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000172F8((uint64_t *)&unk_10065D3C0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  unint64_t v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v8 = sub_10028F92C(0, *(void *)(v8 + 16) + 1, 1, v8);
  }
  unint64_t v10 = *(void *)(v8 + 16);
  unint64_t v9 = *(void *)(v8 + 24);
  if (v10 >= v9 >> 1) {
    unint64_t v8 = sub_10028F92C(v9 > 1, v10 + 1, 1, v8);
  }
  *(void *)(v8 + 16) = v10 + 1;
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v10, v7, v4);
  *a1 = v8;
  return result;
}

uint64_t sub_1001C731C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = (uint64_t)(a1 + 1);
  sub_1001C7580((uint64_t)(a1 + 1));
  sub_1001C75E0(a2, v6);
  *a3 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001C7380()
{
  sub_1001C785C(v0 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon8Download_request);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1001C73F4()
{
  return type metadata accessor for Download();
}

uint64_t type metadata accessor for Download()
{
  uint64_t result = qword_10065BE70;
  if (!qword_10065BE70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001C7448()
{
  uint64_t result = type metadata accessor for DownloadRequest();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001C74E4()
{
  return URL.description.getter();
}

unint64_t sub_1001C7528()
{
  unint64_t result = qword_10065BF00;
  if (!qword_10065BF00)
  {
    type metadata accessor for Download();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065BF00);
  }
  return result;
}

uint64_t sub_1001C7580(uint64_t a1)
{
  uint64_t v2 = sub_1000172F8(&qword_10065BF08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001C75E0(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1001C763C(uint64_t a1)
{
  sub_1001C713C(a1, v1);
}

uint64_t sub_1001C7644(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001C76A0(unint64_t *a1)
{
  return sub_1001C71A0(a1, *(void *)(v1 + 16));
}

uint64_t sub_1001C76BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000172F8(&qword_10065BF08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001C7724(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = *(void *)a1;
  long long v3 = *(_OWORD *)(a1 + 24);
  long long v4 = *(_OWORD *)(a1 + 40);
  long long v5 = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 65) = *(_OWORD *)(a1 + 65);
  *(_OWORD *)(a2 + 56) = v5;
  *(_OWORD *)(a2 + 40) = v4;
  *(_OWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(unsigned char *)(a2 + 81) = *(unsigned char *)(a1 + 81);
  swift_unknownObjectWeakTakeInit();
  return a2;
}

uint64_t sub_1001C7790(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001C77C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001C77F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DownloadRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001C785C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DownloadRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for Download.Storage(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unsigned int v2 = *(unsigned __int8 *)(a1 + 80);
  if (v2 == 2)
  {
    swift_errorRelease();
    if (!*(void *)(a1 + 48)) {
      goto LABEL_8;
    }
    uint64_t v3 = a1 + 24;
    goto LABEL_7;
  }
  if (v2 <= 1 && *(void *)(a1 + 40))
  {
    uint64_t v3 = a1 + 16;
LABEL_7:
    sub_100014524(v3);
  }
LABEL_8:

  return swift_unknownObjectWeakDestroy();
}

uint64_t initializeWithCopy for Download.Storage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  long long v5 = (_OWORD *)(a2 + 8);
  int v6 = *(unsigned __int8 *)(a2 + 80);
  swift_bridgeObjectRetain();
  if (v6 > 1)
  {
    if (v6 == 2)
    {
      uint64_t v14 = *(void *)(a2 + 8);
      swift_errorRetain();
      *(void *)(a1 + 8) = v14;
      uint64_t v15 = *(void *)(a2 + 48);
      if (v15)
      {
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v16 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = v15;
        *(void *)(a1 + 56) = v16;
        (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 24, a2 + 24);
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      }
      else
      {
        long long v21 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v21;
        long long v22 = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 64) = v22;
      }
      char v9 = 2;
      goto LABEL_17;
    }
    long long v10 = v5[3];
    *(_OWORD *)(a1 + 40) = v5[2];
    *(_OWORD *)(a1 + 56) = v10;
    *(_OWORD *)(a1 + 65) = *(_OWORD *)((char *)v5 + 57);
    long long v11 = v5[1];
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 24) = v11;
  }
  else
  {
    if (v6)
    {
      uint64_t v7 = *(void *)(a2 + 40);
      if (v7)
      {
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v8 = *(void *)(a2 + 48);
        *(void *)(a1 + 40) = v7;
        *(void *)(a1 + 48) = v8;
        (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 16, a2 + 16);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      }
      else
      {
        long long v17 = v5[1];
        *uint64_t v4 = *v5;
        *(_OWORD *)(a1 + 24) = v17;
        long long v18 = v5[3];
        *(_OWORD *)(a1 + 40) = v5[2];
        *(_OWORD *)(a1 + 56) = v18;
      }
      char v9 = 1;
LABEL_17:
      *(unsigned char *)(a1 + 80) = v9;
      goto LABEL_18;
    }
    uint64_t v12 = *(void *)(a2 + 40);
    if (v12)
    {
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      uint64_t v13 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v12;
      *(void *)(a1 + 48) = v13;
      (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 16, a2 + 16);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    }
    else
    {
      long long v19 = v5[1];
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 24) = v19;
      long long v20 = v5[3];
      *(_OWORD *)(a1 + 40) = v5[2];
      *(_OWORD *)(a1 + 56) = v20;
    }
    *(unsigned char *)(a1 + 80) = 0;
  }
LABEL_18:
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  swift_unknownObjectWeakCopyInit();
  return a1;
}

uint64_t assignWithCopy for Download.Storage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 8);
  long long v5 = (_OWORD *)(a2 + 8);
  int v6 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) != 255)
  {
    if (v6 == 255)
    {
      sub_1001C7DE4(a1 + 8);
      *uint64_t v4 = *v5;
      long long v8 = *(_OWORD *)(a2 + 40);
      long long v7 = *(_OWORD *)(a2 + 56);
      long long v9 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
      *(_OWORD *)(a1 + 40) = v8;
      *(_OWORD *)(a1 + 56) = v7;
      *(_OWORD *)(a1 + 24) = v9;
      goto LABEL_26;
    }
    if (a1 == a2) {
      goto LABEL_26;
    }
    sub_1001C7DE4(a1 + 8);
    int v10 = *(unsigned __int8 *)(a2 + 80);
    if (v10 != 2)
    {
      if (v10 != 1)
      {
        if (!*(unsigned char *)(a2 + 80)) {
          goto LABEL_11;
        }
LABEL_15:
        *uint64_t v4 = *v5;
        long long v12 = *(_OWORD *)(a2 + 24);
        long long v13 = *(_OWORD *)(a2 + 40);
        long long v14 = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
        *(_OWORD *)(a1 + 40) = v13;
        *(_OWORD *)(a1 + 56) = v14;
        *(_OWORD *)(a1 + 24) = v12;
        goto LABEL_26;
      }
      goto LABEL_16;
    }
LABEL_19:
    uint64_t v17 = *(void *)(a2 + 8);
    swift_errorRetain();
    *(void *)(a1 + 8) = v17;
    if (*(void *)(a2 + 48))
    {
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v18 = *(void *)(a2 + 48);
      *(void *)(a1 + 48) = v18;
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      (**(void (***)(uint64_t, uint64_t))(v18 - 8))(a1 + 24, a2 + 24);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
    }
    else
    {
      long long v25 = *(_OWORD *)(a2 + 16);
      long long v26 = *(_OWORD *)(a2 + 32);
      long long v27 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v27;
      *(_OWORD *)(a1 + 16) = v25;
      *(_OWORD *)(a1 + 32) = v26;
    }
    char v16 = 2;
    goto LABEL_25;
  }
  if (*(unsigned __int8 *)(a2 + 80) > 1u)
  {
    if (v6 != 2) {
      goto LABEL_15;
    }
    goto LABEL_19;
  }
  if (*(unsigned char *)(a2 + 80))
  {
LABEL_16:
    if (*(void *)(a2 + 40))
    {
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      uint64_t v15 = *(void *)(a2 + 40);
      *(void *)(a1 + 40) = v15;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 16, a2 + 16);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
    }
    else
    {
      long long v22 = *v5;
      long long v23 = *(_OWORD *)(a2 + 24);
      long long v24 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v24;
      *uint64_t v4 = v22;
      *(_OWORD *)(a1 + 24) = v23;
    }
    char v16 = 1;
LABEL_25:
    *(unsigned char *)(a1 + 80) = v16;
    goto LABEL_26;
  }
LABEL_11:
  if (*(void *)(a2 + 40))
  {
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    uint64_t v11 = *(void *)(a2 + 40);
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 16, a2 + 16);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
  }
  else
  {
    long long v19 = *v5;
    long long v20 = *(_OWORD *)(a2 + 24);
    long long v21 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v21;
    *uint64_t v4 = v19;
    *(_OWORD *)(a1 + 24) = v20;
  }
  *(unsigned char *)(a1 + 80) = 0;
LABEL_26:
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  swift_unknownObjectWeakCopyAssign();
  return a1;
}

uint64_t sub_1001C7DE4(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for Download.Storage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  long long v3 = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(_OWORD *)(a1 + 8) = v3;
  swift_unknownObjectWeakTakeInit();
  return a1;
}

uint64_t assignWithTake for Download.Storage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (_OWORD *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 80) == 255) {
    goto LABEL_7;
  }
  if (*(unsigned __int8 *)(a2 + 80) == 255 || a1 != a2)
  {
    sub_1001C7DE4(a1 + 8);
LABEL_7:
    long long v6 = v4[3];
    *(_OWORD *)(a1 + 40) = v4[2];
    *(_OWORD *)(a1 + 56) = v6;
    *(_OWORD *)(a1 + 65) = *(_OWORD *)((char *)v4 + 57);
    long long v7 = v4[1];
    *(_OWORD *)(a1 + 8) = *v4;
    *(_OWORD *)(a1 + 24) = v7;
  }
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  swift_unknownObjectWeakTakeAssign();
  return a1;
}

uint64_t getEnumTagSinglePayload for Download.Storage(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Download.Storage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Download.Storage()
{
  return &type metadata for Download.Storage;
}

uint64_t sub_1001C7FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v92 = a3;
  uint64_t v95 = a4;
  uint64_t v93 = a5;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v94 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  long long v14 = (char *)&v83 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v83 - v16;
  __chkstk_darwin(v15);
  long long v19 = (char *)&v83 - v18;
  sub_1001C8D98();
  swift_bridgeObjectRetain();
  id v20 = sub_1001C8C5C(a1, a2, 0);
  if (v5)
  {
    swift_errorRelease();
LABEL_3:
    type metadata accessor for InternalError();
    sub_10019FE50();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  long long v22 = v20;
  uint64_t v84 = v14;
  uint64_t v85 = (uint64_t)v19;
  uint64_t v87 = (uint64_t)v17;
  uint64_t v88 = a1;
  uint64_t v89 = 0;
  unint64_t v90 = a2;
  unint64_t v23 = v95;
  uint64_t v83 = v11;
  if (!v20) {
    goto LABEL_3;
  }
  unsigned int v24 = [v20 isProfileValidated];
  id v86 = v22;
  if (v24)
  {
    uint64_t v25 = v94;
    uint64_t v26 = v8;
    if (v23)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = v85;
      static Logger.daemon.getter();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        uint64_t v87 = swift_slowAlloc();
        uint64_t v97 = v87;
        *(_DWORD *)uint64_t v30 = 136446466;
        swift_bridgeObjectRetain();
        uint64_t v96 = sub_1000143F4(v92, v23, &v97);
        uint64_t v91 = v8;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v30 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v96 = sub_1000143F4(v88, v90, &v97);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "Returning overridden distributor ID %{public}s for profile validated app %{public}s", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v85, v91);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v8);
      }
      swift_bridgeObjectRetain();
      uint64_t v70 = v93;
LABEL_32:
      AppDistributorResult.init(distributorID:requestingBundleID:)();

LABEL_33:
      uint64_t v71 = type metadata accessor for AppDistributorResult();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v70, 0, 1, v71);
    }
  }
  else
  {
    uint64_t v31 = v91;
    char isCurrentExecutor = swift_task_isCurrentExecutor();
    uint64_t v33 = v94;
    uint64_t v26 = v8;
    if ((isCurrentExecutor & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    int v34 = *(unsigned __int8 *)(v31 + 112);
    uint64_t v35 = v87;
    if (v34 == 1 && v23)
    {
      swift_bridgeObjectRetain();
      static Logger.daemon.getter();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = swift_slowAlloc();
        uint64_t v85 = swift_slowAlloc();
        uint64_t v97 = v85;
        *(_DWORD *)uint64_t v38 = 136446466;
        swift_bridgeObjectRetain();
        uint64_t v96 = sub_1000143F4(v92, v23, &v97);
        uint64_t v91 = v8;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v38 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v96 = sub_1000143F4(v88, v90, &v97);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "Returning overridden distributor ID %{public}s for store-signed app %{public}s", (uint8_t *)v38, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v87, v91);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v8);
      }
      uint64_t v70 = v93;
      id v39 = v86;
      swift_bridgeObjectRetain();
      AppDistributorResult.init(distributorID:requestingBundleID:)();

      goto LABEL_33;
    }
  }
  self;
  uint64_t v40 = swift_dynamicCastObjCClass();
  uint64_t v41 = v22;
  if (v40)
  {
    uint64_t v42 = (void *)v40;
    id v43 = v41;
    id v44 = [v42 iTunesMetadata];
    id v45 = [v44 distributorInfo];

    id v46 = [v45 distributorID];
    if (v46)
    {
      uint64_t v91 = v26;
      uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v49 = v48;

      unint64_t v50 = v90;
      swift_bridgeObjectRetain();
      uint64_t v95 = v88;
      unint64_t v51 = v50;
      uint64_t v52 = v84;
LABEL_18:
      static Logger.daemon.getter();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      id v53 = Logger.logObject.getter();
      os_log_type_t v54 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v55 = swift_slowAlloc();
        unint64_t v90 = v51;
        uint64_t v56 = v55;
        uint64_t v97 = swift_slowAlloc();
        *(_DWORD *)uint64_t v56 = 136446466;
        swift_bridgeObjectRetain();
        uint64_t v96 = sub_1000143F4(v47, v49, &v97);
        uint64_t v92 = v47;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v56 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v96 = sub_1000143F4(v88, v50, &v97);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v53, v54, "Returning authoritative distributor ID %{public}s for app %{public}s", (uint8_t *)v56, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v94 + 8))(v84, v91);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v94 + 8))(v52, v91);
      }
      uint64_t v70 = v93;
      goto LABEL_32;
    }

    v58 = v83;
  }
  else
  {
    self;
    uint64_t v57 = swift_dynamicCastObjCClass();
    v58 = v83;
    if (v57)
    {
      uint64_t v59 = (void *)v57;
      id v60 = v86;
      id v61 = [v59 containingBundleRecord];
      if (v61)
      {
        uint64_t v62 = v61;
        self;
        uint64_t v63 = (void *)swift_dynamicCastObjCClass();
        if (v63)
        {
          uint64_t v64 = v63;
          uint64_t v91 = v26;
          id v65 = [v63 iTunesMetadata];
          id v66 = [v65 distributorInfo];

          id v67 = [v66 distributorID];
          if (v67)
          {
            uint64_t v92 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v69 = v68;
          }
          else
          {
            uint64_t v92 = 0;
            unint64_t v69 = 0;
          }
          uint64_t v72 = v88;
          id v73 = objc_msgSend(v64, "bundleIdentifier", v83);
          v58 = v83;
          if (v73)
          {
            uint64_t v74 = v73;
            uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v76 = v75;
          }
          else
          {

            unint64_t v76 = v90;
            swift_bridgeObjectRetain();
            uint64_t v95 = v72;
          }
          uint64_t v52 = v84;
          unint64_t v49 = v69;
          if (v69)
          {
            unint64_t v50 = v90;
            uint64_t v47 = v92;
            unint64_t v51 = v76;
            goto LABEL_18;
          }
          swift_bridgeObjectRelease();
          uint64_t v26 = v91;
        }
        else
        {
        }
      }
      else
      {
      }
    }
  }
  static Logger.daemon.getter();
  unint64_t v77 = v90;
  swift_bridgeObjectRetain_n();
  uint64_t v78 = Logger.logObject.getter();
  os_log_type_t v79 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v78, v79))
  {
    uint64_t v91 = v26;
    v80 = (uint8_t *)swift_slowAlloc();
    uint64_t v97 = swift_slowAlloc();
    *(_DWORD *)v80 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v96 = sub_1000143F4(v88, v77, &v97);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v78, v79, "No distributor ID available for app %{public}s", v80, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v94 + 8))(v58, v91);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v94 + 8))(v58, v26);
  }
  uint64_t v81 = v93;
  uint64_t v82 = type metadata accessor for AppDistributorResult();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v81, 1, 1, v82);
}

id sub_1001C8C5C(uint64_t a1, uint64_t a2, char a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = 0;
  id v5 = [(id)swift_getObjCClassFromMetadata() bundleRecordWithBundleIdentifier:v4 allowPlaceholder:a3 & 1 error:&v9];

  if (v5)
  {
    id v6 = v9;
  }
  else
  {
    id v7 = v9;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v5;
}

uint64_t sub_1001C8D44()
{
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for DistributorDataSource()
{
  return self;
}

unint64_t sub_1001C8D98()
{
  unint64_t result = qword_10065C018;
  if (!qword_10065C018)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10065C018);
  }
  return result;
}

double sub_1001C8DD8()
{
  double v1 = 0.0;
  mach_timebase_info((mach_timebase_info_t)&v1);
  double result = v1;
  qword_10065C020 = *(void *)&v1;
  return result;
}

uint64_t sub_1001C8E3C()
{
  sub_1000172F8(&qword_10065C030);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = 0;
  qword_10065C028 = result;
  return result;
}

BOOL sub_1001C8E78(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    static Logger.daemon.getter();
    id v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      v11[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412290;
      uint64_t v9 = sub_1005163F0();
      v11[1] = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(void *)v11[0] = v9;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%@] No hit test info", v8, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return a1 != 0;
}

void sub_1001C9050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v127 = a4;
  uint64_t v128 = a5;
  uint64_t v125 = a2;
  uint64_t v126 = a3;
  uint64_t v6 = type metadata accessor for SecureButtonActionRequest.Action();
  uint64_t v132 = *(void *)(v6 - 8);
  v133 = v6;
  __chkstk_darwin(v6);
  v131 = (char *)v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SecureButtonActionRequest();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  v134 = ((char *)v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __chkstk_darwin(v14);
  v129 = ((char *)v115 - v17);
  uint64_t v18 = __chkstk_darwin(v16);
  v124 = ((char *)v115 - v19);
  uint64_t v20 = __chkstk_darwin(v18);
  v123 = (char *)v115 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v122 = (char *)v115 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v121 = (char *)v115 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v120 = (char *)v115 - v27;
  __chkstk_darwin(v26);
  os_log_type_t v29 = (char *)v115 - v28;
  static Logger.daemon.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v130 = v13;
    uint64_t v33 = (uint8_t *)v32;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v116 = v8;
    uint64_t v117 = v34;
    v136[0] = v34;
    uint64_t v118 = a1;
    *(_DWORD *)uint64_t v33 = 136446210;
    v115[1] = v33 + 4;
    uint64_t v35 = v131;
    SecureButtonActionRequest.action.getter();
    uint64_t v36 = SecureButtonActionRequest.Action.stringValue.getter();
    uint64_t v119 = v12;
    unint64_t v38 = v37;
    (*(void (**)(char *, NSObject *))(v132 + 8))(v35, v133);
    uint64_t v135 = sub_1000143F4(v36, v38, v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v12 = v119;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v116);
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Authenticating message for request %{public}s", v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v13 = v130;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }

  id v39 = *(NSObject **)(v13 + 8);
  ((void (*)(char *, uint64_t))v39)(v29, v12);
  uint64_t v40 = SecureButtonActionRequest.authenticationMessage.getter();
  if ([v40 originIdentifier] != (id)0xC181BADB23D8497BLL) {
    goto LABEL_17;
  }
  id v41 = [self sharedInstance];
  id v42 = [v41 authenticateMessage:v40];

  if (v42 != (id)2)
  {
    static Logger.daemon.getter();
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      uint64_t v130 = v13;
      id v61 = (void *)v60;
      *(_DWORD *)uint64_t v59 = 138412546;
      uint64_t v62 = sub_1005163F0();
      v133 = v40;
      uint64_t v63 = v39;
      uint64_t v64 = v12;
      uint64_t v65 = v62;
      v136[0] = v62;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v61 = v65;
      uint64_t v12 = v64;
      id v39 = v63;
      *(_WORD *)(v59 + 12) = 2050;
      v136[0] = (uint64_t)v42;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "[%@] Authenticated message status is invalid: %{public}ld", (uint8_t *)v59, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      id v66 = v133;
    }
    else
    {
      id v66 = v57;
      uint64_t v57 = v40;
    }

    unint64_t v76 = v134;
    goto LABEL_33;
  }
  v136[0] = v125;
  v136[1] = v126;
  v136[2] = v127;
  v136[3] = v128;
  id v43 = (id)BSVersionedPIDForAuditToken();
  if ([v40 versionedPID] != v43)
  {
    static Logger.daemon.getter();
    id v67 = v40;
    unint64_t v68 = Logger.logObject.getter();
    os_log_type_t v69 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      uint64_t v130 = v13;
      uint64_t v72 = (void *)v71;
      *(_DWORD *)uint64_t v70 = 138412802;
      v134 = v67;
      id v73 = v39;
      uint64_t v74 = v12;
      uint64_t v75 = sub_1005163F0();
      v136[0] = v75;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v72 = v75;
      uint64_t v12 = v74;
      id v39 = v73;
      *(_WORD *)(v70 + 12) = 2050;
      v136[0] = (uint64_t)v43;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v70 + 22) = 2050;
      id v67 = v134;
      v136[0] = (uint64_t)[v134 versionedPID];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v68, v69, "[%@] Authenticated message vpid mismatch. Got %{public}lld, expected %{public}lld", (uint8_t *)v70, 0x20u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      unint64_t v68 = v67;
    }

    unint64_t v76 = v129;
    goto LABEL_33;
  }
  uint64_t v44 = mach_continuous_time();
  id v45 = [v40 timestamp];
  unint64_t v46 = v44 - (void)v45;
  if (v44 <= (unint64_t)v45)
  {
    static Logger.daemon.getter();
    unint64_t v77 = Logger.logObject.getter();
    os_log_type_t v78 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = swift_slowAlloc();
      uint64_t v80 = swift_slowAlloc();
      uint64_t v130 = v13;
      uint64_t v81 = (void *)v80;
      *(_DWORD *)uint64_t v79 = 138412546;
      uint64_t v82 = sub_1005163F0();
      v134 = v39;
      uint64_t v83 = v12;
      uint64_t v84 = v82;
      v136[0] = v82;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v81 = v84;
      uint64_t v12 = v83;
      id v39 = v134;
      *(_WORD *)(v79 + 12) = 2050;
      v136[0] = (uint64_t)v45;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "[%@] Invalid message timestamp %{public}llu", (uint8_t *)v79, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      uint64_t v85 = v40;
    }
    else
    {
      uint64_t v85 = v77;
      unint64_t v77 = v40;
    }

    unint64_t v76 = v124;
LABEL_33:
    ((void (*)(NSObject *, uint64_t))v39)(v76, v12);
    return;
  }
  v134 = v39;
  if (qword_10065B0C8 != -1) {
    swift_once();
  }
  uint64_t v47 = (void *)(qword_10065C028 + 16);
  unint64_t v48 = (os_unfair_lock_s *)(qword_10065C028 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_10065C028 + 24));
  sub_10017440C(v47, v136);
  os_unfair_lock_unlock(v48);
  if (v136[0] >= (unint64_t)v45)
  {
    static Logger.daemon.getter();
    id v86 = Logger.logObject.getter();
    os_log_type_t v87 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v86, v87))
    {
      uint64_t v88 = (uint8_t *)swift_slowAlloc();
      uint64_t v89 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v88 = 138412290;
      uint64_t v90 = v12;
      uint64_t v91 = sub_1005163F0();
      v136[0] = v91;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v89 = v91;
      uint64_t v12 = v90;
      _os_log_impl((void *)&_mh_execute_header, v86, v87, "[%@] Invalid message timestamp, possible replay", v88, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      uint64_t v92 = v40;
    }
    else
    {
      uint64_t v92 = v86;
      id v86 = v40;
    }

    uint64_t v93 = v123;
    uint64_t v94 = v12;
LABEL_50:
    ((void (*)(char *, uint64_t))v134)(v93, v94);
    return;
  }
  uint64_t v50 = v12;
  __chkstk_darwin(v49);
  v115[-2] = v45;
  os_unfair_lock_lock(v48);
  sub_1001CA048(v47);
  os_unfair_lock_unlock(v48);
  if (qword_10065B0C0 != -1) {
    swift_once();
  }
  if (is_mul_ok(v46, qword_10065C020))
  {
    LODWORD(v51) = HIDWORD(qword_10065C020);
    double v52 = (double)(v46 * qword_10065C020) / (double)v51 / 1000000000.0;
    if (v52 >= 3.0)
    {
      static Logger.daemon.getter();
      uint64_t v95 = Logger.logObject.getter();
      os_log_type_t v96 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v95, v96))
      {
        uint64_t v97 = swift_slowAlloc();
        uint64_t v98 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v97 = 138412546;
        uint64_t v99 = sub_1005163F0();
        v136[0] = v99;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v98 = v99;
        *(_WORD *)(v97 + 12) = 2050;
        *(double *)v136 = v52;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v95, v96, "[%@] Message is too old: %{public}f", (uint8_t *)v97, 0x16u);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        uint64_t v100 = v40;
      }
      else
      {
        uint64_t v100 = v95;
        uint64_t v95 = v40;
      }
      uint64_t v107 = v12;

      uint64_t v93 = v122;
    }
    else
    {
      id v53 = [v40 hitTestInformationFromStartEvent];
      BOOL v54 = sub_1001C8E78((uint64_t)v53);

      if (v54)
      {
        id v55 = [v40 hitTestInformationFromEndEvent];
        BOOL v56 = sub_1001C8E78((uint64_t)v55);

        if (v56)
        {
LABEL_17:

          return;
        }
        static Logger.daemon.getter();
        v108 = Logger.logObject.getter();
        os_log_type_t v109 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v108, v109))
        {
          v110 = (uint8_t *)swift_slowAlloc();
          v111 = (void *)swift_slowAlloc();
          *(_DWORD *)v110 = 138412290;
          uint64_t v112 = sub_1005163F0();
          v136[0] = v112;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          void *v111 = v112;
          _os_log_impl((void *)&_mh_execute_header, v108, v109, "[%@] End event hit test info is invalid", v110, 0xCu);
          sub_1000172F8(&qword_10065DB10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          v113 = v40;
        }
        else
        {
          v113 = v108;
          v108 = v40;
        }
        uint64_t v107 = v50;

        v114 = &v137;
      }
      else
      {
        static Logger.daemon.getter();
        v101 = Logger.logObject.getter();
        os_log_type_t v102 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v101, v102))
        {
          uint64_t v103 = (uint8_t *)swift_slowAlloc();
          v104 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v103 = 138412290;
          uint64_t v105 = sub_1005163F0();
          v136[0] = v105;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          void *v104 = v105;
          _os_log_impl((void *)&_mh_execute_header, v101, v102, "[%@] Start event hit test info is invalid", v103, 0xCu);
          sub_1000172F8(&qword_10065DB10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          v106 = v40;
        }
        else
        {
          v106 = v101;
          v101 = v40;
        }
        uint64_t v107 = v50;

        v114 = &v138;
      }
      uint64_t v93 = (char *)*(v114 - 32);
    }
    uint64_t v94 = v107;
    goto LABEL_50;
  }
  __break(1u);
}

void *sub_1001CA048(void *result)
{
  void *result = *(void *)(v1 + 16);
  return result;
}

uint64_t sub_1001CA054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = sub_1000172F8((uint64_t *)&unk_10065C9E0);
  LOWORD(v13) = 281;
  uint64_t v15 = sub_10000DDFC(&qword_10065BD60, (uint64_t *)&unk_10065C9E0);
  *((void *)&v13 + 1) = &off_1006371E8;
  sub_1000172F8(&qword_10065BD58);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1005A3EC0;
  sub_10018B164(&v13, v6 + 32);
  uint64_t v7 = sub_1001CA1FC(a1, a2, a3);
  uint64_t v14 = sub_1000172F8(&qword_10065C050);
  uint64_t v8 = sub_10000DDFC(&qword_10065C058, &qword_10065C050);
  LOBYTE(v13) = 1;
  uint64_t v15 = v8;
  *((void *)&v13 + 1) = v7;
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1005A3EC0;
  sub_10018B164(&v13, v9 + 32);
  *(void *)&long long v13 = _swiftEmptyArrayStorage;
  uint64_t v10 = swift_bridgeObjectRetain();
  sub_100554E6C(v10);
  uint64_t v11 = swift_bridgeObjectRetain();
  sub_100554E6C(v11);
  sub_1000172F8(&qword_10065C9F0);
  swift_arrayDestroy();
  return v13;
}

uint64_t sub_1001CA1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000172F8(&qword_10065C060);
  uint64_t v18 = v6;
  uint64_t v19 = sub_10000DDFC((unint64_t *)&qword_10065C068, &qword_10065C060);
  uint64_t v7 = sub_10019CE94((uint64_t *)&v17);
  uint64_t v8 = (char *)v7 + *(int *)(v6 + 64);
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, a1, v9);
  *(_WORD *)uint64_t v7 = 10;
  sub_1000172F8(&qword_10065BD58);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1005A3EC0;
  sub_10018B164(&v17, v10 + 32);
  if (a3)
  {
    uint64_t v11 = sub_1001CA428(a2, a3);
    uint64_t v18 = sub_1000172F8(&qword_10065C050);
    uint64_t v12 = sub_10000DDFC(&qword_10065C058, &qword_10065C050);
    LOBYTE(v17) = 0;
    uint64_t v19 = v12;
    *((void *)&v17 + 1) = v11;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
    sub_10018B164(&v17, inited + 32);
    sub_100554E6C(inited);
  }
  *(void *)&long long v17 = _swiftEmptyArrayStorage;
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_100554E6C(v14);
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_100554E6C(v15);
  sub_1000172F8(&qword_10065C9F0);
  swift_arrayDestroy();
  return v17;
}

uint64_t sub_1001CA428(uint64_t a1, uint64_t a2)
{
  uint64_t v11 = sub_1000172F8(&qword_10065C070);
  uint64_t v12 = sub_10000DDFC(&qword_10065C078, &qword_10065C070);
  LOBYTE(v9) = 10;
  sub_1000172F8(&qword_10065BD58);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1005A3EC0;
  sub_10018B164(&v9, v4 + 32);
  uint64_t v11 = sub_1000172F8(&qword_10065BD50);
  uint64_t v12 = sub_10000DDFC((unint64_t *)&unk_10065C9D0, &qword_10065BD50);
  LOWORD(v9) = 6;
  *((void *)&v9 + 1) = a1;
  uint64_t v10 = a2;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1005A3EC0;
  sub_10018B164(&v9, v5 + 32);
  *(void *)&long long v9 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_100554E6C(v6);
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_100554E6C(v7);
  sub_1000172F8(&qword_10065C9F0);
  swift_arrayDestroy();
  return v9;
}

uint64_t sub_1001CA5B4(char a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  type metadata accessor for AppInstallEntity.Entity();
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v7 = v5;
  id v8 = [v6 initWithPersistentID:a2 onConnection:v7];
  LODWORD(a2) = [v8 existsInDatabase];

  if (a2)
  {
    id v9 = v8;
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [v9 valueForProperty:v10];

    if (v11)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v18 = 0u;
      long long v19 = 0u;
    }
    sub_1001CD9F8((uint64_t)&v18, (uint64_t)v22);
    if (v23)
    {
      sub_1001C5DD4(v22, v17);
      type metadata accessor for JSONDecoder();
      swift_allocObject();
      JSONDecoder.init()();
      uint64_t v12 = sub_100242F64(v17);
      swift_release();
      sub_100014524((uint64_t)v17);
    }
    else
    {
      uint64_t v12 = 8;
    }
    sub_10001729C((uint64_t)&v18, (uint64_t *)&unk_10065C9C0);

    *((void *)&v19 + 1) = &type metadata for AppInstallPhase;
    unint64_t v20 = sub_1001CDA60();
    unint64_t v21 = sub_1001CDAB4();
    LOBYTE(v18) = a1;
    type metadata accessor for JSONEncoder();
    swift_allocObject();
    id v13 = v9;
    JSONEncoder.init()();
    SQLiteEncodeValue(_:using:)(&v18, v22);
    swift_release();
    sub_100014524((uint64_t)&v18);
    sub_10018AC60(v22, v23);
    uint64_t v14 = _bridgeAnythingToObjectiveC<A>(_:)();
    sub_100014524((uint64_t)v22);
    NSString v15 = String._bridgeToObjectiveC()();
    [v13 setValue:v14 forProperty:v15];

    swift_unknownObjectRelease();
  }
  else
  {

    return 8;
  }
  return v12;
}

void sub_1001CA868(void **a1, void *a2)
{
  uint64_t v3 = v2;
  id v92 = a2;
  uint64_t v85 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  id v7 = (char *)v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000172F8(&qword_10065C9B0);
  __chkstk_darwin(v8 - 8);
  NSString v10 = (char *)v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = *a1;
  uint64_t v104 = 0;
  long long v102 = 0u;
  long long v103 = 0u;
  id v12 = v11;
  id v13 = sub_10043A980((uint64_t)&v102, v12);
  uint64_t v15 = v14;

  if (*((void *)&v103 + 1)) {
    sub_100014524((uint64_t)&v102);
  }
  uint64_t v16 = *(void *)(v15 + 16);
  swift_bridgeObjectRetain();
  id v17 = v13;
  if (v16)
  {
    type metadata accessor for AppInstallEntity.Entity();
    Class ObjCClassFromMetadata = (Class)swift_getObjCClassFromMetadata();
    uint64_t v81 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v80 = (char *)&v100 + 8;
    uint64_t v18 = 4;
    *(void *)&long long v19 = 138413314;
    long long v75 = v19;
    v74[1] = (char *)&type metadata for Any + 8;
    uint64_t v90 = v10;
    id v82 = v17;
    uint64_t v91 = v7;
    uint64_t v83 = v15;
    while (1)
    {
      uint64_t v105 = v18;
      uint64_t v21 = *(void *)(v15 + 8 * v18);
      id v22 = objc_allocWithZone(ObjCClassFromMetadata);
      id v23 = v17;
      id v24 = [v22 initWithPersistentID:v21 onConnection:v23];
      LOBYTE(v22) = [v24 existsInDatabase];

      if ((v22 & 1) == 0) {
        break;
      }
      id v25 = v24;
      NSString v26 = String._bridgeToObjectiveC()();
      id v27 = [v25 valueForProperty:v26];

      if (v27)
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v102 = 0u;
        long long v103 = 0u;
      }
      sub_1001CD9F8((uint64_t)&v102, (uint64_t)&v100);
      if (v101)
      {
        sub_1001C5DD4(&v100, &v99);
        type metadata accessor for JSONDecoder();
        swift_allocObject();
        JSONDecoder.init()();
        sub_1000144C8((uint64_t)&v99, (uint64_t)v98);
        if (swift_dynamicCast())
        {
          uint64_t v28 = v94;
          unint64_t v29 = v95;
          dispatch thunk of JSONDecoder.decode<A>(_:from:)();
          uint64_t v30 = v28;
          unint64_t v31 = v29;
          if (v3) {
            goto LABEL_64;
          }
          sub_100013510(v28, v29);
          swift_release();
          uint64_t v32 = v96;
          unint64_t v33 = v97;
          NSString v10 = v90;
        }
        else
        {
          uint64_t v34 = sub_100247980(&v99, (uint64_t)&type metadata for String);
          if (v3) {
            goto LABEL_65;
          }
          uint64_t v32 = v34;
          unint64_t v33 = v35;
          swift_release();
        }
        uint64_t v89 = v32;
        sub_100014524((uint64_t)&v99);
        sub_10001729C((uint64_t)&v102, (uint64_t *)&unk_10065C9C0);
      }
      else
      {
        sub_10001729C((uint64_t)&v102, (uint64_t *)&unk_10065C9C0);

        unint64_t v33 = 0xE200000000000000;
        uint64_t v89 = 16718;
      }
      id v36 = v25;
      NSString v37 = String._bridgeToObjectiveC()();
      id v38 = [v36 valueForProperty:v37];

      if (v38)
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v102 = 0u;
        long long v103 = 0u;
      }
      sub_1001CD9F8((uint64_t)&v102, (uint64_t)&v100);
      if (v101)
      {
        sub_1001C5DD4(&v100, &v99);
        type metadata accessor for JSONDecoder();
        swift_allocObject();
        JSONDecoder.init()();
        sub_1000144C8((uint64_t)&v99, (uint64_t)v98);
        if (swift_dynamicCast())
        {
          uint64_t v39 = v94;
          unint64_t v40 = v95;
          dispatch thunk of JSONDecoder.decode<A>(_:from:)();
          uint64_t v30 = v39;
          unint64_t v31 = v40;
          if (v3) {
            goto LABEL_64;
          }
          sub_100013510(v39, v40);
          swift_release();
          uint64_t v41 = v96;
          unint64_t v42 = v97;
          NSString v10 = v90;
        }
        else
        {
          uint64_t v43 = sub_100247980(&v99, (uint64_t)&type metadata for String);
          if (v3) {
            goto LABEL_65;
          }
          uint64_t v41 = v43;
          unint64_t v42 = v44;
          swift_release();
        }
        uint64_t v88 = v41;
        sub_100014524((uint64_t)&v99);
        sub_10001729C((uint64_t)&v102, (uint64_t *)&unk_10065C9C0);
      }
      else
      {
        sub_10001729C((uint64_t)&v102, (uint64_t *)&unk_10065C9C0);

        unint64_t v42 = 0xE200000000000000;
        uint64_t v88 = 16718;
      }
      id v45 = v36;
      NSString v46 = String._bridgeToObjectiveC()();
      id v47 = [v45 valueForProperty:v46];

      if (v47)
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v102 = 0u;
        long long v103 = 0u;
      }
      sub_1001CD9F8((uint64_t)&v102, (uint64_t)&v100);
      if (v101)
      {
        sub_1001C5DD4(&v100, &v99);
        type metadata accessor for JSONDecoder();
        swift_allocObject();
        JSONDecoder.init()();
        sub_1000144C8((uint64_t)&v99, (uint64_t)v98);
        if (swift_dynamicCast())
        {
          uint64_t v48 = v96;
          unint64_t v49 = v97;
          sub_1001CDA60();
          dispatch thunk of JSONDecoder.decode<A>(_:from:)();
          uint64_t v30 = v48;
          unint64_t v31 = v49;
          if (v3)
          {
LABEL_64:
            sub_100013510(v30, v31);
LABEL_65:
            swift_release();
            swift_unexpectedError();
            __break(1u);
            JUMPOUT(0x1001CB6B4);
          }
          sub_100013510(v48, v49);
          swift_release();
          uint64_t v50 = v94;
          NSString v10 = v90;
        }
        else
        {
          uint64_t v51 = sub_100247F18(&v99, (uint64_t)&type metadata for AppInstallPhase);
          if (v3) {
            goto LABEL_65;
          }
          uint64_t v50 = v51;
          swift_release();
        }
        uint64_t v87 = v50;
        sub_100014524((uint64_t)&v99);
      }
      else
      {
        uint64_t v87 = 0;
      }
      sub_10001729C((uint64_t)&v102, (uint64_t *)&unk_10065C9C0);

      id v52 = v45;
      NSString v53 = String._bridgeToObjectiveC()();
      id v54 = [v52 valueForProperty:v53];

      if (v54)
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v102 = 0u;
        long long v103 = 0u;
      }
      unint64_t v55 = v33;
      sub_1001CD9F8((uint64_t)&v102, (uint64_t)&v100);
      unint64_t v56 = v42;
      if (v101)
      {
        sub_1001C5DD4(&v100, &v99);
        type metadata accessor for JSONDecoder();
        swift_allocObject();
        JSONDecoder.init()();
        sub_100243034(&v99, (uint64_t)v10);
        if (v3) {
          goto LABEL_65;
        }
        swift_release();
        sub_100014524((uint64_t)&v99);
        uint64_t v57 = type metadata accessor for UUID();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v10, 0, 1, v57);
      }
      else
      {
        uint64_t v57 = type metadata accessor for UUID();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v10, 1, 1, v57);
      }
      sub_10001729C((uint64_t)&v102, (uint64_t *)&unk_10065C9C0);
      uint64_t v93 = v52;

      type metadata accessor for UUID();
      uint64_t v58 = *(void *)(v57 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v10, 1, v57) == 1)
      {
        sub_10001729C((uint64_t)v10, &qword_10065C9B0);
        unint64_t v59 = 0xE200000000000000;
        uint64_t v86 = 16718;
      }
      else
      {
        uint64_t v86 = UUID.uuidString.getter();
        unint64_t v59 = v60;
        (*(void (**)(char *, uint64_t))(v58 + 8))(v10, v57);
      }
      id v61 = v91;
      static Logger.install.getter();
      id v62 = v92;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v63 = Logger.logObject.getter();
      int v64 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v63, (os_log_type_t)v64))
      {
        int v76 = v64;
        os_log_type_t v78 = v63;
        uint64_t v79 = v3;
        uint64_t v65 = swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        uint64_t v77 = swift_slowAlloc();
        *(void *)&long long v102 = v77;
        *(_DWORD *)uint64_t v65 = v75;
        unint64_t v67 = v56;
        *(void *)&long long v100 = v62;
        id v68 = v62;
        os_log_type_t v69 = (void *)v66;
        id v70 = v92;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *os_log_type_t v69 = v70;

        *(_WORD *)(v65 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)&long long v100 = sub_1000143F4(v89, v55, (uint64_t *)&v102);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v65 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(void *)&long long v100 = sub_1000143F4(v88, v67, (uint64_t *)&v102);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v65 + 32) = 2080;
        swift_bridgeObjectRetain();
        *(void *)&long long v100 = sub_1000143F4(v86, v59, (uint64_t *)&v102);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v65 + 42) = 2080;
        unint64_t v71 = 0xE700000000000000;
        uint64_t v72 = 0x6C6C6174736E69;
        uint64_t v3 = v79;
        uint64_t v15 = v83;
        id v73 = v78;
        switch((char)v87)
        {
          case 1:
            unint64_t v71 = 0xE800000000000000;
            uint64_t v72 = 0x64616F6C6E776F64;
            break;
          case 2:
            break;
          case 3:
            unint64_t v71 = 0xE900000000000065;
            uint64_t v72 = 0x6C626D6174736F70;
            break;
          case 4:
            uint64_t v72 = 0x656C6C65636E6163;
            unint64_t v71 = 0xE900000000000064;
            break;
          case 5:
            unint64_t v71 = 0xE600000000000000;
            uint64_t v72 = 0x646573756170;
            break;
          case 6:
            unint64_t v71 = 0xE800000000000000;
            uint64_t v72 = 0x64656873696E6966;
            break;
          case 7:
            unint64_t v71 = 0xE600000000000000;
            uint64_t v72 = 0x64656C696166;
            break;
          default:
            unint64_t v71 = 0xE800000000000000;
            uint64_t v72 = 0x656C626D61657270;
            break;
        }
        *(void *)&long long v100 = sub_1000143F4(v72, v71, (uint64_t *)&v102);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v73, (os_log_type_t)v76, "[%@] Removing stale install with logKey: %{public}s bundleID: %{public}s coordinatorID: %s phase: %s", (uint8_t *)v65, 0x34u);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*v81)(v91, v85);
        NSString v10 = v90;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

        (*v81)(v61, v85);
        uint64_t v15 = v83;
      }
      uint64_t v18 = v105 + 1;
      unint64_t v20 = v93;
      sub_1001A0E84(v93);

      id v17 = v82;
      if ((unint64_t)(v18 - 4) >= *(void *)(v15 + 16)) {
        goto LABEL_61;
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_61:
    swift_bridgeObjectRelease();
    id v24 = v17;
  }

  swift_bridgeObjectRelease();
}

unint64_t *sub_1001CB6D4()
{
  sub_1000172F8((uint64_t *)&unk_100663BE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A4070;
  *(void *)(inited + 56) = &type metadata for SQLiteTable;
  *(void *)(inited + 64) = &off_1006493B8;
  uint64_t v1 = (void *)swift_allocObject();
  *(void *)(inited + 32) = v1;
  v1[2] = sub_1001CB814;
  v1[3] = 0;
  v1[4] = 0x74736E695F707061;
  v1[5] = 0xEB000000006C6C61;
  *(void *)(inited + 96) = &type metadata for SQLiteTable;
  *(void *)(inited + 104) = &off_1006493B8;
  uint64_t v2 = (void *)swift_allocObject();
  *(void *)(inited + 72) = v2;
  v2[2] = sub_1001CCF90;
  v2[3] = 0;
  v2[4] = 0x6B6361705F707061;
  v2[5] = 0xEB00000000656761;
  uint64_t v3 = sub_1004AB980(inited);
  swift_setDeallocating();
  sub_1000172F8(&qword_10065C038);
  swift_arrayDestroy();
  return v3;
}

unint64_t *sub_1001CB814()
{
  v280[0] = 0x5F746E756F636361;
  v280[1] = 0xEA00000000006469;
  v280[2] = 0x52454745544E49;
  v280[3] = 0xE700000000000000;
  long long v281 = 0u;
  long long v282 = 0u;
  long long v283 = 0u;
  char v284 = 0;
  v275[0] = 0x697461725F656761;
  v275[1] = 0xEA0000000000676ELL;
  v275[2] = 0x52454745544E49;
  v275[3] = 0xE700000000000000;
  long long v276 = 0u;
  long long v277 = 0u;
  long long v278 = 0u;
  char v279 = 0;
  strcpy((char *)v268, "apple_item_id");
  v268[7] = -4864;
  uint64_t v269 = 0x52454745544E49;
  unint64_t v270 = 0xE700000000000000;
  long long v271 = 0u;
  long long v272 = 0u;
  long long v273 = 0u;
  char v274 = 0;
  v263[0] = 0xD000000000000010;
  v263[1] = 0x80000001005B71E0;
  v263[2] = 0x52454745544E49;
  v263[3] = 0xE700000000000000;
  long long v264 = 0u;
  long long v265 = 0u;
  long long v266 = 0u;
  char v267 = 0;
  v259 = &type metadata for Bool;
  v260 = &protocol witness table for Bool;
  v261 = &protocol witness table for Bool;
  char v258 = 0;
  v257[0] = 0x6465766F72707061;
  v257[1] = 0xE800000000000000;
  v257[2] = 0x52454745544E49;
  v257[3] = 0xE700000000000000;
  char v262 = 1;
  v252[0] = 0x5F6B726F77747261;
  v252[1] = 0xEB000000006C7275;
  unint64_t v0 = 0xE400000000000000;
  v252[2] = 1112493122;
  v252[3] = 0xE400000000000000;
  long long v253 = 0u;
  long long v254 = 0u;
  long long v255 = 0u;
  char v256 = 0;
  v247[0] = 0x695F656C646E7562;
  v247[1] = 0xE900000000000064;
  v247[2] = 1415071060;
  v247[3] = 0xE400000000000000;
  long long v248 = 0u;
  long long v249 = 0u;
  long long v250 = 0u;
  char v251 = 0;
  v242[0] = 0x6E5F656C646E7562;
  v242[1] = 0xEB00000000656D61;
  v242[2] = 1415071060;
  v242[3] = 0xE400000000000000;
  long long v243 = 0u;
  long long v244 = 0u;
  long long v245 = 0u;
  char v246 = 0;
  strcpy(v235, "bundle_version");
  v235[15] = -18;
  uint64_t v236 = 1415071060;
  unint64_t v237 = 0xE400000000000000;
  long long v238 = 0u;
  long long v239 = 0u;
  long long v240 = 0u;
  char v241 = 0;
  v230[0] = 0x695F746E65696C63;
  v230[1] = 0xE900000000000064;
  v230[2] = 1415071060;
  v230[3] = 0xE400000000000000;
  long long v231 = 0u;
  long long v232 = 0u;
  long long v233 = 0u;
  char v234 = 0;
  strcpy(v223, "coordinator_id");
  v223[15] = -18;
  uint64_t v224 = 1145656661;
  unint64_t v225 = 0xE400000000000000;
  long long v226 = 0u;
  long long v227 = 0u;
  long long v228 = 0u;
  char v229 = 0;
  v218[0] = 0xD000000000000016;
  v218[1] = 0x80000001005B7250;
  v218[2] = 1415071060;
  v218[3] = 0xE400000000000000;
  long long v219 = 0u;
  long long v220 = 0u;
  long long v221 = 0u;
  char v222 = 0;
  strcpy((char *)v211, "failure_error");
  v211[7] = -4864;
  uint64_t v212 = 1112493122;
  unint64_t v213 = 0xE400000000000000;
  long long v214 = 0u;
  long long v215 = 0u;
  long long v216 = 0u;
  char v217 = 0;
  v206[0] = 0xD00000000000001ELL;
  v206[1] = 0x80000001005B7280;
  v206[2] = 0x52454745544E49;
  v206[3] = 0xE700000000000000;
  long long v207 = 0u;
  long long v208 = 0u;
  long long v209 = 0u;
  char v210 = 0;
  v201[0] = 0xD000000000000016;
  v201[1] = 0x80000001005B72A0;
  v201[2] = 0x52454745544E49;
  v201[3] = 0xE700000000000000;
  long long v202 = 0u;
  long long v203 = 0u;
  long long v204 = 0u;
  char v205 = 0;
  v196[0] = 0x5F6C6C6174736E69;
  v196[1] = 0xEA00000000006469;
  v196[2] = 1145656661;
  v196[3] = 0xE400000000000000;
  long long v197 = 0u;
  long long v198 = 0u;
  long long v199 = 0u;
  char v200 = 0;
  strcpy((char *)v189, "install_path");
  HIBYTE(v189[6]) = 0;
  v189[7] = -5120;
  uint64_t v190 = 1415071060;
  unint64_t v191 = 0xE400000000000000;
  long long v192 = 0u;
  long long v193 = 0u;
  long long v194 = 0u;
  char v195 = 0;
  strcpy((char *)v182, "install_type");
  HIBYTE(v182[6]) = 0;
  v182[7] = -5120;
  uint64_t v183 = 0x52454745544E49;
  unint64_t v184 = 0xE700000000000000;
  long long v185 = 0u;
  long long v186 = 0u;
  long long v187 = 0u;
  char v188 = 0;
  v177[0] = 0x746E65746E69;
  v177[1] = 0xE600000000000000;
  uint64_t v1 = swift_dynamicCastMetatype();
  long long v2 = 0uLL;
  uint64_t v3 = 1415071060;
  if (!v1)
  {
    if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
    {
      unint64_t v0 = 0xE700000000000000;
      uint64_t v3 = 0x52454745544E49;
    }
    else
    {
      uint64_t v3 = 1279346002;
      if (!swift_dynamicCastMetatype() && !swift_dynamicCastMetatype())
      {
        type metadata accessor for UUID();
        if (swift_dynamicCastMetatype()) {
          uint64_t v3 = 1145656661;
        }
        else {
          uint64_t v3 = 1112493122;
        }
      }
    }
    long long v2 = 0uLL;
  }
  v177[2] = v3;
  v177[3] = v0;
  long long v178 = v2;
  long long v179 = v2;
  long long v180 = v2;
  char v181 = 0;
  v173 = &type metadata for Bool;
  v174 = &protocol witness table for Bool;
  v175 = &protocol witness table for Bool;
  char v172 = 0;
  v171[0] = 0xD000000000000016;
  v171[1] = 0x80000001005B72F0;
  v171[2] = 0x52454745544E49;
  v171[3] = 0xE700000000000000;
  char v176 = 1;
  v166[0] = 0x74616470755F7369;
  v166[1] = 0xE900000000000065;
  v166[2] = 0x52454745544E49;
  v166[3] = 0xE700000000000000;
  long long v167 = v2;
  long long v168 = v2;
  long long v169 = v2;
  char v170 = 0;
  v161[0] = 0xD000000000000011;
  v161[1] = 0x80000001005B7320;
  v161[2] = 0x52454745544E49;
  v161[3] = 0xE700000000000000;
  long long v162 = v2;
  long long v163 = v2;
  long long v164 = v2;
  char v165 = 0;
  v156[0] = 0x79656B5F676F6CLL;
  v156[1] = 0xE700000000000000;
  type metadata accessor for LogKey();
  uint64_t v4 = swift_dynamicCastMetatype();
  unint64_t v5 = 0xE400000000000000;
  uint64_t v6 = 1415071060;
  unint64_t v7 = 0xE400000000000000;
  if (!v4)
  {
    if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
    {
      unint64_t v7 = 0xE700000000000000;
      uint64_t v6 = 0x52454745544E49;
    }
    else
    {
      uint64_t v6 = 1279346002;
      if (!swift_dynamicCastMetatype() && !swift_dynamicCastMetatype())
      {
        type metadata accessor for UUID();
        if (swift_dynamicCastMetatype()) {
          uint64_t v6 = 1145656661;
        }
        else {
          uint64_t v6 = 1112493122;
        }
      }
      unint64_t v7 = 0xE400000000000000;
    }
  }
  v156[2] = v6;
  v156[3] = v7;
  long long v157 = 0u;
  long long v158 = 0u;
  long long v159 = 0u;
  char v160 = 0;
  v151[0] = 0xD000000000000010;
  v151[1] = 0x80000001005B7340;
  v151[2] = 1112493122;
  v151[3] = 0xE400000000000000;
  long long v152 = 0u;
  long long v153 = 0u;
  long long v154 = 0u;
  char v155 = 0;
  v146[0] = 0x616E6F73726570;
  v146[1] = 0xE700000000000000;
  uint64_t v8 = swift_dynamicCastMetatype();
  long long v9 = 0uLL;
  uint64_t v10 = 1415071060;
  if (!v8)
  {
    if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
    {
      unint64_t v5 = 0xE700000000000000;
      uint64_t v10 = 0x52454745544E49;
    }
    else
    {
      uint64_t v10 = 1279346002;
      if (!swift_dynamicCastMetatype() && !swift_dynamicCastMetatype())
      {
        type metadata accessor for UUID();
        if (swift_dynamicCastMetatype()) {
          uint64_t v10 = 1145656661;
        }
        else {
          uint64_t v10 = 1112493122;
        }
      }
    }
    long long v9 = 0uLL;
  }
  v146[2] = v10;
  v146[3] = v5;
  long long v147 = v9;
  long long v148 = v9;
  long long v149 = v9;
  char v150 = 0;
  v141[0] = 0x6573616870;
  v141[1] = 0xE500000000000000;
  uint64_t v11 = swift_dynamicCastMetatype();
  unint64_t v12 = 0xE400000000000000;
  uint64_t v13 = 1415071060;
  unint64_t v14 = 0xE400000000000000;
  if (!v11)
  {
    if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
    {
      unint64_t v14 = 0xE700000000000000;
      uint64_t v13 = 0x52454745544E49;
    }
    else
    {
      uint64_t v13 = 1279346002;
      if (!swift_dynamicCastMetatype() && !swift_dynamicCastMetatype())
      {
        type metadata accessor for UUID();
        if (swift_dynamicCastMetatype()) {
          uint64_t v13 = 1145656661;
        }
        else {
          uint64_t v13 = 1112493122;
        }
      }
      unint64_t v14 = 0xE400000000000000;
    }
  }
  v141[2] = v13;
  v141[3] = v14;
  long long v142 = 0u;
  long long v143 = 0u;
  long long v144 = 0u;
  char v145 = 0;
  v136[0] = 0x6C6F686563616C70;
  v136[1] = 0xEF6C72755F726564;
  v136[2] = 1112493122;
  v136[3] = 0xE400000000000000;
  long long v137 = 0u;
  long long v138 = 0u;
  long long v139 = 0u;
  char v140 = 0;
  v131[0] = 0x6D726F6674616C70;
  v131[1] = 0xE800000000000000;
  v131[2] = 1112493122;
  v131[3] = 0xE400000000000000;
  long long v132 = 0u;
  long long v133 = 0u;
  long long v134 = 0u;
  char v135 = 0;
  v126[0] = 0xD000000000000015;
  v126[1] = 0x80000001005B7380;
  v126[2] = 1112493122;
  v126[3] = 0xE400000000000000;
  long long v127 = 0u;
  long long v128 = 0u;
  long long v129 = 0u;
  char v130 = 0;
  v121[0] = 0x797469726F697270;
  v121[1] = 0xE800000000000000;
  uint64_t v15 = swift_dynamicCastMetatype();
  long long v16 = 0uLL;
  uint64_t v17 = 1415071060;
  if (!v15)
  {
    if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
    {
      unint64_t v12 = 0xE700000000000000;
      uint64_t v17 = 0x52454745544E49;
    }
    else
    {
      uint64_t v17 = 1279346002;
      if (!swift_dynamicCastMetatype() && !swift_dynamicCastMetatype())
      {
        type metadata accessor for UUID();
        if (swift_dynamicCastMetatype()) {
          uint64_t v17 = 1145656661;
        }
        else {
          uint64_t v17 = 1112493122;
        }
      }
    }
    long long v16 = 0uLL;
  }
  v121[2] = v17;
  v121[3] = v12;
  long long v122 = v16;
  long long v123 = v16;
  long long v124 = v16;
  char v125 = 0;
  v116[0] = 0xD00000000000001ALL;
  v116[1] = 0x80000001005B73A0;
  unint64_t v18 = 0xE400000000000000;
  v116[2] = 1415071060;
  v116[3] = 0xE400000000000000;
  long long v117 = v16;
  long long v118 = v16;
  long long v119 = v16;
  char v120 = 0;
  v111[0] = 0x74706965636572;
  v111[1] = 0xE700000000000000;
  v111[2] = 1112493122;
  v111[3] = 0xE400000000000000;
  long long v112 = v16;
  long long v113 = v16;
  long long v114 = v16;
  char v115 = 0;
  v106[0] = 0x656372756F73;
  v106[1] = 0xE600000000000000;
  uint64_t v19 = swift_dynamicCastMetatype();
  uint64_t v20 = 1415071060;
  unint64_t v21 = 0xE400000000000000;
  if (!v19)
  {
    if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
    {
      unint64_t v21 = 0xE700000000000000;
      uint64_t v20 = 0x52454745544E49;
    }
    else
    {
      uint64_t v20 = 1279346002;
      if (!swift_dynamicCastMetatype() && !swift_dynamicCastMetatype())
      {
        type metadata accessor for UUID();
        if (swift_dynamicCastMetatype()) {
          uint64_t v20 = 1145656661;
        }
        else {
          uint64_t v20 = 1112493122;
        }
      }
      unint64_t v21 = 0xE400000000000000;
    }
  }
  v106[2] = v20;
  v106[3] = v21;
  long long v107 = 0u;
  long long v108 = 0u;
  long long v109 = 0u;
  char v110 = 0;
  strcpy(v99, "store_metadata");
  v99[15] = -18;
  uint64_t v100 = 1112493122;
  unint64_t v101 = 0xE400000000000000;
  long long v102 = 0u;
  long long v103 = 0u;
  long long v104 = 0u;
  char v105 = 0;
  v94[0] = 0x6F745F7469647561;
  v94[1] = 0xEB000000006E656BLL;
  v94[2] = 1112493122;
  v94[3] = 0xE400000000000000;
  long long v95 = 0u;
  long long v96 = 0u;
  long long v97 = 0u;
  char v98 = 0;
  strcpy((char *)v87, "developer_id");
  HIBYTE(v87[6]) = 0;
  v87[7] = -5120;
  uint64_t v88 = 1415071060;
  unint64_t v89 = 0xE400000000000000;
  long long v90 = 0u;
  long long v91 = 0u;
  long long v92 = 0u;
  char v93 = 0;
  v82[0] = 0x7562697274736964;
  v82[1] = 0xEB00000000726F74;
  uint64_t v22 = swift_dynamicCastMetatype();
  long long v23 = 0uLL;
  uint64_t v24 = 1415071060;
  if (!v22)
  {
    if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
    {
      unint64_t v18 = 0xE700000000000000;
      uint64_t v24 = 0x52454745544E49;
    }
    else
    {
      uint64_t v24 = 1279346002;
      if (!swift_dynamicCastMetatype() && !swift_dynamicCastMetatype())
      {
        type metadata accessor for UUID();
        if (swift_dynamicCastMetatype()) {
          uint64_t v24 = 1145656661;
        }
        else {
          uint64_t v24 = 1112493122;
        }
      }
      unint64_t v18 = 0xE400000000000000;
    }
    long long v23 = 0uLL;
  }
  v82[2] = v24;
  v82[3] = v18;
  long long v83 = v23;
  long long v84 = v23;
  long long v85 = v23;
  char v86 = 0;
  v77[0] = 0xD000000000000016;
  v77[1] = 0x80000001005B7400;
  v77[2] = 1415071060;
  v77[3] = 0xE400000000000000;
  long long v78 = v23;
  long long v79 = v23;
  long long v80 = v23;
  char v81 = 0;
  id v73 = &type metadata for Bool;
  uint64_t v74 = &protocol witness table for Bool;
  long long v75 = &protocol witness table for Bool;
  char v72 = 0;
  strcpy(v69, "is_marketplace");
  v69[15] = -18;
  uint64_t v70 = 0x52454745544E49;
  unint64_t v71 = 0xE700000000000000;
  char v76 = 1;
  sub_1000172F8((uint64_t *)&unk_100663BE0);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1005A43F0;
  *(void *)(v25 + 56) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 64) = &off_1006493B0;
  uint64_t v26 = swift_allocObject();
  *(void *)(v25 + 32) = v26;
  sub_1001CD8D8((uint64_t)v280, v26 + 16);
  *(void *)(v25 + 96) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 104) = &off_1006493B0;
  uint64_t v27 = swift_allocObject();
  *(void *)(v25 + 72) = v27;
  sub_1001CD8D8((uint64_t)v275, v27 + 16);
  *(void *)(v25 + 136) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 144) = &off_1006493B0;
  uint64_t v28 = swift_allocObject();
  *(void *)(v25 + 112) = v28;
  sub_1001CD8D8((uint64_t)v268, v28 + 16);
  *(void *)(v25 + 176) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 184) = &off_1006493B0;
  uint64_t v29 = swift_allocObject();
  *(void *)(v25 + 152) = v29;
  sub_1001CD8D8((uint64_t)v263, v29 + 16);
  *(void *)(v25 + 216) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 224) = &off_1006493B0;
  uint64_t v30 = swift_allocObject();
  *(void *)(v25 + 192) = v30;
  sub_1001CD8D8((uint64_t)v257, v30 + 16);
  *(void *)(v25 + 256) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 264) = &off_1006493B0;
  uint64_t v31 = swift_allocObject();
  *(void *)(v25 + 232) = v31;
  sub_1001CD8D8((uint64_t)v252, v31 + 16);
  *(void *)(v25 + 296) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 304) = &off_1006493B0;
  uint64_t v32 = swift_allocObject();
  *(void *)(v25 + 272) = v32;
  sub_1001CD8D8((uint64_t)v247, v32 + 16);
  *(void *)(v25 + 336) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 344) = &off_1006493B0;
  uint64_t v33 = swift_allocObject();
  *(void *)(v25 + 312) = v33;
  sub_1001CD8D8((uint64_t)v242, v33 + 16);
  *(void *)(v25 + 376) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 384) = &off_1006493B0;
  uint64_t v34 = swift_allocObject();
  *(void *)(v25 + 352) = v34;
  sub_1001CD8D8((uint64_t)v235, v34 + 16);
  *(void *)(v25 + 416) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 424) = &off_1006493B0;
  uint64_t v35 = swift_allocObject();
  *(void *)(v25 + 392) = v35;
  sub_1001CD8D8((uint64_t)v230, v35 + 16);
  *(void *)(v25 + 456) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 464) = &off_1006493B0;
  uint64_t v36 = swift_allocObject();
  *(void *)(v25 + 432) = v36;
  sub_1001CD8D8((uint64_t)v223, v36 + 16);
  *(void *)(v25 + 496) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 504) = &off_1006493B0;
  uint64_t v37 = swift_allocObject();
  *(void *)(v25 + 472) = v37;
  sub_1001CD8D8((uint64_t)v218, v37 + 16);
  *(void *)(v25 + 536) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 544) = &off_1006493B0;
  uint64_t v38 = swift_allocObject();
  *(void *)(v25 + 512) = v38;
  sub_1001CD8D8((uint64_t)v211, v38 + 16);
  *(void *)(v25 + 576) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 584) = &off_1006493B0;
  uint64_t v39 = swift_allocObject();
  *(void *)(v25 + 552) = v39;
  sub_1001CD8D8((uint64_t)v206, v39 + 16);
  *(void *)(v25 + 616) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 624) = &off_1006493B0;
  uint64_t v40 = swift_allocObject();
  *(void *)(v25 + 592) = v40;
  sub_1001CD8D8((uint64_t)v201, v40 + 16);
  *(void *)(v25 + 656) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 664) = &off_1006493B0;
  uint64_t v41 = swift_allocObject();
  *(void *)(v25 + 632) = v41;
  sub_1001CD8D8((uint64_t)v196, v41 + 16);
  *(void *)(v25 + 696) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 704) = &off_1006493B0;
  uint64_t v42 = swift_allocObject();
  *(void *)(v25 + 672) = v42;
  sub_1001CD8D8((uint64_t)v189, v42 + 16);
  *(void *)(v25 + 736) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 744) = &off_1006493B0;
  uint64_t v43 = swift_allocObject();
  *(void *)(v25 + 712) = v43;
  sub_1001CD8D8((uint64_t)v182, v43 + 16);
  *(void *)(v25 + 776) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 784) = &off_1006493B0;
  uint64_t v44 = swift_allocObject();
  *(void *)(v25 + 752) = v44;
  sub_1001CD8D8((uint64_t)v177, v44 + 16);
  *(void *)(v25 + 816) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 824) = &off_1006493B0;
  uint64_t v45 = swift_allocObject();
  *(void *)(v25 + 792) = v45;
  sub_1001CD8D8((uint64_t)v171, v45 + 16);
  *(void *)(v25 + 856) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 864) = &off_1006493B0;
  uint64_t v46 = swift_allocObject();
  *(void *)(v25 + 832) = v46;
  sub_1001CD8D8((uint64_t)v166, v46 + 16);
  *(void *)(v25 + 896) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 904) = &off_1006493B0;
  uint64_t v47 = swift_allocObject();
  *(void *)(v25 + 872) = v47;
  sub_1001CD8D8((uint64_t)v161, v47 + 16);
  *(void *)(v25 + 936) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 944) = &off_1006493B0;
  uint64_t v48 = swift_allocObject();
  *(void *)(v25 + 912) = v48;
  sub_1001CD8D8((uint64_t)v156, v48 + 16);
  *(void *)(v25 + 976) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 984) = &off_1006493B0;
  uint64_t v49 = swift_allocObject();
  *(void *)(v25 + 952) = v49;
  sub_1001CD8D8((uint64_t)v151, v49 + 16);
  *(void *)(v25 + 1016) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 1024) = &off_1006493B0;
  uint64_t v50 = swift_allocObject();
  *(void *)(v25 + 992) = v50;
  sub_1001CD8D8((uint64_t)v146, v50 + 16);
  *(void *)(v25 + 1056) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 1064) = &off_1006493B0;
  uint64_t v51 = swift_allocObject();
  *(void *)(v25 + 1032) = v51;
  sub_1001CD8D8((uint64_t)v141, v51 + 16);
  *(void *)(v25 + 1096) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 1104) = &off_1006493B0;
  uint64_t v52 = swift_allocObject();
  *(void *)(v25 + 1072) = v52;
  sub_1001CD8D8((uint64_t)v136, v52 + 16);
  *(void *)(v25 + 1136) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 1144) = &off_1006493B0;
  uint64_t v53 = swift_allocObject();
  *(void *)(v25 + 1112) = v53;
  sub_1001CD8D8((uint64_t)v131, v53 + 16);
  *(void *)(v25 + 1176) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 1184) = &off_1006493B0;
  uint64_t v54 = swift_allocObject();
  *(void *)(v25 + 1152) = v54;
  sub_1001CD8D8((uint64_t)v126, v54 + 16);
  *(void *)(v25 + 1216) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 1224) = &off_1006493B0;
  uint64_t v55 = swift_allocObject();
  *(void *)(v25 + 1192) = v55;
  sub_1001CD8D8((uint64_t)v121, v55 + 16);
  *(void *)(v25 + 1256) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 1264) = &off_1006493B0;
  uint64_t v56 = swift_allocObject();
  *(void *)(v25 + 1232) = v56;
  sub_1001CD8D8((uint64_t)v116, v56 + 16);
  *(void *)(v25 + 1296) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 1304) = &off_1006493B0;
  uint64_t v57 = swift_allocObject();
  *(void *)(v25 + 1272) = v57;
  sub_1001CD8D8((uint64_t)v111, v57 + 16);
  *(void *)(v25 + 1336) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 1344) = &off_1006493B0;
  uint64_t v58 = swift_allocObject();
  *(void *)(v25 + 1312) = v58;
  sub_1001CD8D8((uint64_t)v106, v58 + 16);
  *(void *)(v25 + 1376) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 1384) = &off_1006493B0;
  uint64_t v59 = swift_allocObject();
  *(void *)(v25 + 1352) = v59;
  sub_1001CD8D8((uint64_t)v99, v59 + 16);
  *(void *)(v25 + 1416) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 1424) = &off_1006493B0;
  uint64_t v60 = swift_allocObject();
  *(void *)(v25 + 1392) = v60;
  sub_1001CD8D8((uint64_t)v94, v60 + 16);
  *(void *)(v25 + 1456) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 1464) = &off_1006493B0;
  uint64_t v61 = swift_allocObject();
  *(void *)(v25 + 1432) = v61;
  sub_1001CD8D8((uint64_t)v87, v61 + 16);
  *(void *)(v25 + 1496) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 1504) = &off_1006493B0;
  uint64_t v62 = swift_allocObject();
  *(void *)(v25 + 1472) = v62;
  sub_1001CD8D8((uint64_t)v82, v62 + 16);
  *(void *)(v25 + 1536) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 1544) = &off_1006493B0;
  uint64_t v63 = swift_allocObject();
  *(void *)(v25 + 1512) = v63;
  sub_1001CD8D8((uint64_t)v77, v63 + 16);
  *(void *)(v25 + 1576) = &type metadata for SQLiteColumn;
  *(void *)(v25 + 1584) = &off_1006493B0;
  uint64_t v64 = swift_allocObject();
  *(void *)(v25 + 1552) = v64;
  sub_1001CD8D8((uint64_t)v69, v64 + 16);
  *(void *)(v25 + 1616) = &type metadata for SQLiteIndex;
  *(void *)(v25 + 1624) = &off_1006493A8;
  uint64_t v65 = swift_allocObject();
  *(void *)(v25 + 1592) = v65;
  *(void *)(v65 + 16) = 0x695F656C646E7562;
  *(void *)(v65 + 24) = 0xE900000000000064;
  strcpy((char *)(v65 + 32), "bundle_id_idx");
  *(_WORD *)(v65 + 46) = -4864;
  *(unsigned char *)(v65 + 48) = 0;
  *(void *)(v25 + 1656) = &type metadata for SQLiteIndex;
  *(void *)(v25 + 1664) = &off_1006493A8;
  uint64_t v66 = swift_allocObject();
  *(void *)(v25 + 1632) = v66;
  *(void *)(v66 + 16) = 0xD000000000000016;
  *(void *)(v66 + 24) = 0x80000001005B7250;
  *(void *)(v66 + 32) = 0xD00000000000001ALL;
  *(void *)(v66 + 40) = 0x80000001005B9410;
  *(unsigned char *)(v66 + 48) = 0;
  unint64_t v67 = sub_1004AB980(v25);
  swift_setDeallocating();
  sub_1000172F8(&qword_10065C038);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1001CD934((uint64_t)v69);
  sub_1001CD934((uint64_t)v77);
  sub_1001CD934((uint64_t)v82);
  sub_1001CD934((uint64_t)v87);
  sub_1001CD934((uint64_t)v94);
  sub_1001CD934((uint64_t)v99);
  sub_1001CD934((uint64_t)v106);
  sub_1001CD934((uint64_t)v111);
  sub_1001CD934((uint64_t)v116);
  sub_1001CD934((uint64_t)v121);
  sub_1001CD934((uint64_t)v126);
  sub_1001CD934((uint64_t)v131);
  sub_1001CD934((uint64_t)v136);
  sub_1001CD934((uint64_t)v141);
  sub_1001CD934((uint64_t)v146);
  sub_1001CD934((uint64_t)v151);
  sub_1001CD934((uint64_t)v156);
  sub_1001CD934((uint64_t)v161);
  sub_1001CD934((uint64_t)v166);
  sub_1001CD934((uint64_t)v171);
  sub_1001CD934((uint64_t)v177);
  sub_1001CD934((uint64_t)v182);
  sub_1001CD934((uint64_t)v189);
  sub_1001CD934((uint64_t)v196);
  sub_1001CD934((uint64_t)v201);
  sub_1001CD934((uint64_t)v206);
  sub_1001CD934((uint64_t)v211);
  sub_1001CD934((uint64_t)v218);
  sub_1001CD934((uint64_t)v223);
  sub_1001CD934((uint64_t)v230);
  sub_1001CD934((uint64_t)v235);
  sub_1001CD934((uint64_t)v242);
  sub_1001CD934((uint64_t)v247);
  sub_1001CD934((uint64_t)v252);
  sub_1001CD934((uint64_t)v257);
  sub_1001CD934((uint64_t)v263);
  sub_1001CD934((uint64_t)v268);
  sub_1001CD934((uint64_t)v275);
  sub_1001CD934((uint64_t)v280);
  return v67;
}

unint64_t *sub_1001CCF90()
{
  strcpy((char *)v109, "bytes_offset");
  HIBYTE(v109[6]) = 0;
  v109[7] = -5120;
  uint64_t v110 = 0x52454745544E49;
  unint64_t v111 = 0xE700000000000000;
  long long v112 = 0u;
  long long v113 = 0u;
  long long v114 = 0u;
  char v115 = 0;
  strcpy((char *)v102, "cipher_digest");
  v102[7] = -4864;
  unint64_t v0 = 0xE400000000000000;
  uint64_t v103 = 1112493122;
  unint64_t v104 = 0xE400000000000000;
  long long v105 = 0u;
  long long v106 = 0u;
  long long v107 = 0u;
  char v108 = 0;
  v97[0] = 0x73736572706D6F63;
  v97[1] = 0xEF657A69735F6465;
  v97[2] = 0x52454745544E49;
  v97[3] = 0xE700000000000000;
  long long v98 = 0u;
  long long v99 = 0u;
  long long v100 = 0u;
  char v101 = 0;
  v92[0] = 0x6F72705F61746164;
  v92[1] = 0xEF64695F6573696DLL;
  v92[2] = 1415071060;
  v92[3] = 0xE400000000000000;
  long long v93 = 0u;
  long long v94 = 0u;
  long long v95 = 0u;
  char v96 = 0;
  v87[0] = 0x747365676964;
  v87[1] = 0xE600000000000000;
  v87[2] = 1112493122;
  v87[3] = 0xE400000000000000;
  long long v88 = 0u;
  long long v89 = 0u;
  long long v90 = 0u;
  char v91 = 0;
  strcpy((char *)v80, "disk_location");
  v80[7] = -4864;
  uint64_t v81 = 1415071060;
  unint64_t v82 = 0xE400000000000000;
  long long v83 = 0u;
  long long v84 = 0u;
  long long v85 = 0u;
  char v86 = 0;
  v75[0] = 0x6974707972636E65;
  v75[1] = 0xEA00000000006E6FLL;
  uint64_t v1 = swift_dynamicCastMetatype();
  long long v2 = 0uLL;
  uint64_t v3 = 1415071060;
  unint64_t v4 = 0xE400000000000000;
  if (!v1)
  {
    if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
    {
      unint64_t v4 = 0xE700000000000000;
      uint64_t v3 = 0x52454745544E49;
    }
    else
    {
      uint64_t v3 = 1279346002;
      if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
      {
        unint64_t v4 = 0xE400000000000000;
      }
      else
      {
        type metadata accessor for UUID();
        if (swift_dynamicCastMetatype()) {
          uint64_t v3 = 1145656661;
        }
        else {
          uint64_t v3 = 1112493122;
        }
        unint64_t v4 = 0xE400000000000000;
      }
    }
    long long v2 = 0uLL;
  }
  v75[2] = v3;
  v75[3] = v4;
  long long v76 = v2;
  long long v77 = v2;
  long long v78 = v2;
  char v79 = 0;
  unint64_t v71 = &type metadata for Bool;
  char v72 = &protocol witness table for Bool;
  id v73 = &protocol witness table for Bool;
  char v70 = 0;
  v69[0] = 0x6B636F6C625F7369;
  v69[1] = 0xEA00000000006465;
  v69[2] = 0x52454745544E49;
  v69[3] = 0xE700000000000000;
  char v74 = 1;
  v64[0] = 0xD000000000000012;
  v64[1] = 0x80000001005B8380;
  v64[2] = 0x52454745544E49;
  v64[3] = 0xE700000000000000;
  long long v65 = v2;
  long long v66 = v2;
  long long v67 = v2;
  char v68 = 0;
  v59[0] = 0x695F746E65726170;
  v59[1] = 0xE900000000000064;
  v59[2] = 1112493122;
  v59[3] = 0xE400000000000000;
  long long v60 = v2;
  long long v61 = v2;
  long long v62 = v2;
  char v63 = 0;
  strcpy((char *)v52, "request_count");
  v52[7] = -4864;
  uint64_t v53 = 0x52454745544E49;
  unint64_t v54 = 0xE700000000000000;
  long long v55 = v2;
  long long v56 = v2;
  long long v57 = v2;
  char v58 = 0;
  strcpy(v45, "verifier_state");
  v45[15] = -18;
  uint64_t v46 = 1112493122;
  unint64_t v47 = 0xE400000000000000;
  long long v48 = v2;
  long long v49 = v2;
  long long v50 = v2;
  char v51 = 0;
  v40[0] = 1701869940;
  v40[1] = 0xE400000000000000;
  uint64_t v5 = 1415071060;
  if (!swift_dynamicCastMetatype())
  {
    if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
    {
      unint64_t v0 = 0xE700000000000000;
      uint64_t v5 = 0x52454745544E49;
    }
    else
    {
      uint64_t v5 = 1279346002;
      if (!swift_dynamicCastMetatype() && !swift_dynamicCastMetatype())
      {
        type metadata accessor for UUID();
        if (swift_dynamicCastMetatype()) {
          uint64_t v5 = 1145656661;
        }
        else {
          uint64_t v5 = 1112493122;
        }
      }
    }
  }
  v40[2] = v5;
  v40[3] = v0;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  char v44 = 0;
  v35[0] = 0xD000000000000011;
  v35[1] = 0x80000001005B83C0;
  v35[2] = 0x52454745544E49;
  v35[3] = 0xE700000000000000;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  char v39 = 0;
  v30[0] = 7107189;
  v30[1] = 0xE300000000000000;
  v30[2] = 1112493122;
  v30[3] = 0xE400000000000000;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  char v34 = 0;
  v25[0] = 0x746E6169726176;
  v25[1] = 0xE700000000000000;
  v25[2] = 1415071060;
  v25[3] = 0xE400000000000000;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  char v29 = 0;
  sub_1000172F8((uint64_t *)&unk_100663BE0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1005A4400;
  *(void *)(v6 + 56) = &type metadata for SQLiteColumn;
  *(void *)(v6 + 64) = &off_1006493B0;
  uint64_t v7 = swift_allocObject();
  *(void *)(v6 + 32) = v7;
  sub_1001CD8D8((uint64_t)v109, v7 + 16);
  *(void *)(v6 + 96) = &type metadata for SQLiteColumn;
  *(void *)(v6 + 104) = &off_1006493B0;
  uint64_t v8 = swift_allocObject();
  *(void *)(v6 + 72) = v8;
  sub_1001CD8D8((uint64_t)v102, v8 + 16);
  *(void *)(v6 + 136) = &type metadata for SQLiteColumn;
  *(void *)(v6 + 144) = &off_1006493B0;
  uint64_t v9 = swift_allocObject();
  *(void *)(v6 + 112) = v9;
  sub_1001CD8D8((uint64_t)v97, v9 + 16);
  *(void *)(v6 + 176) = &type metadata for SQLiteColumn;
  *(void *)(v6 + 184) = &off_1006493B0;
  uint64_t v10 = swift_allocObject();
  *(void *)(v6 + 152) = v10;
  sub_1001CD8D8((uint64_t)v92, v10 + 16);
  *(void *)(v6 + 216) = &type metadata for SQLiteColumn;
  *(void *)(v6 + 224) = &off_1006493B0;
  uint64_t v11 = swift_allocObject();
  *(void *)(v6 + 192) = v11;
  sub_1001CD8D8((uint64_t)v87, v11 + 16);
  *(void *)(v6 + 256) = &type metadata for SQLiteColumn;
  *(void *)(v6 + 264) = &off_1006493B0;
  uint64_t v12 = swift_allocObject();
  *(void *)(v6 + 232) = v12;
  sub_1001CD8D8((uint64_t)v80, v12 + 16);
  *(void *)(v6 + 296) = &type metadata for SQLiteColumn;
  *(void *)(v6 + 304) = &off_1006493B0;
  uint64_t v13 = swift_allocObject();
  *(void *)(v6 + 272) = v13;
  sub_1001CD8D8((uint64_t)v75, v13 + 16);
  *(void *)(v6 + 336) = &type metadata for SQLiteColumn;
  *(void *)(v6 + 344) = &off_1006493B0;
  uint64_t v14 = swift_allocObject();
  *(void *)(v6 + 312) = v14;
  sub_1001CD8D8((uint64_t)v69, v14 + 16);
  *(void *)(v6 + 376) = &type metadata for SQLiteColumn;
  *(void *)(v6 + 384) = &off_1006493B0;
  uint64_t v15 = swift_allocObject();
  *(void *)(v6 + 352) = v15;
  sub_1001CD8D8((uint64_t)v64, v15 + 16);
  *(void *)(v6 + 416) = &type metadata for SQLiteColumn;
  *(void *)(v6 + 424) = &off_1006493B0;
  uint64_t v16 = swift_allocObject();
  *(void *)(v6 + 392) = v16;
  sub_1001CD8D8((uint64_t)v59, v16 + 16);
  *(void *)(v6 + 456) = &type metadata for SQLiteColumn;
  *(void *)(v6 + 464) = &off_1006493B0;
  uint64_t v17 = swift_allocObject();
  *(void *)(v6 + 432) = v17;
  sub_1001CD8D8((uint64_t)v52, v17 + 16);
  *(void *)(v6 + 496) = &type metadata for SQLiteColumn;
  *(void *)(v6 + 504) = &off_1006493B0;
  uint64_t v18 = swift_allocObject();
  *(void *)(v6 + 472) = v18;
  sub_1001CD8D8((uint64_t)v45, v18 + 16);
  *(void *)(v6 + 536) = &type metadata for SQLiteColumn;
  *(void *)(v6 + 544) = &off_1006493B0;
  uint64_t v19 = swift_allocObject();
  *(void *)(v6 + 512) = v19;
  sub_1001CD8D8((uint64_t)v40, v19 + 16);
  *(void *)(v6 + 576) = &type metadata for SQLiteColumn;
  *(void *)(v6 + 584) = &off_1006493B0;
  uint64_t v20 = swift_allocObject();
  *(void *)(v6 + 552) = v20;
  sub_1001CD8D8((uint64_t)v35, v20 + 16);
  *(void *)(v6 + 616) = &type metadata for SQLiteColumn;
  *(void *)(v6 + 624) = &off_1006493B0;
  uint64_t v21 = swift_allocObject();
  *(void *)(v6 + 592) = v21;
  sub_1001CD8D8((uint64_t)v30, v21 + 16);
  *(void *)(v6 + 656) = &type metadata for SQLiteColumn;
  *(void *)(v6 + 664) = &off_1006493B0;
  uint64_t v22 = swift_allocObject();
  *(void *)(v6 + 632) = v22;
  sub_1001CD8D8((uint64_t)v25, v22 + 16);
  long long v23 = sub_1004AB980(v6);
  swift_setDeallocating();
  sub_1000172F8(&qword_10065C038);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1001CD934((uint64_t)v25);
  sub_1001CD934((uint64_t)v30);
  sub_1001CD934((uint64_t)v35);
  sub_1001CD934((uint64_t)v40);
  sub_1001CD934((uint64_t)v45);
  sub_1001CD934((uint64_t)v52);
  sub_1001CD934((uint64_t)v59);
  sub_1001CD934((uint64_t)v64);
  sub_1001CD934((uint64_t)v69);
  sub_1001CD934((uint64_t)v75);
  sub_1001CD934((uint64_t)v80);
  sub_1001CD934((uint64_t)v87);
  sub_1001CD934((uint64_t)v92);
  sub_1001CD934((uint64_t)v97);
  sub_1001CD934((uint64_t)v102);
  sub_1001CD934((uint64_t)v109);
  return v23;
}

uint64_t sub_1001CD86C()
{
  return sub_1001CD9A4((void (*)(void))&_swift_release, 48);
}

uint64_t sub_1001CD888()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 72)) {
    sub_100014524(v0 + 48);
  }

  return _swift_deallocObject(v0, 97, 7);
}

uint64_t sub_1001CD8D8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001CD934(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001CD988()
{
  return sub_1001CD9A4((void (*)(void))&_swift_bridgeObjectRelease, 49);
}

uint64_t sub_1001CD9A4(void (*a1)(void), uint64_t a2)
{
  a1(*(void *)(v2 + 24));
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v2, a2, 7);
}

uint64_t sub_1001CD9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000172F8((uint64_t *)&unk_10065C9C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001CDA60()
{
  unint64_t result = qword_10065C040;
  if (!qword_10065C040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C040);
  }
  return result;
}

unint64_t sub_1001CDAB4()
{
  unint64_t result = qword_10065C048;
  if (!qword_10065C048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C048);
  }
  return result;
}

uint64_t sub_1001CDB08(void *data, uint64_t a2)
{
  uint64_t v3 = data;
  if (data)
  {
    CC_LONG v4 = a2 - data;
    if (a2 - (uint64_t)data < (uint64_t)&_mh_execute_header) {
      goto LABEL_5;
    }
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  CC_LONG v4 = 0;
LABEL_5:

  return CC_MD5_Update(v2, v3, v4);
}

uint64_t sub_1001CDBA0()
{
  long long v1 = v0[3];
  *(_OWORD *)&c.data[2] = v0[2];
  *(_OWORD *)&c.data[6] = v1;
  *(_OWORD *)&c.data[10] = v0[4];
  *(_OWORD *)&c.data[13] = *(_OWORD *)((char *)v0 + 76);
  long long v2 = v0[1];
  *(_OWORD *)&c.A = *v0;
  *(_OWORD *)&c.Nl = v2;
  CC_MD5_Final(md, &c);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  return 0;
}

uint64_t sub_1001CDC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v10[0] = a3;
  v10[1] = a4;
  uint64_t v12 = a5;
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  uint64_t v6 = sub_1000172F8(&qword_10065C188);
  uint64_t v7 = sub_1000172F8(&qword_10065B260);
  return sub_1001CDD14((uint64_t)v10, (uint64_t)sub_1001CF628, (uint64_t)v11, v6, v7, a5, (uint64_t)&protocol self-conformance witness table for Error, (uint64_t)&v9);
}

uint64_t sub_1001CDD14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = __chkstk_darwin();
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v16(v12, v12 + *(void *)(*(void *)(v15 - 8) + 64), v14);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  }
  return result;
}

uint64_t sub_1001CDE08()
{
  return 1;
}

uint64_t sub_1001CDE18()
{
  return 0x7365747962;
}

uint64_t sub_1001CDE30()
{
  return 0;
}

void sub_1001CDE3C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1001CDE48(uint64_t a1)
{
  unint64_t v2 = sub_1001D06A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001CDE84(uint64_t a1)
{
  unint64_t v2 = sub_1001D06A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001CDEC0@<X0>(uint64_t *a1@<X8>)
{
  int v3 = *(_DWORD *)(v1 + 88);
  long long v4 = *(_OWORD *)(v1 + 16);
  v8[0] = *(_OWORD *)v1;
  v8[1] = v4;
  long long v5 = *(_OWORD *)(v1 + 48);
  v8[2] = *(_OWORD *)(v1 + 32);
  v8[3] = v5;
  v8[4] = *(_OWORD *)(v1 + 64);
  uint64_t v9 = *(void *)(v1 + 80);
  int v10 = v3;
  uint64_t v6 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(void *)(v6 + 16) = 92;
  *(void *)&v11[12] = v8;
  uint64_t v12 = v11;
  sub_1001CF5D0();
  uint64_t result = DataProtocol.copyBytes<A>(to:)();
  *(void *)(v6 + 16) = 92;
  *a1 = v6;
  return result;
}

uint64_t sub_1001CDFB0()
{
  return 64;
}

double sub_1001CDFB8@<D0>(uint64_t a1@<X8>)
{
  memset(&v9, 0, sizeof(v9));
  MAD_MD5_Init(&v9);
  int num = v9.num;
  double result = *(double *)&v9.A;
  long long v4 = *(_OWORD *)&v9.Nl;
  long long v5 = *(_OWORD *)&v9.data[2];
  long long v6 = *(_OWORD *)&v9.data[6];
  long long v7 = *(_OWORD *)&v9.data[10];
  uint64_t v8 = *(void *)&v9.data[14];
  *(_OWORD *)a1 = *(_OWORD *)&v9.A;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(void *)(a1 + 80) = v8;
  *(_DWORD *)(a1 + 88) = num;
  return result;
}

uint64_t sub_1001CE054@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001CDBA0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1001CE07C()
{
  return 16;
}

uint64_t sub_1001CE084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001CDC40(a1, a2, *v3, v3[1], a3);
}

uint64_t sub_1001CE0A4(uint64_t a1)
{
  unint64_t v2 = sub_1001CF4A8();

  return Digest.description.getter(a1, v2);
}

Swift::Int sub_1001CE0E0()
{
  return Hasher._finalize()();
}

uint64_t sub_1001CE160()
{
  return Hasher.combine(bytes:)();
}

Swift::Int sub_1001CE1D0()
{
  return Hasher._finalize()();
}

uint64_t sub_1001CE24C@<X0>(uint64_t *a1@<X8>)
{
  sub_1001CF4A8();
  uint64_t result = Digest.makeIterator()();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1001CE28C()
{
  return 0;
}

uint64_t sub_1001CE294()
{
  return 2;
}

uint64_t sub_1001CE29C()
{
  return sub_1001CF820();
}

unint64_t sub_1001CE2A4(void *a1, unsigned char *a2, uint64_t a3)
{
  return sub_1001CFBC4(a1, a2, a3, *v3, v3[1]);
}

uint64_t sub_1001CE2AC()
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)();
}

uint64_t sub_1001CE2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001CF4A8();

  return static Digest.== infix(_:_:)(a1, a2, a3, v6);
}

void *sub_1001CE324@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1001D0900(a1, &qword_10065C190, (void (*)(void))sub_1001D06A8);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1001CE374(void *a1)
{
  return sub_1001CE524(a1, *v1, &qword_10065C1B0, (void (*)(void))sub_1001D06A8);
}

uint64_t sub_1001CE3B4(void *data, uint64_t a2)
{
  uint64_t v3 = data;
  if (data)
  {
    CC_LONG v4 = a2 - data;
    if (a2 - (uint64_t)data < (uint64_t)&_mh_execute_header) {
      goto LABEL_5;
    }
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  CC_LONG v4 = 0;
LABEL_5:

  return CC_SHA256_Update(v2, v3, v4);
}

uint64_t sub_1001CE44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v12[0] = a3;
  v12[1] = a4;
  v12[2] = a5;
  v12[3] = a6;
  uint64_t v14 = a7;
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v8 = sub_1000172F8(&qword_10065C1C8);
  uint64_t v9 = sub_1000172F8(&qword_10065B260);
  return sub_1001CDD14((uint64_t)v12, (uint64_t)sub_1001D07C8, (uint64_t)v13, v8, v9, a7, (uint64_t)&protocol self-conformance witness table for Error, (uint64_t)&v11);
}

uint64_t sub_1001CE524(void *a1, uint64_t a2, uint64_t *a3, void (*a4)(void))
{
  uint64_t v7 = sub_1000172F8(a3);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  int v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018AC60(a1, a1[3]);
  a4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v12[3] = a2;
  sub_1000172F8(&qword_10065C1A0);
  sub_1001D06FC(&qword_10065C1B8);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

Swift::Int sub_1001CE6A8()
{
  return Hasher._finalize()();
}

void sub_1001CE6EC()
{
}

Swift::Int sub_1001CE714()
{
  return Hasher._finalize()();
}

uint64_t sub_1001CE754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7365747962 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1001CE7E4(uint64_t a1)
{
  unint64_t v2 = sub_1001D0AB0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001CE820(uint64_t a1)
{
  unint64_t v2 = sub_1001D0AB0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001CE85C@<X0>(uint64_t *a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  v8[0] = *(_OWORD *)v1;
  v8[1] = v3;
  long long v4 = *(_OWORD *)(v1 + 48);
  v8[2] = *(_OWORD *)(v1 + 32);
  v8[3] = v4;
  long long v5 = *(_OWORD *)(v1 + 80);
  v8[4] = *(_OWORD *)(v1 + 64);
  _OWORD v8[5] = v5;
  uint64_t v9 = *(void *)(v1 + 96);
  uint64_t v6 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(void *)(v6 + 16) = 104;
  v10[0] = v8;
  v10[1] = v10;
  sub_1001CF5D0();
  uint64_t result = DataProtocol.copyBytes<A>(to:)();
  *(void *)(v6 + 16) = 104;
  *a1 = v6;
  return result;
}

double sub_1001CE944@<D0>(uint64_t a1@<X8>)
{
  memset(&v9, 0, sizeof(v9));
  CC_SHA256_Init(&v9);
  double result = *(double *)v9.count;
  long long v3 = *(_OWORD *)&v9.hash[2];
  long long v4 = *(_OWORD *)&v9.hash[6];
  long long v5 = *(_OWORD *)&v9.wbuf[2];
  long long v6 = *(_OWORD *)&v9.wbuf[6];
  long long v7 = *(_OWORD *)&v9.wbuf[10];
  uint64_t v8 = *(void *)&v9.wbuf[14];
  *(_OWORD *)a1 = *(_OWORD *)v9.count;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v7;
  *(void *)(a1 + 96) = v8;
  return result;
}

double sub_1001CE9D8@<D0>(_OWORD *a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)v8.count = *(_OWORD *)v1;
  *(_OWORD *)&v8.hash[2] = v3;
  long long v4 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)&v8.hash[6] = *(_OWORD *)(v1 + 32);
  *(_OWORD *)&v8.wbuf[2] = v4;
  long long v5 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)&v8.wbuf[6] = *(_OWORD *)(v1 + 64);
  *(_OWORD *)&v8.wbuf[10] = v5;
  *(void *)&v8.wbuf[14] = *(void *)(v1 + 96);
  CC_SHA256_Final(md, &v8);
  sub_1001D0518((uint64_t)md, (uint64_t)v10, (uint64_t)v10);
  sub_1001D0760((uint64_t)v10, (uint64_t)v11);
  if (v12) {
    __break(1u);
  }
  double result = *(double *)v11;
  long long v7 = v11[1];
  *a1 = v11[0];
  a1[1] = v7;
  return result;
}

uint64_t sub_1001CEA94()
{
  return 32;
}

uint64_t sub_1001CEA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001CE44C(a1, a2, *v3, v3[1], v3[2], v3[3], a3);
}

uint64_t sub_1001CEAC0(uint64_t a1)
{
  unint64_t v2 = sub_1001CF0B4();

  return Digest.description.getter(a1, v2);
}

Swift::Int sub_1001CEAFC()
{
  return Hasher._finalize()();
}

uint64_t sub_1001CEB8C()
{
  return Hasher.combine(bytes:)();
}

Swift::Int sub_1001CEBFC()
{
  return Hasher._finalize()();
}

uint64_t sub_1001CEC88@<X0>(uint64_t *a1@<X8>)
{
  sub_1001CF0B4();
  uint64_t result = Digest.makeIterator()();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1001CECC8()
{
  return sub_1001CF66C();
}

unint64_t sub_1001CECD4(void *a1, unsigned char *a2, uint64_t a3)
{
  return sub_1001CF9D0(a1, a2, a3, *v3, v3[1], v3[2], v3[3]);
}

uint64_t sub_1001CECE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001CF0B4();

  return static Digest.== infix(_:_:)(a1, a2, a3, v6);
}

void *sub_1001CED34@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1001D0900(a1, &qword_10065C1D0, (void (*)(void))sub_1001D0AB0);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1001CED84(void *a1)
{
  return sub_1001CE524(a1, *v1, &qword_10065C1E0, (void (*)(void))sub_1001D0AB0);
}

uint64_t sub_1001CEDC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001CF208(a1, a2, a3, (uint64_t (*)(void))sub_1001CEDF0, (uint64_t (*)(void))sub_1001CEE44);
}

unint64_t sub_1001CEDF0()
{
  unint64_t result = qword_10065C080;
  if (!qword_10065C080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C080);
  }
  return result;
}

unint64_t sub_1001CEE44()
{
  unint64_t result = qword_10065C088;
  if (!qword_10065C088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C088);
  }
  return result;
}

unint64_t sub_1001CEE9C()
{
  unint64_t result = qword_10065C090;
  if (!qword_10065C090)
  {
    sub_10017B924(&qword_10065C098);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C090);
  }
  return result;
}

unint64_t sub_1001CEEFC()
{
  unint64_t result = qword_10065C0A0;
  if (!qword_10065C0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C0A0);
  }
  return result;
}

unint64_t sub_1001CEF54()
{
  unint64_t result = qword_10065C0A8;
  if (!qword_10065C0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C0A8);
  }
  return result;
}

unint64_t sub_1001CEFAC()
{
  unint64_t result = qword_10065C0B0;
  if (!qword_10065C0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C0B0);
  }
  return result;
}

unint64_t sub_1001CF004()
{
  unint64_t result = qword_10065C0B8;
  if (!qword_10065C0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C0B8);
  }
  return result;
}

unint64_t sub_1001CF05C()
{
  unint64_t result = qword_10065C0C0;
  if (!qword_10065C0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C0C0);
  }
  return result;
}

unint64_t sub_1001CF0B4()
{
  unint64_t result = qword_10065C0C8;
  if (!qword_10065C0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C0C8);
  }
  return result;
}

unint64_t sub_1001CF10C()
{
  unint64_t result = qword_10065C0D0;
  if (!qword_10065C0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C0D0);
  }
  return result;
}

unint64_t sub_1001CF160(uint64_t a1)
{
  unint64_t result = sub_1001CF188();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001CF188()
{
  unint64_t result = qword_10065C100;
  if (!qword_10065C100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C100);
  }
  return result;
}

uint64_t sub_1001CF1DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001CF208(a1, a2, a3, (uint64_t (*)(void))sub_1001CF244, (uint64_t (*)(void))sub_1001CF298);
}

uint64_t sub_1001CF208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1001CF244()
{
  unint64_t result = qword_10065C108;
  if (!qword_10065C108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C108);
  }
  return result;
}

unint64_t sub_1001CF298()
{
  unint64_t result = qword_10065C110;
  if (!qword_10065C110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C110);
  }
  return result;
}

unint64_t sub_1001CF2F0()
{
  unint64_t result = qword_10065C118;
  if (!qword_10065C118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C118);
  }
  return result;
}

unint64_t sub_1001CF348()
{
  unint64_t result = qword_10065C120;
  if (!qword_10065C120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C120);
  }
  return result;
}

unint64_t sub_1001CF3A0()
{
  unint64_t result = qword_10065C128;
  if (!qword_10065C128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C128);
  }
  return result;
}

unint64_t sub_1001CF3F8()
{
  unint64_t result = qword_10065C130;
  if (!qword_10065C130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C130);
  }
  return result;
}

unint64_t sub_1001CF450()
{
  unint64_t result = qword_10065C138;
  if (!qword_10065C138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C138);
  }
  return result;
}

unint64_t sub_1001CF4A8()
{
  unint64_t result = qword_10065C140;
  if (!qword_10065C140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C140);
  }
  return result;
}

unint64_t sub_1001CF500()
{
  unint64_t result = qword_10065C148;
  if (!qword_10065C148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C148);
  }
  return result;
}

unint64_t sub_1001CF554(uint64_t a1)
{
  unint64_t result = sub_1001CF57C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001CF57C()
{
  unint64_t result = qword_10065C178;
  if (!qword_10065C178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C178);
  }
  return result;
}

unint64_t sub_1001CF5D0()
{
  unint64_t result = qword_10065C180;
  if (!qword_10065C180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C180);
  }
  return result;
}

uint64_t sub_1001CF628(uint64_t a1, uint64_t a2, void *a3)
{
  if (a1) {
    uint64_t v6 = a1 + 16;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(a1, v6);
  if (v4) {
    *a3 = v4;
  }
  return result;
}

uint64_t sub_1001CF66C()
{
  sub_1001CF05C();
  uint64_t result = dispatch thunk of Sequence.makeIterator()();
  unint64_t v1 = v22;
  uint64_t v2 = *(void *)(v21 + 16);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v22 == v2)
  {
    size_t v4 = 0;
LABEL_3:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v5 = v3[3];
    if (v5 < 2) {
      return (uint64_t)v3;
    }
    unint64_t v6 = v5 >> 1;
    BOOL v7 = __OFSUB__(v6, v4);
    unint64_t v8 = v6 - v4;
    if (!v7)
    {
      v3[2] = v8;
      return (uint64_t)v3;
    }
    goto LABEL_31;
  }
  if ((uint64_t)v22 >= v2)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if ((v22 & 0x8000000000000000) == 0)
  {
    if (v22 >= *(void *)(v21 + 16))
    {
LABEL_28:
      __break(1u);
    }
    else
    {
      size_t v4 = 0;
      CC_SHA256_CTX v9 = &_swiftEmptyArrayStorage[4];
      uint64_t v10 = v2 - 1;
      uint64_t v20 = v2 - 1;
      while (1)
      {
        char v11 = *(unsigned char *)(v21 + 32 + v1);
        if (!v4)
        {
          unint64_t v12 = v3[3];
          if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_30;
          }
          int64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
          if (v13 <= 1) {
            uint64_t v14 = 1;
          }
          else {
            uint64_t v14 = v13;
          }
          sub_1000172F8(&qword_100663C60);
          uint64_t v15 = (void *)swift_allocObject();
          size_t v16 = 2 * j__malloc_size(v15) - 64;
          v15[2] = v14;
          v15[3] = v16;
          unint64_t v17 = (unint64_t)(v15 + 4);
          size_t v18 = v3[3] >> 1;
          if (v3[2])
          {
            if (v15 != v3 || v17 >= (unint64_t)v3 + v18 + 32) {
              memmove(v15 + 4, v3 + 4, v18);
            }
            v3[2] = 0;
          }
          CC_SHA256_CTX v9 = (unsigned char *)(v17 + v18);
          size_t v4 = (v16 >> 1) - v18;
          uint64_t result = swift_release();
          uint64_t v3 = v15;
          uint64_t v10 = v20;
        }
        BOOL v7 = __OFSUB__(v4--, 1);
        if (v7) {
          break;
        }
        *CC_SHA256_CTX v9 = v11;
        if (v10 == v1) {
          goto LABEL_3;
        }
        ++v1;
        ++v9;
        if (v1 >= *(void *)(v21 + 16)) {
          goto LABEL_28;
        }
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1001CF820()
{
  sub_1001CF450();
  uint64_t result = dispatch thunk of Sequence.makeIterator()();
  unint64_t v1 = v22;
  uint64_t v2 = *(void *)(v21 + 16);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v22 == v2)
  {
    size_t v4 = 0;
LABEL_3:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v5 = v3[3];
    if (v5 < 2) {
      return (uint64_t)v3;
    }
    unint64_t v6 = v5 >> 1;
    BOOL v7 = __OFSUB__(v6, v4);
    unint64_t v8 = v6 - v4;
    if (!v7)
    {
      v3[2] = v8;
      return (uint64_t)v3;
    }
    goto LABEL_31;
  }
  if ((uint64_t)v22 >= v2)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if ((v22 & 0x8000000000000000) == 0)
  {
    if (v22 >= *(void *)(v21 + 16))
    {
LABEL_28:
      __break(1u);
    }
    else
    {
      size_t v4 = 0;
      CC_SHA256_CTX v9 = &_swiftEmptyArrayStorage[4];
      uint64_t v10 = v2 - 1;
      uint64_t v20 = v2 - 1;
      while (1)
      {
        char v11 = *(unsigned char *)(v21 + 32 + v1);
        if (!v4)
        {
          unint64_t v12 = v3[3];
          if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_30;
          }
          int64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
          if (v13 <= 1) {
            uint64_t v14 = 1;
          }
          else {
            uint64_t v14 = v13;
          }
          sub_1000172F8(&qword_100663C60);
          uint64_t v15 = (void *)swift_allocObject();
          size_t v16 = 2 * j__malloc_size(v15) - 64;
          v15[2] = v14;
          v15[3] = v16;
          unint64_t v17 = (unint64_t)(v15 + 4);
          size_t v18 = v3[3] >> 1;
          if (v3[2])
          {
            if (v15 != v3 || v17 >= (unint64_t)v3 + v18 + 32) {
              memmove(v15 + 4, v3 + 4, v18);
            }
            v3[2] = 0;
          }
          CC_SHA256_CTX v9 = (unsigned char *)(v17 + v18);
          size_t v4 = (v16 >> 1) - v18;
          uint64_t result = swift_release();
          uint64_t v3 = v15;
          uint64_t v10 = v20;
        }
        BOOL v7 = __OFSUB__(v4--, 1);
        if (v7) {
          break;
        }
        *CC_SHA256_CTX v9 = v11;
        if (v10 == v1) {
          goto LABEL_3;
        }
        ++v1;
        ++v9;
        if (v1 >= *(void *)(v21 + 16)) {
          goto LABEL_28;
        }
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
LABEL_33:
  __break(1u);
  return result;
}

unint64_t sub_1001CF9D0(void *a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v38[0] = a4;
  v38[1] = a5;
  v38[2] = a6;
  v38[3] = a7;
  sub_1001CF05C();
  unint64_t result = dispatch thunk of Sequence.makeIterator()();
  if (!a2)
  {
    a3 = 0;
    goto LABEL_48;
  }
  if (!a3)
  {
LABEL_48:
    uint64_t v11 = v36;
    unint64_t v13 = v37;
    goto LABEL_49;
  }
  if (a3 < 0)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v11 = v36;
  unint64_t v12 = v37;
  unint64_t v13 = *(void *)(v36 + 16);
  if (v37 == v13)
  {
    a3 = 0;
    unint64_t v13 = v37;
LABEL_49:
    *a1 = v11;
    a1[1] = v13;
    return a3;
  }
  if (v37 < v13)
  {
    char v14 = *(unsigned char *)(v36 + v37 + 32);
    unint64_t v15 = ++v37;
    *a2 = v14;
    unint64_t v16 = a3 - 1;
    if (a3 != 1)
    {
      unint64_t v17 = v13 + ~v12;
      if (v17 >= v16) {
        unint64_t v18 = a3 - 1;
      }
      else {
        unint64_t v18 = v13 + ~v12;
      }
      if (v18 >= a3 - 2) {
        unint64_t v18 = a3 - 2;
      }
      unint64_t v19 = v18 + 1;
      if (v19 > 0x20)
      {
        unint64_t result = (unint64_t)(a2 + 1);
        if (v17 < v16) {
          unint64_t v16 = v13 + ~v12;
        }
        if (v16 >= a3 - 2) {
          unint64_t v16 = a3 - 2;
        }
        uint64_t v21 = (unint64_t *)&a2[v16 + 2];
        unint64_t v22 = v12 + v36 + 33;
        unint64_t v23 = v12 + v36 + v16 + 34;
        BOOL v25 = (unint64_t)&v37 < v23 && v22 < (unint64_t)v38;
        BOOL v27 = result < v23 && v22 < (unint64_t)v21;
        BOOL v28 = result >= (unint64_t)v38 || &v37 >= v21;
        uint64_t v20 = 1;
        if (v28 && !v25 && !v27)
        {
          uint64_t v29 = v19 & 0xF;
          if ((v19 & 0xF) == 0) {
            uint64_t v29 = 16;
          }
          unint64_t v30 = v19 - v29;
          uint64_t v20 = v19 - v29 + 1;
          long long v31 = &a2[v30];
          v15 += v30;
          long long v32 = a2 + 1;
          unint64_t v33 = v12 + 33;
          do
          {
            *v32++ = *(_OWORD *)(v36 + v33);
            v33 += 16;
            v30 -= 16;
          }
          while (v30);
          unint64_t v37 = v33 - 32;
          a2 = v31;
        }
      }
      else
      {
        uint64_t v20 = 1;
      }
      uint64_t v34 = 0;
      uint64_t v35 = v20 - a3;
      while (v35 + v34)
      {
        if (!(v15 - v13 + v34))
        {
          a3 = v20 + v34;
          goto LABEL_49;
        }
        unint64_t result = *(unsigned __int8 *)(v15 + v36 + 32 + v34);
        unint64_t v37 = v15 + v34 + 1;
        a2[++v34] = result;
        if (!(v35 + v34)) {
          goto LABEL_48;
        }
      }
      __break(1u);
      goto LABEL_52;
    }
    goto LABEL_48;
  }
LABEL_53:
  __break(1u);
  return result;
}

unint64_t sub_1001CFBC4(void *a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v36[0] = a4;
  v36[1] = a5;
  sub_1001CF450();
  unint64_t result = dispatch thunk of Sequence.makeIterator()();
  if (!a2)
  {
    a3 = 0;
    goto LABEL_48;
  }
  if (!a3)
  {
LABEL_48:
    uint64_t v9 = v34;
    unint64_t v11 = v35;
    goto LABEL_49;
  }
  if (a3 < 0)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v9 = v34;
  unint64_t v10 = v35;
  unint64_t v11 = *(void *)(v34 + 16);
  if (v35 == v11)
  {
    a3 = 0;
    unint64_t v11 = v35;
LABEL_49:
    *a1 = v9;
    a1[1] = v11;
    return a3;
  }
  if (v35 < v11)
  {
    char v12 = *(unsigned char *)(v34 + v35 + 32);
    unint64_t v13 = ++v35;
    *a2 = v12;
    unint64_t v14 = a3 - 1;
    if (a3 != 1)
    {
      unint64_t v15 = v11 + ~v10;
      if (v15 >= v14) {
        unint64_t v16 = a3 - 1;
      }
      else {
        unint64_t v16 = v11 + ~v10;
      }
      if (v16 >= a3 - 2) {
        unint64_t v16 = a3 - 2;
      }
      unint64_t v17 = v16 + 1;
      if (v17 > 0x20)
      {
        unint64_t result = (unint64_t)(a2 + 1);
        if (v15 < v14) {
          unint64_t v14 = v11 + ~v10;
        }
        if (v14 >= a3 - 2) {
          unint64_t v14 = a3 - 2;
        }
        unint64_t v19 = (unint64_t *)&a2[v14 + 2];
        unint64_t v20 = v10 + v34 + 33;
        unint64_t v21 = v10 + v34 + v14 + 34;
        BOOL v23 = (unint64_t)&v35 < v21 && v20 < (unint64_t)v36;
        BOOL v25 = result < v21 && v20 < (unint64_t)v19;
        BOOL v26 = result >= (unint64_t)v36 || &v35 >= v19;
        uint64_t v18 = 1;
        if (v26 && !v23 && !v25)
        {
          uint64_t v27 = v17 & 0xF;
          if ((v17 & 0xF) == 0) {
            uint64_t v27 = 16;
          }
          unint64_t v28 = v17 - v27;
          uint64_t v18 = v17 - v27 + 1;
          uint64_t v29 = &a2[v28];
          v13 += v28;
          unint64_t v30 = a2 + 1;
          unint64_t v31 = v10 + 33;
          do
          {
            *v30++ = *(_OWORD *)(v34 + v31);
            v31 += 16;
            v28 -= 16;
          }
          while (v28);
          unint64_t v35 = v31 - 32;
          a2 = v29;
        }
      }
      else
      {
        uint64_t v18 = 1;
      }
      uint64_t v32 = 0;
      uint64_t v33 = v18 - a3;
      while (v33 + v32)
      {
        if (!(v13 - v11 + v32))
        {
          a3 = v18 + v32;
          goto LABEL_49;
        }
        unint64_t result = *(unsigned __int8 *)(v13 + v34 + 32 + v32);
        unint64_t v35 = v13 + v32 + 1;
        a2[++v32] = result;
        if (!(v33 + v32)) {
          goto LABEL_48;
        }
      }
      __break(1u);
      goto LABEL_52;
    }
    goto LABEL_48;
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_1001CFDB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for XPCApp();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  long long v42 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  long long v41 = (char *)&v32 - v13;
  uint64_t v43 = a4;
  uint64_t v16 = *(void *)(a4 + 64);
  uint64_t v15 = a4 + 64;
  uint64_t v14 = v16;
  uint64_t v37 = v15;
  uint64_t v17 = -1 << *(unsigned char *)(v15 - 32);
  if (-v17 < 64) {
    uint64_t v18 = ~(-1 << -(char)v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v14;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_38:
    uint64_t v31 = v37;
    *a1 = v43;
    a1[1] = v31;
    a1[2] = ~v17;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v34 = -1 << *(unsigned char *)(v15 - 32);
  unint64_t v35 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v38 = v9 + 32;
  uint64_t v39 = v9 + 16;
  int64_t v36 = (unint64_t)(63 - v17) >> 6;
  int64_t v33 = v36 - 1;
  uint64_t v40 = a3;
  unint64_t v22 = v41;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v24 = v23 | (v20 << 6);
  while (1)
  {
    ++v21;
    unint64_t v28 = v42;
    uint64_t v29 = *(void *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v42, *(void *)(v43 + 56) + v29 * v24, v8);
    unint64_t v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v22, v28, v8);
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v8);
    a3 = v40;
    if (v21 == v40) {
      goto LABEL_37;
    }
    a2 += v29;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v25 >= v36) {
      goto LABEL_32;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    if (!v26) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v20 = v25;
  }
  v20 += 2;
  if (v25 + 1 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26) {
    goto LABEL_14;
  }
  int64_t v27 = v25 + 2;
  if (v25 + 2 >= v36) {
    goto LABEL_32;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26) {
    goto LABEL_17;
  }
  int64_t v20 = v25 + 3;
  if (v25 + 3 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25 + 2;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26)
  {
LABEL_14:
    int64_t v25 = v20;
    goto LABEL_18;
  }
  int64_t v27 = v25 + 4;
  if (v25 + 4 >= v36)
  {
LABEL_32:
    unint64_t v19 = 0;
LABEL_36:
    a3 = v21;
LABEL_37:
    uint64_t v17 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26)
  {
LABEL_17:
    int64_t v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v36)
    {
      unint64_t v19 = 0;
      int64_t v20 = v33;
      goto LABEL_36;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1001D00FC(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *unint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    int64_t v20 = (void *)(*(void *)(a4 + 56) + 32 * v16);
    uint64_t v21 = v20[1];
    uint64_t v22 = v20[2];
    uint64_t v23 = v20[3];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    _OWORD v11[2] = v22;
    v11[3] = v23;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 4;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1001D0318(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *unint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    int64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1001D0518@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (result) {
    BOOL v4 = a2 - result == 32;
  }
  else {
    BOOL v4 = 0;
  }
  char v5 = !v4;
  long long v6 = 0uLL;
  long long v7 = 0uLL;
  if (v4)
  {
    uint64_t result = UnsafeMutableRawBufferPointer.copyMemory(from:)();
    long long v6 = 0uLL;
    long long v7 = 0uLL;
  }
  *(_OWORD *)a3 = v6;
  *(_OWORD *)(a3 + 16) = v7;
  *(unsigned char *)(a3 + 32) = v5;
  return result;
}

uint64_t sub_1001D05AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memset(&v12, 0, sizeof(v12));
  if (a1)
  {
    if (*(void *)(a1 + 16) != 92)
    {
      uint64_t result = swift_release();
      uint64_t v10 = 0;
      int num = 0;
      long long v5 = 0uLL;
      char v4 = 1;
      long long v6 = 0uLL;
      long long v7 = 0uLL;
      long long v8 = 0uLL;
      long long v9 = 0uLL;
      goto LABEL_7;
    }
    memmove(&v12, (const void *)(a1 + 32), 0x5CuLL);
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = CC_MD5_Init(&v12);
  }
  char v4 = 0;
  long long v5 = *(_OWORD *)&v12.A;
  long long v6 = *(_OWORD *)&v12.Nl;
  long long v7 = *(_OWORD *)&v12.data[2];
  long long v8 = *(_OWORD *)&v12.data[6];
  long long v9 = *(_OWORD *)&v12.data[10];
  uint64_t v10 = *(void *)&v12.data[14];
  int num = v12.num;
LABEL_7:
  *(_OWORD *)a2 = v5;
  *(_OWORD *)(a2 + 16) = v6;
  *(_OWORD *)(a2 + 32) = v7;
  *(_OWORD *)(a2 + 48) = v8;
  *(_OWORD *)(a2 + 64) = v9;
  *(void *)(a2 + 80) = v10;
  *(_DWORD *)(a2 + 88) = num;
  *(unsigned char *)(a2 + 92) = v4;
  return result;
}

unint64_t sub_1001D06A8()
{
  unint64_t result = qword_10065C198;
  if (!qword_10065C198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C198);
  }
  return result;
}

uint64_t sub_1001D06FC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10017B924(&qword_10065C1A0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001D0760(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000172F8(&qword_10065C1C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D07C8(uint64_t a1, uint64_t a2, void *a3)
{
  if (a1) {
    uint64_t v6 = a1 + 32;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(a1, v6);
  if (v4) {
    *a3 = v4;
  }
  return result;
}

uint64_t sub_1001D080C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memset(&v12, 0, sizeof(v12));
  if (a1)
  {
    if (*(void *)(a1 + 16) != 104)
    {
      uint64_t result = swift_release();
      uint64_t v11 = 0;
      long long v5 = 0uLL;
      char v4 = 1;
      long long v6 = 0uLL;
      long long v7 = 0uLL;
      long long v8 = 0uLL;
      long long v9 = 0uLL;
      long long v10 = 0uLL;
      goto LABEL_7;
    }
    memmove(&v12, (const void *)(a1 + 32), 0x68uLL);
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = CC_SHA256_Init(&v12);
  }
  char v4 = 0;
  long long v5 = *(_OWORD *)v12.count;
  long long v6 = *(_OWORD *)&v12.hash[2];
  long long v7 = *(_OWORD *)&v12.hash[6];
  long long v8 = *(_OWORD *)&v12.wbuf[2];
  long long v9 = *(_OWORD *)&v12.wbuf[6];
  long long v10 = *(_OWORD *)&v12.wbuf[10];
  uint64_t v11 = *(void *)&v12.wbuf[14];
LABEL_7:
  *(_OWORD *)a2 = v5;
  *(_OWORD *)(a2 + 16) = v6;
  *(_OWORD *)(a2 + 32) = v7;
  *(_OWORD *)(a2 + 48) = v8;
  *(_OWORD *)(a2 + 64) = v9;
  *(_OWORD *)(a2 + 80) = v10;
  *(void *)(a2 + 96) = v11;
  *(unsigned char *)(a2 + 104) = v4;
  return result;
}

void *sub_1001D0900(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v6 = sub_1000172F8(a2);
  uint64_t v13 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = sub_10018AC60(a1, a1[3]);
  a3();
  long long v10 = v9;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v3)
  {
    sub_100014524((uint64_t)a1);
  }
  else
  {
    sub_1000172F8(&qword_10065C1A0);
    sub_1001D06FC(&qword_10065C1A8);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v6);
    long long v10 = v14;
    sub_100014524((uint64_t)a1);
  }
  return v10;
}

unint64_t sub_1001D0AB0()
{
  unint64_t result = qword_10065C1D8;
  if (!qword_10065C1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C1D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ResumableHash.SHA256State.CodingKeys()
{
  return &type metadata for ResumableHash.SHA256State.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ConfigurationBag.ConfigurationBagError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s28ManagedAppDistributionDaemon13ResumableHashO11SHA256StateV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001D0C0CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ResumableHash.MD5State.CodingKeys()
{
  return &type metadata for ResumableHash.MD5State.CodingKeys;
}

__n128 initializeWithCopy for ResumableHash.MD5(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 76) = *(_OWORD *)(a2 + 76);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ResumableHash.MD5(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 92)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ResumableHash.MD5(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 88) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 92) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ResumableHash.MD5()
{
  return &type metadata for ResumableHash.MD5;
}

__n128 initializeBufferWithCopyOfBuffer for ResumableHash.MD5Digest(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ResumableHash.MD5Digest(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ResumableHash.MD5Digest(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ResumableHash.MD5Digest()
{
  return &type metadata for ResumableHash.MD5Digest;
}

ValueMetadata *type metadata accessor for ResumableHash.MD5State()
{
  return &type metadata for ResumableHash.MD5State;
}

__n128 initializeWithCopy for ResumableHash.SHA256(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ResumableHash.SHA256(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 104)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ResumableHash.SHA256(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 104) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ResumableHash.SHA256()
{
  return &type metadata for ResumableHash.SHA256;
}

ValueMetadata *type metadata accessor for ResumableHash()
{
  return &type metadata for ResumableHash;
}

ValueMetadata *type metadata accessor for ResumableHash.SHA256Digest()
{
  return &type metadata for ResumableHash.SHA256Digest;
}

ValueMetadata *type metadata accessor for ResumableHash.SHA256State()
{
  return &type metadata for ResumableHash.SHA256State;
}

unint64_t sub_1001D0E24()
{
  unint64_t result = qword_10065C1E8;
  if (!qword_10065C1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C1E8);
  }
  return result;
}

unint64_t sub_1001D0E7C()
{
  unint64_t result = qword_10065C1F0;
  if (!qword_10065C1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C1F0);
  }
  return result;
}

unint64_t sub_1001D0ED4()
{
  unint64_t result = qword_10065C1F8;
  if (!qword_10065C1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C1F8);
  }
  return result;
}

unint64_t sub_1001D0F2C()
{
  unint64_t result = qword_10065C200;
  if (!qword_10065C200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C200);
  }
  return result;
}

unint64_t sub_1001D0F84()
{
  unint64_t result = qword_10065C208;
  if (!qword_10065C208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C208);
  }
  return result;
}

unint64_t sub_1001D0FDC()
{
  unint64_t result = qword_10065C210;
  if (!qword_10065C210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065C210);
  }
  return result;
}

uint64_t sub_1001D1034(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  v25[1] = *(void *)(v3 - 8);
  v25[2] = v3;
  __chkstk_darwin(v3);
  v25[3] = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OSEligibilityAnswer();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  long long v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v25 - v10;
  uint64_t v12 = type metadata accessor for OSEligibilityResult();
  v25[0] = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  unint64_t v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  unint64_t v18 = (char *)v25 - v17;
  __chkstk_darwin(v16);
  int64_t v20 = (char *)v25 - v19;
  sub_1001D1528(a2, (uint64_t)&v26);
  if (v27)
  {
    static OSEligibilityResult.result(for:)();
    unint64_t v18 = v15;
  }
  else
  {
    static OSEligibilityResult.result(for:auditToken:)();
  }
  uint64_t v21 = v25[0];
  (*(void (**)(char *, char *, uint64_t))(v25[0] + 32))(v20, v18, v12);
  OSEligibilityResult.answer.getter();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, enum case for OSEligibilityAnswer.eligible(_:), v5);
  char v22 = static OSEligibilityAnswer.== infix(_:_:)();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v6 + 8);
  v23(v9, v5);
  v23(v11, v5);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v12);
  return v22 & 1;
}

uint64_t sub_1001D1528(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000172F8(&qword_10065C310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D1590(uint64_t a1)
{
  sub_1000172F8(&qword_10065C218);
  uint64_t v1 = type metadata accessor for OSEligibilityDomain();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 72);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1005A4B40;
  uint64_t v6 = v5 + v4;
  uint64_t v7 = *(void (**)(unint64_t, void, uint64_t))(v2 + 104);
  v7(v5 + v4, enum case for OSEligibilityDomain.hydrogen(_:), v1);
  uint64_t v8 = v6 + v3;
  v7(v6 + v3, enum case for OSEligibilityDomain.helium(_:), v1);
  uint64_t v9 = v6 + 2 * v3;
  v7(v9, enum case for OSEligibilityDomain.argon(_:), v1);
  uint64_t v10 = v6 + 3 * v3;
  v7(v10, enum case for OSEligibilityDomain.potassium(_:), v1);
  uint64_t v11 = v6 + 4 * v3;
  v7(v11, enum case for OSEligibilityDomain.carbon(_:), v1);
  uint64_t v12 = v6 + 5 * v3;
  v7(v12, enum case for OSEligibilityDomain.lithium(_:), v1);
  if ((sub_1001D1034(v6, a1) & 1) != 0
    || (sub_1001D1034(v8, a1) & 1) != 0
    || (sub_1001D1034(v9, a1) & 1) != 0
    || (sub_1001D1034(v10, a1) & 1) != 0
    || (sub_1001D1034(v11, a1) & 1) != 0)
  {
    char v13 = 1;
  }
  else
  {
    char v13 = sub_1001D1034(v12, a1);
  }
  swift_bridgeObjectRelease();
  return v13 & 1;
}

uint64_t sub_1001D17CC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 96) = v11;
  *(void *)(v8 + 104) = v12;
  *(void *)(v8 + 80) = a7;
  *(void *)(v8 + 88) = a8;
  *(unsigned char *)(v8 + 178) = a6;
  *(unsigned char *)(v8 + 177) = a5;
  *(void *)(v8 + 64) = a2;
  *(void *)(v8 + 72) = a4;
  *(unsigned char *)(v8 + 176) = a3;
  *(void *)(v8 + 56) = a1;
  sub_1000172F8((uint64_t *)&unk_100661AB0);
  *(void *)(v8 + 112) = swift_task_alloc();
  return _swift_task_switch(sub_1001D1880, 0, 0);
}

uint64_t sub_1001D1880()
{
  uint64_t v1 = *(void **)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  char v3 = *(unsigned char *)(v0 + 178);
  char v4 = *(unsigned char *)(v0 + 177);
  uint64_t v5 = *(void **)(v0 + 72);
  uint64_t v7 = *(NSObject **)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 64);
  int v8 = *(unsigned __int8 *)(v0 + 176);
  sub_100017238(*(void *)(v0 + 80), v2, (uint64_t *)&unk_100661AB0);
  id v9 = v5;
  uint64_t v10 = sub_100011088(v7, v6, v8, v5, v4, v3, v2, v1);
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  *(void *)(v0 + 120) = v10;
  *(void *)(v0 + 128) = v11;
  *(void *)(v0 + 136) = v13;
  *(void *)(v0 + 144) = v15;
  if (qword_10065B150 != -1) {
    swift_once();
  }
  uint64_t v17 = *(void *)(v0 + 72);
  *(void *)(v0 + 16) = v10;
  *(void *)(v0 + 24) = v12;
  *(void *)(v0 + 32) = v14;
  *(void *)(v0 + 40) = v16;
  uint64_t v18 = swift_task_alloc();
  *(void *)(v0 + 152) = v18;
  long long v19 = *(_OWORD *)(v0 + 88);
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = v10;
  *(void *)(v18 + 32) = v12;
  *(void *)(v18 + 40) = v14;
  *(void *)(v18 + 48) = v16;
  *(_OWORD *)(v18 + 56) = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  int64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v20;
  sub_1000172F8(&qword_10065C978);
  *int64_t v20 = v0;
  v20[1] = sub_1001D1A8C;
  return TaskLocal.withValue<A>(_:operation:isolation:file:line:)(v0 + 48, v0 + 16, &unk_10065C970, v18, 0, 0, 0xD000000000000033, 0x80000001005B9560);
}

uint64_t sub_1001D1A8C()
{
  uint64_t v2 = *v1;
  v2[21] = v0;
  swift_task_dealloc();
  sub_10000B864(v2[2], v2[3]);
  swift_task_dealloc();
  if (v0) {
    char v3 = sub_1001D1C6C;
  }
  else {
    char v3 = sub_1001D1BD0;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001D1BD0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 48);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1001D1C6C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001D1D00(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, char a7, uint64_t a8)
{
  *(void *)(v8 + 104) = v12;
  *(_OWORD *)(v8 + 88) = v11;
  *(void *)(v8 + 72) = a5;
  *(void *)(v8 + 80) = a8;
  *(unsigned char *)(v8 + 178) = a7;
  *(unsigned char *)(v8 + 177) = a6;
  *(unsigned char *)(v8 + 176) = a4;
  *(void *)(v8 + 56) = a2;
  *(void *)(v8 + 64) = a3;
  *(void *)(v8 + 48) = a1;
  sub_1000172F8((uint64_t *)&unk_100661AB0);
  *(void *)(v8 + 112) = swift_task_alloc();
  return _swift_task_switch(sub_1001D1DBC, 0, 0);
}

uint64_t sub_1001D1DBC()
{
  uint64_t v1 = *(void **)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  char v3 = *(unsigned char *)(v0 + 178);
  char v4 = *(unsigned char *)(v0 + 177);
  uint64_t v5 = *(void **)(v0 + 72);
  uint64_t v7 = *(NSObject **)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 64);
  int v8 = *(unsigned __int8 *)(v0 + 176);
  sub_100017238(*(void *)(v0 + 80), v2, (uint64_t *)&unk_100661AB0);
  id v9 = v5;
  uint64_t v10 = sub_100011088(v7, v6, v8, v5, v4, v3, v2, v1);
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  *(void *)(v0 + 120) = v10;
  *(void *)(v0 + 128) = v11;
  *(void *)(v0 + 136) = v13;
  *(void *)(v0 + 144) = v15;
  if (qword_10065B150 != -1) {
    swift_once();
  }
  uint64_t v17 = *(void *)(v0 + 72);
  *(void *)(v0 + 16) = v10;
  *(void *)(v0 + 24) = v12;
  *(void *)(v0 + 32) = v14;
  *(void *)(v0 + 40) = v16;
  uint64_t v18 = swift_task_alloc();
  *(void *)(v0 + 152) = v18;
  long long v19 = *(_OWORD *)(v0 + 88);
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = v10;
  *(void *)(v18 + 32) = v12;
  *(void *)(v18 + 40) = v14;
  *(void *)(v18 + 48) = v16;
  *(_OWORD *)(v18 + 56) = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  int64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v20;
  type metadata accessor for AppInstallTaskResult();
  *int64_t v20 = v0;
  v20[1] = sub_1001D1FBC;
  uint64_t v21 = *(void *)(v0 + 48);
  return TaskLocal.withValue<A>(_:operation:isolation:file:line:)(v21, v0 + 16, &unk_10065CCF8, v18, 0, 0, 0xD000000000000033, 0x80000001005B9560);
}

uint64_t sub_1001D1FBC()
{
  uint64_t v2 = *v1;
  v2[21] = v0;
  swift_task_dealloc();
  sub_10000B864(v2[2], v2[3]);
  swift_task_dealloc();
  if (v0) {
    char v3 = sub_1001D1C6C;
  }
  else {
    char v3 = sub_10000B32C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001D2100@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(*a1);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1001D2148(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  swift_retain();
  Swift::Int v15 = sub_100010C5C((uint64_t)&off_100637210);
  swift_arrayDestroy();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = &unk_10065CCD8;
  *(void *)(v17 + 24) = v16;
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
  sub_100012670(a1, a2);
  swift_retain();
  sub_100016EDC((uint64_t)"handleLaunchAppRequest", 22, 2, a3, a4, 1, (uint64_t)v13, v15, 1u, (uint64_t)v10, (uint64_t)&unk_10065CCE0, v17, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v10, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v13, &qword_10065C2E0);
}

uint64_t sub_1001D23D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[13] = a6;
  v7[14] = a7;
  uint64_t v8 = type metadata accessor for Logger();
  v7[15] = v8;
  v7[16] = *(void *)(v8 - 8);
  v7[17] = swift_task_alloc();
  return _swift_task_switch(sub_1001D2498, 0, 0);
}

uint64_t sub_1001D2498()
{
  uint64_t v17 = v0;
  uint64_t v1 = v0[13];
  v0[2] = v1;
  v0[6] = v0 + 2;
  v0[7] = v0 + 4;
  unint64_t v2 = v0[14];
  v0[3] = v2;
  sub_100012670(v1, v2);
  v0[8] = &type metadata for Data;
  v0[9] = &type metadata for String;
  v0[10] = sub_1000175C4();
  v0[11] = &protocol witness table for String;
  decodeXPCValues<each A, B>(from:)();
  sub_100013510(v0[2], v0[3]);
  uint64_t v3 = v0[4];
  unint64_t v4 = v0[5];
  v0[18] = v4;
  static Logger.install.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v9 = v0[16];
  uint64_t v8 = v0[17];
  uint64_t v10 = v0[15];
  if (v7)
  {
    uint64_t v14 = v0[17];
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446210;
    swift_bridgeObjectRetain();
    v0[12] = sub_1000143F4(v3, v4, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Handling app launch request for: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v14, v10);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  Swift::Int v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065E9A0 + dword_10065E9A0);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[19] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1001D27C4;
  return v15(v3, v4, 0, 0);
}

uint64_t sub_1001D27C4()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_1001D2944;
  }
  else {
    unint64_t v2 = sub_1001D28D8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001D28D8()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001D2944()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001D29E4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  swift_retain();
  Swift::Int v16 = sub_100010C5C((uint64_t)&off_100637250);
  swift_arrayDestroy();
  uint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = a1;
  v17[3] = a2;
  v17[4] = v4;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = &unk_10065CCB8;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v11, 1, 1, v19);
  sub_100012670(a1, a2);
  id v20 = v4;
  swift_retain();
  sub_100016EDC((uint64_t)"discoverRestores", 16, 2, a3, a4, 1, (uint64_t)v14, v16, 1u, (uint64_t)v11, (uint64_t)&unk_10065CCC0, v18, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_1001D2C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[20] = a7;
  v8[21] = a8;
  v8[18] = a5;
  v8[19] = a6;
  v8[16] = a3;
  v8[17] = a4;
  v8[15] = a2;
  uint64_t v9 = type metadata accessor for DiscoverRestoresRequest();
  v8[22] = v9;
  v8[23] = *(void *)(v9 - 8);
  v8[24] = swift_task_alloc();
  return _swift_task_switch(sub_1001D2D4C, 0, 0);
}

uint64_t sub_1001D2D4C()
{
  uint64_t v1 = v0[19];
  unint64_t v2 = v0[20];
  v0[7] = v1;
  v0[9] = v0 + 7;
  v0[10] = v0[24];
  uint64_t v3 = v0[22];
  v0[8] = v2;
  sub_100012670(v1, v2);
  v0[11] = &type metadata for Data;
  v0[12] = v3;
  v0[13] = sub_1000175C4();
  v0[14] = sub_1000139E4(&qword_10065CCC8, (void (*)(uint64_t))&type metadata accessor for DiscoverRestoresRequest);
  decodeXPCValues<each A, B>(from:)();
  uint64_t v4 = v0[21];
  sub_100013510(v0[7], v0[8]);
  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  os_log_type_t v6 = (void *)swift_task_alloc();
  v0[25] = v6;
  void *v6 = v0;
  v6[1] = sub_1001D2F28;
  v6[3] = v5;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_1001D2F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void **)v4;
  *(void *)(*(void *)v4 + 208) = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v9 = sub_10023E534;
  }
  else
  {
    v8[27] = a3;
    v8[28] = a2;
    v8[29] = a1;
    uint64_t v9 = sub_1001D3064;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_1001D3064()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v13 = *(void *)(v0 + 224);
  uint64_t v14 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v15 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 144);
  long long v12 = *(_OWORD *)(v0 + 120);
  swift_retain();
  uint64_t v6 = DiscoverRestoresRequest.accountID.getter();
  unint64_t v8 = v7;
  unsigned __int8 v9 = DiscoverRestoresRequest.promptToInstallDistributors.getter();
  *(_OWORD *)(v0 + 16) = v12;
  *(void *)(v0 + 32) = v4;
  *(void *)(v0 + 40) = v5;
  *(unsigned char *)(v0 + 48) = 0;
  sub_100376FB4(v1, v13, v14, 2, 0, 0, v6, v8, v9, v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v15);
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1001D31EC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  swift_retain();
  Swift::Int v16 = sub_100010C5C((uint64_t)&off_100637290);
  swift_arrayDestroy();
  uint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = a1;
  v17[3] = a2;
  v17[4] = v4;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = &unk_10065CC90;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v11, 1, 1, v19);
  sub_100012670(a1, a2);
  id v20 = v4;
  swift_retain();
  sub_100016EDC((uint64_t)"prioritizeApp", 13, 2, a3, a4, 1, (uint64_t)v14, v16, 1u, (uint64_t)v11, (uint64_t)&unk_10065CC98, v18, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_1001D3488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[20] = a7;
  v8[21] = a8;
  v8[18] = a5;
  v8[19] = a6;
  v8[16] = a3;
  v8[17] = a4;
  v8[15] = a2;
  uint64_t v9 = type metadata accessor for PrioritizeAppRequest();
  v8[22] = v9;
  v8[23] = *(void *)(v9 - 8);
  v8[24] = swift_task_alloc();
  return _swift_task_switch(sub_1001D3554, 0, 0);
}

uint64_t sub_1001D3554()
{
  uint64_t v1 = v0[19];
  unint64_t v2 = v0[20];
  v0[7] = v1;
  v0[9] = v0 + 7;
  v0[10] = v0[24];
  uint64_t v3 = v0[22];
  v0[8] = v2;
  sub_100012670(v1, v2);
  v0[11] = &type metadata for Data;
  v0[12] = v3;
  v0[13] = sub_1000175C4();
  v0[14] = sub_1000139E4((unint64_t *)&unk_10065CCA0, (void (*)(uint64_t))&type metadata accessor for PrioritizeAppRequest);
  decodeXPCValues<each A, B>(from:)();
  uint64_t v4 = v0[21];
  sub_100013510(v0[7], v0[8]);
  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[25] = v6;
  void *v6 = v0;
  v6[1] = sub_1001D3730;
  v6[3] = v5;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_1001D3730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void **)v4;
  *(void *)(*(void *)v4 + 208) = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v9 = sub_1001D39C4;
  }
  else
  {
    v8[27] = a3;
    v8[28] = a2;
    v8[29] = a1;
    uint64_t v9 = sub_1001D386C;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_1001D386C()
{
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 216);
  uint64_t v13 = *(void *)(v0 + 176);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 144);
  long long v11 = *(_OWORD *)(v0 + 120);
  sub_1000172F8(&qword_10065D360);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1005A3EC0;
  swift_retain();
  *(void *)(v7 + 32) = PrioritizeAppRequest.appToPrioritize.getter();
  *(void *)(v7 + 40) = v8;
  *(_OWORD *)(v0 + 16) = v11;
  *(void *)(v0 + 32) = v6;
  *(void *)(v0 + 40) = v5;
  *(unsigned char *)(v0 + 48) = 0;
  sub_10037D9D4(v7, v2, v1, v12, v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v13);
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1001D39C4()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1001D3A74(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  long long v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  swift_retain();
  Swift::Int v16 = sub_100010C5C((uint64_t)&off_1006372D0);
  swift_arrayDestroy();
  uint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = a1;
  v17[3] = a2;
  v17[4] = v4;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = &unk_10065CC70;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v11, 1, 1, v19);
  sub_100012670(a1, a2);
  id v20 = v4;
  swift_retain();
  sub_100016EDC((uint64_t)"promoteApps", 11, 2, a3, a4, 1, (uint64_t)v14, v16, 1u, (uint64_t)v11, (uint64_t)&unk_10065CC78, v18, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_1001D3D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[20] = a7;
  v8[21] = a8;
  v8[18] = a5;
  v8[19] = a6;
  v8[16] = a3;
  v8[17] = a4;
  v8[15] = a2;
  uint64_t v9 = type metadata accessor for PromoteAppsRequest();
  v8[22] = v9;
  v8[23] = *(void *)(v9 - 8);
  v8[24] = swift_task_alloc();
  return _swift_task_switch(sub_1001D3DDC, 0, 0);
}

uint64_t sub_1001D3DDC()
{
  uint64_t v1 = v0[19];
  unint64_t v2 = v0[20];
  v0[7] = v1;
  v0[9] = v0 + 7;
  v0[10] = v0[24];
  uint64_t v3 = v0[22];
  v0[8] = v2;
  sub_100012670(v1, v2);
  v0[11] = &type metadata for Data;
  v0[12] = v3;
  v0[13] = sub_1000175C4();
  v0[14] = sub_1000139E4(&qword_10065CC80, (void (*)(uint64_t))&type metadata accessor for PromoteAppsRequest);
  decodeXPCValues<each A, B>(from:)();
  uint64_t v4 = v0[21];
  sub_100013510(v0[7], v0[8]);
  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[25] = v6;
  void *v6 = v0;
  v6[1] = sub_1001D3FB8;
  v6[3] = v5;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_1001D3FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void **)v4;
  *(void *)(*(void *)v4 + 208) = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v9 = sub_10023E534;
  }
  else
  {
    v8[27] = a3;
    v8[28] = a2;
    v8[29] = a1;
    uint64_t v9 = sub_1001D40F4;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_1001D40F4()
{
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v11 = *(void *)(v0 + 216);
  uint64_t v12 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 144);
  long long v10 = *(_OWORD *)(v0 + 120);
  swift_retain();
  uint64_t v7 = PromoteAppsRequest.appsToPromote.getter();
  *(_OWORD *)(v0 + 16) = v10;
  *(void *)(v0 + 32) = v5;
  *(void *)(v0 + 40) = v6;
  *(unsigned char *)(v0 + 48) = 0;
  sub_10037D9D4(v7, v1, v2, v11, v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v12);
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1001D4254(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  Swift::Int v16 = (void *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = v4;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = &unk_10065CC38;
  *(void *)(v17 + 24) = v16;
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  swift_retain();
  sub_100012670(a1, a2);
  id v19 = v4;
  swift_retain();
  sub_100016EDC((uint64_t)"DiagnosticRequest", 17, 2, a3, a4, 1, (uint64_t)v14, (uint64_t)&_swiftEmptySetSingleton, 1u, (uint64_t)v11, (uint64_t)&unk_10065CC40, v17, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_1001D44C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[26] = a7;
  v8[27] = a8;
  v8[25] = a6;
  uint64_t v13 = type metadata accessor for Logger();
  v8[28] = v13;
  v8[29] = *(void *)(v13 - 8);
  v8[30] = swift_task_alloc();
  sub_1000172F8(&qword_10065B220);
  v8[31] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for LogKey.Prefix();
  v8[32] = v14;
  v8[33] = *(void *)(v14 - 8);
  v8[34] = swift_task_alloc();
  uint64_t v15 = type metadata accessor for DiagnosticRequestType();
  v8[35] = v15;
  v8[36] = *(void *)(v15 - 8);
  v8[37] = swift_task_alloc();
  uint64_t v16 = type metadata accessor for DiagnosticRequest();
  v8[38] = v16;
  v8[39] = *(void *)(v16 - 8);
  v8[40] = swift_task_alloc();
  v8[41] = swift_task_alloc();
  v8[42] = swift_task_alloc();
  id v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D610 + dword_10065D610);
  uint64_t v17 = (void *)swift_task_alloc();
  v8[43] = v17;
  *uint64_t v17 = v8;
  v17[1] = sub_1001D4758;
  return v19(a2, a3, a4, a5);
}

uint64_t sub_1001D4758()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 352) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return _swift_task_switch(sub_1001D48F8, 0, 0);
  }
}

uint64_t sub_1001D48F8()
{
  long long v78 = v0;
  uint64_t v1 = v0[25];
  v0[15] = v1;
  uint64_t v2 = v0[44];
  uint64_t v3 = v0[38];
  unint64_t v4 = v0[26];
  v0[23] = v0[42];
  v0[16] = v4;
  v0[21] = v0 + 15;
  sub_100012670(v1, v4);
  v0[17] = &type metadata for Data;
  v0[18] = v3;
  v0[19] = sub_1000175C4();
  v0[20] = sub_1000139E4(&qword_10065CC48, (void (*)(uint64_t))&type metadata accessor for DiagnosticRequest);
  decodeXPCValues<each A, B>(from:)();
  if (v2)
  {
    sub_100013510(v0[15], v0[16]);
    sub_1000172F8(&qword_10065C3A0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v6;
    swift_getErrorValue();
    uint64_t v7 = *(void *)(v0[13] - 8);
    swift_task_alloc();
    (*(void (**)(void))(v7 + 16))();
    uint64_t v8 = String.init<A>(describing:)();
    uint64_t v10 = v9;
    swift_task_dealloc();
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = v8;
    *(void *)(inited + 56) = v10;
    sub_10044B428(inited);
    id v11 = objc_allocWithZone((Class)NSError);
    NSString v12 = String._bridgeToObjectiveC()();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v11 initWithDomain:v12 code:-1 userInfo:isa];

    swift_willThrow();
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
LABEL_9:
    return v14();
  }
  uint64_t v16 = v0[36];
  uint64_t v15 = v0[37];
  uint64_t v17 = v0[35];
  sub_100013510(v0[15], v0[16]);
  DiagnosticRequest.requestType.getter();
  int v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v15, v17);
  if (v18 == enum case for DiagnosticRequestType.displayRestoreMarketplaceForPromotion(_:))
  {
    id v19 = (uint64_t *)v0[37];
    uint64_t v20 = v0[31];
    uint64_t v21 = v0[27];
    (*(void (**)(uint64_t *, void))(v0[36] + 96))(v19, v0[35]);
    uint64_t v23 = *v19;
    uint64_t v22 = v19[1];
    uint64_t v24 = *(void *)(*(void *)(*(void *)(v21 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies)
                                + 256)
                    + 216);
    uint64_t v25 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v20, 1, 1, v25);
    uint64_t v26 = (void *)swift_allocObject();
    v26[2] = 0;
    v26[3] = 0;
    v26[4] = v23;
    v26[5] = v22;
    v26[6] = v24;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    char v27 = &unk_10065CC58;
LABEL_7:
    sub_100017544(v20, (uint64_t)v27, (uint64_t)v26);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_8:
    (*(void (**)(void, void))(v0[39] + 8))(v0[42], v0[38]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    goto LABEL_9;
  }
  if (v18 == enum case for DiagnosticRequestType.displayRestoreGenericMarketplace(_:))
  {
    unint64_t v28 = (uint64_t *)v0[37];
    uint64_t v20 = v0[31];
    uint64_t v29 = v0[27];
    (*(void (**)(uint64_t *, void))(v0[36] + 96))(v28, v0[35]);
    uint64_t v31 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v32 = *(void *)(*(void *)(*(void *)(v29 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies)
                                + 256)
                    + 216);
    uint64_t v33 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v20, 1, 1, v33);
    uint64_t v26 = (void *)swift_allocObject();
    v26[2] = 0;
    v26[3] = 0;
    v26[4] = v31;
    v26[5] = v30;
    v26[6] = v32;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    char v27 = &unk_10065CC50;
    goto LABEL_7;
  }
  if (v18 == enum case for DiagnosticRequestType.migrate(_:))
  {
    uint64_t v35 = v0[27];
    (*(void (**)(void, void, void))(v0[33] + 104))(v0[34], enum case for LogKey.Prefix.migrator(_:), v0[32]);
    id v36 = objc_allocWithZone((Class)type metadata accessor for LogKey());
    uint64_t v37 = (void *)LogKey.init(prefix:)();
    sub_100516980(v37);
    uint64_t v38 = *(void *)(v35 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies);
    char v74 = (uint64_t (*)(uint64_t, char))((char *)&dword_1006666E8 + dword_1006666E8);
    uint64_t v39 = (void *)swift_task_alloc();
    v0[45] = v39;
    *uint64_t v39 = v0;
    v39[1] = sub_1001D537C;
    return v74(v38, 1);
  }
  else
  {
    if (v18 != enum case for DiagnosticRequestType.reset(_:))
    {
      uint64_t v53 = v0[41];
      uint64_t v52 = v0[42];
      uint64_t v54 = v0[38];
      uint64_t v55 = v0[39];
      static Logger.install.getter();
      long long v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16);
      v56(v53, v52, v54);
      long long v57 = Logger.logObject.getter();
      os_log_type_t v58 = static os_log_type_t.error.getter();
      BOOL v59 = os_log_type_enabled(v57, v58);
      uint64_t v60 = v0[41];
      if (v59)
      {
        os_log_type_t type = v58;
        uint64_t v61 = v0[39];
        uint64_t v62 = v0[40];
        log = v57;
        uint64_t v63 = v0[38];
        uint64_t v72 = v0[29];
        uint64_t v73 = v0[28];
        uint64_t v76 = v0[30];
        uint64_t v64 = (uint8_t *)swift_slowAlloc();
        uint64_t v77 = swift_slowAlloc();
        *(_DWORD *)uint64_t v64 = 136446210;
        v56(v62, v60, v63);
        uint64_t v65 = String.init<A>(describing:)();
        v0[24] = sub_1000143F4(v65, v66, &v77);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v63);
        _os_log_impl((void *)&_mh_execute_header, log, type, "Handling unknown request: %{public}s", v64, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v76, v73);
      }
      else
      {
        uint64_t v68 = v0[29];
        uint64_t v67 = v0[30];
        uint64_t v69 = v0[28];
        (*(void (**)(void, void))(v0[39] + 8))(v0[41], v0[38]);

        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
      }
      (*(void (**)(void, void))(v0[36] + 8))(v0[37], v0[35]);
      goto LABEL_8;
    }
    uint64_t v40 = v0[31];
    uint64_t v41 = v0[27];
    (*(void (**)(void, void, void))(v0[33] + 104))(v0[34], enum case for LogKey.Prefix.general(_:), v0[32]);
    id v42 = objc_allocWithZone((Class)type metadata accessor for LogKey());
    uint64_t v43 = (void *)LogKey.init(prefix:)();
    v0[46] = v43;
    sub_10000E2EC();
    uint64_t v44 = *(void *)(v41 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies);
    uint64_t v45 = *(void *)(v44 + 256);
    uint64_t v46 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v40, 1, 1, v46);
    unint64_t v47 = (void *)swift_allocObject();
    v47[2] = 0;
    v47[3] = 0;
    v47[4] = v43;
    v47[5] = v45;
    swift_retain_n();
    id v48 = v43;
    sub_100017544(v40, (uint64_t)&unk_10065CC60, (uint64_t)v47);
    swift_release();
    swift_release();
    uint64_t v49 = *(void *)(v44 + 168);
    v0[47] = v49;
    swift_retain();
    uint64_t v50 = swift_task_alloc();
    v0[48] = v50;
    *(void *)(v50 + 16) = v48;
    long long v75 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1006606F0 + dword_1006606F0);
    char v51 = (void *)swift_task_alloc();
    v0[49] = v51;
    *char v51 = v0;
    v51[1] = sub_1001D554C;
    return v75((uint64_t)v75, (uint64_t)sub_10023DF14, v50, v49);
  }
}

uint64_t sub_1001D537C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001D5478, 0, 0);
}

uint64_t sub_1001D5478()
{
  (*(void (**)(void, void))(v0[39] + 8))(v0[42], v0[38]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1001D554C()
{
  *(void *)(*(void *)v1 + 400) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001D5760;
  }
  else {
    uint64_t v2 = sub_1001D5680;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001D5680()
{
  uint64_t v1 = (void *)v0[46];
  swift_release();

  (*(void (**)(void, void))(v0[39] + 8))(v0[42], v0[38]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1001D5760()
{
  uint64_t v1 = (void *)v0[46];
  uint64_t v2 = v0[42];
  uint64_t v3 = v0[38];
  uint64_t v4 = v0[39];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_1000172F8(&qword_10065C3A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v6;
  swift_getErrorValue();
  uint64_t v7 = *(void *)(v0[13] - 8);
  swift_task_alloc();
  (*(void (**)(void))(v7 + 16))();
  uint64_t v8 = String.init<A>(describing:)();
  uint64_t v10 = v9;
  swift_task_dealloc();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v8;
  *(void *)(inited + 56) = v10;
  sub_10044B428(inited);
  id v11 = objc_allocWithZone((Class)NSError);
  NSString v12 = String._bridgeToObjectiveC()();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v11 initWithDomain:v12 code:-1 userInfo:isa];

  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1001D5A10(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = v4;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = &unk_10065CC10;
  *(void *)(v17 + 24) = v16;
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  swift_retain();
  sub_100012670(a1, a2);
  id v19 = v4;
  swift_retain();
  sub_100016EDC((uint64_t)"RestoreRequest", 14, 2, a3, a4, 1, (uint64_t)v14, (uint64_t)&_swiftEmptySetSingleton, 1u, (uint64_t)v11, (uint64_t)&unk_10065CC18, v17, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_1001D5C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[25] = a7;
  v8[26] = a8;
  v8[24] = a6;
  sub_1000172F8(&qword_10065B220);
  v8[27] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for LogKey.Prefix();
  v8[28] = v13;
  v8[29] = *(void *)(v13 - 8);
  v8[30] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for RestoreRequestType();
  v8[31] = v14;
  v8[32] = *(void *)(v14 - 8);
  v8[33] = swift_task_alloc();
  v8[34] = swift_task_alloc();
  uint64_t v15 = type metadata accessor for RestoreRequest();
  v8[35] = v15;
  v8[36] = *(void *)(v15 - 8);
  v8[37] = swift_task_alloc();
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D610 + dword_10065D610);
  uint64_t v16 = (void *)swift_task_alloc();
  v8[38] = v16;
  *uint64_t v16 = v8;
  v16[1] = sub_1001D5EAC;
  return v18(a2, a3, a4, a5);
}

uint64_t sub_1001D5EAC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 312) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return _swift_task_switch(sub_1001D602C, 0, 0);
  }
}

uint64_t sub_1001D602C()
{
  uint64_t v1 = v0[24];
  unint64_t v2 = v0[25];
  v0[15] = v1;
  uint64_t v3 = v0[39];
  uint64_t v4 = v0[35];
  v0[19] = v0[37];
  v0[16] = v2;
  v0[21] = v0 + 15;
  sub_100012670(v1, v2);
  v0[17] = &type metadata for Data;
  v0[18] = v4;
  v0[23] = sub_1000175C4();
  v0[20] = sub_1000139E4(&qword_10065CC20, (void (*)(uint64_t))&type metadata accessor for RestoreRequest);
  decodeXPCValues<each A, B>(from:)();
  sub_100013510(v0[15], v0[16]);
  if (v3)
  {
    sub_1000172F8(&qword_10065C3A0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v6;
    swift_getErrorValue();
    uint64_t v7 = *(void *)(v0[13] - 8);
    swift_task_alloc();
    (*(void (**)(void))(v7 + 16))();
    uint64_t v8 = String.init<A>(describing:)();
    uint64_t v10 = v9;
    swift_task_dealloc();
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = v8;
    *(void *)(inited + 56) = v10;
    sub_10044B428(inited);
    id v11 = objc_allocWithZone((Class)NSError);
    NSString v12 = String._bridgeToObjectiveC()();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v11 initWithDomain:v12 code:-1 userInfo:isa];

    swift_willThrow();
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    uint64_t v16 = v0[33];
    uint64_t v15 = v0[34];
    uint64_t v17 = v0[31];
    uint64_t v18 = v0[32];
    RestoreRequest.requestType.getter();
    (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v16, enum case for RestoreRequestType.reset(_:), v17);
    char v19 = static RestoreRequestType.== infix(_:_:)();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v20(v16, v17);
    v20(v15, v17);
    if (v19)
    {
      uint64_t v21 = v0[27];
      uint64_t v22 = v0[26];
      (*(void (**)(void, void, void))(v0[29] + 104))(v0[30], enum case for LogKey.Prefix.general(_:), v0[28]);
      id v23 = objc_allocWithZone((Class)type metadata accessor for LogKey());
      uint64_t v24 = (void *)LogKey.init(prefix:)();
      sub_10000E2EC();
      uint64_t v25 = *(void *)(*(void *)(v22 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies) + 256);
      uint64_t v26 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v21, 1, 1, v26);
      char v27 = (void *)swift_allocObject();
      v27[2] = 0;
      v27[3] = 0;
      v27[4] = v24;
      v27[5] = v25;
      swift_retain_n();
      id v28 = v24;
      sub_100017544(v21, (uint64_t)&unk_10065CC28, (uint64_t)v27);
      swift_release();
      swift_release();
    }
    (*(void (**)(void, void))(v0[36] + 8))(v0[37], v0[35]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
  }
  return v14();
}

uint64_t sub_1001D653C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a4;
  unint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v6 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for TaskPriority();
  uint64_t v9 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  char v27 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = enum case for LogKey.Prefix.vpp(_:);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 104))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  swift_retain();
  Swift::Int v17 = sub_100010C5C((uint64_t)&off_100637390);
  swift_arrayDestroy();
  static TaskPriority.userInitiated.getter();
  uint64_t v18 = (void *)swift_allocObject();
  uint64_t v19 = a1;
  v18[2] = a1;
  unint64_t v20 = v29;
  v18[3] = v29;
  v18[4] = v4;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = &unk_10065CBC0;
  *(void *)(v21 + 24) = v18;
  uint64_t v22 = v28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v8, 1, 1, v28);
  sub_100012670(v19, v20);
  id v23 = v4;
  swift_retain();
  sub_100016EDC((uint64_t)"handleVPPInstallRequest", 23, 2, v30, v26, 0, (uint64_t)v13, v17, 1u, (uint64_t)v8, (uint64_t)&unk_10065CBC8, v21, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v8, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v27, v22);
  return sub_10001729C((uint64_t)v13, &qword_10065C2E0);
}

uint64_t sub_1001D68AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[34] = a7;
  v8[35] = a8;
  v8[33] = a6;
  uint64_t v9 = type metadata accessor for UUID();
  v8[36] = v9;
  v8[37] = *(void *)(v9 - 8);
  v8[38] = swift_task_alloc();
  sub_1000172F8(&qword_10065CBD0);
  v8[39] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for AppStoreItem(0);
  v8[40] = v10;
  v8[41] = *(void *)(v10 - 8);
  v8[42] = swift_task_alloc();
  sub_1000172F8((uint64_t *)&unk_100661AB0);
  v8[43] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum();
  v8[44] = v11;
  v8[45] = *(void *)(v11 - 8);
  v8[46] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for Logger();
  v8[47] = v12;
  v8[48] = *(void *)(v12 - 8);
  v8[49] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for VPPInstallRequest();
  v8[50] = v13;
  v8[51] = *(void *)(v13 - 8);
  v8[52] = swift_task_alloc();
  v8[53] = swift_task_alloc();
  return _swift_task_switch(sub_1001D6B50, 0, 0);
}

uint64_t sub_1001D6B50()
{
  id v42 = v0;
  uint64_t v1 = v0[33];
  unint64_t v2 = v0[34];
  v0[23] = v1;
  v0[25] = v0 + 23;
  uint64_t v3 = v0[50];
  v0[30] = v0[53];
  v0[24] = v2;
  sub_100012670(v1, v2);
  v0[26] = &type metadata for Data;
  v0[27] = v3;
  v0[28] = sub_1000175C4();
  v0[29] = sub_1000139E4(&qword_10065CBD8, (void (*)(uint64_t))&type metadata accessor for VPPInstallRequest);
  decodeXPCValues<each A, B>(from:)();
  uint64_t v4 = v0[52];
  uint64_t v5 = v0[53];
  uint64_t v6 = v0[50];
  uint64_t v7 = v0[51];
  sub_100013510(v0[23], v0[24]);
  static Logger.vpp.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v4, v5, v6);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v12 = v0[51];
  uint64_t v11 = v0[52];
  uint64_t v13 = v0[49];
  uint64_t v15 = v0[47];
  uint64_t v14 = v0[48];
  if (v10)
  {
    uint64_t v37 = v0[50];
    os_log_type_t type = v9;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446210;
    uint64_t v17 = VPPInstallRequest.appIdentifier.getter();
    uint64_t v40 = v13;
    uint64_t v19 = v18;
    char v21 = v20 & 1;
    uint64_t v38 = v15;
    uint64_t v22 = StoreAppIdentifier.description.getter();
    log = v8;
    unint64_t v24 = v23;
    sub_1001C3EC0(v17, v19, v21);
    v0[32] = sub_1000143F4(v22, v24, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v25(v11, v37);
    _os_log_impl((void *)&_mh_execute_header, log, type, "Handling purchase request: %{public}s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v40, v38);
  }
  else
  {
    uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v25(v0[52], v0[50]);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  v0[54] = v25;
  VPPInstallRequest.accountIdentifier.getter();
  if ((v26 & 1) != 0
    || (id v27 = objc_msgSend(self, "ams_sharedAccountStore"),
        Class isa = Int._bridgeToObjectiveC()().super.super.isa,
        id v29 = objc_msgSend(v27, "ams_iTunesAccountWithDSID:", isa),
        isa,
        v27,
        !v29))
  {
    uint64_t v30 = 0;
    uint64_t v32 = 0;
  }
  else
  {
    uint64_t v30 = sub_1004C4304();
    uint64_t v32 = v31;
  }
  v0[55] = v30;
  v0[56] = v32;
  uint64_t v33 = *(void *)(v0[35] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v34 = (void *)swift_task_alloc();
  v0[57] = v34;
  *uint64_t v34 = v0;
  v34[1] = sub_1001D700C;
  v34[3] = v33;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_1001D700C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[58] = a1;
  v5[59] = a2;
  v5[60] = a3;
  v5[61] = v3;
  swift_task_dealloc();
  if (v3)
  {
    sub_1001C5E34(v5[55], v5[56]);
    uint64_t v6 = sub_1001D73D0;
  }
  else
  {
    uint64_t v6 = sub_1001D712C;
  }
  return _swift_task_switch(v6, 0, 0);
}

void sub_1001D712C()
{
  uint64_t v1 = VPPInstallRequest.evid.getter();
  if (v2)
  {
    unint64_t v8 = 0;
  }
  else
  {
    uint64_t v3 = v1;
    sub_1000172F8(&qword_10065CC00);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
    uint64_t v5 = (void *)AMSBuyParamPropertyExternalVersionId;
    *(void *)(inited + 32) = AMSBuyParamPropertyExternalVersionId;
    *(void *)(v0 + 248) = v3;
    id v6 = v5;
    *(void *)(inited + 40) = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(inited + 48) = v7;
    unint64_t v8 = sub_10044C09C(inited);
  }
  *(void *)(v0 + 496) = v8;
  uint64_t v28 = *(void *)(v0 + 440);
  uint64_t v29 = *(void *)(v0 + 448);
  uint64_t v9 = *(void *)(v0 + 384);
  uint64_t v11 = *(void *)(v0 + 360);
  uint64_t v10 = *(void *)(v0 + 368);
  uint64_t v12 = *(void *)(v0 + 352);
  uint64_t v26 = *(void *)(v0 + 344);
  uint64_t v27 = *(void *)(v0 + 376);
  uint64_t v13 = *(void *)(v0 + 280);
  sub_10018B1DC(0, (unint64_t *)&qword_10065CBE0);
  uint64_t v14 = VPPInstallRequest.appIdentifier.getter();
  id v17 = sub_1001D7EDC(v14, v16, v15 & 1);
  *(void *)(v0 + 504) = v17;
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v10, enum case for ManagedAppDeclaration.InstallBehavior.LicenseEnum.user(_:), v12);
  uint64_t v18 = *(_OWORD **)(v13 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies);
  *(void *)(v0 + 512) = v18;
  long long v19 = v18[5];
  long long v20 = v18[6];
  long long v21 = v18[7];
  *(_OWORD *)(v0 + 111) = *(_OWORD *)((char *)v18 + 127);
  *(_OWORD *)(v0 + 80) = v20;
  *(_OWORD *)(v0 + 96) = v21;
  *(_OWORD *)(v0 + 64) = v19;
  long long v22 = v18[2];
  long long v23 = v18[4];
  *(_OWORD *)(v0 + 32) = v18[3];
  *(_OWORD *)(v0 + 48) = v23;
  *(_OWORD *)(v0 + 16) = v22;
  sub_10018AB28(v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v26, 1, 1, v27);
  uint64_t v24 = swift_task_alloc();
  *(void *)(v0 + 520) = v24;
  *(_OWORD *)(v24 + 16) = 0u;
  *(_OWORD *)(v24 + 32) = 0u;
  *(void *)(v24 + 48) = v28;
  *(void *)(v24 + 56) = v29;
  *(void *)(v24 + 64) = v17;
  *(void *)(v24 + 72) = v10;
  *(void *)(v24 + 80) = v8;
  *(unsigned char *)(v24 + 88) = 1;
  *(void *)(v24 + 96) = v0 + 16;
  *(unsigned char *)(v24 + 104) = 0;
  uint64_t v30 = (char *)&dword_10065C960 + dword_10065C960;
  uint64_t v25 = (void *)swift_task_alloc();
  *(void *)(v0 + 528) = v25;
  *uint64_t v25 = v0;
  v25[1] = sub_1001D74AC;
  __asm { BR              X8; sub_1001D17CC }
}

uint64_t sub_1001D73D0()
{
  (*(void (**)(void, void))(v0 + 432))(*(void *)(v0 + 424), *(void *)(v0 + 400));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001D74AC(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[67] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[43];
  if (v1)
  {
    sub_10001729C(v5, (uint64_t *)&unk_100661AB0);
    swift_task_dealloc();
    id v6 = sub_1001D7998;
  }
  else
  {
    v4[68] = a1;
    swift_task_dealloc();
    sub_10001729C(v5, (uint64_t *)&unk_100661AB0);
    id v6 = sub_1001D7630;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_1001D7630()
{
  uint64_t v1 = *(void *)(v0 + 544);
  char v2 = *(void **)(v0 + 504);
  uint64_t v4 = *(void *)(v0 + 440);
  unint64_t v3 = *(void *)(v0 + 448);
  uint64_t v5 = *(void *)(v0 + 328);
  uint64_t v28 = *(void *)(v0 + 320);
  uint64_t v6 = *(void *)(v0 + 312);
  (*(void (**)(void, void))(*(void *)(v0 + 360) + 8))(*(void *)(v0 + 368), *(void *)(v0 + 352));
  swift_bridgeObjectRelease();
  sub_10018AB94(v0 + 16);
  sub_1001C5E34(v4, v3);

  uint64_t v7 = VPPInstallRequest.appIdentifier.getter();
  uint64_t v9 = v8;
  LOBYTE(v3) = v10 & 1;
  sub_1002D6838(v7, v8, v10 & 1, v1, v6);
  swift_bridgeObjectRelease();
  sub_1001C3EC0(v7, v9, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v28) == 1)
  {
    uint64_t v11 = *(void *)(v0 + 424);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v0 + 432);
    uint64_t v13 = *(void *)(v0 + 400);
    sub_10001729C(*(void *)(v0 + 312), &qword_10065CBD0);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    *uint64_t v14 = 0;
    v14[1] = 0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    v12(v11, v13);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 512);
    uint64_t v18 = *(void *)(v0 + 480);
    uint64_t v19 = *(void *)(v0 + 336);
    uint64_t v20 = *(void *)(v0 + 320);
    uint64_t v21 = *(void *)(v0 + 280);
    long long v29 = *(_OWORD *)(v0 + 464);
    sub_10023D800(*(void *)(v0 + 312), v19, type metadata accessor for AppStoreItem);
    *(void *)(v0 + 552) = *(void *)(*(void *)(v17 + 192) + 32);
    uint64_t v22 = v19 + *(int *)(v20 + 24);
    uint64_t v23 = *(void *)(v22 + 16);
    uint64_t v24 = *(void *)(v22 + 24);
    *(void *)(v0 + 560) = v24;
    swift_retain();
    swift_bridgeObjectRetain();
    VPPInstallRequest.id.getter();
    uint64_t v25 = swift_task_alloc();
    *(void *)(v0 + 568) = v25;
    *(void *)(v25 + 16) = v19;
    *(void *)(v25 + 24) = v21;
    *(_OWORD *)(v25 + 32) = v29;
    *(void *)(v25 + 48) = v18;
    uint64_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 576) = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_1001D7AE4;
    uint64_t v27 = *(void *)(v0 + 304);
    return sub_100459F58(v23, v24, v27, 1, (uint64_t)&unk_10065CBF8, v25);
  }
}

uint64_t sub_1001D7998()
{
  uint64_t v1 = (void *)v0[63];
  uint64_t v3 = v0[55];
  unint64_t v2 = v0[56];
  uint64_t v4 = v0[53];
  uint64_t v8 = (void (*)(uint64_t, uint64_t))v0[54];
  uint64_t v5 = v0[50];
  (*(void (**)(void, void))(v0[45] + 8))(v0[46], v0[44]);
  swift_bridgeObjectRelease();
  sub_10018AB94((uint64_t)(v0 + 2));
  sub_1001C5E34(v3, v2);

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v8(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1001D7AE4()
{
  unint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 584) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[37] + 8))(v2[38], v2[36]);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v0) {
    uint64_t v3 = sub_1001D7DBC;
  }
  else {
    uint64_t v3 = sub_1001D7C8C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001D7C8C()
{
  uint64_t v1 = v0[53];
  unint64_t v2 = (void (*)(uint64_t, uint64_t))v0[54];
  uint64_t v3 = v0[50];
  uint64_t v4 = v0[42];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  sub_10023D9A8(v4, type metadata accessor for AppStoreItem);
  v2(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1001D7DBC()
{
  uint64_t v1 = v0[53];
  unint64_t v2 = (void (*)(uint64_t, uint64_t))v0[54];
  uint64_t v3 = v0[50];
  uint64_t v4 = v0[42];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  sub_10023D9A8(v4, type metadata accessor for AppStoreItem);
  v2(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

id sub_1001D7EDC(uint64_t a1, uint64_t a2, char a3)
{
  id v6 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v7 = v6;
  if (a3)
  {
    id v10 = v6;
    NSString v8 = String._bridgeToObjectiveC()();
    [v10 setParameter:v8 forKey:AMSBuyParamPropertyBundleId];

    sub_1001C3EC0(a1, a2, 1);
  }
  else
  {
    NSString v8 = v6;
    Class isa = UInt64._bridgeToObjectiveC()().super.super.isa;
    [v8 setParameter:isa forKey:AMSBuyParamPropertyItemId];
  }
  return v7;
}

uint64_t sub_1001D7FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  v7[9] = type metadata accessor for AppStorePreflightTask();
  v7[10] = swift_task_alloc();
  return _swift_task_switch(sub_1001D8068, 0, 0);
}

uint64_t sub_1001D8068()
{
  unint64_t v2 = (int *)v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[3];
  uint64_t v6 = sub_1002D6AE4();
  sub_100515B6C(v6, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v1, v5, v8);
  sub_10023D940(v3, v1 + v2[5], type metadata accessor for AppStoreItem);
  uint64_t v9 = v1 + v2[6];
  uint64_t v10 = enum case for AppInstallRequestType.install(_:);
  uint64_t v11 = type metadata accessor for AppInstallRequestType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = *(void *)(v4 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies);
  uint64_t v13 = *(void *)(v12 + 40);
  uint64_t v15 = *(void *)(v12 + 48);
  uint64_t v14 = *(void *)(v12 + 56);
  uint64_t v17 = *(void *)(v12 + 64);
  uint64_t v16 = *(void *)(v12 + 72);
  uint64_t v18 = *(void *)(v12 + 80);
  uint64_t v19 = *(void *)(v12 + 120);
  int v20 = *(_DWORD *)(v12 + 136);
  char v21 = *(unsigned char *)(v12 + 140);
  char v22 = *(unsigned char *)(v12 + 141);
  char v23 = *(unsigned char *)(v12 + 142);
  uint64_t v24 = v1 + v2[7];
  uint64_t v25 = *(void *)(v12 + 128);
  long long v26 = *(_OWORD *)(v12 + 88);
  long long v27 = *(_OWORD *)(v12 + 104);
  *(void *)uint64_t v24 = *(void *)(v12 + 32);
  *(void *)(v24 + 8) = v13;
  *(void *)(v24 + 16) = v15;
  *(void *)(v24 + 24) = v14;
  *(void *)(v24 + 32) = v17;
  *(void *)(v24 + 40) = v16;
  *(void *)(v24 + 48) = v18;
  *(_OWORD *)(v24 + 56) = v26;
  *(_OWORD *)(v24 + 72) = v27;
  *(void *)(v24 + 88) = v19;
  *(void *)(v24 + 96) = v25;
  *(_DWORD *)(v24 + 104) = v20;
  *(unsigned char *)(v24 + 108) = v21;
  *(unsigned char *)(v24 + 109) = v22;
  *(unsigned char *)(v24 + 110) = v23;
  uint64_t v28 = (void *)(v1 + v2[8]);
  *uint64_t v28 = 0;
  v28[1] = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v29 = (void *)swift_task_alloc();
  v0[11] = v29;
  *long long v29 = v0;
  v29[1] = sub_1001D8290;
  uint64_t v30 = v0[6];
  uint64_t v31 = v0[2];
  return sub_1003B2D3C(v31, v30);
}

uint64_t sub_1001D8290()
{
  uint64_t v2 = *(void *)(*v1 + 80);
  uint64_t v3 = *v1;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  sub_10023D9A8(v2, (uint64_t (*)(void))type metadata accessor for AppStorePreflightTask);
  if (v0)
  {
    return _swift_task_switch(sub_1001D8408, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
}

uint64_t sub_1001D8408()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001D84A0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = enum case for LogKey.Prefix.ddm(_:);
  uint64_t v16 = type metadata accessor for LogKey.Prefix();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v14, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  swift_retain();
  Swift::Int v18 = sub_100010C5C((uint64_t)&off_1006373D0);
  swift_arrayDestroy();
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a1;
  v19[3] = a2;
  v19[4] = v4;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = &unk_10065CBA0;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v11, 1, 1, v21);
  sub_100012670(a1, a2);
  id v22 = v4;
  swift_retain();
  sub_100016EDC((uint64_t)"addOrUpdateManagedApp", 21, 2, a3, a4, 0, (uint64_t)v14, v18, 1u, (uint64_t)v11, (uint64_t)&unk_10065CBA8, v20, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_1001D8780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[11] = a7;
  v8[12] = a8;
  v8[10] = a6;
  uint64_t v9 = type metadata accessor for ManagedAppDeclaration();
  v8[13] = v9;
  v8[14] = *(void *)(v9 - 8);
  v8[15] = swift_task_alloc();
  uint64_t updated = type metadata accessor for DDMAppOrUpdateManagedAppRequest();
  v8[16] = updated;
  v8[17] = *(void *)(updated - 8);
  v8[18] = swift_task_alloc();
  return _swift_task_switch(sub_1001D88A0, 0, 0);
}

uint64_t sub_1001D88A0()
{
  uint64_t v1 = v0[10];
  unint64_t v2 = v0[11];
  v0[2] = v1;
  v0[4] = v0 + 2;
  v0[5] = v0[18];
  uint64_t v3 = v0[16];
  v0[3] = v2;
  sub_100012670(v1, v2);
  v0[6] = &type metadata for Data;
  v0[7] = v3;
  v0[8] = sub_1000175C4();
  v0[9] = sub_1000139E4(&qword_10065CBB0, (void (*)(uint64_t))&type metadata accessor for DDMAppOrUpdateManagedAppRequest);
  decodeXPCValues<each A, B>(from:)();
  uint64_t v4 = v0[12];
  sub_100013510(v0[2], v0[3]);
  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[19] = v6;
  void *v6 = v0;
  v6[1] = sub_1001D8A88;
  v6[3] = v5;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_1001D8A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)*v4;
  v6[20] = a1;
  v6[21] = a2;
  v6[22] = v3;
  swift_task_dealloc();
  if (v3)
  {
    unint64_t v7 = sub_1001D8E14;
  }
  else
  {
    v6[23] = a3;
    unint64_t v7 = sub_1001D8BB4;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1001D8BB4()
{
  v0[24] = *(void *)(*(void *)(*(void *)(v0[12]
                                             + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies)
                                 + 240)
                     + 32);
  swift_retain();
  DDMAppOrUpdateManagedAppRequest.app.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[25] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1001D8C90;
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[21];
  uint64_t v5 = v0[15];
  return sub_1001A223C(v5, v3, v4, v2);
}

uint64_t sub_1001D8C90()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[14] + 8))(v2[15], v2[13]);
  swift_release();
  if (v0) {
    uint64_t v3 = sub_1001D8F48;
  }
  else {
    uint64_t v3 = sub_1001D8E9C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001D8E14()
{
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1001D8E9C()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1001D8F48()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1001D9024(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = enum case for LogKey.Prefix.ddm(_:);
  uint64_t v16 = type metadata accessor for LogKey.Prefix();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v14, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  swift_retain();
  Swift::Int v18 = sub_100010C5C((uint64_t)&off_100637410);
  swift_arrayDestroy();
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a1;
  v19[3] = a2;
  v19[4] = v4;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = &unk_10065CB88;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v11, 1, 1, v21);
  sub_100012670(a1, a2);
  id v22 = v4;
  swift_retain();
  sub_100016EDC((uint64_t)"removeManagedApp", 16, 2, a3, a4, 0, (uint64_t)v14, v18, 1u, (uint64_t)v11, (uint64_t)&unk_10065CB90, v20, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_1001D9304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[13] = a7;
  v8[14] = a8;
  v8[12] = a6;
  return _swift_task_switch(sub_1001D9328, 0, 0);
}

uint64_t sub_1001D9328()
{
  uint64_t v1 = v0[12];
  unint64_t v2 = v0[13];
  v0[2] = v1;
  v0[6] = v0 + 2;
  v0[7] = v0 + 4;
  v0[3] = v2;
  sub_100012670(v1, v2);
  v0[8] = &type metadata for Data;
  v0[9] = &type metadata for String;
  v0[10] = sub_1000175C4();
  v0[11] = &protocol witness table for String;
  decodeXPCValues<each A, B>(from:)();
  uint64_t v3 = v0[14];
  sub_100013510(v0[2], v0[3]);
  uint64_t v4 = v0[5];
  v0[15] = v0[4];
  v0[16] = v4;
  uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[17] = v6;
  void *v6 = v0;
  v6[1] = sub_1001D94D8;
  v6[3] = v5;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_1001D94D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)*v4;
  v6[18] = a1;
  v6[19] = a2;
  v6[20] = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v7 = sub_1001D97F0;
  }
  else
  {
    v6[21] = a3;
    uint64_t v7 = sub_1001D9604;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1001D9604()
{
  v0[22] = *(void *)(*(void *)(*(void *)(v0[14]
                                             + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies)
                                 + 240)
                     + 32);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[23] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1001D96C8;
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[19];
  uint64_t v6 = v0[15];
  uint64_t v5 = v0[16];
  return sub_1001B1FB0(v6, v5, v3, v4, v2);
}

uint64_t sub_1001D96C8()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1001D98C0;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_1001D9854;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001D97F0()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001D9854()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001D98C0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001D9980(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  swift_retain();
  Swift::Int v12 = sub_100010C5C((uint64_t)&off_100637450);
  swift_arrayDestroy();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v2;
  uint64_t v14 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v7, 1, 1, v14);
  id v15 = v2;
  sub_100016EDC((uint64_t)"currentDeclarationKeys", 22, 2, a1, a2, 0, (uint64_t)v10, v12, 1u, (uint64_t)v7, (uint64_t)&unk_10065CB38, v13, (uint64_t)&unk_10063C240, (uint64_t)&unk_10065CB48);
  sub_10001729C((uint64_t)v7, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_10001729C((uint64_t)v10, &qword_10065C2E0);
}

uint64_t sub_1001D9BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a7;
  return _swift_task_switch(sub_1001D9BE8, 0, 0);
}

uint64_t sub_1001D9BE8()
{
  v0[4] = *(void *)(*(void *)(*(void *)(v0[3] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies)
                                + 240)
                    + 32);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1001D9C9C;
  return sub_1001B6840();
}

uint64_t sub_1001D9C9C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1001D9DF0;
  }
  else
  {
    swift_release();
    *(void *)(v4 + 56) = a1;
    uint64_t v5 = sub_1001D9DCC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001D9DCC()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D9DF0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001D9E88(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  swift_retain();
  Swift::Int v16 = sub_100010C5C((uint64_t)&off_100637490);
  swift_arrayDestroy();
  uint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = a1;
  v17[3] = a2;
  v17[4] = v4;
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  sub_100012670(a1, a2);
  id v19 = v4;
  sub_100016EDC((uint64_t)"getDeclarationStatus", 20, 2, a3, a4, 0, (uint64_t)v14, v16, 1u, (uint64_t)v11, (uint64_t)&unk_10065CAD0, (uint64_t)v17, (uint64_t)&unk_10063C1C8, (uint64_t)&unk_10065CAE0);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_1001DA0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[12] = a8;
  v8[13] = v14;
  v8[10] = a1;
  v8[11] = a7;
  sub_1000172F8(&qword_10065CB18);
  v8[14] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for ManagedAppStatus();
  v8[15] = v9;
  v8[16] = *(void *)(v9 - 8);
  v8[17] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for LogKey.Prefix();
  v8[18] = v10;
  v8[19] = *(void *)(v10 - 8);
  v8[20] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for DDMDeclarationStatusRequest();
  v8[21] = v11;
  v8[22] = *(void *)(v11 - 8);
  v8[23] = swift_task_alloc();
  return _swift_task_switch(sub_1001DA29C, 0, 0);
}

uint64_t sub_1001DA29C()
{
  uint64_t v1 = v0[11];
  unint64_t v2 = v0[12];
  v0[2] = v1;
  v0[4] = v0 + 2;
  v0[5] = v0[23];
  uint64_t v3 = v0[21];
  v0[3] = v2;
  sub_100012670(v1, v2);
  v0[6] = &type metadata for Data;
  v0[7] = v3;
  v0[8] = sub_1000175C4();
  v0[9] = sub_1000139E4(&qword_10065CB20, (void (*)(uint64_t))&type metadata accessor for DDMDeclarationStatusRequest);
  decodeXPCValues<each A, B>(from:)();
  uint64_t v4 = v0[13];
  sub_100013510(v0[2], v0[3]);
  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[24] = v6;
  void *v6 = v0;
  v6[1] = sub_1001DA49C;
  v6[3] = v5;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_1001DA49C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[25] = a1;
  v5[26] = a2;
  v5[27] = a3;
  v5[28] = v3;
  swift_task_dealloc();
  if (v3) {
    uint64_t v6 = sub_1001DA8F4;
  }
  else {
    uint64_t v6 = sub_1001DA5B4;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_1001DA5B4()
{
  uint64_t v1 = DDMDeclarationStatusRequest.declarationKey.getter();
  v0[29] = v2;
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v4 = v2;
    v0[30] = *(void *)(*(void *)(*(void *)(v0[13]
                                               + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies)
                                   + 240)
                       + 32);
    swift_retain();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[31] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1001DA7A4;
    uint64_t v6 = v0[14];
    return sub_1001BABEC(v6, v3, v4);
  }
  else
  {
    uint64_t v8 = v0[13];
    (*(void (**)(void, void, void))(v0[19] + 104))(v0[20], enum case for LogKey.Prefix.ddm(_:), v0[18]);
    id v9 = objc_allocWithZone((Class)type metadata accessor for LogKey());
    uint64_t v10 = LogKey.init(prefix:)();
    v0[33] = v10;
    v0[34] = *(void *)(*(void *)(*(void *)(v8 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies)
                                   + 240)
                       + 32);
    uint64_t v12 = (uint64_t (*)(uint64_t))((char *)&dword_10065BD10 + dword_10065BD10);
    swift_retain();
    uint64_t v11 = (void *)swift_task_alloc();
    v0[35] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1001DA99C;
    return v12(v10);
  }
}

uint64_t sub_1001DA7A4()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1001DAE24;
  }
  else {
    uint64_t v2 = sub_1001DAC8C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001DA8F4()
{
  (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1001DA99C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 288) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1001DABB4;
  }
  else
  {
    swift_release();
    *(void *)(v4 + 296) = a1;
    uint64_t v5 = sub_1001DAACC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001DAACC()
{
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v5 = *(void **)(v0 + 80);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *uint64_t v5 = v1;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1001DABB4()
{
  uint64_t v1 = (void *)v0[33];
  uint64_t v3 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v4 = v0[21];
  swift_release();

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1001DAC8C()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[14];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10001729C(v3, &qword_10065CB18);
    uint64_t v4 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v5 = v0[17];
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v6(v5, v3, v1);
    sub_1000172F8(&qword_10065CB28);
    unint64_t v7 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v4 = (void *)swift_allocObject();
    *((_OWORD *)v4 + 1) = xmmword_1005A3EC0;
    v6((uint64_t)v4 + v7, v5, v1);
  }
  uint64_t v9 = v0[22];
  uint64_t v8 = v0[23];
  uint64_t v10 = v0[21];
  uint64_t v11 = (void *)v0[10];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *uint64_t v11 = v4;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1001DAE24()
{
  uint64_t v2 = v0[22];
  uint64_t v1 = v0[23];
  uint64_t v3 = v0[21];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1001DAF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a6;
  return _swift_task_switch(sub_1001DAF38, 0, 0);
}

uint64_t sub_1001DAF38()
{
  v0[3] = *(void *)(*(void *)(v0[2] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies) + 184);
  uint64_t v3 = (uint64_t (*)(void))((char *)&dword_100660818 + dword_100660818);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1001DB01C;
  return v3();
}

uint64_t sub_1001DB01C()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    swift_release();
    uint64_t v1 = sub_10023E52C;
  }
  else
  {
    swift_release();
    uint64_t v1 = sub_1001DB164;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_1001DB164()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001DB17C(void **a1)
{
  return sub_1002558EC(*a1);
}

uint64_t sub_1001DB448(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = enum case for LogKey.Prefix.update(_:);
  uint64_t v16 = type metadata accessor for LogKey.Prefix();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v14, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  swift_retain();
  Swift::Int v18 = sub_100010C5C((uint64_t)&off_1006374D0);
  swift_arrayDestroy();
  id v19 = (void *)swift_allocObject();
  v19[2] = a1;
  v19[3] = a2;
  v19[4] = v4;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = &unk_10065CA90;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v11, 1, 1, v21);
  sub_100012670(a1, a2);
  id v22 = v4;
  swift_retain();
  sub_100016EDC((uint64_t)"pollForMediaAPIUpdates", 22, 2, a3, a4, 0, (uint64_t)v14, v18, 1u, (uint64_t)v11, (uint64_t)&unk_10065CA98, v20, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_1001DB728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[11] = a7;
  v8[12] = a8;
  v8[10] = a6;
  sub_1000172F8((uint64_t *)&unk_100661AB0);
  v8[13] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DDMPollForUpdatesRequest();
  v8[14] = v9;
  v8[15] = *(void *)(v9 - 8);
  v8[16] = swift_task_alloc();
  return _swift_task_switch(sub_1001DB81C, 0, 0);
}

uint64_t sub_1001DB81C()
{
  uint64_t v1 = v0[10];
  unint64_t v2 = v0[11];
  v0[2] = v1;
  v0[4] = v0 + 2;
  v0[5] = v0[16];
  uint64_t v3 = v0[14];
  v0[3] = v2;
  sub_100012670(v1, v2);
  v0[6] = &type metadata for Data;
  v0[7] = v3;
  v0[8] = sub_1000175C4();
  v0[9] = sub_1000139E4(&qword_10065CAA0, (void (*)(uint64_t))&type metadata accessor for DDMPollForUpdatesRequest);
  decodeXPCValues<each A, B>(from:)();
  uint64_t v4 = v0[12];
  sub_100013510(v0[2], v0[3]);
  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[17] = v6;
  void *v6 = v0;
  v6[1] = sub_1001DBA04;
  v6[3] = v5;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_1001DBA04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)*v4;
  v6[18] = a1;
  v6[19] = a2;
  v6[20] = v3;
  swift_task_dealloc();
  if (v3)
  {
    unint64_t v7 = sub_1001DBE08;
  }
  else
  {
    v6[21] = a3;
    unint64_t v7 = sub_1001DBB30;
  }
  return _swift_task_switch(v7, 0, 0);
}

void sub_1001DBB30()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(*(void *)(v0 + 96) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies);
  long long v8 = *(_OWORD *)(v0 + 144);
  char v4 = DDMPollForUpdatesRequest.shouldInitiateUpdates.getter();
  uint64_t v5 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 176) = v6;
  *(_OWORD *)(v6 + 16) = v8;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  *(unsigned char *)(v6 + 48) = v4 & 1;
  uint64_t v9 = (char *)&dword_10065C340 + dword_10065C340;
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v7;
  *unint64_t v7 = v0;
  v7[1] = sub_1001DBCB0;
  __asm { BR              X0; sub_100008B8C }
}

uint64_t sub_1001DBCB0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  sub_10001729C(*(void *)(v2 + 104), (uint64_t *)&unk_100661AB0);
  swift_task_dealloc();
  if (v0) {
    uint64_t v3 = sub_1001DBF3C;
  }
  else {
    uint64_t v3 = sub_1001DBE90;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001DBE08()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1001DBE90()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  char v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1001DBF3C()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  char v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1001DC018(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  swift_retain();
  Swift::Int v16 = sub_100010C5C((uint64_t)&off_100637510);
  swift_arrayDestroy();
  uint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = a1;
  v17[3] = a2;
  v17[4] = v4;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = &unk_10065CA68;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v11, 1, 1, v19);
  sub_100012670(a1, a2);
  id v20 = v4;
  swift_retain();
  sub_100016EDC((uint64_t)"Install Enterprise Manifest", 27, 2, a3, a4, 0, (uint64_t)v14, v16, 1u, (uint64_t)v11, (uint64_t)&unk_10065CA70, v18, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_1001DC2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = a7;
  v8[16] = a8;
  v8[14] = a6;
  sub_1000172F8(&qword_10065BCD0);
  v8[17] = swift_task_alloc();
  v8[18] = type metadata accessor for EnterpriseIngestTask(0);
  v8[19] = swift_task_alloc();
  v8[20] = swift_task_alloc();
  type metadata accessor for URL();
  v8[21] = swift_task_alloc();
  type metadata accessor for EnterpriseApp();
  v8[22] = swift_task_alloc();
  v8[23] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for LogKey.Prefix();
  v8[24] = v9;
  v8[25] = *(void *)(v9 - 8);
  v8[26] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for InstallEnterpriseManifestRequest();
  v8[27] = v10;
  v8[28] = *(void *)(v10 - 8);
  v8[29] = swift_task_alloc();
  return _swift_task_switch(sub_1001DC4AC, 0, 0);
}

uint64_t sub_1001DC4AC()
{
  uint64_t v1 = v0[14];
  unint64_t v2 = v0[15];
  v0[6] = v1;
  v0[8] = v0 + 6;
  uint64_t v3 = v0[27];
  v0[10] = v0[29];
  v0[7] = v2;
  sub_100012670(v1, v2);
  v0[9] = &type metadata for Data;
  v0[13] = v3;
  v0[11] = sub_1000175C4();
  v0[12] = sub_1000139E4(&qword_10065CA80, (void (*)(uint64_t))&type metadata accessor for InstallEnterpriseManifestRequest);
  decodeXPCValues<each A, B>(from:)();
  uint64_t v5 = v0[25];
  uint64_t v4 = v0[26];
  uint64_t v6 = v0[24];
  sub_100013510(v0[6], v0[7]);
  uint64_t v7 = enum case for LogKey.Prefix.ddm(_:);
  long long v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 104);
  v0[30] = v8;
  v0[31] = (v5 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v8(v4, v7, v6);
  uint64_t v9 = (objc_class *)type metadata accessor for LogKey();
  v0[32] = v9;
  id v10 = objc_allocWithZone(v9);
  uint64_t v11 = (void *)LogKey.init(prefix:)();
  v0[33] = v11;
  InstallEnterpriseManifestRequest.manifestURL.getter();
  id v12 = [self ephemeralSessionConfiguration];
  [v12 setHTTPShouldSetCookies:0];
  [v12 setHTTPCookieAcceptPolicy:1];
  [v12 setRequestCachePolicy:1];
  sub_100373694(1);
  id v13 = [self sessionWithConfiguration:v12];

  type metadata accessor for PlainHTTP();
  uint64_t inited = swift_initStackObject();
  v0[34] = inited;
  *(unsigned char *)(inited + 24) = 1;
  *(void *)(inited + 16) = v13;
  id v15 = v11;
  Swift::Int v16 = (void *)swift_task_alloc();
  v0[35] = v16;
  *Swift::Int v16 = v0;
  v16[1] = sub_1001DC800;
  uint64_t v17 = v0[23];
  uint64_t v18 = v0[21];
  return sub_100280844(v17, v18, inited, (uint64_t)v15);
}

uint64_t sub_1001DC800()
{
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_1001DCD6C;
  }
  else {
    unint64_t v2 = sub_1001DC914;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001DC914()
{
  uint64_t v1 = (void (*)(uint64_t, void, uint64_t))v0[30];
  id v15 = (objc_class *)v0[32];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[24];
  uint64_t v4 = v0[22];
  uint64_t v5 = v0[19];
  uint64_t v16 = v0[20];
  uint64_t v7 = v0[17];
  uint64_t v6 = (int *)v0[18];
  uint64_t v8 = v0[16];
  sub_10023D940(v0[23], v4, (uint64_t (*)(void))type metadata accessor for EnterpriseApp);
  static Platform.iOS.getter();
  uint64_t v9 = type metadata accessor for Platform();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 0, 1, v9);
  uint64_t v10 = *(void *)(*(void *)(v8 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies) + 232);
  sub_10023D940(v4, v5, (uint64_t (*)(void))type metadata accessor for EnterpriseApp);
  sub_100017238(v7, v5 + v6[5], &qword_10065BCD0);
  *(void *)(v5 + v6[6]) = v10;
  v1(v2, enum case for LogKey.Prefix.manifest(_:), v3);
  id v11 = objc_allocWithZone(v15);
  swift_retain();
  uint64_t v12 = LogKey.init(prefix:)();
  sub_10001729C(v7, &qword_10065BCD0);
  sub_10023D9A8(v4, (uint64_t (*)(void))type metadata accessor for EnterpriseApp);
  *(void *)(v5 + v6[7]) = v12;
  sub_10023D800(v5, v16, type metadata accessor for EnterpriseIngestTask);
  id v13 = (void *)swift_task_alloc();
  v0[37] = v13;
  *id v13 = v0;
  v13[1] = sub_1001DCB28;
  return sub_10027CE34();
}

uint64_t sub_1001DCB28()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001DCE5C;
  }
  else {
    uint64_t v2 = sub_1001DCC3C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001DCC3C()
{
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 160);

  sub_10023D9A8(v5, type metadata accessor for EnterpriseIngestTask);
  sub_10023D9A8(v4, (uint64_t (*)(void))type metadata accessor for EnterpriseApp);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1001DCD6C()
{
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 216);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1001DCE5C()
{
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 160);

  sub_10023D9A8(v5, type metadata accessor for EnterpriseIngestTask);
  sub_10023D9A8(v4, (uint64_t (*)(void))type metadata accessor for EnterpriseApp);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1001DCFC0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = enum case for LogKey.Prefix.ddm(_:);
  uint64_t v16 = type metadata accessor for LogKey.Prefix();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v14, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  swift_retain();
  Swift::Int v18 = sub_100010C5C((uint64_t)&off_100637550);
  swift_arrayDestroy();
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a1;
  v19[3] = a2;
  v19[4] = v4;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = &unk_10065CA00;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v11, 1, 1, v21);
  sub_100012670(a1, a2);
  id v22 = v4;
  swift_retain();
  sub_100016EDC((uint64_t)"Install ManagedApp", 18, 2, a3, a4, 0, (uint64_t)v14, v18, 1u, (uint64_t)v11, (uint64_t)&unk_10065CA08, v20, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_1001DD2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[132] = a8;
  v8[131] = a7;
  v8[130] = a6;
  uint64_t v9 = type metadata accessor for Logger();
  v8[133] = v9;
  v8[134] = *(void *)(v9 - 8);
  v8[135] = swift_task_alloc();
  v8[136] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for ManagedAppInstallRequest();
  v8[137] = v10;
  v8[138] = *(void *)(v10 - 8);
  v8[139] = swift_task_alloc();
  return _swift_task_switch(sub_1001DD3D4, 0, 0);
}

uint64_t sub_1001DD3D4()
{
  id v36 = v0;
  uint64_t v1 = v0[137];
  unint64_t v2 = v0[131];
  uint64_t v3 = v0[130];
  v0[127] = v0[139];
  v0[109] = v3;
  v0[110] = v2;
  v0[126] = v0 + 109;
  sub_100012670(v3, v2);
  v0[124] = &type metadata for Data;
  swift_allocateMetadataPack();
  v0[123] = v1;
  swift_allocateMetadataPack();
  v0[117] = sub_1000175C4();
  swift_allocateWitnessTablePack();
  v0[111] = sub_1000139E4(&qword_10065CA10, (void (*)(uint64_t))&type metadata accessor for ManagedAppInstallRequest);
  swift_allocateWitnessTablePack();
  decodeXPCValues<each A, B>(from:)();
  sub_100013510(v0[109], v0[110]);
  uint64_t v5 = ManagedAppInstallRequest.declarationIdentifier.getter();
  v0[140] = v5;
  v0[141] = v6;
  if (v6)
  {
    uint64_t v7 = v5;
    unint64_t v8 = v6;
    uint64_t v9 = (void *)v0[132];
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v9;
    uint64_t v11 = swift_allocObject();
    v0[142] = v11;
    *(void *)(v11 + 16) = &unk_10065CA20;
    *(void *)(v11 + 24) = v10;
    id v12 = v9;
    swift_retain();
    sub_10017B924(&qword_10065CA38);
    swift_asyncLet_begin();
    static Logger.ddm.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v16 = v0[135];
    uint64_t v17 = v0[134];
    uint64_t v18 = v0[133];
    if (v15)
    {
      uint64_t v34 = v0[135];
      uint64_t v33 = v0[133];
      uint64_t v19 = swift_slowAlloc();
      uint64_t v32 = (void *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 138412546;
      uint64_t v20 = sub_1005163F0();
      v0[128] = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v32 = v20;
      *(_WORD *)(v19 + 12) = 2082;
      swift_bridgeObjectRetain();
      v0[129] = sub_1000143F4(v7, v8, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "[%@] Requested install of %{public}s", (uint8_t *)v19, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v34, v33);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    }
    uint64_t v30 = *(void *)(v0[132] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies);
    v0[143] = v30;
    uint64_t v31 = *(void *)(*(void *)(v30 + 240) + 16);
    v0[144] = v31;
    swift_retain();
    return _swift_task_switch(sub_1001DD9FC, v31, 0);
  }
  else
  {
    static Logger.xpc.getter();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v21, v22))
    {
      char v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = (void *)swift_slowAlloc();
      *(_DWORD *)char v23 = 138412290;
      uint64_t v25 = sub_1005163F0();
      v0[125] = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v24 = v25;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "[%@] validateHostApp succeeded", v23, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v26 = v0[136];
    uint64_t v27 = v0[134];
    uint64_t v28 = v0[133];

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    (*(void (**)(void, void))(v0[138] + 8))(v0[139], v0[137]);
    sub_10023C7B4(0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v29 = (uint64_t (*)(void))v0[1];
    return v29();
  }
}

uint64_t sub_1001DD9FC()
{
  uint64_t v1 = v0[141];
  uint64_t v2 = v0[140];
  uint64_t v3 = *(void *)(v0[144] + 112);
  v0[145] = v3;
  uint64_t v4 = swift_task_alloc();
  v0[146] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = swift_task_alloc();
  v0[147] = v5;
  *(void *)(v5 + 16) = sub_10023CA38;
  *(void *)(v5 + 24) = v4;
  unint64_t v8 = (char *)&dword_100660660 + dword_100660660;
  swift_retain();
  unint64_t v6 = (void *)swift_task_alloc();
  v0[148] = v6;
  void *v6 = v0;
  v6[1] = sub_1001DDB1C;
  return ((uint64_t (*)(uint64_t (*)@<X0>(void *@<X0>, uint64_t *@<X8>), uint64_t, uint64_t))v8)(sub_1001C3EFC, v5, v3);
}

uint64_t sub_1001DDB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[149] = a1;
  v5[150] = a2;
  v5[151] = v2;
  swift_task_dealloc();
  uint64_t v6 = v4[144];
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  if (v2) {
    uint64_t v7 = sub_1001DDFF4;
  }
  else {
    uint64_t v7 = sub_1001DDCB4;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1001DDCB4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1001DDD28, 0, 0);
}

uint64_t sub_1001DDD28()
{
  uint64_t v1 = v0[150];
  uint64_t v2 = v0[149];
  uint64_t v3 = *(void *)(*(void *)(v0[143] + 200) + 16);
  v0[152] = v3;
  uint64_t v4 = swift_task_alloc();
  v0[153] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = swift_task_alloc();
  v0[154] = v5;
  *(void *)(v5 + 16) = sub_10023CA54;
  *(void *)(v5 + 24) = v4;
  unint64_t v8 = (char *)&dword_100660810 + dword_100660810;
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[155] = v6;
  void *v6 = v0;
  v6[1] = sub_1001DDE4C;
  return ((uint64_t (*)(uint64_t (*)@<X0>(void *@<X0>, unsigned char *@<X8>), uint64_t, uint64_t))v8)(sub_10023CA5C, v5, v3);
}

uint64_t sub_1001DDE4C(char a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = sub_1001DE700;
  }
  else
  {
    swift_release();
    *(unsigned char *)(v4 + 761) = a1 & 1;
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = sub_1001DE158;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001DDFF4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_asyncLet_finish(v0 + 16, v0 + 808, sub_1001DE080, v0 + 896);
}

uint64_t sub_1001DE080()
{
  return _swift_task_switch(sub_1001DE09C, 0, 0);
}

uint64_t sub_1001DE09C()
{
  uint64_t v1 = v0[139];
  uint64_t v2 = v0[138];
  uint64_t v3 = v0[137];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1001DE158()
{
  char v12 = *(unsigned char *)(v0 + 761);
  uint64_t v1 = *(void *)(v0 + 1200);
  uint64_t v2 = *(void *)(v0 + 1192);
  uint64_t v3 = *(void *)(*(void *)(v0 + 1144) + 232);
  *(void *)(v0 + 1248) = v3;
  swift_retain();
  char v4 = ManagedAppInstallRequest.userInitiated.getter();
  uint64_t v5 = sub_1005163F0();
  *(void *)(v0 + 1256) = v5;
  id v6 = [self ephemeralSessionConfiguration];
  [v6 setHTTPShouldSetCookies:0];
  [v6 setHTTPCookieAcceptPolicy:1];
  [v6 setRequestCachePolicy:1];
  sub_100373694(1);
  id v7 = [self sessionWithConfiguration:v6];

  type metadata accessor for PlainHTTP();
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 1264) = v8;
  *(unsigned char *)(v8 + 24) = 1;
  *(void *)(v8 + 16) = v7;
  uint64_t v9 = ManagedAppInstallRequest.externalVersionID.getter();
  *(void *)(v0 + 696) = v2;
  *(void *)(v0 + 704) = v1;
  *(void *)(v0 + 712) = v3;
  *(void *)(v0 + 720) = v8;
  *(unsigned char *)(v0 + 728) = v4 & 1;
  *(void *)(v0 + 736) = v5;
  *(unsigned char *)(v0 + 744) = v12;
  *(void *)(v0 + 752) = v9;
  *(unsigned char *)(v0 + 760) = v10 & 1;
  swift_retain();
  return _swift_asyncLet_get_throwing(v0 + 16, v0 + 808, sub_1001DE328, v0 + 832);
}

uint64_t sub_1001DE328()
{
  v1[159] = v0;
  if (v0)
  {
    return _swift_task_switch(sub_1001DE8C0, 0, 0);
  }
  else
  {
    uint64_t v2 = v1[101];
    v1[160] = v2;
    uint64_t v3 = v1[102];
    v1[161] = v3;
    uint64_t v4 = v1[103];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v5 = (void *)swift_task_alloc();
    v1[162] = v5;
    *uint64_t v5 = v1;
    v5[1] = sub_1001DE444;
    return sub_1003EDE2C(v2, v3, v4);
  }
}

uint64_t sub_1001DE444()
{
  *(void *)(*(void *)v1 + 1304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1001DEA44;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v2 = sub_1001DE56C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001DE56C()
{
  uint64_t v1 = *(void **)(v0 + 1256);
  swift_release_n();
  swift_release();
  swift_release();

  return _swift_asyncLet_finish(v0 + 16, v0 + 808, sub_1001DE618, v0 + 768);
}

uint64_t sub_1001DE618()
{
  return _swift_task_switch(sub_1001DE634, 0, 0);
}

uint64_t sub_1001DE634()
{
  swift_release();
  (*(void (**)(void, void))(v0[138] + 8))(v0[139], v0[137]);
  sub_10023C7B4((uint64_t)&unk_10065CA30);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1001DE700()
{
  uint64_t v1 = *(void *)(v0 + 1200);
  uint64_t v2 = *(void *)(v0 + 1192);
  uint64_t v3 = *(void *)(*(void *)(v0 + 1144) + 232);
  *(void *)(v0 + 1248) = v3;
  swift_retain();
  char v4 = ManagedAppInstallRequest.userInitiated.getter();
  uint64_t v5 = sub_1005163F0();
  *(void *)(v0 + 1256) = v5;
  id v6 = [self ephemeralSessionConfiguration];
  [v6 setHTTPShouldSetCookies:0];
  [v6 setHTTPCookieAcceptPolicy:1];
  [v6 setRequestCachePolicy:1];
  sub_100373694(1);
  id v7 = [self sessionWithConfiguration:v6];

  type metadata accessor for PlainHTTP();
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 1264) = v8;
  *(unsigned char *)(v8 + 24) = 1;
  *(void *)(v8 + 16) = v7;
  uint64_t v9 = ManagedAppInstallRequest.externalVersionID.getter();
  *(void *)(v0 + 696) = v2;
  *(void *)(v0 + 704) = v1;
  *(void *)(v0 + 712) = v3;
  *(void *)(v0 + 720) = v8;
  *(unsigned char *)(v0 + 728) = v4 & 1;
  *(void *)(v0 + 736) = v5;
  *(unsigned char *)(v0 + 744) = 0;
  *(void *)(v0 + 752) = v9;
  *(unsigned char *)(v0 + 760) = v10 & 1;
  swift_retain();
  return _swift_asyncLet_get_throwing(v0 + 16, v0 + 808, sub_1001DE328, v0 + 832);
}

uint64_t sub_1001DE8C0()
{
  uint64_t v1 = *(void **)(v0 + 1256);
  swift_release_n();
  swift_release();
  swift_release();

  return _swift_asyncLet_finish(v0 + 16, v0 + 808, sub_1001DE96C, v0 + 944);
}

uint64_t sub_1001DE96C()
{
  return _swift_task_switch(sub_1001DE988, 0, 0);
}

uint64_t sub_1001DE988()
{
  uint64_t v1 = v0[139];
  uint64_t v2 = v0[138];
  uint64_t v3 = v0[137];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1001DEA44()
{
  uint64_t v1 = *(void **)(v0 + 1256);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release_n();
  swift_release();
  swift_release();

  return _swift_asyncLet_finish(v0 + 16, v0 + 808, sub_1001DEB10, v0 + 656);
}

uint64_t sub_1001DEB10()
{
  return _swift_task_switch(sub_1001DEB2C, 0, 0);
}

uint64_t sub_1001DEB2C()
{
  uint64_t v1 = v0[139];
  uint64_t v2 = v0[138];
  uint64_t v3 = v0[137];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1001DEBE8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1001DEC08, 0, 0);
}

uint64_t sub_1001DEC08()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1001DECCC;
  v2[3] = v1;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_1001DECCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = *v4;
  uint64_t v8 = swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 8);
  if (!v3)
  {
    uint64_t v8 = a1;
    uint64_t v9 = a2;
    uint64_t v10 = a3;
  }
  return v11(v8, v9, v10);
}

uint64_t sub_1001DEDE4(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1001DEEB4;
  return v5();
}

uint64_t sub_1001DEEB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v4;
  uint64_t v9 = *v4;
  swift_task_dealloc();
  if (!v3)
  {
    uint64_t v10 = *(void **)(v8 + 16);
    *uint64_t v10 = a1;
    v10[1] = a2;
    void v10[2] = a3;
  }
  uint64_t v11 = *(uint64_t (**)(void))(v9 + 8);
  return v11();
}

uint64_t sub_1001DEFD8(void *a1, uint64_t a2, os_unfair_lock_s *a3)
{
  uint64_t v5 = sub_1000172F8((uint64_t *)&unk_10065CA40);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DDMPurchaseMethod();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1003119B0(14, a3, (uint64_t)v7);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    __break(1u);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 != enum case for DDMPurchaseMethod.volumePurchaseProgram(_:))
  {
    if (v12 != enum case for DDMPurchaseMethod.manifest(_:))
    {
LABEL_17:
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    swift_retain();
    uint64_t v23 = sub_100311910(3, a3);
    unint64_t v25 = v24;
    swift_release();
    if (v25)
    {
      uint64_t v26 = sub_1002E7720(1, v23, v25);
      uint64_t v34 = sub_1000172F8(&qword_10065BDF0);
      uint64_t v27 = sub_10000DDFC((unint64_t *)&unk_10065CA50, &qword_10065BDF0);
      LOBYTE(v33) = 0;
      uint64_t v35 = v27;
      *((void *)&v33 + 1) = v26;
      sub_1000172F8(&qword_10065BDF8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
      sub_10018B164(&v33, inited + 32);
      uint64_t v32 = _swiftEmptyArrayStorage;
      id v29 = a1;
      swift_bridgeObjectRetain();
      sub_100554E8C(inited);
      os_log_type_t v22 = (void *)sub_10050A22C(0, (uint64_t)v32, (uint64_t)sub_10050A214, 0, v29);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      if (v22)
      {
        sub_10024967C(v22);
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  swift_retain();
  uint64_t v13 = sub_100311A30(0, a3);
  char v15 = v14;
  swift_release();
  if (v15)
  {
    __break(1u);
    goto LABEL_16;
  }
  *(void *)&long long v33 = v13;
  uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v18 = sub_1002E7720(0, v16, v17);
  uint64_t v34 = sub_1000172F8(&qword_10065BDF0);
  uint64_t v19 = sub_10000DDFC((unint64_t *)&unk_10065CA50, &qword_10065BDF0);
  LOBYTE(v33) = 0;
  uint64_t v35 = v19;
  *((void *)&v33 + 1) = v18;
  sub_1000172F8(&qword_10065BDF8);
  uint64_t v20 = swift_initStackObject();
  *(_OWORD *)(v20 + 16) = xmmword_1005A3EC0;
  sub_10018B164(&v33, v20 + 32);
  uint64_t v32 = _swiftEmptyArrayStorage;
  id v21 = a1;
  swift_bridgeObjectRetain();
  sub_100554E8C(v20);
  os_log_type_t v22 = (void *)sub_10050A22C(0, (uint64_t)v32, (uint64_t)sub_10050A214, 0, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (v22)
  {
    sub_10024967C(v22);
LABEL_10:

    swift_release();
    return 1;
  }
  return 0;
}

uint64_t sub_1001DF4F4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  char v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  swift_retain();
  Swift::Int v16 = sub_100010C5C((uint64_t)&off_100637590);
  swift_arrayDestroy();
  unint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = a1;
  v17[3] = a2;
  v17[4] = v4;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = &unk_10065C9A0;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v11, 1, 1, v19);
  sub_100012670(a1, a2);
  id v20 = v4;
  swift_retain();
  sub_100016EDC((uint64_t)"Cancel ManagedApp", 17, 2, a3, a4, 0, (uint64_t)v14, v16, 1u, (uint64_t)v11, (uint64_t)&unk_10065C9A8, v18, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_1001DF790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[18] = a7;
  v8[19] = a8;
  v8[17] = a6;
  uint64_t v9 = type metadata accessor for UUID();
  v8[20] = v9;
  v8[21] = *(void *)(v9 - 8);
  v8[22] = swift_task_alloc();
  sub_1000172F8(&qword_10065C9B0);
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Logger();
  v8[25] = v10;
  v8[26] = *(void *)(v10 - 8);
  v8[27] = swift_task_alloc();
  v8[28] = swift_task_alloc();
  v8[29] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for ManagedAppCancelRequest();
  v8[30] = v11;
  v8[31] = *(void *)(v11 - 8);
  v8[32] = swift_task_alloc();
  return _swift_task_switch(sub_1001DF968, 0, 0);
}

uint64_t sub_1001DF968()
{
  long long v33 = v0;
  uint64_t v1 = v0[17];
  v0[5] = v1;
  v0[7] = v0 + 5;
  uint64_t v2 = v0[30];
  unint64_t v3 = v0[18];
  v0[14] = v0[32];
  v0[6] = v3;
  sub_100012670(v1, v3);
  v0[8] = &type metadata for Data;
  v0[9] = v2;
  v0[10] = sub_1000175C4();
  v0[11] = sub_1000139E4(&qword_10065C9B8, (void (*)(uint64_t))&type metadata accessor for ManagedAppCancelRequest);
  decodeXPCValues<each A, B>(from:)();
  sub_100013510(v0[5], v0[6]);
  uint64_t v5 = ManagedAppCancelRequest.declarationIdentifier.getter();
  v0[33] = v5;
  v0[34] = v6;
  if (v6)
  {
    uint64_t v7 = v5;
    unint64_t v8 = v6;
    static Logger.ddm.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = v0[28];
    uint64_t v13 = v0[25];
    uint64_t v14 = v0[26];
    if (v11)
    {
      uint64_t v30 = v0[25];
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136446210;
      swift_bridgeObjectRetain();
      v0[16] = sub_1000143F4(v7, v8, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Requested cancel of %{public}s", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      Swift::Int v16 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
      v16(v12, v30);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      Swift::Int v16 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
      v16(v12, v13);
    }
    v0[35] = v16;
    uint64_t v24 = *(void *)(v0[19] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies);
    v0[36] = v24;
    uint64_t v25 = *(void *)(*(void *)(v24 + 192) + 16);
    v0[37] = v25;
    uint64_t v26 = swift_task_alloc();
    v0[38] = v26;
    *(void *)(v26 + 16) = v7;
    *(void *)(v26 + 24) = v8;
    uint64_t v27 = swift_task_alloc();
    v0[39] = v27;
    *(void *)(v27 + 16) = sub_1001C5DA4;
    *(void *)(v27 + 24) = v26;
    uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1006607B0 + dword_1006607B0);
    swift_retain();
    uint64_t v28 = (void *)swift_task_alloc();
    v0[40] = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_1001DFE94;
    uint64_t v29 = v0[24];
    return v31(v29, (uint64_t)sub_1001C5DAC, v27, v25);
  }
  else
  {
    static Logger.xpc.getter();
    unint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "validateHostApp succeeded", v19, 2u);
      swift_slowDealloc();
    }
    uint64_t v20 = v0[29];
    uint64_t v21 = v0[25];
    uint64_t v22 = v0[26];

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    (*(void (**)(void, void))(v0[31] + 8))(v0[32], v0[30]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
}

uint64_t sub_1001DFE94()
{
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001E0434;
  }
  else {
    uint64_t v2 = sub_1001E0008;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001E0008()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[21];
  sub_100017238(v0[24], v1, &qword_10065C9B0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = v0[23];
    sub_10001729C(v0[24], &qword_10065C9B0);
    swift_bridgeObjectRelease();
    sub_10001729C(v4, &qword_10065C9B0);
    (*(void (**)(void, void))(v0[31] + 8))(v0[32], v0[30]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v7 = v0[36];
    (*(void (**)(void, void, void))(v0[21] + 32))(v0[22], v0[23], v0[20]);
    v0[42] = *(void *)(*(void *)(v7 + 192) + 32);
    swift_retain();
    unint64_t v8 = (void *)swift_task_alloc();
    v0[43] = v8;
    *unint64_t v8 = v0;
    v8[1] = sub_1001E01F0;
    uint64_t v9 = v0[22];
    return sub_1004597B8(v9);
  }
}

uint64_t sub_1001E01F0()
{
  *(void *)(*(void *)v1 + 352) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    uint64_t v2 = sub_1001E07B8;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1001E0334;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001E0334()
{
  uint64_t v1 = v0[24];
  (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
  sub_10001729C(v1, &qword_10065C9B0);
  (*(void (**)(void, void))(v0[31] + 8))(v0[32], v0[30]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1001E0434()
{
  uint64_t v22 = v0;
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = v0[34];
    uint64_t v4 = v0[33];
    uint64_t v19 = v0[27];
    uint64_t v20 = (void (*)(uint64_t, uint64_t))v0[35];
    uint64_t v18 = v0[25];
    uint64_t v5 = swift_slowAlloc();
    v21[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    swift_bridgeObjectRetain();
    v0[12] = sub_1000143F4(v4, v3, v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v6 = *(void *)(v0[3] - 8);
    swift_task_alloc();
    (*(void (**)(void))(v6 + 16))();
    uint64_t v7 = String.init<A>(describing:)();
    unint64_t v9 = v8;
    swift_task_dealloc();
    v0[15] = sub_1000143F4(v7, v9, v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to cancel installation for declaration '%{public}s: %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v20(v19, v18);
  }
  else
  {
    uint64_t v10 = (void (*)(uint64_t, uint64_t))v0[35];
    uint64_t v11 = v0[27];
    uint64_t v12 = v0[25];
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();

    v10(v11, v12);
  }
  uint64_t v14 = v0[31];
  uint64_t v13 = v0[32];
  uint64_t v15 = v0[30];
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::Int v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1001E07B8()
{
  uint64_t v23 = v0;
  uint64_t v1 = v0[24];
  (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
  sub_10001729C(v1, &qword_10065C9B0);
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  os_log_type_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    unint64_t v4 = v0[34];
    uint64_t v5 = v0[33];
    uint64_t v20 = v0[27];
    uint64_t v21 = (void (*)(uint64_t, uint64_t))v0[35];
    uint64_t v19 = v0[25];
    uint64_t v6 = swift_slowAlloc();
    v22[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446466;
    swift_bridgeObjectRetain();
    v0[12] = sub_1000143F4(v5, v4, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v7 = *(void *)(v0[3] - 8);
    swift_task_alloc();
    (*(void (**)(void))(v7 + 16))();
    uint64_t v8 = String.init<A>(describing:)();
    unint64_t v10 = v9;
    swift_task_dealloc();
    v0[15] = sub_1000143F4(v8, v10, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to cancel installation for declaration '%{public}s: %{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v21(v20, v19);
  }
  else
  {
    uint64_t v11 = (void (*)(uint64_t, uint64_t))v0[35];
    uint64_t v12 = v0[27];
    uint64_t v13 = v0[25];
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();

    v11(v12, v13);
  }
  uint64_t v15 = v0[31];
  uint64_t v14 = v0[32];
  uint64_t v16 = v0[30];
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1001E0B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a7;
  return _swift_task_switch(sub_1001E0BBC, 0, 0);
}

uint64_t sub_1001E0BBC()
{
  **(void **)(v0 + 16) = *(void *)(*(void *)(v0 + 24)
                                     + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_daemonInstanceIdentifier);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E0E44()
{
  swift_bridgeObjectRelease();
  swift_errorRelease();
  *(unsigned char *)(v0 + 729) = 0;
  Swift::Int v1 = sub_100010C5C((uint64_t)&off_100637650);
  *(void *)(v0 + 480) = v1;
  swift_arrayDestroy();
  uint64_t v8 = (uint64_t (*)(Swift::Int, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                       + dword_10065D5F0);
  os_log_type_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 488) = v2;
  *os_log_type_t v2 = v0;
  v2[1] = sub_100008C48;
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 224);
  uint64_t v5 = *(void *)(v0 + 200);
  uint64_t v6 = *(void *)(v0 + 208);
  return v8(v1, 1, v5, v6, v3, v4);
}

uint64_t sub_1001E0F3C()
{
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v1 = *(void *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 392);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = *(void *)(v0 + 568);
  if (*(unsigned char *)(v0 + 729) == 1)
  {
    swift_getErrorValue();
    uint64_t v5 = *(void *)(v0 + 56);
    uint64_t v6 = *(void *)(v0 + 64);
    type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    sub_1003ED3A0(v5, v6, v7);
  }
  else
  {
    type metadata accessor for ManagedAppDistributionError();
    sub_1000139E4((unint64_t *)&qword_10065B910, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
    swift_allocError();
    sub_1001E3BD8(v4, v8);
  }
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1001E1158()
{
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return _swift_task_switch(sub_1001E12CC, 0, 0);
}

uint64_t sub_1001E12CC()
{
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v53 = *(void *)(v0 + 328);
  uint64_t v54 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 320);
  uint64_t v56 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 280);
  uint64_t v5 = *(void *)(v0 + 288);
  uint64_t v52 = *(void *)(v0 + 272);
  (*(void (**)(void))(v1 + 16))(*(void *)(v0 + 344));
  AppStateUpdateIdentifier.init(_:)();
  AppProgress.init(state:identifier:)();
  swift_getObjectType();
  static XPCClientMessage.appProgress(_:)();
  XPCClientProtocol.handleMessage(_:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v52);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v56);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v54, v53);
  unint64_t v7 = *(void *)(v0 + 592);
  int64_t v8 = *(void *)(v0 + 584);
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      uint64_t result = *(void *)(v0 + 520);
      goto LABEL_18;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    int64_t v12 = (unint64_t)((1 << *(unsigned char *)(v0 + 733)) + 63) >> 6;
    uint64_t result = *(void *)(v0 + 520);
    if (v11 >= v12) {
      goto LABEL_32;
    }
    uint64_t v13 = result + 56;
    unint64_t v14 = *(void *)(result + 56 + 8 * v11);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v12) {
        goto LABEL_32;
      }
      unint64_t v14 = *(void *)(v13 + 8 * v8);
      if (!v14)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v12) {
          goto LABEL_32;
        }
        unint64_t v14 = *(void *)(v13 + 8 * v8);
        if (!v14) {
          break;
        }
      }
    }
LABEL_17:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_18:
    *(void *)(v0 + 592) = v7;
    *(void *)(v0 + 584) = v8;
    int v16 = *(_DWORD *)(v0 + 712);
    uint64_t v17 = *(void *)(v0 + 376);
    uint64_t v18 = *(void *)(v0 + 384);
    uint64_t v19 = *(void *)(v0 + 360);
    uint64_t v20 = *(void *)(v0 + 368);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 16))(v18, *(void *)(result + 48) + *(void *)(v20 + 72) * v10, v19);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v17, v18, v19);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 88))(v17, v19);
    if (result == v16)
    {
      uint64_t v22 = *(void **)(v0 + 576);
      uint64_t v23 = *(void *)(v0 + 376);
      (*(void (**)(uint64_t, void))(*(void *)(v0 + 368) + 96))(v23, *(void *)(v0 + 360));
      uint64_t v24 = *(void *)v23;
      *(void *)(v0 + 600) = *(void *)v23;
      uint64_t v25 = *(void *)(v23 + 8);
      *(void *)(v0 + 608) = v25;
      char v26 = *(unsigned char *)(v23 + 16);
      *(unsigned char *)(v0 + 734) = v26;
      uint64_t v27 = v22[24];
      *(void *)(v0 + 616) = v27;
      uint64_t v28 = v22[23];
      *(void *)(v0 + 624) = v28;
      uint64_t v29 = v22[25];
      *(void *)(v0 + 632) = v29;
      uint64_t v30 = v22[28];
      *(void *)(v0 + 640) = v30;
      uint64_t v31 = *(void *)(v27 + 32);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v32 = (void *)swift_task_alloc();
      *(void *)(v0 + 648) = v32;
      *uint64_t v32 = v0;
      v32[1] = sub_1001E1158;
      uint64_t v33 = *(void *)(v0 + 352);
      return sub_100501ACC(v33, v24, v25, v26, v28, v31, v30, v29);
    }
    if (result == *(_DWORD *)(v0 + 716))
    {
      if (*(unsigned char *)(v0 + 729) == 1)
      {
        uint64_t v34 = *(void *)(*(void *)(v0 + 576) + 168);
        *(void *)(v0 + 656) = v34;
        swift_retain();
        uint64_t v35 = (void *)swift_task_alloc();
        *(void *)(v0 + 664) = v35;
        *uint64_t v35 = v0;
        v35[1] = sub_1001E1974;
        uint64_t v36 = *(void *)(v0 + 504);
        uint64_t v37 = *(void *)(v0 + 512);
        return sub_10050057C(v34, 0, 0, v36, v37);
      }
      else
      {
        Swift::Int v46 = sub_100010C5C((uint64_t)&off_100637690);
        *(void *)(v0 + 688) = v46;
        swift_arrayDestroy();
        long long v57 = (uint64_t (*)(Swift::Int, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                              + dword_10065D5F0);
        unint64_t v47 = (void *)swift_task_alloc();
        *(void *)(v0 + 696) = v47;
        *unint64_t v47 = v0;
        v47[1] = sub_1001E20E0;
        uint64_t v48 = *(void *)(v0 + 216);
        uint64_t v49 = *(void *)(v0 + 224);
        uint64_t v50 = *(void *)(v0 + 200);
        uint64_t v51 = *(void *)(v0 + 208);
        return v57(v46, 1, v50, v51, v48, v49);
      }
    }
    if (result != *(_DWORD *)(v0 + 720) && result != *(_DWORD *)(v0 + 724)) {
      return _assertionFailure(_:_:file:line:flags:)();
    }
  }
  int64_t v15 = v11 + 3;
  if (v15 < v12)
  {
    unint64_t v14 = *(void *)(v13 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v8 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_39;
        }
        if (v8 >= v12) {
          goto LABEL_32;
        }
        unint64_t v14 = *(void *)(v13 + 8 * v8);
        ++v15;
        if (v14) {
          goto LABEL_17;
        }
      }
    }
    int64_t v8 = v15;
    goto LABEL_17;
  }
LABEL_32:
  uint64_t v39 = *(void *)(v0 + 504);
  unint64_t v38 = *(void *)(v0 + 512);
  uint64_t v40 = *(void *)(v0 + 400);
  uint64_t v41 = *(void *)(v0 + 408);
  uint64_t v42 = *(void *)(v0 + 392);
  uint64_t v43 = *(void *)(v0 + 248);
  uint64_t v44 = *(void **)(v0 + 184);
  swift_release();
  sub_10000F7EC(v39, v38);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v42);
  *uint64_t v44 = *(void *)(v43 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_daemonInstanceIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
  return v45();
}

uint64_t sub_1001E1974(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 672) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = v4[63];
    unint64_t v5 = v4[64];
    swift_release();
    sub_10000F7EC(v6, v5);
    unint64_t v7 = sub_1001E2CDC;
  }
  else
  {
    swift_release();
    v4[85] = a1;
    unint64_t v7 = sub_1001E1ACC;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1001E1ACC()
{
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 272);
  swift_getObjectType();
  static XPCClientMessage.appCatalog(_:)();
  swift_bridgeObjectRelease();
  XPCClientProtocol.handleMessage(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  unint64_t v5 = *(void *)(v0 + 592);
  int64_t v6 = *(void *)(v0 + 584);
  while (1)
  {
    if (v5)
    {
      unint64_t v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v8 = v7 | (v6 << 6);
      uint64_t result = *(void *)(v0 + 520);
      goto LABEL_18;
    }
    int64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    int64_t v10 = (unint64_t)((1 << *(unsigned char *)(v0 + 733)) + 63) >> 6;
    uint64_t result = *(void *)(v0 + 520);
    if (v9 >= v10) {
      goto LABEL_32;
    }
    uint64_t v11 = result + 56;
    unint64_t v12 = *(void *)(result + 56 + 8 * v9);
    ++v6;
    if (!v12)
    {
      int64_t v6 = v9 + 1;
      if (v9 + 1 >= v10) {
        goto LABEL_32;
      }
      unint64_t v12 = *(void *)(v11 + 8 * v6);
      if (!v12)
      {
        int64_t v6 = v9 + 2;
        if (v9 + 2 >= v10) {
          goto LABEL_32;
        }
        unint64_t v12 = *(void *)(v11 + 8 * v6);
        if (!v12) {
          break;
        }
      }
    }
LABEL_17:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v8 = __clz(__rbit64(v12)) + (v6 << 6);
LABEL_18:
    *(void *)(v0 + 592) = v5;
    *(void *)(v0 + 584) = v6;
    int v14 = *(_DWORD *)(v0 + 712);
    uint64_t v15 = *(void *)(v0 + 376);
    uint64_t v16 = *(void *)(v0 + 384);
    uint64_t v17 = *(void *)(v0 + 360);
    uint64_t v18 = *(void *)(v0 + 368);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 16))(v16, *(void *)(result + 48) + *(void *)(v18 + 72) * v8, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v15, v16, v17);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 88))(v15, v17);
    if (result == v14)
    {
      uint64_t v20 = *(void **)(v0 + 576);
      uint64_t v21 = *(void *)(v0 + 376);
      (*(void (**)(uint64_t, void))(*(void *)(v0 + 368) + 96))(v21, *(void *)(v0 + 360));
      uint64_t v22 = *(void *)v21;
      *(void *)(v0 + 600) = *(void *)v21;
      uint64_t v23 = *(void *)(v21 + 8);
      *(void *)(v0 + 608) = v23;
      char v24 = *(unsigned char *)(v21 + 16);
      *(unsigned char *)(v0 + 734) = v24;
      uint64_t v25 = v20[24];
      *(void *)(v0 + 616) = v25;
      uint64_t v26 = v20[23];
      *(void *)(v0 + 624) = v26;
      uint64_t v27 = v20[25];
      *(void *)(v0 + 632) = v27;
      uint64_t v28 = v20[28];
      *(void *)(v0 + 640) = v28;
      uint64_t v29 = *(void *)(v25 + 32);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v30 = (void *)swift_task_alloc();
      *(void *)(v0 + 648) = v30;
      *uint64_t v30 = v0;
      v30[1] = sub_1001E1158;
      uint64_t v31 = *(void *)(v0 + 352);
      return sub_100501ACC(v31, v22, v23, v24, v26, v29, v28, v27);
    }
    if (result == *(_DWORD *)(v0 + 716))
    {
      if (*(unsigned char *)(v0 + 729) == 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v0 + 576) + 168);
        *(void *)(v0 + 656) = v32;
        swift_retain();
        uint64_t v33 = (void *)swift_task_alloc();
        *(void *)(v0 + 664) = v33;
        *uint64_t v33 = v0;
        v33[1] = sub_1001E1974;
        uint64_t v34 = *(void *)(v0 + 504);
        uint64_t v35 = *(void *)(v0 + 512);
        return sub_10050057C(v32, 0, 0, v34, v35);
      }
      else
      {
        Swift::Int v44 = sub_100010C5C((uint64_t)&off_100637690);
        *(void *)(v0 + 688) = v44;
        swift_arrayDestroy();
        uint64_t v51 = (uint64_t (*)(Swift::Int, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                              + dword_10065D5F0);
        uint64_t v45 = (void *)swift_task_alloc();
        *(void *)(v0 + 696) = v45;
        *uint64_t v45 = v0;
        v45[1] = sub_1001E20E0;
        uint64_t v46 = *(void *)(v0 + 216);
        uint64_t v47 = *(void *)(v0 + 224);
        uint64_t v48 = *(void *)(v0 + 200);
        uint64_t v49 = *(void *)(v0 + 208);
        return v51(v44, 1, v48, v49, v46, v47);
      }
    }
    if (result != *(_DWORD *)(v0 + 720) && result != *(_DWORD *)(v0 + 724)) {
      return _assertionFailure(_:_:file:line:flags:)();
    }
  }
  int64_t v13 = v9 + 3;
  if (v13 < v10)
  {
    unint64_t v12 = *(void *)(v11 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v6 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_39;
        }
        if (v6 >= v10) {
          goto LABEL_32;
        }
        unint64_t v12 = *(void *)(v11 + 8 * v6);
        ++v13;
        if (v12) {
          goto LABEL_17;
        }
      }
    }
    int64_t v6 = v13;
    goto LABEL_17;
  }
LABEL_32:
  uint64_t v37 = *(void *)(v0 + 504);
  unint64_t v36 = *(void *)(v0 + 512);
  uint64_t v38 = *(void *)(v0 + 400);
  uint64_t v39 = *(void *)(v0 + 408);
  uint64_t v40 = *(void *)(v0 + 392);
  uint64_t v41 = *(void *)(v0 + 248);
  uint64_t v42 = *(void **)(v0 + 184);
  swift_release();
  sub_10000F7EC(v37, v36);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v40);
  void *v42 = *(void *)(v41 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_daemonInstanceIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v43 = *(uint64_t (**)(void))(v0 + 8);
  return v43();
}

uint64_t sub_1001E20E0(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 704) = v1;
  swift_task_dealloc();
  if (v1)
  {
    unint64_t v5 = sub_1001E2B3C;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(unsigned char *)(v4 + 735) = a1 & 1;
    unint64_t v5 = sub_1001E2214;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001E2214()
{
  if ((*(unsigned char *)(v0 + 735) & 1) == 0)
  {
    sub_10000F7EC(*(void *)(v0 + 504), *(void *)(v0 + 512));
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    uint64_t v14 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    uint64_t v16 = *(void *)(v0 + 400);
    uint64_t v15 = *(void *)(v0 + 408);
    uint64_t v17 = *(void *)(v0 + 392);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    type metadata accessor for ManagedAppDistributionError();
    sub_1000139E4((unint64_t *)&qword_10065B910, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
    swift_allocError();
    sub_1001E3BD8(v14, v18);
    swift_willThrow();
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
LABEL_6:
    return v19();
  }
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v3 = *(void **)(v0 + 248);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v1, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  unint64_t v8 = v7 + 2;
  v7[3] = 0;
  v7[4] = v3;
  v7[5] = v4;
  v7[6] = v2;
  LODWORD(v2) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v1, 1, v5);
  id v9 = v3;
  swift_unknownObjectRetain();
  uint64_t v10 = *(void *)(v0 + 264);
  if (v2 == 1)
  {
    sub_10001729C(*(void *)(v0 + 264), &qword_10065B220);
    if (*v8)
    {
LABEL_4:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_11;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
    if (*v8) {
      goto LABEL_4;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_11:
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = &unk_10065C948;
  *(void *)(v21 + 24) = v7;
  if (v13 | v11)
  {
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0;
    *(void *)(v0 + 32) = v11;
    *(void *)(v0 + 40) = v13;
  }
  swift_task_create();
  uint64_t result = swift_release();
  unint64_t v22 = *(void *)(v0 + 592);
  int64_t v23 = *(void *)(v0 + 584);
  while (1)
  {
    if (v22)
    {
      unint64_t v24 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v25 = v24 | (v23 << 6);
      uint64_t result = *(void *)(v0 + 520);
    }
    else
    {
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
LABEL_48:
        __break(1u);
        return result;
      }
      int64_t v27 = (unint64_t)((1 << *(unsigned char *)(v0 + 733)) + 63) >> 6;
      uint64_t result = *(void *)(v0 + 520);
      if (v23 >= v27) {
        goto LABEL_43;
      }
      uint64_t v28 = result + 56;
      unint64_t v29 = *(void *)(result + 56 + 8 * v23);
      if (!v29)
      {
        int64_t v30 = v23 + 1;
        if (v23 + 1 >= v27) {
          goto LABEL_43;
        }
        unint64_t v29 = *(void *)(v28 + 8 * v30);
        if (!v29)
        {
          int64_t v30 = v23 + 2;
          if (v23 + 2 >= v27) {
            goto LABEL_43;
          }
          unint64_t v29 = *(void *)(v28 + 8 * v30);
          if (!v29)
          {
            int64_t v30 = v23 + 3;
            if (v23 + 3 >= v27)
            {
LABEL_43:
              uint64_t v53 = *(void *)(v0 + 504);
              unint64_t v52 = *(void *)(v0 + 512);
              uint64_t v54 = *(void *)(v0 + 400);
              uint64_t v55 = *(void *)(v0 + 408);
              uint64_t v56 = *(void *)(v0 + 392);
              uint64_t v57 = *(void *)(v0 + 248);
              os_log_type_t v58 = *(void **)(v0 + 184);
              swift_release();
              sub_10000F7EC(v53, v52);
              (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v55, v56);
              void *v58 = *(void *)(v57 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_daemonInstanceIdentifier);
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
              goto LABEL_6;
            }
            unint64_t v29 = *(void *)(v28 + 8 * v30);
            if (!v29)
            {
              while (1)
              {
                int64_t v23 = v30 + 1;
                if (__OFADD__(v30, 1)) {
                  goto LABEL_48;
                }
                if (v23 >= v27) {
                  goto LABEL_43;
                }
                unint64_t v29 = *(void *)(v28 + 8 * v23);
                ++v30;
                if (v29) {
                  goto LABEL_26;
                }
              }
            }
          }
        }
        int64_t v23 = v30;
      }
LABEL_26:
      unint64_t v22 = (v29 - 1) & v29;
      unint64_t v25 = __clz(__rbit64(v29)) + (v23 << 6);
    }
    *(void *)(v0 + 592) = v22;
    *(void *)(v0 + 584) = v23;
    int v31 = *(_DWORD *)(v0 + 712);
    uint64_t v32 = *(void *)(v0 + 376);
    uint64_t v33 = *(void *)(v0 + 384);
    uint64_t v34 = *(void *)(v0 + 360);
    uint64_t v35 = *(void *)(v0 + 368);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v35 + 16))(v33, *(void *)(result + 48) + *(void *)(v35 + 72) * v25, v34);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v32, v33, v34);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 88))(v32, v34);
    if (result == v31) {
      break;
    }
    if (result == *(_DWORD *)(v0 + 716))
    {
      if (*(unsigned char *)(v0 + 729) == 1)
      {
        uint64_t v48 = *(void *)(*(void *)(v0 + 576) + 168);
        *(void *)(v0 + 656) = v48;
        swift_retain();
        uint64_t v49 = (void *)swift_task_alloc();
        *(void *)(v0 + 664) = v49;
        *uint64_t v49 = v0;
        v49[1] = sub_1001E1974;
        uint64_t v50 = *(void *)(v0 + 504);
        uint64_t v51 = *(void *)(v0 + 512);
        return sub_10050057C(v48, 0, 0, v50, v51);
      }
      else
      {
        Swift::Int v59 = sub_100010C5C((uint64_t)&off_100637690);
        *(void *)(v0 + 688) = v59;
        swift_arrayDestroy();
        uint64_t v65 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                        + dword_10065D5F0);
        uint64_t v60 = (void *)swift_task_alloc();
        *(void *)(v0 + 696) = v60;
        *uint64_t v60 = v0;
        v60[1] = sub_1001E20E0;
        uint64_t v61 = *(void *)(v0 + 216);
        uint64_t v62 = *(void *)(v0 + 224);
        uint64_t v63 = *(void *)(v0 + 200);
        uint64_t v64 = *(void *)(v0 + 208);
        return v65(v59, 1, v63, v64, v61, v62);
      }
    }
    if (result != *(_DWORD *)(v0 + 720) && result != *(_DWORD *)(v0 + 724)) {
      return _assertionFailure(_:_:file:line:flags:)();
    }
  }
  unint64_t v36 = *(void **)(v0 + 576);
  uint64_t v37 = *(void *)(v0 + 376);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 368) + 96))(v37, *(void *)(v0 + 360));
  uint64_t v38 = *(void *)v37;
  *(void *)(v0 + 600) = *(void *)v37;
  uint64_t v39 = *(void *)(v37 + 8);
  *(void *)(v0 + 608) = v39;
  char v40 = *(unsigned char *)(v37 + 16);
  *(unsigned char *)(v0 + 734) = v40;
  uint64_t v41 = v36[24];
  *(void *)(v0 + 616) = v41;
  uint64_t v42 = v36[23];
  *(void *)(v0 + 624) = v42;
  uint64_t v43 = v36[25];
  *(void *)(v0 + 632) = v43;
  uint64_t v44 = v36[28];
  *(void *)(v0 + 640) = v44;
  uint64_t v45 = *(void *)(v41 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v46 = (void *)swift_task_alloc();
  *(void *)(v0 + 648) = v46;
  *uint64_t v46 = v0;
  v46[1] = sub_1001E1158;
  uint64_t v47 = *(void *)(v0 + 352);
  return sub_100501ACC(v47, v38, v39, v40, v42, v45, v44, v43);
}

uint64_t sub_1001E2B3C()
{
  uint64_t v1 = v0[63];
  unint64_t v2 = v0[64];
  swift_bridgeObjectRelease();
  sub_10000F7EC(v1, v2);
  uint64_t v3 = v0[88];
  uint64_t v5 = v0[50];
  uint64_t v4 = v0[51];
  uint64_t v6 = v0[49];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  type metadata accessor for ManagedAppDistributionError();
  sub_1000139E4((unint64_t *)&qword_10065B910, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
  swift_allocError();
  sub_1001E3BD8(v3, v7);
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1001E2CDC()
{
  uint64_t v2 = v0[50];
  uint64_t v1 = v0[51];
  uint64_t v3 = v0[49];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_getErrorValue();
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[8];
  type metadata accessor for MarketplaceKitError();
  sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
  swift_allocError();
  sub_1003ED3A0(v4, v5, v6);
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1001E2E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  uint64_t v7 = type metadata accessor for Logger();
  v6[8] = v7;
  v6[9] = *(void *)(v7 - 8);
  v6[10] = swift_task_alloc();
  v6[11] = swift_task_alloc();
  sub_1000172F8(&qword_10065C958);
  v6[12] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for XPCClientMessage();
  v6[13] = v8;
  v6[14] = *(void *)(v8 - 8);
  v6[15] = swift_task_alloc();
  return _swift_task_switch(sub_1001E2FE8, 0, 0);
}

uint64_t sub_1001E2FE8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1001E30AC;
  v2[3] = v1;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_1001E30AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)*v4;
  v6[17] = a1;
  v6[18] = a2;
  v6[19] = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v7 = sub_1001E33C8;
  }
  else
  {
    v6[20] = a3;
    uint64_t v7 = sub_1001E31D8;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1001E31D8()
{
  v0[21] = *(void *)(*(void *)(*(void *)(v0[5]
                                             + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies)
                                 + 240)
                     + 32);
  swift_retain();
  uint64_t v1 = sub_1005163F0();
  v0[22] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[23] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1001E32A4;
  uint64_t v3 = v0[20];
  uint64_t v5 = v0[17];
  uint64_t v4 = v0[18];
  return sub_1001AF47C(v5, v4, v3, v1);
}

uint64_t sub_1001E32A4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 192) = a1;
  *(void *)(v3 + 200) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1001E38EC;
  }
  else
  {

    swift_release();
    uint64_t v4 = sub_1001E3690;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001E33C8()
{
  uint64_t v1 = v0[19];
  static Logger.daemon.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412546;
    uint64_t v6 = sub_1005163F0();
    v0[2] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v5[1] = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%@] Error sending back initial managed apps: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v8 = v0[12];
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  swift_getObjectType();
  sub_1001E3BD8(v1, v8);
  uint64_t v9 = type metadata accessor for ManagedAppDistributionError();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  static XPCClientMessage.managedAppCatalog(apps:error:)();
  sub_10001729C(v8, &qword_10065C958);
  XPCClientProtocol.handleMessage(_:)();
  swift_errorRelease();
  (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1001E3690()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13];
  swift_getObjectType();
  uint64_t v5 = type metadata accessor for ManagedAppDistributionError();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
  swift_bridgeObjectRetain();
  static XPCClientMessage.managedAppCatalog(apps:error:)();
  swift_bridgeObjectRelease();
  sub_10001729C(v3, &qword_10065C958);
  XPCClientProtocol.handleMessage(_:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  static Logger.daemon.getter();
  swift_bridgeObjectRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = v0[24];
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 134217984;
    uint64_t v10 = *(void *)(v8 + 16);
    swift_bridgeObjectRelease();
    v0[4] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Sent back %ld app(s)", v9, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  (*(void (**)(void, void))(v0[9] + 8))(v0[11], v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1001E38EC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 200);
  static Logger.daemon.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412546;
    uint64_t v6 = sub_1005163F0();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 24) = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v5[1] = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%@] Error sending back initial managed apps: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v8 = *(void *)(v0 + 96);
  (*(void (**)(void, void))(*(void *)(v0 + 72) + 8))(*(void *)(v0 + 80), *(void *)(v0 + 64));
  swift_getObjectType();
  sub_1001E3BD8(v1, v8);
  uint64_t v9 = type metadata accessor for ManagedAppDistributionError();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  static XPCClientMessage.managedAppCatalog(apps:error:)();
  sub_10001729C(v8, &qword_10065C958);
  XPCClientProtocol.handleMessage(_:)();
  swift_errorRelease();
  (*(void (**)(void, void))(*(void *)(v0 + 112) + 8))(*(void *)(v0 + 120), *(void *)(v0 + 104));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1001E3BD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  __chkstk_darwin(v4);
  int v31 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for InternalError();
  uint64_t v6 = __chkstk_darwin(v35);
  uint64_t v34 = (uint64_t)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = type metadata accessor for MarketplaceKitError();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ManagedAppDistributionError();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = a1;
  swift_errorRetain();
  sub_1000172F8(&qword_10065B260);
  if (swift_dynamicCast())
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a2, v17, v14);
  }
  else
  {
    uint64_t v29 = v14;
    uint64_t v30 = v15;
    uint64_t v18 = a2;
    swift_errorRelease();
    uint64_t v37 = a1;
    swift_errorRetain();
    if (!swift_dynamicCast())
    {
      swift_errorRelease();
      uint64_t v37 = a1;
      swift_errorRetain();
      if (swift_dynamicCast())
      {
        uint64_t v19 = v34;
        sub_10023D800((uint64_t)v9, v34, (uint64_t (*)(void))type metadata accessor for InternalError);
        if (swift_getEnumCaseMultiPayload())
        {
          (*(void (**)(uint64_t, void, uint64_t))(v30 + 104))(a2, enum case for ManagedAppDistributionError.unrecoverableError(_:), v29);
          sub_10023D9A8(v19, (uint64_t (*)(void))type metadata accessor for InternalError);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(a2, v19, v29);
        }
        return swift_errorRelease();
      }
      swift_errorRelease();
      uint64_t v37 = a1;
      swift_errorRetain();
      if (swift_dynamicCast())
      {
        uint64_t v20 = v31;
        static Logger.xpc.getter();
        uint64_t v21 = Logger.logObject.getter();
        os_log_type_t v22 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v21, v22))
        {
          int64_t v23 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)int64_t v23 = 0;
          _os_log_impl((void *)&_mh_execute_header, v21, v22, "This should be for MarketplaceKitError", v23, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v32 + 8))(v20, v33);
        (*(void (**)(uint64_t, void, uint64_t))(v30 + 104))(v18, enum case for ManagedAppDistributionError.unrecoverableError(_:), v29);
        return swift_errorRelease();
      }
      swift_errorRelease();
      type metadata accessor for Code(0);
      uint64_t v37 = 203;
      sub_1000139E4((unint64_t *)&qword_10065B420, type metadata accessor for Code);
      char v24 = static _ErrorCodeProtocol.~= infix(_:_:)();
      uint64_t v25 = v30;
      if (v24)
      {
        uint64_t v26 = (unsigned int *)&enum case for ManagedAppDistributionError.networkError(_:);
      }
      else
      {
        uint64_t v37 = a1;
        swift_errorRetain();
        type metadata accessor for AMSError(0);
        if (swift_dynamicCast())
        {

          (*(void (**)(uint64_t, void, uint64_t))(v25 + 104))(a2, enum case for ManagedAppDistributionError.unrecoverableError(_:), v29);
          return swift_errorRelease();
        }
        swift_errorRelease();
        uint64_t v26 = (unsigned int *)&enum case for ManagedAppDistributionError.unrecoverableError(_:);
      }
      return (*(uint64_t (**)(uint64_t, void, uint64_t))(v25 + 104))(a2, *v26, v29);
    }
    (*(void (**)(uint64_t, void, uint64_t))(v30 + 104))(a2, enum case for ManagedAppDistributionError.unrecoverableError(_:), v29);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return swift_errorRelease();
}

uint64_t sub_1001E4190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[20] = a8;
  v8[21] = v12;
  v8[18] = a6;
  v8[19] = a7;
  v8[16] = a4;
  v8[17] = a5;
  v8[14] = a1;
  v8[15] = a3;
  uint64_t v9 = type metadata accessor for UUID();
  v8[22] = v9;
  v8[23] = *(void *)(v9 - 8);
  v8[24] = swift_task_alloc();
  return _swift_task_switch(sub_1001E4264, 0, 0);
}

uint64_t sub_1001E4264()
{
  uint64_t v40 = v0;
  *(void *)(v0 + 16) = v0 + 88;
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 152);
  unint64_t v3 = *(void *)(v0 + 160);
  *(void *)(v0 + 24) = *(void *)(v0 + 192);
  *(void *)(v0 + 64) = v2;
  *(void *)(v0 + 72) = v3;
  *(void *)(v0 + 80) = v0 + 64;
  sub_100012670(v2, v3);
  *(void *)(v0 + 104) = &type metadata for Data;
  *(void *)(v0 + 32) = sub_1000172F8(&qword_10065C908);
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 96) = sub_1000175C4();
  *(void *)(v0 + 48) = sub_100012760();
  *(void *)(v0 + 56) = sub_1000139E4((unint64_t *)&unk_10065C920, (void (*)(uint64_t))&type metadata accessor for UUID);
  decodeXPCValues<each A, B>(from:)();
  sub_100013510(*(void *)(v0 + 64), *(void *)(v0 + 72));
  uint64_t v5 = *(void *)(v0 + 88);
  *(void *)(v0 + 200) = v5;
  uint64_t v6 = sub_100012D64(v5);
  uint64_t v7 = sub_1000126C8(v6);
  *(void *)(v0 + 208) = v7;
  swift_bridgeObjectRelease();
  char v8 = *(unsigned char *)(v7 + 32);
  *(unsigned char *)(v0 + 256) = v8;
  uint64_t v9 = -1;
  uint64_t v10 = -1 << v8;
  if (-v10 < 64) {
    uint64_t v9 = ~(-1 << -(char)v10);
  }
  unint64_t v11 = v9 & *(void *)(v7 + 56);
  if (v11)
  {
    uint64_t v12 = 0;
    unint64_t v13 = __clz(__rbit64(v11));
    uint64_t v14 = (v11 - 1) & v11;
    uint64_t v15 = *(void **)(v0 + 208);
LABEL_9:
    *(void *)(v0 + 216) = v12;
    *(void *)(v0 + 224) = v14;
    uint64_t v16 = v15[6] + 16 * v13;
    uint64_t v17 = *(void *)v16;
    *(void *)(v0 + 232) = *(void *)v16;
    char v18 = *(unsigned char *)(v16 + 8);
    uint64_t v37 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                    + dword_10065D5F0);
    swift_bridgeObjectRetain();
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_1001E4734;
    uint64_t v20 = *(void *)(v0 + 136);
    uint64_t v21 = *(void *)(v0 + 144);
    uint64_t v22 = *(void *)(v0 + 120);
    uint64_t v23 = *(void *)(v0 + 128);
    return v37(v17, v18, v22, v23, v20, v21);
  }
  unint64_t v24 = 63 - v10;
  uint64_t v15 = *(void **)(v0 + 208);
  if (v24 > 0x7F)
  {
    unint64_t v25 = v15[8];
    if (v25)
    {
      uint64_t v12 = 1;
LABEL_15:
      uint64_t v14 = (v25 - 1) & v25;
      unint64_t v13 = __clz(__rbit64(v25)) + (v12 << 6);
      goto LABEL_9;
    }
    if (v24 >= 0xC0)
    {
      unint64_t v25 = v15[9];
      if (v25)
      {
        uint64_t v12 = 2;
        goto LABEL_15;
      }
      if (v24 >= 0x100)
      {
        unint64_t v25 = v15[10];
        if (v25)
        {
          uint64_t v12 = 3;
          goto LABEL_15;
        }
        if (v24 >= 0x140)
        {
          unint64_t v25 = v15[11];
          if (v25)
          {
            uint64_t v12 = 4;
            goto LABEL_15;
          }
          uint64_t v26 = 0;
          uint64_t v27 = v24 >> 6;
          if (v27 <= 5) {
            uint64_t v27 = 5;
          }
          uint64_t v28 = v27 - 5;
          while (v28 != v26)
          {
            unint64_t v25 = v15[v26++ + 12];
            if (v25)
            {
              uint64_t v12 = v26 + 4;
              goto LABEL_15;
            }
          }
        }
      }
    }
  }
  uint64_t v29 = *(void *)(v0 + 168);
  long long v38 = *(_OWORD *)(v0 + 192);
  swift_release();
  uint64_t v30 = *(os_unfair_lock_s **)(*(void *)(*(void *)(v29
                                                     + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies)
                                         + 16)
                             + 16);
  *(_OWORD *)(swift_task_alloc() + 16) = v38;
  v30 += 6;
  swift_retain();
  os_unfair_lock_lock(v30);
  sub_10023C07C(&v39);
  os_unfair_lock_unlock(v30);
  uint64_t v31 = *(void *)(v0 + 192);
  uint64_t v32 = *(void *)(v0 + 176);
  uint64_t v33 = *(void *)(v0 + 184);
  uint64_t v34 = *(void *)(v0 + 168);
  uint64_t v35 = *(void **)(v0 + 112);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  *uint64_t v35 = *(void *)(v34 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_daemonInstanceIdentifier);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
  swift_task_dealloc();
  id v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_1001E4734(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 248) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1001E4CD8;
  }
  else
  {
    *(unsigned char *)(v4 + 257) = a1 & 1;
    uint64_t v5 = sub_1001E4890;
  }
  return _swift_task_switch(v5, 0, 0);
}

void sub_1001E4890()
{
  uint64_t v37 = v0;
  if (*(unsigned char *)(v0 + 257))
  {
    int64_t v1 = *(void *)(v0 + 216);
    unint64_t v2 = *(void *)(v0 + 224);
    if (v2)
    {
      unint64_t v3 = __clz(__rbit64(v2));
      uint64_t v4 = (v2 - 1) & v2;
      unint64_t v5 = v3 | (v1 << 6);
      uint64_t v6 = *(void *)(v0 + 208);
LABEL_4:
      *(void *)(v0 + 216) = v1;
      *(void *)(v0 + 224) = v4;
      uint64_t v7 = *(void *)(v6 + 48) + 16 * v5;
      uint64_t v8 = *(void *)v7;
      *(void *)(v0 + 232) = *(void *)v7;
      char v9 = *(unsigned char *)(v7 + 8);
      uint64_t v34 = (void (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                   + dword_10065D5F0);
      swift_bridgeObjectRetain();
      uint64_t v10 = (void *)swift_task_alloc();
      *(void *)(v0 + 240) = v10;
      *uint64_t v10 = v0;
      v10[1] = sub_1001E4734;
      uint64_t v11 = *(void *)(v0 + 136);
      uint64_t v12 = *(void *)(v0 + 144);
      uint64_t v13 = *(void *)(v0 + 120);
      uint64_t v14 = *(void *)(v0 + 128);
      v34(v8, v9, v13, v14, v11, v12);
      return;
    }
    int64_t v21 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    uint64_t v22 = *(void *)(v0 + 248);
    int64_t v23 = (unint64_t)((1 << *(unsigned char *)(v0 + 256)) + 63) >> 6;
    uint64_t v6 = *(void *)(v0 + 208);
    if (v21 < v23)
    {
      uint64_t v24 = v6 + 56;
      unint64_t v25 = *(void *)(v6 + 56 + 8 * v21);
      ++v1;
      if (v25)
      {
LABEL_14:
        uint64_t v4 = (v25 - 1) & v25;
        unint64_t v5 = __clz(__rbit64(v25)) + (v1 << 6);
        goto LABEL_4;
      }
      int64_t v1 = v21 + 1;
      if (v21 + 1 < v23)
      {
        unint64_t v25 = *(void *)(v24 + 8 * v1);
        if (v25) {
          goto LABEL_14;
        }
        int64_t v1 = v21 + 2;
        if (v21 + 2 < v23)
        {
          unint64_t v25 = *(void *)(v24 + 8 * v1);
          if (v25) {
            goto LABEL_14;
          }
          int64_t v26 = v21 + 3;
          if (v26 < v23)
          {
            unint64_t v25 = *(void *)(v24 + 8 * v26);
            if (v25)
            {
              int64_t v1 = v26;
              goto LABEL_14;
            }
            while (1)
            {
              int64_t v1 = v26 + 1;
              if (__OFADD__(v26, 1)) {
                break;
              }
              if (v1 >= v23) {
                goto LABEL_25;
              }
              unint64_t v25 = *(void *)(v24 + 8 * v1);
              ++v26;
              if (v25) {
                goto LABEL_14;
              }
            }
LABEL_28:
            __break(1u);
            return;
          }
        }
      }
    }
LABEL_25:
    uint64_t v27 = *(void *)(v0 + 168);
    long long v35 = *(_OWORD *)(v0 + 192);
    swift_release();
    uint64_t v28 = *(os_unfair_lock_s **)(*(void *)(*(void *)(v27
                                                       + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies)
                                           + 16)
                               + 16);
    *(_OWORD *)(swift_task_alloc() + 16) = v35;
    v28 += 6;
    swift_retain();
    os_unfair_lock_lock(v28);
    sub_10023C07C(&v36);
    os_unfair_lock_unlock(v28);
    if (v22) {
      return;
    }
    uint64_t v29 = *(void *)(v0 + 192);
    uint64_t v30 = *(void *)(v0 + 176);
    uint64_t v31 = *(void *)(v0 + 184);
    uint64_t v32 = *(void *)(v0 + 168);
    uint64_t v33 = *(void **)(v0 + 112);
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    *uint64_t v33 = *(void *)(v32 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_daemonInstanceIdentifier);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
    swift_task_dealloc();
    uint64_t v20 = *(void (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 184);
    uint64_t v15 = *(void *)(v0 + 192);
    uint64_t v17 = *(void *)(v0 + 176);
    swift_bridgeObjectRelease();
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    uint64_t v18 = type metadata accessor for ManagedAppDistributionError();
    sub_1000139E4((unint64_t *)&qword_10065B910, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v18 - 8) + 104))(v19, enum case for ManagedAppDistributionError.unrecoverableError(_:), v18);
    swift_willThrow();
    swift_errorRelease();
    swift_task_dealloc();
    uint64_t v20 = *(void (**)(void))(v0 + 8);
  }
  v20();
}

uint64_t sub_1001E4CD8()
{
  uint64_t v2 = v0[23];
  uint64_t v1 = v0[24];
  uint64_t v3 = v0[22];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = type metadata accessor for ManagedAppDistributionError();
  sub_1000139E4((unint64_t *)&qword_10065B910, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(v5, enum case for ManagedAppDistributionError.unrecoverableError(_:), v4);
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1001E50C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  *(void *)(v8 + 96) = v18;
  *(void *)(v8 + 104) = v19;
  *(void *)(v8 + 80) = v16;
  *(void *)(v8 + 88) = v17;
  *(unsigned char *)(v8 + 186) = v14;
  *(void *)(v8 + 64) = v13;
  *(void *)(v8 + 72) = v15;
  *(_OWORD *)(v8 + 48) = v12;
  *(unsigned char *)(v8 + 185) = a8;
  *(unsigned char *)(v8 + 184) = a6;
  *(void *)(v8 + 32) = a5;
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a4;
  sub_1000172F8((uint64_t *)&unk_100661AB0);
  *(void *)(v8 + 112) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for LogKey.Prefix();
  *(void *)(v8 + 120) = v9;
  *(void *)(v8 + 128) = *(void *)(v9 - 8);
  *(void *)(v8 + 136) = swift_task_alloc();
  *(void *)(v8 + 144) = swift_task_alloc();
  sub_1000172F8(&qword_10065C2E0);
  *(void *)(v8 + 152) = swift_task_alloc();
  return _swift_task_switch(sub_1001E5230, 0, 0);
}

void sub_1001E5230()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  sub_100017238(*(void *)(v0 + 40), v1, &qword_10065C2E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 32))(v5, *(void *)(v0 + 152), v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
    id v9 = objc_allocWithZone((Class)type metadata accessor for LogKey());
    uint64_t v4 = LogKey.init(prefix:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v8);
  }
  *(void *)(v0 + 160) = v4;
  uint64_t v11 = *(void *)(v0 + 104);
  uint64_t v10 = *(void *)(v0 + 112);
  char v12 = *(unsigned char *)(v0 + 186);
  uint64_t v13 = *(void *)(v0 + 64);
  long long v23 = *(_OWORD *)(v0 + 48);
  char v14 = *(unsigned char *)(v0 + 185);
  char v15 = *(unsigned char *)(v0 + 184);
  uint64_t v17 = *(void *)(v0 + 24);
  uint64_t v16 = *(void *)(v0 + 32);
  uint64_t v18 = type metadata accessor for Logger();
  long long v21 = *(_OWORD *)(v0 + 72);
  long long v22 = *(_OWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
  uint64_t v19 = swift_task_alloc();
  *(void *)(v0 + 168) = v19;
  *(unsigned char *)(v19 + 16) = v14;
  *(_OWORD *)(v19 + 24) = v23;
  *(void *)(v19 + 40) = v13;
  *(unsigned char *)(v19 + 48) = v12 & 1;
  *(_OWORD *)(v19 + 56) = v21;
  *(void *)(v19 + 72) = v17;
  *(void *)(v19 + 80) = v16;
  *(unsigned char *)(v19 + 88) = v15;
  *(_OWORD *)(v19 + 96) = v22;
  *(void *)(v19 + 112) = v11;
  uint64_t v24 = (char *)&dword_10065C340 + dword_10065C340;
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_1000186A0;
  __asm { BR              X8; sub_100008B8C }
}

uint64_t sub_1001E54B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  *(void *)(v8 + 96) = v18;
  *(void *)(v8 + 104) = v19;
  *(void *)(v8 + 80) = v16;
  *(void *)(v8 + 88) = v17;
  *(unsigned char *)(v8 + 186) = v14;
  *(void *)(v8 + 64) = v13;
  *(void *)(v8 + 72) = v15;
  *(_OWORD *)(v8 + 48) = v12;
  *(unsigned char *)(v8 + 185) = a8;
  *(unsigned char *)(v8 + 184) = a6;
  *(void *)(v8 + 32) = a5;
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a4;
  sub_1000172F8((uint64_t *)&unk_100661AB0);
  *(void *)(v8 + 112) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for LogKey.Prefix();
  *(void *)(v8 + 120) = v9;
  *(void *)(v8 + 128) = *(void *)(v9 - 8);
  *(void *)(v8 + 136) = swift_task_alloc();
  *(void *)(v8 + 144) = swift_task_alloc();
  sub_1000172F8(&qword_10065C2E0);
  *(void *)(v8 + 152) = swift_task_alloc();
  return _swift_task_switch(sub_1001E561C, 0, 0);
}

void sub_1001E561C()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  sub_100017238(*(void *)(v0 + 40), v1, &qword_10065C2E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 32))(v5, *(void *)(v0 + 152), v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
    id v9 = objc_allocWithZone((Class)type metadata accessor for LogKey());
    uint64_t v4 = LogKey.init(prefix:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v8);
  }
  *(void *)(v0 + 160) = v4;
  uint64_t v11 = *(void *)(v0 + 104);
  uint64_t v10 = *(void *)(v0 + 112);
  char v12 = *(unsigned char *)(v0 + 186);
  uint64_t v13 = *(void *)(v0 + 64);
  long long v23 = *(_OWORD *)(v0 + 48);
  char v14 = *(unsigned char *)(v0 + 185);
  char v15 = *(unsigned char *)(v0 + 184);
  uint64_t v17 = *(void *)(v0 + 24);
  uint64_t v16 = *(void *)(v0 + 32);
  uint64_t v18 = type metadata accessor for Logger();
  long long v21 = *(_OWORD *)(v0 + 72);
  long long v22 = *(_OWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
  uint64_t v19 = swift_task_alloc();
  *(void *)(v0 + 168) = v19;
  *(unsigned char *)(v19 + 16) = v14;
  *(_OWORD *)(v19 + 24) = v23;
  *(void *)(v19 + 40) = v13;
  *(unsigned char *)(v19 + 48) = v12 & 1;
  *(_OWORD *)(v19 + 56) = v21;
  *(void *)(v19 + 72) = v17;
  *(void *)(v19 + 80) = v16;
  *(unsigned char *)(v19 + 88) = v15;
  *(_OWORD *)(v19 + 96) = v22;
  *(void *)(v19 + 112) = v11;
  uint64_t v24 = (char *)&dword_10065C340 + dword_10065C340;
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_1000186A0;
  __asm { BR              X8; sub_100008B8C }
}

uint64_t sub_1001E589C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  *(void *)(v8 + 96) = v18;
  *(void *)(v8 + 104) = v19;
  *(void *)(v8 + 80) = v16;
  *(void *)(v8 + 88) = v17;
  *(unsigned char *)(v8 + 186) = v14;
  *(void *)(v8 + 64) = v13;
  *(void *)(v8 + 72) = v15;
  *(_OWORD *)(v8 + 48) = v12;
  *(unsigned char *)(v8 + 185) = a8;
  *(unsigned char *)(v8 + 184) = a6;
  *(void *)(v8 + 32) = a5;
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a4;
  sub_1000172F8((uint64_t *)&unk_100661AB0);
  *(void *)(v8 + 112) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for LogKey.Prefix();
  *(void *)(v8 + 120) = v9;
  *(void *)(v8 + 128) = *(void *)(v9 - 8);
  *(void *)(v8 + 136) = swift_task_alloc();
  *(void *)(v8 + 144) = swift_task_alloc();
  sub_1000172F8(&qword_10065C2E0);
  *(void *)(v8 + 152) = swift_task_alloc();
  return _swift_task_switch(sub_1001E5A08, 0, 0);
}

void sub_1001E5A08()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  sub_100017238(*(void *)(v0 + 40), v1, &qword_10065C2E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 32))(v5, *(void *)(v0 + 152), v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
    id v9 = objc_allocWithZone((Class)type metadata accessor for LogKey());
    uint64_t v4 = LogKey.init(prefix:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v8);
  }
  *(void *)(v0 + 160) = v4;
  uint64_t v11 = *(void *)(v0 + 104);
  uint64_t v10 = *(void *)(v0 + 112);
  char v12 = *(unsigned char *)(v0 + 186);
  uint64_t v13 = *(void *)(v0 + 64);
  long long v23 = *(_OWORD *)(v0 + 48);
  char v14 = *(unsigned char *)(v0 + 185);
  char v15 = *(unsigned char *)(v0 + 184);
  uint64_t v17 = *(void *)(v0 + 24);
  uint64_t v16 = *(void *)(v0 + 32);
  uint64_t v18 = type metadata accessor for Logger();
  long long v21 = *(_OWORD *)(v0 + 72);
  long long v22 = *(_OWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
  uint64_t v19 = swift_task_alloc();
  *(void *)(v0 + 168) = v19;
  *(unsigned char *)(v19 + 16) = v14;
  *(_OWORD *)(v19 + 24) = v23;
  *(void *)(v19 + 40) = v13;
  *(unsigned char *)(v19 + 48) = v12 & 1;
  *(_OWORD *)(v19 + 56) = v21;
  *(void *)(v19 + 72) = v17;
  *(void *)(v19 + 80) = v16;
  *(unsigned char *)(v19 + 88) = v15;
  *(_OWORD *)(v19 + 96) = v22;
  *(void *)(v19 + 112) = v11;
  uint64_t v24 = (char *)&dword_10065C340 + dword_10065C340;
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_1000186A0;
  __asm { BR              X8; sub_100008B8C }
}

uint64_t sub_1001E5C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  *(void *)(v8 + 96) = v18;
  *(void *)(v8 + 104) = v19;
  *(void *)(v8 + 80) = v16;
  *(void *)(v8 + 88) = v17;
  *(unsigned char *)(v8 + 186) = v14;
  *(void *)(v8 + 64) = v13;
  *(void *)(v8 + 72) = v15;
  *(_OWORD *)(v8 + 48) = v12;
  *(unsigned char *)(v8 + 185) = a8;
  *(unsigned char *)(v8 + 184) = a6;
  *(void *)(v8 + 32) = a5;
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a4;
  sub_1000172F8((uint64_t *)&unk_100661AB0);
  *(void *)(v8 + 112) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for LogKey.Prefix();
  *(void *)(v8 + 120) = v9;
  *(void *)(v8 + 128) = *(void *)(v9 - 8);
  *(void *)(v8 + 136) = swift_task_alloc();
  *(void *)(v8 + 144) = swift_task_alloc();
  sub_1000172F8(&qword_10065C2E0);
  *(void *)(v8 + 152) = swift_task_alloc();
  return _swift_task_switch(sub_1001E5DF4, 0, 0);
}

void sub_1001E5DF4()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  sub_100017238(*(void *)(v0 + 40), v1, &qword_10065C2E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 32))(v5, *(void *)(v0 + 152), v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
    id v9 = objc_allocWithZone((Class)type metadata accessor for LogKey());
    uint64_t v4 = LogKey.init(prefix:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v8);
  }
  *(void *)(v0 + 160) = v4;
  uint64_t v11 = *(void *)(v0 + 104);
  uint64_t v10 = *(void *)(v0 + 112);
  char v12 = *(unsigned char *)(v0 + 186);
  uint64_t v13 = *(void *)(v0 + 64);
  long long v23 = *(_OWORD *)(v0 + 48);
  char v14 = *(unsigned char *)(v0 + 185);
  char v15 = *(unsigned char *)(v0 + 184);
  uint64_t v17 = *(void *)(v0 + 24);
  uint64_t v16 = *(void *)(v0 + 32);
  uint64_t v18 = type metadata accessor for Logger();
  long long v21 = *(_OWORD *)(v0 + 72);
  long long v22 = *(_OWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
  uint64_t v19 = swift_task_alloc();
  *(void *)(v0 + 168) = v19;
  *(unsigned char *)(v19 + 16) = v14;
  *(_OWORD *)(v19 + 24) = v23;
  *(void *)(v19 + 40) = v13;
  *(unsigned char *)(v19 + 48) = v12 & 1;
  *(_OWORD *)(v19 + 56) = v21;
  *(void *)(v19 + 72) = v17;
  *(void *)(v19 + 80) = v16;
  *(unsigned char *)(v19 + 88) = v15;
  *(_OWORD *)(v19 + 96) = v22;
  *(void *)(v19 + 112) = v11;
  uint64_t v24 = (char *)&dword_10065C340 + dword_10065C340;
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_10000D1E8;
  __asm { BR              X8; sub_100008B8C }
}

uint64_t sub_1001E6074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  *(void *)(v8 + 96) = v18;
  *(void *)(v8 + 104) = v19;
  *(void *)(v8 + 80) = v16;
  *(void *)(v8 + 88) = v17;
  *(unsigned char *)(v8 + 186) = v14;
  *(void *)(v8 + 64) = v13;
  *(void *)(v8 + 72) = v15;
  *(_OWORD *)(v8 + 48) = v12;
  *(unsigned char *)(v8 + 185) = a8;
  *(unsigned char *)(v8 + 184) = a6;
  *(void *)(v8 + 32) = a5;
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a4;
  sub_1000172F8((uint64_t *)&unk_100661AB0);
  *(void *)(v8 + 112) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for LogKey.Prefix();
  *(void *)(v8 + 120) = v9;
  *(void *)(v8 + 128) = *(void *)(v9 - 8);
  *(void *)(v8 + 136) = swift_task_alloc();
  *(void *)(v8 + 144) = swift_task_alloc();
  sub_1000172F8(&qword_10065C2E0);
  *(void *)(v8 + 152) = swift_task_alloc();
  return _swift_task_switch(sub_1001E61E0, 0, 0);
}

void sub_1001E61E0()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  sub_100017238(*(void *)(v0 + 40), v1, &qword_10065C2E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 32))(v5, *(void *)(v0 + 152), v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
    id v9 = objc_allocWithZone((Class)type metadata accessor for LogKey());
    uint64_t v4 = LogKey.init(prefix:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v8);
  }
  *(void *)(v0 + 160) = v4;
  uint64_t v11 = *(void *)(v0 + 104);
  uint64_t v10 = *(void *)(v0 + 112);
  char v12 = *(unsigned char *)(v0 + 186);
  uint64_t v13 = *(void *)(v0 + 64);
  long long v23 = *(_OWORD *)(v0 + 48);
  char v14 = *(unsigned char *)(v0 + 185);
  char v15 = *(unsigned char *)(v0 + 184);
  uint64_t v17 = *(void *)(v0 + 24);
  uint64_t v16 = *(void *)(v0 + 32);
  uint64_t v18 = type metadata accessor for Logger();
  long long v21 = *(_OWORD *)(v0 + 72);
  long long v22 = *(_OWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
  uint64_t v19 = swift_task_alloc();
  *(void *)(v0 + 168) = v19;
  *(unsigned char *)(v19 + 16) = v14;
  *(_OWORD *)(v19 + 24) = v23;
  *(void *)(v19 + 40) = v13;
  *(unsigned char *)(v19 + 48) = v12 & 1;
  *(_OWORD *)(v19 + 56) = v21;
  *(void *)(v19 + 72) = v17;
  *(void *)(v19 + 80) = v16;
  *(unsigned char *)(v19 + 88) = v15;
  *(_OWORD *)(v19 + 96) = v22;
  *(void *)(v19 + 112) = v11;
  uint64_t v24 = (char *)&dword_10065C340 + dword_10065C340;
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_1000186A0;
  __asm { BR              X8; sub_100008B8C }
}

uint64_t sub_1001E6460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  *(void *)(v8 + 96) = v18;
  *(void *)(v8 + 104) = v19;
  *(void *)(v8 + 80) = v16;
  *(void *)(v8 + 88) = v17;
  *(unsigned char *)(v8 + 186) = v14;
  *(void *)(v8 + 64) = v13;
  *(void *)(v8 + 72) = v15;
  *(_OWORD *)(v8 + 48) = v12;
  *(unsigned char *)(v8 + 185) = a8;
  *(unsigned char *)(v8 + 184) = a6;
  *(void *)(v8 + 32) = a5;
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a4;
  sub_1000172F8((uint64_t *)&unk_100661AB0);
  *(void *)(v8 + 112) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for LogKey.Prefix();
  *(void *)(v8 + 120) = v9;
  *(void *)(v8 + 128) = *(void *)(v9 - 8);
  *(void *)(v8 + 136) = swift_task_alloc();
  *(void *)(v8 + 144) = swift_task_alloc();
  sub_1000172F8(&qword_10065C2E0);
  *(void *)(v8 + 152) = swift_task_alloc();
  return _swift_task_switch(sub_1001E65CC, 0, 0);
}

void sub_1001E65CC()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  sub_100017238(*(void *)(v0 + 40), v1, &qword_10065C2E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 32))(v5, *(void *)(v0 + 152), v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
    id v9 = objc_allocWithZone((Class)type metadata accessor for LogKey());
    uint64_t v4 = LogKey.init(prefix:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v8);
  }
  *(void *)(v0 + 160) = v4;
  uint64_t v11 = *(void *)(v0 + 104);
  uint64_t v10 = *(void *)(v0 + 112);
  char v12 = *(unsigned char *)(v0 + 186);
  uint64_t v13 = *(void *)(v0 + 64);
  long long v23 = *(_OWORD *)(v0 + 48);
  char v14 = *(unsigned char *)(v0 + 185);
  char v15 = *(unsigned char *)(v0 + 184);
  uint64_t v17 = *(void *)(v0 + 24);
  uint64_t v16 = *(void *)(v0 + 32);
  uint64_t v18 = type metadata accessor for Logger();
  long long v21 = *(_OWORD *)(v0 + 72);
  long long v22 = *(_OWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
  uint64_t v19 = swift_task_alloc();
  *(void *)(v0 + 168) = v19;
  *(unsigned char *)(v19 + 16) = v14;
  *(_OWORD *)(v19 + 24) = v23;
  *(void *)(v19 + 40) = v13;
  *(unsigned char *)(v19 + 48) = v12 & 1;
  *(_OWORD *)(v19 + 56) = v21;
  *(void *)(v19 + 72) = v17;
  *(void *)(v19 + 80) = v16;
  *(unsigned char *)(v19 + 88) = v15;
  *(_OWORD *)(v19 + 96) = v22;
  *(void *)(v19 + 112) = v11;
  uint64_t v24 = (char *)&dword_10065C340 + dword_10065C340;
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_1000186A0;
  __asm { BR              X8; sub_100008B8C }
}

uint64_t sub_1001E684C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  *(void *)(v8 + 96) = v18;
  *(void *)(v8 + 104) = v19;
  *(void *)(v8 + 80) = v16;
  *(void *)(v8 + 88) = v17;
  *(unsigned char *)(v8 + 186) = v14;
  *(void *)(v8 + 64) = v13;
  *(void *)(v8 + 72) = v15;
  *(_OWORD *)(v8 + 48) = v12;
  *(unsigned char *)(v8 + 185) = a8;
  *(unsigned char *)(v8 + 184) = a6;
  *(void *)(v8 + 32) = a5;
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a4;
  sub_1000172F8((uint64_t *)&unk_100661AB0);
  *(void *)(v8 + 112) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for LogKey.Prefix();
  *(void *)(v8 + 120) = v9;
  *(void *)(v8 + 128) = *(void *)(v9 - 8);
  *(void *)(v8 + 136) = swift_task_alloc();
  *(void *)(v8 + 144) = swift_task_alloc();
  sub_1000172F8(&qword_10065C2E0);
  *(void *)(v8 + 152) = swift_task_alloc();
  return _swift_task_switch(sub_1001E69B8, 0, 0);
}

void sub_1001E69B8()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  sub_100017238(*(void *)(v0 + 40), v1, &qword_10065C2E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 32))(v5, *(void *)(v0 + 152), v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
    id v9 = objc_allocWithZone((Class)type metadata accessor for LogKey());
    uint64_t v4 = LogKey.init(prefix:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v8);
  }
  *(void *)(v0 + 160) = v4;
  uint64_t v11 = *(void *)(v0 + 104);
  uint64_t v10 = *(void *)(v0 + 112);
  char v12 = *(unsigned char *)(v0 + 186);
  uint64_t v13 = *(void *)(v0 + 64);
  long long v23 = *(_OWORD *)(v0 + 48);
  char v14 = *(unsigned char *)(v0 + 185);
  char v15 = *(unsigned char *)(v0 + 184);
  uint64_t v17 = *(void *)(v0 + 24);
  uint64_t v16 = *(void *)(v0 + 32);
  uint64_t v18 = type metadata accessor for Logger();
  long long v21 = *(_OWORD *)(v0 + 72);
  long long v22 = *(_OWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
  uint64_t v19 = swift_task_alloc();
  *(void *)(v0 + 168) = v19;
  *(unsigned char *)(v19 + 16) = v14;
  *(_OWORD *)(v19 + 24) = v23;
  *(void *)(v19 + 40) = v13;
  *(unsigned char *)(v19 + 48) = v12 & 1;
  *(_OWORD *)(v19 + 56) = v21;
  *(void *)(v19 + 72) = v17;
  *(void *)(v19 + 80) = v16;
  *(unsigned char *)(v19 + 88) = v15;
  *(_OWORD *)(v19 + 96) = v22;
  *(void *)(v19 + 112) = v11;
  uint64_t v24 = (char *)&dword_10065C340 + dword_10065C340;
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_1000186A0;
  __asm { BR              X8; sub_100008B8C }
}

uint64_t sub_1001E6C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  *(void *)(v8 + 96) = v18;
  *(void *)(v8 + 104) = v19;
  *(void *)(v8 + 80) = v16;
  *(void *)(v8 + 88) = v17;
  *(unsigned char *)(v8 + 186) = v14;
  *(void *)(v8 + 64) = v13;
  *(void *)(v8 + 72) = v15;
  *(_OWORD *)(v8 + 48) = v12;
  *(unsigned char *)(v8 + 185) = a8;
  *(unsigned char *)(v8 + 184) = a6;
  *(void *)(v8 + 32) = a5;
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a4;
  sub_1000172F8((uint64_t *)&unk_100661AB0);
  *(void *)(v8 + 112) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for LogKey.Prefix();
  *(void *)(v8 + 120) = v9;
  *(void *)(v8 + 128) = *(void *)(v9 - 8);
  *(void *)(v8 + 136) = swift_task_alloc();
  *(void *)(v8 + 144) = swift_task_alloc();
  sub_1000172F8(&qword_10065C2E0);
  *(void *)(v8 + 152) = swift_task_alloc();
  return _swift_task_switch(sub_1001E6DA4, 0, 0);
}

void sub_1001E6DA4()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  sub_100017238(*(void *)(v0 + 40), v1, &qword_10065C2E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 32))(v5, *(void *)(v0 + 152), v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
    id v9 = objc_allocWithZone((Class)type metadata accessor for LogKey());
    uint64_t v4 = LogKey.init(prefix:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v8);
  }
  *(void *)(v0 + 160) = v4;
  uint64_t v11 = *(void *)(v0 + 104);
  uint64_t v10 = *(void *)(v0 + 112);
  char v12 = *(unsigned char *)(v0 + 186);
  uint64_t v13 = *(void *)(v0 + 64);
  long long v23 = *(_OWORD *)(v0 + 48);
  char v14 = *(unsigned char *)(v0 + 185);
  char v15 = *(unsigned char *)(v0 + 184);
  uint64_t v17 = *(void *)(v0 + 24);
  uint64_t v16 = *(void *)(v0 + 32);
  uint64_t v18 = type metadata accessor for Logger();
  long long v21 = *(_OWORD *)(v0 + 72);
  long long v22 = *(_OWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
  uint64_t v19 = swift_task_alloc();
  *(void *)(v0 + 168) = v19;
  *(unsigned char *)(v19 + 16) = v14;
  *(_OWORD *)(v19 + 24) = v23;
  *(void *)(v19 + 40) = v13;
  *(unsigned char *)(v19 + 48) = v12 & 1;
  *(_OWORD *)(v19 + 56) = v21;
  *(void *)(v19 + 72) = v17;
  *(void *)(v19 + 80) = v16;
  *(unsigned char *)(v19 + 88) = v15;
  *(_OWORD *)(v19 + 96) = v22;
  *(void *)(v19 + 112) = v11;
  uint64_t v24 = (char *)&dword_10065C340 + dword_10065C340;
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_1000186A0;
  __asm { BR              X8; sub_100008B8C }
}

uint64_t sub_1001E7024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  *(void *)(v8 + 96) = v18;
  *(void *)(v8 + 104) = v19;
  *(void *)(v8 + 80) = v16;
  *(void *)(v8 + 88) = v17;
  *(unsigned char *)(v8 + 186) = v14;
  *(void *)(v8 + 64) = v13;
  *(void *)(v8 + 72) = v15;
  *(_OWORD *)(v8 + 48) = v12;
  *(unsigned char *)(v8 + 185) = a8;
  *(unsigned char *)(v8 + 184) = a6;
  *(void *)(v8 + 32) = a5;
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a4;
  sub_1000172F8((uint64_t *)&unk_100661AB0);
  *(void *)(v8 + 112) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for LogKey.Prefix();
  *(void *)(v8 + 120) = v9;
  *(void *)(v8 + 128) = *(void *)(v9 - 8);
  *(void *)(v8 + 136) = swift_task_alloc();
  *(void *)(v8 + 144) = swift_task_alloc();
  sub_1000172F8(&qword_10065C2E0);
  *(void *)(v8 + 152) = swift_task_alloc();
  return _swift_task_switch(sub_1001E7190, 0, 0);
}

void sub_1001E7190()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  sub_100017238(*(void *)(v0 + 40), v1, &qword_10065C2E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 32))(v5, *(void *)(v0 + 152), v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
    id v9 = objc_allocWithZone((Class)type metadata accessor for LogKey());
    uint64_t v4 = LogKey.init(prefix:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v8);
  }
  *(void *)(v0 + 160) = v4;
  uint64_t v11 = *(void *)(v0 + 104);
  uint64_t v10 = *(void *)(v0 + 112);
  char v12 = *(unsigned char *)(v0 + 186);
  uint64_t v13 = *(void *)(v0 + 64);
  long long v23 = *(_OWORD *)(v0 + 48);
  char v14 = *(unsigned char *)(v0 + 185);
  char v15 = *(unsigned char *)(v0 + 184);
  uint64_t v17 = *(void *)(v0 + 24);
  uint64_t v16 = *(void *)(v0 + 32);
  uint64_t v18 = type metadata accessor for Logger();
  long long v21 = *(_OWORD *)(v0 + 72);
  long long v22 = *(_OWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
  uint64_t v19 = swift_task_alloc();
  *(void *)(v0 + 168) = v19;
  *(unsigned char *)(v19 + 16) = v14;
  *(_OWORD *)(v19 + 24) = v23;
  *(void *)(v19 + 40) = v13;
  *(unsigned char *)(v19 + 48) = v12 & 1;
  *(_OWORD *)(v19 + 56) = v21;
  *(void *)(v19 + 72) = v17;
  *(void *)(v19 + 80) = v16;
  *(unsigned char *)(v19 + 88) = v15;
  *(_OWORD *)(v19 + 96) = v22;
  *(void *)(v19 + 112) = v11;
  uint64_t v24 = (char *)&dword_10065C340 + dword_10065C340;
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_1000186A0;
  __asm { BR              X8; sub_100008B8C }
}

uint64_t sub_1001E7410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  *(void *)(v8 + 96) = v18;
  *(void *)(v8 + 104) = v19;
  *(void *)(v8 + 80) = v16;
  *(void *)(v8 + 88) = v17;
  *(unsigned char *)(v8 + 186) = v14;
  *(void *)(v8 + 64) = v13;
  *(void *)(v8 + 72) = v15;
  *(_OWORD *)(v8 + 48) = v12;
  *(unsigned char *)(v8 + 185) = a8;
  *(unsigned char *)(v8 + 184) = a6;
  *(void *)(v8 + 32) = a5;
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a4;
  sub_1000172F8((uint64_t *)&unk_100661AB0);
  *(void *)(v8 + 112) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for LogKey.Prefix();
  *(void *)(v8 + 120) = v9;
  *(void *)(v8 + 128) = *(void *)(v9 - 8);
  *(void *)(v8 + 136) = swift_task_alloc();
  *(void *)(v8 + 144) = swift_task_alloc();
  sub_1000172F8(&qword_10065C2E0);
  *(void *)(v8 + 152) = swift_task_alloc();
  return _swift_task_switch(sub_1001E757C, 0, 0);
}

void sub_1001E757C()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  sub_100017238(*(void *)(v0 + 40), v1, &qword_10065C2E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 32))(v5, *(void *)(v0 + 152), v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
    id v9 = objc_allocWithZone((Class)type metadata accessor for LogKey());
    uint64_t v4 = LogKey.init(prefix:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v8);
  }
  *(void *)(v0 + 160) = v4;
  uint64_t v11 = *(void *)(v0 + 104);
  uint64_t v10 = *(void *)(v0 + 112);
  char v12 = *(unsigned char *)(v0 + 186);
  uint64_t v13 = *(void *)(v0 + 64);
  long long v23 = *(_OWORD *)(v0 + 48);
  char v14 = *(unsigned char *)(v0 + 185);
  char v15 = *(unsigned char *)(v0 + 184);
  uint64_t v17 = *(void *)(v0 + 24);
  uint64_t v16 = *(void *)(v0 + 32);
  uint64_t v18 = type metadata accessor for Logger();
  long long v21 = *(_OWORD *)(v0 + 72);
  long long v22 = *(_OWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
  uint64_t v19 = swift_task_alloc();
  *(void *)(v0 + 168) = v19;
  *(unsigned char *)(v19 + 16) = v14;
  *(_OWORD *)(v19 + 24) = v23;
  *(void *)(v19 + 40) = v13;
  *(unsigned char *)(v19 + 48) = v12 & 1;
  *(_OWORD *)(v19 + 56) = v21;
  *(void *)(v19 + 72) = v17;
  *(void *)(v19 + 80) = v16;
  *(unsigned char *)(v19 + 88) = v15;
  *(_OWORD *)(v19 + 96) = v22;
  *(void *)(v19 + 112) = v11;
  uint64_t v24 = (char *)&dword_10065C340 + dword_10065C340;
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_1000186A0;
  __asm { BR              X8; sub_100008B8C }
}

uint64_t sub_1001E77FC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 216) = v19;
  *(_OWORD *)(v8 + 200) = v18;
  *(unsigned char *)(v8 + 499) = v17;
  *(_OWORD *)(v8 + 184) = v16;
  *(void *)(v8 + 168) = a7;
  *(void *)(v8 + 176) = a8;
  *(unsigned char *)(v8 + 498) = a6;
  *(void *)(v8 + 152) = a4;
  *(void *)(v8 + 160) = a5;
  *(void *)(v8 + 144) = a3;
  *(unsigned char *)(v8 + 497) = a2;
  uint64_t v9 = type metadata accessor for ManagedAppDistributionError();
  *(void *)(v8 + 224) = v9;
  *(void *)(v8 + 232) = *(void *)(v9 - 8);
  *(void *)(v8 + 240) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MarketplaceKitError();
  *(void *)(v8 + 248) = v10;
  *(void *)(v8 + 256) = *(void *)(v10 - 8);
  *(void *)(v8 + 264) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Logger();
  *(void *)(v8 + 272) = v11;
  *(void *)(v8 + 280) = *(void *)(v11 - 8);
  *(void *)(v8 + 288) = swift_task_alloc();
  *(void *)(v8 + 296) = swift_task_alloc();
  *(void *)(v8 + 304) = swift_task_alloc();
  *(void *)(v8 + 312) = swift_task_alloc();
  uint64_t v12 = sub_1000172F8(&qword_10065C358);
  *(void *)(v8 + 320) = v12;
  *(void *)(v8 + 328) = *(void *)(v12 - 8);
  *(void *)(v8 + 336) = swift_task_alloc();
  *(void *)(v8 + 344) = swift_task_alloc();
  *(void *)(v8 + 352) = swift_task_alloc();
  uint64_t v13 = sub_1000172F8(&qword_10065C360);
  *(void *)(v8 + 360) = v13;
  *(void *)(v8 + 368) = *(void *)(v13 - 8);
  *(void *)(v8 + 376) = swift_task_alloc();
  *(void *)(v8 + 384) = swift_task_alloc();
  *(void *)(v8 + 392) = swift_task_alloc();
  return _swift_task_switch(sub_1001E7AC8, 0, 0);
}

uint64_t sub_1001E7AC8()
{
  uint64_t v109 = v0;
  uint64_t v1 = *(void *)(v0 + 144);
  if (*(unsigned char *)(v0 + 497) != 1)
  {
    if (v1)
    {
      sub_10001733C(*(void *)(v0 + 152), v0 + 464, &qword_10065C310);
      if ((*(unsigned char *)(v0 + 496) & 1) == 0)
      {
        char v107 = *(unsigned char *)(v0 + 498);
        uint64_t v106 = *(unsigned int *)(v0 + 464);
        *(_DWORD *)(v0 + 568) = v106;
        uint64_t v72 = *(unsigned int *)(v0 + 468);
        *(_DWORD *)(v0 + 572) = v72;
        uint64_t v73 = *(unsigned int *)(v0 + 472);
        *(_DWORD *)(v0 + 576) = v73;
        uint64_t v74 = *(unsigned int *)(v0 + 476);
        *(_DWORD *)(v0 + 580) = v74;
        uint64_t v75 = *(unsigned int *)(v0 + 480);
        *(_DWORD *)(v0 + 584) = v75;
        uint64_t v76 = *(unsigned int *)(v0 + 484);
        *(_DWORD *)(v0 + 588) = v76;
        uint64_t v77 = *(unsigned int *)(v0 + 488);
        *(_DWORD *)(v0 + 592) = v77;
        unint64_t v104 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                         + dword_10065D5F0);
        uint64_t v78 = *(unsigned int *)(v0 + 492);
        *(_DWORD *)(v0 + 596) = v78;
        swift_unknownObjectRetain();
        uint64_t v66 = (void *)swift_task_alloc();
        uint64_t v67 = v106 | (v72 << 32);
        *(void *)(v0 + 432) = v66;
        uint64_t v68 = v73 | (v74 << 32);
        uint64_t v69 = v75 | (v76 << 32);
        uint64_t v70 = v77 | (v78 << 32);
        *uint64_t v66 = v0;
        unint64_t v71 = sub_1001E9F3C;
        goto LABEL_26;
      }
    }
    static Logger.xpc.getter();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      long long v22 = (uint8_t *)swift_slowAlloc();
      long long v23 = (void *)swift_slowAlloc();
      *(_DWORD *)long long v22 = 138412290;
      uint64_t v24 = sub_1005163F0();
      *(void *)(v0 + 72) = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v23 = v24;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%@] Unable to obtain XPC connection, client, and audit token", v22, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v26 = *(void *)(v0 + 280);
    uint64_t v25 = *(void *)(v0 + 288);
    uint64_t v27 = *(void *)(v0 + 272);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    uint64_t v28 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    static Logger.xpc.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v32 = *(void *)(v0 + 296);
    uint64_t v33 = *(void *)(v0 + 272);
    uint64_t v34 = *(void *)(v0 + 280);
    if (v31)
    {
      uint64_t v103 = *(void *)(v0 + 296);
      uint64_t v35 = swift_slowAlloc();
      long long v99 = (void *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v102 = v33;
      uint64_t v36 = StaticString.description.getter();
      *(void *)(v0 + 56) = sub_1000143F4(v36, v37, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2114;
      swift_errorRetain();
      uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 64) = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v99 = v38;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Error in %s: %{public}@", (uint8_t *)v35, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v103, v102);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    }
    uint64_t v49 = *(void *)(v0 + 352);
    uint64_t v50 = *(void *)(v0 + 320);
    uint64_t v51 = *(void *)(v0 + 328);
    uint64_t v53 = *(void *)(v0 + 232);
    uint64_t v52 = *(void *)(v0 + 240);
    uint64_t v54 = *(void *)(v0 + 224);
    sub_1001E3BD8(v28, v52);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v49, v52, v54);
    (*(void (**)(uint64_t, void, uint64_t))(v51 + 104))(v49, enum case for ServiceResult.failure<A>(_:), v50);
    if (os_variant_has_internal_content())
    {
      uint64_t v56 = *(void *)(v0 + 232);
      uint64_t v55 = *(void *)(v0 + 240);
      uint64_t v57 = *(void *)(v0 + 224);
      if (*(void *)(v0 + 144))
      {
        swift_getObjectType();
        sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
        v58._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        XPCClientProtocol.logMessage(_:)(v58);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
LABEL_34:
        uint64_t v92 = *(void *)(v0 + 328);
        uint64_t v91 = *(void *)(v0 + 336);
        uint64_t v93 = *(void *)(v0 + 320);
        (*(void (**)(uint64_t, void, uint64_t))(v92 + 16))(v91, *(void *)(v0 + 352), v93);
        *(void *)(v0 + 88) = v91;
        *(void *)(v0 + 40) = v93;
        *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065C368, &qword_10065C358);
        long long v84 = (void (**)(uint64_t, uint64_t))(v92 + 8);
        uint64_t v85 = encodeXPCValues<each A>(_:)();
        unint64_t v87 = v94;
        uint64_t v88 = *(void *)(v0 + 352);
        uint64_t v89 = *(void *)(v0 + 336);
        uint64_t v90 = *(void *)(v0 + 320);
        goto LABEL_35;
      }
      (*(void (**)(void, void))(v56 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    }
    swift_errorRelease();
    goto LABEL_34;
  }
  if (!v1 || (sub_10001733C(*(void *)(v0 + 152), v0 + 500, &qword_10065C310), (*(unsigned char *)(v0 + 532) & 1) != 0))
  {
    static Logger.xpc.getter();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 138412290;
      uint64_t v6 = sub_1005163F0();
      *(void *)(v0 + 136) = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v5 = v6;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%@] Unable to obtain XPC connection, client, and audit token", v4, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v7 = *(void *)(v0 + 304);
    uint64_t v8 = *(void *)(v0 + 272);
    uint64_t v9 = *(void *)(v0 + 280);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    static Logger.xpc.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = *(void *)(v0 + 312);
    uint64_t v14 = *(void *)(v0 + 272);
    uint64_t v15 = *(void *)(v0 + 280);
    if (v12)
    {
      uint64_t v100 = *(void *)(v0 + 312);
      uint64_t v101 = *(void *)(v0 + 272);
      uint64_t v16 = swift_slowAlloc();
      long long v98 = (void *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v17 = StaticString.description.getter();
      *(void *)(v0 + 120) = sub_1000143F4(v17, v18, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2114;
      swift_errorRetain();
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 128) = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v98 = v19;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v100, v101);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    uint64_t v39 = *(void *)(v0 + 392);
    uint64_t v40 = *(void *)(v0 + 360);
    uint64_t v41 = *(void *)(v0 + 368);
    uint64_t v43 = *(void *)(v0 + 256);
    uint64_t v42 = *(void *)(v0 + 264);
    uint64_t v44 = *(void *)(v0 + 248);
    swift_getErrorValue();
    sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v42);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v39, v42, v44);
    (*(void (**)(uint64_t, void, uint64_t))(v41 + 104))(v39, enum case for MarketplaceKitServiceResult.failure<A>(_:), v40);
    if (os_variant_has_internal_content())
    {
      uint64_t v46 = *(void *)(v0 + 256);
      uint64_t v45 = *(void *)(v0 + 264);
      uint64_t v47 = *(void *)(v0 + 248);
      if (*(void *)(v0 + 144))
      {
        swift_getObjectType();
        sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
        v48._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        XPCClientProtocol.logMessage(_:)(v48);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
LABEL_31:
        uint64_t v82 = *(void *)(v0 + 368);
        uint64_t v81 = *(void *)(v0 + 376);
        uint64_t v83 = *(void *)(v0 + 360);
        (*(void (**)(uint64_t, void, uint64_t))(v82 + 16))(v81, *(void *)(v0 + 392), v83);
        *(void *)(v0 + 96) = v81;
        *(void *)(v0 + 104) = v83;
        *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065C380, &qword_10065C360);
        long long v84 = (void (**)(uint64_t, uint64_t))(v82 + 8);
        uint64_t v85 = encodeXPCValues<each A>(_:)();
        unint64_t v87 = v86;
        uint64_t v88 = *(void *)(v0 + 392);
        uint64_t v89 = *(void *)(v0 + 376);
        uint64_t v90 = *(void *)(v0 + 360);
LABEL_35:
        long long v95 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
        char v96 = *v84;
        (*v84)(v89, v90);
        v95(v85, v87);
        sub_100013510(v85, v87);
        v96(v88, v90);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        long long v97 = *(uint64_t (**)(void))(v0 + 8);
        return v97();
      }
      (*(void (**)(void, void))(v46 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    }
    swift_errorRelease();
    goto LABEL_31;
  }
  char v107 = *(unsigned char *)(v0 + 498);
  uint64_t v105 = *(unsigned int *)(v0 + 500);
  *(_DWORD *)(v0 + 536) = v105;
  uint64_t v59 = *(unsigned int *)(v0 + 504);
  *(_DWORD *)(v0 + 540) = v59;
  uint64_t v60 = *(unsigned int *)(v0 + 508);
  *(_DWORD *)(v0 + 544) = v60;
  uint64_t v61 = *(unsigned int *)(v0 + 512);
  *(_DWORD *)(v0 + 548) = v61;
  uint64_t v62 = *(unsigned int *)(v0 + 516);
  *(_DWORD *)(v0 + 552) = v62;
  uint64_t v63 = *(unsigned int *)(v0 + 520);
  *(_DWORD *)(v0 + 556) = v63;
  uint64_t v64 = *(unsigned int *)(v0 + 524);
  *(_DWORD *)(v0 + 560) = v64;
  unint64_t v104 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                   + dword_10065D5F0);
  uint64_t v65 = *(unsigned int *)(v0 + 528);
  *(_DWORD *)(v0 + 564) = v65;
  swift_unknownObjectRetain();
  uint64_t v66 = (void *)swift_task_alloc();
  uint64_t v67 = v105 | (v59 << 32);
  *(void *)(v0 + 400) = v66;
  uint64_t v68 = v60 | (v61 << 32);
  uint64_t v69 = v62 | (v63 << 32);
  uint64_t v70 = v64 | (v65 << 32);
  *uint64_t v66 = v0;
  unint64_t v71 = sub_1001E8938;
LABEL_26:
  v66[1] = v71;
  uint64_t v79 = *(void *)(v0 + 160);
  return v104(v79, v107 & 1, v67, v68, v69, v70);
}

uint64_t sub_1001E8938(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 408) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1001E9118;
  }
  else
  {
    *(unsigned char *)(v4 + 533) = a1 & 1;
    uint64_t v5 = sub_1001E8A64;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001E8A64()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 533) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 560);
    uint64_t v2 = *(void *)(v0 + 552);
    uint64_t v3 = *(void *)(v0 + 544);
    uint64_t v4 = *(void *)(v0 + 536);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v6;
    void *v6 = v0;
    v6[1] = sub_1001E9680;
    uint64_t v7 = *(void *)(v0 + 384);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = *(void *)(v0 + 312);
  uint64_t v13 = *(void *)(v0 + 272);
  uint64_t v14 = *(void *)(v0 + 280);
  if (v11)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v41 = *(void *)(v0 + 312);
    uint64_t v15 = swift_slowAlloc();
    uint64_t v40 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = StaticString.description.getter();
    *(void *)(v0 + 120) = sub_1000143F4(v16, v17, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2114;
    swift_errorRetain();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 128) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v40 = v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Error in %s: %{public}@", (uint8_t *)v15, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v41, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v19 = *(void *)(v0 + 392);
  uint64_t v20 = *(void *)(v0 + 360);
  uint64_t v21 = *(void *)(v0 + 368);
  uint64_t v23 = *(void *)(v0 + 256);
  uint64_t v22 = *(void *)(v0 + 264);
  uint64_t v24 = *(void *)(v0 + 248);
  swift_getErrorValue();
  sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v19, v22, v24);
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v19, enum case for MarketplaceKitServiceResult.failure<A>(_:), v20);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v26 = *(void *)(v0 + 256);
  uint64_t v25 = *(void *)(v0 + 264);
  uint64_t v27 = *(void *)(v0 + 248);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v26 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
  v28._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v28);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
LABEL_14:
  uint64_t v30 = *(void *)(v0 + 368);
  uint64_t v29 = *(void *)(v0 + 376);
  uint64_t v31 = *(void *)(v0 + 360);
  (*(void (**)(uint64_t, void, uint64_t))(v30 + 16))(v29, *(void *)(v0 + 392), v31);
  *(void *)(v0 + 96) = v29;
  *(void *)(v0 + 104) = v31;
  *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065C380, &qword_10065C360);
  uint64_t v32 = encodeXPCValues<each A>(_:)();
  unint64_t v34 = v33;
  uint64_t v35 = *(void *)(v0 + 392);
  uint64_t v36 = *(void *)(v0 + 360);
  unint64_t v37 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v38(*(void *)(v0 + 376), v36);
  v37(v32, v34);
  sub_100013510(v32, v34);
  v38(v35, v36);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_1001E9118()
{
  unint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065C380, &qword_10065C360);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1001E9680()
{
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1001E99D4;
  }
  else {
    os_log_type_t v2 = sub_1001E9794;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001E9794()
{
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[46];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for MarketplaceKitServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[53];
  uint64_t v7 = v0[46];
  uint64_t v6 = v0[47];
  uint64_t v8 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[49], v8);
  v0[12] = v6;
  v0[13] = v8;
  v0[14] = sub_10000DDFC(&qword_10065C380, &qword_10065C360);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[49];
  uint64_t v14 = v0[45];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[47], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1001E99D4()
{
  unint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065C380, &qword_10065C360);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1001E9F3C(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 440) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1001EA704;
  }
  else
  {
    *(unsigned char *)(v4 + 534) = a1 & 1;
    uint64_t v5 = sub_1001EA068;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001EA068()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 534) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 592);
    uint64_t v2 = *(void *)(v0 + 584);
    uint64_t v3 = *(void *)(v0 + 576);
    uint64_t v4 = *(void *)(v0 + 568);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    unint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v6;
    void *v6 = v0;
    v6[1] = sub_1001EAC50;
    uint64_t v7 = *(void *)(v0 + 344);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  uint64_t v9 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 296);
  uint64_t v14 = *(void *)(v0 + 272);
  uint64_t v15 = *(void *)(v0 + 280);
  if (v12)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v16 = swift_slowAlloc();
    uint64_t v41 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = StaticString.description.getter();
    *(void *)(v0 + 56) = sub_1000143F4(v17, v18, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2114;
    swift_errorRetain();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v41 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  uint64_t v20 = *(void *)(v0 + 352);
  uint64_t v21 = *(void *)(v0 + 320);
  uint64_t v22 = *(void *)(v0 + 328);
  uint64_t v24 = *(void *)(v0 + 232);
  uint64_t v23 = *(void *)(v0 + 240);
  uint64_t v25 = *(void *)(v0 + 224);
  sub_1001E3BD8(v9, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v20, v23, v25);
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))(v20, enum case for ServiceResult.failure<A>(_:), v21);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v27 = *(void *)(v0 + 232);
  uint64_t v26 = *(void *)(v0 + 240);
  uint64_t v28 = *(void *)(v0 + 224);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v27 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
  v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v29);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
LABEL_14:
  uint64_t v31 = *(void *)(v0 + 328);
  uint64_t v30 = *(void *)(v0 + 336);
  uint64_t v32 = *(void *)(v0 + 320);
  (*(void (**)(uint64_t, void, uint64_t))(v31 + 16))(v30, *(void *)(v0 + 352), v32);
  *(void *)(v0 + 88) = v30;
  *(void *)(v0 + 40) = v32;
  *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065C368, &qword_10065C358);
  uint64_t v33 = encodeXPCValues<each A>(_:)();
  unint64_t v35 = v34;
  uint64_t v36 = *(void *)(v0 + 352);
  uint64_t v37 = *(void *)(v0 + 320);
  uint64_t v38 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  v39(*(void *)(v0 + 336), v37);
  v38(v33, v35);
  sub_100013510(v33, v35);
  v39(v36, v37);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_1001EA704()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[55];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065C368, &qword_10065C358);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_1001EAC50()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001EAFA4;
  }
  else {
    uint64_t v2 = sub_1001EAD64;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001EAD64()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[44];
  uint64_t v3 = v0[40];
  uint64_t v4 = v0[41];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for ServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[57];
  uint64_t v7 = v0[41];
  uint64_t v6 = v0[42];
  uint64_t v8 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[44], v8);
  v0[5] = v8;
  v0[11] = v6;
  v0[6] = sub_10000DDFC(&qword_10065C368, &qword_10065C358);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[44];
  uint64_t v14 = v0[40];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[42], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1001EAFA4()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[57];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065C368, &qword_10065C358);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_1001EB4F0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 216) = v19;
  *(_OWORD *)(v8 + 200) = v18;
  *(unsigned char *)(v8 + 499) = v17;
  *(_OWORD *)(v8 + 184) = v16;
  *(void *)(v8 + 168) = a7;
  *(void *)(v8 + 176) = a8;
  *(unsigned char *)(v8 + 498) = a6;
  *(void *)(v8 + 152) = a4;
  *(void *)(v8 + 160) = a5;
  *(void *)(v8 + 144) = a3;
  *(unsigned char *)(v8 + 497) = a2;
  uint64_t v9 = type metadata accessor for ManagedAppDistributionError();
  *(void *)(v8 + 224) = v9;
  *(void *)(v8 + 232) = *(void *)(v9 - 8);
  *(void *)(v8 + 240) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MarketplaceKitError();
  *(void *)(v8 + 248) = v10;
  *(void *)(v8 + 256) = *(void *)(v10 - 8);
  *(void *)(v8 + 264) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Logger();
  *(void *)(v8 + 272) = v11;
  *(void *)(v8 + 280) = *(void *)(v11 - 8);
  *(void *)(v8 + 288) = swift_task_alloc();
  *(void *)(v8 + 296) = swift_task_alloc();
  *(void *)(v8 + 304) = swift_task_alloc();
  *(void *)(v8 + 312) = swift_task_alloc();
  uint64_t v12 = sub_1000172F8(&qword_10065CB60);
  *(void *)(v8 + 320) = v12;
  *(void *)(v8 + 328) = *(void *)(v12 - 8);
  *(void *)(v8 + 336) = swift_task_alloc();
  *(void *)(v8 + 344) = swift_task_alloc();
  *(void *)(v8 + 352) = swift_task_alloc();
  uint64_t v13 = sub_1000172F8(&qword_10065CB68);
  *(void *)(v8 + 360) = v13;
  *(void *)(v8 + 368) = *(void *)(v13 - 8);
  *(void *)(v8 + 376) = swift_task_alloc();
  *(void *)(v8 + 384) = swift_task_alloc();
  *(void *)(v8 + 392) = swift_task_alloc();
  return _swift_task_switch(sub_1001EB7BC, 0, 0);
}

uint64_t sub_1001EB7BC()
{
  uint64_t v109 = v0;
  uint64_t v1 = *(void *)(v0 + 144);
  if (*(unsigned char *)(v0 + 497) != 1)
  {
    if (v1)
    {
      sub_10001733C(*(void *)(v0 + 152), v0 + 464, &qword_10065C310);
      if ((*(unsigned char *)(v0 + 496) & 1) == 0)
      {
        char v107 = *(unsigned char *)(v0 + 498);
        uint64_t v106 = *(unsigned int *)(v0 + 464);
        *(_DWORD *)(v0 + 568) = v106;
        uint64_t v72 = *(unsigned int *)(v0 + 468);
        *(_DWORD *)(v0 + 572) = v72;
        uint64_t v73 = *(unsigned int *)(v0 + 472);
        *(_DWORD *)(v0 + 576) = v73;
        uint64_t v74 = *(unsigned int *)(v0 + 476);
        *(_DWORD *)(v0 + 580) = v74;
        uint64_t v75 = *(unsigned int *)(v0 + 480);
        *(_DWORD *)(v0 + 584) = v75;
        uint64_t v76 = *(unsigned int *)(v0 + 484);
        *(_DWORD *)(v0 + 588) = v76;
        uint64_t v77 = *(unsigned int *)(v0 + 488);
        *(_DWORD *)(v0 + 592) = v77;
        unint64_t v104 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                         + dword_10065D5F0);
        uint64_t v78 = *(unsigned int *)(v0 + 492);
        *(_DWORD *)(v0 + 596) = v78;
        swift_unknownObjectRetain();
        uint64_t v66 = (void *)swift_task_alloc();
        uint64_t v67 = v106 | (v72 << 32);
        *(void *)(v0 + 432) = v66;
        uint64_t v68 = v73 | (v74 << 32);
        uint64_t v69 = v75 | (v76 << 32);
        uint64_t v70 = v77 | (v78 << 32);
        *uint64_t v66 = v0;
        unint64_t v71 = sub_1001EDC30;
        goto LABEL_26;
      }
    }
    static Logger.xpc.getter();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 138412290;
      uint64_t v24 = sub_1005163F0();
      *(void *)(v0 + 72) = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v23 = v24;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%@] Unable to obtain XPC connection, client, and audit token", v22, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v26 = *(void *)(v0 + 280);
    uint64_t v25 = *(void *)(v0 + 288);
    uint64_t v27 = *(void *)(v0 + 272);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    uint64_t v28 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    static Logger.xpc.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v32 = *(void *)(v0 + 296);
    uint64_t v33 = *(void *)(v0 + 272);
    uint64_t v34 = *(void *)(v0 + 280);
    if (v31)
    {
      uint64_t v103 = *(void *)(v0 + 296);
      uint64_t v35 = swift_slowAlloc();
      long long v99 = (void *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v102 = v33;
      uint64_t v36 = StaticString.description.getter();
      *(void *)(v0 + 56) = sub_1000143F4(v36, v37, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2114;
      swift_errorRetain();
      uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 64) = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v99 = v38;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Error in %s: %{public}@", (uint8_t *)v35, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v103, v102);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    }
    uint64_t v49 = *(void *)(v0 + 352);
    uint64_t v50 = *(void *)(v0 + 320);
    uint64_t v51 = *(void *)(v0 + 328);
    uint64_t v53 = *(void *)(v0 + 232);
    uint64_t v52 = *(void *)(v0 + 240);
    uint64_t v54 = *(void *)(v0 + 224);
    sub_1001E3BD8(v28, v52);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v49, v52, v54);
    (*(void (**)(uint64_t, void, uint64_t))(v51 + 104))(v49, enum case for ServiceResult.failure<A>(_:), v50);
    if (os_variant_has_internal_content())
    {
      uint64_t v56 = *(void *)(v0 + 232);
      uint64_t v55 = *(void *)(v0 + 240);
      uint64_t v57 = *(void *)(v0 + 224);
      if (*(void *)(v0 + 144))
      {
        swift_getObjectType();
        sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
        v58._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        XPCClientProtocol.logMessage(_:)(v58);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
LABEL_34:
        uint64_t v92 = *(void *)(v0 + 328);
        uint64_t v91 = *(void *)(v0 + 336);
        uint64_t v93 = *(void *)(v0 + 320);
        (*(void (**)(uint64_t, void, uint64_t))(v92 + 16))(v91, *(void *)(v0 + 352), v93);
        *(void *)(v0 + 88) = v91;
        *(void *)(v0 + 40) = v93;
        *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065CB70, &qword_10065CB60);
        long long v84 = (void (**)(uint64_t, uint64_t))(v92 + 8);
        uint64_t v85 = encodeXPCValues<each A>(_:)();
        unint64_t v87 = v94;
        uint64_t v88 = *(void *)(v0 + 352);
        uint64_t v89 = *(void *)(v0 + 336);
        uint64_t v90 = *(void *)(v0 + 320);
        goto LABEL_35;
      }
      (*(void (**)(void, void))(v56 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    }
    swift_errorRelease();
    goto LABEL_34;
  }
  if (!v1 || (sub_10001733C(*(void *)(v0 + 152), v0 + 500, &qword_10065C310), (*(unsigned char *)(v0 + 532) & 1) != 0))
  {
    static Logger.xpc.getter();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 138412290;
      uint64_t v6 = sub_1005163F0();
      *(void *)(v0 + 136) = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v5 = v6;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%@] Unable to obtain XPC connection, client, and audit token", v4, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v7 = *(void *)(v0 + 304);
    uint64_t v8 = *(void *)(v0 + 272);
    uint64_t v9 = *(void *)(v0 + 280);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    static Logger.xpc.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = *(void *)(v0 + 312);
    uint64_t v14 = *(void *)(v0 + 272);
    uint64_t v15 = *(void *)(v0 + 280);
    if (v12)
    {
      uint64_t v100 = *(void *)(v0 + 312);
      uint64_t v101 = *(void *)(v0 + 272);
      uint64_t v16 = swift_slowAlloc();
      long long v98 = (void *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v17 = StaticString.description.getter();
      *(void *)(v0 + 120) = sub_1000143F4(v17, v18, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2114;
      swift_errorRetain();
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 128) = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v98 = v19;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v100, v101);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    uint64_t v39 = *(void *)(v0 + 392);
    uint64_t v40 = *(void *)(v0 + 360);
    uint64_t v41 = *(void *)(v0 + 368);
    uint64_t v43 = *(void *)(v0 + 256);
    uint64_t v42 = *(void *)(v0 + 264);
    uint64_t v44 = *(void *)(v0 + 248);
    swift_getErrorValue();
    sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v42);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v39, v42, v44);
    (*(void (**)(uint64_t, void, uint64_t))(v41 + 104))(v39, enum case for MarketplaceKitServiceResult.failure<A>(_:), v40);
    if (os_variant_has_internal_content())
    {
      uint64_t v46 = *(void *)(v0 + 256);
      uint64_t v45 = *(void *)(v0 + 264);
      uint64_t v47 = *(void *)(v0 + 248);
      if (*(void *)(v0 + 144))
      {
        swift_getObjectType();
        sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
        v48._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        XPCClientProtocol.logMessage(_:)(v48);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
LABEL_31:
        uint64_t v82 = *(void *)(v0 + 368);
        uint64_t v81 = *(void *)(v0 + 376);
        uint64_t v83 = *(void *)(v0 + 360);
        (*(void (**)(uint64_t, void, uint64_t))(v82 + 16))(v81, *(void *)(v0 + 392), v83);
        *(void *)(v0 + 96) = v81;
        *(void *)(v0 + 104) = v83;
        *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065CB78, &qword_10065CB68);
        long long v84 = (void (**)(uint64_t, uint64_t))(v82 + 8);
        uint64_t v85 = encodeXPCValues<each A>(_:)();
        unint64_t v87 = v86;
        uint64_t v88 = *(void *)(v0 + 392);
        uint64_t v89 = *(void *)(v0 + 376);
        uint64_t v90 = *(void *)(v0 + 360);
LABEL_35:
        long long v95 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
        char v96 = *v84;
        (*v84)(v89, v90);
        v95(v85, v87);
        sub_100013510(v85, v87);
        v96(v88, v90);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        long long v97 = *(uint64_t (**)(void))(v0 + 8);
        return v97();
      }
      (*(void (**)(void, void))(v46 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    }
    swift_errorRelease();
    goto LABEL_31;
  }
  char v107 = *(unsigned char *)(v0 + 498);
  uint64_t v105 = *(unsigned int *)(v0 + 500);
  *(_DWORD *)(v0 + 536) = v105;
  uint64_t v59 = *(unsigned int *)(v0 + 504);
  *(_DWORD *)(v0 + 540) = v59;
  uint64_t v60 = *(unsigned int *)(v0 + 508);
  *(_DWORD *)(v0 + 544) = v60;
  uint64_t v61 = *(unsigned int *)(v0 + 512);
  *(_DWORD *)(v0 + 548) = v61;
  uint64_t v62 = *(unsigned int *)(v0 + 516);
  *(_DWORD *)(v0 + 552) = v62;
  uint64_t v63 = *(unsigned int *)(v0 + 520);
  *(_DWORD *)(v0 + 556) = v63;
  uint64_t v64 = *(unsigned int *)(v0 + 524);
  *(_DWORD *)(v0 + 560) = v64;
  unint64_t v104 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                   + dword_10065D5F0);
  uint64_t v65 = *(unsigned int *)(v0 + 528);
  *(_DWORD *)(v0 + 564) = v65;
  swift_unknownObjectRetain();
  uint64_t v66 = (void *)swift_task_alloc();
  uint64_t v67 = v105 | (v59 << 32);
  *(void *)(v0 + 400) = v66;
  uint64_t v68 = v60 | (v61 << 32);
  uint64_t v69 = v62 | (v63 << 32);
  uint64_t v70 = v64 | (v65 << 32);
  *uint64_t v66 = v0;
  unint64_t v71 = sub_1001EC62C;
LABEL_26:
  v66[1] = v71;
  uint64_t v79 = *(void *)(v0 + 160);
  return v104(v79, v107 & 1, v67, v68, v69, v70);
}

uint64_t sub_1001EC62C(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 408) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1001ECE0C;
  }
  else
  {
    *(unsigned char *)(v4 + 533) = a1 & 1;
    uint64_t v5 = sub_1001EC758;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001EC758()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 533) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 560);
    uint64_t v2 = *(void *)(v0 + 552);
    uint64_t v3 = *(void *)(v0 + 544);
    uint64_t v4 = *(void *)(v0 + 536);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v6;
    void *v6 = v0;
    v6[1] = sub_1001ED374;
    uint64_t v7 = *(void *)(v0 + 384);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = *(void *)(v0 + 312);
  uint64_t v13 = *(void *)(v0 + 272);
  uint64_t v14 = *(void *)(v0 + 280);
  if (v11)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v41 = *(void *)(v0 + 312);
    uint64_t v15 = swift_slowAlloc();
    uint64_t v40 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = StaticString.description.getter();
    *(void *)(v0 + 120) = sub_1000143F4(v16, v17, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2114;
    swift_errorRetain();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 128) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v40 = v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Error in %s: %{public}@", (uint8_t *)v15, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v41, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v19 = *(void *)(v0 + 392);
  uint64_t v20 = *(void *)(v0 + 360);
  uint64_t v21 = *(void *)(v0 + 368);
  uint64_t v23 = *(void *)(v0 + 256);
  uint64_t v22 = *(void *)(v0 + 264);
  uint64_t v24 = *(void *)(v0 + 248);
  swift_getErrorValue();
  sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v19, v22, v24);
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v19, enum case for MarketplaceKitServiceResult.failure<A>(_:), v20);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v26 = *(void *)(v0 + 256);
  uint64_t v25 = *(void *)(v0 + 264);
  uint64_t v27 = *(void *)(v0 + 248);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v26 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
  v28._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v28);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
LABEL_14:
  uint64_t v30 = *(void *)(v0 + 368);
  uint64_t v29 = *(void *)(v0 + 376);
  uint64_t v31 = *(void *)(v0 + 360);
  (*(void (**)(uint64_t, void, uint64_t))(v30 + 16))(v29, *(void *)(v0 + 392), v31);
  *(void *)(v0 + 96) = v29;
  *(void *)(v0 + 104) = v31;
  *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065CB78, &qword_10065CB68);
  uint64_t v32 = encodeXPCValues<each A>(_:)();
  unint64_t v34 = v33;
  uint64_t v35 = *(void *)(v0 + 392);
  uint64_t v36 = *(void *)(v0 + 360);
  unint64_t v37 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v38(*(void *)(v0 + 376), v36);
  v37(v32, v34);
  sub_100013510(v32, v34);
  v38(v35, v36);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_1001ECE0C()
{
  unint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065CB78, &qword_10065CB68);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1001ED374()
{
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1001ED6C8;
  }
  else {
    os_log_type_t v2 = sub_1001ED488;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001ED488()
{
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[46];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for MarketplaceKitServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[53];
  uint64_t v7 = v0[46];
  uint64_t v6 = v0[47];
  uint64_t v8 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[49], v8);
  v0[12] = v6;
  v0[13] = v8;
  v0[14] = sub_10000DDFC(&qword_10065CB78, &qword_10065CB68);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[49];
  uint64_t v14 = v0[45];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[47], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1001ED6C8()
{
  unint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065CB78, &qword_10065CB68);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1001EDC30(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 440) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1001EE3F8;
  }
  else
  {
    *(unsigned char *)(v4 + 534) = a1 & 1;
    uint64_t v5 = sub_1001EDD5C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001EDD5C()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 534) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 592);
    uint64_t v2 = *(void *)(v0 + 584);
    uint64_t v3 = *(void *)(v0 + 576);
    uint64_t v4 = *(void *)(v0 + 568);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    unint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v6;
    void *v6 = v0;
    v6[1] = sub_1001EE944;
    uint64_t v7 = *(void *)(v0 + 344);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  uint64_t v9 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 296);
  uint64_t v14 = *(void *)(v0 + 272);
  uint64_t v15 = *(void *)(v0 + 280);
  if (v12)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v16 = swift_slowAlloc();
    uint64_t v41 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = StaticString.description.getter();
    *(void *)(v0 + 56) = sub_1000143F4(v17, v18, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2114;
    swift_errorRetain();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v41 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  uint64_t v20 = *(void *)(v0 + 352);
  uint64_t v21 = *(void *)(v0 + 320);
  uint64_t v22 = *(void *)(v0 + 328);
  uint64_t v24 = *(void *)(v0 + 232);
  uint64_t v23 = *(void *)(v0 + 240);
  uint64_t v25 = *(void *)(v0 + 224);
  sub_1001E3BD8(v9, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v20, v23, v25);
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))(v20, enum case for ServiceResult.failure<A>(_:), v21);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v27 = *(void *)(v0 + 232);
  uint64_t v26 = *(void *)(v0 + 240);
  uint64_t v28 = *(void *)(v0 + 224);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v27 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
  v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v29);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
LABEL_14:
  uint64_t v31 = *(void *)(v0 + 328);
  uint64_t v30 = *(void *)(v0 + 336);
  uint64_t v32 = *(void *)(v0 + 320);
  (*(void (**)(uint64_t, void, uint64_t))(v31 + 16))(v30, *(void *)(v0 + 352), v32);
  *(void *)(v0 + 88) = v30;
  *(void *)(v0 + 40) = v32;
  *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065CB70, &qword_10065CB60);
  uint64_t v33 = encodeXPCValues<each A>(_:)();
  unint64_t v35 = v34;
  uint64_t v36 = *(void *)(v0 + 352);
  uint64_t v37 = *(void *)(v0 + 320);
  uint64_t v38 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  v39(*(void *)(v0 + 336), v37);
  v38(v33, v35);
  sub_100013510(v33, v35);
  v39(v36, v37);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_1001EE3F8()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[55];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065CB70, &qword_10065CB60);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_1001EE944()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001EEC98;
  }
  else {
    uint64_t v2 = sub_1001EEA58;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001EEA58()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[44];
  uint64_t v3 = v0[40];
  uint64_t v4 = v0[41];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for ServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[57];
  uint64_t v7 = v0[41];
  uint64_t v6 = v0[42];
  uint64_t v8 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[44], v8);
  v0[5] = v8;
  v0[11] = v6;
  v0[6] = sub_10000DDFC(&qword_10065CB70, &qword_10065CB60);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[44];
  uint64_t v14 = v0[40];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[42], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1001EEC98()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[57];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065CB70, &qword_10065CB60);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_1001EF1E4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 216) = v19;
  *(_OWORD *)(v8 + 200) = v18;
  *(unsigned char *)(v8 + 499) = v17;
  *(_OWORD *)(v8 + 184) = v16;
  *(void *)(v8 + 168) = a7;
  *(void *)(v8 + 176) = a8;
  *(unsigned char *)(v8 + 498) = a6;
  *(void *)(v8 + 152) = a4;
  *(void *)(v8 + 160) = a5;
  *(void *)(v8 + 144) = a3;
  *(unsigned char *)(v8 + 497) = a2;
  uint64_t v9 = type metadata accessor for ManagedAppDistributionError();
  *(void *)(v8 + 224) = v9;
  *(void *)(v8 + 232) = *(void *)(v9 - 8);
  *(void *)(v8 + 240) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MarketplaceKitError();
  *(void *)(v8 + 248) = v10;
  *(void *)(v8 + 256) = *(void *)(v10 - 8);
  *(void *)(v8 + 264) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Logger();
  *(void *)(v8 + 272) = v11;
  *(void *)(v8 + 280) = *(void *)(v11 - 8);
  *(void *)(v8 + 288) = swift_task_alloc();
  *(void *)(v8 + 296) = swift_task_alloc();
  *(void *)(v8 + 304) = swift_task_alloc();
  *(void *)(v8 + 312) = swift_task_alloc();
  uint64_t v12 = sub_1000172F8(&qword_10065CAF8);
  *(void *)(v8 + 320) = v12;
  *(void *)(v8 + 328) = *(void *)(v12 - 8);
  *(void *)(v8 + 336) = swift_task_alloc();
  *(void *)(v8 + 344) = swift_task_alloc();
  *(void *)(v8 + 352) = swift_task_alloc();
  uint64_t v13 = sub_1000172F8(&qword_10065CB00);
  *(void *)(v8 + 360) = v13;
  *(void *)(v8 + 368) = *(void *)(v13 - 8);
  *(void *)(v8 + 376) = swift_task_alloc();
  *(void *)(v8 + 384) = swift_task_alloc();
  *(void *)(v8 + 392) = swift_task_alloc();
  return _swift_task_switch(sub_1001EF4B0, 0, 0);
}

uint64_t sub_1001EF4B0()
{
  uint64_t v109 = v0;
  uint64_t v1 = *(void *)(v0 + 144);
  if (*(unsigned char *)(v0 + 497) != 1)
  {
    if (v1)
    {
      sub_10001733C(*(void *)(v0 + 152), v0 + 464, &qword_10065C310);
      if ((*(unsigned char *)(v0 + 496) & 1) == 0)
      {
        char v107 = *(unsigned char *)(v0 + 498);
        uint64_t v106 = *(unsigned int *)(v0 + 464);
        *(_DWORD *)(v0 + 568) = v106;
        uint64_t v72 = *(unsigned int *)(v0 + 468);
        *(_DWORD *)(v0 + 572) = v72;
        uint64_t v73 = *(unsigned int *)(v0 + 472);
        *(_DWORD *)(v0 + 576) = v73;
        uint64_t v74 = *(unsigned int *)(v0 + 476);
        *(_DWORD *)(v0 + 580) = v74;
        uint64_t v75 = *(unsigned int *)(v0 + 480);
        *(_DWORD *)(v0 + 584) = v75;
        uint64_t v76 = *(unsigned int *)(v0 + 484);
        *(_DWORD *)(v0 + 588) = v76;
        uint64_t v77 = *(unsigned int *)(v0 + 488);
        *(_DWORD *)(v0 + 592) = v77;
        unint64_t v104 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                         + dword_10065D5F0);
        uint64_t v78 = *(unsigned int *)(v0 + 492);
        *(_DWORD *)(v0 + 596) = v78;
        swift_unknownObjectRetain();
        uint64_t v66 = (void *)swift_task_alloc();
        uint64_t v67 = v106 | (v72 << 32);
        *(void *)(v0 + 432) = v66;
        uint64_t v68 = v73 | (v74 << 32);
        uint64_t v69 = v75 | (v76 << 32);
        uint64_t v70 = v77 | (v78 << 32);
        *uint64_t v66 = v0;
        unint64_t v71 = sub_1001F1924;
        goto LABEL_26;
      }
    }
    static Logger.xpc.getter();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 138412290;
      uint64_t v24 = sub_1005163F0();
      *(void *)(v0 + 72) = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v23 = v24;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%@] Unable to obtain XPC connection, client, and audit token", v22, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v26 = *(void *)(v0 + 280);
    uint64_t v25 = *(void *)(v0 + 288);
    uint64_t v27 = *(void *)(v0 + 272);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    uint64_t v28 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    static Logger.xpc.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v32 = *(void *)(v0 + 296);
    uint64_t v33 = *(void *)(v0 + 272);
    uint64_t v34 = *(void *)(v0 + 280);
    if (v31)
    {
      uint64_t v103 = *(void *)(v0 + 296);
      uint64_t v35 = swift_slowAlloc();
      long long v99 = (void *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v102 = v33;
      uint64_t v36 = StaticString.description.getter();
      *(void *)(v0 + 56) = sub_1000143F4(v36, v37, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2114;
      swift_errorRetain();
      uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 64) = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v99 = v38;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Error in %s: %{public}@", (uint8_t *)v35, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v103, v102);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    }
    uint64_t v49 = *(void *)(v0 + 352);
    uint64_t v50 = *(void *)(v0 + 320);
    uint64_t v51 = *(void *)(v0 + 328);
    uint64_t v53 = *(void *)(v0 + 232);
    uint64_t v52 = *(void *)(v0 + 240);
    uint64_t v54 = *(void *)(v0 + 224);
    sub_1001E3BD8(v28, v52);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v49, v52, v54);
    (*(void (**)(uint64_t, void, uint64_t))(v51 + 104))(v49, enum case for ServiceResult.failure<A>(_:), v50);
    if (os_variant_has_internal_content())
    {
      uint64_t v56 = *(void *)(v0 + 232);
      uint64_t v55 = *(void *)(v0 + 240);
      uint64_t v57 = *(void *)(v0 + 224);
      if (*(void *)(v0 + 144))
      {
        swift_getObjectType();
        sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
        v58._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        XPCClientProtocol.logMessage(_:)(v58);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
LABEL_34:
        uint64_t v92 = *(void *)(v0 + 328);
        uint64_t v91 = *(void *)(v0 + 336);
        uint64_t v93 = *(void *)(v0 + 320);
        (*(void (**)(uint64_t, void, uint64_t))(v92 + 16))(v91, *(void *)(v0 + 352), v93);
        *(void *)(v0 + 88) = v91;
        *(void *)(v0 + 40) = v93;
        *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065CB08, &qword_10065CAF8);
        long long v84 = (void (**)(uint64_t, uint64_t))(v92 + 8);
        uint64_t v85 = encodeXPCValues<each A>(_:)();
        unint64_t v87 = v94;
        uint64_t v88 = *(void *)(v0 + 352);
        uint64_t v89 = *(void *)(v0 + 336);
        uint64_t v90 = *(void *)(v0 + 320);
        goto LABEL_35;
      }
      (*(void (**)(void, void))(v56 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    }
    swift_errorRelease();
    goto LABEL_34;
  }
  if (!v1 || (sub_10001733C(*(void *)(v0 + 152), v0 + 500, &qword_10065C310), (*(unsigned char *)(v0 + 532) & 1) != 0))
  {
    static Logger.xpc.getter();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 138412290;
      uint64_t v6 = sub_1005163F0();
      *(void *)(v0 + 136) = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v5 = v6;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%@] Unable to obtain XPC connection, client, and audit token", v4, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v7 = *(void *)(v0 + 304);
    uint64_t v8 = *(void *)(v0 + 272);
    uint64_t v9 = *(void *)(v0 + 280);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    static Logger.xpc.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = *(void *)(v0 + 312);
    uint64_t v14 = *(void *)(v0 + 272);
    uint64_t v15 = *(void *)(v0 + 280);
    if (v12)
    {
      uint64_t v100 = *(void *)(v0 + 312);
      uint64_t v101 = *(void *)(v0 + 272);
      uint64_t v16 = swift_slowAlloc();
      long long v98 = (void *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v17 = StaticString.description.getter();
      *(void *)(v0 + 120) = sub_1000143F4(v17, v18, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2114;
      swift_errorRetain();
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 128) = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v98 = v19;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v100, v101);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    uint64_t v39 = *(void *)(v0 + 392);
    uint64_t v40 = *(void *)(v0 + 360);
    uint64_t v41 = *(void *)(v0 + 368);
    uint64_t v43 = *(void *)(v0 + 256);
    uint64_t v42 = *(void *)(v0 + 264);
    uint64_t v44 = *(void *)(v0 + 248);
    swift_getErrorValue();
    sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v42);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v39, v42, v44);
    (*(void (**)(uint64_t, void, uint64_t))(v41 + 104))(v39, enum case for MarketplaceKitServiceResult.failure<A>(_:), v40);
    if (os_variant_has_internal_content())
    {
      uint64_t v46 = *(void *)(v0 + 256);
      uint64_t v45 = *(void *)(v0 + 264);
      uint64_t v47 = *(void *)(v0 + 248);
      if (*(void *)(v0 + 144))
      {
        swift_getObjectType();
        sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
        v48._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        XPCClientProtocol.logMessage(_:)(v48);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
LABEL_31:
        uint64_t v82 = *(void *)(v0 + 368);
        uint64_t v81 = *(void *)(v0 + 376);
        uint64_t v83 = *(void *)(v0 + 360);
        (*(void (**)(uint64_t, void, uint64_t))(v82 + 16))(v81, *(void *)(v0 + 392), v83);
        *(void *)(v0 + 96) = v81;
        *(void *)(v0 + 104) = v83;
        *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065CB10, &qword_10065CB00);
        long long v84 = (void (**)(uint64_t, uint64_t))(v82 + 8);
        uint64_t v85 = encodeXPCValues<each A>(_:)();
        unint64_t v87 = v86;
        uint64_t v88 = *(void *)(v0 + 392);
        uint64_t v89 = *(void *)(v0 + 376);
        uint64_t v90 = *(void *)(v0 + 360);
LABEL_35:
        long long v95 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
        char v96 = *v84;
        (*v84)(v89, v90);
        v95(v85, v87);
        sub_100013510(v85, v87);
        v96(v88, v90);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        long long v97 = *(uint64_t (**)(void))(v0 + 8);
        return v97();
      }
      (*(void (**)(void, void))(v46 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    }
    swift_errorRelease();
    goto LABEL_31;
  }
  char v107 = *(unsigned char *)(v0 + 498);
  uint64_t v105 = *(unsigned int *)(v0 + 500);
  *(_DWORD *)(v0 + 536) = v105;
  uint64_t v59 = *(unsigned int *)(v0 + 504);
  *(_DWORD *)(v0 + 540) = v59;
  uint64_t v60 = *(unsigned int *)(v0 + 508);
  *(_DWORD *)(v0 + 544) = v60;
  uint64_t v61 = *(unsigned int *)(v0 + 512);
  *(_DWORD *)(v0 + 548) = v61;
  uint64_t v62 = *(unsigned int *)(v0 + 516);
  *(_DWORD *)(v0 + 552) = v62;
  uint64_t v63 = *(unsigned int *)(v0 + 520);
  *(_DWORD *)(v0 + 556) = v63;
  uint64_t v64 = *(unsigned int *)(v0 + 524);
  *(_DWORD *)(v0 + 560) = v64;
  unint64_t v104 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                   + dword_10065D5F0);
  uint64_t v65 = *(unsigned int *)(v0 + 528);
  *(_DWORD *)(v0 + 564) = v65;
  swift_unknownObjectRetain();
  uint64_t v66 = (void *)swift_task_alloc();
  uint64_t v67 = v105 | (v59 << 32);
  *(void *)(v0 + 400) = v66;
  uint64_t v68 = v60 | (v61 << 32);
  uint64_t v69 = v62 | (v63 << 32);
  uint64_t v70 = v64 | (v65 << 32);
  *uint64_t v66 = v0;
  unint64_t v71 = sub_1001F0320;
LABEL_26:
  v66[1] = v71;
  uint64_t v79 = *(void *)(v0 + 160);
  return v104(v79, v107 & 1, v67, v68, v69, v70);
}

uint64_t sub_1001F0320(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 408) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1001F0B00;
  }
  else
  {
    *(unsigned char *)(v4 + 533) = a1 & 1;
    uint64_t v5 = sub_1001F044C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001F044C()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 533) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 560);
    uint64_t v2 = *(void *)(v0 + 552);
    uint64_t v3 = *(void *)(v0 + 544);
    uint64_t v4 = *(void *)(v0 + 536);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v6;
    void *v6 = v0;
    v6[1] = sub_1001F1068;
    uint64_t v7 = *(void *)(v0 + 384);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = *(void *)(v0 + 312);
  uint64_t v13 = *(void *)(v0 + 272);
  uint64_t v14 = *(void *)(v0 + 280);
  if (v11)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v41 = *(void *)(v0 + 312);
    uint64_t v15 = swift_slowAlloc();
    uint64_t v40 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = StaticString.description.getter();
    *(void *)(v0 + 120) = sub_1000143F4(v16, v17, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2114;
    swift_errorRetain();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 128) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v40 = v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Error in %s: %{public}@", (uint8_t *)v15, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v41, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v19 = *(void *)(v0 + 392);
  uint64_t v20 = *(void *)(v0 + 360);
  uint64_t v21 = *(void *)(v0 + 368);
  uint64_t v23 = *(void *)(v0 + 256);
  uint64_t v22 = *(void *)(v0 + 264);
  uint64_t v24 = *(void *)(v0 + 248);
  swift_getErrorValue();
  sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v19, v22, v24);
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v19, enum case for MarketplaceKitServiceResult.failure<A>(_:), v20);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v26 = *(void *)(v0 + 256);
  uint64_t v25 = *(void *)(v0 + 264);
  uint64_t v27 = *(void *)(v0 + 248);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v26 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
  v28._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v28);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
LABEL_14:
  uint64_t v30 = *(void *)(v0 + 368);
  uint64_t v29 = *(void *)(v0 + 376);
  uint64_t v31 = *(void *)(v0 + 360);
  (*(void (**)(uint64_t, void, uint64_t))(v30 + 16))(v29, *(void *)(v0 + 392), v31);
  *(void *)(v0 + 96) = v29;
  *(void *)(v0 + 104) = v31;
  *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065CB10, &qword_10065CB00);
  uint64_t v32 = encodeXPCValues<each A>(_:)();
  unint64_t v34 = v33;
  uint64_t v35 = *(void *)(v0 + 392);
  uint64_t v36 = *(void *)(v0 + 360);
  unint64_t v37 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v38(*(void *)(v0 + 376), v36);
  v37(v32, v34);
  sub_100013510(v32, v34);
  v38(v35, v36);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_1001F0B00()
{
  unint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065CB10, &qword_10065CB00);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1001F1068()
{
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1001F13BC;
  }
  else {
    os_log_type_t v2 = sub_1001F117C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001F117C()
{
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[46];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for MarketplaceKitServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[53];
  uint64_t v7 = v0[46];
  uint64_t v6 = v0[47];
  uint64_t v8 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[49], v8);
  v0[12] = v6;
  v0[13] = v8;
  v0[14] = sub_10000DDFC(&qword_10065CB10, &qword_10065CB00);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[49];
  uint64_t v14 = v0[45];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[47], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1001F13BC()
{
  unint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065CB10, &qword_10065CB00);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1001F1924(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 440) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1001F20EC;
  }
  else
  {
    *(unsigned char *)(v4 + 534) = a1 & 1;
    uint64_t v5 = sub_1001F1A50;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001F1A50()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 534) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 592);
    uint64_t v2 = *(void *)(v0 + 584);
    uint64_t v3 = *(void *)(v0 + 576);
    uint64_t v4 = *(void *)(v0 + 568);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    unint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v6;
    void *v6 = v0;
    v6[1] = sub_1001F2638;
    uint64_t v7 = *(void *)(v0 + 344);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  uint64_t v9 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 296);
  uint64_t v14 = *(void *)(v0 + 272);
  uint64_t v15 = *(void *)(v0 + 280);
  if (v12)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v16 = swift_slowAlloc();
    uint64_t v41 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = StaticString.description.getter();
    *(void *)(v0 + 56) = sub_1000143F4(v17, v18, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2114;
    swift_errorRetain();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v41 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  uint64_t v20 = *(void *)(v0 + 352);
  uint64_t v21 = *(void *)(v0 + 320);
  uint64_t v22 = *(void *)(v0 + 328);
  uint64_t v24 = *(void *)(v0 + 232);
  uint64_t v23 = *(void *)(v0 + 240);
  uint64_t v25 = *(void *)(v0 + 224);
  sub_1001E3BD8(v9, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v20, v23, v25);
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))(v20, enum case for ServiceResult.failure<A>(_:), v21);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v27 = *(void *)(v0 + 232);
  uint64_t v26 = *(void *)(v0 + 240);
  uint64_t v28 = *(void *)(v0 + 224);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v27 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
  v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v29);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
LABEL_14:
  uint64_t v31 = *(void *)(v0 + 328);
  uint64_t v30 = *(void *)(v0 + 336);
  uint64_t v32 = *(void *)(v0 + 320);
  (*(void (**)(uint64_t, void, uint64_t))(v31 + 16))(v30, *(void *)(v0 + 352), v32);
  *(void *)(v0 + 88) = v30;
  *(void *)(v0 + 40) = v32;
  *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065CB08, &qword_10065CAF8);
  uint64_t v33 = encodeXPCValues<each A>(_:)();
  unint64_t v35 = v34;
  uint64_t v36 = *(void *)(v0 + 352);
  uint64_t v37 = *(void *)(v0 + 320);
  uint64_t v38 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  v39(*(void *)(v0 + 336), v37);
  v38(v33, v35);
  sub_100013510(v33, v35);
  v39(v36, v37);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_1001F20EC()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[55];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065CB08, &qword_10065CAF8);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_1001F2638()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001F298C;
  }
  else {
    uint64_t v2 = sub_1001F274C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001F274C()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[44];
  uint64_t v3 = v0[40];
  uint64_t v4 = v0[41];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for ServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[57];
  uint64_t v7 = v0[41];
  uint64_t v6 = v0[42];
  uint64_t v8 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[44], v8);
  v0[5] = v8;
  v0[11] = v6;
  v0[6] = sub_10000DDFC(&qword_10065CB08, &qword_10065CAF8);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[44];
  uint64_t v14 = v0[40];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[42], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1001F298C()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[57];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065CB08, &qword_10065CAF8);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_1001F2ED8(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 408) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1001F36B8;
  }
  else
  {
    *(unsigned char *)(v4 + 533) = a1 & 1;
    uint64_t v5 = sub_1001F3004;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001F3004()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 533) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 560);
    uint64_t v2 = *(void *)(v0 + 552);
    uint64_t v3 = *(void *)(v0 + 544);
    uint64_t v4 = *(void *)(v0 + 536);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v6;
    void *v6 = v0;
    v6[1] = sub_1001F3C20;
    uint64_t v7 = *(void *)(v0 + 384);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = *(void *)(v0 + 312);
  uint64_t v13 = *(void *)(v0 + 272);
  uint64_t v14 = *(void *)(v0 + 280);
  if (v11)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v41 = *(void *)(v0 + 312);
    uint64_t v15 = swift_slowAlloc();
    uint64_t v40 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = StaticString.description.getter();
    *(void *)(v0 + 120) = sub_1000143F4(v16, v17, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2114;
    swift_errorRetain();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 128) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v40 = v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Error in %s: %{public}@", (uint8_t *)v15, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v41, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v19 = *(void *)(v0 + 392);
  uint64_t v20 = *(void *)(v0 + 360);
  uint64_t v21 = *(void *)(v0 + 368);
  uint64_t v23 = *(void *)(v0 + 256);
  uint64_t v22 = *(void *)(v0 + 264);
  uint64_t v24 = *(void *)(v0 + 248);
  swift_getErrorValue();
  sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v19, v22, v24);
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v19, enum case for MarketplaceKitServiceResult.failure<A>(_:), v20);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v26 = *(void *)(v0 + 256);
  uint64_t v25 = *(void *)(v0 + 264);
  uint64_t v27 = *(void *)(v0 + 248);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v26 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
  v28._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v28);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
LABEL_14:
  uint64_t v30 = *(void *)(v0 + 368);
  uint64_t v29 = *(void *)(v0 + 376);
  uint64_t v31 = *(void *)(v0 + 360);
  (*(void (**)(uint64_t, void, uint64_t))(v30 + 16))(v29, *(void *)(v0 + 392), v31);
  *(void *)(v0 + 96) = v29;
  *(void *)(v0 + 104) = v31;
  *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065C900, &qword_10065C8F0);
  uint64_t v32 = encodeXPCValues<each A>(_:)();
  unint64_t v34 = v33;
  uint64_t v35 = *(void *)(v0 + 392);
  uint64_t v36 = *(void *)(v0 + 360);
  uint64_t v37 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v38(*(void *)(v0 + 376), v36);
  v37(v32, v34);
  sub_100013510(v32, v34);
  v38(v35, v36);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_1001F36B8()
{
  uint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065C900, &qword_10065C8F0);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1001F3C20()
{
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1001F3F74;
  }
  else {
    os_log_type_t v2 = sub_1001F3D34;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001F3D34()
{
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[46];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for MarketplaceKitServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[53];
  uint64_t v7 = v0[46];
  uint64_t v6 = v0[47];
  uint64_t v8 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[49], v8);
  v0[12] = v6;
  v0[13] = v8;
  v0[14] = sub_10000DDFC(&qword_10065C900, &qword_10065C8F0);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[49];
  uint64_t v14 = v0[45];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[47], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1001F3F74()
{
  uint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065C900, &qword_10065C8F0);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1001F44DC()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[55];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065C8F8, &qword_10065C8E8);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_1001F4A28()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[57];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065C8F8, &qword_10065C8E8);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_1001F4F74(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 216) = v19;
  *(_OWORD *)(v8 + 200) = v18;
  *(unsigned char *)(v8 + 499) = v17;
  *(_OWORD *)(v8 + 184) = v16;
  *(void *)(v8 + 168) = a7;
  *(void *)(v8 + 176) = a8;
  *(unsigned char *)(v8 + 498) = a6;
  *(void *)(v8 + 152) = a4;
  *(void *)(v8 + 160) = a5;
  *(void *)(v8 + 144) = a3;
  *(unsigned char *)(v8 + 497) = a2;
  uint64_t v9 = type metadata accessor for ManagedAppDistributionError();
  *(void *)(v8 + 224) = v9;
  *(void *)(v8 + 232) = *(void *)(v9 - 8);
  *(void *)(v8 + 240) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MarketplaceKitError();
  *(void *)(v8 + 248) = v10;
  *(void *)(v8 + 256) = *(void *)(v10 - 8);
  *(void *)(v8 + 264) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Logger();
  *(void *)(v8 + 272) = v11;
  *(void *)(v8 + 280) = *(void *)(v11 - 8);
  *(void *)(v8 + 288) = swift_task_alloc();
  *(void *)(v8 + 296) = swift_task_alloc();
  *(void *)(v8 + 304) = swift_task_alloc();
  *(void *)(v8 + 312) = swift_task_alloc();
  uint64_t v12 = sub_1000172F8(&qword_10065C870);
  *(void *)(v8 + 320) = v12;
  *(void *)(v8 + 328) = *(void *)(v12 - 8);
  *(void *)(v8 + 336) = swift_task_alloc();
  *(void *)(v8 + 344) = swift_task_alloc();
  *(void *)(v8 + 352) = swift_task_alloc();
  uint64_t v13 = sub_1000172F8(&qword_10065C878);
  *(void *)(v8 + 360) = v13;
  *(void *)(v8 + 368) = *(void *)(v13 - 8);
  *(void *)(v8 + 376) = swift_task_alloc();
  *(void *)(v8 + 384) = swift_task_alloc();
  *(void *)(v8 + 392) = swift_task_alloc();
  return _swift_task_switch(sub_1001F5240, 0, 0);
}

uint64_t sub_1001F5240()
{
  uint64_t v109 = v0;
  uint64_t v1 = *(void *)(v0 + 144);
  if (*(unsigned char *)(v0 + 497) != 1)
  {
    if (v1)
    {
      sub_10001733C(*(void *)(v0 + 152), v0 + 464, &qword_10065C310);
      if ((*(unsigned char *)(v0 + 496) & 1) == 0)
      {
        char v107 = *(unsigned char *)(v0 + 498);
        uint64_t v106 = *(unsigned int *)(v0 + 464);
        *(_DWORD *)(v0 + 568) = v106;
        uint64_t v72 = *(unsigned int *)(v0 + 468);
        *(_DWORD *)(v0 + 572) = v72;
        uint64_t v73 = *(unsigned int *)(v0 + 472);
        *(_DWORD *)(v0 + 576) = v73;
        uint64_t v74 = *(unsigned int *)(v0 + 476);
        *(_DWORD *)(v0 + 580) = v74;
        uint64_t v75 = *(unsigned int *)(v0 + 480);
        *(_DWORD *)(v0 + 584) = v75;
        uint64_t v76 = *(unsigned int *)(v0 + 484);
        *(_DWORD *)(v0 + 588) = v76;
        uint64_t v77 = *(unsigned int *)(v0 + 488);
        *(_DWORD *)(v0 + 592) = v77;
        unint64_t v104 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                         + dword_10065D5F0);
        uint64_t v78 = *(unsigned int *)(v0 + 492);
        *(_DWORD *)(v0 + 596) = v78;
        swift_unknownObjectRetain();
        uint64_t v66 = (void *)swift_task_alloc();
        uint64_t v67 = v106 | (v72 << 32);
        *(void *)(v0 + 432) = v66;
        uint64_t v68 = v73 | (v74 << 32);
        uint64_t v69 = v75 | (v76 << 32);
        uint64_t v70 = v77 | (v78 << 32);
        *uint64_t v66 = v0;
        unint64_t v71 = sub_1001F76B4;
        goto LABEL_26;
      }
    }
    static Logger.xpc.getter();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 138412290;
      uint64_t v24 = sub_1005163F0();
      *(void *)(v0 + 72) = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v23 = v24;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%@] Unable to obtain XPC connection, client, and audit token", v22, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v26 = *(void *)(v0 + 280);
    uint64_t v25 = *(void *)(v0 + 288);
    uint64_t v27 = *(void *)(v0 + 272);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    uint64_t v28 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    static Logger.xpc.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v32 = *(void *)(v0 + 296);
    uint64_t v33 = *(void *)(v0 + 272);
    uint64_t v34 = *(void *)(v0 + 280);
    if (v31)
    {
      uint64_t v103 = *(void *)(v0 + 296);
      uint64_t v35 = swift_slowAlloc();
      long long v99 = (void *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v102 = v33;
      uint64_t v36 = StaticString.description.getter();
      *(void *)(v0 + 56) = sub_1000143F4(v36, v37, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2114;
      swift_errorRetain();
      uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 64) = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v99 = v38;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Error in %s: %{public}@", (uint8_t *)v35, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v103, v102);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    }
    uint64_t v49 = *(void *)(v0 + 352);
    uint64_t v50 = *(void *)(v0 + 320);
    uint64_t v51 = *(void *)(v0 + 328);
    uint64_t v53 = *(void *)(v0 + 232);
    uint64_t v52 = *(void *)(v0 + 240);
    uint64_t v54 = *(void *)(v0 + 224);
    sub_1001E3BD8(v28, v52);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v49, v52, v54);
    (*(void (**)(uint64_t, void, uint64_t))(v51 + 104))(v49, enum case for ServiceResult.failure<A>(_:), v50);
    if (os_variant_has_internal_content())
    {
      uint64_t v56 = *(void *)(v0 + 232);
      uint64_t v55 = *(void *)(v0 + 240);
      uint64_t v57 = *(void *)(v0 + 224);
      if (*(void *)(v0 + 144))
      {
        swift_getObjectType();
        sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
        v58._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        XPCClientProtocol.logMessage(_:)(v58);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
LABEL_34:
        uint64_t v92 = *(void *)(v0 + 328);
        uint64_t v91 = *(void *)(v0 + 336);
        uint64_t v93 = *(void *)(v0 + 320);
        (*(void (**)(uint64_t, void, uint64_t))(v92 + 16))(v91, *(void *)(v0 + 352), v93);
        *(void *)(v0 + 88) = v91;
        *(void *)(v0 + 40) = v93;
        *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065C880, &qword_10065C870);
        long long v84 = (void (**)(uint64_t, uint64_t))(v92 + 8);
        uint64_t v85 = encodeXPCValues<each A>(_:)();
        unint64_t v87 = v94;
        uint64_t v88 = *(void *)(v0 + 352);
        uint64_t v89 = *(void *)(v0 + 336);
        uint64_t v90 = *(void *)(v0 + 320);
        goto LABEL_35;
      }
      (*(void (**)(void, void))(v56 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    }
    swift_errorRelease();
    goto LABEL_34;
  }
  if (!v1 || (sub_10001733C(*(void *)(v0 + 152), v0 + 500, &qword_10065C310), (*(unsigned char *)(v0 + 532) & 1) != 0))
  {
    static Logger.xpc.getter();
    os_log_type_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 138412290;
      uint64_t v6 = sub_1005163F0();
      *(void *)(v0 + 136) = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v5 = v6;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%@] Unable to obtain XPC connection, client, and audit token", v4, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v7 = *(void *)(v0 + 304);
    uint64_t v8 = *(void *)(v0 + 272);
    uint64_t v9 = *(void *)(v0 + 280);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    static Logger.xpc.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = *(void *)(v0 + 312);
    uint64_t v14 = *(void *)(v0 + 272);
    uint64_t v15 = *(void *)(v0 + 280);
    if (v12)
    {
      uint64_t v100 = *(void *)(v0 + 312);
      uint64_t v101 = *(void *)(v0 + 272);
      uint64_t v16 = swift_slowAlloc();
      long long v98 = (void *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v17 = StaticString.description.getter();
      *(void *)(v0 + 120) = sub_1000143F4(v17, v18, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2114;
      swift_errorRetain();
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 128) = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v98 = v19;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v100, v101);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    uint64_t v39 = *(void *)(v0 + 392);
    uint64_t v40 = *(void *)(v0 + 360);
    uint64_t v41 = *(void *)(v0 + 368);
    uint64_t v43 = *(void *)(v0 + 256);
    uint64_t v42 = *(void *)(v0 + 264);
    uint64_t v44 = *(void *)(v0 + 248);
    swift_getErrorValue();
    sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v42);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v39, v42, v44);
    (*(void (**)(uint64_t, void, uint64_t))(v41 + 104))(v39, enum case for MarketplaceKitServiceResult.failure<A>(_:), v40);
    if (os_variant_has_internal_content())
    {
      uint64_t v46 = *(void *)(v0 + 256);
      uint64_t v45 = *(void *)(v0 + 264);
      uint64_t v47 = *(void *)(v0 + 248);
      if (*(void *)(v0 + 144))
      {
        swift_getObjectType();
        sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
        v48._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        XPCClientProtocol.logMessage(_:)(v48);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
LABEL_31:
        uint64_t v82 = *(void *)(v0 + 368);
        uint64_t v81 = *(void *)(v0 + 376);
        uint64_t v83 = *(void *)(v0 + 360);
        (*(void (**)(uint64_t, void, uint64_t))(v82 + 16))(v81, *(void *)(v0 + 392), v83);
        *(void *)(v0 + 96) = v81;
        *(void *)(v0 + 104) = v83;
        *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065C888, &qword_10065C878);
        long long v84 = (void (**)(uint64_t, uint64_t))(v82 + 8);
        uint64_t v85 = encodeXPCValues<each A>(_:)();
        unint64_t v87 = v86;
        uint64_t v88 = *(void *)(v0 + 392);
        uint64_t v89 = *(void *)(v0 + 376);
        uint64_t v90 = *(void *)(v0 + 360);
LABEL_35:
        long long v95 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
        char v96 = *v84;
        (*v84)(v89, v90);
        v95(v85, v87);
        sub_100013510(v85, v87);
        v96(v88, v90);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        long long v97 = *(uint64_t (**)(void))(v0 + 8);
        return v97();
      }
      (*(void (**)(void, void))(v46 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    }
    swift_errorRelease();
    goto LABEL_31;
  }
  char v107 = *(unsigned char *)(v0 + 498);
  uint64_t v105 = *(unsigned int *)(v0 + 500);
  *(_DWORD *)(v0 + 536) = v105;
  uint64_t v59 = *(unsigned int *)(v0 + 504);
  *(_DWORD *)(v0 + 540) = v59;
  uint64_t v60 = *(unsigned int *)(v0 + 508);
  *(_DWORD *)(v0 + 544) = v60;
  uint64_t v61 = *(unsigned int *)(v0 + 512);
  *(_DWORD *)(v0 + 548) = v61;
  uint64_t v62 = *(unsigned int *)(v0 + 516);
  *(_DWORD *)(v0 + 552) = v62;
  uint64_t v63 = *(unsigned int *)(v0 + 520);
  *(_DWORD *)(v0 + 556) = v63;
  uint64_t v64 = *(unsigned int *)(v0 + 524);
  *(_DWORD *)(v0 + 560) = v64;
  unint64_t v104 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                   + dword_10065D5F0);
  uint64_t v65 = *(unsigned int *)(v0 + 528);
  *(_DWORD *)(v0 + 564) = v65;
  swift_unknownObjectRetain();
  uint64_t v66 = (void *)swift_task_alloc();
  uint64_t v67 = v105 | (v59 << 32);
  *(void *)(v0 + 400) = v66;
  uint64_t v68 = v60 | (v61 << 32);
  uint64_t v69 = v62 | (v63 << 32);
  uint64_t v70 = v64 | (v65 << 32);
  *uint64_t v66 = v0;
  unint64_t v71 = sub_1001F60B0;
LABEL_26:
  v66[1] = v71;
  uint64_t v79 = *(void *)(v0 + 160);
  return v104(v79, v107 & 1, v67, v68, v69, v70);
}

uint64_t sub_1001F60B0(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 408) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1001F6890;
  }
  else
  {
    *(unsigned char *)(v4 + 533) = a1 & 1;
    uint64_t v5 = sub_1001F61DC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001F61DC()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 533) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 560);
    uint64_t v2 = *(void *)(v0 + 552);
    uint64_t v3 = *(void *)(v0 + 544);
    uint64_t v4 = *(void *)(v0 + 536);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v6;
    void *v6 = v0;
    v6[1] = sub_1001F6DF8;
    uint64_t v7 = *(void *)(v0 + 384);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = *(void *)(v0 + 312);
  uint64_t v13 = *(void *)(v0 + 272);
  uint64_t v14 = *(void *)(v0 + 280);
  if (v11)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v41 = *(void *)(v0 + 312);
    uint64_t v15 = swift_slowAlloc();
    uint64_t v40 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = StaticString.description.getter();
    *(void *)(v0 + 120) = sub_1000143F4(v16, v17, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2114;
    swift_errorRetain();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 128) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v40 = v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Error in %s: %{public}@", (uint8_t *)v15, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v41, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v19 = *(void *)(v0 + 392);
  uint64_t v20 = *(void *)(v0 + 360);
  uint64_t v21 = *(void *)(v0 + 368);
  uint64_t v23 = *(void *)(v0 + 256);
  uint64_t v22 = *(void *)(v0 + 264);
  uint64_t v24 = *(void *)(v0 + 248);
  swift_getErrorValue();
  sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v19, v22, v24);
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v19, enum case for MarketplaceKitServiceResult.failure<A>(_:), v20);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v26 = *(void *)(v0 + 256);
  uint64_t v25 = *(void *)(v0 + 264);
  uint64_t v27 = *(void *)(v0 + 248);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v26 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
  v28._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v28);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
LABEL_14:
  uint64_t v30 = *(void *)(v0 + 368);
  uint64_t v29 = *(void *)(v0 + 376);
  uint64_t v31 = *(void *)(v0 + 360);
  (*(void (**)(uint64_t, void, uint64_t))(v30 + 16))(v29, *(void *)(v0 + 392), v31);
  *(void *)(v0 + 96) = v29;
  *(void *)(v0 + 104) = v31;
  *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065C888, &qword_10065C878);
  uint64_t v32 = encodeXPCValues<each A>(_:)();
  unint64_t v34 = v33;
  uint64_t v35 = *(void *)(v0 + 392);
  uint64_t v36 = *(void *)(v0 + 360);
  unint64_t v37 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v38(*(void *)(v0 + 376), v36);
  v37(v32, v34);
  sub_100013510(v32, v34);
  v38(v35, v36);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_1001F6890()
{
  unint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065C888, &qword_10065C878);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1001F6DF8()
{
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1001F714C;
  }
  else {
    os_log_type_t v2 = sub_1001F6F0C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001F6F0C()
{
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[46];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for MarketplaceKitServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[53];
  uint64_t v7 = v0[46];
  uint64_t v6 = v0[47];
  uint64_t v8 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[49], v8);
  v0[12] = v6;
  v0[13] = v8;
  v0[14] = sub_10000DDFC(&qword_10065C888, &qword_10065C878);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[49];
  uint64_t v14 = v0[45];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[47], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1001F714C()
{
  unint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065C888, &qword_10065C878);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1001F76B4(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 440) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1001F7E7C;
  }
  else
  {
    *(unsigned char *)(v4 + 534) = a1 & 1;
    uint64_t v5 = sub_1001F77E0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001F77E0()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 534) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 592);
    uint64_t v2 = *(void *)(v0 + 584);
    uint64_t v3 = *(void *)(v0 + 576);
    uint64_t v4 = *(void *)(v0 + 568);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    unint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v6;
    void *v6 = v0;
    v6[1] = sub_1001F83C8;
    uint64_t v7 = *(void *)(v0 + 344);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  uint64_t v9 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 296);
  uint64_t v14 = *(void *)(v0 + 272);
  uint64_t v15 = *(void *)(v0 + 280);
  if (v12)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v16 = swift_slowAlloc();
    uint64_t v41 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = StaticString.description.getter();
    *(void *)(v0 + 56) = sub_1000143F4(v17, v18, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2114;
    swift_errorRetain();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v41 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  uint64_t v20 = *(void *)(v0 + 352);
  uint64_t v21 = *(void *)(v0 + 320);
  uint64_t v22 = *(void *)(v0 + 328);
  uint64_t v24 = *(void *)(v0 + 232);
  uint64_t v23 = *(void *)(v0 + 240);
  uint64_t v25 = *(void *)(v0 + 224);
  sub_1001E3BD8(v9, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v20, v23, v25);
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))(v20, enum case for ServiceResult.failure<A>(_:), v21);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v27 = *(void *)(v0 + 232);
  uint64_t v26 = *(void *)(v0 + 240);
  uint64_t v28 = *(void *)(v0 + 224);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v27 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
  v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v29);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
LABEL_14:
  uint64_t v31 = *(void *)(v0 + 328);
  uint64_t v30 = *(void *)(v0 + 336);
  uint64_t v32 = *(void *)(v0 + 320);
  (*(void (**)(uint64_t, void, uint64_t))(v31 + 16))(v30, *(void *)(v0 + 352), v32);
  *(void *)(v0 + 88) = v30;
  *(void *)(v0 + 40) = v32;
  *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065C880, &qword_10065C870);
  uint64_t v33 = encodeXPCValues<each A>(_:)();
  unint64_t v35 = v34;
  uint64_t v36 = *(void *)(v0 + 352);
  uint64_t v37 = *(void *)(v0 + 320);
  uint64_t v38 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  v39(*(void *)(v0 + 336), v37);
  v38(v33, v35);
  sub_100013510(v33, v35);
  v39(v36, v37);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_1001F7E7C()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[55];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065C880, &qword_10065C870);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_1001F83C8()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001F871C;
  }
  else {
    uint64_t v2 = sub_1001F84DC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001F84DC()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[44];
  uint64_t v3 = v0[40];
  uint64_t v4 = v0[41];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for ServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[57];
  uint64_t v7 = v0[41];
  uint64_t v6 = v0[42];
  uint64_t v8 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[44], v8);
  v0[5] = v8;
  v0[11] = v6;
  v0[6] = sub_10000DDFC(&qword_10065C880, &qword_10065C870);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[44];
  uint64_t v14 = v0[40];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[42], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1001F871C()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[57];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065C880, &qword_10065C870);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_1001F8C68(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 216) = v19;
  *(_OWORD *)(v8 + 200) = v18;
  *(unsigned char *)(v8 + 499) = v17;
  *(_OWORD *)(v8 + 184) = v16;
  *(void *)(v8 + 168) = a7;
  *(void *)(v8 + 176) = a8;
  *(unsigned char *)(v8 + 498) = a6;
  *(void *)(v8 + 152) = a4;
  *(void *)(v8 + 160) = a5;
  *(void *)(v8 + 144) = a3;
  *(unsigned char *)(v8 + 497) = a2;
  uint64_t v9 = type metadata accessor for ManagedAppDistributionError();
  *(void *)(v8 + 224) = v9;
  *(void *)(v8 + 232) = *(void *)(v9 - 8);
  *(void *)(v8 + 240) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MarketplaceKitError();
  *(void *)(v8 + 248) = v10;
  *(void *)(v8 + 256) = *(void *)(v10 - 8);
  *(void *)(v8 + 264) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Logger();
  *(void *)(v8 + 272) = v11;
  *(void *)(v8 + 280) = *(void *)(v11 - 8);
  *(void *)(v8 + 288) = swift_task_alloc();
  *(void *)(v8 + 296) = swift_task_alloc();
  *(void *)(v8 + 304) = swift_task_alloc();
  *(void *)(v8 + 312) = swift_task_alloc();
  uint64_t v12 = sub_1000172F8(&qword_10065C7B8);
  *(void *)(v8 + 320) = v12;
  *(void *)(v8 + 328) = *(void *)(v12 - 8);
  *(void *)(v8 + 336) = swift_task_alloc();
  *(void *)(v8 + 344) = swift_task_alloc();
  *(void *)(v8 + 352) = swift_task_alloc();
  uint64_t v13 = sub_1000172F8(&qword_10065C7C0);
  *(void *)(v8 + 360) = v13;
  *(void *)(v8 + 368) = *(void *)(v13 - 8);
  *(void *)(v8 + 376) = swift_task_alloc();
  *(void *)(v8 + 384) = swift_task_alloc();
  *(void *)(v8 + 392) = swift_task_alloc();
  return _swift_task_switch(sub_1001F8F34, 0, 0);
}

uint64_t sub_1001F8F34()
{
  uint64_t v109 = v0;
  uint64_t v1 = *(void *)(v0 + 144);
  if (*(unsigned char *)(v0 + 497) != 1)
  {
    if (v1)
    {
      sub_10001733C(*(void *)(v0 + 152), v0 + 464, &qword_10065C310);
      if ((*(unsigned char *)(v0 + 496) & 1) == 0)
      {
        char v107 = *(unsigned char *)(v0 + 498);
        uint64_t v106 = *(unsigned int *)(v0 + 464);
        *(_DWORD *)(v0 + 568) = v106;
        uint64_t v72 = *(unsigned int *)(v0 + 468);
        *(_DWORD *)(v0 + 572) = v72;
        uint64_t v73 = *(unsigned int *)(v0 + 472);
        *(_DWORD *)(v0 + 576) = v73;
        uint64_t v74 = *(unsigned int *)(v0 + 476);
        *(_DWORD *)(v0 + 580) = v74;
        uint64_t v75 = *(unsigned int *)(v0 + 480);
        *(_DWORD *)(v0 + 584) = v75;
        uint64_t v76 = *(unsigned int *)(v0 + 484);
        *(_DWORD *)(v0 + 588) = v76;
        uint64_t v77 = *(unsigned int *)(v0 + 488);
        *(_DWORD *)(v0 + 592) = v77;
        unint64_t v104 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                         + dword_10065D5F0);
        uint64_t v78 = *(unsigned int *)(v0 + 492);
        *(_DWORD *)(v0 + 596) = v78;
        swift_unknownObjectRetain();
        uint64_t v66 = (void *)swift_task_alloc();
        uint64_t v67 = v106 | (v72 << 32);
        *(void *)(v0 + 432) = v66;
        uint64_t v68 = v73 | (v74 << 32);
        uint64_t v69 = v75 | (v76 << 32);
        uint64_t v70 = v77 | (v78 << 32);
        *uint64_t v66 = v0;
        unint64_t v71 = sub_1001FB3A8;
        goto LABEL_26;
      }
    }
    static Logger.xpc.getter();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 138412290;
      uint64_t v24 = sub_1005163F0();
      *(void *)(v0 + 72) = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v23 = v24;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%@] Unable to obtain XPC connection, client, and audit token", v22, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v26 = *(void *)(v0 + 280);
    uint64_t v25 = *(void *)(v0 + 288);
    uint64_t v27 = *(void *)(v0 + 272);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    uint64_t v28 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    static Logger.xpc.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v32 = *(void *)(v0 + 296);
    uint64_t v33 = *(void *)(v0 + 272);
    uint64_t v34 = *(void *)(v0 + 280);
    if (v31)
    {
      uint64_t v103 = *(void *)(v0 + 296);
      uint64_t v35 = swift_slowAlloc();
      long long v99 = (void *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v102 = v33;
      uint64_t v36 = StaticString.description.getter();
      *(void *)(v0 + 56) = sub_1000143F4(v36, v37, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2114;
      swift_errorRetain();
      uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 64) = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v99 = v38;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Error in %s: %{public}@", (uint8_t *)v35, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v103, v102);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    }
    uint64_t v49 = *(void *)(v0 + 352);
    uint64_t v50 = *(void *)(v0 + 320);
    uint64_t v51 = *(void *)(v0 + 328);
    uint64_t v53 = *(void *)(v0 + 232);
    uint64_t v52 = *(void *)(v0 + 240);
    uint64_t v54 = *(void *)(v0 + 224);
    sub_1001E3BD8(v28, v52);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v49, v52, v54);
    (*(void (**)(uint64_t, void, uint64_t))(v51 + 104))(v49, enum case for ServiceResult.failure<A>(_:), v50);
    if (os_variant_has_internal_content())
    {
      uint64_t v56 = *(void *)(v0 + 232);
      uint64_t v55 = *(void *)(v0 + 240);
      uint64_t v57 = *(void *)(v0 + 224);
      if (*(void *)(v0 + 144))
      {
        swift_getObjectType();
        sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
        v58._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        XPCClientProtocol.logMessage(_:)(v58);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
LABEL_34:
        uint64_t v92 = *(void *)(v0 + 328);
        uint64_t v91 = *(void *)(v0 + 336);
        uint64_t v93 = *(void *)(v0 + 320);
        (*(void (**)(uint64_t, void, uint64_t))(v92 + 16))(v91, *(void *)(v0 + 352), v93);
        *(void *)(v0 + 88) = v91;
        *(void *)(v0 + 40) = v93;
        *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065C7C8, &qword_10065C7B8);
        long long v84 = (void (**)(uint64_t, uint64_t))(v92 + 8);
        uint64_t v85 = encodeXPCValues<each A>(_:)();
        unint64_t v87 = v94;
        uint64_t v88 = *(void *)(v0 + 352);
        uint64_t v89 = *(void *)(v0 + 336);
        uint64_t v90 = *(void *)(v0 + 320);
        goto LABEL_35;
      }
      (*(void (**)(void, void))(v56 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    }
    swift_errorRelease();
    goto LABEL_34;
  }
  if (!v1 || (sub_10001733C(*(void *)(v0 + 152), v0 + 500, &qword_10065C310), (*(unsigned char *)(v0 + 532) & 1) != 0))
  {
    static Logger.xpc.getter();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 138412290;
      uint64_t v6 = sub_1005163F0();
      *(void *)(v0 + 136) = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v5 = v6;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%@] Unable to obtain XPC connection, client, and audit token", v4, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v7 = *(void *)(v0 + 304);
    uint64_t v8 = *(void *)(v0 + 272);
    uint64_t v9 = *(void *)(v0 + 280);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    static Logger.xpc.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = *(void *)(v0 + 312);
    uint64_t v14 = *(void *)(v0 + 272);
    uint64_t v15 = *(void *)(v0 + 280);
    if (v12)
    {
      uint64_t v100 = *(void *)(v0 + 312);
      uint64_t v101 = *(void *)(v0 + 272);
      uint64_t v16 = swift_slowAlloc();
      long long v98 = (void *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v17 = StaticString.description.getter();
      *(void *)(v0 + 120) = sub_1000143F4(v17, v18, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2114;
      swift_errorRetain();
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 128) = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v98 = v19;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v100, v101);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    uint64_t v39 = *(void *)(v0 + 392);
    uint64_t v40 = *(void *)(v0 + 360);
    uint64_t v41 = *(void *)(v0 + 368);
    uint64_t v43 = *(void *)(v0 + 256);
    uint64_t v42 = *(void *)(v0 + 264);
    uint64_t v44 = *(void *)(v0 + 248);
    swift_getErrorValue();
    sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v42);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v39, v42, v44);
    (*(void (**)(uint64_t, void, uint64_t))(v41 + 104))(v39, enum case for MarketplaceKitServiceResult.failure<A>(_:), v40);
    if (os_variant_has_internal_content())
    {
      uint64_t v46 = *(void *)(v0 + 256);
      uint64_t v45 = *(void *)(v0 + 264);
      uint64_t v47 = *(void *)(v0 + 248);
      if (*(void *)(v0 + 144))
      {
        swift_getObjectType();
        sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
        v48._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        XPCClientProtocol.logMessage(_:)(v48);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
LABEL_31:
        uint64_t v82 = *(void *)(v0 + 368);
        uint64_t v81 = *(void *)(v0 + 376);
        uint64_t v83 = *(void *)(v0 + 360);
        (*(void (**)(uint64_t, void, uint64_t))(v82 + 16))(v81, *(void *)(v0 + 392), v83);
        *(void *)(v0 + 96) = v81;
        *(void *)(v0 + 104) = v83;
        *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065C7D0, &qword_10065C7C0);
        long long v84 = (void (**)(uint64_t, uint64_t))(v82 + 8);
        uint64_t v85 = encodeXPCValues<each A>(_:)();
        unint64_t v87 = v86;
        uint64_t v88 = *(void *)(v0 + 392);
        uint64_t v89 = *(void *)(v0 + 376);
        uint64_t v90 = *(void *)(v0 + 360);
LABEL_35:
        long long v95 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
        char v96 = *v84;
        (*v84)(v89, v90);
        v95(v85, v87);
        sub_100013510(v85, v87);
        v96(v88, v90);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        long long v97 = *(uint64_t (**)(void))(v0 + 8);
        return v97();
      }
      (*(void (**)(void, void))(v46 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    }
    swift_errorRelease();
    goto LABEL_31;
  }
  char v107 = *(unsigned char *)(v0 + 498);
  uint64_t v105 = *(unsigned int *)(v0 + 500);
  *(_DWORD *)(v0 + 536) = v105;
  uint64_t v59 = *(unsigned int *)(v0 + 504);
  *(_DWORD *)(v0 + 540) = v59;
  uint64_t v60 = *(unsigned int *)(v0 + 508);
  *(_DWORD *)(v0 + 544) = v60;
  uint64_t v61 = *(unsigned int *)(v0 + 512);
  *(_DWORD *)(v0 + 548) = v61;
  uint64_t v62 = *(unsigned int *)(v0 + 516);
  *(_DWORD *)(v0 + 552) = v62;
  uint64_t v63 = *(unsigned int *)(v0 + 520);
  *(_DWORD *)(v0 + 556) = v63;
  uint64_t v64 = *(unsigned int *)(v0 + 524);
  *(_DWORD *)(v0 + 560) = v64;
  unint64_t v104 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                   + dword_10065D5F0);
  uint64_t v65 = *(unsigned int *)(v0 + 528);
  *(_DWORD *)(v0 + 564) = v65;
  swift_unknownObjectRetain();
  uint64_t v66 = (void *)swift_task_alloc();
  uint64_t v67 = v105 | (v59 << 32);
  *(void *)(v0 + 400) = v66;
  uint64_t v68 = v60 | (v61 << 32);
  uint64_t v69 = v62 | (v63 << 32);
  uint64_t v70 = v64 | (v65 << 32);
  *uint64_t v66 = v0;
  unint64_t v71 = sub_1001F9DA4;
LABEL_26:
  v66[1] = v71;
  uint64_t v79 = *(void *)(v0 + 160);
  return v104(v79, v107 & 1, v67, v68, v69, v70);
}

uint64_t sub_1001F9DA4(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 408) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1001FA584;
  }
  else
  {
    *(unsigned char *)(v4 + 533) = a1 & 1;
    uint64_t v5 = sub_1001F9ED0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001F9ED0()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 533) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 560);
    uint64_t v2 = *(void *)(v0 + 552);
    uint64_t v3 = *(void *)(v0 + 544);
    uint64_t v4 = *(void *)(v0 + 536);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v6;
    void *v6 = v0;
    v6[1] = sub_1001FAAEC;
    uint64_t v7 = *(void *)(v0 + 384);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = *(void *)(v0 + 312);
  uint64_t v13 = *(void *)(v0 + 272);
  uint64_t v14 = *(void *)(v0 + 280);
  if (v11)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v41 = *(void *)(v0 + 312);
    uint64_t v15 = swift_slowAlloc();
    uint64_t v40 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = StaticString.description.getter();
    *(void *)(v0 + 120) = sub_1000143F4(v16, v17, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2114;
    swift_errorRetain();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 128) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v40 = v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Error in %s: %{public}@", (uint8_t *)v15, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v41, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v19 = *(void *)(v0 + 392);
  uint64_t v20 = *(void *)(v0 + 360);
  uint64_t v21 = *(void *)(v0 + 368);
  uint64_t v23 = *(void *)(v0 + 256);
  uint64_t v22 = *(void *)(v0 + 264);
  uint64_t v24 = *(void *)(v0 + 248);
  swift_getErrorValue();
  sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v19, v22, v24);
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v19, enum case for MarketplaceKitServiceResult.failure<A>(_:), v20);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v26 = *(void *)(v0 + 256);
  uint64_t v25 = *(void *)(v0 + 264);
  uint64_t v27 = *(void *)(v0 + 248);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v26 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
  v28._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v28);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
LABEL_14:
  uint64_t v30 = *(void *)(v0 + 368);
  uint64_t v29 = *(void *)(v0 + 376);
  uint64_t v31 = *(void *)(v0 + 360);
  (*(void (**)(uint64_t, void, uint64_t))(v30 + 16))(v29, *(void *)(v0 + 392), v31);
  *(void *)(v0 + 96) = v29;
  *(void *)(v0 + 104) = v31;
  *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065C7D0, &qword_10065C7C0);
  uint64_t v32 = encodeXPCValues<each A>(_:)();
  unint64_t v34 = v33;
  uint64_t v35 = *(void *)(v0 + 392);
  uint64_t v36 = *(void *)(v0 + 360);
  unint64_t v37 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v38(*(void *)(v0 + 376), v36);
  v37(v32, v34);
  sub_100013510(v32, v34);
  v38(v35, v36);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_1001FA584()
{
  unint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065C7D0, &qword_10065C7C0);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1001FAAEC()
{
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1001FAE40;
  }
  else {
    os_log_type_t v2 = sub_1001FAC00;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001FAC00()
{
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[46];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for MarketplaceKitServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[53];
  uint64_t v7 = v0[46];
  uint64_t v6 = v0[47];
  uint64_t v8 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[49], v8);
  v0[12] = v6;
  v0[13] = v8;
  v0[14] = sub_10000DDFC(&qword_10065C7D0, &qword_10065C7C0);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[49];
  uint64_t v14 = v0[45];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[47], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1001FAE40()
{
  unint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065C7D0, &qword_10065C7C0);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1001FB3A8(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 440) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1001FBB70;
  }
  else
  {
    *(unsigned char *)(v4 + 534) = a1 & 1;
    uint64_t v5 = sub_1001FB4D4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001FB4D4()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 534) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 592);
    uint64_t v2 = *(void *)(v0 + 584);
    uint64_t v3 = *(void *)(v0 + 576);
    uint64_t v4 = *(void *)(v0 + 568);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    unint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v6;
    void *v6 = v0;
    v6[1] = sub_1001FC0BC;
    uint64_t v7 = *(void *)(v0 + 344);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  uint64_t v9 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 296);
  uint64_t v14 = *(void *)(v0 + 272);
  uint64_t v15 = *(void *)(v0 + 280);
  if (v12)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v16 = swift_slowAlloc();
    uint64_t v41 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = StaticString.description.getter();
    *(void *)(v0 + 56) = sub_1000143F4(v17, v18, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2114;
    swift_errorRetain();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v41 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  uint64_t v20 = *(void *)(v0 + 352);
  uint64_t v21 = *(void *)(v0 + 320);
  uint64_t v22 = *(void *)(v0 + 328);
  uint64_t v24 = *(void *)(v0 + 232);
  uint64_t v23 = *(void *)(v0 + 240);
  uint64_t v25 = *(void *)(v0 + 224);
  sub_1001E3BD8(v9, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v20, v23, v25);
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))(v20, enum case for ServiceResult.failure<A>(_:), v21);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v27 = *(void *)(v0 + 232);
  uint64_t v26 = *(void *)(v0 + 240);
  uint64_t v28 = *(void *)(v0 + 224);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v27 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
  v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v29);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
LABEL_14:
  uint64_t v31 = *(void *)(v0 + 328);
  uint64_t v30 = *(void *)(v0 + 336);
  uint64_t v32 = *(void *)(v0 + 320);
  (*(void (**)(uint64_t, void, uint64_t))(v31 + 16))(v30, *(void *)(v0 + 352), v32);
  *(void *)(v0 + 88) = v30;
  *(void *)(v0 + 40) = v32;
  *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065C7C8, &qword_10065C7B8);
  uint64_t v33 = encodeXPCValues<each A>(_:)();
  unint64_t v35 = v34;
  uint64_t v36 = *(void *)(v0 + 352);
  uint64_t v37 = *(void *)(v0 + 320);
  uint64_t v38 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  v39(*(void *)(v0 + 336), v37);
  v38(v33, v35);
  sub_100013510(v33, v35);
  v39(v36, v37);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_1001FBB70()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[55];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065C7C8, &qword_10065C7B8);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_1001FC0BC()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001FC410;
  }
  else {
    uint64_t v2 = sub_1001FC1D0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001FC1D0()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[44];
  uint64_t v3 = v0[40];
  uint64_t v4 = v0[41];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for ServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[57];
  uint64_t v7 = v0[41];
  uint64_t v6 = v0[42];
  uint64_t v8 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[44], v8);
  v0[5] = v8;
  v0[11] = v6;
  v0[6] = sub_10000DDFC(&qword_10065C7C8, &qword_10065C7B8);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[44];
  uint64_t v14 = v0[40];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[42], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1001FC410()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[57];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065C7C8, &qword_10065C7B8);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_1001FC95C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 216) = v19;
  *(_OWORD *)(v8 + 200) = v18;
  *(unsigned char *)(v8 + 499) = v17;
  *(_OWORD *)(v8 + 184) = v16;
  *(void *)(v8 + 168) = a7;
  *(void *)(v8 + 176) = a8;
  *(unsigned char *)(v8 + 498) = a6;
  *(void *)(v8 + 152) = a4;
  *(void *)(v8 + 160) = a5;
  *(void *)(v8 + 144) = a3;
  *(unsigned char *)(v8 + 497) = a2;
  uint64_t v9 = type metadata accessor for ManagedAppDistributionError();
  *(void *)(v8 + 224) = v9;
  *(void *)(v8 + 232) = *(void *)(v9 - 8);
  *(void *)(v8 + 240) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MarketplaceKitError();
  *(void *)(v8 + 248) = v10;
  *(void *)(v8 + 256) = *(void *)(v10 - 8);
  *(void *)(v8 + 264) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Logger();
  *(void *)(v8 + 272) = v11;
  *(void *)(v8 + 280) = *(void *)(v11 - 8);
  *(void *)(v8 + 288) = swift_task_alloc();
  *(void *)(v8 + 296) = swift_task_alloc();
  *(void *)(v8 + 304) = swift_task_alloc();
  *(void *)(v8 + 312) = swift_task_alloc();
  uint64_t v12 = sub_1000172F8(&qword_10065C760);
  *(void *)(v8 + 320) = v12;
  *(void *)(v8 + 328) = *(void *)(v12 - 8);
  *(void *)(v8 + 336) = swift_task_alloc();
  *(void *)(v8 + 344) = swift_task_alloc();
  *(void *)(v8 + 352) = swift_task_alloc();
  uint64_t v13 = sub_1000172F8(&qword_10065C768);
  *(void *)(v8 + 360) = v13;
  *(void *)(v8 + 368) = *(void *)(v13 - 8);
  *(void *)(v8 + 376) = swift_task_alloc();
  *(void *)(v8 + 384) = swift_task_alloc();
  *(void *)(v8 + 392) = swift_task_alloc();
  return _swift_task_switch(sub_1001FCC28, 0, 0);
}

uint64_t sub_1001FCC28()
{
  uint64_t v109 = v0;
  uint64_t v1 = *(void *)(v0 + 144);
  if (*(unsigned char *)(v0 + 497) != 1)
  {
    if (v1)
    {
      sub_10001733C(*(void *)(v0 + 152), v0 + 464, &qword_10065C310);
      if ((*(unsigned char *)(v0 + 496) & 1) == 0)
      {
        char v107 = *(unsigned char *)(v0 + 498);
        uint64_t v106 = *(unsigned int *)(v0 + 464);
        *(_DWORD *)(v0 + 568) = v106;
        uint64_t v72 = *(unsigned int *)(v0 + 468);
        *(_DWORD *)(v0 + 572) = v72;
        uint64_t v73 = *(unsigned int *)(v0 + 472);
        *(_DWORD *)(v0 + 576) = v73;
        uint64_t v74 = *(unsigned int *)(v0 + 476);
        *(_DWORD *)(v0 + 580) = v74;
        uint64_t v75 = *(unsigned int *)(v0 + 480);
        *(_DWORD *)(v0 + 584) = v75;
        uint64_t v76 = *(unsigned int *)(v0 + 484);
        *(_DWORD *)(v0 + 588) = v76;
        uint64_t v77 = *(unsigned int *)(v0 + 488);
        *(_DWORD *)(v0 + 592) = v77;
        unint64_t v104 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                         + dword_10065D5F0);
        uint64_t v78 = *(unsigned int *)(v0 + 492);
        *(_DWORD *)(v0 + 596) = v78;
        swift_unknownObjectRetain();
        uint64_t v66 = (void *)swift_task_alloc();
        uint64_t v67 = v106 | (v72 << 32);
        *(void *)(v0 + 432) = v66;
        uint64_t v68 = v73 | (v74 << 32);
        uint64_t v69 = v75 | (v76 << 32);
        uint64_t v70 = v77 | (v78 << 32);
        *uint64_t v66 = v0;
        unint64_t v71 = sub_1001FF09C;
        goto LABEL_26;
      }
    }
    static Logger.xpc.getter();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 138412290;
      uint64_t v24 = sub_1005163F0();
      *(void *)(v0 + 72) = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v23 = v24;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%@] Unable to obtain XPC connection, client, and audit token", v22, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v26 = *(void *)(v0 + 280);
    uint64_t v25 = *(void *)(v0 + 288);
    uint64_t v27 = *(void *)(v0 + 272);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    uint64_t v28 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    static Logger.xpc.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v32 = *(void *)(v0 + 296);
    uint64_t v33 = *(void *)(v0 + 272);
    uint64_t v34 = *(void *)(v0 + 280);
    if (v31)
    {
      uint64_t v103 = *(void *)(v0 + 296);
      uint64_t v35 = swift_slowAlloc();
      long long v99 = (void *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v102 = v33;
      uint64_t v36 = StaticString.description.getter();
      *(void *)(v0 + 56) = sub_1000143F4(v36, v37, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2114;
      swift_errorRetain();
      uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 64) = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v99 = v38;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Error in %s: %{public}@", (uint8_t *)v35, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v103, v102);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    }
    uint64_t v49 = *(void *)(v0 + 352);
    uint64_t v50 = *(void *)(v0 + 320);
    uint64_t v51 = *(void *)(v0 + 328);
    uint64_t v53 = *(void *)(v0 + 232);
    uint64_t v52 = *(void *)(v0 + 240);
    uint64_t v54 = *(void *)(v0 + 224);
    sub_1001E3BD8(v28, v52);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v49, v52, v54);
    (*(void (**)(uint64_t, void, uint64_t))(v51 + 104))(v49, enum case for ServiceResult.failure<A>(_:), v50);
    if (os_variant_has_internal_content())
    {
      uint64_t v56 = *(void *)(v0 + 232);
      uint64_t v55 = *(void *)(v0 + 240);
      uint64_t v57 = *(void *)(v0 + 224);
      if (*(void *)(v0 + 144))
      {
        swift_getObjectType();
        sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
        v58._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        XPCClientProtocol.logMessage(_:)(v58);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
LABEL_34:
        uint64_t v92 = *(void *)(v0 + 328);
        uint64_t v91 = *(void *)(v0 + 336);
        uint64_t v93 = *(void *)(v0 + 320);
        (*(void (**)(uint64_t, void, uint64_t))(v92 + 16))(v91, *(void *)(v0 + 352), v93);
        *(void *)(v0 + 88) = v91;
        *(void *)(v0 + 40) = v93;
        *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065C770, &qword_10065C760);
        long long v84 = (void (**)(uint64_t, uint64_t))(v92 + 8);
        uint64_t v85 = encodeXPCValues<each A>(_:)();
        unint64_t v87 = v94;
        uint64_t v88 = *(void *)(v0 + 352);
        uint64_t v89 = *(void *)(v0 + 336);
        uint64_t v90 = *(void *)(v0 + 320);
        goto LABEL_35;
      }
      (*(void (**)(void, void))(v56 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    }
    swift_errorRelease();
    goto LABEL_34;
  }
  if (!v1 || (sub_10001733C(*(void *)(v0 + 152), v0 + 500, &qword_10065C310), (*(unsigned char *)(v0 + 532) & 1) != 0))
  {
    static Logger.xpc.getter();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 138412290;
      uint64_t v6 = sub_1005163F0();
      *(void *)(v0 + 136) = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v5 = v6;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%@] Unable to obtain XPC connection, client, and audit token", v4, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v7 = *(void *)(v0 + 304);
    uint64_t v8 = *(void *)(v0 + 272);
    uint64_t v9 = *(void *)(v0 + 280);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    static Logger.xpc.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = *(void *)(v0 + 312);
    uint64_t v14 = *(void *)(v0 + 272);
    uint64_t v15 = *(void *)(v0 + 280);
    if (v12)
    {
      uint64_t v100 = *(void *)(v0 + 312);
      uint64_t v101 = *(void *)(v0 + 272);
      uint64_t v16 = swift_slowAlloc();
      long long v98 = (void *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v17 = StaticString.description.getter();
      *(void *)(v0 + 120) = sub_1000143F4(v17, v18, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2114;
      swift_errorRetain();
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 128) = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v98 = v19;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v100, v101);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    uint64_t v39 = *(void *)(v0 + 392);
    uint64_t v40 = *(void *)(v0 + 360);
    uint64_t v41 = *(void *)(v0 + 368);
    uint64_t v43 = *(void *)(v0 + 256);
    uint64_t v42 = *(void *)(v0 + 264);
    uint64_t v44 = *(void *)(v0 + 248);
    swift_getErrorValue();
    sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v42);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v39, v42, v44);
    (*(void (**)(uint64_t, void, uint64_t))(v41 + 104))(v39, enum case for MarketplaceKitServiceResult.failure<A>(_:), v40);
    if (os_variant_has_internal_content())
    {
      uint64_t v46 = *(void *)(v0 + 256);
      uint64_t v45 = *(void *)(v0 + 264);
      uint64_t v47 = *(void *)(v0 + 248);
      if (*(void *)(v0 + 144))
      {
        swift_getObjectType();
        sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
        v48._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        XPCClientProtocol.logMessage(_:)(v48);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
LABEL_31:
        uint64_t v82 = *(void *)(v0 + 368);
        uint64_t v81 = *(void *)(v0 + 376);
        uint64_t v83 = *(void *)(v0 + 360);
        (*(void (**)(uint64_t, void, uint64_t))(v82 + 16))(v81, *(void *)(v0 + 392), v83);
        *(void *)(v0 + 96) = v81;
        *(void *)(v0 + 104) = v83;
        *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065C778, &qword_10065C768);
        long long v84 = (void (**)(uint64_t, uint64_t))(v82 + 8);
        uint64_t v85 = encodeXPCValues<each A>(_:)();
        unint64_t v87 = v86;
        uint64_t v88 = *(void *)(v0 + 392);
        uint64_t v89 = *(void *)(v0 + 376);
        uint64_t v90 = *(void *)(v0 + 360);
LABEL_35:
        long long v95 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
        char v96 = *v84;
        (*v84)(v89, v90);
        v95(v85, v87);
        sub_100013510(v85, v87);
        v96(v88, v90);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        long long v97 = *(uint64_t (**)(void))(v0 + 8);
        return v97();
      }
      (*(void (**)(void, void))(v46 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    }
    swift_errorRelease();
    goto LABEL_31;
  }
  char v107 = *(unsigned char *)(v0 + 498);
  uint64_t v105 = *(unsigned int *)(v0 + 500);
  *(_DWORD *)(v0 + 536) = v105;
  uint64_t v59 = *(unsigned int *)(v0 + 504);
  *(_DWORD *)(v0 + 540) = v59;
  uint64_t v60 = *(unsigned int *)(v0 + 508);
  *(_DWORD *)(v0 + 544) = v60;
  uint64_t v61 = *(unsigned int *)(v0 + 512);
  *(_DWORD *)(v0 + 548) = v61;
  uint64_t v62 = *(unsigned int *)(v0 + 516);
  *(_DWORD *)(v0 + 552) = v62;
  uint64_t v63 = *(unsigned int *)(v0 + 520);
  *(_DWORD *)(v0 + 556) = v63;
  uint64_t v64 = *(unsigned int *)(v0 + 524);
  *(_DWORD *)(v0 + 560) = v64;
  unint64_t v104 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                   + dword_10065D5F0);
  uint64_t v65 = *(unsigned int *)(v0 + 528);
  *(_DWORD *)(v0 + 564) = v65;
  swift_unknownObjectRetain();
  uint64_t v66 = (void *)swift_task_alloc();
  uint64_t v67 = v105 | (v59 << 32);
  *(void *)(v0 + 400) = v66;
  uint64_t v68 = v60 | (v61 << 32);
  uint64_t v69 = v62 | (v63 << 32);
  uint64_t v70 = v64 | (v65 << 32);
  *uint64_t v66 = v0;
  unint64_t v71 = sub_1001FDA98;
LABEL_26:
  v66[1] = v71;
  uint64_t v79 = *(void *)(v0 + 160);
  return v104(v79, v107 & 1, v67, v68, v69, v70);
}

uint64_t sub_1001FDA98(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 408) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1001FE278;
  }
  else
  {
    *(unsigned char *)(v4 + 533) = a1 & 1;
    uint64_t v5 = sub_1001FDBC4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001FDBC4()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 533) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 560);
    uint64_t v2 = *(void *)(v0 + 552);
    uint64_t v3 = *(void *)(v0 + 544);
    uint64_t v4 = *(void *)(v0 + 536);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v6;
    void *v6 = v0;
    v6[1] = sub_1001FE7E0;
    uint64_t v7 = *(void *)(v0 + 384);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = *(void *)(v0 + 312);
  uint64_t v13 = *(void *)(v0 + 272);
  uint64_t v14 = *(void *)(v0 + 280);
  if (v11)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v41 = *(void *)(v0 + 312);
    uint64_t v15 = swift_slowAlloc();
    uint64_t v40 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = StaticString.description.getter();
    *(void *)(v0 + 120) = sub_1000143F4(v16, v17, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2114;
    swift_errorRetain();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 128) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v40 = v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Error in %s: %{public}@", (uint8_t *)v15, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v41, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v19 = *(void *)(v0 + 392);
  uint64_t v20 = *(void *)(v0 + 360);
  uint64_t v21 = *(void *)(v0 + 368);
  uint64_t v23 = *(void *)(v0 + 256);
  uint64_t v22 = *(void *)(v0 + 264);
  uint64_t v24 = *(void *)(v0 + 248);
  swift_getErrorValue();
  sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v19, v22, v24);
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v19, enum case for MarketplaceKitServiceResult.failure<A>(_:), v20);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v26 = *(void *)(v0 + 256);
  uint64_t v25 = *(void *)(v0 + 264);
  uint64_t v27 = *(void *)(v0 + 248);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v26 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
  v28._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v28);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
LABEL_14:
  uint64_t v30 = *(void *)(v0 + 368);
  uint64_t v29 = *(void *)(v0 + 376);
  uint64_t v31 = *(void *)(v0 + 360);
  (*(void (**)(uint64_t, void, uint64_t))(v30 + 16))(v29, *(void *)(v0 + 392), v31);
  *(void *)(v0 + 96) = v29;
  *(void *)(v0 + 104) = v31;
  *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065C778, &qword_10065C768);
  uint64_t v32 = encodeXPCValues<each A>(_:)();
  unint64_t v34 = v33;
  uint64_t v35 = *(void *)(v0 + 392);
  uint64_t v36 = *(void *)(v0 + 360);
  unint64_t v37 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v38(*(void *)(v0 + 376), v36);
  v37(v32, v34);
  sub_100013510(v32, v34);
  v38(v35, v36);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_1001FE278()
{
  unint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065C778, &qword_10065C768);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1001FE7E0()
{
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1001FEB34;
  }
  else {
    os_log_type_t v2 = sub_1001FE8F4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001FE8F4()
{
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[46];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for MarketplaceKitServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[53];
  uint64_t v7 = v0[46];
  uint64_t v6 = v0[47];
  uint64_t v8 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[49], v8);
  v0[12] = v6;
  v0[13] = v8;
  v0[14] = sub_10000DDFC(&qword_10065C778, &qword_10065C768);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[49];
  uint64_t v14 = v0[45];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[47], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1001FEB34()
{
  unint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065C778, &qword_10065C768);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1001FF09C(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 440) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1001FF864;
  }
  else
  {
    *(unsigned char *)(v4 + 534) = a1 & 1;
    uint64_t v5 = sub_1001FF1C8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001FF1C8()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 534) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 592);
    uint64_t v2 = *(void *)(v0 + 584);
    uint64_t v3 = *(void *)(v0 + 576);
    uint64_t v4 = *(void *)(v0 + 568);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    unint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v6;
    void *v6 = v0;
    v6[1] = sub_1001FFDB0;
    uint64_t v7 = *(void *)(v0 + 344);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  uint64_t v9 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 296);
  uint64_t v14 = *(void *)(v0 + 272);
  uint64_t v15 = *(void *)(v0 + 280);
  if (v12)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v16 = swift_slowAlloc();
    uint64_t v41 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = StaticString.description.getter();
    *(void *)(v0 + 56) = sub_1000143F4(v17, v18, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2114;
    swift_errorRetain();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v41 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  uint64_t v20 = *(void *)(v0 + 352);
  uint64_t v21 = *(void *)(v0 + 320);
  uint64_t v22 = *(void *)(v0 + 328);
  uint64_t v24 = *(void *)(v0 + 232);
  uint64_t v23 = *(void *)(v0 + 240);
  uint64_t v25 = *(void *)(v0 + 224);
  sub_1001E3BD8(v9, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v20, v23, v25);
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))(v20, enum case for ServiceResult.failure<A>(_:), v21);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v27 = *(void *)(v0 + 232);
  uint64_t v26 = *(void *)(v0 + 240);
  uint64_t v28 = *(void *)(v0 + 224);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v27 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
  v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v29);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
LABEL_14:
  uint64_t v31 = *(void *)(v0 + 328);
  uint64_t v30 = *(void *)(v0 + 336);
  uint64_t v32 = *(void *)(v0 + 320);
  (*(void (**)(uint64_t, void, uint64_t))(v31 + 16))(v30, *(void *)(v0 + 352), v32);
  *(void *)(v0 + 88) = v30;
  *(void *)(v0 + 40) = v32;
  *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065C770, &qword_10065C760);
  uint64_t v33 = encodeXPCValues<each A>(_:)();
  unint64_t v35 = v34;
  uint64_t v36 = *(void *)(v0 + 352);
  uint64_t v37 = *(void *)(v0 + 320);
  uint64_t v38 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  v39(*(void *)(v0 + 336), v37);
  v38(v33, v35);
  sub_100013510(v33, v35);
  v39(v36, v37);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_1001FF864()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[55];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065C770, &qword_10065C760);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_1001FFDB0()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100200104;
  }
  else {
    uint64_t v2 = sub_1001FFEC4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001FFEC4()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[44];
  uint64_t v3 = v0[40];
  uint64_t v4 = v0[41];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for ServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[57];
  uint64_t v7 = v0[41];
  uint64_t v6 = v0[42];
  uint64_t v8 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[44], v8);
  v0[5] = v8;
  v0[11] = v6;
  v0[6] = sub_10000DDFC(&qword_10065C770, &qword_10065C760);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[44];
  uint64_t v14 = v0[40];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[42], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_100200104()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[57];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065C770, &qword_10065C760);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_100200650()
{
  uint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065C6B8, &qword_10065C6A8);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_100200BB8()
{
  uint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065C6B8, &qword_10065C6A8);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_100201120(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 440) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1002018E8;
  }
  else
  {
    *(unsigned char *)(v4 + 534) = a1 & 1;
    uint64_t v5 = sub_10020124C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10020124C()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 534) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 592);
    uint64_t v2 = *(void *)(v0 + 584);
    uint64_t v3 = *(void *)(v0 + 576);
    uint64_t v4 = *(void *)(v0 + 568);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    unint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v6;
    void *v6 = v0;
    v6[1] = sub_100201E34;
    uint64_t v7 = *(void *)(v0 + 344);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  uint64_t v9 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 296);
  uint64_t v14 = *(void *)(v0 + 272);
  uint64_t v15 = *(void *)(v0 + 280);
  if (v12)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v16 = swift_slowAlloc();
    uint64_t v41 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = StaticString.description.getter();
    *(void *)(v0 + 56) = sub_1000143F4(v17, v18, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2114;
    swift_errorRetain();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v41 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  uint64_t v20 = *(void *)(v0 + 352);
  uint64_t v21 = *(void *)(v0 + 320);
  uint64_t v22 = *(void *)(v0 + 328);
  uint64_t v24 = *(void *)(v0 + 232);
  uint64_t v23 = *(void *)(v0 + 240);
  uint64_t v25 = *(void *)(v0 + 224);
  sub_1001E3BD8(v9, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v20, v23, v25);
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))(v20, enum case for ServiceResult.failure<A>(_:), v21);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v27 = *(void *)(v0 + 232);
  uint64_t v26 = *(void *)(v0 + 240);
  uint64_t v28 = *(void *)(v0 + 224);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v27 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
  v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v29);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
LABEL_14:
  uint64_t v31 = *(void *)(v0 + 328);
  uint64_t v30 = *(void *)(v0 + 336);
  uint64_t v32 = *(void *)(v0 + 320);
  (*(void (**)(uint64_t, void, uint64_t))(v31 + 16))(v30, *(void *)(v0 + 352), v32);
  *(void *)(v0 + 88) = v30;
  *(void *)(v0 + 40) = v32;
  *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065C6B0, &qword_10065C6A0);
  uint64_t v33 = encodeXPCValues<each A>(_:)();
  unint64_t v35 = v34;
  uint64_t v36 = *(void *)(v0 + 352);
  uint64_t v37 = *(void *)(v0 + 320);
  uint64_t v38 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  v39(*(void *)(v0 + 336), v37);
  v38(v33, v35);
  sub_100013510(v33, v35);
  v39(v36, v37);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_1002018E8()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[55];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065C6B0, &qword_10065C6A0);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_100201E34()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100202188;
  }
  else {
    uint64_t v2 = sub_100201F48;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100201F48()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[44];
  uint64_t v3 = v0[40];
  uint64_t v4 = v0[41];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for ServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[57];
  uint64_t v7 = v0[41];
  uint64_t v6 = v0[42];
  uint64_t v8 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[44], v8);
  v0[5] = v8;
  v0[11] = v6;
  v0[6] = sub_10000DDFC(&qword_10065C6B0, &qword_10065C6A0);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[44];
  uint64_t v14 = v0[40];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[42], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_100202188()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[57];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065C6B0, &qword_10065C6A0);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_1002026D4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 216) = v19;
  *(_OWORD *)(v8 + 200) = v18;
  *(unsigned char *)(v8 + 499) = v17;
  *(_OWORD *)(v8 + 184) = v16;
  *(void *)(v8 + 168) = a7;
  *(void *)(v8 + 176) = a8;
  *(unsigned char *)(v8 + 498) = a6;
  *(void *)(v8 + 152) = a4;
  *(void *)(v8 + 160) = a5;
  *(void *)(v8 + 144) = a3;
  *(unsigned char *)(v8 + 497) = a2;
  uint64_t v9 = type metadata accessor for ManagedAppDistributionError();
  *(void *)(v8 + 224) = v9;
  *(void *)(v8 + 232) = *(void *)(v9 - 8);
  *(void *)(v8 + 240) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MarketplaceKitError();
  *(void *)(v8 + 248) = v10;
  *(void *)(v8 + 256) = *(void *)(v10 - 8);
  *(void *)(v8 + 264) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Logger();
  *(void *)(v8 + 272) = v11;
  *(void *)(v8 + 280) = *(void *)(v11 - 8);
  *(void *)(v8 + 288) = swift_task_alloc();
  *(void *)(v8 + 296) = swift_task_alloc();
  *(void *)(v8 + 304) = swift_task_alloc();
  *(void *)(v8 + 312) = swift_task_alloc();
  uint64_t v12 = sub_1000172F8(&qword_10065C610);
  *(void *)(v8 + 320) = v12;
  *(void *)(v8 + 328) = *(void *)(v12 - 8);
  *(void *)(v8 + 336) = swift_task_alloc();
  *(void *)(v8 + 344) = swift_task_alloc();
  *(void *)(v8 + 352) = swift_task_alloc();
  uint64_t v13 = sub_1000172F8(&qword_10065C618);
  *(void *)(v8 + 360) = v13;
  *(void *)(v8 + 368) = *(void *)(v13 - 8);
  *(void *)(v8 + 376) = swift_task_alloc();
  *(void *)(v8 + 384) = swift_task_alloc();
  *(void *)(v8 + 392) = swift_task_alloc();
  return _swift_task_switch(sub_1002029A0, 0, 0);
}

uint64_t sub_1002029A0()
{
  uint64_t v109 = v0;
  uint64_t v1 = *(void *)(v0 + 144);
  if (*(unsigned char *)(v0 + 497) != 1)
  {
    if (v1)
    {
      sub_10001733C(*(void *)(v0 + 152), v0 + 464, &qword_10065C310);
      if ((*(unsigned char *)(v0 + 496) & 1) == 0)
      {
        char v107 = *(unsigned char *)(v0 + 498);
        uint64_t v106 = *(unsigned int *)(v0 + 464);
        *(_DWORD *)(v0 + 568) = v106;
        uint64_t v72 = *(unsigned int *)(v0 + 468);
        *(_DWORD *)(v0 + 572) = v72;
        uint64_t v73 = *(unsigned int *)(v0 + 472);
        *(_DWORD *)(v0 + 576) = v73;
        uint64_t v74 = *(unsigned int *)(v0 + 476);
        *(_DWORD *)(v0 + 580) = v74;
        uint64_t v75 = *(unsigned int *)(v0 + 480);
        *(_DWORD *)(v0 + 584) = v75;
        uint64_t v76 = *(unsigned int *)(v0 + 484);
        *(_DWORD *)(v0 + 588) = v76;
        uint64_t v77 = *(unsigned int *)(v0 + 488);
        *(_DWORD *)(v0 + 592) = v77;
        unint64_t v104 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                         + dword_10065D5F0);
        uint64_t v78 = *(unsigned int *)(v0 + 492);
        *(_DWORD *)(v0 + 596) = v78;
        swift_unknownObjectRetain();
        uint64_t v66 = (void *)swift_task_alloc();
        uint64_t v67 = v106 | (v72 << 32);
        *(void *)(v0 + 432) = v66;
        uint64_t v68 = v73 | (v74 << 32);
        uint64_t v69 = v75 | (v76 << 32);
        uint64_t v70 = v77 | (v78 << 32);
        *uint64_t v66 = v0;
        unint64_t v71 = sub_100204E14;
        goto LABEL_26;
      }
    }
    static Logger.xpc.getter();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 138412290;
      uint64_t v24 = sub_1005163F0();
      *(void *)(v0 + 72) = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v23 = v24;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%@] Unable to obtain XPC connection, client, and audit token", v22, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v26 = *(void *)(v0 + 280);
    uint64_t v25 = *(void *)(v0 + 288);
    uint64_t v27 = *(void *)(v0 + 272);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    uint64_t v28 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    static Logger.xpc.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v32 = *(void *)(v0 + 296);
    uint64_t v33 = *(void *)(v0 + 272);
    uint64_t v34 = *(void *)(v0 + 280);
    if (v31)
    {
      uint64_t v103 = *(void *)(v0 + 296);
      uint64_t v35 = swift_slowAlloc();
      long long v99 = (void *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v102 = v33;
      uint64_t v36 = StaticString.description.getter();
      *(void *)(v0 + 56) = sub_1000143F4(v36, v37, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2114;
      swift_errorRetain();
      uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 64) = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v99 = v38;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Error in %s: %{public}@", (uint8_t *)v35, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v103, v102);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    }
    uint64_t v49 = *(void *)(v0 + 352);
    uint64_t v50 = *(void *)(v0 + 320);
    uint64_t v51 = *(void *)(v0 + 328);
    uint64_t v53 = *(void *)(v0 + 232);
    uint64_t v52 = *(void *)(v0 + 240);
    uint64_t v54 = *(void *)(v0 + 224);
    sub_1001E3BD8(v28, v52);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v49, v52, v54);
    (*(void (**)(uint64_t, void, uint64_t))(v51 + 104))(v49, enum case for ServiceResult.failure<A>(_:), v50);
    if (os_variant_has_internal_content())
    {
      uint64_t v56 = *(void *)(v0 + 232);
      uint64_t v55 = *(void *)(v0 + 240);
      uint64_t v57 = *(void *)(v0 + 224);
      if (*(void *)(v0 + 144))
      {
        swift_getObjectType();
        sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
        v58._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        XPCClientProtocol.logMessage(_:)(v58);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
LABEL_34:
        uint64_t v92 = *(void *)(v0 + 328);
        uint64_t v91 = *(void *)(v0 + 336);
        uint64_t v93 = *(void *)(v0 + 320);
        (*(void (**)(uint64_t, void, uint64_t))(v92 + 16))(v91, *(void *)(v0 + 352), v93);
        *(void *)(v0 + 88) = v91;
        *(void *)(v0 + 40) = v93;
        *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065C620, &qword_10065C610);
        long long v84 = (void (**)(uint64_t, uint64_t))(v92 + 8);
        uint64_t v85 = encodeXPCValues<each A>(_:)();
        unint64_t v87 = v94;
        uint64_t v88 = *(void *)(v0 + 352);
        uint64_t v89 = *(void *)(v0 + 336);
        uint64_t v90 = *(void *)(v0 + 320);
        goto LABEL_35;
      }
      (*(void (**)(void, void))(v56 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    }
    swift_errorRelease();
    goto LABEL_34;
  }
  if (!v1 || (sub_10001733C(*(void *)(v0 + 152), v0 + 500, &qword_10065C310), (*(unsigned char *)(v0 + 532) & 1) != 0))
  {
    static Logger.xpc.getter();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 138412290;
      uint64_t v6 = sub_1005163F0();
      *(void *)(v0 + 136) = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v5 = v6;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%@] Unable to obtain XPC connection, client, and audit token", v4, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v7 = *(void *)(v0 + 304);
    uint64_t v8 = *(void *)(v0 + 272);
    uint64_t v9 = *(void *)(v0 + 280);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    static Logger.xpc.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = *(void *)(v0 + 312);
    uint64_t v14 = *(void *)(v0 + 272);
    uint64_t v15 = *(void *)(v0 + 280);
    if (v12)
    {
      uint64_t v100 = *(void *)(v0 + 312);
      uint64_t v101 = *(void *)(v0 + 272);
      uint64_t v16 = swift_slowAlloc();
      long long v98 = (void *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v17 = StaticString.description.getter();
      *(void *)(v0 + 120) = sub_1000143F4(v17, v18, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2114;
      swift_errorRetain();
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 128) = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v98 = v19;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v100, v101);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    uint64_t v39 = *(void *)(v0 + 392);
    uint64_t v40 = *(void *)(v0 + 360);
    uint64_t v41 = *(void *)(v0 + 368);
    uint64_t v43 = *(void *)(v0 + 256);
    uint64_t v42 = *(void *)(v0 + 264);
    uint64_t v44 = *(void *)(v0 + 248);
    swift_getErrorValue();
    sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v42);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v39, v42, v44);
    (*(void (**)(uint64_t, void, uint64_t))(v41 + 104))(v39, enum case for MarketplaceKitServiceResult.failure<A>(_:), v40);
    if (os_variant_has_internal_content())
    {
      uint64_t v46 = *(void *)(v0 + 256);
      uint64_t v45 = *(void *)(v0 + 264);
      uint64_t v47 = *(void *)(v0 + 248);
      if (*(void *)(v0 + 144))
      {
        swift_getObjectType();
        sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
        v48._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        XPCClientProtocol.logMessage(_:)(v48);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
LABEL_31:
        uint64_t v82 = *(void *)(v0 + 368);
        uint64_t v81 = *(void *)(v0 + 376);
        uint64_t v83 = *(void *)(v0 + 360);
        (*(void (**)(uint64_t, void, uint64_t))(v82 + 16))(v81, *(void *)(v0 + 392), v83);
        *(void *)(v0 + 96) = v81;
        *(void *)(v0 + 104) = v83;
        *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065C628, &qword_10065C618);
        long long v84 = (void (**)(uint64_t, uint64_t))(v82 + 8);
        uint64_t v85 = encodeXPCValues<each A>(_:)();
        unint64_t v87 = v86;
        uint64_t v88 = *(void *)(v0 + 392);
        uint64_t v89 = *(void *)(v0 + 376);
        uint64_t v90 = *(void *)(v0 + 360);
LABEL_35:
        long long v95 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
        char v96 = *v84;
        (*v84)(v89, v90);
        v95(v85, v87);
        sub_100013510(v85, v87);
        v96(v88, v90);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        long long v97 = *(uint64_t (**)(void))(v0 + 8);
        return v97();
      }
      (*(void (**)(void, void))(v46 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    }
    swift_errorRelease();
    goto LABEL_31;
  }
  char v107 = *(unsigned char *)(v0 + 498);
  uint64_t v105 = *(unsigned int *)(v0 + 500);
  *(_DWORD *)(v0 + 536) = v105;
  uint64_t v59 = *(unsigned int *)(v0 + 504);
  *(_DWORD *)(v0 + 540) = v59;
  uint64_t v60 = *(unsigned int *)(v0 + 508);
  *(_DWORD *)(v0 + 544) = v60;
  uint64_t v61 = *(unsigned int *)(v0 + 512);
  *(_DWORD *)(v0 + 548) = v61;
  uint64_t v62 = *(unsigned int *)(v0 + 516);
  *(_DWORD *)(v0 + 552) = v62;
  uint64_t v63 = *(unsigned int *)(v0 + 520);
  *(_DWORD *)(v0 + 556) = v63;
  uint64_t v64 = *(unsigned int *)(v0 + 524);
  *(_DWORD *)(v0 + 560) = v64;
  unint64_t v104 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                   + dword_10065D5F0);
  uint64_t v65 = *(unsigned int *)(v0 + 528);
  *(_DWORD *)(v0 + 564) = v65;
  swift_unknownObjectRetain();
  uint64_t v66 = (void *)swift_task_alloc();
  uint64_t v67 = v105 | (v59 << 32);
  *(void *)(v0 + 400) = v66;
  uint64_t v68 = v60 | (v61 << 32);
  uint64_t v69 = v62 | (v63 << 32);
  uint64_t v70 = v64 | (v65 << 32);
  *uint64_t v66 = v0;
  unint64_t v71 = sub_100203810;
LABEL_26:
  v66[1] = v71;
  uint64_t v79 = *(void *)(v0 + 160);
  return v104(v79, v107 & 1, v67, v68, v69, v70);
}

uint64_t sub_100203810(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 408) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100203FF0;
  }
  else
  {
    *(unsigned char *)(v4 + 533) = a1 & 1;
    uint64_t v5 = sub_10020393C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10020393C()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 533) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 560);
    uint64_t v2 = *(void *)(v0 + 552);
    uint64_t v3 = *(void *)(v0 + 544);
    uint64_t v4 = *(void *)(v0 + 536);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v6;
    void *v6 = v0;
    v6[1] = sub_100204558;
    uint64_t v7 = *(void *)(v0 + 384);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = *(void *)(v0 + 312);
  uint64_t v13 = *(void *)(v0 + 272);
  uint64_t v14 = *(void *)(v0 + 280);
  if (v11)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v41 = *(void *)(v0 + 312);
    uint64_t v15 = swift_slowAlloc();
    uint64_t v40 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = StaticString.description.getter();
    *(void *)(v0 + 120) = sub_1000143F4(v16, v17, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2114;
    swift_errorRetain();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 128) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v40 = v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Error in %s: %{public}@", (uint8_t *)v15, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v41, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v19 = *(void *)(v0 + 392);
  uint64_t v20 = *(void *)(v0 + 360);
  uint64_t v21 = *(void *)(v0 + 368);
  uint64_t v23 = *(void *)(v0 + 256);
  uint64_t v22 = *(void *)(v0 + 264);
  uint64_t v24 = *(void *)(v0 + 248);
  swift_getErrorValue();
  sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v19, v22, v24);
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v19, enum case for MarketplaceKitServiceResult.failure<A>(_:), v20);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v26 = *(void *)(v0 + 256);
  uint64_t v25 = *(void *)(v0 + 264);
  uint64_t v27 = *(void *)(v0 + 248);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v26 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
  v28._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v28);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
LABEL_14:
  uint64_t v30 = *(void *)(v0 + 368);
  uint64_t v29 = *(void *)(v0 + 376);
  uint64_t v31 = *(void *)(v0 + 360);
  (*(void (**)(uint64_t, void, uint64_t))(v30 + 16))(v29, *(void *)(v0 + 392), v31);
  *(void *)(v0 + 96) = v29;
  *(void *)(v0 + 104) = v31;
  *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065C628, &qword_10065C618);
  uint64_t v32 = encodeXPCValues<each A>(_:)();
  unint64_t v34 = v33;
  uint64_t v35 = *(void *)(v0 + 392);
  uint64_t v36 = *(void *)(v0 + 360);
  unint64_t v37 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v38(*(void *)(v0 + 376), v36);
  v37(v32, v34);
  sub_100013510(v32, v34);
  v38(v35, v36);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_100203FF0()
{
  unint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065C628, &qword_10065C618);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_100204558()
{
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1002048AC;
  }
  else {
    os_log_type_t v2 = sub_10020466C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10020466C()
{
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[46];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for MarketplaceKitServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[53];
  uint64_t v7 = v0[46];
  uint64_t v6 = v0[47];
  uint64_t v8 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[49], v8);
  v0[12] = v6;
  v0[13] = v8;
  v0[14] = sub_10000DDFC(&qword_10065C628, &qword_10065C618);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[49];
  uint64_t v14 = v0[45];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[47], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1002048AC()
{
  unint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065C628, &qword_10065C618);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_100204E14(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 440) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1002055DC;
  }
  else
  {
    *(unsigned char *)(v4 + 534) = a1 & 1;
    uint64_t v5 = sub_100204F40;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100204F40()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 534) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 592);
    uint64_t v2 = *(void *)(v0 + 584);
    uint64_t v3 = *(void *)(v0 + 576);
    uint64_t v4 = *(void *)(v0 + 568);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    unint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v6;
    void *v6 = v0;
    v6[1] = sub_100205B28;
    uint64_t v7 = *(void *)(v0 + 344);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  uint64_t v9 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 296);
  uint64_t v14 = *(void *)(v0 + 272);
  uint64_t v15 = *(void *)(v0 + 280);
  if (v12)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v16 = swift_slowAlloc();
    uint64_t v41 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = StaticString.description.getter();
    *(void *)(v0 + 56) = sub_1000143F4(v17, v18, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2114;
    swift_errorRetain();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v41 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  uint64_t v20 = *(void *)(v0 + 352);
  uint64_t v21 = *(void *)(v0 + 320);
  uint64_t v22 = *(void *)(v0 + 328);
  uint64_t v24 = *(void *)(v0 + 232);
  uint64_t v23 = *(void *)(v0 + 240);
  uint64_t v25 = *(void *)(v0 + 224);
  sub_1001E3BD8(v9, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v20, v23, v25);
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))(v20, enum case for ServiceResult.failure<A>(_:), v21);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v27 = *(void *)(v0 + 232);
  uint64_t v26 = *(void *)(v0 + 240);
  uint64_t v28 = *(void *)(v0 + 224);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v27 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
  v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v29);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
LABEL_14:
  uint64_t v31 = *(void *)(v0 + 328);
  uint64_t v30 = *(void *)(v0 + 336);
  uint64_t v32 = *(void *)(v0 + 320);
  (*(void (**)(uint64_t, void, uint64_t))(v31 + 16))(v30, *(void *)(v0 + 352), v32);
  *(void *)(v0 + 88) = v30;
  *(void *)(v0 + 40) = v32;
  *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065C620, &qword_10065C610);
  uint64_t v33 = encodeXPCValues<each A>(_:)();
  unint64_t v35 = v34;
  uint64_t v36 = *(void *)(v0 + 352);
  uint64_t v37 = *(void *)(v0 + 320);
  uint64_t v38 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  v39(*(void *)(v0 + 336), v37);
  v38(v33, v35);
  sub_100013510(v33, v35);
  v39(v36, v37);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_1002055DC()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[55];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065C620, &qword_10065C610);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_100205B28()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100205E7C;
  }
  else {
    uint64_t v2 = sub_100205C3C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100205C3C()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[44];
  uint64_t v3 = v0[40];
  uint64_t v4 = v0[41];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for ServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[57];
  uint64_t v7 = v0[41];
  uint64_t v6 = v0[42];
  uint64_t v8 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[44], v8);
  v0[5] = v8;
  v0[11] = v6;
  v0[6] = sub_10000DDFC(&qword_10065C620, &qword_10065C610);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[44];
  uint64_t v14 = v0[40];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[42], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_100205E7C()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[57];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065C620, &qword_10065C610);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_1002063C8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 216) = v19;
  *(_OWORD *)(v8 + 200) = v18;
  *(unsigned char *)(v8 + 499) = v17;
  *(_OWORD *)(v8 + 184) = v16;
  *(void *)(v8 + 168) = a7;
  *(void *)(v8 + 176) = a8;
  *(unsigned char *)(v8 + 498) = a6;
  *(void *)(v8 + 152) = a4;
  *(void *)(v8 + 160) = a5;
  *(void *)(v8 + 144) = a3;
  *(unsigned char *)(v8 + 497) = a2;
  uint64_t v9 = type metadata accessor for ManagedAppDistributionError();
  *(void *)(v8 + 224) = v9;
  *(void *)(v8 + 232) = *(void *)(v9 - 8);
  *(void *)(v8 + 240) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MarketplaceKitError();
  *(void *)(v8 + 248) = v10;
  *(void *)(v8 + 256) = *(void *)(v10 - 8);
  *(void *)(v8 + 264) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Logger();
  *(void *)(v8 + 272) = v11;
  *(void *)(v8 + 280) = *(void *)(v11 - 8);
  *(void *)(v8 + 288) = swift_task_alloc();
  *(void *)(v8 + 296) = swift_task_alloc();
  *(void *)(v8 + 304) = swift_task_alloc();
  *(void *)(v8 + 312) = swift_task_alloc();
  uint64_t v12 = sub_1000172F8(&qword_10065C5A8);
  *(void *)(v8 + 320) = v12;
  *(void *)(v8 + 328) = *(void *)(v12 - 8);
  *(void *)(v8 + 336) = swift_task_alloc();
  *(void *)(v8 + 344) = swift_task_alloc();
  *(void *)(v8 + 352) = swift_task_alloc();
  uint64_t v13 = sub_1000172F8(&qword_10065C5B0);
  *(void *)(v8 + 360) = v13;
  *(void *)(v8 + 368) = *(void *)(v13 - 8);
  *(void *)(v8 + 376) = swift_task_alloc();
  *(void *)(v8 + 384) = swift_task_alloc();
  *(void *)(v8 + 392) = swift_task_alloc();
  return _swift_task_switch(sub_100206694, 0, 0);
}

uint64_t sub_100206694()
{
  uint64_t v109 = v0;
  uint64_t v1 = *(void *)(v0 + 144);
  if (*(unsigned char *)(v0 + 497) != 1)
  {
    if (v1)
    {
      sub_10001733C(*(void *)(v0 + 152), v0 + 464, &qword_10065C310);
      if ((*(unsigned char *)(v0 + 496) & 1) == 0)
      {
        char v107 = *(unsigned char *)(v0 + 498);
        uint64_t v106 = *(unsigned int *)(v0 + 464);
        *(_DWORD *)(v0 + 568) = v106;
        uint64_t v72 = *(unsigned int *)(v0 + 468);
        *(_DWORD *)(v0 + 572) = v72;
        uint64_t v73 = *(unsigned int *)(v0 + 472);
        *(_DWORD *)(v0 + 576) = v73;
        uint64_t v74 = *(unsigned int *)(v0 + 476);
        *(_DWORD *)(v0 + 580) = v74;
        uint64_t v75 = *(unsigned int *)(v0 + 480);
        *(_DWORD *)(v0 + 584) = v75;
        uint64_t v76 = *(unsigned int *)(v0 + 484);
        *(_DWORD *)(v0 + 588) = v76;
        uint64_t v77 = *(unsigned int *)(v0 + 488);
        *(_DWORD *)(v0 + 592) = v77;
        unint64_t v104 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                         + dword_10065D5F0);
        uint64_t v78 = *(unsigned int *)(v0 + 492);
        *(_DWORD *)(v0 + 596) = v78;
        swift_unknownObjectRetain();
        uint64_t v66 = (void *)swift_task_alloc();
        uint64_t v67 = v106 | (v72 << 32);
        *(void *)(v0 + 432) = v66;
        uint64_t v68 = v73 | (v74 << 32);
        uint64_t v69 = v75 | (v76 << 32);
        uint64_t v70 = v77 | (v78 << 32);
        *uint64_t v66 = v0;
        unint64_t v71 = sub_100208B08;
        goto LABEL_26;
      }
    }
    static Logger.xpc.getter();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 138412290;
      uint64_t v24 = sub_1005163F0();
      *(void *)(v0 + 72) = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v23 = v24;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%@] Unable to obtain XPC connection, client, and audit token", v22, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v26 = *(void *)(v0 + 280);
    uint64_t v25 = *(void *)(v0 + 288);
    uint64_t v27 = *(void *)(v0 + 272);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    uint64_t v28 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    static Logger.xpc.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v32 = *(void *)(v0 + 296);
    uint64_t v33 = *(void *)(v0 + 272);
    uint64_t v34 = *(void *)(v0 + 280);
    if (v31)
    {
      uint64_t v103 = *(void *)(v0 + 296);
      uint64_t v35 = swift_slowAlloc();
      long long v99 = (void *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v102 = v33;
      uint64_t v36 = StaticString.description.getter();
      *(void *)(v0 + 56) = sub_1000143F4(v36, v37, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2114;
      swift_errorRetain();
      uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 64) = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v99 = v38;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Error in %s: %{public}@", (uint8_t *)v35, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v103, v102);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    }
    uint64_t v49 = *(void *)(v0 + 352);
    uint64_t v50 = *(void *)(v0 + 320);
    uint64_t v51 = *(void *)(v0 + 328);
    uint64_t v53 = *(void *)(v0 + 232);
    uint64_t v52 = *(void *)(v0 + 240);
    uint64_t v54 = *(void *)(v0 + 224);
    sub_1001E3BD8(v28, v52);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v49, v52, v54);
    (*(void (**)(uint64_t, void, uint64_t))(v51 + 104))(v49, enum case for ServiceResult.failure<A>(_:), v50);
    if (os_variant_has_internal_content())
    {
      uint64_t v56 = *(void *)(v0 + 232);
      uint64_t v55 = *(void *)(v0 + 240);
      uint64_t v57 = *(void *)(v0 + 224);
      if (*(void *)(v0 + 144))
      {
        swift_getObjectType();
        sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
        v58._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        XPCClientProtocol.logMessage(_:)(v58);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
LABEL_34:
        uint64_t v92 = *(void *)(v0 + 328);
        uint64_t v91 = *(void *)(v0 + 336);
        uint64_t v93 = *(void *)(v0 + 320);
        (*(void (**)(uint64_t, void, uint64_t))(v92 + 16))(v91, *(void *)(v0 + 352), v93);
        *(void *)(v0 + 88) = v91;
        *(void *)(v0 + 40) = v93;
        *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065C5B8, &qword_10065C5A8);
        long long v84 = (void (**)(uint64_t, uint64_t))(v92 + 8);
        uint64_t v85 = encodeXPCValues<each A>(_:)();
        unint64_t v87 = v94;
        uint64_t v88 = *(void *)(v0 + 352);
        uint64_t v89 = *(void *)(v0 + 336);
        uint64_t v90 = *(void *)(v0 + 320);
        goto LABEL_35;
      }
      (*(void (**)(void, void))(v56 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    }
    swift_errorRelease();
    goto LABEL_34;
  }
  if (!v1 || (sub_10001733C(*(void *)(v0 + 152), v0 + 500, &qword_10065C310), (*(unsigned char *)(v0 + 532) & 1) != 0))
  {
    static Logger.xpc.getter();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 138412290;
      uint64_t v6 = sub_1005163F0();
      *(void *)(v0 + 136) = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v5 = v6;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%@] Unable to obtain XPC connection, client, and audit token", v4, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v7 = *(void *)(v0 + 304);
    uint64_t v8 = *(void *)(v0 + 272);
    uint64_t v9 = *(void *)(v0 + 280);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    static Logger.xpc.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = *(void *)(v0 + 312);
    uint64_t v14 = *(void *)(v0 + 272);
    uint64_t v15 = *(void *)(v0 + 280);
    if (v12)
    {
      uint64_t v100 = *(void *)(v0 + 312);
      uint64_t v101 = *(void *)(v0 + 272);
      uint64_t v16 = swift_slowAlloc();
      long long v98 = (void *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v17 = StaticString.description.getter();
      *(void *)(v0 + 120) = sub_1000143F4(v17, v18, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2114;
      swift_errorRetain();
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 128) = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v98 = v19;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v100, v101);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    uint64_t v39 = *(void *)(v0 + 392);
    uint64_t v40 = *(void *)(v0 + 360);
    uint64_t v41 = *(void *)(v0 + 368);
    uint64_t v43 = *(void *)(v0 + 256);
    uint64_t v42 = *(void *)(v0 + 264);
    uint64_t v44 = *(void *)(v0 + 248);
    swift_getErrorValue();
    sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v42);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v39, v42, v44);
    (*(void (**)(uint64_t, void, uint64_t))(v41 + 104))(v39, enum case for MarketplaceKitServiceResult.failure<A>(_:), v40);
    if (os_variant_has_internal_content())
    {
      uint64_t v46 = *(void *)(v0 + 256);
      uint64_t v45 = *(void *)(v0 + 264);
      uint64_t v47 = *(void *)(v0 + 248);
      if (*(void *)(v0 + 144))
      {
        swift_getObjectType();
        sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
        v48._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        XPCClientProtocol.logMessage(_:)(v48);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
LABEL_31:
        uint64_t v82 = *(void *)(v0 + 368);
        uint64_t v81 = *(void *)(v0 + 376);
        uint64_t v83 = *(void *)(v0 + 360);
        (*(void (**)(uint64_t, void, uint64_t))(v82 + 16))(v81, *(void *)(v0 + 392), v83);
        *(void *)(v0 + 96) = v81;
        *(void *)(v0 + 104) = v83;
        *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065C5C0, &qword_10065C5B0);
        long long v84 = (void (**)(uint64_t, uint64_t))(v82 + 8);
        uint64_t v85 = encodeXPCValues<each A>(_:)();
        unint64_t v87 = v86;
        uint64_t v88 = *(void *)(v0 + 392);
        uint64_t v89 = *(void *)(v0 + 376);
        uint64_t v90 = *(void *)(v0 + 360);
LABEL_35:
        long long v95 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
        char v96 = *v84;
        (*v84)(v89, v90);
        v95(v85, v87);
        sub_100013510(v85, v87);
        v96(v88, v90);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        long long v97 = *(uint64_t (**)(void))(v0 + 8);
        return v97();
      }
      (*(void (**)(void, void))(v46 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    }
    swift_errorRelease();
    goto LABEL_31;
  }
  char v107 = *(unsigned char *)(v0 + 498);
  uint64_t v105 = *(unsigned int *)(v0 + 500);
  *(_DWORD *)(v0 + 536) = v105;
  uint64_t v59 = *(unsigned int *)(v0 + 504);
  *(_DWORD *)(v0 + 540) = v59;
  uint64_t v60 = *(unsigned int *)(v0 + 508);
  *(_DWORD *)(v0 + 544) = v60;
  uint64_t v61 = *(unsigned int *)(v0 + 512);
  *(_DWORD *)(v0 + 548) = v61;
  uint64_t v62 = *(unsigned int *)(v0 + 516);
  *(_DWORD *)(v0 + 552) = v62;
  uint64_t v63 = *(unsigned int *)(v0 + 520);
  *(_DWORD *)(v0 + 556) = v63;
  uint64_t v64 = *(unsigned int *)(v0 + 524);
  *(_DWORD *)(v0 + 560) = v64;
  unint64_t v104 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                   + dword_10065D5F0);
  uint64_t v65 = *(unsigned int *)(v0 + 528);
  *(_DWORD *)(v0 + 564) = v65;
  swift_unknownObjectRetain();
  uint64_t v66 = (void *)swift_task_alloc();
  uint64_t v67 = v105 | (v59 << 32);
  *(void *)(v0 + 400) = v66;
  uint64_t v68 = v60 | (v61 << 32);
  uint64_t v69 = v62 | (v63 << 32);
  uint64_t v70 = v64 | (v65 << 32);
  *uint64_t v66 = v0;
  unint64_t v71 = sub_100207504;
LABEL_26:
  v66[1] = v71;
  uint64_t v79 = *(void *)(v0 + 160);
  return v104(v79, v107 & 1, v67, v68, v69, v70);
}

uint64_t sub_100207504(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 408) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100207CE4;
  }
  else
  {
    *(unsigned char *)(v4 + 533) = a1 & 1;
    uint64_t v5 = sub_100207630;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100207630()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 533) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 560);
    uint64_t v2 = *(void *)(v0 + 552);
    uint64_t v3 = *(void *)(v0 + 544);
    uint64_t v4 = *(void *)(v0 + 536);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v6;
    void *v6 = v0;
    v6[1] = sub_10020824C;
    uint64_t v7 = *(void *)(v0 + 384);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = *(void *)(v0 + 312);
  uint64_t v13 = *(void *)(v0 + 272);
  uint64_t v14 = *(void *)(v0 + 280);
  if (v11)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v41 = *(void *)(v0 + 312);
    uint64_t v15 = swift_slowAlloc();
    uint64_t v40 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = StaticString.description.getter();
    *(void *)(v0 + 120) = sub_1000143F4(v16, v17, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2114;
    swift_errorRetain();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 128) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v40 = v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Error in %s: %{public}@", (uint8_t *)v15, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v41, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v19 = *(void *)(v0 + 392);
  uint64_t v20 = *(void *)(v0 + 360);
  uint64_t v21 = *(void *)(v0 + 368);
  uint64_t v23 = *(void *)(v0 + 256);
  uint64_t v22 = *(void *)(v0 + 264);
  uint64_t v24 = *(void *)(v0 + 248);
  swift_getErrorValue();
  sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v19, v22, v24);
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v19, enum case for MarketplaceKitServiceResult.failure<A>(_:), v20);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v26 = *(void *)(v0 + 256);
  uint64_t v25 = *(void *)(v0 + 264);
  uint64_t v27 = *(void *)(v0 + 248);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v26 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
  v28._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v28);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
LABEL_14:
  uint64_t v30 = *(void *)(v0 + 368);
  uint64_t v29 = *(void *)(v0 + 376);
  uint64_t v31 = *(void *)(v0 + 360);
  (*(void (**)(uint64_t, void, uint64_t))(v30 + 16))(v29, *(void *)(v0 + 392), v31);
  *(void *)(v0 + 96) = v29;
  *(void *)(v0 + 104) = v31;
  *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065C5C0, &qword_10065C5B0);
  uint64_t v32 = encodeXPCValues<each A>(_:)();
  unint64_t v34 = v33;
  uint64_t v35 = *(void *)(v0 + 392);
  uint64_t v36 = *(void *)(v0 + 360);
  unint64_t v37 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v38(*(void *)(v0 + 376), v36);
  v37(v32, v34);
  sub_100013510(v32, v34);
  v38(v35, v36);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_100207CE4()
{
  unint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065C5C0, &qword_10065C5B0);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_10020824C()
{
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1002085A0;
  }
  else {
    os_log_type_t v2 = sub_100208360;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100208360()
{
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[46];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for MarketplaceKitServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[53];
  uint64_t v7 = v0[46];
  uint64_t v6 = v0[47];
  uint64_t v8 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[49], v8);
  v0[12] = v6;
  v0[13] = v8;
  v0[14] = sub_10000DDFC(&qword_10065C5C0, &qword_10065C5B0);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[49];
  uint64_t v14 = v0[45];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[47], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1002085A0()
{
  unint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065C5C0, &qword_10065C5B0);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_100208B08(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 440) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1002092D0;
  }
  else
  {
    *(unsigned char *)(v4 + 534) = a1 & 1;
    uint64_t v5 = sub_100208C34;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100208C34()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 534) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 592);
    uint64_t v2 = *(void *)(v0 + 584);
    uint64_t v3 = *(void *)(v0 + 576);
    uint64_t v4 = *(void *)(v0 + 568);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    unint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v6;
    void *v6 = v0;
    v6[1] = sub_10020981C;
    uint64_t v7 = *(void *)(v0 + 344);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  uint64_t v9 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 296);
  uint64_t v14 = *(void *)(v0 + 272);
  uint64_t v15 = *(void *)(v0 + 280);
  if (v12)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v16 = swift_slowAlloc();
    uint64_t v41 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = StaticString.description.getter();
    *(void *)(v0 + 56) = sub_1000143F4(v17, v18, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2114;
    swift_errorRetain();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v41 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  uint64_t v20 = *(void *)(v0 + 352);
  uint64_t v21 = *(void *)(v0 + 320);
  uint64_t v22 = *(void *)(v0 + 328);
  uint64_t v24 = *(void *)(v0 + 232);
  uint64_t v23 = *(void *)(v0 + 240);
  uint64_t v25 = *(void *)(v0 + 224);
  sub_1001E3BD8(v9, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v20, v23, v25);
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))(v20, enum case for ServiceResult.failure<A>(_:), v21);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v27 = *(void *)(v0 + 232);
  uint64_t v26 = *(void *)(v0 + 240);
  uint64_t v28 = *(void *)(v0 + 224);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v27 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
  v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v29);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
LABEL_14:
  uint64_t v31 = *(void *)(v0 + 328);
  uint64_t v30 = *(void *)(v0 + 336);
  uint64_t v32 = *(void *)(v0 + 320);
  (*(void (**)(uint64_t, void, uint64_t))(v31 + 16))(v30, *(void *)(v0 + 352), v32);
  *(void *)(v0 + 88) = v30;
  *(void *)(v0 + 40) = v32;
  *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065C5B8, &qword_10065C5A8);
  uint64_t v33 = encodeXPCValues<each A>(_:)();
  unint64_t v35 = v34;
  uint64_t v36 = *(void *)(v0 + 352);
  uint64_t v37 = *(void *)(v0 + 320);
  uint64_t v38 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  v39(*(void *)(v0 + 336), v37);
  v38(v33, v35);
  sub_100013510(v33, v35);
  v39(v36, v37);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_1002092D0()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[55];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065C5B8, &qword_10065C5A8);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_10020981C()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100209B70;
  }
  else {
    uint64_t v2 = sub_100209930;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100209930()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[44];
  uint64_t v3 = v0[40];
  uint64_t v4 = v0[41];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for ServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[57];
  uint64_t v7 = v0[41];
  uint64_t v6 = v0[42];
  uint64_t v8 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[44], v8);
  v0[5] = v8;
  v0[11] = v6;
  v0[6] = sub_10000DDFC(&qword_10065C5B8, &qword_10065C5A8);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[44];
  uint64_t v14 = v0[40];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[42], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_100209B70()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[57];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065C5B8, &qword_10065C5A8);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_10020A0BC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 216) = v19;
  *(_OWORD *)(v8 + 200) = v18;
  *(unsigned char *)(v8 + 499) = v17;
  *(_OWORD *)(v8 + 184) = v16;
  *(void *)(v8 + 168) = a7;
  *(void *)(v8 + 176) = a8;
  *(unsigned char *)(v8 + 498) = a6;
  *(void *)(v8 + 152) = a4;
  *(void *)(v8 + 160) = a5;
  *(void *)(v8 + 144) = a3;
  *(unsigned char *)(v8 + 497) = a2;
  uint64_t v9 = type metadata accessor for ManagedAppDistributionError();
  *(void *)(v8 + 224) = v9;
  *(void *)(v8 + 232) = *(void *)(v9 - 8);
  *(void *)(v8 + 240) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MarketplaceKitError();
  *(void *)(v8 + 248) = v10;
  *(void *)(v8 + 256) = *(void *)(v10 - 8);
  *(void *)(v8 + 264) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Logger();
  *(void *)(v8 + 272) = v11;
  *(void *)(v8 + 280) = *(void *)(v11 - 8);
  *(void *)(v8 + 288) = swift_task_alloc();
  *(void *)(v8 + 296) = swift_task_alloc();
  *(void *)(v8 + 304) = swift_task_alloc();
  *(void *)(v8 + 312) = swift_task_alloc();
  uint64_t v12 = sub_1000172F8(&qword_10065C488);
  *(void *)(v8 + 320) = v12;
  *(void *)(v8 + 328) = *(void *)(v12 - 8);
  *(void *)(v8 + 336) = swift_task_alloc();
  *(void *)(v8 + 344) = swift_task_alloc();
  *(void *)(v8 + 352) = swift_task_alloc();
  uint64_t v13 = sub_1000172F8(&qword_10065C490);
  *(void *)(v8 + 360) = v13;
  *(void *)(v8 + 368) = *(void *)(v13 - 8);
  *(void *)(v8 + 376) = swift_task_alloc();
  *(void *)(v8 + 384) = swift_task_alloc();
  *(void *)(v8 + 392) = swift_task_alloc();
  return _swift_task_switch(sub_10020A388, 0, 0);
}

uint64_t sub_10020A388()
{
  uint64_t v109 = v0;
  uint64_t v1 = *(void *)(v0 + 144);
  if (*(unsigned char *)(v0 + 497) != 1)
  {
    if (v1)
    {
      sub_10001733C(*(void *)(v0 + 152), v0 + 464, &qword_10065C310);
      if ((*(unsigned char *)(v0 + 496) & 1) == 0)
      {
        char v107 = *(unsigned char *)(v0 + 498);
        uint64_t v106 = *(unsigned int *)(v0 + 464);
        *(_DWORD *)(v0 + 568) = v106;
        uint64_t v72 = *(unsigned int *)(v0 + 468);
        *(_DWORD *)(v0 + 572) = v72;
        uint64_t v73 = *(unsigned int *)(v0 + 472);
        *(_DWORD *)(v0 + 576) = v73;
        uint64_t v74 = *(unsigned int *)(v0 + 476);
        *(_DWORD *)(v0 + 580) = v74;
        uint64_t v75 = *(unsigned int *)(v0 + 480);
        *(_DWORD *)(v0 + 584) = v75;
        uint64_t v76 = *(unsigned int *)(v0 + 484);
        *(_DWORD *)(v0 + 588) = v76;
        uint64_t v77 = *(unsigned int *)(v0 + 488);
        *(_DWORD *)(v0 + 592) = v77;
        unint64_t v104 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                         + dword_10065D5F0);
        uint64_t v78 = *(unsigned int *)(v0 + 492);
        *(_DWORD *)(v0 + 596) = v78;
        swift_unknownObjectRetain();
        uint64_t v66 = (void *)swift_task_alloc();
        uint64_t v67 = v106 | (v72 << 32);
        *(void *)(v0 + 432) = v66;
        uint64_t v68 = v73 | (v74 << 32);
        uint64_t v69 = v75 | (v76 << 32);
        uint64_t v70 = v77 | (v78 << 32);
        *uint64_t v66 = v0;
        unint64_t v71 = sub_10020C7FC;
        goto LABEL_26;
      }
    }
    static Logger.xpc.getter();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 138412290;
      uint64_t v24 = sub_1005163F0();
      *(void *)(v0 + 72) = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v23 = v24;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%@] Unable to obtain XPC connection, client, and audit token", v22, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v26 = *(void *)(v0 + 280);
    uint64_t v25 = *(void *)(v0 + 288);
    uint64_t v27 = *(void *)(v0 + 272);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    uint64_t v28 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    static Logger.xpc.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v32 = *(void *)(v0 + 296);
    uint64_t v33 = *(void *)(v0 + 272);
    uint64_t v34 = *(void *)(v0 + 280);
    if (v31)
    {
      uint64_t v103 = *(void *)(v0 + 296);
      uint64_t v35 = swift_slowAlloc();
      long long v99 = (void *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v102 = v33;
      uint64_t v36 = StaticString.description.getter();
      *(void *)(v0 + 56) = sub_1000143F4(v36, v37, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2114;
      swift_errorRetain();
      uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 64) = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v99 = v38;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Error in %s: %{public}@", (uint8_t *)v35, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v103, v102);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    }
    uint64_t v49 = *(void *)(v0 + 352);
    uint64_t v50 = *(void *)(v0 + 320);
    uint64_t v51 = *(void *)(v0 + 328);
    uint64_t v53 = *(void *)(v0 + 232);
    uint64_t v52 = *(void *)(v0 + 240);
    uint64_t v54 = *(void *)(v0 + 224);
    sub_1001E3BD8(v28, v52);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v49, v52, v54);
    (*(void (**)(uint64_t, void, uint64_t))(v51 + 104))(v49, enum case for ServiceResult.failure<A>(_:), v50);
    if (os_variant_has_internal_content())
    {
      uint64_t v56 = *(void *)(v0 + 232);
      uint64_t v55 = *(void *)(v0 + 240);
      uint64_t v57 = *(void *)(v0 + 224);
      if (*(void *)(v0 + 144))
      {
        swift_getObjectType();
        sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
        v58._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        XPCClientProtocol.logMessage(_:)(v58);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
LABEL_34:
        uint64_t v92 = *(void *)(v0 + 328);
        uint64_t v91 = *(void *)(v0 + 336);
        uint64_t v93 = *(void *)(v0 + 320);
        (*(void (**)(uint64_t, void, uint64_t))(v92 + 16))(v91, *(void *)(v0 + 352), v93);
        *(void *)(v0 + 88) = v91;
        *(void *)(v0 + 40) = v93;
        *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065C498, &qword_10065C488);
        long long v84 = (void (**)(uint64_t, uint64_t))(v92 + 8);
        uint64_t v85 = encodeXPCValues<each A>(_:)();
        unint64_t v87 = v94;
        uint64_t v88 = *(void *)(v0 + 352);
        uint64_t v89 = *(void *)(v0 + 336);
        uint64_t v90 = *(void *)(v0 + 320);
        goto LABEL_35;
      }
      (*(void (**)(void, void))(v56 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    }
    swift_errorRelease();
    goto LABEL_34;
  }
  if (!v1 || (sub_10001733C(*(void *)(v0 + 152), v0 + 500, &qword_10065C310), (*(unsigned char *)(v0 + 532) & 1) != 0))
  {
    static Logger.xpc.getter();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 138412290;
      uint64_t v6 = sub_1005163F0();
      *(void *)(v0 + 136) = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v5 = v6;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%@] Unable to obtain XPC connection, client, and audit token", v4, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v7 = *(void *)(v0 + 304);
    uint64_t v8 = *(void *)(v0 + 272);
    uint64_t v9 = *(void *)(v0 + 280);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    static Logger.xpc.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = *(void *)(v0 + 312);
    uint64_t v14 = *(void *)(v0 + 272);
    uint64_t v15 = *(void *)(v0 + 280);
    if (v12)
    {
      uint64_t v100 = *(void *)(v0 + 312);
      uint64_t v101 = *(void *)(v0 + 272);
      uint64_t v16 = swift_slowAlloc();
      long long v98 = (void *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v17 = StaticString.description.getter();
      *(void *)(v0 + 120) = sub_1000143F4(v17, v18, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2114;
      swift_errorRetain();
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 128) = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v98 = v19;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v100, v101);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    uint64_t v39 = *(void *)(v0 + 392);
    uint64_t v40 = *(void *)(v0 + 360);
    uint64_t v41 = *(void *)(v0 + 368);
    uint64_t v43 = *(void *)(v0 + 256);
    uint64_t v42 = *(void *)(v0 + 264);
    uint64_t v44 = *(void *)(v0 + 248);
    swift_getErrorValue();
    sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v42);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v39, v42, v44);
    (*(void (**)(uint64_t, void, uint64_t))(v41 + 104))(v39, enum case for MarketplaceKitServiceResult.failure<A>(_:), v40);
    if (os_variant_has_internal_content())
    {
      uint64_t v46 = *(void *)(v0 + 256);
      uint64_t v45 = *(void *)(v0 + 264);
      uint64_t v47 = *(void *)(v0 + 248);
      if (*(void *)(v0 + 144))
      {
        swift_getObjectType();
        sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
        v48._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        XPCClientProtocol.logMessage(_:)(v48);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
LABEL_31:
        uint64_t v82 = *(void *)(v0 + 368);
        uint64_t v81 = *(void *)(v0 + 376);
        uint64_t v83 = *(void *)(v0 + 360);
        (*(void (**)(uint64_t, void, uint64_t))(v82 + 16))(v81, *(void *)(v0 + 392), v83);
        *(void *)(v0 + 96) = v81;
        *(void *)(v0 + 104) = v83;
        *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065C4A0, &qword_10065C490);
        long long v84 = (void (**)(uint64_t, uint64_t))(v82 + 8);
        uint64_t v85 = encodeXPCValues<each A>(_:)();
        unint64_t v87 = v86;
        uint64_t v88 = *(void *)(v0 + 392);
        uint64_t v89 = *(void *)(v0 + 376);
        uint64_t v90 = *(void *)(v0 + 360);
LABEL_35:
        long long v95 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
        char v96 = *v84;
        (*v84)(v89, v90);
        v95(v85, v87);
        sub_100013510(v85, v87);
        v96(v88, v90);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        long long v97 = *(uint64_t (**)(void))(v0 + 8);
        return v97();
      }
      (*(void (**)(void, void))(v46 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    }
    swift_errorRelease();
    goto LABEL_31;
  }
  char v107 = *(unsigned char *)(v0 + 498);
  uint64_t v105 = *(unsigned int *)(v0 + 500);
  *(_DWORD *)(v0 + 536) = v105;
  uint64_t v59 = *(unsigned int *)(v0 + 504);
  *(_DWORD *)(v0 + 540) = v59;
  uint64_t v60 = *(unsigned int *)(v0 + 508);
  *(_DWORD *)(v0 + 544) = v60;
  uint64_t v61 = *(unsigned int *)(v0 + 512);
  *(_DWORD *)(v0 + 548) = v61;
  uint64_t v62 = *(unsigned int *)(v0 + 516);
  *(_DWORD *)(v0 + 552) = v62;
  uint64_t v63 = *(unsigned int *)(v0 + 520);
  *(_DWORD *)(v0 + 556) = v63;
  uint64_t v64 = *(unsigned int *)(v0 + 524);
  *(_DWORD *)(v0 + 560) = v64;
  unint64_t v104 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                   + dword_10065D5F0);
  uint64_t v65 = *(unsigned int *)(v0 + 528);
  *(_DWORD *)(v0 + 564) = v65;
  swift_unknownObjectRetain();
  uint64_t v66 = (void *)swift_task_alloc();
  uint64_t v67 = v105 | (v59 << 32);
  *(void *)(v0 + 400) = v66;
  uint64_t v68 = v60 | (v61 << 32);
  uint64_t v69 = v62 | (v63 << 32);
  uint64_t v70 = v64 | (v65 << 32);
  *uint64_t v66 = v0;
  unint64_t v71 = sub_10020B1F8;
LABEL_26:
  v66[1] = v71;
  uint64_t v79 = *(void *)(v0 + 160);
  return v104(v79, v107 & 1, v67, v68, v69, v70);
}

uint64_t sub_10020B1F8(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 408) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10020B9D8;
  }
  else
  {
    *(unsigned char *)(v4 + 533) = a1 & 1;
    uint64_t v5 = sub_10020B324;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10020B324()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 533) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 560);
    uint64_t v2 = *(void *)(v0 + 552);
    uint64_t v3 = *(void *)(v0 + 544);
    uint64_t v4 = *(void *)(v0 + 536);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v6;
    void *v6 = v0;
    v6[1] = sub_10020BF40;
    uint64_t v7 = *(void *)(v0 + 384);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = *(void *)(v0 + 312);
  uint64_t v13 = *(void *)(v0 + 272);
  uint64_t v14 = *(void *)(v0 + 280);
  if (v11)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v41 = *(void *)(v0 + 312);
    uint64_t v15 = swift_slowAlloc();
    uint64_t v40 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = StaticString.description.getter();
    *(void *)(v0 + 120) = sub_1000143F4(v16, v17, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2114;
    swift_errorRetain();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 128) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v40 = v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Error in %s: %{public}@", (uint8_t *)v15, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v41, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v19 = *(void *)(v0 + 392);
  uint64_t v20 = *(void *)(v0 + 360);
  uint64_t v21 = *(void *)(v0 + 368);
  uint64_t v23 = *(void *)(v0 + 256);
  uint64_t v22 = *(void *)(v0 + 264);
  uint64_t v24 = *(void *)(v0 + 248);
  swift_getErrorValue();
  sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v19, v22, v24);
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v19, enum case for MarketplaceKitServiceResult.failure<A>(_:), v20);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v26 = *(void *)(v0 + 256);
  uint64_t v25 = *(void *)(v0 + 264);
  uint64_t v27 = *(void *)(v0 + 248);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v26 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
  v28._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v28);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
LABEL_14:
  uint64_t v30 = *(void *)(v0 + 368);
  uint64_t v29 = *(void *)(v0 + 376);
  uint64_t v31 = *(void *)(v0 + 360);
  (*(void (**)(uint64_t, void, uint64_t))(v30 + 16))(v29, *(void *)(v0 + 392), v31);
  *(void *)(v0 + 96) = v29;
  *(void *)(v0 + 104) = v31;
  *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065C4A0, &qword_10065C490);
  uint64_t v32 = encodeXPCValues<each A>(_:)();
  unint64_t v34 = v33;
  uint64_t v35 = *(void *)(v0 + 392);
  uint64_t v36 = *(void *)(v0 + 360);
  unint64_t v37 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v38(*(void *)(v0 + 376), v36);
  v37(v32, v34);
  sub_100013510(v32, v34);
  v38(v35, v36);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_10020B9D8()
{
  unint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065C4A0, &qword_10065C490);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_10020BF40()
{
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_10020C294;
  }
  else {
    os_log_type_t v2 = sub_10020C054;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10020C054()
{
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[46];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for MarketplaceKitServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[53];
  uint64_t v7 = v0[46];
  uint64_t v6 = v0[47];
  uint64_t v8 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[49], v8);
  v0[12] = v6;
  v0[13] = v8;
  v0[14] = sub_10000DDFC(&qword_10065C4A0, &qword_10065C490);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[49];
  uint64_t v14 = v0[45];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[47], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_10020C294()
{
  unint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065C4A0, &qword_10065C490);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_10020C7FC(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 440) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10020CFC4;
  }
  else
  {
    *(unsigned char *)(v4 + 534) = a1 & 1;
    uint64_t v5 = sub_10020C928;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10020C928()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 534) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 592);
    uint64_t v2 = *(void *)(v0 + 584);
    uint64_t v3 = *(void *)(v0 + 576);
    uint64_t v4 = *(void *)(v0 + 568);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    unint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v6;
    void *v6 = v0;
    v6[1] = sub_10020D510;
    uint64_t v7 = *(void *)(v0 + 344);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  uint64_t v9 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 296);
  uint64_t v14 = *(void *)(v0 + 272);
  uint64_t v15 = *(void *)(v0 + 280);
  if (v12)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v16 = swift_slowAlloc();
    uint64_t v41 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = StaticString.description.getter();
    *(void *)(v0 + 56) = sub_1000143F4(v17, v18, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2114;
    swift_errorRetain();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v41 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  uint64_t v20 = *(void *)(v0 + 352);
  uint64_t v21 = *(void *)(v0 + 320);
  uint64_t v22 = *(void *)(v0 + 328);
  uint64_t v24 = *(void *)(v0 + 232);
  uint64_t v23 = *(void *)(v0 + 240);
  uint64_t v25 = *(void *)(v0 + 224);
  sub_1001E3BD8(v9, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v20, v23, v25);
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))(v20, enum case for ServiceResult.failure<A>(_:), v21);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v27 = *(void *)(v0 + 232);
  uint64_t v26 = *(void *)(v0 + 240);
  uint64_t v28 = *(void *)(v0 + 224);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v27 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
  v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v29);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
LABEL_14:
  uint64_t v31 = *(void *)(v0 + 328);
  uint64_t v30 = *(void *)(v0 + 336);
  uint64_t v32 = *(void *)(v0 + 320);
  (*(void (**)(uint64_t, void, uint64_t))(v31 + 16))(v30, *(void *)(v0 + 352), v32);
  *(void *)(v0 + 88) = v30;
  *(void *)(v0 + 40) = v32;
  *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065C498, &qword_10065C488);
  uint64_t v33 = encodeXPCValues<each A>(_:)();
  unint64_t v35 = v34;
  uint64_t v36 = *(void *)(v0 + 352);
  uint64_t v37 = *(void *)(v0 + 320);
  uint64_t v38 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  v39(*(void *)(v0 + 336), v37);
  v38(v33, v35);
  sub_100013510(v33, v35);
  v39(v36, v37);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_10020CFC4()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[55];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065C498, &qword_10065C488);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_10020D510()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10020D864;
  }
  else {
    uint64_t v2 = sub_10020D624;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10020D624()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[44];
  uint64_t v3 = v0[40];
  uint64_t v4 = v0[41];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for ServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[57];
  uint64_t v7 = v0[41];
  uint64_t v6 = v0[42];
  uint64_t v8 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[44], v8);
  v0[5] = v8;
  v0[11] = v6;
  v0[6] = sub_10000DDFC(&qword_10065C498, &qword_10065C488);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[44];
  uint64_t v14 = v0[40];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[42], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_10020D864()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[57];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065C498, &qword_10065C488);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_10020DDB0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 216) = v19;
  *(_OWORD *)(v8 + 200) = v18;
  *(unsigned char *)(v8 + 499) = v17;
  *(_OWORD *)(v8 + 184) = v16;
  *(void *)(v8 + 168) = a7;
  *(void *)(v8 + 176) = a8;
  *(unsigned char *)(v8 + 498) = a6;
  *(void *)(v8 + 152) = a4;
  *(void *)(v8 + 160) = a5;
  *(void *)(v8 + 144) = a3;
  *(unsigned char *)(v8 + 497) = a2;
  uint64_t v9 = type metadata accessor for ManagedAppDistributionError();
  *(void *)(v8 + 224) = v9;
  *(void *)(v8 + 232) = *(void *)(v9 - 8);
  *(void *)(v8 + 240) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MarketplaceKitError();
  *(void *)(v8 + 248) = v10;
  *(void *)(v8 + 256) = *(void *)(v10 - 8);
  *(void *)(v8 + 264) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Logger();
  *(void *)(v8 + 272) = v11;
  *(void *)(v8 + 280) = *(void *)(v11 - 8);
  *(void *)(v8 + 288) = swift_task_alloc();
  *(void *)(v8 + 296) = swift_task_alloc();
  *(void *)(v8 + 304) = swift_task_alloc();
  *(void *)(v8 + 312) = swift_task_alloc();
  uint64_t v12 = sub_1000172F8(&qword_10065C418);
  *(void *)(v8 + 320) = v12;
  *(void *)(v8 + 328) = *(void *)(v12 - 8);
  *(void *)(v8 + 336) = swift_task_alloc();
  *(void *)(v8 + 344) = swift_task_alloc();
  *(void *)(v8 + 352) = swift_task_alloc();
  uint64_t v13 = sub_1000172F8(&qword_10065C420);
  *(void *)(v8 + 360) = v13;
  *(void *)(v8 + 368) = *(void *)(v13 - 8);
  *(void *)(v8 + 376) = swift_task_alloc();
  *(void *)(v8 + 384) = swift_task_alloc();
  *(void *)(v8 + 392) = swift_task_alloc();
  return _swift_task_switch(sub_10020E07C, 0, 0);
}

uint64_t sub_10020E07C()
{
  uint64_t v109 = v0;
  uint64_t v1 = *(void *)(v0 + 144);
  if (*(unsigned char *)(v0 + 497) != 1)
  {
    if (v1)
    {
      sub_10001733C(*(void *)(v0 + 152), v0 + 464, &qword_10065C310);
      if ((*(unsigned char *)(v0 + 496) & 1) == 0)
      {
        char v107 = *(unsigned char *)(v0 + 498);
        uint64_t v106 = *(unsigned int *)(v0 + 464);
        *(_DWORD *)(v0 + 568) = v106;
        uint64_t v72 = *(unsigned int *)(v0 + 468);
        *(_DWORD *)(v0 + 572) = v72;
        uint64_t v73 = *(unsigned int *)(v0 + 472);
        *(_DWORD *)(v0 + 576) = v73;
        uint64_t v74 = *(unsigned int *)(v0 + 476);
        *(_DWORD *)(v0 + 580) = v74;
        uint64_t v75 = *(unsigned int *)(v0 + 480);
        *(_DWORD *)(v0 + 584) = v75;
        uint64_t v76 = *(unsigned int *)(v0 + 484);
        *(_DWORD *)(v0 + 588) = v76;
        uint64_t v77 = *(unsigned int *)(v0 + 488);
        *(_DWORD *)(v0 + 592) = v77;
        unint64_t v104 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                         + dword_10065D5F0);
        uint64_t v78 = *(unsigned int *)(v0 + 492);
        *(_DWORD *)(v0 + 596) = v78;
        swift_unknownObjectRetain();
        uint64_t v66 = (void *)swift_task_alloc();
        uint64_t v67 = v106 | (v72 << 32);
        *(void *)(v0 + 432) = v66;
        uint64_t v68 = v73 | (v74 << 32);
        uint64_t v69 = v75 | (v76 << 32);
        uint64_t v70 = v77 | (v78 << 32);
        *uint64_t v66 = v0;
        unint64_t v71 = sub_1002104F0;
        goto LABEL_26;
      }
    }
    static Logger.xpc.getter();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 138412290;
      uint64_t v24 = sub_1005163F0();
      *(void *)(v0 + 72) = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v23 = v24;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%@] Unable to obtain XPC connection, client, and audit token", v22, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v26 = *(void *)(v0 + 280);
    uint64_t v25 = *(void *)(v0 + 288);
    uint64_t v27 = *(void *)(v0 + 272);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    uint64_t v28 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    static Logger.xpc.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v32 = *(void *)(v0 + 296);
    uint64_t v33 = *(void *)(v0 + 272);
    uint64_t v34 = *(void *)(v0 + 280);
    if (v31)
    {
      uint64_t v103 = *(void *)(v0 + 296);
      uint64_t v35 = swift_slowAlloc();
      long long v99 = (void *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v102 = v33;
      uint64_t v36 = StaticString.description.getter();
      *(void *)(v0 + 56) = sub_1000143F4(v36, v37, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2114;
      swift_errorRetain();
      uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 64) = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v99 = v38;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Error in %s: %{public}@", (uint8_t *)v35, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v103, v102);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    }
    uint64_t v49 = *(void *)(v0 + 352);
    uint64_t v50 = *(void *)(v0 + 320);
    uint64_t v51 = *(void *)(v0 + 328);
    uint64_t v53 = *(void *)(v0 + 232);
    uint64_t v52 = *(void *)(v0 + 240);
    uint64_t v54 = *(void *)(v0 + 224);
    sub_1001E3BD8(v28, v52);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v49, v52, v54);
    (*(void (**)(uint64_t, void, uint64_t))(v51 + 104))(v49, enum case for ServiceResult.failure<A>(_:), v50);
    if (os_variant_has_internal_content())
    {
      uint64_t v56 = *(void *)(v0 + 232);
      uint64_t v55 = *(void *)(v0 + 240);
      uint64_t v57 = *(void *)(v0 + 224);
      if (*(void *)(v0 + 144))
      {
        swift_getObjectType();
        sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
        v58._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        XPCClientProtocol.logMessage(_:)(v58);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
LABEL_34:
        uint64_t v92 = *(void *)(v0 + 328);
        uint64_t v91 = *(void *)(v0 + 336);
        uint64_t v93 = *(void *)(v0 + 320);
        (*(void (**)(uint64_t, void, uint64_t))(v92 + 16))(v91, *(void *)(v0 + 352), v93);
        *(void *)(v0 + 88) = v91;
        *(void *)(v0 + 40) = v93;
        *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065C428, &qword_10065C418);
        long long v84 = (void (**)(uint64_t, uint64_t))(v92 + 8);
        uint64_t v85 = encodeXPCValues<each A>(_:)();
        unint64_t v87 = v94;
        uint64_t v88 = *(void *)(v0 + 352);
        uint64_t v89 = *(void *)(v0 + 336);
        uint64_t v90 = *(void *)(v0 + 320);
        goto LABEL_35;
      }
      (*(void (**)(void, void))(v56 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    }
    swift_errorRelease();
    goto LABEL_34;
  }
  if (!v1 || (sub_10001733C(*(void *)(v0 + 152), v0 + 500, &qword_10065C310), (*(unsigned char *)(v0 + 532) & 1) != 0))
  {
    static Logger.xpc.getter();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 138412290;
      uint64_t v6 = sub_1005163F0();
      *(void *)(v0 + 136) = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v5 = v6;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%@] Unable to obtain XPC connection, client, and audit token", v4, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v7 = *(void *)(v0 + 304);
    uint64_t v8 = *(void *)(v0 + 272);
    uint64_t v9 = *(void *)(v0 + 280);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    static Logger.xpc.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = *(void *)(v0 + 312);
    uint64_t v14 = *(void *)(v0 + 272);
    uint64_t v15 = *(void *)(v0 + 280);
    if (v12)
    {
      uint64_t v100 = *(void *)(v0 + 312);
      uint64_t v101 = *(void *)(v0 + 272);
      uint64_t v16 = swift_slowAlloc();
      long long v98 = (void *)swift_slowAlloc();
      v108[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v17 = StaticString.description.getter();
      *(void *)(v0 + 120) = sub_1000143F4(v17, v18, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2114;
      swift_errorRetain();
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 128) = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v98 = v19;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v100, v101);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    uint64_t v39 = *(void *)(v0 + 392);
    uint64_t v40 = *(void *)(v0 + 360);
    uint64_t v41 = *(void *)(v0 + 368);
    uint64_t v43 = *(void *)(v0 + 256);
    uint64_t v42 = *(void *)(v0 + 264);
    uint64_t v44 = *(void *)(v0 + 248);
    swift_getErrorValue();
    sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v42);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v39, v42, v44);
    (*(void (**)(uint64_t, void, uint64_t))(v41 + 104))(v39, enum case for MarketplaceKitServiceResult.failure<A>(_:), v40);
    if (os_variant_has_internal_content())
    {
      uint64_t v46 = *(void *)(v0 + 256);
      uint64_t v45 = *(void *)(v0 + 264);
      uint64_t v47 = *(void *)(v0 + 248);
      if (*(void *)(v0 + 144))
      {
        swift_getObjectType();
        sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
        v48._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        XPCClientProtocol.logMessage(_:)(v48);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
LABEL_31:
        uint64_t v82 = *(void *)(v0 + 368);
        uint64_t v81 = *(void *)(v0 + 376);
        uint64_t v83 = *(void *)(v0 + 360);
        (*(void (**)(uint64_t, void, uint64_t))(v82 + 16))(v81, *(void *)(v0 + 392), v83);
        *(void *)(v0 + 96) = v81;
        *(void *)(v0 + 104) = v83;
        *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065C430, &qword_10065C420);
        long long v84 = (void (**)(uint64_t, uint64_t))(v82 + 8);
        uint64_t v85 = encodeXPCValues<each A>(_:)();
        unint64_t v87 = v86;
        uint64_t v88 = *(void *)(v0 + 392);
        uint64_t v89 = *(void *)(v0 + 376);
        uint64_t v90 = *(void *)(v0 + 360);
LABEL_35:
        long long v95 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
        char v96 = *v84;
        (*v84)(v89, v90);
        v95(v85, v87);
        sub_100013510(v85, v87);
        v96(v88, v90);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        long long v97 = *(uint64_t (**)(void))(v0 + 8);
        return v97();
      }
      (*(void (**)(void, void))(v46 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    }
    swift_errorRelease();
    goto LABEL_31;
  }
  char v107 = *(unsigned char *)(v0 + 498);
  uint64_t v105 = *(unsigned int *)(v0 + 500);
  *(_DWORD *)(v0 + 536) = v105;
  uint64_t v59 = *(unsigned int *)(v0 + 504);
  *(_DWORD *)(v0 + 540) = v59;
  uint64_t v60 = *(unsigned int *)(v0 + 508);
  *(_DWORD *)(v0 + 544) = v60;
  uint64_t v61 = *(unsigned int *)(v0 + 512);
  *(_DWORD *)(v0 + 548) = v61;
  uint64_t v62 = *(unsigned int *)(v0 + 516);
  *(_DWORD *)(v0 + 552) = v62;
  uint64_t v63 = *(unsigned int *)(v0 + 520);
  *(_DWORD *)(v0 + 556) = v63;
  uint64_t v64 = *(unsigned int *)(v0 + 524);
  *(_DWORD *)(v0 + 560) = v64;
  unint64_t v104 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                   + dword_10065D5F0);
  uint64_t v65 = *(unsigned int *)(v0 + 528);
  *(_DWORD *)(v0 + 564) = v65;
  swift_unknownObjectRetain();
  uint64_t v66 = (void *)swift_task_alloc();
  uint64_t v67 = v105 | (v59 << 32);
  *(void *)(v0 + 400) = v66;
  uint64_t v68 = v60 | (v61 << 32);
  uint64_t v69 = v62 | (v63 << 32);
  uint64_t v70 = v64 | (v65 << 32);
  *uint64_t v66 = v0;
  unint64_t v71 = sub_10020EEEC;
LABEL_26:
  v66[1] = v71;
  uint64_t v79 = *(void *)(v0 + 160);
  return v104(v79, v107 & 1, v67, v68, v69, v70);
}

uint64_t sub_10020EEEC(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 408) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10020F6CC;
  }
  else
  {
    *(unsigned char *)(v4 + 533) = a1 & 1;
    uint64_t v5 = sub_10020F018;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10020F018()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 533) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 560);
    uint64_t v2 = *(void *)(v0 + 552);
    uint64_t v3 = *(void *)(v0 + 544);
    uint64_t v4 = *(void *)(v0 + 536);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v6;
    void *v6 = v0;
    v6[1] = sub_10020FC34;
    uint64_t v7 = *(void *)(v0 + 384);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = *(void *)(v0 + 312);
  uint64_t v13 = *(void *)(v0 + 272);
  uint64_t v14 = *(void *)(v0 + 280);
  if (v11)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v41 = *(void *)(v0 + 312);
    uint64_t v15 = swift_slowAlloc();
    uint64_t v40 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = StaticString.description.getter();
    *(void *)(v0 + 120) = sub_1000143F4(v16, v17, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2114;
    swift_errorRetain();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 128) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v40 = v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Error in %s: %{public}@", (uint8_t *)v15, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v41, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v19 = *(void *)(v0 + 392);
  uint64_t v20 = *(void *)(v0 + 360);
  uint64_t v21 = *(void *)(v0 + 368);
  uint64_t v23 = *(void *)(v0 + 256);
  uint64_t v22 = *(void *)(v0 + 264);
  uint64_t v24 = *(void *)(v0 + 248);
  swift_getErrorValue();
  sub_1003ED3A0(*(void *)(v0 + 24), *(void *)(v0 + 32), v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v19, v22, v24);
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v19, enum case for MarketplaceKitServiceResult.failure<A>(_:), v20);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v26 = *(void *)(v0 + 256);
  uint64_t v25 = *(void *)(v0 + 264);
  uint64_t v27 = *(void *)(v0 + 248);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v26 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
  v28._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v28);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
LABEL_14:
  uint64_t v30 = *(void *)(v0 + 368);
  uint64_t v29 = *(void *)(v0 + 376);
  uint64_t v31 = *(void *)(v0 + 360);
  (*(void (**)(uint64_t, void, uint64_t))(v30 + 16))(v29, *(void *)(v0 + 392), v31);
  *(void *)(v0 + 96) = v29;
  *(void *)(v0 + 104) = v31;
  *(void *)(v0 + 112) = sub_10000DDFC(&qword_10065C430, &qword_10065C420);
  uint64_t v32 = encodeXPCValues<each A>(_:)();
  unint64_t v34 = v33;
  uint64_t v35 = *(void *)(v0 + 392);
  uint64_t v36 = *(void *)(v0 + 360);
  unint64_t v37 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v38(*(void *)(v0 + 376), v36);
  v37(v32, v34);
  sub_100013510(v32, v34);
  v38(v35, v36);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_10020F6CC()
{
  unint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065C430, &qword_10065C420);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_10020FC34()
{
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_10020FF88;
  }
  else {
    os_log_type_t v2 = sub_10020FD48;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10020FD48()
{
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[46];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for MarketplaceKitServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[53];
  uint64_t v7 = v0[46];
  uint64_t v6 = v0[47];
  uint64_t v8 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[49], v8);
  v0[12] = v6;
  v0[13] = v8;
  v0[14] = sub_10000DDFC(&qword_10065C430, &qword_10065C420);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[49];
  uint64_t v14 = v0[45];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[47], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_10020FF88()
{
  unint64_t v37 = v0;
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[35];
    uint64_t v34 = v0[34];
    uint64_t v35 = v0[39];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = StaticString.description.getter();
    v0[15] = sub_1000143F4(v5, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in %s: %{public}@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[31];
  swift_getErrorValue();
  sub_1003ED3A0(v0[3], v0[4], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v11, enum case for MarketplaceKitServiceResult.failure<A>(_:), v12);
  if (os_variant_has_internal_content())
  {
    uint64_t v18 = v0[32];
    uint64_t v17 = v0[33];
    uint64_t v19 = v0[31];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4(&qword_10065C388, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v18 + 8))(v0[33], v0[31]);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v22 = v0[46];
  uint64_t v21 = v0[47];
  uint64_t v23 = v0[45];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[49], v23);
  v0[12] = v21;
  v0[13] = v23;
  v0[14] = sub_10000DDFC(&qword_10065C430, &qword_10065C420);
  uint64_t v24 = encodeXPCValues<each A>(_:)();
  unint64_t v26 = v25;
  uint64_t v27 = v0[49];
  uint64_t v28 = v0[45];
  uint64_t v29 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v30(v0[47], v28);
  v29(v24, v26);
  sub_100013510(v24, v26);
  v30(v27, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1002104F0(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 440) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100210CB8;
  }
  else
  {
    *(unsigned char *)(v4 + 534) = a1 & 1;
    uint64_t v5 = sub_10021061C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10021061C()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 534) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 592);
    uint64_t v2 = *(void *)(v0 + 584);
    uint64_t v3 = *(void *)(v0 + 576);
    uint64_t v4 = *(void *)(v0 + 568);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168)
                                                                                       + **(int **)(v0 + 168));
    unint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v6;
    void *v6 = v0;
    v6[1] = sub_100211204;
    uint64_t v7 = *(void *)(v0 + 344);
    return v43(v7, v5, v4, v3, v2, v1);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  uint64_t v9 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 296);
  uint64_t v14 = *(void *)(v0 + 272);
  uint64_t v15 = *(void *)(v0 + 280);
  if (v12)
  {
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v16 = swift_slowAlloc();
    uint64_t v41 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = StaticString.description.getter();
    *(void *)(v0 + 56) = sub_1000143F4(v17, v18, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2114;
    swift_errorRetain();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v41 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error in %s: %{public}@", (uint8_t *)v16, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v42);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  uint64_t v20 = *(void *)(v0 + 352);
  uint64_t v21 = *(void *)(v0 + 320);
  uint64_t v22 = *(void *)(v0 + 328);
  uint64_t v24 = *(void *)(v0 + 232);
  uint64_t v23 = *(void *)(v0 + 240);
  uint64_t v25 = *(void *)(v0 + 224);
  sub_1001E3BD8(v9, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v20, v23, v25);
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))(v20, enum case for ServiceResult.failure<A>(_:), v21);
  if (!os_variant_has_internal_content())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
LABEL_13:
    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v27 = *(void *)(v0 + 232);
  uint64_t v26 = *(void *)(v0 + 240);
  uint64_t v28 = *(void *)(v0 + 224);
  if (!*(void *)(v0 + 144))
  {
    (*(void (**)(void, void))(v27 + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
  v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  XPCClientProtocol.logMessage(_:)(v29);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
LABEL_14:
  uint64_t v31 = *(void *)(v0 + 328);
  uint64_t v30 = *(void *)(v0 + 336);
  uint64_t v32 = *(void *)(v0 + 320);
  (*(void (**)(uint64_t, void, uint64_t))(v31 + 16))(v30, *(void *)(v0 + 352), v32);
  *(void *)(v0 + 88) = v30;
  *(void *)(v0 + 40) = v32;
  *(void *)(v0 + 48) = sub_10000DDFC(&qword_10065C428, &qword_10065C418);
  uint64_t v33 = encodeXPCValues<each A>(_:)();
  unint64_t v35 = v34;
  uint64_t v36 = *(void *)(v0 + 352);
  uint64_t v37 = *(void *)(v0 + 320);
  uint64_t v38 = *(void (**)(uint64_t, unint64_t))(v0 + 200);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  v39(*(void *)(v0 + 336), v37);
  v38(v33, v35);
  sub_100013510(v33, v35);
  v39(v36, v37);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_100210CB8()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[55];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065C428, &qword_10065C418);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_100211204()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100211558;
  }
  else {
    uint64_t v2 = sub_100211318;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100211318()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[44];
  uint64_t v3 = v0[40];
  uint64_t v4 = v0[41];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for ServiceResult.success<A>(_:), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  uint64_t v5 = v0[57];
  uint64_t v7 = v0[41];
  uint64_t v6 = v0[42];
  uint64_t v8 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[44], v8);
  v0[5] = v8;
  v0[11] = v6;
  v0[6] = sub_10000DDFC(&qword_10065C428, &qword_10065C418);
  uint64_t v9 = encodeXPCValues<each A>(_:)();
  if (v5)
  {
    swift_errorRelease();
    uint64_t v11 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
  }
  uint64_t v13 = v0[44];
  uint64_t v14 = v0[40];
  uint64_t v15 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v16(v0[42], v14);
  v15(v11, v12);
  sub_100013510(v11, v12);
  v16(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_100211558()
{
  uint64_t v38 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[57];
  static Logger.xpc.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v34 = v0[35];
    uint64_t v35 = v0[34];
    uint64_t v36 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = StaticString.description.getter();
    v0[7] = sub_1000143F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in %s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[44];
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  uint64_t v16 = v0[29];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[28];
  sub_1001E3BD8(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ServiceResult.failure<A>(_:), v13);
  if (os_variant_has_internal_content())
  {
    uint64_t v19 = v0[29];
    uint64_t v18 = v0[30];
    uint64_t v20 = v0[28];
    if (v0[18])
    {
      swift_getObjectType();
      sub_1000139E4((unint64_t *)&unk_10065C370, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      XPCClientProtocol.logMessage(_:)(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v19 + 8))(v0[30], v0[28]);
  }
  else
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  }
  swift_errorRelease();
LABEL_10:
  uint64_t v23 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v24 = v0[40];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[44], v24);
  v0[11] = v22;
  v0[5] = v24;
  v0[6] = sub_10000DDFC(&qword_10065C428, &qword_10065C418);
  uint64_t v25 = encodeXPCValues<each A>(_:)();
  unint64_t v27 = v26;
  uint64_t v28 = v0[44];
  uint64_t v29 = v0[40];
  uint64_t v30 = (void (*)(uint64_t, unint64_t))v0[25];
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v31(v0[42], v29);
  v30(v25, v27);
  sub_100013510(v25, v27);
  v31(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_100211AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int *a7)
{
  *(void *)(v7 + 16) = a1;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)a7 + *a7);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v13;
  *uint64_t v13 = v7;
  v13[1] = sub_100211BB0;
  return v15(a2, a3, a4, a5, a6);
}

uint64_t sub_100211BB0()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return _swift_task_switch(sub_10023E528, 0, 0);
  }
}

uint64_t sub_100211CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int *a7)
{
  *(void *)(v7 + 16) = a1;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)a7 + *a7);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v13;
  *uint64_t v13 = v7;
  v13[1] = sub_100211DEC;
  return v15(a2, a3, a4, a5, a6);
}

uint64_t sub_100211DEC()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return _swift_task_switch(sub_100211F1C, 0, 0);
  }
}

uint64_t sub_100211F1C()
{
  **(_WORD **)(v0 + 16) = 256;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100211F70()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for Service()
{
  return self;
}

uint64_t sub_100212018(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = enum case for LogKey.Prefix.appReview(_:);
  uint64_t v16 = type metadata accessor for LogKey.Prefix();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v14, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  swift_retain();
  Swift::Int v18 = sub_100010C5C((uint64_t)&off_1006376D0);
  swift_arrayDestroy();
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = v4;
  v19[3] = a1;
  v19[4] = a2;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = &unk_10065C8A8;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v11, 1, 1, v21);
  id v22 = v4;
  sub_100012670(a1, a2);
  swift_retain();
  sub_100016EDC((uint64_t)"Set distributor ID overridable", 30, 2, a3, a4, 1, (uint64_t)v14, v18, 1u, (uint64_t)v11, (uint64_t)&unk_10065C8B0, v20, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_1002122F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[16] = a7;
  v8[17] = a8;
  v8[14] = a5;
  v8[15] = a6;
  v8[12] = a3;
  v8[13] = a4;
  v8[11] = a2;
  uint64_t v9 = type metadata accessor for Logger();
  v8[18] = v9;
  v8[19] = *(void *)(v9 - 8);
  v8[20] = swift_task_alloc();
  return _swift_task_switch(sub_1002123C4, 0, 0);
}

uint64_t sub_1002123C4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 120) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  objc_super v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v2;
  *objc_super v2 = v0;
  v2[1] = sub_100212488;
  v2[3] = v1;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_100212488(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v4[22] = a1;
  v4[23] = a2;
  v4[24] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v5[1];
    return v6();
  }
  else
  {
    return _swift_task_switch(sub_1002125DC, 0, 0);
  }
}

uint64_t sub_1002125DC()
{
  uint64_t v1 = *(void *)(v0[15] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies);
  v0[25] = v1;
  v0[26] = *(void *)(v1 + 152);
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[27] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1002126A8;
  uint64_t v3 = v0[22];
  return v5(v3);
}

uint64_t sub_1002126A8(char a1)
{
  *(unsigned char *)(*(void *)v1 + 237) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1002127C8, 0, 0);
}

uint64_t sub_1002127C8()
{
  uint64_t v26 = v0;
  if (*(unsigned char *)(v0 + 237) != 1)
  {
    uint64_t v4 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(v5, enum case for MarketplaceKitError.featureUnavailable(_:), v4);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_5;
  }
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 128);
  unint64_t v3 = *(void *)(v0 + 136);
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24) = v3;
  *(void *)(v0 + 40) = v0 + 16;
  *(void *)(v0 + 48) = v0 + 236;
  sub_100012670(v2, v3);
  *(void *)(v0 + 56) = &type metadata for Data;
  *(void *)(v0 + 32) = &type metadata for Bool;
  *(void *)(v0 + 72) = sub_1000175C4();
  *(void *)(v0 + 80) = &protocol witness table for Bool;
  decodeXPCValues<each A, B>(from:)();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_100013510(*(void *)(v0 + 16), *(void *)(v0 + 24));
LABEL_5:
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
  sub_100013510(*(void *)(v0 + 16), *(void *)(v0 + 24));
  int v8 = *(unsigned __int8 *)(v0 + 236);
  *(unsigned char *)(v0 + 238) = v8;
  static Logger.daemon.getter();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v13 = *(void *)(v0 + 152);
  uint64_t v12 = *(void *)(v0 + 160);
  uint64_t v14 = *(void *)(v0 + 144);
  if (v11)
  {
    unint64_t v21 = *(void *)(v0 + 104);
    unint64_t v22 = *(void *)(v0 + 112);
    unint64_t v20 = *(void *)(v0 + 96);
    uint64_t v24 = *(void *)(v0 + 160);
    unint64_t v15 = *(void *)(v0 + 88);
    int v23 = v8;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v17 = audit_token_t.processDescription.getter(v15, v20, v21, v22);
    *(void *)(v0 + 64) = sub_1000143F4(v17, v18, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 1026;
    *(_DWORD *)(v0 + 232) = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v24, v14);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v19 = *(void *)(*(void *)(v0 + 200) + 272);
  *(void *)(v0 + 224) = v19;
  swift_retain();
  return _swift_task_switch(sub_100212B98, v19, 0);
}

uint64_t sub_100212B98()
{
  *(unsigned char *)(*(void *)(v0 + 224) + 112) = *(unsigned char *)(v0 + 238);
  id v1 = [self standardUserDefaults];
  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v3 = String._bridgeToObjectiveC()();
  [v1 setValue:isa forKey:v3];

  swift_release();
  return _swift_task_switch(sub_100212C88, 0, 0);
}

uint64_t sub_100212C88()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100212D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[20] = a8;
  v8[21] = v12;
  v8[18] = a6;
  v8[19] = a7;
  v8[16] = a4;
  v8[17] = a5;
  v8[14] = a1;
  v8[15] = a3;
  uint64_t v9 = type metadata accessor for Logger();
  v8[22] = v9;
  v8[23] = *(void *)(v9 - 8);
  v8[24] = swift_task_alloc();
  return _swift_task_switch(sub_100212E08, 0, 0);
}

uint64_t sub_100212E08()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 152) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100212ECC;
  v2[3] = v1;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_100212ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v4[26] = a1;
  v4[27] = a2;
  v4[28] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v5[1];
    return v6();
  }
  else
  {
    return _swift_task_switch(sub_100213020, 0, 0);
  }
}

uint64_t sub_100213020()
{
  v0[29] = *(void *)(*(void *)(v0[19] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies) + 152);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[30] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002130E8;
  uint64_t v2 = v0[26];
  return v4(v2);
}

uint64_t sub_1002130E8(char a1)
{
  *(unsigned char *)(*(void *)v1 + 272) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100213208, 0, 0);
}

uint64_t sub_100213208()
{
  uint64_t v35 = v0;
  if (*(unsigned char *)(v0 + 272) != 1)
  {
    uint64_t v4 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(v5, enum case for MarketplaceKitError.featureUnavailable(_:), v4);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_5;
  }
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 160);
  unint64_t v3 = *(void *)(v0 + 168);
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24) = v3;
  *(void *)(v0 + 48) = v0 + 16;
  *(void *)(v0 + 56) = v0 + 32;
  sub_100012670(v2, v3);
  *(void *)(v0 + 64) = &type metadata for Data;
  *(void *)(v0 + 72) = sub_1000172F8(&qword_10065C4D0);
  *(void *)(v0 + 80) = sub_1000175C4();
  *(void *)(v0 + 88) = sub_10023BDE8();
  decodeXPCValues<each A, B>(from:)();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_100013510(*(void *)(v0 + 16), *(void *)(v0 + 24));
LABEL_5:
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
  sub_100013510(*(void *)(v0 + 16), *(void *)(v0 + 24));
  uint64_t v9 = *(void *)(v0 + 32);
  unint64_t v8 = *(void *)(v0 + 40);
  *(void *)(v0 + 248) = v8;
  static Logger.daemon.getter();
  swift_bridgeObjectRetain_n();
  os_log_type_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v14 = *(void *)(v0 + 184);
  uint64_t v13 = *(void *)(v0 + 192);
  uint64_t v15 = *(void *)(v0 + 176);
  if (v12)
  {
    unint64_t v30 = *(void *)(v0 + 144);
    uint64_t v32 = *(void *)(v0 + 192);
    uint64_t v33 = *(void *)(v0 + 176);
    unint64_t v17 = *(void *)(v0 + 128);
    unint64_t v16 = *(void *)(v0 + 136);
    uint64_t v18 = v9;
    unint64_t v19 = *(void *)(v0 + 120);
    os_log_type_t type = v11;
    uint64_t v20 = swift_slowAlloc();
    v34[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136446466;
    unint64_t v21 = v19;
    uint64_t v9 = v18;
    uint64_t v22 = audit_token_t.processDescription.getter(v21, v17, v16, v30);
    *(void *)(v0 + 96) = sub_1000143F4(v22, v23, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    if (v8)
    {
      unint64_t v24 = v8;
    }
    else
    {
      uint64_t v18 = 0x29656E6F6E28;
      unint64_t v24 = 0xE600000000000000;
    }
    swift_bridgeObjectRetain();
    *(void *)(v0 + 104) = sub_1000143F4(v18, v24, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v10, type, "Getting distributor ID value for %{public}s with potential override %{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v32, v33);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v25 = swift_task_alloc();
  *(void *)(v0 + 256) = v25;
  *(void *)uint64_t v25 = v0;
  *(void *)(v25 + 8) = sub_100213690;
  uint64_t v26 = *(void *)(v0 + 152);
  uint64_t v27 = *(void *)(v0 + 112);
  long long v28 = *(_OWORD *)(v0 + 120);
  long long v29 = *(_OWORD *)(v0 + 136);
  *(void *)(v25 + 64) = v8;
  *(void *)(v25 + 72) = v26;
  *(void *)(v25 + 56) = v9;
  *(_OWORD *)(v25 + 40) = v29;
  *(_OWORD *)(v25 + 24) = v28;
  *(void *)(v25 + 16) = v27;
  return _swift_task_switch(sub_1002138DC, 0, 0);
}

uint64_t sub_100213690()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100213830;
  }
  else {
    uint64_t v2 = sub_1002137A4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002137A4()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100213830()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002138B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[8] = a7;
  v8[9] = v7;
  _OWORD v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  _OWORD v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return _swift_task_switch(sub_1002138DC, 0, 0);
}

uint64_t sub_1002138DC()
{
  uint64_t v1 = audit_token_t.signingIdentifier.getter(v0[3], v0[4], v0[5], v0[6]);
  v0[10] = v2;
  if (v2)
  {
    uint64_t v3 = v0[9];
    v0[11] = v1;
    uint64_t v4 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies) + 272);
    v0[12] = v4;
    swift_retain();
    return _swift_task_switch(sub_100213A54, v4, 0);
  }
  else
  {
    uint64_t v5 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, enum case for MarketplaceKitError.appNotInstalled(_:), v5);
    swift_willThrow();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_100213A54()
{
  sub_1001C7FE8(v0[11], v0[10], v0[7], v0[8], v0[2]);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100213DD8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  os_log_type_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  swift_retain();
  Swift::Int v16 = sub_100010C5C((uint64_t)&off_100637710);
  swift_arrayDestroy();
  unint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = v4;
  v17[3] = a1;
  v17[4] = a2;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = &unk_10065C830;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v11, 1, 1, v19);
  id v20 = v4;
  sub_100012670(a1, a2);
  swift_retain();
  sub_100016EDC((uint64_t)"pauseInstall", 12, 2, a3, a4, 1, (uint64_t)v14, v16, 1u, (uint64_t)v11, (uint64_t)&unk_10065C838, v18, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_100214074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[17] = a7;
  v8[18] = a8;
  v8[15] = a5;
  v8[16] = a6;
  v8[13] = a3;
  v8[14] = a4;
  v8[12] = a2;
  uint64_t v9 = type metadata accessor for Logger();
  v8[19] = v9;
  v8[20] = *(void *)(v9 - 8);
  v8[21] = swift_task_alloc();
  return _swift_task_switch(sub_100214140, 0, 0);
}

uint64_t sub_100214140()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 128) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100214204;
  v2[3] = v1;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_100214204(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v4[23] = a1;
  v4[24] = a2;
  v4[25] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v5[1];
    return v6();
  }
  else
  {
    return _swift_task_switch(sub_100214358, 0, 0);
  }
}

uint64_t sub_100214358()
{
  uint64_t v1 = *(void *)(v0[16] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies);
  v0[26] = v1;
  v0[27] = *(void *)(v1 + 152);
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[28] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100214424;
  uint64_t v3 = v0[23];
  return v5(v3);
}

uint64_t sub_100214424(char a1)
{
  *(unsigned char *)(*(void *)v1 + 264) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100214544, 0, 0);
}

uint64_t sub_100214544()
{
  if (*(unsigned char *)(v0 + 264) != 1)
  {
LABEL_9:
    uint64_t v13 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v13 - 8) + 104))(v14, enum case for MarketplaceKitError.featureUnavailable(_:), v13);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_10;
  }
  uint64_t v1 = audit_token_t.signingIdentifier.getter(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120));
  *(void *)(v0 + 232) = v2;
  if (!v2)
  {
    static Logger.xpc.getter();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138412290;
      uint64_t v12 = sub_1005163F0();
      *(void *)(v0 + 56) = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v11 = v12;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "[%@] No signing identifier", v10, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(void, void))(*(void *)(v0 + 160) + 8))(*(void *)(v0 + 168), *(void *)(v0 + 152));
    goto LABEL_9;
  }
  uint64_t v3 = v1;
  uint64_t v4 = v2;
  uint64_t v5 = *(void *)(v0 + 200);
  uint64_t v6 = *(void *)(v0 + 136);
  unint64_t v7 = *(void *)(v0 + 144);
  *(void *)(v0 + 24) = v7;
  *(void *)(v0 + 32) = v0 + 40;
  *(void *)(v0 + 16) = v6;
  *(void *)(v0 + 48) = v0 + 16;
  sub_100012670(v6, v7);
  *(void *)(v0 + 64) = &type metadata for Data;
  *(void *)(v0 + 72) = &type metadata for UInt64;
  *(void *)(v0 + 80) = sub_1000175C4();
  *(void *)(v0 + 88) = &protocol witness table for UInt64;
  decodeXPCValues<each A, B>(from:)();
  if (v5)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_100013510(*(void *)(v0 + 16), *(void *)(v0 + 24));
LABEL_10:
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
  uint64_t v17 = *(void *)(v0 + 208);
  sub_100013510(*(void *)(v0 + 16), *(void *)(v0 + 24));
  uint64_t v18 = *(void *)(v0 + 40);
  *(void *)(v0 + 240) = *(void *)(*(void *)(v17 + 192) + 32);
  swift_retain();
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_100214908;
  return sub_10045A7CC(v18, v3, v4);
}

uint64_t sub_100214908()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100214AA4;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_100214A2C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100214A2C()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100214AA4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100214B68(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  swift_retain();
  Swift::Int v16 = sub_100010C5C((uint64_t)&off_100637750);
  swift_arrayDestroy();
  uint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = v4;
  v17[3] = a1;
  v17[4] = a2;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = &unk_10065C818;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v11, 1, 1, v19);
  id v20 = v4;
  sub_100012670(a1, a2);
  swift_retain();
  sub_100016EDC((uint64_t)"resumeInstall", 13, 2, a3, a4, 1, (uint64_t)v14, v16, 1u, (uint64_t)v11, (uint64_t)&unk_10065C820, v18, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_100214E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[17] = a7;
  v8[18] = a8;
  v8[15] = a5;
  v8[16] = a6;
  v8[13] = a3;
  v8[14] = a4;
  v8[12] = a2;
  uint64_t v9 = type metadata accessor for Logger();
  v8[19] = v9;
  v8[20] = *(void *)(v9 - 8);
  v8[21] = swift_task_alloc();
  return _swift_task_switch(sub_100214ED0, 0, 0);
}

uint64_t sub_100214ED0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 128) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100214F94;
  v2[3] = v1;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_100214F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v4[23] = a1;
  v4[24] = a2;
  v4[25] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v5[1];
    return v6();
  }
  else
  {
    return _swift_task_switch(sub_1002150E8, 0, 0);
  }
}

uint64_t sub_1002150E8()
{
  uint64_t v1 = *(void *)(v0[16] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies);
  v0[26] = v1;
  v0[27] = *(void *)(v1 + 152);
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[28] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1002151B4;
  uint64_t v3 = v0[23];
  return v5(v3);
}

uint64_t sub_1002151B4(char a1)
{
  *(unsigned char *)(*(void *)v1 + 264) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1002152D4, 0, 0);
}

uint64_t sub_1002152D4()
{
  if (*(unsigned char *)(v0 + 264) != 1)
  {
LABEL_9:
    uint64_t v13 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v13 - 8) + 104))(v14, enum case for MarketplaceKitError.featureUnavailable(_:), v13);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_10;
  }
  uint64_t v1 = audit_token_t.signingIdentifier.getter(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120));
  *(void *)(v0 + 232) = v2;
  if (!v2)
  {
    static Logger.xpc.getter();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138412290;
      uint64_t v12 = sub_1005163F0();
      *(void *)(v0 + 56) = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v11 = v12;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "[%@] No signing identifier", v10, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(void, void))(*(void *)(v0 + 160) + 8))(*(void *)(v0 + 168), *(void *)(v0 + 152));
    goto LABEL_9;
  }
  uint64_t v3 = v1;
  uint64_t v4 = v2;
  uint64_t v5 = *(void *)(v0 + 200);
  uint64_t v6 = *(void *)(v0 + 136);
  unint64_t v7 = *(void *)(v0 + 144);
  *(void *)(v0 + 24) = v7;
  *(void *)(v0 + 32) = v0 + 40;
  *(void *)(v0 + 16) = v6;
  *(void *)(v0 + 48) = v0 + 16;
  sub_100012670(v6, v7);
  *(void *)(v0 + 64) = &type metadata for Data;
  *(void *)(v0 + 72) = &type metadata for UInt64;
  *(void *)(v0 + 80) = sub_1000175C4();
  *(void *)(v0 + 88) = &protocol witness table for UInt64;
  decodeXPCValues<each A, B>(from:)();
  if (v5)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_100013510(*(void *)(v0 + 16), *(void *)(v0 + 24));
LABEL_10:
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
  uint64_t v17 = *(void *)(v0 + 208);
  sub_100013510(*(void *)(v0 + 16), *(void *)(v0 + 24));
  uint64_t v18 = *(void *)(v0 + 40);
  *(void *)(v0 + 240) = *(void *)(*(void *)(v17 + 192) + 32);
  swift_retain();
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_100215698;
  return sub_10045B178(v18, v3, v4);
}

uint64_t sub_100215698()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10023E3CC;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_10023E530;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002157F0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  swift_retain();
  Swift::Int v16 = sub_100010C5C((uint64_t)&off_100637790);
  swift_arrayDestroy();
  uint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = v4;
  v17[3] = a1;
  v17[4] = a2;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = &unk_10065C800;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v11, 1, 1, v19);
  id v20 = v4;
  sub_100012670(a1, a2);
  swift_retain();
  sub_100016EDC((uint64_t)"cancelInstall", 13, 2, a3, a4, 1, (uint64_t)v14, v16, 1u, (uint64_t)v11, (uint64_t)&unk_10065C808, v18, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_100215A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[17] = a7;
  v8[18] = a8;
  v8[15] = a5;
  v8[16] = a6;
  v8[13] = a3;
  v8[14] = a4;
  v8[12] = a2;
  uint64_t v9 = type metadata accessor for Logger();
  v8[19] = v9;
  v8[20] = *(void *)(v9 - 8);
  v8[21] = swift_task_alloc();
  return _swift_task_switch(sub_100215B58, 0, 0);
}

uint64_t sub_100215B58()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 128) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100215C1C;
  v2[3] = v1;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_100215C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v4[23] = a1;
  v4[24] = a2;
  v4[25] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v5[1];
    return v6();
  }
  else
  {
    return _swift_task_switch(sub_100215D70, 0, 0);
  }
}

uint64_t sub_100215D70()
{
  uint64_t v1 = *(void *)(v0[16] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies);
  v0[26] = v1;
  v0[27] = *(void *)(v1 + 152);
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[28] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100215E3C;
  uint64_t v3 = v0[23];
  return v5(v3);
}

uint64_t sub_100215E3C(char a1)
{
  *(unsigned char *)(*(void *)v1 + 272) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100215F5C, 0, 0);
}

uint64_t sub_100215F5C()
{
  if (*(unsigned char *)(v0 + 272) != 1)
  {
LABEL_9:
    uint64_t v13 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v13 - 8) + 104))(v14, enum case for MarketplaceKitError.featureUnavailable(_:), v13);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_10;
  }
  uint64_t v1 = audit_token_t.signingIdentifier.getter(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120));
  *(void *)(v0 + 232) = v2;
  if (!v2)
  {
    static Logger.xpc.getter();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138412290;
      uint64_t v12 = sub_1005163F0();
      *(void *)(v0 + 56) = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v11 = v12;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "[%@] No signing identifier", v10, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(void, void))(*(void *)(v0 + 160) + 8))(*(void *)(v0 + 168), *(void *)(v0 + 152));
    goto LABEL_9;
  }
  uint64_t v3 = v1;
  uint64_t v4 = v2;
  uint64_t v5 = *(void *)(v0 + 200);
  uint64_t v6 = *(void *)(v0 + 136);
  unint64_t v7 = *(void *)(v0 + 144);
  *(void *)(v0 + 24) = v7;
  *(void *)(v0 + 32) = v0 + 40;
  *(void *)(v0 + 16) = v6;
  *(void *)(v0 + 48) = v0 + 16;
  sub_100012670(v6, v7);
  *(void *)(v0 + 64) = &type metadata for Data;
  *(void *)(v0 + 72) = &type metadata for UInt64;
  *(void *)(v0 + 80) = sub_1000175C4();
  *(void *)(v0 + 88) = &protocol witness table for UInt64;
  decodeXPCValues<each A, B>(from:)();
  if (v5)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_100013510(*(void *)(v0 + 16), *(void *)(v0 + 24));
LABEL_10:
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
  uint64_t v17 = *(void *)(v0 + 208);
  sub_100013510(*(void *)(v0 + 16), *(void *)(v0 + 24));
  uint64_t v18 = *(void *)(v0 + 40);
  *(void *)(v0 + 240) = *(void *)(*(void *)(v17 + 192) + 32);
  swift_retain();
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_100216320;
  return sub_10045FC08(v18, v3, v4);
}

uint64_t sub_100216320(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[32] = a1;
  v3[33] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1002164E8;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = v3[30];
    uint64_t v4 = sub_10021643C;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_10021643C()
{
  uint64_t v1 = *(void **)(v0 + 256);
  if (v1)
  {
    sub_1004E5384(3, 0, 0);

    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  return _swift_task_switch(sub_10023E530, 0, 0);
}

uint64_t sub_1002164E8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002165AC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  swift_retain();
  Swift::Int v16 = sub_100010C5C((uint64_t)&off_1006377D0);
  swift_arrayDestroy();
  uint64_t v17 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v4;
  v18[3] = a1;
  v18[4] = a2;
  id v19 = v4;
  sub_100012670(a1, a2);
  sub_100016EDC((uint64_t)"handleSecureButtonActionRequest", 31, 2, a3, a4, 1, (uint64_t)v14, v16, 0, (uint64_t)v11, (uint64_t)&unk_10065C790, (uint64_t)v18, (uint64_t)&unk_10063BAE8, (uint64_t)&unk_10065C7A0);
  swift_bridgeObjectRelease();
  swift_release();
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_100216808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[43] = a8;
  v8[44] = v21;
  v8[41] = a6;
  v8[42] = a7;
  v8[39] = a4;
  v8[40] = a5;
  v8[37] = a1;
  v8[38] = a3;
  sub_1000172F8(&qword_10065C3C0);
  v8[45] = swift_task_alloc();
  v8[46] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for URL();
  v8[47] = v9;
  v8[48] = *(void *)(v9 - 8);
  v8[49] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for AppInstallRequestType();
  v8[50] = v10;
  v8[51] = *(void *)(v10 - 8);
  v8[52] = swift_task_alloc();
  v8[53] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for UUID();
  v8[54] = v11;
  v8[55] = *(void *)(v11 - 8);
  v8[56] = swift_task_alloc();
  v8[57] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for ActionButtonInstallMetadata();
  v8[58] = v12;
  v8[59] = *(void *)(v12 - 8);
  v8[60] = swift_task_alloc();
  v8[61] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for LogKey.Prefix();
  v8[62] = v13;
  v8[63] = *(void *)(v13 - 8);
  v8[64] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for SecureButtonActionRequest.Action();
  v8[65] = v14;
  v8[66] = *(void *)(v14 - 8);
  v8[67] = swift_task_alloc();
  uint64_t v15 = type metadata accessor for SecureButtonActionResponse.ResponseType();
  v8[68] = v15;
  v8[69] = *(void *)(v15 - 8);
  v8[70] = swift_task_alloc();
  uint64_t v16 = type metadata accessor for SecureButtonActionResponse();
  v8[71] = v16;
  v8[72] = *(void *)(v16 - 8);
  v8[73] = swift_task_alloc();
  v8[74] = swift_task_alloc();
  uint64_t v17 = type metadata accessor for SecureButtonActionRequest();
  v8[75] = v17;
  v8[76] = *(void *)(v17 - 8);
  v8[77] = swift_task_alloc();
  uint64_t v18 = type metadata accessor for Logger();
  v8[78] = v18;
  v8[79] = *(void *)(v18 - 8);
  v8[80] = swift_task_alloc();
  v8[81] = swift_task_alloc();
  v8[82] = swift_task_alloc();
  v8[83] = swift_task_alloc();
  v8[84] = swift_task_alloc();
  return _swift_task_switch(sub_100216CCC, 0, 0);
}

uint64_t sub_100216CCC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 336) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 680) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100216D90;
  v2[3] = v1;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_100216D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[86] = a1;
  v5[87] = a2;
  v5[88] = a3;
  v5[89] = v3;
  swift_task_dealloc();
  if (v3)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v5[1];
    return v6();
  }
  else
  {
    return _swift_task_switch(sub_100217000, 0, 0);
  }
}

uint64_t sub_100217000()
{
  uint64_t v1 = *(void *)(v0[42] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies);
  v0[90] = v1;
  v0[91] = *(void *)(v1 + 152);
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[92] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1002170CC;
  uint64_t v3 = v0[86];
  return v5(v3);
}

uint64_t sub_1002170CC(char a1)
{
  *(unsigned char *)(*(void *)v1 + 49) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1002171EC, 0, 0);
}

uint64_t sub_1002171EC()
{
  uint64_t v99 = v0;
  if (*(unsigned char *)(v0 + 49) != 1)
  {
LABEL_9:
    uint64_t v14 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v14 - 8) + 104))(v15, enum case for MarketplaceKitError.featureUnavailable(_:), v14);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_10;
  }
  uint64_t v1 = audit_token_t.signingIdentifier.getter(*(void *)(v0 + 304), *(void *)(v0 + 312), *(void *)(v0 + 320), *(void *)(v0 + 328));
  *(void *)(v0 + 744) = v1;
  *(void *)(v0 + 752) = v2;
  if (!v2)
  {
    static Logger.install.getter();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Can't handle secure button action request with no signing identifier", v10, 2u);
      swift_slowDealloc();
    }
    uint64_t v11 = *(void *)(v0 + 672);
    uint64_t v12 = *(void *)(v0 + 632);
    uint64_t v13 = *(void *)(v0 + 624);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    goto LABEL_9;
  }
  unint64_t v3 = v2;
  uint64_t v93 = v1;
  uint64_t v4 = *(void *)(v0 + 712);
  uint64_t v5 = *(void *)(v0 + 600);
  uint64_t v6 = *(void *)(v0 + 344);
  unint64_t v7 = *(void *)(v0 + 352);
  *(void *)(v0 + 264) = *(void *)(v0 + 616);
  *(void *)(v0 + 128) = v6;
  *(void *)(v0 + 136) = v7;
  *(void *)(v0 + 144) = v0 + 128;
  sub_100012670(v6, v7);
  *(void *)(v0 + 152) = &type metadata for Data;
  *(void *)(v0 + 160) = v5;
  *(void *)(v0 + 168) = sub_1000175C4();
  *(void *)(v0 + 176) = sub_1000139E4(&qword_10065C7D8, (void (*)(uint64_t))&type metadata accessor for SecureButtonActionRequest);
  decodeXPCValues<each A, B>(from:)();
  if (v4)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_100013510(*(void *)(v0 + 128), *(void *)(v0 + 136));
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
  unint64_t v92 = v3;
  uint64_t v18 = *(void *)(v0 + 616);
  uint64_t v19 = *(void *)(v0 + 560);
  uint64_t v20 = *(void *)(v0 + 552);
  uint64_t v21 = *(void *)(v0 + 544);
  uint64_t v23 = *(void *)(v0 + 320);
  uint64_t v22 = *(void *)(v0 + 328);
  uint64_t v24 = *(void *)(v0 + 304);
  uint64_t v25 = *(void *)(v0 + 312);
  sub_100013510(*(void *)(v0 + 128), *(void *)(v0 + 136));
  uint64_t v26 = enum case for SecureButtonActionResponse.ResponseType.none(_:);
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 104);
  *(void *)(v0 + 760) = v27;
  *(void *)(v0 + 768) = (v20 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v27(v19, v26, v21);
  SecureButtonActionResponse.init(type:)();
  sub_1001C9050(v18, v24, v25, v23, v22);
  if ((v28 & 1) == 0)
  {
    uint64_t v94 = *(void *)(v0 + 616);
    uint64_t v52 = *(void *)(v0 + 608);
    uint64_t v53 = *(void *)(v0 + 600);
    uint64_t v54 = *(void *)(v0 + 592);
    uint64_t v55 = *(void *)(v0 + 576);
    uint64_t v56 = *(void *)(v0 + 568);
    swift_bridgeObjectRelease();
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v94, v53);
    goto LABEL_10;
  }
  uint64_t v29 = *(void *)(v0 + 536);
  uint64_t v30 = *(void *)(v0 + 528);
  uint64_t v31 = *(void *)(v0 + 520);
  SecureButtonActionRequest.action.getter();
  int v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 88))(v29, v31);
  if (v32 == enum case for SecureButtonActionRequest.Action.delete(_:))
  {
    uint64_t v33 = *(uint64_t **)(v0 + 536);
    uint64_t v35 = *(void *)(v0 + 504);
    uint64_t v34 = *(void *)(v0 + 512);
    uint64_t v36 = *(void *)(v0 + 496);
    (*(void (**)(uint64_t *, void))(*(void *)(v0 + 528) + 96))(v33, *(void *)(v0 + 520));
    uint64_t v37 = *v33;
    (*(void (**)(uint64_t, void, uint64_t))(v35 + 104))(v34, enum case for LogKey.Prefix.none(_:), v36);
    id v38 = objc_allocWithZone((Class)type metadata accessor for LogKey());
    uint64_t v39 = (void *)LogKey.init(prefix:)();
    sub_100516980(v39);
    static Logger.install.getter();
    uint64_t v40 = v92;
    swift_bridgeObjectRetain_n();
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.default.getter();
    BOOL v43 = os_log_type_enabled(v41, v42);
    uint64_t v44 = *(void *)(v0 + 656);
    uint64_t v45 = *(void *)(v0 + 632);
    uint64_t v46 = *(void *)(v0 + 624);
    if (v43)
    {
      uint64_t v91 = *(void *)(v0 + 656);
      uint64_t v87 = v37;
      uint64_t v47 = swift_slowAlloc();
      log = v41;
      Swift::String v48 = (void *)swift_slowAlloc();
      v98[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 138412802;
      uint64_t v49 = sub_1005163F0();
      *(void *)(v0 + 224) = v49;
      uint64_t v40 = v92;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *Swift::String v48 = v49;
      *(_WORD *)(v47 + 12) = 2050;
      *(void *)(v0 + 232) = v87;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v47 + 22) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v50 = v93;
      *(void *)(v0 + 240) = sub_1000143F4(v93, v92, v98);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v91, v46);
      uint64_t v51 = v87;
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
      uint64_t v50 = v93;
      uint64_t v51 = v37;
    }
    char v96 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10065E9C8 + dword_10065E9C8);
    uint64_t v74 = (void *)swift_task_alloc();
    *(void *)(v0 + 848) = v74;
    *uint64_t v74 = v0;
    v74[1] = sub_10021930C;
    uint64_t v75 = v51;
    uint64_t v76 = v50;
LABEL_27:
    return v96(v75, v76, v40);
  }
  if (v32 == enum case for SecureButtonActionRequest.Action.launch(_:))
  {
    uint64_t v57 = *(uint64_t **)(v0 + 536);
    uint64_t v59 = *(void *)(v0 + 504);
    uint64_t v58 = *(void *)(v0 + 512);
    uint64_t v60 = *(void *)(v0 + 496);
    (*(void (**)(uint64_t *, void))(*(void *)(v0 + 528) + 96))(v57, *(void *)(v0 + 520));
    uint64_t v61 = *v57;
    (*(void (**)(uint64_t, void, uint64_t))(v59 + 104))(v58, enum case for LogKey.Prefix.none(_:), v60);
    id v62 = objc_allocWithZone((Class)type metadata accessor for LogKey());
    uint64_t v63 = (void *)LogKey.init(prefix:)();
    sub_100516980(v63);
    static Logger.install.getter();
    uint64_t v40 = v92;
    swift_bridgeObjectRetain_n();
    uint64_t v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.default.getter();
    BOOL v66 = os_log_type_enabled(v64, v65);
    uint64_t v67 = *(void *)(v0 + 648);
    uint64_t v68 = *(void *)(v0 + 632);
    uint64_t v69 = *(void *)(v0 + 624);
    if (v66)
    {
      uint64_t v90 = *(void *)(v0 + 624);
      uint64_t v95 = v61;
      uint64_t v70 = swift_slowAlloc();
      uint64_t v88 = v64;
      unint64_t v71 = (void *)swift_slowAlloc();
      v98[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v70 = 138412802;
      uint64_t v72 = sub_1005163F0();
      *(void *)(v0 + 200) = v72;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v71 = v72;
      *(_WORD *)(v70 + 12) = 2050;
      *(void *)(v0 + 208) = v95;
      uint64_t v40 = v92;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v70 + 22) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v73 = v93;
      *(void *)(v0 + 216) = sub_1000143F4(v93, v92, v98);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v61 = v95;
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v90);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
      uint64_t v73 = v93;
    }
    char v96 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10065E9D0 + dword_10065E9D0);
    uint64_t v78 = (void *)swift_task_alloc();
    *(void *)(v0 + 864) = v78;
    *uint64_t v78 = v0;
    v78[1] = sub_1002197FC;
    uint64_t v75 = v61;
    uint64_t v76 = v73;
    goto LABEL_27;
  }
  if (v32 == enum case for SecureButtonActionRequest.Action.preflight(_:))
  {
    uint64_t v77 = *(void **)(v0 + 536);
    (*(void (**)(void *, void))(*(void *)(v0 + 528) + 96))(v77, *(void *)(v0 + 520));
    *(void *)(v0 + 880) = *v77;
    *(void *)(v0 + 888) = v77[1];
    type metadata accessor for PropertyListDecoder();
    swift_allocObject();
    PropertyListDecoder.init()();
    sub_1000139E4(&qword_10065C7E0, (void (*)(uint64_t))type metadata accessor for ActionButtonInstallMetadata);
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
    swift_release();
    swift_bridgeObjectRetain();
    Swift::Int v80 = sub_100010C5C((uint64_t)&off_100637890);
    *(void *)(v0 + 896) = v80;
    swift_arrayDestroy();
    long long v97 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                    + dword_10065D5F0);
    uint64_t v81 = (void *)swift_task_alloc();
    *(void *)(v0 + 904) = v81;
    *uint64_t v81 = v0;
    uint64_t v82 = sub_100219B10;
  }
  else
  {
    if (v32 != enum case for SecureButtonActionRequest.Action.preflightBatch(_:)) {
      return _assertionFailure(_:_:file:line:flags:)();
    }
    uint64_t v79 = *(void **)(v0 + 536);
    (*(void (**)(void *, void))(*(void *)(v0 + 528) + 96))(v79, *(void *)(v0 + 520));
    *(void *)(v0 + 776) = *v79;
    *(void *)(v0 + 784) = v79[1];
    type metadata accessor for PropertyListDecoder();
    swift_allocObject();
    PropertyListDecoder.init()();
    sub_1000172F8(&qword_10065C7E8);
    sub_10023B6B0();
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
    swift_release();
    *(void *)(v0 + 792) = *(void *)(v0 + 248);
    swift_bridgeObjectRetain();
    Swift::Int v80 = sub_100010C5C((uint64_t)&off_100637830);
    *(void *)(v0 + 800) = v80;
    swift_arrayDestroy();
    long long v97 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                    + dword_10065D5F0);
    uint64_t v81 = (void *)swift_task_alloc();
    *(void *)(v0 + 808) = v81;
    *uint64_t v81 = v0;
    uint64_t v82 = sub_1002181B4;
  }
  v81[1] = v82;
  uint64_t v83 = *(void *)(v0 + 320);
  uint64_t v84 = *(void *)(v0 + 328);
  uint64_t v85 = *(void *)(v0 + 304);
  uint64_t v86 = *(void *)(v0 + 312);
  return v97(v80, 0, v85, v86, v83, v84);
}

uint64_t sub_1002181B4(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 816) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v5 = sub_100218D54;
  }
  else
  {
    *(unsigned char *)(v4 + 50) = a1 & 1;
    uint64_t v5 = sub_100218320;
  }
  return _swift_task_switch(v5, 0, 0);
}

void sub_100218320()
{
  uint64_t v78 = v0;
  if (*(unsigned char *)(v0 + 50) == 1)
  {
    uint64_t v50 = *(void (**)(void, void, void))(*(void *)(v0 + 504) + 104);
    v50(*(void *)(v0 + 512), enum case for LogKey.Prefix.adp(_:), *(void *)(v0 + 496));
    uint64_t v49 = (objc_class *)type metadata accessor for LogKey();
    id v1 = objc_allocWithZone(v49);
    unint64_t v2 = (void *)LogKey.init(prefix:)();
    sub_100516980(v2);
    static Logger.install.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    BOOL v5 = os_log_type_enabled(v3, v4);
    uint64_t v6 = *(void *)(v0 + 792);
    unint64_t v7 = *(void *)(v0 + 752);
    if (v5)
    {
      uint64_t v64 = *(void *)(v0 + 744);
      uint64_t v68 = *(void *)(v0 + 632);
      uint64_t v71 = *(void *)(v0 + 624);
      uint64_t v74 = *(void *)(v0 + 664);
      uint64_t v8 = swift_slowAlloc();
      os_log_type_t v9 = (void *)swift_slowAlloc();
      v77[0] = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412802;
      uint64_t v10 = sub_1005163F0();
      *(void *)(v0 + 272) = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *os_log_type_t v9 = v10;
      *(_WORD *)(v8 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 280) = sub_1000143F4(v64, v7, (uint64_t *)v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v8 + 22) = 2050;
      uint64_t v11 = *(void *)(v6 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 288) = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%@] Handling batch installation request from secure button for %{public}s with %{public}ld installs", (uint8_t *)v8, 0x20u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v74, v71);
    }
    else
    {
      uint64_t v18 = *(void *)(v0 + 664);
      uint64_t v19 = *(void *)(v0 + 632);
      uint64_t v20 = *(void *)(v0 + 624);
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    }
    uint64_t v21 = *(void *)(v0 + 792);
    *(void *)(v0 + 256) = _swiftEmptyArrayStorage;
    uint64_t v22 = *(void *)(v21 + 16);
    if (v22)
    {
      uint64_t v58 = *(void *)(v0 + 488);
      uint64_t v23 = *(void *)(v0 + 472);
      uint64_t v57 = *(int **)(v0 + 464);
      uint64_t v24 = *(void *)(v0 + 384);
      uint64_t v25 = v21 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
      unsigned int v48 = enum case for LogKey.Prefix.undefined(_:);
      unsigned int v56 = enum case for AppInstallRequestType.install(_:);
      uint64_t v55 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 408) + 104);
      unsigned int v54 = enum case for AppInstallRequestType.update(_:);
      uint64_t v52 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
      uint64_t v53 = (void (**)(uint64_t, char *, uint64_t))(v24 + 16);
      uint64_t v51 = *(void *)(v23 + 72);
      uint64_t v59 = *(void *)(v0 + 816);
      while (1)
      {
        sub_10023D940(v25, *(void *)(v0 + 488), (uint64_t (*)(void))type metadata accessor for ActionButtonInstallMetadata);
        if (qword_10065B150 != -1) {
          swift_once();
        }
        TaskLocal.get()();
        uint64_t v26 = *(void *)(v0 + 104);
        uint64_t v73 = v25;
        uint64_t v75 = v22;
        if (!v26) {
          goto LABEL_17;
        }
        swift_release();
        swift_release();
        swift_release();
        os_unfair_lock_lock((os_unfair_lock_t)(v26 + 24));
        sub_100006250((void **)(v26 + 16), v77);
        os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 24));
        if (v59) {
          return;
        }
        uint64_t v27 = v77[0];
        swift_release();
        if (!v27) {
          break;
        }
        uint64_t v59 = 0;
        uint64_t v60 = v27;
LABEL_18:
        uint64_t v29 = *(void *)(v0 + 752);
        uint64_t v67 = *(void *)(v0 + 704);
        uint64_t v70 = *(void *)(v0 + 744);
        uint64_t v62 = *(void *)(v0 + 720);
        uint64_t v63 = *(void *)(v0 + 688);
        uint64_t v30 = *(void **)(v0 + 488);
        uint64_t v65 = *(void *)(v0 + 456);
        uint64_t v31 = *(void *)(v0 + 424);
        uint64_t v32 = *(void *)(v0 + 392);
        uint64_t v33 = *(void *)(v0 + 400);
        uint64_t v34 = *(void *)(v0 + 368);
        uint64_t v35 = *(void *)(v0 + 376);
        uint64_t v36 = *(void *)(v0 + 360);
        swift_bridgeObjectRetain_n();
        UUID.init()();
        if (*((unsigned char *)v30 + v57[7])) {
          uint64_t v37 = v54;
        }
        else {
          uint64_t v37 = v56;
        }
        (*v55)(v31, v37, v33);
        uint64_t v61 = *v30;
        uint64_t v38 = *(void *)(v58 + 8);
        (*v53)(v32, (char *)v30 + v57[6], v35);
        (*v52)(v34, 1, 1, v35);
        uint64_t v39 = *(void *)(v58 + 16);
        sub_100017238((uint64_t)v30 + v57[8], v36, &qword_10065C3C0);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v40 = swift_unknownObjectRetain();
        *(void *)&long long v47 = v38;
        *((void *)&v47 + 1) = v70;
        *(void *)&long long v46 = 0;
        *((void *)&v46 + 1) = v61;
        sub_1002F0104(v65, v60, v70, v29, v31, 0, 0, 0, v46, v47, v29, v32, v34, v62, v63, v40, v67, 0, 0xF000000000000000,
          1u,
          v39,
          0,
          v36);
        swift_release();
        swift_bridgeObjectRelease();

        swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*(void *)(v0 + 256) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 256) & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v41 = *(void *)(v0 + 488);
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_release();
        sub_10023D9A8(v41, (uint64_t (*)(void))type metadata accessor for ActionButtonInstallMetadata);
        uint64_t v25 = v73 + v51;
        uint64_t v22 = v75 - 1;
        if (v75 == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          os_log_type_t v42 = *(void **)(v0 + 256);
          goto LABEL_26;
        }
      }
      uint64_t v59 = 0;
LABEL_17:
      v50(*(void *)(v0 + 512), v48, *(void *)(v0 + 496));
      id v28 = objc_allocWithZone(v49);
      uint64_t v60 = (void *)LogKey.init(prefix:)();
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    os_log_type_t v42 = _swiftEmptyArrayStorage;
LABEL_26:
    uint64_t v44 = *(void *)(v0 + 320);
    uint64_t v43 = *(void *)(v0 + 328);
    long long v76 = *(_OWORD *)(v0 + 304);
    swift_bridgeObjectRelease();
    *(_OWORD *)(v0 + 56) = v76;
    *(void *)(v0 + 72) = v44;
    *(void *)(v0 + 80) = v43;
    *(unsigned char *)(v0 + 88) = 0;
    type metadata accessor for ADPBatchInstallTask();
    swift_allocObject();
    *(void *)(v0 + 824) = sub_1003E9FD8((unint64_t)v42, v0 + 56);
    uint64_t v45 = (void *)swift_task_alloc();
    *(void *)(v0 + 832) = v45;
    *uint64_t v45 = v0;
    v45[1] = sub_100218F44;
    sub_1003E9A68();
  }
  else
  {
    unint64_t v12 = *(void *)(v0 + 784);
    uint64_t v13 = *(void *)(v0 + 776);
    uint64_t v14 = *(void *)(v0 + 608);
    uint64_t v69 = *(void *)(v0 + 600);
    uint64_t v72 = *(void *)(v0 + 616);
    uint64_t v66 = *(void *)(v0 + 592);
    uint64_t v15 = *(void *)(v0 + 576);
    uint64_t v16 = *(void *)(v0 + 568);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_100013510(v13, v12);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v66, v16);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v72, v69);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(void (**)(void))(v0 + 8);
    v17();
  }
}

uint64_t sub_100218D54()
{
  uint64_t v1 = v0[77];
  uint64_t v2 = v0[76];
  uint64_t v3 = v0[75];
  uint64_t v4 = v0[74];
  uint64_t v5 = v0[72];
  uint64_t v6 = v0[71];
  sub_100013510(v0[97], v0[98]);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100218F44()
{
  *(void *)(*(void *)v1 + 840) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10021AA10;
  }
  else {
    uint64_t v2 = sub_100219058;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100219058()
{
  unint64_t v14 = v0[98];
  uint64_t v13 = v0[97];
  uint64_t v1 = (void (*)(uint64_t, void, uint64_t))v0[95];
  uint64_t v2 = v0[74];
  uint64_t v3 = v0[73];
  uint64_t v4 = v0[72];
  uint64_t v5 = v0[71];
  uint64_t v6 = v0[70];
  uint64_t v7 = v0[68];
  (*(void (**)(uint64_t, uint64_t, void))(v0[55] + 16))(v6, v0[103] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon19ADPBatchInstallTask_id, v0[54]);
  v1(v6, enum case for SecureButtonActionResponse.ResponseType.confirmInstallBatch(_:), v7);
  SecureButtonActionResponse.init(type:)();
  sub_100013510(v13, v14);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v3, v5);
  uint64_t v8 = v0[77];
  uint64_t v9 = v0[76];
  uint64_t v10 = v0[75];
  (*(void (**)(void, void, void))(v0[72] + 32))(v0[37], v0[74], v0[71]);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_10021930C()
{
  *(void *)(*(void *)v1 + 856) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_10021961C;
  }
  else {
    uint64_t v2 = sub_100219440;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100219440()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v1 = v0[77];
  uint64_t v2 = v0[76];
  uint64_t v3 = v0[75];
  (*(void (**)(void, void, void))(v0[72] + 32))(v0[37], v0[74], v0[71]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10021961C()
{
  uint64_t v1 = v0[77];
  uint64_t v2 = v0[76];
  uint64_t v3 = v0[75];
  uint64_t v4 = v0[74];
  uint64_t v5 = v0[72];
  uint64_t v6 = v0[71];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1002197FC()
{
  *(void *)(*(void *)v1 + 872) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_100219930;
  }
  else {
    uint64_t v2 = sub_10023E3C4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100219930()
{
  uint64_t v1 = v0[77];
  uint64_t v2 = v0[76];
  uint64_t v3 = v0[75];
  uint64_t v4 = v0[74];
  uint64_t v5 = v0[72];
  uint64_t v6 = v0[71];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100219B10(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 912) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v5 = sub_10021A404;
  }
  else
  {
    *(unsigned char *)(v4 + 51) = a1 & 1;
    uint64_t v5 = sub_100219C6C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100219C6C()
{
  uint64_t v60 = v0;
  if (*(unsigned char *)(v0 + 51) == 1)
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 504) + 104))(*(void *)(v0 + 512), enum case for LogKey.Prefix.adp(_:), *(void *)(v0 + 496));
    id v1 = objc_allocWithZone((Class)type metadata accessor for LogKey());
    uint64_t v2 = (void *)LogKey.init(prefix:)();
    sub_100516980(v2);
    static Logger.install.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    BOOL v5 = os_log_type_enabled(v3, v4);
    unint64_t v6 = *(void *)(v0 + 752);
    if (v5)
    {
      uint64_t v47 = *(void *)(v0 + 744);
      uint64_t v50 = *(void *)(v0 + 632);
      uint64_t v53 = *(void *)(v0 + 624);
      uint64_t v56 = *(void *)(v0 + 640);
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      v59[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412546;
      uint64_t v9 = sub_1005163F0();
      *(void *)(v0 + 184) = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v8 = v9;
      *(_WORD *)(v7 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 192) = sub_1000143F4(v47, v6, v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%@] Handling installation request from secure button for %{public}s", (uint8_t *)v7, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v56, v53);
    }
    else
    {
      uint64_t v17 = *(void *)(v0 + 640);
      uint64_t v18 = *(void *)(v0 + 632);
      uint64_t v19 = *(void *)(v0 + 624);

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
    uint64_t v20 = *(void *)(v0 + 752);
    uint64_t v49 = *(void *)(v0 + 744);
    uint64_t v42 = *(void *)(v0 + 720);
    uint64_t v46 = *(void *)(v0 + 704);
    uint64_t v44 = *(void *)(v0 + 696);
    uint64_t v43 = *(void *)(v0 + 688);
    uint64_t v21 = *(void **)(v0 + 480);
    uint64_t v22 = *(int **)(v0 + 464);
    uint64_t v45 = *(void *)(v0 + 448);
    uint64_t v23 = *(void *)(v0 + 408);
    uint64_t v24 = *(void *)(v0 + 416);
    uint64_t v25 = *(void *)(v0 + 384);
    uint64_t v26 = *(void *)(v0 + 368);
    uint64_t v27 = *(void *)(v0 + 376);
    uint64_t v36 = *(void *)(v0 + 392);
    uint64_t v37 = v26;
    uint64_t v38 = *(void *)(v0 + 360);
    uint64_t v39 = *(void *)(v0 + 400);
    uint64_t v55 = *(void *)(v0 + 320);
    uint64_t v58 = *(void *)(v0 + 328);
    long long v52 = *(_OWORD *)(v0 + 304);
    uint64_t v41 = (void *)sub_1005163F0();
    swift_bridgeObjectRetain();
    UUID.init()();
    if (*((unsigned char *)v21 + v22[7])) {
      id v28 = (unsigned int *)&enum case for AppInstallRequestType.update(_:);
    }
    else {
      id v28 = (unsigned int *)&enum case for AppInstallRequestType.install(_:);
    }
    (*(void (**)(uint64_t, void, uint64_t))(v23 + 104))(v24, *v28, v39);
    uint64_t v29 = v21[1];
    uint64_t v40 = *v21;
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v36, (char *)v21 + v22[6], v27);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v26, 1, 1, v27);
    uint64_t v30 = v21[2];
    sub_100017238((uint64_t)v21 + v22[8], v38, &qword_10065C3C0);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    id v31 = v41;
    *(void *)&long long v35 = v29;
    *((void *)&v35 + 1) = v49;
    *(void *)&long long v34 = 0;
    *((void *)&v34 + 1) = v40;
    *(void *)(v0 + 920) = sub_1002F0104(v45, v31, v49, v20, v24, 0, 0, 0, v34, v35, v20, v36, v37, v42, v43, v44, v46, 0, 0xF000000000000000,
                              1u,
                              v30,
                              0,
                              v38);
    swift_release();
    swift_bridgeObjectRelease_n();

    *(_OWORD *)(v0 + 16) = v52;
    *(void *)(v0 + 32) = v55;
    *(void *)(v0 + 40) = v58;
    *(unsigned char *)(v0 + 48) = 0;
    type metadata accessor for ADPInstallTask();
    swift_allocObject();
    uint64_t v32 = swift_retain();
    *(void *)(v0 + 928) = sub_100346FA4(v32, v0 + 16);
    uint64_t v33 = (void *)swift_task_alloc();
    *(void *)(v0 + 936) = v33;
    *uint64_t v33 = v0;
    v33[1] = sub_10021A61C;
    return sub_10034213C();
  }
  else
  {
    unint64_t v10 = *(void *)(v0 + 888);
    uint64_t v11 = *(void *)(v0 + 880);
    uint64_t v12 = *(void *)(v0 + 608);
    uint64_t v54 = *(void *)(v0 + 600);
    uint64_t v57 = *(void *)(v0 + 616);
    uint64_t v13 = *(void *)(v0 + 576);
    uint64_t v48 = *(void *)(v0 + 568);
    uint64_t v51 = *(void *)(v0 + 592);
    uint64_t v14 = *(void *)(v0 + 480);
    swift_bridgeObjectRelease_n();
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_100013510(v11, v10);
    sub_10023D9A8(v14, (uint64_t (*)(void))type metadata accessor for ActionButtonInstallMetadata);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v51, v48);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v57, v54);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
}

uint64_t sub_10021A404()
{
  unint64_t v1 = v0[111];
  uint64_t v2 = v0[110];
  uint64_t v11 = v0[77];
  uint64_t v3 = v0[76];
  uint64_t v4 = v0[75];
  uint64_t v5 = v0[74];
  uint64_t v6 = v0[72];
  uint64_t v7 = v0[71];
  uint64_t v8 = v0[60];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_100013510(v2, v1);
  sub_10023D9A8(v8, (uint64_t (*)(void))type metadata accessor for ActionButtonInstallMetadata);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10021A61C()
{
  *(void *)(*(void *)v1 + 944) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10021AC0C;
  }
  else {
    uint64_t v2 = sub_10021A730;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10021A730()
{
  uint64_t v13 = v0[110];
  unint64_t v14 = v0[111];
  uint64_t v1 = (void (*)(uint64_t, void, uint64_t))v0[95];
  uint64_t v15 = v0[74];
  uint64_t v2 = v0[73];
  uint64_t v3 = v0[72];
  uint64_t v4 = v0[71];
  uint64_t v5 = v0[70];
  uint64_t v6 = v0[68];
  uint64_t v12 = v0[60];
  (*(void (**)(uint64_t, uint64_t, void))(v0[55] + 16))(v5, v0[115] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23ADPInstallConfiguration_id, v0[54]);
  v1(v5, enum case for SecureButtonActionResponse.ResponseType.confirmInstall(_:), v6);
  SecureButtonActionResponse.init(type:)();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  sub_100013510(v13, v14);
  swift_release();
  sub_10023D9A8(v12, (uint64_t (*)(void))type metadata accessor for ActionButtonInstallMetadata);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v15, v2, v4);
  uint64_t v7 = v0[77];
  uint64_t v8 = v0[76];
  uint64_t v9 = v0[75];
  (*(void (**)(void, void, void))(v0[72] + 32))(v0[37], v0[74], v0[71]);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10021AA10()
{
  uint64_t v1 = v0[77];
  uint64_t v2 = v0[76];
  uint64_t v3 = v0[75];
  uint64_t v4 = v0[74];
  uint64_t v5 = v0[72];
  uint64_t v6 = v0[71];
  sub_100013510(v0[97], v0[98]);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10021AC0C()
{
  unint64_t v1 = v0[111];
  uint64_t v2 = v0[110];
  uint64_t v3 = v0[76];
  uint64_t v10 = v0[75];
  uint64_t v11 = v0[77];
  uint64_t v9 = v0[74];
  uint64_t v4 = v0[72];
  uint64_t v5 = v0[71];
  uint64_t v6 = v0[60];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  sub_100013510(v2, v1);
  swift_release();
  sub_10023D9A8(v6, (uint64_t (*)(void))type metadata accessor for ActionButtonInstallMetadata);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10021AE70(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  swift_retain();
  Swift::Int v16 = sub_100010C5C((uint64_t)&off_100637950);
  swift_arrayDestroy();
  uint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = v4;
  v17[3] = a1;
  v17[4] = a2;
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  id v19 = v4;
  sub_100012670(a1, a2);
  sub_100016EDC((uint64_t)"Fetch available app metadata", 28, 2, a3, a4, 1, (uint64_t)v14, v16, 1u, (uint64_t)v11, (uint64_t)&unk_10065C738, (uint64_t)v17, (uint64_t)&unk_10063BA70, (uint64_t)&unk_10065C748);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_10021B0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[18] = a8;
  v8[19] = v14;
  v8[16] = a6;
  v8[17] = a7;
  v8[14] = a4;
  v8[15] = a5;
  v8[12] = a1;
  v8[13] = a3;
  uint64_t v9 = type metadata accessor for Logger();
  v8[20] = v9;
  v8[21] = *(void *)(v9 - 8);
  v8[22] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for LogKey.Prefix();
  v8[23] = v10;
  v8[24] = *(void *)(v10 - 8);
  v8[25] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for AvailableAppMetadataRequest();
  v8[26] = v11;
  v8[27] = *(void *)(v11 - 8);
  v8[28] = swift_task_alloc();
  v8[29] = swift_task_alloc();
  return _swift_task_switch(sub_10021B26C, 0, 0);
}

uint64_t sub_10021B26C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 136) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10021B330;
  v2[3] = v1;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_10021B330(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[31] = a1;
  v4[32] = a2;
  v4[33] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    return _swift_task_switch(sub_10021B49C, 0, 0);
  }
}

uint64_t sub_10021B49C()
{
  v0[34] = *(void *)(*(void *)(v0[17] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies) + 152);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[35] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10021B564;
  uint64_t v2 = v0[31];
  return v4(v2);
}

uint64_t sub_10021B564(char a1)
{
  *(unsigned char *)(*(void *)v1 + 344) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10021B684, 0, 0);
}

uint64_t sub_10021B684()
{
  uint64_t v51 = v0;
  if (*(unsigned char *)(v0 + 344) != 1)
  {
    uint64_t v6 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 104))(v7, enum case for MarketplaceKitError.featureUnavailable(_:), v6);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_5;
  }
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 144);
  unint64_t v5 = *(void *)(v0 + 152);
  *(void *)(v0 + 16) = v4;
  *(void *)(v0 + 24) = v5;
  *(void *)(v0 + 32) = v0 + 16;
  *(void *)(v0 + 40) = v2;
  sub_100012670(v4, v5);
  *(void *)(v0 + 48) = &type metadata for Data;
  *(void *)(v0 + 56) = v3;
  *(void *)(v0 + 64) = sub_1000175C4();
  *(void *)(v0 + 72) = sub_1000139E4(&qword_10065C780, (void (*)(uint64_t))&type metadata accessor for AvailableAppMetadataRequest);
  decodeXPCValues<each A, B>(from:)();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_100013510(*(void *)(v0 + 16), *(void *)(v0 + 24));
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  uint64_t v11 = *(void *)(v0 + 224);
  uint64_t v10 = *(void *)(v0 + 232);
  uint64_t v12 = *(void *)(v0 + 208);
  uint64_t v13 = *(void *)(v0 + 216);
  uint64_t v15 = *(void *)(v0 + 192);
  uint64_t v14 = *(void *)(v0 + 200);
  uint64_t v16 = *(void *)(v0 + 184);
  sub_100013510(*(void *)(v0 + 16), *(void *)(v0 + 24));
  (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))(v14, enum case for LogKey.Prefix.general(_:), v16);
  id v17 = objc_allocWithZone((Class)type metadata accessor for LogKey());
  uint64_t v18 = (void *)LogKey.init(prefix:)();
  *(void *)(v0 + 288) = v18;
  static Logger.daemon.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v11, v10, v12);
  id v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v23 = *(void *)(v0 + 216);
  uint64_t v22 = *(void *)(v0 + 224);
  uint64_t v24 = *(void *)(v0 + 208);
  uint64_t v26 = *(void *)(v0 + 168);
  uint64_t v25 = *(void *)(v0 + 176);
  uint64_t v27 = *(void *)(v0 + 160);
  if (v21)
  {
    unint64_t v46 = *(void *)(v0 + 120);
    unint64_t v47 = *(void *)(v0 + 128);
    unint64_t v44 = *(void *)(v0 + 104);
    unint64_t v45 = *(void *)(v0 + 112);
    uint64_t v49 = *(void *)(v0 + 160);
    uint64_t v28 = swift_slowAlloc();
    v50[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136446466;
    uint64_t v29 = AvailableAppMetadataRequest.distributorID.getter();
    os_log_type_t type = v20;
    *(void *)(v0 + 80) = sub_1000143F4(v29, v30, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void (**)(void, void))(v23 + 8);
    uint64_t v31 = v23 + 8;
    uint64_t v32 = v33;
    v33(v22, v24);
    *(_WORD *)(v28 + 12) = 2080;
    uint64_t v34 = audit_token_t.signingIdentifier.getter(v44, v45, v46, v47);
    if (v35)
    {
      unint64_t v36 = v35;
    }
    else
    {
      uint64_t v34 = 0x6E776F6E6B6E75;
      unint64_t v36 = 0xE700000000000000;
    }
    *(void *)(v0 + 88) = sub_1000143F4(v34, v36, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, type, "Fetching available app metadata from %{public}s for %s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v49);
  }
  else
  {
    uint64_t v37 = *(void (**)(void, void))(v23 + 8);
    uint64_t v31 = v23 + 8;
    uint64_t v32 = v37;
    v37(*(void *)(v0 + 224), *(void *)(v0 + 208));

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  }
  *(void *)(v0 + 296) = v31;
  *(void *)(v0 + 304) = v32;
  id v38 = v18;
  sub_100516980(v38);
  uint64_t v39 = AvailableAppMetadataRequest.ids.getter();
  *(void *)(v0 + 312) = v39;
  uint64_t v40 = AvailableAppMetadataRequest.distributorID.getter();
  uint64_t v42 = v41;
  *(void *)(v0 + 320) = v41;
  uint64_t v43 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v43;
  *uint64_t v43 = v0;
  v43[1] = sub_10021BBD0;
  return sub_1003CE9B8(v39, v40, v42, (uint64_t)v38);
}

uint64_t sub_10021BBD0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 336) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10021BD0C, 0, 0);
}

uint64_t sub_10021BD0C()
{
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 208);
  unint64_t v5 = *(void **)(v0 + 96);

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *unint64_t v5 = v1;
  v2(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_10021BE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 480) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_10021C100;
  }
  else
  {
    *(void *)(v6 + 488) = a2;
    *(void *)(v6 + 496) = a1;
    uint64_t v7 = sub_10021BF60;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_10021BF60()
{
  unint64_t v1 = v0[61];
  uint64_t v2 = v0[62];
  uint64_t v4 = v0[57];
  unint64_t v3 = v0[58];
  uint64_t v5 = v0[45];
  uint64_t v6 = (uint64_t *)v0[46];
  uint64_t v8 = v0[43];
  uint64_t v7 = v0[44];
  uint64_t v9 = v0[41];
  uint64_t v10 = v0[42];
  uint64_t *v6 = v2;
  v6[1] = v1;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v6, enum case for FetchDataResponse.Response.passbookProvisioning(_:), v7);
  sub_100012670(v2, v1);
  FetchDataResponse.init(response:)();
  sub_100013510(v4, v3);
  sub_100013510(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  uint64_t v12 = v0[55];
  uint64_t v11 = v0[56];
  uint64_t v13 = v0[54];
  (*(void (**)(void, void, void))(v0[52] + 32))(v0[28], v0[53], v0[51]);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_10021C100()
{
  uint64_t v34 = v0;
  *(void *)(v0 + 184) = *(void *)(v0 + 480);
  swift_errorRetain();
  sub_1000172F8(&qword_10065B260);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    uint64_t v1 = *(unsigned int *)(v0 + 88);
    uint64_t v3 = *(void *)(v0 + 96);
    uint64_t v2 = *(void **)(v0 + 104);
    static Logger.daemon.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    int v32 = v1;
    uint64_t v31 = v3;
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136446210;
      uint64_t v7 = sub_10029B154(v1, v3, v2);
      if (!v8)
      {
        *(_DWORD *)(v0 + 64) = v1;
        *(void *)(v0 + 72) = v3;
        *(void *)(v0 + 80) = v2;
        swift_bridgeObjectRetain();
        uint64_t v7 = String.init<A>(describing:)();
      }
      uint64_t v10 = *(void *)(v0 + 264);
      uint64_t v9 = *(void *)(v0 + 272);
      uint64_t v29 = *(void *)(v0 + 256);
      *(void *)(v0 + 208) = sub_1000143F4(v7, v8, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Error in passbook provisioning: %{public}s", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v29);
    }
    else
    {
      uint64_t v16 = *(void *)(v0 + 264);
      uint64_t v17 = *(void *)(v0 + 272);
      uint64_t v18 = *(void *)(v0 + 256);
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v18);
    }
    uint64_t v20 = *(void *)(v0 + 456);
    unint64_t v19 = *(void *)(v0 + 464);
    uint64_t v21 = *(void *)(v0 + 440);
    uint64_t v30 = *(void *)(v0 + 448);
    uint64_t v22 = *(void *)(v0 + 432);
    uint64_t v23 = *(void *)(v0 + 336);
    uint64_t v24 = *(void *)(v0 + 344);
    uint64_t v25 = *(void *)(v0 + 328);
    sub_10023AE84();
    swift_allocError();
    *(_DWORD *)uint64_t v26 = v32;
    *(void *)(v26 + 8) = v31;
    *(void *)(v26 + 16) = v2;
    swift_willThrow();
    sub_100013510(v20, v19);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v25);
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v30, v22);
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 456);
    unint64_t v12 = *(void *)(v0 + 464);
    uint64_t v14 = *(void *)(v0 + 440);
    uint64_t v13 = *(void *)(v0 + 448);
    uint64_t v15 = *(void *)(v0 + 432);
    (*(void (**)(void, void))(*(void *)(v0 + 336) + 8))(*(void *)(v0 + 344), *(void *)(v0 + 328));
    sub_100013510(v11, v12);
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_10021C4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 544) = v2;
  swift_task_dealloc();
  swift_release();
  if (v2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = sub_10021CEA4;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v6 + 552) = a2;
    *(void *)(v6 + 560) = a1;
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = sub_10021C65C;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_10021C65C()
{
  uint64_t v1 = v0[69];
  uint64_t v2 = v0[45];
  uint64_t v3 = (void *)v0[46];
  uint64_t v4 = v0[44];
  *uint64_t v3 = v0[70];
  v3[1] = v1;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v3, enum case for FetchDataResponse.Response.searchTerritory(_:), v4);
  FetchDataResponse.init(response:)();
  uint64_t v6 = v0[55];
  uint64_t v5 = v0[56];
  uint64_t v7 = v0[54];
  (*(void (**)(void, void, void))(v0[52] + 32))(v0[28], v0[53], v0[51]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10021C7BC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 624);
  swift_task_dealloc();
  return _swift_task_switch(sub_10021C8CC, v1, 0);
}

uint64_t sub_10021C8CC()
{
  if (*(void *)(*(void *)(v0 + 624) + 112))
  {
    uint64_t v2 = *(void *)(v0 + 288);
    uint64_t v1 = *(void *)(v0 + 296);
    uint64_t v3 = *(void *)(v0 + 280);
    (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *(unsigned int *)(v0 + 676), v3);
    swift_retain();
    uint64_t v4 = AppleServicesLocalizer.string(forKey:with:using:)();
    uint64_t v6 = v5;
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  *(void *)(v0 + 664) = v6;
  *(void *)(v0 + 656) = v4;
  return _swift_task_switch(sub_10021CA14, 0, 0);
}

uint64_t sub_10021CA14()
{
  uint64_t v1 = *(void *)(v0 + 664);
  unint64_t v2 = LocalizedStringsRequest.LocalizedString.key.getter();
  uint64_t v4 = v3;
  uint64_t v5 = (void *)(v0 + 608);
  uint64_t v6 = *(void **)(v0 + 608);
  if (v1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v0 + 176) = v6;
    unint64_t v9 = sub_100016D20(v2, v4);
    uint64_t v10 = v6[2];
    BOOL v11 = (v8 & 1) == 0;
    uint64_t v12 = v10 + v11;
    if (__OFADD__(v10, v11))
    {
      __break(1u);
    }
    else
    {
      char v13 = v8;
      if (*(void *)(*v5 + 24) >= v12)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_10052B494();
        }
      }
      else
      {
        sub_100523118(v12, isUniquelyReferenced_nonNull_native);
        unint64_t v14 = sub_100016D20(v2, v4);
        if ((v13 & 1) != (v15 & 1))
        {
          return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        }
        unint64_t v9 = v14;
      }
      uint64_t v21 = *(void *)(v0 + 664);
      uint64_t v6 = *(void **)(v0 + 176);
      uint64_t v22 = *(void *)(v0 + 656);
      if (v13)
      {
        uint64_t v23 = (void *)(v6[7] + 16 * v9);
        swift_bridgeObjectRelease();
        *uint64_t v23 = v22;
        v23[1] = v21;
LABEL_19:
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      v6[(v9 >> 6) + 8] |= 1 << v9;
      uint64_t v24 = (unint64_t *)(v6[6] + 16 * v9);
      *uint64_t v24 = v2;
      v24[1] = v4;
      uint64_t v25 = (void *)(v6[7] + 16 * v9);
      *uint64_t v25 = v22;
      v25[1] = v21;
      uint64_t v26 = v6[2];
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (!v27)
      {
        v6[2] = v28;
        swift_bridgeObjectRetain();
        goto LABEL_19;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v2 = sub_100016D20(v2, v4);
    char v18 = v17;
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = (void *)*v5;
      goto LABEL_21;
    }
    uint64_t v6 = (void *)(v0 + 216);
    uint64_t v19 = *v5;
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v0 + 216) = v19;
    if (v20) {
      goto LABEL_10;
    }
  }
  sub_10052B494();
  uint64_t v5 = v6;
LABEL_10:
  uint64_t v6 = (void *)*v5;
  swift_bridgeObjectRelease();
  sub_10042F340(v2, (uint64_t)v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_20:
  swift_bridgeObjectRelease();
LABEL_21:
  uint64_t v29 = *(void *)(v0 + 576);
  uint64_t v30 = *(void *)(v0 + 616) + 1;
  (*(void (**)(void, void))(*(void *)(v0 + 312) + 8))(*(void *)(v0 + 320), *(void *)(v0 + 304));
  if (v30 == v29)
  {
    swift_bridgeObjectRelease();
    uint64_t v31 = *(void *)(v0 + 360);
    int v32 = *(void **)(v0 + 368);
    uint64_t v33 = *(void *)(v0 + 352);
    *int v32 = v6;
    (*(void (**)(void *, void, uint64_t))(v31 + 104))(v32, enum case for FetchDataResponse.Response.localizedStrings(_:), v33);
    FetchDataResponse.init(response:)();
    uint64_t v35 = *(void *)(v0 + 440);
    uint64_t v34 = *(void *)(v0 + 448);
    uint64_t v36 = *(void *)(v0 + 432);
    (*(void (**)(void, void, void))(*(void *)(v0 + 416) + 32))(*(void *)(v0 + 224), *(void *)(v0 + 424), *(void *)(v0 + 408));
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v37 = *(uint64_t (**)(void))(v0 + 8);
    return v37();
  }
  else
  {
    uint64_t v38 = *(void *)(v0 + 616) + 1;
    *(void *)(v0 + 616) = v38;
    *(void *)(v0 + 608) = v6;
    uint64_t v39 = *(void *)(v0 + 584);
    (*(void (**)(void, unint64_t, void))(v0 + 600))(*(void *)(v0 + 320), *(void *)(v0 + 568)+ ((*(unsigned __int8 *)(v0 + 672) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 672))+ *(void *)(v0 + 592) * v38, *(void *)(v0 + 304));
    *(void *)(v0 + 624) = *(void *)(v39 + 216);
    swift_retain();
    *(void *)(v0 + 128) = LocalizedStringsRequest.LocalizedString.key.getter();
    *(void *)(v0 + 136) = v40;
    *(void *)(v0 + 632) = v40;
    *(void *)(v0 + 640) = LocalizedStringsRequest.LocalizedString.replacementTokens.getter();
    uint64_t v41 = (void *)swift_task_alloc();
    *(void *)(v0 + 648) = v41;
    *uint64_t v41 = v0;
    v41[1] = sub_10021C7BC;
    return sub_10055DEE4();
  }
}

uint64_t sub_10021CEA4()
{
  uint64_t v2 = v0[55];
  uint64_t v1 = v0[56];
  uint64_t v3 = v0[54];
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10021CFAC(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = [a1 typeForInstallMachinery];
  if (!v6)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    goto LABEL_10;
  }
  uint64_t v7 = v6;
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!v10)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v8 == v11 && v10 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      return 0;
    }
  }
  id v16 = [a1 iTunesMetadata];
  id v17 = [v16 distributorInfo];

  id v18 = [v17 developerID];
  if (!v18) {
    return 0;
  }
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  if (v19 != a2 || v21 != a3)
  {
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v22) {
      return sub_1004FC1A4() & 1;
    }
    return 0;
  }
  swift_bridgeObjectRelease();
  return sub_1004FC1A4() & 1;
}

uint64_t sub_10021D154(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  char v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  swift_retain();
  Swift::Int v16 = sub_100010C5C((uint64_t)&off_1006379D0);
  swift_arrayDestroy();
  id v17 = (void *)swift_allocObject();
  _OWORD v17[2] = a1;
  v17[3] = a2;
  v17[4] = v4;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = &unk_10065C6E8;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v11, 1, 1, v19);
  sub_100012670(a1, a2);
  id v20 = v4;
  swift_retain();
  sub_100016EDC((uint64_t)"Set data", 8, 2, a3, a4, 1, (uint64_t)v14, v16, 1u, (uint64_t)v11, (uint64_t)&unk_10065C6F0, v18, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_10021D3F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[25] = a7;
  v8[26] = a8;
  v8[23] = a5;
  v8[24] = a6;
  v8[21] = a3;
  v8[22] = a4;
  v8[20] = a2;
  uint64_t v9 = type metadata accessor for SetPrivateDataRequest.Request();
  v8[27] = v9;
  v8[28] = *(void *)(v9 - 8);
  v8[29] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Logger();
  v8[30] = v10;
  v8[31] = *(void *)(v10 - 8);
  v8[32] = swift_task_alloc();
  v8[33] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for SetPrivateDataRequest();
  v8[34] = v11;
  v8[35] = *(void *)(v11 - 8);
  v8[36] = swift_task_alloc();
  v8[37] = swift_task_alloc();
  return _swift_task_switch(sub_10021D594, 0, 0);
}

uint64_t sub_10021D594()
{
  uint64_t v109 = v0;
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[24];
  unint64_t v3 = v0[25];
  v0[15] = v0[37];
  v0[8] = v2;
  v0[9] = v3;
  v0[10] = (uint64_t)(v0 + 8);
  sub_100012670(v2, v3);
  v0[11] = (uint64_t)&type metadata for Data;
  v0[12] = v1;
  v0[13] = sub_1000175C4();
  v0[14] = sub_1000139E4(&qword_10065C6F8, (void (*)(uint64_t))&type metadata accessor for SetPrivateDataRequest);
  decodeXPCValues<each A, B>(from:)();
  uint64_t v6 = v0[36];
  uint64_t v5 = v0[37];
  uint64_t v7 = v0[34];
  uint64_t v8 = v0[35];
  sub_100013510(v0[8], v0[9]);
  static Logger.daemon.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v5, v7);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v13 = v0[35];
  uint64_t v12 = v0[36];
  uint64_t v15 = v0[33];
  uint64_t v14 = v0[34];
  uint64_t v16 = v0[31];
  uint64_t v104 = v0[30];
  if (v11)
  {
    unint64_t v99 = v0[20];
    unint64_t v100 = v0[23];
    unint64_t v98 = v0[22];
    unint64_t v97 = v0[21];
    os_log_type_t type = v10;
    uint64_t v17 = swift_slowAlloc();
    v108[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136446466;
    uint64_t v18 = SetPrivateDataRequest.stringValue.getter();
    v0[18] = sub_1000143F4(v18, v19, v108);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    id v20 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v20(v12, v14);
    *(_WORD *)(v17 + 12) = 2082;
    uint64_t v21 = audit_token_t.signingIdentifier.getter(v99, v97, v98, v100);
    if (v22)
    {
      unint64_t v23 = v22;
    }
    else
    {
      uint64_t v21 = 0x6E776F6E6B6E55;
      unint64_t v23 = 0xE700000000000000;
    }
    v0[19] = sub_1000143F4(v21, v23, v108);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, type, "Set private data request %{public}s called by %{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v24(v15, v104);
  }
  else
  {
    id v20 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v20(v12, v14);

    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v24(v15, v104);
  }
  v0[38] = (uint64_t)v24;
  v0[39] = (uint64_t)v20;
  uint64_t v26 = v0[28];
  uint64_t v25 = v0[29];
  uint64_t v27 = v0[27];
  SetPrivateDataRequest.request.getter();
  int v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 88))(v25, v27);
  if (v28 == enum case for SetPrivateDataRequest.Request.approveDeveloper(_:))
  {
    uint64_t v29 = (uint64_t *)v0[29];
    uint64_t v30 = v0[26];
    (*(void (**)(uint64_t *, uint64_t))(v0[28] + 96))(v29, v0[27]);
    v0[40] = *v29;
    v0[41] = v29[1];
    v0[42] = v29[2];
    v0[43] = v29[3];
    v0[44] = v29[4];
    v0[45] = v29[5];
    uint64_t v31 = *(void *)(v30 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
    swift_retain();
    int v32 = (void *)swift_task_alloc();
    v0[46] = (uint64_t)v32;
    *int v32 = v0;
    uint64_t v33 = sub_10021E430;
LABEL_15:
    v32[1] = v33;
    v32[3] = v31;
    return _swift_task_switch(sub_100238044, 0, 0);
  }
  if (v28 == enum case for SetPrivateDataRequest.Request.conditionallyApproveDeveloper(_:))
  {
    uint64_t v34 = (uint64_t *)v0[29];
    uint64_t v35 = v0[26];
    (*(void (**)(uint64_t *, uint64_t))(v0[28] + 96))(v34, v0[27]);
    v0[53] = *v34;
    v0[54] = v34[1];
    uint64_t v31 = *(void *)(v35 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
    swift_retain();
    int v32 = (void *)swift_task_alloc();
    v0[55] = (uint64_t)v32;
    *int v32 = v0;
    uint64_t v33 = sub_10021EAFC;
    goto LABEL_15;
  }
  if (v28 == enum case for SetPrivateDataRequest.Request.distributorPriorityList(_:))
  {
    uint64_t v36 = (void **)v0[29];
    (*(void (**)(void **, uint64_t))(v0[28] + 96))(v36, v0[27]);
    uint64_t v37 = *v36;
    swift_retain();
    sub_10054E55C(v37);
LABEL_35:
    swift_release();
    goto LABEL_36;
  }
  if (v28 == enum case for SetPrivateDataRequest.Request.revokeDeveloperApproval(_:))
  {
    uint64_t v38 = v0[29];
    (*(void (**)(uint64_t, uint64_t))(v0[28] + 96))(v38, v0[27]);
    uint64_t v39 = *(void *)v38;
    v0[63] = *(void *)v38;
    uint64_t v40 = *(void *)(v38 + 8);
    v0[64] = v40;
    int v41 = *(unsigned __int8 *)(v38 + 16);
    swift_retain();
    v0[65] = sub_10049D978(v39, v40);
    v0[66] = v42;
    swift_release();
    if (!v41)
    {
      swift_bridgeObjectRelease();
LABEL_36:
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t, uint64_t))v0[39])(v0[37], v0[34]);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v66 = (uint64_t (*)(void))v0[1];
      return v66();
    }
    id v58 = [self enumeratorWithOptions:0];
    v0[67] = (uint64_t)v58;
    uint64_t v59 = swift_allocObject();
    *(void *)(v59 + 16) = v39;
    *(void *)(v59 + 24) = v40;
    v0[6] = (uint64_t)sub_10023AE34;
    v0[7] = v59;
    v0[2] = (uint64_t)_NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = (uint64_t)sub_1004E598C;
    v0[5] = (uint64_t)&unk_10063B948;
    uint64_t v60 = _Block_copy(v0 + 2);
    swift_bridgeObjectRetain();
    swift_release();
    [v58 setFilter:v60];
    _Block_release(v60);
    id v61 = [v58 nextObject];
    if (!v61)
    {
LABEL_33:
      uint64_t v65 = (void *)v0[67];
      swift_bridgeObjectRelease();

      goto LABEL_36;
    }
    id v62 = v61;
    while (1)
    {
      v0[68] = (uint64_t)v62;
      id v63 = [v62 bundleIdentifier];
      if (v63) {
        break;
      }
      uint64_t v64 = (void *)v0[67];

      id v62 = [v64 nextObject];
      if (!v62) {
        goto LABEL_33;
      }
    }
    uint64_t v67 = v63;
    uint64_t v106 = v0 + 65;
    uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v70 = v69;

    static Logger.daemon.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v71 = Logger.logObject.getter();
    os_log_type_t v72 = static os_log_type_t.default.getter();
    BOOL v73 = os_log_type_enabled(v71, v72);
    uint64_t v74 = v0[66];
    if (v73)
    {
      uint64_t v75 = swift_slowAlloc();
      v0[17] = swift_slowAlloc();
      *(_DWORD *)uint64_t v75 = 136446466;
      swift_bridgeObjectRetain();
      *(void *)(v75 + 4) = sub_1000143F4(v68, v70, v0 + 17);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v75 + 12) = 2082;
      if (v74)
      {
        unint64_t v76 = v0[66];
      }
      else
      {
        unint64_t v79 = v0[64];
        swift_bridgeObjectRetain();
        uint64_t v106 = v0 + 63;
        unint64_t v76 = v79;
      }
      uint64_t v80 = *v106;
      uint64_t v103 = v0[32];
      char v107 = (void (*)(uint64_t, void))v0[38];
      *(void *)typea = v0[30];
      swift_bridgeObjectRetain();
      *(void *)(v75 + 14) = sub_1000143F4(v80, v76, v0 + 17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v71, v72, "Uninstalling %{public}s after revoking approval of %{public}s", (uint8_t *)v75, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v107(v103, *(void *)typea);
      uint64_t v24 = (void (*)(uint64_t, uint64_t))v0[38];
    }
    else
    {
      uint64_t v77 = v0[32];
      uint64_t v78 = v0[30];
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
      v24(v77, v78);
    }
    v0[69] = (uint64_t)v24;
    id v81 = objc_allocWithZone((Class)IXApplicationIdentity);
    NSString v82 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v83 = [v81 initWithBundleID:v82];
    v0[70] = (uint64_t)v83;

    id v84 = [objc_allocWithZone((Class)IXUninstallOptions) init];
    v0[71] = (uint64_t)v84;
    if (v84)
    {
      id v92 = v84;
      [v84 setRequestUserConfirmation:0];
      uint64_t v93 = sub_10018B1DC(0, &qword_10065C700);
      uint64_t v94 = (void *)swift_task_alloc();
      v0[72] = (uint64_t)v94;
      v94[2] = v93;
      v94[3] = v83;
      void v94[4] = v92;
      uint64_t v95 = (void *)swift_task_alloc();
      v0[73] = (uint64_t)v95;
      type metadata accessor for IXUninstallDisposition(0);
      uint64_t v91 = v96;
      *uint64_t v95 = v0;
      v95[1] = sub_10021F3B0;
      unint64_t v87 = 0xD00000000000001BLL;
      unint64_t v88 = 0x80000001005B9270;
      uint64_t v89 = sub_1001C5DC8;
      id v84 = v0 + 16;
      uint64_t v85 = 0;
      uint64_t v86 = 0;
      uint64_t v90 = v94;
    }
    else
    {
      __break(1u);
    }
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v84, v85, v86, v87, v88, v89, v90, v91);
  }
  else
  {
    if (v28 == enum case for SetPrivateDataRequest.Request.showInstallSheet(_:))
    {
      uint64_t v43 = v0[29];
      (*(void (**)(uint64_t, uint64_t))(v0[28] + 96))(v43, v0[27]);
      uint64_t v44 = *(void *)v43;
      uint64_t v45 = *(void *)(v43 + 8);
      char v46 = *(unsigned char *)(v43 + 16);
      swift_retain();
      unint64_t v47 = (void *)sub_100551B90();
      uint64_t v48 = sub_100553778(v44, v45, v46, v47);
      swift_bridgeObjectRelease();
      sub_100551F50(v48);
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    if (v28 == enum case for SetPrivateDataRequest.Request.searchTerritoryForDistributor(_:))
    {
      uint64_t v49 = (uint64_t *)v0[29];
      uint64_t v50 = v0[26];
      (*(void (**)(uint64_t *, uint64_t))(v0[28] + 96))(v49, v0[27]);
      uint64_t v51 = *v49;
      uint64_t v52 = v49[1];
      v0[75] = v52;
      uint64_t v53 = v49[2];
      uint64_t v54 = v49[3];
      v0[76] = v54;
      uint64_t v55 = *(void *)(*(void *)(v50 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies) + 296);
      v0[77] = v55;
      uint64_t v56 = (void *)swift_task_alloc();
      v0[78] = (uint64_t)v56;
      v56[2] = v51;
      v56[3] = v52;
      v56[4] = v53;
      v56[5] = v54;
      uint64_t v105 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100660798 + dword_100660798);
      swift_retain();
      uint64_t v57 = (void *)swift_task_alloc();
      v0[79] = (uint64_t)v57;
      *uint64_t v57 = v0;
      v57[1] = sub_10021FB18;
      return v105((uint64_t)v105, (uint64_t)sub_10023AB90, (uint64_t)v56, v55);
    }
    else
    {
      return _assertionFailure(_:_:file:line:flags:)();
    }
  }
}

uint64_t sub_10021E430(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[47] = a1;
  v4[48] = a2;
  v4[49] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_10021EA1C;
  }
  else {
    uint64_t v5 = sub_10021E548;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10021E548()
{
  uint64_t v1 = *(void *)(v0[26] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies);
  v0[50] = v1;
  v0[51] = *(void *)(v1 + 152);
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[52] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10021E614;
  uint64_t v3 = v0[47];
  return v5(v3);
}

uint64_t sub_10021E614(char a1)
{
  *(unsigned char *)(*(void *)v1 + 648) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10021E734, 0, 0);
}

uint64_t sub_10021E734()
{
  uint64_t v1 = *(void *)(v0 + 360);
  if (*(unsigned char *)(v0 + 648) != 1)
  {
    uint64_t v17 = *(void *)(v0 + 296);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
    uint64_t v11 = *(void *)(v0 + 272);
    uint64_t v12 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 104))(v13, enum case for MarketplaceKitError.featureUnavailable(_:), v12);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v17;
    uint64_t v10 = v11;
    goto LABEL_5;
  }
  uint64_t v2 = *(void *)(v0 + 392);
  unint64_t v4 = *(void *)(v0 + 344);
  uint64_t v3 = *(void *)(v0 + 352);
  unint64_t v6 = *(void *)(v0 + 328);
  uint64_t v5 = *(void *)(v0 + 336);
  uint64_t v7 = *(void *)(v0 + 320);
  swift_retain();
  sub_10049D45C(v7, v6, v5, v4, v3, v1);
  if (v2)
  {
    uint64_t v16 = *(void *)(v0 + 296);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
    uint64_t v8 = *(void *)(v0 + 272);
    swift_release();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v16;
    uint64_t v10 = v8;
LABEL_5:
    v18(v9, v10);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_7;
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(void, void))(v0 + 312))(*(void *)(v0 + 296), *(void *)(v0 + 272));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
LABEL_7:
  return v14();
}

uint64_t sub_10021EA1C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[39];
  uint64_t v2 = v0[37];
  uint64_t v3 = v0[34];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10021EAFC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (void *)*v3;
  v4[56] = a1;
  v4[57] = a2;
  v4[58] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_10021F020;
  }
  else {
    uint64_t v5 = sub_10021EC14;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10021EC14()
{
  v0[59] = *(void *)(*(void *)(v0[26] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies) + 152);
  unint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[60] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10021ECDC;
  uint64_t v2 = v0[56];
  return v4(v2);
}

uint64_t sub_10021ECDC(char a1)
{
  *(unsigned char *)(*(void *)v1 + 649) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10021EDFC, 0, 0);
}

uint64_t sub_10021EDFC()
{
  if (*(unsigned char *)(v0 + 649) == 1)
  {
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100661100 + dword_100661100);
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 488) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_10021F0E8;
    uint64_t v3 = *(void *)(v0 + 424);
    uint64_t v2 = *(void *)(v0 + 432);
    return v11(v3, v2);
  }
  else
  {
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
    uint64_t v6 = *(void *)(v0 + 296);
    uint64_t v7 = *(void *)(v0 + 272);
    uint64_t v8 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v9, enum case for MarketplaceKitError.featureUnavailable(_:), v8);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    v5(v6, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_10021F020()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[39];
  uint64_t v2 = v0[37];
  uint64_t v3 = v0[34];
  swift_bridgeObjectRelease();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10021F0E8()
{
  *(void *)(*(void *)v1 + 496) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10021F2D4;
  }
  else {
    uint64_t v2 = sub_10021F1FC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10021F1FC()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(void, void))(v0 + 312))(*(void *)(v0 + 296), *(void *)(v0 + 272));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10021F2D4()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[39];
  uint64_t v2 = v0[37];
  uint64_t v3 = v0[34];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10021F3B0()
{
  *(void *)(*(void *)v1 + 592) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10021FA00;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10021F4CC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10021F4CC()
{
  uint64_t v1 = *(void **)(v0 + 568);
  uint64_t v2 = *(void **)(v0 + 560);
  uint64_t v3 = *(void **)(v0 + 536);

  id v4 = [v3 nextObject];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 552);
    while (1)
    {
      *(void *)(v0 + 544) = v5;
      id v7 = [v5 bundleIdentifier];
      if (v7) {
        break;
      }
      uint64_t v8 = *(void **)(v0 + 536);

      id v5 = [v8 nextObject];
      if (!v5) {
        goto LABEL_5;
      }
    }
    uint64_t v12 = v7;
    char v46 = (uint64_t *)(v0 + 136);
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;

    static Logger.daemon.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = *(void *)(v0 + 528);
    if (v18)
    {
      uint64_t v20 = swift_slowAlloc();
      *char v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136446466;
      swift_bridgeObjectRetain();
      *(void *)(v20 + 4) = sub_1000143F4(v13, v15, v46);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2082;
      if (v19)
      {
        uint64_t v21 = (uint64_t *)(v0 + 520);
        unint64_t v22 = *(void *)(v0 + 528);
      }
      else
      {
        unint64_t v25 = *(void *)(v0 + 512);
        uint64_t v21 = (uint64_t *)(v0 + 504);
        swift_bridgeObjectRetain();
        unint64_t v22 = v25;
      }
      uint64_t v26 = *v21;
      uint64_t v44 = *(void *)(v0 + 256);
      uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
      uint64_t v43 = *(void *)(v0 + 240);
      swift_bridgeObjectRetain();
      *(void *)(v20 + 14) = sub_1000143F4(v26, v22, v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Uninstalling %{public}s after revoking approval of %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v45(v44, v43);
      uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
    }
    else
    {
      uint64_t v23 = *(void *)(v0 + 256);
      uint64_t v24 = *(void *)(v0 + 240);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
      v6(v23, v24);
    }
    *(void *)(v0 + 552) = v6;
    id v27 = objc_allocWithZone((Class)IXApplicationIdentity);
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v29 = [v27 initWithBundleID:v28];
    *(void *)(v0 + 560) = v29;

    id v30 = [objc_allocWithZone((Class)IXUninstallOptions) init];
    *(void *)(v0 + 568) = v30;
    if (v30)
    {
      id v38 = v30;
      [v30 setRequestUserConfirmation:0];
      uint64_t v39 = sub_10018B1DC(0, &qword_10065C700);
      uint64_t v40 = (void *)swift_task_alloc();
      *(void *)(v0 + 576) = v40;
      v40[2] = v39;
      v40[3] = v29;
      void v40[4] = v38;
      int v41 = (void *)swift_task_alloc();
      *(void *)(v0 + 584) = v41;
      type metadata accessor for IXUninstallDisposition(0);
      uint64_t v37 = v42;
      *int v41 = v0;
      v41[1] = sub_10021F3B0;
      unint64_t v34 = 0x80000001005B9270;
      uint64_t v35 = sub_1001C5DC8;
      id v30 = (id)(v0 + 128);
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      unint64_t v33 = 0xD00000000000001BLL;
      uint64_t v36 = v40;
    }
    else
    {
      __break(1u);
    }
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v30, v31, v32, v33, v34, v35, v36, v37);
  }
  else
  {
LABEL_5:
    uint64_t v9 = *(void **)(v0 + 536);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    (*(void (**)(void, void))(v0 + 312))(*(void *)(v0 + 296), *(void *)(v0 + 272));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_10021FA00()
{
  uint64_t v1 = (void *)v0[71];
  uint64_t v2 = (void *)v0[70];
  uint64_t v3 = (void *)v0[68];
  id v4 = (void *)v0[67];
  uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[39];
  uint64_t v5 = v0[37];
  uint64_t v6 = v0[34];
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10021FB18()
{
  *(void *)(*(void *)v1 + 640) = v0;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10021FD64;
  }
  else {
    uint64_t v2 = sub_10021FCA8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10021FCA8()
{
  (*(void (**)(void, void))(v0 + 312))(*(void *)(v0 + 296), *(void *)(v0 + 272));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10021FD64()
{
  (*(void (**)(void, void))(v0 + 312))(*(void *)(v0 + 296), *(void *)(v0 + 272));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10021FE1C(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = [a1 iTunesMetadata];
  id v6 = [v5 distributorInfo];

  id v7 = [v6 developerID];
  if (!v7) {
    return 0;
  }
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  if (v8 == a2 && v10 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      return 0;
    }
  }
  return sub_1004FC1A4() & 1;
}

uint64_t sub_10021FF40(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  swift_retain();
  Swift::Int v16 = sub_100010C5C((uint64_t)&off_100637A70);
  swift_arrayDestroy();
  uint64_t v17 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
  BOOL v18 = (void *)swift_allocObject();
  v18[2] = a1;
  v18[3] = a2;
  v18[4] = v4;
  sub_100012670(a1, a2);
  id v19 = v4;
  sub_100016EDC((uint64_t)"Fetch data for distributor", 26, 2, a3, a4, 1, (uint64_t)v14, v16, 0, (uint64_t)v11, (uint64_t)&unk_10065C678, (uint64_t)v18, (uint64_t)&unk_10063B890, (uint64_t)&unk_10065C688);
  swift_bridgeObjectRelease();
  swift_release();
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_10022019C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[16] = a8;
  v8[17] = v14;
  v8[14] = a6;
  v8[15] = a7;
  v8[12] = a4;
  v8[13] = a5;
  v8[10] = a1;
  v8[11] = a3;
  uint64_t Data = type metadata accessor for FetchDataResponse.Response();
  v8[18] = Data;
  v8[19] = *(void *)(Data - 8);
  v8[20] = swift_task_alloc();
  Publicuint64_t Data = type metadata accessor for FetchPublicDataRequest.Request();
  v8[21] = PublicData;
  v8[22] = *(void *)(PublicData - 8);
  v8[23] = swift_task_alloc();
  uint64_t PublicDataRequest = type metadata accessor for FetchPublicDataRequest();
  v8[24] = PublicDataRequest;
  v8[25] = *(void *)(PublicDataRequest - 8);
  v8[26] = swift_task_alloc();
  return _swift_task_switch(sub_100220328, 0, 0);
}

uint64_t sub_100220328()
{
  uint64_t v1 = audit_token_t.signingIdentifier.getter(v0[11], v0[12], v0[13], v0[14]);
  v0[27] = v2;
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v4 = v2;
    uint64_t v5 = v0[26];
    uint64_t v6 = v0[24];
    uint64_t v7 = v0[15];
    unint64_t v8 = v0[16];
    v0[2] = v7;
    v0[3] = v8;
    v0[4] = v0 + 2;
    v0[5] = v5;
    sub_100012670(v7, v8);
    v0[6] = &type metadata for Data;
    v0[7] = v6;
    v0[8] = sub_1000175C4();
    v0[9] = sub_1000139E4(&qword_10065C6C0, (void (*)(uint64_t))&type metadata accessor for FetchPublicDataRequest);
    decodeXPCValues<each A, B>(from:)();
    uint64_t v14 = v0[22];
    uint64_t v13 = v0[23];
    uint64_t v15 = v0[21];
    sub_100013510(v0[2], v0[3]);
    FetchPublicDataRequest.request.getter();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 88))(v13, v15) == enum case for FetchPublicDataRequest.Request.searchTerritory(_:))
    {
      uint64_t v16 = *(void *)(*(void *)(v0[17] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies) + 296);
      v0[28] = v16;
      uint64_t v17 = swift_task_alloc();
      v0[29] = v17;
      *(void *)(v17 + 16) = v3;
      *(void *)(v17 + 24) = v4;
      uint64_t v18 = swift_task_alloc();
      v0[30] = v18;
      *(void *)(v18 + 16) = sub_10023ACAC;
      *(void *)(v18 + 24) = v17;
      uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1006607A0 + dword_1006607A0);
      swift_retain();
      id v19 = (void *)swift_task_alloc();
      v0[31] = v19;
      *id v19 = v0;
      v19[1] = sub_1002206EC;
      return v20((uint64_t)sub_10023ACC8, v18, v16);
    }
    else
    {
      return _assertionFailure(_:_:file:line:flags:)();
    }
  }
  else
  {
    uint64_t v9 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v9 - 8) + 104))(v10, enum case for MarketplaceKitError.featureUnavailable(_:), v9);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_1002206EC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 256) = v2;
  swift_task_dealloc();
  swift_release();
  if (v2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = sub_100220978;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v6 + 264) = a2;
    *(void *)(v6 + 272) = a1;
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = sub_100220894;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_100220894()
{
  uint64_t v1 = v0[33];
  uint64_t v3 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v4 = v0[24];
  uint64_t v5 = v0[19];
  uint64_t v6 = (void *)v0[20];
  uint64_t v7 = v0[18];
  void *v6 = v0[34];
  v6[1] = v1;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v6, enum case for FetchDataResponse.Response.searchTerritory(_:), v7);
  FetchDataResponse.init(response:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100220978()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[25];
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100220A20(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = sub_1000172F8(&qword_10065C6C8);
  LOWORD(v14) = 1;
  uint64_t v16 = sub_10000DDFC((unint64_t *)&qword_10065C6D0, &qword_10065C6C8);
  *((void *)&v14 + 1) = 1;
  sub_1000172F8(&qword_10065C6D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
  sub_10018B164(&v14, inited + 32);
  id v7 = a1;
  sub_100555910(inited);
  unint64_t v8 = (void *)sub_1002EAB00(0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_1002EAA64, 0, v7);

  swift_bridgeObjectRelease();
  if (!v8) {
    return 0;
  }
  uint64_t v9 = sub_100241818(4, v8);

  if (!v9) {
    return 0;
  }
  if (*(void *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_100016D20(a2, a3);
    if (v11)
    {
      uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 16 * v10);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v12 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
  }
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100220C28(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  char v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  long long v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  swift_retain();
  Swift::Int v16 = sub_100010C5C((uint64_t)&off_100637AD0);
  swift_arrayDestroy();
  uint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = a1;
  v17[3] = a2;
  v17[4] = v4;
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = &unk_10065C640;
  *(void *)(v19 + 24) = v17;
  sub_100012670(a1, a2);
  id v20 = v4;
  swift_retain();
  sub_100016EDC((uint64_t)"Set data for distributor", 24, 2, a3, a4, 1, (uint64_t)v14, v16, 0, (uint64_t)v11, (uint64_t)&unk_10065C650, v19, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  swift_release();
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_100220EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = a7;
  v8[16] = a8;
  v8[13] = a5;
  v8[14] = a6;
  v8[11] = a3;
  v8[12] = a4;
  v8[10] = a2;
  uint64_t v9 = type metadata accessor for UUID();
  v8[17] = v9;
  v8[18] = *(void *)(v9 - 8);
  v8[19] = swift_task_alloc();
  v8[20] = swift_task_alloc();
  v8[21] = swift_task_alloc();
  v8[22] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SetPublicDataRequest.Request();
  v8[23] = v10;
  v8[24] = *(void *)(v10 - 8);
  v8[25] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for SetPublicDataRequest();
  v8[26] = v11;
  v8[27] = *(void *)(v11 - 8);
  v8[28] = swift_task_alloc();
  return _swift_task_switch(sub_10022106C, 0, 0);
}

uint64_t sub_10022106C()
{
  uint64_t v1 = v0[14];
  unint64_t v2 = v0[15];
  v0[2] = v1;
  v0[4] = v0 + 2;
  v0[5] = v0[28];
  uint64_t v3 = v0[26];
  v0[3] = v2;
  sub_100012670(v1, v2);
  v0[6] = &type metadata for Data;
  v0[7] = v3;
  v0[8] = sub_1000175C4();
  v0[9] = sub_1000139E4(&qword_10065C658, (void (*)(uint64_t))&type metadata accessor for SetPublicDataRequest);
  decodeXPCValues<each A, B>(from:)();
  unint64_t v6 = v0[12];
  unint64_t v7 = v0[13];
  unint64_t v9 = v0[10];
  unint64_t v8 = v0[11];
  sub_100013510(v0[2], v0[3]);
  uint64_t v10 = audit_token_t.signingIdentifier.getter(v9, v8, v6, v7);
  v0[29] = v11;
  uint64_t v12 = v0[28];
  if (v11)
  {
    uint64_t v13 = v10;
    uint64_t v14 = v11;
    uint64_t v16 = v0[24];
    uint64_t v15 = v0[25];
    uint64_t v17 = v0[23];
    SetPublicDataRequest.request.getter();
    int v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v15, v17);
    if (v18 == enum case for SetPublicDataRequest.Request.searchTerritory(_:))
    {
      uint64_t v19 = (uint64_t *)v0[25];
      uint64_t v20 = v0[16];
      (*(void (**)(uint64_t *, void))(v0[24] + 96))(v19, v0[23]);
      uint64_t v21 = *v19;
      uint64_t v22 = v19[1];
      v0[73] = v22;
      uint64_t v23 = *(void *)(*(void *)(v20 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies) + 296);
      v0[74] = v23;
      uint64_t v24 = (void *)swift_task_alloc();
      v0[75] = v24;
      v24[2] = v21;
      v24[3] = v22;
      v24[4] = v13;
      v24[5] = v14;
      uint64_t v66 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100660798 + dword_100660798);
      swift_retain();
      unint64_t v25 = (void *)swift_task_alloc();
      v0[76] = v25;
      *unint64_t v25 = v0;
      v25[1] = sub_100223F14;
      return v66((uint64_t)v66, (uint64_t)sub_10023AB90, (uint64_t)v24, v23);
    }
    else
    {
      if (v18 == enum case for SetPublicDataRequest.Request.cancelPendingInstall(_:))
      {
        uint64_t v31 = v0[24];
        uint64_t v30 = v0[25];
        uint64_t v33 = v0[22];
        uint64_t v32 = v0[23];
        uint64_t v34 = v0[17];
        uint64_t v35 = v0[18];
        uint64_t v36 = v0[16];
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v31 + 96))(v30, v32);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v33, v30, v34);
        uint64_t v37 = *(void *)(v36 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
        swift_retain();
        id v38 = (void *)swift_task_alloc();
        v0[30] = v38;
        *id v38 = v0;
        uint64_t v39 = sub_100221824;
      }
      else if (v18 == enum case for SetPublicDataRequest.Request.confirmPendingInstall(_:))
      {
        uint64_t v41 = v0[24];
        uint64_t v40 = v0[25];
        uint64_t v42 = v0[23];
        uint64_t v43 = v0[21];
        uint64_t v44 = v0[17];
        uint64_t v45 = v0[18];
        uint64_t v46 = v0[16];
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v41 + 96))(v40, v42);
        uint64_t v47 = sub_1000172F8(&qword_10065C668);
        uint64_t v48 = (void *)(v40 + *(int *)(v47 + 48));
        v0[39] = *v48;
        v0[40] = v48[1];
        uint64_t v49 = (void *)(v40 + *(int *)(v47 + 64));
        v0[41] = *v49;
        v0[42] = v49[1];
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v43, v40, v44);
        uint64_t v37 = *(void *)(v46 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
        swift_retain();
        id v38 = (void *)swift_task_alloc();
        v0[43] = v38;
        *id v38 = v0;
        uint64_t v39 = sub_1002221A0;
      }
      else if (v18 == enum case for SetPublicDataRequest.Request.cancelPendingInstallBatch(_:))
      {
        uint64_t v51 = v0[24];
        uint64_t v50 = v0[25];
        uint64_t v52 = v0[23];
        uint64_t v53 = v0[20];
        uint64_t v54 = v0[17];
        uint64_t v55 = v0[18];
        uint64_t v56 = v0[16];
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v51 + 96))(v50, v52);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 32))(v53, v50, v54);
        uint64_t v37 = *(void *)(v56 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
        swift_retain();
        id v38 = (void *)swift_task_alloc();
        v0[52] = v38;
        *id v38 = v0;
        uint64_t v39 = sub_100222B98;
      }
      else
      {
        if (v18 != enum case for SetPublicDataRequest.Request.confirmPendingInstallBatch(_:)) {
          return _assertionFailure(_:_:file:line:flags:)();
        }
        uint64_t v58 = v0[24];
        uint64_t v57 = v0[25];
        uint64_t v59 = v0[23];
        uint64_t v61 = v0[18];
        uint64_t v60 = v0[19];
        uint64_t v63 = v0[16];
        uint64_t v62 = v0[17];
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v58 + 96))(v57, v59);
        uint64_t v64 = sub_1000172F8(&qword_10065C660);
        v0[61] = *(void *)(v57 + *(int *)(v64 + 48));
        uint64_t v65 = (void *)(v57 + *(int *)(v64 + 64));
        v0[62] = *v65;
        v0[63] = v65[1];
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 32))(v60, v57, v62);
        uint64_t v37 = *(void *)(v63 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
        swift_retain();
        id v38 = (void *)swift_task_alloc();
        v0[64] = v38;
        *id v38 = v0;
        uint64_t v39 = sub_100223510;
      }
      v38[1] = v39;
      v38[3] = v37;
      return _swift_task_switch(sub_100238044, 0, 0);
    }
  }
  else
  {
    uint64_t v26 = v0[26];
    uint64_t v27 = v0[27];
    uint64_t v28 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v28 - 8) + 104))(v29, enum case for MarketplaceKitError.featureUnavailable(_:), v28);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v12, v26);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_100221824(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[31] = a1;
  v4[32] = a2;
  v4[33] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_100221D9C;
  }
  else {
    uint64_t v5 = sub_10022193C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10022193C()
{
  v0[34] = *(void *)(*(void *)(v0[16] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies) + 152);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[35] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100221A04;
  uint64_t v2 = v0[31];
  return v4(v2);
}

uint64_t sub_100221A04(char a1)
{
  *(unsigned char *)(*(void *)v1 + 624) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100221B24, 0, 0);
}

uint64_t sub_100221B24()
{
  if (*(unsigned char *)(v0 + 624) == 1)
  {
    uint64_t v1 = audit_token_t.signingIdentifier.getter(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104));
    uint64_t v3 = v2;
    *(void *)(v0 + 288) = v2;
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1006610F0 + dword_1006610F0);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 296) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100221E7C;
    uint64_t v5 = *(void *)(v0 + 176);
    return v15(v5, v1, v3, 0, 0, 0, 0, 0xF000000000000000);
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 216);
    uint64_t v16 = *(void *)(v0 + 224);
    uint64_t v8 = *(void *)(v0 + 208);
    uint64_t v9 = *(void *)(v0 + 176);
    uint64_t v11 = *(void *)(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 144);
    uint64_t v12 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 104))(v13, enum case for MarketplaceKitError.featureUnavailable(_:), v12);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v16, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
}

uint64_t sub_100221D9C()
{
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v3 = v0[26];
  (*(void (**)(void, void))(v0[18] + 8))(v0[22], v0[17]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100221E7C()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1002220A0;
  }
  else {
    uint64_t v2 = sub_100221FB0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100221FB0()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(void, void))(v0[27] + 8))(v0[28], v0[26]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1002220A0()
{
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v3 = v0[26];
  uint64_t v4 = v0[22];
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[18];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1002221A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[44] = a1;
  v4[45] = a2;
  v4[46] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_100222740;
  }
  else
  {
    uint64_t v5 = sub_1002222C0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1002222C0()
{
  v0[47] = *(void *)(*(void *)(v0[16] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies) + 152);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[48] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100222388;
  uint64_t v2 = v0[44];
  return v4(v2);
}

uint64_t sub_100222388(char a1)
{
  *(unsigned char *)(*(void *)v1 + 625) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1002224A8, 0, 0);
}

uint64_t sub_1002224A8()
{
  if (*(unsigned char *)(v0 + 625) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 320);
    uint64_t v2 = audit_token_t.signingIdentifier.getter(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104));
    uint64_t v4 = v3;
    *(void *)(v0 + 392) = v3;
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1006610F0 + dword_1006610F0);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100222830;
    uint64_t v6 = *(void *)(v0 + 328);
    uint64_t v7 = *(void *)(v0 + 336);
    uint64_t v8 = *(void *)(v0 + 312);
    uint64_t v9 = *(void *)(v0 + 168);
    return v21(v9, v2, v4, 1, v8, v1, v6, v7);
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 328);
    uint64_t v12 = *(void *)(v0 + 216);
    uint64_t v22 = *(void *)(v0 + 224);
    unint64_t v19 = *(void *)(v0 + 336);
    uint64_t v20 = *(void *)(v0 + 208);
    uint64_t v18 = *(void *)(v0 + 168);
    uint64_t v14 = *(void *)(v0 + 136);
    uint64_t v13 = *(void *)(v0 + 144);
    uint64_t v15 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v15 - 8) + 104))(v16, enum case for MarketplaceKitError.featureUnavailable(_:), v15);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_10018AE44(v11, v19);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v18, v14);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v22, v20);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_100222740()
{
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v3 = v0[26];
  uint64_t v4 = v0[21];
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[18];
  sub_10018AE44(v0[41], v0[42]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100222830()
{
  *(void *)(*(void *)v1 + 408) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_100222A80;
  }
  else {
    uint64_t v2 = sub_100222980;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100222980()
{
  uint64_t v2 = v0[41];
  unint64_t v1 = v0[42];
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[17];
  uint64_t v5 = v0[18];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_10018AE44(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(void, void))(v0[27] + 8))(v0[28], v0[26]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100222A80()
{
  uint64_t v2 = v0[41];
  unint64_t v1 = v0[42];
  uint64_t v4 = v0[27];
  uint64_t v3 = v0[28];
  uint64_t v5 = v0[26];
  uint64_t v6 = v0[21];
  uint64_t v7 = v0[17];
  uint64_t v8 = v0[18];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_10018AE44(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100222B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[53] = a1;
  v4[54] = a2;
  v4[55] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_10022310C;
  }
  else {
    uint64_t v5 = sub_100222CB0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100222CB0()
{
  v0[56] = *(void *)(*(void *)(v0[16] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies) + 152);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  unint64_t v1 = (void *)swift_task_alloc();
  v0[57] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_100222D78;
  uint64_t v2 = v0[53];
  return v4(v2);
}

uint64_t sub_100222D78(char a1)
{
  *(unsigned char *)(*(void *)v1 + 626) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100222E98, 0, 0);
}

uint64_t sub_100222E98()
{
  if (*(unsigned char *)(v0 + 626) == 1)
  {
    uint64_t v1 = audit_token_t.signingIdentifier.getter(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104));
    uint64_t v3 = v2;
    *(void *)(v0 + 464) = v2;
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_100662670
                                                                                             + dword_100662670);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 472) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1002231EC;
    uint64_t v5 = *(void *)(v0 + 160);
    return v15(v5, v1, v3, 0, 0, 0, 0xF000000000000000);
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 216);
    uint64_t v16 = *(void *)(v0 + 224);
    uint64_t v8 = *(void *)(v0 + 208);
    uint64_t v9 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 144);
    uint64_t v12 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 104))(v13, enum case for MarketplaceKitError.featureUnavailable(_:), v12);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v16, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
}

uint64_t sub_10022310C()
{
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v3 = v0[26];
  (*(void (**)(void, void))(v0[18] + 8))(v0[20], v0[17]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1002231EC()
{
  *(void *)(*(void *)v1 + 480) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_100223410;
  }
  else {
    uint64_t v2 = sub_100223320;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100223320()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(void, void))(v0[27] + 8))(v0[28], v0[26]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100223410()
{
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v3 = v0[26];
  uint64_t v4 = v0[20];
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[18];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100223510(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[65] = a1;
  v4[66] = a2;
  v4[67] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_100223AB4;
  }
  else
  {
    uint64_t v5 = sub_100223634;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100223634()
{
  v0[68] = *(void *)(*(void *)(v0[16] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies) + 152);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[69] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002236FC;
  uint64_t v2 = v0[65];
  return v4(v2);
}

uint64_t sub_1002236FC(char a1)
{
  *(unsigned char *)(*(void *)v1 + 627) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10022381C, 0, 0);
}

uint64_t sub_10022381C()
{
  if (*(unsigned char *)(v0 + 627) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 488);
    uint64_t v2 = audit_token_t.signingIdentifier.getter(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104));
    uint64_t v4 = v3;
    *(void *)(v0 + 560) = v3;
    uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_100662670
                                                                                             + dword_100662670);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 568) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100223BA4;
    uint64_t v6 = *(void *)(v0 + 496);
    uint64_t v7 = *(void *)(v0 + 504);
    uint64_t v8 = *(void *)(v0 + 152);
    return v20(v8, v2, v4, 1, v1, v6, v7);
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 496);
    uint64_t v11 = *(void *)(v0 + 216);
    uint64_t v21 = *(void *)(v0 + 224);
    unint64_t v18 = *(void *)(v0 + 504);
    uint64_t v19 = *(void *)(v0 + 208);
    uint64_t v12 = *(void *)(v0 + 144);
    uint64_t v17 = *(void *)(v0 + 152);
    uint64_t v13 = *(void *)(v0 + 136);
    uint64_t v14 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v14 - 8) + 104))(v15, enum case for MarketplaceKitError.featureUnavailable(_:), v14);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_10018AE44(v10, v18);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v17, v13);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v21, v19);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
}

uint64_t sub_100223AB4()
{
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v3 = v0[26];
  uint64_t v5 = v0[18];
  uint64_t v4 = v0[19];
  uint64_t v6 = v0[17];
  sub_10018AE44(v0[62], v0[63]);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100223BA4()
{
  *(void *)(*(void *)v1 + 576) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_100223DF8;
  }
  else {
    uint64_t v2 = sub_100223CF4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100223CF4()
{
  uint64_t v2 = v0[62];
  unint64_t v1 = v0[63];
  uint64_t v4 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v5 = v0[17];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_10018AE44(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(void, void))(v0[27] + 8))(v0[28], v0[26]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100223DF8()
{
  uint64_t v2 = v0[62];
  unint64_t v1 = v0[63];
  uint64_t v4 = v0[27];
  uint64_t v3 = v0[28];
  uint64_t v5 = v0[26];
  uint64_t v7 = v0[18];
  uint64_t v6 = v0[19];
  uint64_t v8 = v0[17];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_10018AE44(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100223F14()
{
  *(void *)(*(void *)v1 + 616) = v0;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100224164;
  }
  else {
    uint64_t v2 = sub_1002240A4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002240A4()
{
  (*(void (**)(void, void))(v0[27] + 8))(v0[28], v0[26]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100224164()
{
  (*(void (**)(void, void))(v0[27] + 8))(v0[28], v0[26]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100224258(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  swift_retain();
  Swift::Int v16 = sub_100010C5C((uint64_t)&off_100637B30);
  swift_arrayDestroy();
  uint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = a1;
  v17[3] = a2;
  v17[4] = v4;
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  sub_100012670(a1, a2);
  id v19 = v4;
  sub_100016EDC((uint64_t)"Perform action", 14, 2, a3, a4, 1, (uint64_t)v14, v16, 1u, (uint64_t)v11, (uint64_t)&unk_10065C5E8, (uint64_t)v17, (uint64_t)&unk_10063B7A0, (uint64_t)&unk_10065C5F8);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_1002244B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[25] = a8;
  v8[26] = v17;
  v8[23] = a6;
  v8[24] = a7;
  v8[21] = a4;
  v8[22] = a5;
  v8[19] = a1;
  v8[20] = a3;
  uint64_t v9 = type metadata accessor for LogKey.Prefix();
  v8[27] = v9;
  v8[28] = *(void *)(v9 - 8);
  v8[29] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for PerformActionResponse.Response();
  v8[30] = v10;
  v8[31] = *(void *)(v10 - 8);
  v8[32] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for PerformActionRequest.Request();
  v8[33] = v11;
  v8[34] = *(void *)(v11 - 8);
  v8[35] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for PerformActionResponse();
  v8[36] = v12;
  v8[37] = *(void *)(v12 - 8);
  v8[38] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for Logger();
  v8[39] = v13;
  v8[40] = *(void *)(v13 - 8);
  v8[41] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for PerformActionRequest();
  v8[42] = v14;
  v8[43] = *(void *)(v14 - 8);
  v8[44] = swift_task_alloc();
  v8[45] = swift_task_alloc();
  return _swift_task_switch(sub_100224768, 0, 0);
}

uint64_t sub_100224768()
{
  uint64_t v33 = v0;
  uint64_t v1 = v0[24];
  unint64_t v2 = v0[25];
  v0[7] = v1;
  v0[9] = v0 + 7;
  v0[10] = v0[45];
  uint64_t v3 = v0[42];
  v0[8] = v2;
  sub_100012670(v1, v2);
  v0[11] = &type metadata for Data;
  v0[12] = v3;
  v0[13] = sub_1000175C4();
  v0[14] = sub_1000139E4(&qword_10065C630, (void (*)(uint64_t))&type metadata accessor for PerformActionRequest);
  decodeXPCValues<each A, B>(from:)();
  uint64_t v4 = v0[44];
  uint64_t v5 = v0[45];
  uint64_t v6 = v0[42];
  uint64_t v7 = v0[43];
  sub_100013510(v0[7], v0[8]);
  static Logger.daemon.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v4, v5, v6);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v12 = v0[43];
  uint64_t v11 = v0[44];
  uint64_t v13 = v0[41];
  uint64_t v14 = v0[42];
  uint64_t v16 = v0[39];
  uint64_t v15 = v0[40];
  if (v10)
  {
    unint64_t v29 = v0[22];
    unint64_t v30 = v0[23];
    unint64_t v27 = v0[20];
    unint64_t v28 = v0[21];
    uint64_t v17 = swift_slowAlloc();
    v32[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136446466;
    os_log_type_t type = v9;
    uint64_t v18 = PerformActionRequest.stringValue.getter();
    v0[17] = sub_1000143F4(v18, v19, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v20(v11, v14);
    *(_WORD *)(v17 + 12) = 2082;
    uint64_t v21 = audit_token_t.signingIdentifier.getter(v27, v28, v29, v30);
    if (v22)
    {
      unint64_t v23 = v22;
    }
    else
    {
      uint64_t v21 = 0x6E776F6E6B6E55;
      unint64_t v23 = 0xE700000000000000;
    }
    v0[18] = sub_1000143F4(v21, v23, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, type, "Perform action request %{public}s called by %{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v16);
  }
  else
  {
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v20(v0[44], v0[42]);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v16);
  }
  v0[46] = v20;
  uint64_t v24 = *(void *)(v0[26] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  unint64_t v25 = (void *)swift_task_alloc();
  v0[47] = v25;
  *unint64_t v25 = v0;
  v25[1] = sub_100224BB8;
  v25[3] = v24;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_100224BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[48] = a1;
  v5[49] = a2;
  v5[50] = a3;
  v5[51] = v3;
  swift_task_dealloc();
  if (v3) {
    uint64_t v6 = sub_100225654;
  }
  else {
    uint64_t v6 = sub_100224CD0;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_100224CD0()
{
  uint64_t v1 = *(void *)(v0[26] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies);
  v0[52] = v1;
  v0[53] = *(void *)(v1 + 152);
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  unint64_t v2 = (void *)swift_task_alloc();
  v0[54] = v2;
  *unint64_t v2 = v0;
  v2[1] = sub_100224D9C;
  uint64_t v3 = v0[48];
  return v5(v3);
}

uint64_t sub_100224D9C(char a1)
{
  *(unsigned char *)(*(void *)v1 + 49) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100224EBC, 0, 0);
}

uint64_t sub_100224EBC()
{
  if (*(unsigned char *)(v0 + 49) != 1
    || (uint64_t v1 = audit_token_t.signingIdentifier.getter(*(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184)), (*(void *)(v0 + 440) = v2) == 0))
  {
    uint64_t v24 = *(void *)(v0 + 360);
    unint64_t v25 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
    uint64_t v26 = *(void *)(v0 + 336);
    uint64_t v27 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v27 - 8) + 104))(v28, enum case for MarketplaceKitError.featureUnavailable(_:), v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    v25(v24, v26);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_6;
  }
  uint64_t v3 = v1;
  unint64_t v4 = v2;
  uint64_t v6 = *(void *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 280);
  uint64_t v7 = *(void *)(v0 + 264);
  PerformActionRequest.request.getter();
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v5, v7);
  if (v8 == enum case for PerformActionRequest.Request.handleSuccessfulAuth(_:))
  {
    uint64_t v9 = *(void *)(v0 + 384);
    uint64_t v70 = *(void *)(v0 + 392);
    uint64_t v72 = *(void *)(v0 + 400);
    uint64_t v10 = *(void *)(v0 + 272);
    uint64_t v11 = *(uint64_t **)(v0 + 280);
    uint64_t v12 = *(void *)(v0 + 264);
    uint64_t v13 = *(void *)(v0 + 248);
    uint64_t v73 = *(void *)(v0 + 240);
    uint64_t v75 = *(void *)(v0 + 256);
    uint64_t v14 = *(void *)(v0 + 176);
    uint64_t v15 = *(void *)(v0 + 184);
    long long v69 = *(_OWORD *)(v0 + 160);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v11, v12);
    uint64_t v17 = *v11;
    unint64_t v16 = v11[1];
    *(_OWORD *)(v0 + 16) = v69;
    *(void *)(v0 + 32) = v14;
    *(void *)(v0 + 40) = v15;
    *(unsigned char *)(v0 + 48) = 0;
    swift_retain();
    sub_100376FB4(v9, v70, v72, 2, 0, 0, v17, v16, 2u, v0 + 16);
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v75, enum case for PerformActionResponse.Response.ignored(_:), v73);
    uint64_t v18 = *(void *)(v0 + 360);
    uint64_t v68 = *(void *)(v0 + 336);
    *(void *)&long long v69 = *(void *)(v0 + 368);
    uint64_t v19 = *(void *)(v0 + 296);
    uint64_t v20 = *(void *)(v0 + 304);
    uint64_t v21 = *(void *)(v0 + 288);
    uint64_t v22 = *(void *)(v0 + 152);
    PerformActionResponse.init(response:)();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v22, v20, v21);
    ((void (*)(uint64_t, uint64_t))v69)(v18, v68);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
LABEL_6:
    return v23();
  }
  if (v8 != enum case for PerformActionRequest.Request.renewLicenses(_:)) {
    return _assertionFailure(_:_:file:line:flags:)();
  }
  unint64_t v30 = (void *)(v0 + 128);
  uint64_t v31 = *(uint64_t **)(v0 + 280);
  uint64_t v33 = *(void *)(v0 + 224);
  uint64_t v32 = *(void *)(v0 + 232);
  uint64_t v34 = *(void *)(v0 + 216);
  (*(void (**)(uint64_t *, void))(*(void *)(v0 + 272) + 96))(v31, *(void *)(v0 + 264));
  uint64_t v35 = *v31;
  (*(void (**)(uint64_t, void, uint64_t))(v33 + 104))(v32, enum case for LogKey.Prefix.license(_:), v34);
  id v36 = objc_allocWithZone((Class)type metadata accessor for LogKey());
  uint64_t v37 = (void *)LogKey.init(prefix:)();
  sub_100516980(v37);
  uint64_t v78 = v3;
  swift_bridgeObjectRetain();
  v38._countAndFlagsBits = 58;
  v38._object = (void *)0xE100000000000000;
  String.append(_:)(v38);
  int64_t v39 = *(void *)(v35 + 16);
  uint64_t v74 = v35;
  int64_t v76 = v39;
  if (v39)
  {
    uint64_t v71 = v3;
    uint64_t v40 = *(void *)(v35 + 16);
    sub_100455C1C(0, v39, 0);
    uint64_t v41 = (uint64_t *)(v35 + 32);
    do
    {
      uint64_t v42 = *v41++;
      *(void *)(v0 + 120) = v42;
      uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v45 = v44;
      unint64_t v47 = _swiftEmptyArrayStorage[2];
      unint64_t v46 = _swiftEmptyArrayStorage[3];
      if (v47 >= v46 >> 1) {
        sub_100455C1C(v46 > 1, v47 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v47 + 1;
      uint64_t v48 = &_swiftEmptyArrayStorage[2 * v47];
      v48[4] = v43;
      v48[5] = v45;
      --v40;
    }
    while (v40);
    uint64_t v3 = v71;
    uint64_t v35 = v74;
    unint64_t v30 = (void *)(v0 + 128);
  }
  *unint64_t v30 = _swiftEmptyArrayStorage;
  sub_1000172F8((uint64_t *)&unk_10065C5D0);
  sub_10000DDFC((unint64_t *)&qword_10065D350, (uint64_t *)&unk_10065C5D0);
  uint64_t v49 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v51 = v50;
  swift_bridgeObjectRelease();
  v52._countAndFlagsBits = v49;
  v52._object = v51;
  String.append(_:)(v52);
  swift_bridgeObjectRelease();
  sub_100515B6C(v78, v4);
  swift_bridgeObjectRelease();
  if (v76)
  {
    sub_100455EA0(0, v76, 0);
    int64_t v53 = v76;
    uint64_t v54 = 0;
    uint64_t v55 = v35 + 32;
    uint64_t v56 = _swiftEmptyArrayStorage[2];
    uint64_t v57 = 3 * v56;
    do
    {
      uint64_t v58 = *(void *)(v55 + 8 * v54);
      unint64_t v59 = _swiftEmptyArrayStorage[3];
      uint64_t v60 = v56 + v54 + 1;
      if (v56 + v54 >= v59 >> 1)
      {
        sub_100455EA0(v59 > 1, v56 + v54 + 1, 1);
        int64_t v53 = v76;
      }
      ++v54;
      _swiftEmptyArrayStorage[2] = v60;
      uint64_t v61 = &_swiftEmptyArrayStorage[v57];
      v61[4] = v58;
      v61[5] = 0;
      *((unsigned char *)v61 + 48) = 0;
      v57 += 3;
    }
    while (v53 != v54);
  }
  swift_bridgeObjectRelease();
  *(void *)(v0 + 448) = _swiftEmptyArrayStorage;
  uint64_t v62 = *(void *)(v0 + 416);
  uint64_t v63 = *(void *)(v62 + 192);
  uint64_t v64 = v63 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon19InstallDependencies_licenseStorage;
  uint64_t v65 = *(void *)(v63 + 160);
  *(void *)(v0 + 456) = v65;
  uint64_t v66 = *(void *)(v62 + 216);
  *(void *)(v0 + 464) = v66;
  uint64_t v77 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t))((char *)&dword_1006648D8
                                                                                           + dword_1006648D8);
  swift_retain();
  swift_retain();
  uint64_t v67 = (void *)swift_task_alloc();
  *(void *)(v0 + 472) = v67;
  *uint64_t v67 = v0;
  v67[1] = sub_10022572C;
  return v77((uint64_t)_swiftEmptyArrayStorage, v64, v65, v66, 0, v3, v4);
}

uint64_t sub_100225654()
{
  (*(void (**)(void, void))(v0 + 368))(*(void *)(v0 + 360), *(void *)(v0 + 336));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10022572C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1002258A0, 0, 0);
}

uint64_t sub_1002258A0()
{
  (*(void (**)(void, void, void))(v0[31] + 104))(v0[32], enum case for PerformActionResponse.Response.ignored(_:), v0[30]);
  uint64_t v1 = v0[45];
  uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[46];
  uint64_t v8 = v0[42];
  uint64_t v2 = v0[37];
  uint64_t v3 = v0[38];
  uint64_t v4 = v0[36];
  uint64_t v5 = v0[19];
  PerformActionResponse.init(response:)();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v5, v3, v4);
  v9(v1, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100225A34(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  swift_retain();
  Swift::Int v16 = sub_100010C5C((uint64_t)&off_100637B70);
  swift_arrayDestroy();
  uint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = a1;
  v17[3] = a2;
  v17[4] = v4;
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  sub_100012670(a1, a2);
  id v19 = v4;
  sub_100016EDC((uint64_t)"Perform private action", 22, 2, a3, a4, 1, (uint64_t)v14, v16, 1u, (uint64_t)v11, (uint64_t)&unk_10065C580, (uint64_t)v17, (uint64_t)&unk_10063B728, (uint64_t)&unk_10065C590);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_100225C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[26] = a8;
  v8[27] = v17;
  v8[24] = a6;
  v8[25] = a7;
  v8[22] = a4;
  v8[23] = a5;
  v8[20] = a1;
  v8[21] = a3;
  uint64_t v9 = type metadata accessor for PerformPrivateActionResponse.Response();
  v8[28] = v9;
  v8[29] = *(void *)(v9 - 8);
  v8[30] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for LogKey.Prefix();
  v8[31] = v10;
  v8[32] = *(void *)(v10 - 8);
  v8[33] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for PerformPrivateActionRequest.Request();
  v8[34] = v11;
  v8[35] = *(void *)(v11 - 8);
  v8[36] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for PerformPrivateActionResponse();
  v8[37] = v12;
  v8[38] = *(void *)(v12 - 8);
  v8[39] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for Logger();
  v8[40] = v13;
  v8[41] = *(void *)(v13 - 8);
  v8[42] = swift_task_alloc();
  v8[43] = swift_task_alloc();
  v8[44] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for PerformPrivateActionRequest();
  v8[45] = v14;
  v8[46] = *(void *)(v14 - 8);
  v8[47] = swift_task_alloc();
  v8[48] = swift_task_alloc();
  v8[49] = swift_task_alloc();
  return _swift_task_switch(sub_100225F6C, 0, 0);
}

uint64_t sub_100225F6C()
{
  uint64_t v35 = v0;
  uint64_t v1 = v0[25];
  unint64_t v2 = v0[26];
  v0[2] = v1;
  v0[4] = v0 + 2;
  v0[5] = v0[49];
  uint64_t v3 = v0[45];
  v0[3] = v2;
  sub_100012670(v1, v2);
  v0[6] = &type metadata for Data;
  v0[7] = v3;
  v0[8] = sub_1000175C4();
  v0[9] = sub_1000139E4(&qword_10065C5C8, (void (*)(uint64_t))&type metadata accessor for PerformPrivateActionRequest);
  decodeXPCValues<each A, B>(from:)();
  uint64_t v4 = v0[48];
  uint64_t v5 = v0[49];
  uint64_t v6 = v0[45];
  uint64_t v7 = v0[46];
  sub_100013510(v0[2], v0[3]);
  static Logger.daemon.getter();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v0[50] = v8;
  v0[51] = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v8(v4, v5, v6);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = v0[48];
  uint64_t v14 = v0[45];
  uint64_t v13 = v0[46];
  uint64_t v15 = v0[44];
  uint64_t v16 = v0[40];
  uint64_t v17 = v0[41];
  if (v11)
  {
    unint64_t v31 = v0[23];
    unint64_t v32 = v0[24];
    unint64_t v30 = v0[22];
    unint64_t v29 = v0[21];
    uint64_t v18 = swift_slowAlloc();
    v34[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v19 = PerformPrivateActionRequest.stringValue.getter();
    os_log_type_t type = v10;
    v0[19] = sub_1000143F4(v19, v20, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v21(v12, v14);
    *(_WORD *)(v18 + 12) = 2082;
    uint64_t v22 = audit_token_t.signingIdentifier.getter(v29, v30, v31, v32);
    if (v23)
    {
      unint64_t v24 = v23;
    }
    else
    {
      uint64_t v22 = 0x6E776F6E6B6E55;
      unint64_t v24 = 0xE700000000000000;
    }
    v0[18] = sub_1000143F4(v22, v24, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, type, "Perform private action request %{public}s called by %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v25 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v25(v15, v16);
  }
  else
  {
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v21(v0[48], v0[45]);

    unint64_t v25 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v25(v15, v16);
  }
  v0[52] = v25;
  v0[53] = v21;
  uint64_t v26 = *(void *)(v0[27] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v27 = (void *)swift_task_alloc();
  v0[54] = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_1002263F8;
  v27[3] = v26;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_1002263F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[55] = a1;
  v4[56] = a2;
  v4[57] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_100227518;
  }
  else {
    uint64_t v5 = sub_100226510;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100226510()
{
  uint64_t v1 = *(void *)(v0[27] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies);
  v0[58] = v1;
  v0[59] = *(void *)(v1 + 152);
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[60] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1002265DC;
  uint64_t v3 = v0[55];
  return v5(v3);
}

uint64_t sub_1002265DC(char a1)
{
  *(unsigned char *)(*(void *)v1 + 612) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1002266FC, 0, 0);
}

uint64_t sub_1002266FC()
{
  uint64_t v134 = v0;
  if (*(unsigned char *)(v0 + 612) == 1
    && (uint64_t v1 = audit_token_t.signingIdentifier.getter(*(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 192)), (*(void *)(v0 + 488) = v2) != 0))
  {
    uint64_t v3 = (void *)v1;
    unint64_t v4 = v2;
    uint64_t v6 = *(void *)(v0 + 280);
    uint64_t v5 = *(void *)(v0 + 288);
    uint64_t v7 = *(void *)(v0 + 272);
    PerformPrivateActionRequest.request.getter();
    int v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v5, v7);
    if (v8 == enum case for PerformPrivateActionRequest.Request.repairLicense(_:))
    {
      uint64_t v9 = *(void *)(v0 + 288);
      uint64_t v10 = *(void *)(v0 + 264);
      uint64_t v11 = *(void *)(v0 + 248);
      uint64_t v12 = *(void *)(v0 + 256);
      (*(void (**)(uint64_t, void))(*(void *)(v0 + 280) + 96))(v9, *(void *)(v0 + 272));
      unint64_t v13 = *(void *)(v9 + 8);
      uint64_t v127 = *(void *)v9;
      *(void *)(v0 + 496) = v13;
      int v120 = *(_DWORD *)(v9 + 16);
      (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v10, enum case for LogKey.Prefix.license(_:), v11);
      id v14 = objc_allocWithZone((Class)type metadata accessor for LogKey());
      uint64_t v15 = (void *)LogKey.init(prefix:)();
      sub_100516980(v15);
      static Logger.ald.getter();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.default.getter();
      BOOL v18 = os_log_type_enabled(v16, v17);
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
      uint64_t v20 = *(void *)(v0 + 344);
      uint64_t v21 = *(void *)(v0 + 320);
      if (v18)
      {
        uint64_t v115 = *(void *)(v0 + 344);
        uint64_t v116 = *(void *)(v0 + 320);
        unint64_t v22 = v4;
        uint64_t v117 = (uint64_t)v3;
        uint64_t v23 = swift_slowAlloc();
        unint64_t v24 = (void *)swift_slowAlloc();
        v131 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 138413058;
        uint64_t v25 = sub_1005163F0();
        *(void *)(v0 + 120) = v25;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *unint64_t v24 = v25;
        *(_WORD *)(v23 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 128) = sub_1000143F4(v117, v22, (uint64_t *)&v131);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v23 + 22) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v26 = v127;
        *(void *)(v0 + 136) = sub_1000143F4(v127, v13, (uint64_t *)&v131);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v23 + 32) = 1026;
        *(_DWORD *)(v0 + 608) = v120;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "[%@] %{public}s requested license repair for %{public}s (%{public}d)", (uint8_t *)v23, 0x26u);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v19(v115, v116);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

        v19(v20, v21);
        uint64_t v26 = v127;
      }
      uint64_t v60 = *(void *)(v0 + 464);
      uint64_t v61 = *(void *)(v60 + 192);
      uint64_t v62 = v61 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon19InstallDependencies_licenseStorage;
      uint64_t v63 = *(void *)(v61 + 160);
      *(void *)(v0 + 504) = v63;
      uint64_t v64 = *(void *)(v60 + 216);
      *(void *)(v0 + 512) = v64;
      long long v129 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100664878
                                                                                 + dword_100664878);
      swift_retain();
      swift_retain();
      uint64_t v65 = (void *)swift_task_alloc();
      *(void *)(v0 + 520) = v65;
      *uint64_t v65 = v0;
      v65[1] = sub_100227624;
      return v129(v26, v13, v62, v63, v64);
    }
    else if (v8 == enum case for PerformPrivateActionRequest.Request.repairLicenseByBundleID(_:))
    {
      uint64_t v118 = *(void *)(v0 + 392);
      v121 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 400);
      uint64_t v34 = *(void *)(v0 + 376);
      uint64_t v35 = *(void *)(v0 + 360);
      uint64_t v37 = *(void *)(v0 + 280);
      uint64_t v36 = *(void *)(v0 + 288);
      uint64_t v39 = *(void *)(v0 + 264);
      uint64_t v38 = *(void *)(v0 + 272);
      uint64_t v41 = *(void *)(v0 + 248);
      uint64_t v40 = *(void *)(v0 + 256);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v37 + 96))(v36, v38);
      unint64_t v42 = *(void *)(v36 + 8);
      uint64_t v128 = *(void *)v36;
      *(void *)(v0 + 536) = v42;
      uint64_t v43 = *(unsigned __int8 *)(v36 + 16);
      (*(void (**)(uint64_t, void, uint64_t))(v40 + 104))(v39, enum case for LogKey.Prefix.license(_:), v41);
      id v44 = objc_allocWithZone((Class)type metadata accessor for LogKey());
      uint64_t v45 = (void *)LogKey.init(prefix:)();
      sub_100516980(v45);
      static Logger.ald.getter();
      uint64_t v46 = v34;
      unint64_t v47 = v42;
      v121(v46, v118, v35);
      swift_bridgeObjectRetain_n();
      uint64_t v48 = Logger.logObject.getter();
      os_log_type_t v49 = static os_log_type_t.default.getter();
      BOOL v50 = os_log_type_enabled(v48, v49);
      uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
      long long v124 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
      uint64_t v52 = *(void *)(v0 + 376);
      uint64_t v122 = *(void *)(v0 + 360);
      uint64_t v53 = *(void *)(v0 + 336);
      uint64_t v54 = *(void *)(v0 + 320);
      if (v50)
      {
        uint64_t v55 = swift_slowAlloc();
        os_log_type_t type = v49;
        uint64_t v56 = (void *)swift_slowAlloc();
        v131 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v55 = 138412802;
        uint64_t v114 = v53;
        uint64_t v57 = sub_1005163F0();
        *(void *)(v0 + 96) = v57;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v56 = v57;
        *(_WORD *)(v55 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 104) = sub_1000143F4(v128, v47, (uint64_t *)&v131);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v55 + 22) = 2082;
        uint64_t v43 = v43;
        uint64_t v58 = PerformPrivateActionRequest.stringValue.getter();
        *(void *)(v0 + 112) = sub_1000143F4(v58, v59, (uint64_t *)&v131);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v124(v52, v122);
        _os_log_impl((void *)&_mh_execute_header, v48, type, "[%@] %{public}s received %{public}s", (uint8_t *)v55, 0x20u);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v51(v114, v54);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        v124(v52, v122);

        v51(v53, v54);
      }
      uint64_t v87 = *(void *)(v0 + 464);
      uint64_t v88 = *(void *)(v87 + 192);
      uint64_t v89 = v88 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon19InstallDependencies_licenseStorage;
      uint64_t v90 = *(void *)(v88 + 160);
      *(void *)(v0 + 544) = v90;
      uint64_t v91 = *(void *)(v87 + 216);
      *(void *)(v0 + 552) = v91;
      uint64_t v126 = (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1006648C8 + dword_1006648C8);
      swift_retain();
      swift_retain();
      id v92 = (void *)swift_task_alloc();
      *(void *)(v0 + 560) = v92;
      *id v92 = v0;
      v92[1] = sub_1002278B4;
      return v126(v128, v47, v43, v89, v90, v91);
    }
    else if (v8 == enum case for PerformPrivateActionRequest.Request.renewLicenses(_:))
    {
      uint64_t v66 = (void *)(v0 + 88);
      uint64_t v67 = *(uint64_t **)(v0 + 288);
      uint64_t v68 = *(void *)(v0 + 264);
      uint64_t v69 = *(void *)(v0 + 248);
      uint64_t v70 = *(void *)(v0 + 256);
      (*(void (**)(uint64_t *, void))(*(void *)(v0 + 280) + 96))(v67, *(void *)(v0 + 272));
      uint64_t v71 = *v67;
      (*(void (**)(uint64_t, void, uint64_t))(v70 + 104))(v68, enum case for LogKey.Prefix.license(_:), v69);
      id v72 = objc_allocWithZone((Class)type metadata accessor for LogKey());
      uint64_t v73 = (void *)LogKey.init(prefix:)();
      sub_100516980(v73);
      uint64_t v74 = v4;
      v131 = v3;
      unint64_t v132 = v4;
      swift_bridgeObjectRetain();
      v75._countAndFlagsBits = 58;
      v75._object = (void *)0xE100000000000000;
      String.append(_:)(v75);
      int64_t v76 = *(void *)(v71 + 16);
      uint64_t v77 = _swiftEmptyArrayStorage;
      uint64_t v123 = v71;
      int64_t v125 = v76;
      if (v76)
      {
        long long v119 = v3;
        long long v133 = _swiftEmptyArrayStorage;
        int64_t v78 = v76;
        sub_100455C1C(0, v76, 0);
        uint64_t v77 = _swiftEmptyArrayStorage;
        uint64_t v79 = (uint64_t *)(v71 + 32);
        do
        {
          uint64_t v80 = *v79++;
          *(void *)(v0 + 80) = v80;
          uint64_t v81 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v83 = v82;
          long long v133 = v77;
          unint64_t v85 = v77[2];
          unint64_t v84 = v77[3];
          if (v85 >= v84 >> 1)
          {
            sub_100455C1C(v84 > 1, v85 + 1, 1);
            uint64_t v77 = v133;
          }
          v77[2] = v85 + 1;
          uint64_t v86 = &v77[2 * v85];
          v86[4] = v81;
          v86[5] = v83;
          --v78;
        }
        while (v78);
        uint64_t v74 = v4;
        uint64_t v3 = v119;
        uint64_t v66 = (void *)(v0 + 88);
        uint64_t v71 = v123;
      }
      *uint64_t v66 = v77;
      sub_1000172F8((uint64_t *)&unk_10065C5D0);
      sub_10000DDFC((unint64_t *)&qword_10065D350, (uint64_t *)&unk_10065C5D0);
      uint64_t v93 = BidirectionalCollection<>.joined(separator:)();
      uint64_t v95 = v94;
      swift_bridgeObjectRelease();
      v96._countAndFlagsBits = v93;
      v96._object = v95;
      String.append(_:)(v96);
      swift_bridgeObjectRelease();
      sub_100515B6C((uint64_t)v131, v132);
      swift_bridgeObjectRelease();
      if (v125)
      {
        v131 = _swiftEmptyArrayStorage;
        sub_100455EA0(0, v125, 0);
        int64_t v97 = v125;
        uint64_t v98 = 0;
        unint64_t v99 = _swiftEmptyArrayStorage;
        uint64_t v100 = v71 + 32;
        uint64_t v101 = _swiftEmptyArrayStorage[2];
        uint64_t v102 = 3 * v101;
        do
        {
          uint64_t v103 = *(void *)(v100 + 8 * v98);
          v131 = v99;
          unint64_t v104 = v99[3];
          uint64_t v105 = v101 + v98 + 1;
          if (v101 + v98 >= v104 >> 1)
          {
            sub_100455EA0(v104 > 1, v101 + v98 + 1, 1);
            int64_t v97 = v125;
            unint64_t v99 = v131;
          }
          ++v98;
          v99[2] = v105;
          uint64_t v106 = &v99[v102];
          void v106[4] = v103;
          v106[5] = 0;
          *((unsigned char *)v106 + 48) = 0;
          v102 += 3;
        }
        while (v97 != v98);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v99 = _swiftEmptyArrayStorage;
      }
      *(void *)(v0 + 576) = v99;
      uint64_t v107 = *(void *)(v0 + 464);
      uint64_t v108 = *(void *)(v107 + 192);
      uint64_t v109 = v108 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon19InstallDependencies_licenseStorage;
      uint64_t v110 = *(void *)(v108 + 160);
      *(void *)(v0 + 584) = v110;
      uint64_t v111 = *(void *)(v107 + 216);
      *(void *)(v0 + 592) = v111;
      char v130 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t))((char *)&dword_1006648D8
                                                                                                + dword_1006648D8);
      swift_retain();
      swift_retain();
      long long v112 = (void *)swift_task_alloc();
      *(void *)(v0 + 600) = v112;
      *long long v112 = v0;
      v112[1] = sub_100227CC8;
      return v130((uint64_t)v99, v109, v110, v111, 0, (uint64_t)v3, v74);
    }
    else
    {
      return _assertionFailure(_:_:file:line:flags:)();
    }
  }
  else
  {
    uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
    uint64_t v28 = *(void *)(v0 + 392);
    uint64_t v29 = *(void *)(v0 + 360);
    uint64_t v30 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v30 - 8) + 104))(v31, enum case for MarketplaceKitError.featureUnavailable(_:), v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    v27(v28, v29);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
    return v32();
  }
}

uint64_t sub_100227518()
{
  (*(void (**)(void, void))(v0 + 424))(*(void *)(v0 + 392), *(void *)(v0 + 360));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100227624()
{
  *(void *)(*(void *)v1 + 528) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0) {
    unint64_t v2 = sub_100227790;
  }
  else {
    unint64_t v2 = sub_10023E53C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100227790()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[53];
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[45];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1002278B4()
{
  *(void *)(*(void *)v1 + 568) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_100227BA4;
  }
  else {
    uint64_t v2 = sub_100227A20;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100227A20()
{
  (*(void (**)(void, void, void))(v0[29] + 104))(v0[30], enum case for PerformPrivateActionResponse.Response.ignored(_:), v0[28]);
  uint64_t v1 = v0[49];
  uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[53];
  uint64_t v2 = v0[45];
  uint64_t v3 = v0[38];
  uint64_t v4 = v0[39];
  uint64_t v5 = v0[37];
  uint64_t v6 = v0[20];
  PerformPrivateActionResponse.init(response:)();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v6, v4, v5);
  v9(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100227BA4()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[53];
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[45];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100227CC8()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100227A20, 0, 0);
}

uint64_t sub_100227E70(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  swift_retain();
  Swift::Int v12 = sub_100010C5C((uint64_t)&off_100637BB0);
  swift_arrayDestroy();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v2;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = &unk_10065C568;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 1, 1, v15);
  id v16 = v2;
  swift_retain();
  sub_100016EDC((uint64_t)"Handle Emergency Reset", 22, 2, a1, a2, 1, (uint64_t)v10, v12, 1u, (uint64_t)v7, (uint64_t)&unk_10065C570, v14, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v7, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v10, &qword_10065C2E0);
}

uint64_t sub_1002280F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a6;
  uint64_t v7 = type metadata accessor for Logger();
  v6[3] = v7;
  v6[4] = *(void *)(v7 - 8);
  v6[5] = swift_task_alloc();
  return _swift_task_switch(sub_1002281B4, 0, 0);
}

uint64_t sub_1002281B4()
{
  static Logger.daemon.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Asked to handle emergency reset", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = v0[3];

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_retain();
  sub_10054E838();
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100228328(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v9 = _Block_copy(aBlock);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  id v11 = a1;
  a6(a5, v10);

  return swift_release();
}

uint64_t sub_1002283BC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = enum case for LogKey.Prefix.madctl(_:);
  uint64_t v16 = type metadata accessor for LogKey.Prefix();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v14, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v4;
  v18[3] = a1;
  v18[4] = a2;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = &unk_10065C540;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 1, 1, v20);
  swift_retain();
  id v21 = v4;
  sub_100012670(a1, a2);
  swift_retain();
  sub_100016EDC((uint64_t)"Manifest validation", 19, 2, a3, a4, 1, (uint64_t)v14, (uint64_t)&_swiftEmptySetSingleton, 1u, (uint64_t)v11, (uint64_t)&unk_10065C548, v19, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_100228670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[50] = a7;
  v8[51] = a8;
  v8[48] = a5;
  v8[49] = a6;
  v8[46] = a3;
  v8[47] = a4;
  v8[44] = a1;
  v8[45] = a2;
  v8[52] = type metadata accessor for ManifestValidationTask();
  v8[53] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for URL();
  v8[54] = v9;
  v8[55] = *(void *)(v9 - 8);
  v8[56] = swift_task_alloc();
  v8[57] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for ManifestValidationRequest();
  v8[58] = v10;
  v8[59] = *(void *)(v10 - 8);
  v8[60] = swift_task_alloc();
  v8[61] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Logger();
  v8[62] = v11;
  v8[63] = *(void *)(v11 - 8);
  v8[64] = swift_task_alloc();
  v8[65] = swift_task_alloc();
  return _swift_task_switch(sub_100228854, 0, 0);
}

uint64_t sub_100228854()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 392) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  os_log_type_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 528) = v2;
  *os_log_type_t v2 = v0;
  v2[1] = sub_100228918;
  v2[3] = v1;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_100228918(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[67] = a1;
  v4[68] = a2;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    return _swift_task_switch(sub_100228ABC, 0, 0);
  }
}

uint64_t sub_100228ABC()
{
  v0[69] = *(void *)(*(void *)(v0[49] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies) + 152);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[70] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100228B84;
  uint64_t v2 = v0[67];
  return v4(v2);
}

uint64_t sub_100228B84(char a1)
{
  *(unsigned char *)(*(void *)v1 + 127) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100228CA4, 0, 0);
}

uint64_t sub_100228CA4()
{
  if (*(unsigned char *)(v0 + 127) == 1)
  {
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D610 + dword_10065D610);
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 568) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_100228EAC;
    uint64_t v2 = *(void *)(v0 + 376);
    uint64_t v3 = *(void *)(v0 + 384);
    uint64_t v5 = *(void *)(v0 + 360);
    uint64_t v4 = *(void *)(v0 + 368);
    return v10(v5, v4, v2, v3);
  }
  else
  {
    uint64_t v7 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v7 - 8) + 104))(v8, enum case for MarketplaceKitError.featureUnavailable(_:), v7);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_100228EAC()
{
  *(void *)(*(void *)v1 + 576) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100229840;
  }
  else {
    uint64_t v2 = sub_100228FC0;
  }
  return _swift_task_switch(v2, 0, 0);
}

void sub_100228FC0()
{
  uint64_t v88 = v0;
  static Logger.daemon.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Manifest validation requested", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = *(void *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 520);
  uint64_t v6 = *(void *)(v0 + 496);
  uint64_t v7 = *(void *)(v0 + 504);
  uint64_t v8 = *(void *)(v0 + 488);
  uint64_t v9 = *(void *)(v0 + 464);
  uint64_t v10 = *(void *)(v0 + 400);
  unint64_t v11 = *(void *)(v0 + 408);

  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v12(v5, v6);
  *(void *)(v0 + 280) = v10;
  *(void *)(v0 + 288) = v11;
  *(void *)(v0 + 296) = v0 + 280;
  *(void *)(v0 + 304) = v8;
  sub_100012670(v10, v11);
  *(void *)(v0 + 312) = &type metadata for Data;
  *(void *)(v0 + 320) = v9;
  *(void *)(v0 + 328) = sub_1000175C4();
  *(void *)(v0 + 336) = sub_1000139E4(&qword_10065C550, (void (*)(uint64_t))&type metadata accessor for ManifestValidationRequest);
  decodeXPCValues<each A, B>(from:)();
  if (v4)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_100013510(*(void *)(v0 + 280), *(void *)(v0 + 288));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(void (**)(void))(v0 + 8);
    v13();
    return;
  }
  unint64_t v85 = v12;
  uint64_t v15 = *(void *)(v0 + 480);
  uint64_t v14 = *(void *)(v0 + 488);
  uint64_t v16 = *(void *)(v0 + 464);
  uint64_t v17 = *(void *)(v0 + 472);
  sub_100013510(*(void *)(v0 + 280), *(void *)(v0 + 288));
  ManifestValidationRequest.url.getter();
  static Logger.daemon.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, v14, v16);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v21 = *(void *)(v0 + 512);
  uint64_t v22 = *(void *)(v0 + 496);
  uint64_t v23 = *(void *)(v0 + 472);
  uint64_t v24 = *(void *)(v0 + 480);
  if (v20)
  {
    uint64_t v75 = *(void *)(v0 + 464);
    uint64_t v81 = *(void *)(v0 + 512);
    uint64_t v83 = *(void *)(v0 + 496);
    os_log_type_t typea = v19;
    uint64_t v26 = *(void *)(v0 + 440);
    uint64_t v25 = *(void *)(v0 + 448);
    uint64_t v70 = *(void *)(v0 + 432);
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    v87._countAndFlagsBits = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136446210;
    ManifestValidationRequest.url.getter();
    sub_1000139E4(&qword_10065C4D8, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v30 = v29;
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v70);
    *(void *)(v0 + 344) = sub_1000143F4(v28, v30, &v87._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v75);
    _os_log_impl((void *)&_mh_execute_header, v18, typea, "Manifest is located at URL: %{public}s", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v85(v81, v83);
  }
  else
  {
    (*(void (**)(void, void))(v23 + 8))(*(void *)(v0 + 480), *(void *)(v0 + 464));

    v85(v21, v22);
  }
  uint64_t v31 = ManifestValidationRequest.primaryProductVariant.getter();
  if (!v32) {
    goto LABEL_19;
  }
  uint64_t v33 = v31;
  uint64_t v34 = v32;
  uint64_t v35 = ManifestValidationRequest.compatibleProductVariants.getter();
  if (!v35)
  {
LABEL_18:
    swift_bridgeObjectRelease();
LABEL_19:
    sub_1004323C4(v0 + 128);
    sub_10001733C(v0 + 128, v0 + 16, &qword_10065C558);
    unint64_t v84 = *(void **)(v0 + 24);
    if (v84)
    {
      uint64_t v33 = *(void *)(v0 + 16);
      uint64_t v54 = *(void *)(v0 + 32);
      unint64_t v77 = *(void *)(v0 + 48);
      os_log_t log = *(os_log_t *)(v0 + 40);
      *(void *)os_log_type_t type = *(void *)(v0 + 64);
      uint64_t v82 = *(void *)(v0 + 56);
      uint64_t v72 = *(void *)(v0 + 72);
      uint64_t v86 = *(void *)(v0 + 80);
      uint64_t v52 = *(void *)(v0 + 96);
      uint64_t v71 = *(void *)(v0 + 88);
      uint64_t v53 = *(void **)(v0 + 104);
      uint64_t v76 = *(void *)(v0 + 112);
      char v69 = *(unsigned char *)(v0 + 126) & 1;
      char v73 = *(unsigned char *)(v0 + 125) & 1;
      char v74 = *(unsigned char *)(v0 + 124) & 1;
      int v51 = *(_DWORD *)(v0 + 120);
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v36 = v35;
  uint64_t v37 = ManifestValidationRequest.osVersion.getter();
  if (!v38)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v67 = v36;
  sub_100447360(v37, v38, (uint64_t *)(v0 + 240));
  uint64_t v39 = *(void *)(v0 + 240);
  uint64_t v86 = *(void *)(v0 + 248);
  uint64_t v40 = *(void *)(v0 + 256);
  uint64_t v41 = *(void *)(v0 + 264);
  unint64_t v42 = *(void **)(v0 + 272);
  id v43 = [self sharedManager];
  if (!v43)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v44 = v43;
  unsigned __int8 v45 = [v43 isSharedIPad];

  id v46 = (id)MobileGestalt_get_current_device();
  if (!v46)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v47 = v46;
  unint64_t v84 = v34;
  id v48 = (id)MobileGestalt_copy_deviceClass_obj();

  if (!v48)
  {
LABEL_27:
    __break(1u);
    return;
  }
  uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)os_log_type_t type = v50;
  uint64_t v82 = v49;

  char v74 = 0;
  uint64_t v76 = 0;
  char v73 = 1;
  int v51 = 0;
  unint64_t v77 = 0xE000000000000000;
  os_log_t log = 0;
  uint64_t v71 = v40;
  uint64_t v72 = v39;
  uint64_t v52 = v41;
  uint64_t v53 = v42;
  char v69 = v45;
  uint64_t v54 = v67;
LABEL_21:
  uint64_t v55 = *(void *)(v0 + 440);
  uint64_t v66 = *(void *)(v0 + 432);
  uint64_t v68 = *(void *)(v0 + 456);
  uint64_t v56 = *(void *)(v0 + 424);
  uint64_t v65 = *(void *)(v0 + 416);
  uint64_t v57 = *(void *)(v0 + 352);
  swift_getObjectType();
  v87._countAndFlagsBits = 0;
  v87._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(107);
  v58._countAndFlagsBits = 0xD000000000000038;
  v58._object = (void *)0x80000001005B97D0;
  String.append(_:)(v58);
  swift_bridgeObjectRetain();
  v59._countAndFlagsBits = v33;
  v59._object = v84;
  String.append(_:)(v59);
  swift_bridgeObjectRelease();
  v60._object = (void *)0x80000001005B9810;
  v60._countAndFlagsBits = 0xD00000000000001FLL;
  String.append(_:)(v60);
  swift_bridgeObjectRetain();
  v61._countAndFlagsBits = Array.description.getter();
  String.append(_:)(v61);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v62._countAndFlagsBits = 0x72655620534F090ALL;
  v62._object = (void *)0xEE00203A6E6F6973;
  String.append(_:)(v62);
  swift_bridgeObjectRetain();
  v63._countAndFlagsBits = v52;
  v63._object = v53;
  String.append(_:)(v63);
  swift_bridgeObjectRelease();
  XPCClientProtocol.logMessage(_:)(v87);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v56 + *(int *)(v65 + 24), v68, v66);
  *(void *)uint64_t v56 = v57;
  *(void *)(v56 + 8) = v33;
  *(void *)(v56 + 16) = v84;
  *(void *)(v56 + 24) = v54;
  *(void *)(v56 + 32) = log;
  *(void *)(v56 + 40) = v77;
  *(void *)(v56 + 48) = v82;
  *(void *)(v56 + 56) = *(void *)type;
  *(void *)(v56 + 64) = v72;
  *(void *)(v56 + 72) = v86;
  *(void *)(v56 + 80) = v71;
  *(void *)(v56 + 88) = v52;
  *(void *)(v56 + 96) = v53;
  *(void *)(v56 + 104) = v76;
  *(_DWORD *)(v56 + 112) = v51;
  *(unsigned char *)(v56 + 116) = v74;
  *(unsigned char *)(v56 + 117) = v73;
  *(unsigned char *)(v56 + 118) = v69;
  swift_unknownObjectRetain();
  uint64_t v64 = (void *)swift_task_alloc();
  *(void *)(v0 + 584) = v64;
  *uint64_t v64 = v0;
  v64[1] = sub_100229910;
  sub_10037419C();
}

uint64_t sub_100229840()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100229910()
{
  *(void *)(*(void *)v1 + 592) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_100229B5C;
  }
  else {
    os_log_type_t v2 = sub_100229A24;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100229A24()
{
  uint64_t v1 = v0[61];
  uint64_t v3 = v0[58];
  uint64_t v2 = v0[59];
  uint64_t v4 = v0[57];
  uint64_t v6 = v0[54];
  uint64_t v5 = v0[55];
  uint64_t v7 = v0[53];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_10023D9A8(v7, (uint64_t (*)(void))type metadata accessor for ManifestValidationTask);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100229B5C()
{
  uint64_t v1 = v0[61];
  uint64_t v2 = v0[58];
  uint64_t v3 = v0[59];
  uint64_t v4 = v0[57];
  uint64_t v5 = v0[54];
  uint64_t v6 = v0[55];
  uint64_t v7 = v0[53];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_10023D9A8(v7, (uint64_t (*)(void))type metadata accessor for ManifestValidationTask);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100229CC0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v4;
  v16[3] = a1;
  v16[4] = a2;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = &unk_10065C520;
  *(void *)(v17 + 24) = v16;
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  swift_retain();
  id v19 = v4;
  sub_100012670(a1, a2);
  swift_retain();
  sub_100016EDC((uint64_t)"OAuth authorize", 15, 2, a3, a4, 1, (uint64_t)v14, (uint64_t)&_swiftEmptySetSingleton, 1u, (uint64_t)v11, (uint64_t)&unk_10065C528, v17, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_100229F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[24] = a7;
  v8[25] = a8;
  v8[22] = a5;
  v8[23] = a6;
  v8[20] = a3;
  v8[21] = a4;
  v8[19] = a2;
  uint64_t v9 = type metadata accessor for URL();
  v8[26] = v9;
  v8[27] = *(void *)(v9 - 8);
  v8[28] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Logger();
  v8[29] = v10;
  v8[30] = *(void *)(v10 - 8);
  v8[31] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for LogKey.Prefix();
  v8[32] = v11;
  v8[33] = *(void *)(v11 - 8);
  v8[34] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for OAuthAuthorizeRequest();
  v8[35] = v12;
  v8[36] = *(void *)(v12 - 8);
  v8[37] = swift_task_alloc();
  v8[38] = swift_task_alloc();
  return _swift_task_switch(sub_10022A120, 0, 0);
}

uint64_t sub_10022A120()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 184) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10022A1E4;
  v2[3] = v1;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_10022A1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[40] = a1;
  v4[41] = a2;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    return _swift_task_switch(sub_10022A364, 0, 0);
  }
}

uint64_t sub_10022A364()
{
  v0[42] = *(void *)(*(void *)(v0[23] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies) + 152);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[43] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10022A42C;
  uint64_t v2 = v0[40];
  return v4(v2);
}

uint64_t sub_10022A42C(char a1)
{
  *(unsigned char *)(*(void *)v1 + 66) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10022A54C, 0, 0);
}

uint64_t sub_10022A54C()
{
  if (*(unsigned char *)(v0 + 66) == 1)
  {
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D610 + dword_10065D610);
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 352) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_10022A734;
    uint64_t v2 = *(void *)(v0 + 168);
    uint64_t v3 = *(void *)(v0 + 176);
    uint64_t v5 = *(void *)(v0 + 152);
    uint64_t v4 = *(void *)(v0 + 160);
    return v10(v5, v4, v2, v3);
  }
  else
  {
    uint64_t v7 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v7 - 8) + 104))(v8, enum case for MarketplaceKitError.featureUnavailable(_:), v7);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_10022A734()
{
  *(void *)(*(void *)v1 + 360) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10022AE84;
  }
  else {
    uint64_t v2 = sub_10022A848;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10022A848()
{
  uint64_t v52 = v0;
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v3 = *(void *)(v0 + 192);
  unint64_t v4 = *(void *)(v0 + 200);
  *(void *)(v0 + 96) = *(void *)(v0 + 304);
  *(void *)(v0 + 72) = v3;
  *(void *)(v0 + 80) = v4;
  *(void *)(v0 + 88) = v0 + 72;
  sub_100012670(v3, v4);
  *(void *)(v0 + 104) = &type metadata for Data;
  *(void *)(v0 + 112) = v2;
  *(void *)(v0 + 120) = sub_1000175C4();
  *(void *)(v0 + 128) = sub_1000139E4(&qword_10065C530, (void (*)(uint64_t))&type metadata accessor for OAuthAuthorizeRequest);
  decodeXPCValues<each A, B>(from:)();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_100013510(*(void *)(v0 + 72), *(void *)(v0 + 80));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 296);
    uint64_t v7 = *(void *)(v0 + 304);
    uint64_t v9 = *(void *)(v0 + 280);
    uint64_t v10 = *(void *)(v0 + 288);
    uint64_t v12 = *(void *)(v0 + 264);
    uint64_t v11 = *(void *)(v0 + 272);
    uint64_t v13 = *(void *)(v0 + 256);
    sub_100013510(*(void *)(v0 + 72), *(void *)(v0 + 80));
    (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v11, enum case for LogKey.Prefix.madctl(_:), v13);
    id v14 = objc_allocWithZone((Class)type metadata accessor for LogKey());
    uint64_t v15 = (void *)LogKey.init(prefix:)();
    *(void *)(v0 + 368) = v15;
    static Logger.xpc.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v7, v9);
    id v16 = v15;
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v21 = *(void *)(v0 + 288);
    uint64_t v20 = *(void *)(v0 + 296);
    uint64_t v50 = *(void *)(v0 + 280);
    uint64_t v22 = *(void *)(v0 + 240);
    uint64_t v23 = *(void *)(v0 + 248);
    uint64_t v24 = *(void *)(v0 + 232);
    if (v19)
    {
      uint64_t v49 = *(void *)(v0 + 240);
      uint64_t v43 = *(void *)(v0 + 224);
      uint64_t v44 = *(void *)(v0 + 216);
      uint64_t v45 = *(void *)(v0 + 208);
      uint64_t v42 = *(void *)(v0 + 296);
      uint64_t v25 = swift_slowAlloc();
      id v46 = (void *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 138412546;
      os_log_type_t type = v18;
      *(void *)(v0 + 136) = v16;
      uint64_t v48 = v23;
      id v26 = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v46 = v16;

      *(_WORD *)(v25 + 12) = 2082;
      OAuthAuthorizeRequest.endpointURL.getter();
      uint64_t v27 = URL.absoluteString.getter();
      unint64_t v29 = v28;
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
      *(void *)(v0 + 144) = sub_1000143F4(v27, v29, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      unint64_t v30 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v30(v42, v50);
      _os_log_impl((void *)&_mh_execute_header, v17, type, "[%@] Requesting authentication at %{public}s", (uint8_t *)v25, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v24);
    }
    else
    {

      unint64_t v30 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v30(v20, v50);

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v24);
    }
    *(void *)(v0 + 376) = v30;
    uint64_t v32 = *(void *)(v0 + 216);
    uint64_t v31 = *(void *)(v0 + 224);
    uint64_t v33 = *(void *)(v0 + 208);
    OAuthAuthorizeRequest.endpointURL.getter();
    Swift::String_optional v34 = URL.host(percentEncoded:)(1);
    *(void *)(v0 + 384) = v34.value._object;
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    if (v34.value._object)
    {
      char v35 = OAuthAuthorizeRequest.isUpdate.getter();
      char v36 = OAuthAuthorizeRequest.isMarketplace.getter();
      id v37 = [self ephemeralSessionConfiguration];
      [v37 setHTTPShouldSetCookies:0];
      [v37 setHTTPCookieAcceptPolicy:1];
      [v37 setRequestCachePolicy:1];
      sub_100373694(1);
      id v38 = [self sessionWithConfiguration:v37];

      type metadata accessor for PlainHTTP();
      uint64_t v39 = swift_allocObject();
      *(void *)(v0 + 392) = v39;
      *(unsigned char *)(v39 + 24) = 0;
      *(void *)(v39 + 16) = v38;
      *(void *)(v0 + 16) = 0x3172657375;
      *(void *)(v0 + 24) = 0xE500000000000000;
      *(Swift::String_optional *)(v0 + 32) = v34;
      *(void *)(v0 + 48) = v39;
      *(void *)(v0 + 56) = v16;
      *(unsigned char *)(v0 + 64) = v35 & 1;
      *(unsigned char *)(v0 + 65) = v36 & 1;
      id v40 = v16;
      uint64_t v41 = (void *)swift_task_alloc();
      *(void *)(v0 + 400) = v41;
      *uint64_t v41 = v0;
      v41[1] = sub_10022AF34;
      return sub_1004C5C6C();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10022AE84()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10022AF34()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 408) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10022B160;
  }
  else
  {
    unint64_t v4 = *(void **)(v2 + 368);
    swift_bridgeObjectRelease();
    swift_release();

    swift_bridgeObjectRelease();
    uint64_t v3 = sub_10022B074;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10022B074()
{
  uint64_t v2 = (void *)v0[46];
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[47];
  uint64_t v3 = v0[38];
  uint64_t v4 = v0[35];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  v1(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10022B160()
{
  uint64_t v2 = (void *)v0[46];
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[47];
  uint64_t v3 = v0[38];
  uint64_t v4 = v0[35];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  v1(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10022B294(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  id v16 = (void *)swift_allocObject();
  v16[2] = v4;
  v16[3] = a1;
  v16[4] = a2;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = &unk_10065C500;
  *(void *)(v17 + 24) = v16;
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  swift_retain();
  id v19 = v4;
  sub_100012670(a1, a2);
  swift_retain();
  sub_100016EDC((uint64_t)"OAuth invalidate", 16, 2, a3, a4, 1, (uint64_t)v14, (uint64_t)&_swiftEmptySetSingleton, 1u, (uint64_t)v11, (uint64_t)&unk_10065C508, v17, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_10022B504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[18] = a7;
  v8[19] = a8;
  v8[16] = a5;
  v8[17] = a6;
  v8[14] = a3;
  v8[15] = a4;
  v8[13] = a2;
  uint64_t v9 = type metadata accessor for Logger();
  v8[20] = v9;
  v8[21] = *(void *)(v9 - 8);
  v8[22] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for LogKey.Prefix();
  v8[23] = v10;
  v8[24] = *(void *)(v10 - 8);
  v8[25] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for OAuthInvalidateRequest();
  v8[26] = v11;
  v8[27] = *(void *)(v11 - 8);
  v8[28] = swift_task_alloc();
  v8[29] = swift_task_alloc();
  v8[30] = swift_task_alloc();
  return _swift_task_switch(sub_10022B6A4, 0, 0);
}

uint64_t sub_10022B6A4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 136) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10022B768;
  v2[3] = v1;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_10022B768(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[32] = a1;
  v4[33] = a2;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    return _swift_task_switch(sub_10022B8E8, 0, 0);
  }
}

uint64_t sub_10022B8E8()
{
  v0[34] = *(void *)(*(void *)(v0[17] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies) + 152);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[35] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10022B9B0;
  uint64_t v2 = v0[32];
  return v4(v2);
}

uint64_t sub_10022B9B0(char a1)
{
  *(unsigned char *)(*(void *)v1 + 304) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10022BAD0, 0, 0);
}

uint64_t sub_10022BAD0()
{
  if (*(unsigned char *)(v0 + 304) == 1)
  {
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D610 + dword_10065D610);
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_10022BCB8;
    uint64_t v2 = *(void *)(v0 + 120);
    uint64_t v3 = *(void *)(v0 + 128);
    uint64_t v5 = *(void *)(v0 + 104);
    uint64_t v4 = *(void *)(v0 + 112);
    return v10(v5, v4, v2, v3);
  }
  else
  {
    uint64_t v7 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v7 - 8) + 104))(v8, enum case for MarketplaceKitError.featureUnavailable(_:), v7);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_10022BCB8()
{
  *(void *)(*(void *)v1 + 296) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10022C34C;
  }
  else {
    uint64_t v2 = sub_10022BDCC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10022BDCC()
{
  uint64_t v50 = v0;
  uint64_t v1 = v0[18];
  unint64_t v2 = v0[19];
  v0[2] = v1;
  v0[4] = v0 + 2;
  v0[5] = v0[30];
  uint64_t v3 = v0[37];
  uint64_t v4 = v0[26];
  v0[3] = v2;
  sub_100012670(v1, v2);
  v0[6] = &type metadata for Data;
  v0[7] = v4;
  v0[8] = sub_1000175C4();
  v0[9] = sub_1000139E4(&qword_10065C510, (void (*)(uint64_t))&type metadata accessor for OAuthInvalidateRequest);
  decodeXPCValues<each A, B>(from:)();
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_100013510(v0[2], v0[3]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    uint64_t v7 = v0[29];
    uint64_t v6 = v0[30];
    uint64_t v8 = v0[27];
    uint64_t v47 = v0[28];
    uint64_t v9 = v0[25];
    uint64_t v10 = v0[26];
    uint64_t v12 = v0[23];
    uint64_t v11 = v0[24];
    sub_100013510(v0[2], v0[3]);
    (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v9, enum case for LogKey.Prefix.madctl(_:), v12);
    id v13 = objc_allocWithZone((Class)type metadata accessor for LogKey());
    id v14 = (void *)LogKey.init(prefix:)();
    static Logger.xpc.getter();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    v15(v7, v6, v10);
    v15(v47, v6, v10);
    id v16 = v14;
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t type = static os_log_type_t.default.getter();
    BOOL v18 = os_log_type_enabled(v17, type);
    uint64_t v19 = v0[29];
    id v46 = v16;
    uint64_t v48 = v0[28];
    uint64_t v21 = v0[26];
    uint64_t v20 = v0[27];
    uint64_t v23 = v0[21];
    uint64_t v22 = v0[22];
    uint64_t v24 = v0[20];
    if (v18)
    {
      uint64_t v41 = v0[26];
      uint64_t v44 = v0[20];
      uint64_t v25 = swift_slowAlloc();
      uint64_t v42 = v23;
      id v26 = (void *)swift_slowAlloc();
      v49[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 138412802;
      v0[10] = v16;
      uint64_t v43 = v22;
      id v27 = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v26 = v16;

      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v28 = OAuthInvalidateRequest.accountID.getter();
      v0[11] = sub_1000143F4(v28, v29, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      unint64_t v30 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v30(v19, v41);
      *(_WORD *)(v25 + 22) = 2082;
      uint64_t v31 = OAuthInvalidateRequest.server.getter();
      v0[12] = sub_1000143F4(v31, v32, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v30(v48, v41);
      _os_log_impl((void *)&_mh_execute_header, v17, type, "[%@] Requesting OAuth invalidation for accountID: %s server: %{public}s", (uint8_t *)v25, 0x20u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v43, v44);
    }
    else
    {

      unint64_t v30 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v30(v19, v21);
      v30(v48, v21);

      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    }
    uint64_t v33 = v0[30];
    uint64_t v34 = v0[26];
    uint64_t v35 = OAuthInvalidateRequest.accountID.getter();
    unint64_t v37 = v36;
    uint64_t v38 = OAuthInvalidateRequest.server.getter();
    sub_1003C44FC(v35, v37, v38, v39);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v30(v33, v34);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
  }
  return v5();
}

uint64_t sub_10022C34C()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10022C430(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  id v16 = (void *)swift_allocObject();
  v16[2] = v4;
  v16[3] = a1;
  v16[4] = a2;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = &unk_10065C4E8;
  *(void *)(v17 + 24) = v16;
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  swift_retain();
  id v19 = v4;
  sub_100012670(a1, a2);
  swift_retain();
  sub_100016EDC((uint64_t)"App Launch Request", 18, 2, a3, a4, 1, (uint64_t)v14, (uint64_t)&_swiftEmptySetSingleton, 1u, (uint64_t)v11, (uint64_t)&unk_10065C4F0, v17, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_10022C6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[17] = a7;
  v8[18] = a8;
  v8[15] = a5;
  v8[16] = a6;
  v8[13] = a3;
  v8[14] = a4;
  v8[12] = a2;
  uint64_t v9 = type metadata accessor for Logger();
  v8[19] = v9;
  v8[20] = *(void *)(v9 - 8);
  v8[21] = swift_task_alloc();
  return _swift_task_switch(sub_10022C76C, 0, 0);
}

uint64_t sub_10022C76C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 128) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v2;
  *unint64_t v2 = v0;
  v2[1] = sub_10022C830;
  v2[3] = v1;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_10022C830(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v3;
  uint64_t v5 = *v3;
  *(void *)(v4 + 184) = a1;
  *(void *)(v4 + 192) = a2;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    return _swift_task_switch(sub_10022C980, 0, 0);
  }
}

uint64_t sub_10022C980()
{
  v0[25] = *(void *)(*(void *)(v0[16] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies) + 152);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[26] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10022CA48;
  uint64_t v2 = v0[23];
  return v4(v2);
}

uint64_t sub_10022CA48(char a1)
{
  *(unsigned char *)(*(void *)v1 + 272) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10022CB68, 0, 0);
}

uint64_t sub_10022CB68()
{
  if (*(unsigned char *)(v0 + 272) == 1)
  {
    Swift::Int v1 = sub_100010C5C((uint64_t)&off_1006375D0);
    *(void *)(v0 + 216) = v1;
    swift_arrayDestroy();
    uint64_t v11 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                    + dword_10065D5F0);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10022CD54;
    uint64_t v3 = *(void *)(v0 + 112);
    uint64_t v4 = *(void *)(v0 + 120);
    uint64_t v5 = *(void *)(v0 + 96);
    uint64_t v6 = *(void *)(v0 + 104);
    return v11(v1, 0, v5, v6, v3, v4);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v9, enum case for MarketplaceKitError.featureUnavailable(_:), v8);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_10022CD54(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 232) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10022D228;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(unsigned char *)(v4 + 273) = a1 & 1;
    uint64_t v5 = sub_10022CE88;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10022CE88()
{
  if (*(unsigned char *)(v0 + 273) != 1)
  {
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_6;
  }
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 136);
  unint64_t v3 = *(void *)(v0 + 144);
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24) = v3;
  *(void *)(v0 + 48) = v0 + 16;
  *(void *)(v0 + 56) = v0 + 32;
  sub_100012670(v2, v3);
  *(void *)(v0 + 64) = &type metadata for Data;
  *(void *)(v0 + 72) = &type metadata for String;
  *(void *)(v0 + 80) = sub_1000175C4();
  *(void *)(v0 + 88) = &protocol witness table for String;
  decodeXPCValues<each A, B>(from:)();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_100013510(*(void *)(v0 + 16), *(void *)(v0 + 24));
LABEL_6:
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  unint64_t v7 = *(void *)(v0 + 112);
  unint64_t v6 = *(void *)(v0 + 120);
  unint64_t v9 = *(void *)(v0 + 96);
  unint64_t v8 = *(void *)(v0 + 104);
  sub_100013510(*(void *)(v0 + 16), *(void *)(v0 + 24));
  uint64_t v10 = *(void *)(v0 + 32);
  unint64_t v11 = *(void *)(v0 + 40);
  *(void *)(v0 + 240) = v11;
  sub_100515B6C(v10, v11);
  uint64_t v12 = audit_token_t.signingIdentifier.getter(v9, v8, v7, v6);
  *(void *)(v0 + 248) = v13;
  if (!v13)
  {
    swift_bridgeObjectRelease();
    static Logger.xpc.getter();
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Unable to launch app, no signing identifier", v19, 2u);
      swift_slowDealloc();
    }
    uint64_t v21 = *(void *)(v0 + 160);
    uint64_t v20 = *(void *)(v0 + 168);
    uint64_t v22 = *(void *)(v0 + 152);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_5;
  }
  uint64_t v14 = v12;
  uint64_t v15 = v13;
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065E9A0 + dword_10065E9A0);
  id v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v16;
  *id v16 = v0;
  v16[1] = sub_10022D2A4;
  return v23(v10, v11, v14, v15);
}

uint64_t sub_10022D228()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10022D2A4()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10022D3C8;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_100214A2C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10022D3C8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10022D48C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = enum case for LogKey.Prefix.adp(_:);
  uint64_t v16 = type metadata accessor for LogKey.Prefix();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v14, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  os_log_type_t v18 = (void *)swift_allocObject();
  v18[2] = v4;
  v18[3] = a1;
  v18[4] = a2;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = &unk_10065C4B8;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 1, 1, v20);
  swift_retain();
  id v21 = v4;
  sub_100012670(a1, a2);
  swift_retain();
  sub_100016EDC((uint64_t)"ADP Installation Request", 24, 2, a3, a4, 1, (uint64_t)v14, (uint64_t)&_swiftEmptySetSingleton, 1u, (uint64_t)v11, (uint64_t)&unk_10065C4C0, v19, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_10022D740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[38] = a7;
  v8[39] = a8;
  v8[36] = a5;
  v8[37] = a6;
  v8[34] = a3;
  v8[35] = a4;
  v8[33] = a2;
  sub_1000172F8(&qword_10065C3C0);
  v8[40] = swift_task_alloc();
  v8[41] = swift_task_alloc();
  type metadata accessor for AppInstallRequestType();
  v8[42] = swift_task_alloc();
  type metadata accessor for UUID();
  v8[43] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for URL();
  v8[44] = v9;
  v8[45] = *(void *)(v9 - 8);
  v8[46] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Logger();
  v8[47] = v10;
  v8[48] = *(void *)(v10 - 8);
  v8[49] = swift_task_alloc();
  v8[50] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for AppInstallRequest();
  v8[51] = v11;
  v8[52] = *(void *)(v11 - 8);
  v8[53] = swift_task_alloc();
  v8[54] = swift_task_alloc();
  v8[55] = swift_task_alloc();
  v8[56] = swift_task_alloc();
  return _swift_task_switch(sub_10022D994, 0, 0);
}

uint64_t sub_10022D994()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 296) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 456) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10022DA58;
  v2[3] = v1;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_10022DA58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[58] = a1;
  v5[59] = a2;
  v5[60] = a3;
  v5[61] = v3;
  swift_task_dealloc();
  if (v3)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v6 = (uint64_t (*)(void))v5[1];
    return v6();
  }
  else
  {
    return _swift_task_switch(sub_10022DC30, 0, 0);
  }
}

uint64_t sub_10022DC30()
{
  uint64_t v1 = *(void *)(v0[37] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies);
  v0[62] = v1;
  v0[63] = *(void *)(v1 + 152);
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[64] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10022DCFC;
  uint64_t v3 = v0[58];
  return v5(v3);
}

uint64_t sub_10022DCFC(char a1)
{
  *(unsigned char *)(*(void *)v1 + 129) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10022DE1C, 0, 0);
}

uint64_t sub_10022DE1C()
{
  uint64_t v79 = v0;
  if (*(unsigned char *)(v0 + 129) != 1)
  {
    uint64_t v6 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 104))(v7, enum case for MarketplaceKitError.featureUnavailable(_:), v6);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_5;
  }
  uint64_t v1 = *(void *)(v0 + 488);
  uint64_t v2 = *(void *)(v0 + 448);
  uint64_t v3 = *(void *)(v0 + 408);
  uint64_t v4 = *(void *)(v0 + 304);
  unint64_t v5 = *(void *)(v0 + 312);
  *(void *)(v0 + 136) = v4;
  *(void *)(v0 + 144) = v5;
  *(void *)(v0 + 192) = v0 + 136;
  *(void *)(v0 + 200) = v2;
  sub_100012670(v4, v5);
  *(void *)(v0 + 240) = &type metadata for Data;
  *(void *)(v0 + 168) = v3;
  *(void *)(v0 + 176) = sub_1000175C4();
  *(void *)(v0 + 184) = sub_1000139E4(&qword_10065C4C8, (void (*)(uint64_t))&type metadata accessor for AppInstallRequest);
  decodeXPCValues<each A, B>(from:)();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_100013510(*(void *)(v0 + 136), *(void *)(v0 + 144));
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  uint64_t v11 = *(void *)(v0 + 440);
  uint64_t v10 = *(void *)(v0 + 448);
  uint64_t v12 = *(void *)(v0 + 432);
  uint64_t v13 = *(void *)(v0 + 408);
  uint64_t v14 = *(void *)(v0 + 416);
  sub_100013510(*(void *)(v0 + 136), *(void *)(v0 + 144));
  static Logger.install.getter();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v15(v11, v10, v13);
  char v69 = v15;
  v15(v12, v10, v13);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v19 = *(void *)(v0 + 440);
  uint64_t v20 = *(void *)(v0 + 416);
  uint64_t v74 = *(void *)(v0 + 400);
  uint64_t v76 = *(void *)(v0 + 384);
  uint64_t v70 = *(void *)(v0 + 432);
  uint64_t v72 = *(void *)(v0 + 376);
  if (v18)
  {
    uint64_t v62 = *(void *)(v0 + 368);
    unint64_t v61 = *(void *)(v0 + 288);
    unint64_t v60 = *(void *)(v0 + 280);
    uint64_t v65 = *(void *)(v0 + 360);
    unint64_t v59 = *(void *)(v0 + 272);
    uint64_t v57 = *(void *)(v0 + 352);
    unint64_t v58 = *(void *)(v0 + 264);
    uint64_t v67 = *(void *)(v0 + 408);
    os_log_type_t type = v17;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v64 = (void *)swift_slowAlloc();
    v78[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 138413058;
    os_log_t log = v16;
    uint64_t v22 = sub_1005163F0();
    *(void *)(v0 + 224) = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v64 = v22;
    *(_WORD *)(v21 + 12) = 2080;
    char v23 = AppInstallRequest.isMarketplaceInstall.getter();
    BOOL v24 = (v23 & 1) == 0;
    if (v23) {
      uint64_t v25 = 0x6C7074656B72614DLL;
    }
    else {
      uint64_t v25 = 0x65766974614ELL;
    }
    if (v24) {
      unint64_t v26 = 0xE600000000000000;
    }
    else {
      unint64_t v26 = 0xEB00000000656361;
    }
    *(void *)(v0 + 232) = sub_1000143F4(v25, v26, v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    id v27 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v27(v19, v67);
    *(_WORD *)(v21 + 22) = 2082;
    *(void *)(v0 + 152) = audit_token_t.signingIdentifier.getter(v58, v59, v60, v61);
    *(void *)(v0 + 160) = v28;
    sub_1000172F8(&qword_10065C4D0);
    uint64_t v29 = String.init<A>(describing:)();
    *(void *)(v0 + 248) = sub_1000143F4(v29, v30, v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 32) = 2082;
    AppInstallRequest.adp.getter();
    sub_1000139E4(&qword_10065C4D8, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v33 = v32;
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v62, v57);
    *(void *)(v0 + 256) = sub_1000143F4(v31, v33, v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v27(v70, v67);
    _os_log_impl((void *)&_mh_execute_header, log, type, "[%@] Handling ADP installation request of type: %s from: %{public}s. ADP: %{public}s", (uint8_t *)v21, 0x2Au);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    id v27 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    uint64_t v34 = *(void *)(v0 + 408);
    v27(*(void *)(v0 + 440), v34);
    v27(v70, v34);
  }
  uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
  v35(v74, v72);
  unint64_t v77 = v27;
  *(void *)(v0 + 520) = v27;
  uint64_t v36 = *(void *)(v0 + 448);
  uint64_t v37 = *(void *)(v0 + 424);
  uint64_t v38 = *(void *)(v0 + 408);
  static Logger.install.getter();
  v69(v37, v36, v38);
  unint64_t v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.debug.getter();
  BOOL v41 = os_log_type_enabled(v39, v40);
  uint64_t v42 = *(void *)(v0 + 424);
  uint64_t v43 = *(void *)(v0 + 392);
  uint64_t v44 = *(void *)(v0 + 376);
  if (v41)
  {
    uint64_t v73 = *(void *)(v0 + 392);
    uint64_t v75 = *(void *)(v0 + 376);
    uint64_t v68 = *(void *)(v0 + 408);
    uint64_t v45 = swift_slowAlloc();
    id v46 = (void *)swift_slowAlloc();
    v78[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 138412546;
    uint64_t v71 = v35;
    uint64_t v47 = sub_1005163F0();
    *(void *)(v0 + 208) = v47;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v46 = v47;
    *(_WORD *)(v45 + 12) = 2080;
    uint64_t v48 = AppInstallRequest.oAuthToken.getter();
    if (v49)
    {
      unint64_t v50 = v49;
    }
    else
    {
      uint64_t v48 = 0x6E656B6F54206F4ELL;
      unint64_t v50 = 0xE800000000000000;
    }
    *(void *)(v0 + 216) = sub_1000143F4(v48, v50, v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v77(v42, v68);
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "[%@] Received OAuthToken: %s", (uint8_t *)v45, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v71(v73, v75);
  }
  else
  {
    v77(*(void *)(v0 + 424), *(void *)(v0 + 408));

    v35(v43, v44);
  }
  uint64_t v51 = sub_1005163F0();
  *(void *)(v0 + 528) = v51;
  uint64_t v52 = (void *)swift_task_alloc();
  *(void *)(v0 + 536) = v52;
  *uint64_t v52 = v0;
  v52[1] = sub_10022E798;
  uint64_t v53 = *(void *)(v0 + 280);
  uint64_t v54 = *(void *)(v0 + 288);
  uint64_t v55 = *(void *)(v0 + 264);
  uint64_t v56 = *(void *)(v0 + 272);
  return sub_10035E1E8(v0 + 16, v55, v56, v53, v54, v51);
}

uint64_t sub_10022E798()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 544) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10022F544;
  }
  else
  {

    uint64_t v3 = sub_10022E8B4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10022E8B4()
{
  uint64_t v39 = *(void *)(v0 + 480);
  uint64_t v40 = *(void *)(v0 + 496);
  uint64_t v25 = *(void *)(v0 + 472);
  uint64_t v22 = *(void *)(v0 + 464);
  uint64_t v38 = *(void *)(v0 + 344);
  uint64_t v33 = *(void *)(v0 + 336);
  uint64_t v41 = *(void *)(v0 + 328);
  uint64_t v42 = *(void *)(v0 + 368);
  uint64_t v24 = *(void *)(v0 + 320);
  unint64_t v2 = *(void *)(v0 + 280);
  unint64_t v1 = *(void *)(v0 + 288);
  unint64_t v36 = v2;
  unint64_t v4 = *(void *)(v0 + 264);
  unint64_t v3 = *(void *)(v0 + 272);
  unint64_t v34 = v4;
  unint64_t v35 = v3;
  uint64_t v32 = type metadata accessor for ADPInstallConfiguration(0);
  AppInstallRequest.id.getter();
  uint64_t v37 = (void *)sub_1005163F0();
  sub_10019B17C(v0 + 16, v0 + 56);
  AppInstallRequest.type.getter();
  uint64_t v5 = AppInstallRequest.oAuthToken.getter();
  uint64_t v30 = v6;
  uint64_t v31 = v5;
  uint64_t v7 = AppInstallRequest.installVerificationToken.getter();
  uint64_t v28 = v8;
  uint64_t v29 = v7;
  uint64_t v9 = AppInstallRequest.accountID.getter();
  uint64_t v26 = v10;
  uint64_t v27 = v9;
  uint64_t v23 = audit_token_t.signingIdentifier.getter(v4, v3, v2, v1);
  uint64_t v21 = v11;
  AppInstallRequest.adp.getter();
  AppInstallRequest.referrer.getter();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  AppInstallRequest.appShareURL.getter();
  uint64_t v12 = *(void *)(v0 + 80);
  uint64_t v13 = *(void *)(v0 + 88);
  uint64_t v14 = sub_100239C90(v0 + 56, v12);
  uint64_t v15 = *(void *)(v12 - 8);
  uint64_t v16 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v16, v14, v12);
  *((void *)&v20 + 1) = v26;
  *(void *)&long long v20 = v27;
  *(void *)(v0 + 552) = sub_1002BF414(v38, v37, v16, v33, v31, v30, v29, v28, v20, v23, v21, v42, v41, v40, v22, v25, v39, 0, 0xF000000000000000,
                            1u,
                            0,
                            1,
                            v24,
                            v32,
                            v12,
                            v13);
  swift_release();

  sub_100014524(v0 + 56);
  swift_task_dealloc();
  *(void *)(v0 + 96) = v34;
  *(void *)(v0 + 104) = v35;
  *(void *)(v0 + 112) = v36;
  *(void *)(v0 + 120) = v1;
  *(unsigned char *)(v0 + 128) = 0;
  type metadata accessor for ADPInstallTask();
  swift_allocObject();
  uint64_t v17 = swift_retain();
  uint64_t v18 = sub_100346FA4(v17, v0 + 96);
  *(void *)(v0 + 560) = v18;
  return _swift_task_switch(sub_10022EBA4, v18, 0);
}

uint64_t sub_10022EBA4()
{
  *(unsigned char *)(*(void *)(v0 + 560)
           + OBJC_IVAR____TtC28ManagedAppDistributionDaemon14ADPInstallTask_shouldCacheInstallAsPending) = 0;
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 568) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_10022EC44;
  return sub_10034213C();
}

uint64_t sub_10022EC44()
{
  unint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[74] = v0;
    unint64_t v4 = (void *)swift_task_alloc();
    v2[75] = v4;
    *unint64_t v4 = v3;
    v4[1] = sub_10022F280;
    return sub_10034A584(v0);
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v2[72] = v6;
    void *v6 = v3;
    v6[1] = sub_10022EDF4;
    return sub_1003580F4();
  }
}

uint64_t sub_10022EDF4()
{
  unint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[74] = v0;
    unint64_t v4 = (void *)swift_task_alloc();
    v2[75] = v4;
    *unint64_t v4 = v3;
    v4[1] = sub_10022F280;
    return sub_10034A584(v0);
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v2[73] = v6;
    void *v6 = v3;
    v6[1] = sub_10022EFA4;
    return sub_100348D6C();
  }
}

uint64_t sub_10022EFA4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(void *)(v2 + 592) = v0;
    unint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 600) = v4;
    *unint64_t v4 = v3;
    v4[1] = sub_10022F280;
    return sub_10034A584(v0);
  }
  else
  {
    return _swift_task_switch(sub_10022F128, 0, 0);
  }
}

uint64_t sub_10022F128()
{
  uint64_t v1 = v0[56];
  uint64_t v3 = v0[51];
  uint64_t v2 = v0[52];
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_100014524((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10022F280()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 560);
  swift_task_dealloc();
  return _swift_task_switch(sub_10022F390, v1, 0);
}

uint64_t sub_10022F390()
{
  swift_willThrow();
  return _swift_task_switch(sub_10022F400, 0, 0);
}

uint64_t sub_10022F400()
{
  uint64_t v1 = v0[56];
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[52];
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_100014524((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10022F544()
{
  uint64_t v1 = (void *)v0[66];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[65];
  uint64_t v3 = v0[56];
  uint64_t v4 = v0[51];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  v2(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10022F6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[16] = a7;
  v8[17] = a8;
  v8[15] = a1;
  uint64_t v9 = type metadata accessor for InstallRequirements();
  v8[18] = v9;
  v8[19] = *(void *)(v9 - 8);
  v8[20] = swift_task_alloc();
  return _swift_task_switch(sub_10022F768, 0, 0);
}

id sub_10022F768()
{
  unint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 128);
  *(void *)(v0 + 80) = *(void *)(v0 + 160);
  *(void *)(v0 + 56) = v3;
  *(void *)(v0 + 64) = v1;
  *(void *)(v0 + 72) = v0 + 56;
  sub_100012670(v3, v1);
  *(void *)(v0 + 88) = &type metadata for Data;
  *(void *)(v0 + 96) = v2;
  *(void *)(v0 + 104) = sub_1000175C4();
  *(void *)(v0 + 112) = sub_1000139E4(&qword_10065C4A8, (void (*)(uint64_t))&type metadata accessor for InstallRequirements);
  decodeXPCValues<each A, B>(from:)();
  sub_100013510(*(void *)(v0 + 56), *(void *)(v0 + 64));
  uint64_t v4 = InstallRequirements.minimumSystemVersion.getter();
  if (!v5)
  {
    uint64_t v11 = InstallRequirements.requiredDeviceCapabilities.getter();
    if (!v11)
    {
      unsigned __int8 v8 = 1;
      goto LABEL_9;
    }
    uint64_t v10 = v11;
    goto LABEL_7;
  }
  uint64_t v6 = v4;
  unint64_t v7 = v5;
  swift_bridgeObjectRetain();
  sub_100447360(v6, v7, (uint64_t *)(v0 + 16));
  unsigned __int8 v8 = sub_1004B2A88(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
  sub_10018B0C4(v0 + 16);
  swift_bridgeObjectRelease();
  uint64_t v9 = InstallRequirements.requiredDeviceCapabilities.getter();
  if (v9)
  {
    uint64_t v10 = v9;
    if ((v8 & 1) == 0)
    {
      unsigned __int8 v8 = 0;
LABEL_8:
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
LABEL_7:
    unsigned __int8 v8 = sub_1004B2F34(v10);
    goto LABEL_8;
  }
LABEL_9:
  uint64_t v12 = InstallRequirements.ageRatingRank.getter();
  char v14 = v13 & v8;
  if (v13 & 1) == 0 && (v8)
  {
    uint64_t v15 = v12;
    id result = [self sharedConnection];
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v17 = result;
    id v18 = [result effectiveValueForSetting:MCFeatureMaximumAppsRating];

    if (v18)
    {
      uint64_t v19 = (uint64_t)[v18 integerValue];
    }
    else
    {
      uint64_t v19 = 1000;
    }
    char v14 = v19 >= v15;
  }
  uint64_t v20 = InstallRequirements.expectedInstallSize.getter();
  char v22 = v21 & v14;
  if (v21 & 1) == 0 && (v14)
  {
    unint64_t v23 = v20;
    uint64_t v24 = sub_100431EC0();
    char v22 = v24 >= 0 && v24 >= v23;
  }
  uint64_t v26 = *(void *)(v0 + 152);
  uint64_t v27 = *(void *)(v0 + 160);
  uint64_t v28 = *(void *)(v0 + 144);
  **(unsigned char **)(v0 + 120) = v22 & 1;
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v28);
  swift_task_dealloc();
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v29();
}

uint64_t sub_10022FD18(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  char v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LogKey.Prefix();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  swift_retain();
  Swift::Int v16 = sub_100010C5C((uint64_t)&off_100637F20);
  swift_arrayDestroy();
  uint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = v4;
  v17[3] = a1;
  v17[4] = a2;
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  id v19 = v4;
  sub_100012670(a1, a2);
  sub_100016EDC((uint64_t)"Request update metadata", 23, 2, a3, a4, 1, (uint64_t)v14, v16, 1u, (uint64_t)v11, (uint64_t)&unk_10065C3F0, (uint64_t)v17, (uint64_t)&unk_10063B368, (uint64_t)&unk_10065C400);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_10022FF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[56] = a8;
  v8[57] = v15;
  v8[54] = a6;
  v8[55] = a7;
  v8[52] = a4;
  v8[53] = a5;
  v8[50] = a1;
  v8[51] = a3;
  sub_1000172F8(&qword_10065C438);
  v8[58] = swift_task_alloc();
  v8[59] = swift_task_alloc();
  v8[60] = swift_task_alloc();
  v8[61] = swift_task_alloc();
  v8[62] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for OSEligibilityDomain();
  v8[63] = v9;
  v8[64] = *(void *)(v9 - 8);
  v8[65] = swift_task_alloc();
  uint64_t updated = type metadata accessor for UpdateMetadataRequest();
  v8[66] = updated;
  v8[67] = *(void *)(updated - 8);
  v8[68] = swift_task_alloc();
  v8[69] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Logger();
  v8[70] = v11;
  v8[71] = *(void *)(v11 - 8);
  v8[72] = swift_task_alloc();
  v8[73] = swift_task_alloc();
  v8[74] = swift_task_alloc();
  v8[75] = swift_task_alloc();
  v8[76] = swift_task_alloc();
  v8[77] = swift_task_alloc();
  v8[78] = swift_task_alloc();
  v8[79] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for LogKey.Prefix();
  v8[80] = v12;
  v8[81] = *(void *)(v12 - 8);
  v8[82] = swift_task_alloc();
  return _swift_task_switch(sub_100230258, 0, 0);
}

uint64_t sub_100230258()
{
  uint64_t v1 = v0[55];
  (*(void (**)(void, void, void))(v0[81] + 104))(v0[82], enum case for LogKey.Prefix.general(_:), v0[80]);
  id v2 = objc_allocWithZone((Class)type metadata accessor for LogKey());
  uint64_t v3 = (void *)LogKey.init(prefix:)();
  sub_100516980(v3);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  unint64_t v5 = (void *)swift_task_alloc();
  v0[83] = v5;
  *unint64_t v5 = v0;
  v5[1] = sub_10023039C;
  v5[3] = v4;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_10023039C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = (void *)*v4;
  v5[84] = a1;
  v5[85] = a2;
  v5[86] = a3;
  v5[87] = v3;
  swift_task_dealloc();
  if (v3)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v5[1];
    return v6();
  }
  else
  {
    return _swift_task_switch(sub_100230624, 0, 0);
  }
}

uint64_t sub_100230624()
{
  uint64_t v1 = *(void *)(v0[55] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies);
  v0[88] = v1;
  v0[89] = *(void *)(v1 + 152);
  uint64_t v2 = dword_1006638A0;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[90] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10023071C;
  uint64_t v4 = v0[84];
  return ((uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + v2))(v4);
}

uint64_t sub_10023071C(char a1)
{
  *(unsigned char *)(*(void *)v1 + 130) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100230868, 0, 0);
}

uint64_t sub_100230868()
{
  uint64_t v123 = v0;
  uint64_t v1 = (void *)v0;
  if ((*(unsigned char *)(v0 + 130) & 1) == 0)
  {
    uint64_t v17 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v17 - 8) + 104))(v18, enum case for MarketplaceKitError.featureUnavailable(_:), v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  uint64_t v2 = v0 + 216;
  static Logger.updates.getter();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v5 = 138412290;
    uint64_t v7 = sub_1005163F0();
    v120[42] = v7;
    uint64_t v1 = v120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v6 = v7;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%@] Update metadata requested", v5, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v8 = v1[87];
  uint64_t v9 = v1[79];
  uint64_t v10 = v1[71];
  uint64_t v11 = v1[70];
  uint64_t v12 = v1[69];
  uint64_t v13 = v1[66];
  uint64_t v14 = v1[56];
  unint64_t v15 = v1[57];
  Swift::Int v16 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v1[91] = v16;
  v1[92] = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v16(v9, v11);
  v1[38] = v12;
  v1[27] = v14;
  v1[28] = v15;
  v1[36] = v2;
  sub_100012670(v14, v15);
  v1[34] = &type metadata for Data;
  v1[31] = v13;
  v1[32] = sub_1000175C4();
  v1[33] = sub_1000139E4((unint64_t *)&unk_10065C440, (void (*)(uint64_t))&type metadata accessor for UpdateMetadataRequest);
  decodeXPCValues<each A, B>(from:)();
  if (v8)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_100013510(v1[27], v1[28]);
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v19 = (uint64_t (*)(void))v120[1];
    return v19();
  }
  uint64_t v118 = v16;
  uint64_t v21 = v1[69];
  uint64_t v22 = v1[68];
  uint64_t v23 = v1[67];
  uint64_t v24 = v1[66];
  sub_100013510(v1[27], v1[28]);
  static Logger.updates.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v22, v21, v24);
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  BOOL v27 = os_log_type_enabled(v25, v26);
  uint64_t v28 = v1[78];
  uint64_t v29 = v1[70];
  uint64_t v30 = v1[68];
  uint64_t v31 = v1[67];
  uint64_t v32 = v1[66];
  if (v27)
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v116 = v28;
    unint64_t v34 = (void *)swift_slowAlloc();
    v122[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 138412546;
    uint64_t v35 = sub_1005163F0();
    v120[48] = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v34 = v35;
    *(_WORD *)(v33 + 12) = 2082;
    uint64_t updated = UpdateMetadataRequest.bundleID.getter();
    v120[49] = sub_1000143F4(updated, v37, v122);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v38(v30, v32);
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "[%@] Request is for %{public}s", (uint8_t *)v33, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v1 = v120;
    swift_slowDealloc();

    uint64_t v39 = v118;
    v118(v116, v29);
  }
  else
  {
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v38(v30, v32);

    uint64_t v39 = v118;
    v118(v28, v29);
  }
  v1[93] = v38;
  uint64_t v40 = UpdateMetadataRequest.bundleID.getter();
  uint64_t v42 = v41;
  id v43 = objc_allocWithZone((Class)LSApplicationRecord);
  id v44 = sub_1003DB240(v40, v42, 0);
  v1[94] = v44;
  uint64_t v45 = v44;
  sub_10050BD10((uint64_t)(v1 + 2));
  uint64_t v117 = v38;
  if (!v1[5])
  {
    sub_10001729C((uint64_t)(v1 + 2), &qword_10065D3A0);
    goto LABEL_18;
  }
  sub_1000172F8(&qword_10065C450);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_18:
    static Logger.updates.getter();
    id v58 = v45;
    unint64_t v59 = Logger.logObject.getter();
    os_log_type_t v60 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v59, v60))
    {
      unint64_t v61 = v1 + 7;
      uint64_t v62 = swift_slowAlloc();
      Swift::String v63 = (void *)swift_slowAlloc();
      v122[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v62 = 138412546;
      uint64_t v64 = sub_1005163F0();
      v120[35] = v64;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *Swift::String v63 = v64;
      *(_WORD *)(v62 + 12) = 2082;
      sub_10050BD10((uint64_t)v61);
      if (v120[10])
      {
        sub_10018AC60(v61, v120[10]);
        uint64_t v65 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v67 = v66;
        sub_100014524((uint64_t)v61);
      }
      else
      {
        sub_10001729C((uint64_t)v61, &qword_10065D3A0);
        unint64_t v67 = 0xE500000000000000;
        uint64_t v65 = 0x3E6C696E3CLL;
      }
      uint64_t v119 = v120[77];
      uint64_t v99 = v120[70];
      v120[37] = sub_1000143F4(v65, v67, v122);
      uint64_t v1 = v120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v59, v60, "[%@] Ineligible distributor: %{public}s", (uint8_t *)v62, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v118(v119, v99);
    }
    else
    {
      uint64_t v68 = v1[77];
      uint64_t v69 = v1[70];

      v39(v68, v69);
    }
    uint64_t v100 = v1[69];
    uint64_t v101 = v1[66];
    uint64_t v102 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v102 - 8) + 104))(v103, enum case for MarketplaceKitError.featureUnavailable(_:), v102);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    goto LABEL_41;
  }
  uint64_t v46 = v1[64];
  v1[95] = v1[30];
  unsigned __int8 v47 = [v45 isManagedAppDistributor];
  uint64_t v48 = (void (**)(uint64_t, void, uint64_t))(v46 + 104);
  unint64_t v49 = (void (**)(uint64_t, uint64_t))(v46 + 8);
  uint64_t v50 = v1[65];
  uint64_t v51 = v1[63];
  uint64_t v53 = v1[53];
  uint64_t v52 = v1[54];
  uint64_t v55 = v1[51];
  uint64_t v54 = v1[52];
  if (v47)
  {
    uint64_t v56 = (uint64_t)(v1 + 22);
    v1[22] = v55;
    v1[23] = v54;
    v1[24] = v53;
    v1[25] = v52;
    *((unsigned char *)v1 + 208) = 0;
    uint64_t v57 = (unsigned int *)&enum case for OSEligibilityDomain.helium(_:);
  }
  else
  {
    uint64_t v56 = (uint64_t)(v1 + 17);
    v1[17] = v55;
    v1[18] = v54;
    v1[19] = v53;
    v1[20] = v52;
    *((unsigned char *)v1 + 168) = 0;
    uint64_t v57 = (unsigned int *)&enum case for OSEligibilityDomain.potassium(_:);
  }
  (*v48)(v50, *v57, v51);
  char v70 = sub_1001D1034(v50, v56);
  (*v49)(v50, v51);
  if ((v70 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    static Logger.updates.getter();
    uint64_t v93 = Logger.logObject.getter();
    os_log_type_t v94 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v93, v94))
    {
      uint64_t v95 = (uint8_t *)swift_slowAlloc();
      Swift::String v96 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v95 = 138412290;
      uint64_t v97 = sub_1005163F0();
      v1[39] = v97;
      uint64_t v39 = v118;
      uint64_t v1 = v120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *Swift::String v96 = v97;
      _os_log_impl((void *)&_mh_execute_header, v93, v94, "[%@] Not eligible for updates", v95, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v98 = v1[72];
    goto LABEL_40;
  }
  id v71 = [v45 iTunesMetadata];
  id v72 = [v71 storeItemIdentifier];

  if (!v72)
  {
    swift_bridgeObjectRelease();
    static Logger.updates.getter();
    uint64_t v93 = Logger.logObject.getter();
    os_log_type_t v104 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v93, v104))
    {
      uint64_t v105 = (uint8_t *)swift_slowAlloc();
      uint64_t v106 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v105 = 138412290;
      uint64_t v107 = sub_1005163F0();
      v1[40] = v107;
      uint64_t v39 = v118;
      uint64_t v1 = v120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v106 = v107;
      _os_log_impl((void *)&_mh_execute_header, v93, v104, "[%@] No item ID found", v105, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v98 = v1[76];
LABEL_40:
    uint64_t v108 = v120[70];
    uint64_t v100 = v120[69];
    uint64_t v101 = v120[66];

    v39(v98, v108);
    uint64_t v109 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v109 - 8) + 104))(v110, enum case for MarketplaceKitError.featureUnavailable(_:), v109);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

LABEL_41:
    v117(v100, v101);
    goto LABEL_7;
  }
  uint64_t v73 = v1[62];
  id v74 = [v45 iTunesMetadata];
  id v75 = [v74 storeItemIdentifier];

  v1[41] = v75;
  uint64_t v76 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v78 = v77;
  v1[96] = v76;
  v1[97] = v77;
  uint64_t v79 = type metadata accessor for UpdateMetadata();
  v1[98] = v79;
  uint64_t v80 = *(void *)(v79 - 8);
  v1[99] = v80;
  uint64_t v81 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56);
  v1[100] = v81;
  v1[101] = (v80 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v81(v73, 1, 1, v79);
  if (UpdateMetadataRequest.shouldCheckInWithServer.getter())
  {
    static Logger.updates.getter();
    uint64_t v82 = Logger.logObject.getter();
    os_log_type_t v83 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v82, v83))
    {
      unint64_t v84 = (uint8_t *)swift_slowAlloc();
      unint64_t v85 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v84 = 138412290;
      uint64_t v86 = sub_1005163F0();
      v1[47] = v86;
      uint64_t v39 = v118;
      uint64_t v1 = v120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v85 = v86;
      _os_log_impl((void *)&_mh_execute_header, v82, v83, "[%@] Checking in with the server", v84, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v87 = v1[75];
    uint64_t v88 = v1[70];
    uint64_t v90 = v1[53];
    uint64_t v89 = v1[54];
    long long v121 = *(_OWORD *)(v1 + 51);

    v39(v87, v88);
    *((_OWORD *)v1 + 6) = v121;
    v1[14] = v90;
    v1[15] = v89;
    *((unsigned char *)v1 + 128) = 0;
    uint64_t v91 = dword_100660370;
    id v92 = (void *)swift_task_alloc();
    v1[102] = v92;
    *id v92 = v1;
    v92[1] = sub_100231B14;
    int64_t v125 = v1 + 12;
    __asm { BR              X10; sub_1002F4FE8 }
  }
  uint64_t v111 = v1[88];
  swift_bridgeObjectRelease();
  uint64_t v112 = *(void *)(*(void *)(v111 + 200) + 24);
  v1[109] = v112;
  uint64_t v113 = swift_task_alloc();
  v1[110] = v113;
  *(void *)(v113 + 16) = v76;
  *(void *)(v113 + 24) = v78;
  uint64_t v114 = dword_100660758;
  swift_retain();
  uint64_t v115 = (void *)swift_task_alloc();
  v1[111] = v115;
  *uint64_t v115 = v1;
  v115[1] = sub_1002325D4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_100660758 + v114))((uint64_t)sub_100239784, v113, v112);
}

uint64_t sub_100231B14()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100231C58, 0, 0);
}

uint64_t sub_100231C58()
{
  uint64_t v1 = v0[97];
  uint64_t v2 = v0[96];
  uint64_t v3 = *(void *)(*(void *)(v0[88] + 200) + 24);
  v0[103] = v3;
  uint64_t v4 = swift_task_alloc();
  v0[104] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = dword_100660758;
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[105] = v6;
  void *v6 = v0;
  v6[1] = sub_100231D80;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_100660758 + v5))((uint64_t)sub_10023E508, v4, v3);
}

uint64_t sub_100231D80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[106] = a1;
  v4[107] = a2;
  v4[108] = v2;
  swift_task_dealloc();
  swift_release();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v5 = sub_100232E30;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v5 = sub_100231F2C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100231F2C()
{
  uint64_t v39 = v0;
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 856);
  if (v1)
  {
    swift_retain();
    static Logger.updates.getter();
    swift_retain_n();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v31 = *(void *)(v0 + 848);
      unint64_t v36 = *(void (**)(uint64_t, uint64_t))(v0 + 728);
      uint64_t v32 = *(void *)(v0 + 560);
      uint64_t v34 = *(void *)(v0 + 592);
      uint64_t v4 = swift_slowAlloc();
      uint64_t v5 = (void *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 138412546;
      uint64_t v6 = sub_1005163F0();
      *(void *)(v0 + 360) = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v5 = v6;
      *(_WORD *)(v4 + 12) = 2082;
      uint64_t v7 = sub_1002E0504(v31, v1);
      *(void *)(v0 + 368) = sub_1000143F4(v7, v8, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%@] Remote update found %{public}s", (uint8_t *)v4, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v36(v34, v32);
    }
    else
    {
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 728);
      uint64_t v10 = *(void *)(v0 + 592);
      uint64_t v11 = *(void *)(v0 + 560);
      swift_release_n();

      v9(v10, v11);
    }
    unint64_t v37 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 800);
    uint64_t v12 = *(void *)(v0 + 488);
    uint64_t v33 = *(void *)(v0 + 496);
    uint64_t v35 = *(void *)(v0 + 784);
    UpdateMetadataRequest.bundleID.getter();
    swift_retain();
    sub_100311E74(3, v1);
    swift_release();
    swift_retain();
    sub_100311E74(6, v1);
    swift_release();
    UpdateMetadata.init(bundleID:bundleVersion:itemID:shortVersionString:)();
    swift_release_n();
    sub_10001729C(v33, &qword_10065C438);
    v37(v12, 0, 1, v35);
    sub_10001733C(v12, v33, &qword_10065C438);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (os_variant_has_internal_content())
  {
    uint64_t v13 = *(void *)(v0 + 792);
    uint64_t v14 = *(void *)(v0 + 784);
    uint64_t v15 = *(void *)(v0 + 472);
    sub_100017238(*(void *)(v0 + 496), v15, &qword_10065C438);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v14) != 1)
    {
      uint64_t v24 = *(void **)(v0 + 752);
      uint64_t v25 = *(void *)(v0 + 472);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      sub_10001729C(v25, &qword_10065C438);
      goto LABEL_15;
    }
    sub_10001729C(*(void *)(v0 + 472), &qword_10065C438);
    *(unsigned char *)(v0 + 129) = 0;
    Swift::Int v16 = (__CFString *)String._bridgeToObjectiveC()();
    uint64_t v17 = (__CFString *)String._bridgeToObjectiveC()();
    int AppBooleanValue = CFPreferencesGetAppBooleanValue(v16, v17, (Boolean *)(v0 + 129));

    if (*(unsigned char *)(v0 + 129) && AppBooleanValue)
    {
      id v19 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 800);
      uint64_t v20 = *(void *)(v0 + 784);
      uint64_t v21 = *(void **)(v0 + 752);
      uint64_t v22 = *(void *)(v0 + 496);
      uint64_t v23 = *(void *)(v0 + 464);
      UpdateMetadataRequest.bundleID.getter();
      UpdateMetadata.init(bundleID:bundleVersion:itemID:shortVersionString:)();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      sub_10001729C(v22, &qword_10065C438);
      v19(v23, 0, 1, v20);
      sub_10001733C(v23, v22, &qword_10065C438);
      goto LABEL_15;
    }
  }

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
LABEL_15:
  uint64_t v26 = *(void *)(v0 + 552);
  uint64_t v27 = *(void *)(v0 + 536);
  uint64_t v28 = *(void *)(v0 + 528);
  sub_10001733C(*(void *)(v0 + 496), *(void *)(v0 + 400), &qword_10065C438);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_1002325D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[112] = a1;
  v4[113] = a2;
  v4[114] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    uint64_t v5 = sub_100233008;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v5 = sub_100232784;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100232784()
{
  uint64_t v39 = v0;
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 904);
  if (v1)
  {
    swift_retain();
    static Logger.updates.getter();
    swift_retain_n();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v31 = *(void *)(v0 + 896);
      unint64_t v36 = *(void (**)(uint64_t, uint64_t))(v0 + 728);
      uint64_t v32 = *(void *)(v0 + 560);
      uint64_t v34 = *(void *)(v0 + 584);
      uint64_t v4 = swift_slowAlloc();
      uint64_t v5 = (void *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 138412546;
      uint64_t v6 = sub_1005163F0();
      *(void *)(v0 + 344) = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v5 = v6;
      *(_WORD *)(v4 + 12) = 2082;
      uint64_t v7 = sub_1002E0504(v31, v1);
      *(void *)(v0 + 352) = sub_1000143F4(v7, v8, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%@] Local update found %{public}s", (uint8_t *)v4, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v36(v34, v32);
    }
    else
    {
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 728);
      uint64_t v10 = *(void *)(v0 + 584);
      uint64_t v11 = *(void *)(v0 + 560);
      swift_release_n();

      v9(v10, v11);
    }
    unint64_t v37 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 800);
    uint64_t v33 = *(void *)(v0 + 496);
    uint64_t v35 = *(void *)(v0 + 784);
    uint64_t v12 = *(void *)(v0 + 480);
    UpdateMetadataRequest.bundleID.getter();
    swift_retain();
    sub_100311E74(3, v1);
    swift_release();
    swift_retain();
    sub_100311E74(6, v1);
    swift_release();
    UpdateMetadata.init(bundleID:bundleVersion:itemID:shortVersionString:)();
    swift_release_n();
    sub_10001729C(v33, &qword_10065C438);
    v37(v12, 0, 1, v35);
    sub_10001733C(v12, v33, &qword_10065C438);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (os_variant_has_internal_content())
  {
    uint64_t v13 = *(void *)(v0 + 792);
    uint64_t v14 = *(void *)(v0 + 784);
    uint64_t v15 = *(void *)(v0 + 472);
    sub_100017238(*(void *)(v0 + 496), v15, &qword_10065C438);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v14) != 1)
    {
      uint64_t v24 = *(void **)(v0 + 752);
      uint64_t v25 = *(void *)(v0 + 472);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      sub_10001729C(v25, &qword_10065C438);
      goto LABEL_15;
    }
    sub_10001729C(*(void *)(v0 + 472), &qword_10065C438);
    *(unsigned char *)(v0 + 129) = 0;
    Swift::Int v16 = (__CFString *)String._bridgeToObjectiveC()();
    uint64_t v17 = (__CFString *)String._bridgeToObjectiveC()();
    int AppBooleanValue = CFPreferencesGetAppBooleanValue(v16, v17, (Boolean *)(v0 + 129));

    if (*(unsigned char *)(v0 + 129) && AppBooleanValue)
    {
      id v19 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 800);
      uint64_t v20 = *(void *)(v0 + 784);
      uint64_t v21 = *(void **)(v0 + 752);
      uint64_t v22 = *(void *)(v0 + 496);
      uint64_t v23 = *(void *)(v0 + 464);
      UpdateMetadataRequest.bundleID.getter();
      UpdateMetadata.init(bundleID:bundleVersion:itemID:shortVersionString:)();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      sub_10001729C(v22, &qword_10065C438);
      v19(v23, 0, 1, v20);
      sub_10001733C(v23, v22, &qword_10065C438);
      goto LABEL_15;
    }
  }

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
LABEL_15:
  uint64_t v26 = *(void *)(v0 + 552);
  uint64_t v27 = *(void *)(v0 + 536);
  uint64_t v28 = *(void *)(v0 + 528);
  sub_10001733C(*(void *)(v0 + 496), *(void *)(v0 + 400), &qword_10065C438);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_100232E30()
{
  uint64_t v1 = (void *)v0[94];
  uint64_t v2 = v0[69];
  uint64_t v3 = v0[67];
  uint64_t v4 = v0[66];
  uint64_t v5 = v0[62];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  sub_10001729C(v5, &qword_10065C438);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100233008()
{
  uint64_t v1 = (void *)v0[94];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[93];
  uint64_t v3 = v0[69];
  uint64_t v4 = v0[66];
  uint64_t v5 = v0[62];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  sub_10001729C(v5, &qword_10065C438);
  v2(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

void sub_1002331E4(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v16 = sub_1000172F8(&qword_10065C3D0);
  uint64_t v17 = sub_10000DDFC((unint64_t *)&qword_10065C3D8, &qword_10065C3D0);
  LOWORD(v14) = 7;
  *((void *)&v14 + 1) = a2;
  uint64_t v15 = a3;
  sub_1000172F8(&qword_10065C3E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
  sub_10018B164(&v14, inited + 32);
  id v9 = v7;
  swift_bridgeObjectRetain();
  sub_10055595C(inited);
  uint64_t v10 = (void *)sub_10033241C(0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_100332380, 0, v9);

  swift_bridgeObjectRelease();
  if (v10)
  {
    id v11 = sub_1002497CC(v10);
    uint64_t v13 = v12;
  }
  else
  {
    id v11 = 0;
    uint64_t v13 = 0;
  }
  *a4 = v11;
  a4[1] = v13;
}

uint64_t sub_100233394(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  long long v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = enum case for LogKey.Prefix.update(_:);
  uint64_t v16 = type metadata accessor for LogKey.Prefix();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v14, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  swift_retain();
  Swift::Int v18 = sub_100010C5C((uint64_t)&off_100637F60);
  swift_arrayDestroy();
  id v19 = (void *)swift_allocObject();
  v19[2] = v4;
  v19[3] = a1;
  v19[4] = a2;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = &unk_10065C3B0;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v11, 1, 1, v21);
  id v22 = v4;
  sub_100012670(a1, a2);
  swift_retain();
  sub_100016EDC((uint64_t)"Request update", 14, 2, a3, a4, 1, (uint64_t)v14, v18, 1u, (uint64_t)v11, (uint64_t)&unk_10065C3B8, v20, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_100233674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[17] = a3;
  v8[18] = a4;
  v8[16] = a2;
  uint64_t v9 = type metadata accessor for AppInstallRequestType();
  v8[23] = v9;
  v8[24] = *(void *)(v9 - 8);
  v8[25] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for LogKey.Prefix();
  v8[26] = v10;
  v8[27] = *(void *)(v10 - 8);
  v8[28] = swift_task_alloc();
  type metadata accessor for UUID();
  v8[29] = swift_task_alloc();
  sub_1000172F8(&qword_10065C3C0);
  v8[30] = swift_task_alloc();
  v8[31] = swift_task_alloc();
  v8[32] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for URL();
  v8[33] = v11;
  v8[34] = *(void *)(v11 - 8);
  v8[35] = swift_task_alloc();
  v8[36] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for Logger();
  v8[37] = v12;
  v8[38] = *(void *)(v12 - 8);
  v8[39] = swift_task_alloc();
  uint64_t updated = type metadata accessor for UpdateMetadata();
  v8[40] = updated;
  v8[41] = *(void *)(updated - 8);
  v8[42] = swift_task_alloc();
  return _swift_task_switch(sub_100233938, 0, 0);
}

uint64_t sub_100233938()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 160) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1002339FC;
  v2[3] = v1;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_1002339FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[44] = a1;
  v5[45] = a2;
  v5[46] = a3;
  v5[47] = v3;
  swift_task_dealloc();
  if (v3)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v5[1];
    return v6();
  }
  else
  {
    return _swift_task_switch(sub_100233BD0, 0, 0);
  }
}

uint64_t sub_100233BD0()
{
  uint64_t v1 = *(void *)(v0[20] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies);
  v0[48] = v1;
  v0[49] = *(void *)(v1 + 152);
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[50] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100233C9C;
  uint64_t v3 = v0[44];
  return v5(v3);
}

uint64_t sub_100233C9C(char a1)
{
  *(unsigned char *)(*(void *)v1 + 49) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100233DBC, 0, 0);
}

uint64_t sub_100233DBC()
{
  if (*(unsigned char *)(v0 + 49) != 1)
  {
    uint64_t v6 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 104))(v7, enum case for MarketplaceKitError.featureUnavailable(_:), v6);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_5;
  }
  uint64_t v1 = *(void *)(v0 + 376);
  uint64_t v2 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 320);
  uint64_t v4 = *(void *)(v0 + 168);
  unint64_t v5 = *(void *)(v0 + 176);
  *(void *)(v0 + 56) = v4;
  *(void *)(v0 + 64) = v5;
  *(void *)(v0 + 72) = v0 + 56;
  *(void *)(v0 + 80) = v2;
  sub_100012670(v4, v5);
  *(void *)(v0 + 88) = &type metadata for Data;
  *(void *)(v0 + 96) = v3;
  *(void *)(v0 + 104) = sub_1000175C4();
  *(void *)(v0 + 112) = sub_1000139E4(&qword_10065C3C8, (void (*)(uint64_t))&type metadata accessor for UpdateMetadata);
  decodeXPCValues<each A, B>(from:)();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_100013510(*(void *)(v0 + 56), *(void *)(v0 + 64));
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  sub_100013510(*(void *)(v0 + 56), *(void *)(v0 + 64));
  uint64_t updated = UpdateMetadata.bundleID.getter();
  unint64_t v36 = v10;
  v11._countAndFlagsBits = 58;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  v12._countAndFlagsBits = UpdateMetadata.itemID.getter();
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 58;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = UpdateMetadata.shortVersionString.getter();
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 10272;
  v15._object = (void *)0xE200000000000000;
  String.append(_:)(v15);
  v16._countAndFlagsBits = UpdateMetadata.bundleID.getter();
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 41;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  sub_100515B6C(updated, v36);
  swift_bridgeObjectRelease();
  static Logger.updates.getter();
  Swift::Int v18 = Logger.logObject.getter();
  uint64_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, (os_log_type_t)v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 138412290;
    uint64_t v22 = sub_1005163F0();
    *(void *)(v0 + 120) = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v21 = v22;
    _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v19, "[%@] Update requested", v20, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v23 = *(void *)(v0 + 384);
  uint64_t v25 = *(void *)(v0 + 304);
  uint64_t v24 = *(void *)(v0 + 312);
  uint64_t v26 = *(void *)(v0 + 296);

  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  uint64_t v27 = UpdateMetadata.itemID.getter();
  uint64_t v29 = v28;
  *(void *)(v0 + 408) = v28;
  uint64_t v30 = *(void *)(*(void *)(v23 + 200) + 24);
  *(void *)(v0 + 416) = v30;
  uint64_t v31 = swift_task_alloc();
  *(void *)(v0 + 424) = v31;
  *(void *)(v31 + 16) = v27;
  *(void *)(v31 + 24) = v29;
  uint64_t v32 = swift_task_alloc();
  *(void *)(v0 + 432) = v32;
  *(void *)(v32 + 16) = sub_100239378;
  *(void *)(v32 + 24) = v31;
  uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_100660750 + dword_100660750);
  swift_retain();
  uint64_t v33 = (void *)swift_task_alloc();
  *(void *)(v0 + 440) = v33;
  *uint64_t v33 = v0;
  v33[1] = sub_10023430C;
  return v34((uint64_t)sub_100239380, v32, v30);
}

uint64_t sub_10023430C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 448) = a2;
  *(void *)(v4 + 456) = v2;
  swift_task_dealloc();
  swift_release();
  if (v2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v5 = sub_100235494;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v5 = sub_1002344A0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1002344A0()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 448);
  if (!v1)
  {
    uint64_t v6 = *(void *)(v0 + 328);
    uint64_t v5 = *(void *)(v0 + 336);
    uint64_t v7 = *(void *)(v0 + 320);
    uint64_t v8 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v9, enum case for MarketplaceKitError.featureUnavailable(_:), v8);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
LABEL_16:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v34 = *(uint64_t (**)(void))(v0 + 8);
    return v34();
  }
  uint64_t v2 = *(void *)(v0 + 264);
  uint64_t v3 = *(void *)(v0 + 272);
  uint64_t v4 = *(void *)(v0 + 256);
  swift_retain_n();
  sub_100311FF8(4, v1, v4);
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_10001729C(*(void *)(v0 + 256), &qword_10065C3C0);
LABEL_15:
    uint64_t v29 = *(void *)(v0 + 328);
    uint64_t v30 = *(void *)(v0 + 336);
    uint64_t v31 = *(void *)(v0 + 320);
    uint64_t v32 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v32 - 8) + 104))(v33, enum case for MarketplaceKitError.invalidAlternativeDistributionPackageURL(_:), v32);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v31);
    goto LABEL_16;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 272) + 32))(*(void *)(v0 + 288), *(void *)(v0 + 256), *(void *)(v0 + 264));
  uint64_t v10 = sub_1004CF23C();
  if (!v11)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 272) + 8))(*(void *)(v0 + 288), *(void *)(v0 + 264));
    goto LABEL_15;
  }
  uint64_t v12 = v11;
  uint64_t v52 = *(void *)(v0 + 368);
  uint64_t v49 = *(void *)(v0 + 360);
  uint64_t v46 = *(void *)(v0 + 384);
  uint64_t v47 = *(void *)(v0 + 352);
  uint64_t v13 = *(void *)(v0 + 272);
  uint64_t v40 = *(void *)(v0 + 264);
  uint64_t v41 = *(void *)(v0 + 280);
  uint64_t v43 = *(void *)(v0 + 288);
  uint64_t v44 = *(void *)(v0 + 248);
  uint64_t v48 = *(void *)(v0 + 240);
  uint64_t v50 = *(void *)(v0 + 232);
  uint64_t v15 = *(void *)(v0 + 216);
  uint64_t v14 = *(void *)(v0 + 224);
  uint64_t v16 = *(void *)(v0 + 200);
  uint64_t v17 = *(void *)(v0 + 208);
  uint64_t v19 = *(void *)(v0 + 184);
  uint64_t v18 = *(void *)(v0 + 192);
  uint64_t v54 = *(void *)(v0 + 144);
  uint64_t v55 = *(void *)(v0 + 152);
  long long v53 = *(_OWORD *)(v0 + 128);
  uint64_t v51 = v10;
  UUID.init()();
  (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))(v14, enum case for LogKey.Prefix.automaticUpdate(_:), v17);
  id v20 = objc_allocWithZone((Class)type metadata accessor for LogKey());
  uint64_t v45 = (void *)LogKey.init(prefix:)();
  (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v16, enum case for AppInstallRequestType.update(_:), v19);
  swift_retain();
  uint64_t v42 = sub_100311E74(5, v1);
  uint64_t v39 = v21;
  swift_release();
  swift_retain();
  uint64_t v22 = sub_100311E74(0, v1);
  unint64_t v24 = v23;
  swift_release();
  if (v24) {
    uint64_t v25 = v22;
  }
  else {
    uint64_t v25 = 0;
  }
  unint64_t v26 = 0xE000000000000000;
  if (v24) {
    unint64_t v26 = v24;
  }
  unint64_t v37 = v26;
  uint64_t v38 = v25;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v41, v43, v40);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v44, 1, 1, v40);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_100311FF8(1, v1, v48);
  swift_release();
  *((void *)&v36 + 1) = v38;
  *(void *)&long long v36 = v39;
  *(void *)(v0 + 464) = sub_1002F4820(v50, v45, v51, v12, v16, 0, 0, v42, v36, v37, 0, v41, v44, v46, v47, v49, v52, 0, 0xF000000000000000,
                            1u,
                            0,
                            1,
                            v48);
  swift_release();
  swift_bridgeObjectRelease();

  *(_OWORD *)(v0 + 16) = v53;
  *(void *)(v0 + 32) = v54;
  *(void *)(v0 + 40) = v55;
  *(unsigned char *)(v0 + 48) = 0;
  type metadata accessor for ADPInstallTask();
  swift_allocObject();
  uint64_t v27 = swift_retain();
  uint64_t v28 = sub_100346FA4(v27, v0 + 16);
  *(void *)(v0 + 472) = v28;
  return _swift_task_switch(sub_100234ABC, v28, 0);
}

uint64_t sub_100234ABC()
{
  *(unsigned char *)(*(void *)(v0 + 472)
           + OBJC_IVAR____TtC28ManagedAppDistributionDaemon14ADPInstallTask_shouldCacheInstallAsPending) = 0;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 480) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100234B5C;
  return sub_10034213C();
}

uint64_t sub_100234B5C()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[63] = v0;
    uint64_t v4 = (void *)swift_task_alloc();
    v2[64] = v4;
    *uint64_t v4 = v3;
    v4[1] = sub_1002351B0;
    return sub_10034A584(v0);
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v2[61] = v6;
    void *v6 = v3;
    v6[1] = sub_100234D0C;
    return sub_1003580F4();
  }
}

uint64_t sub_100234D0C()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[63] = v0;
    uint64_t v4 = (void *)swift_task_alloc();
    v2[64] = v4;
    *uint64_t v4 = v3;
    v4[1] = sub_1002351B0;
    return sub_10034A584(v0);
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v2[62] = v6;
    void *v6 = v3;
    v6[1] = sub_100234EBC;
    return sub_100348D6C();
  }
}

uint64_t sub_100234EBC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(void *)(v2 + 504) = v0;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 512) = v4;
    *uint64_t v4 = v3;
    v4[1] = sub_1002351B0;
    return sub_10034A584(v0);
  }
  else
  {
    return _swift_task_switch(sub_100235040, 0, 0);
  }
}

uint64_t sub_100235040()
{
  uint64_t v2 = v0[41];
  uint64_t v1 = v0[42];
  uint64_t v8 = v0[40];
  uint64_t v3 = v0[36];
  uint64_t v5 = v0[33];
  uint64_t v4 = v0[34];
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release_n();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1002351B0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 472);
  swift_task_dealloc();
  return _swift_task_switch(sub_1002352C0, v1, 0);
}

uint64_t sub_1002352C0()
{
  swift_willThrow();
  return _swift_task_switch(sub_100235330, 0, 0);
}

uint64_t sub_100235330()
{
  uint64_t v1 = v0[41];
  uint64_t v8 = v0[42];
  uint64_t v2 = v0[40];
  uint64_t v3 = v0[36];
  uint64_t v5 = v0[33];
  uint64_t v4 = v0[34];
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release_n();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v8, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100235494()
{
  uint64_t v2 = v0[41];
  uint64_t v1 = v0[42];
  uint64_t v3 = v0[40];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

id sub_1002355BC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = sub_1000172F8(&qword_10065C3D0);
  uint64_t v14 = sub_10000DDFC((unint64_t *)&qword_10065C3D8, &qword_10065C3D0);
  LOWORD(v11) = 7;
  *((void *)&v11 + 1) = a2;
  uint64_t v12 = a3;
  sub_1000172F8(&qword_10065C3E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
  sub_10018B164(&v11, inited + 32);
  id v7 = a1;
  swift_bridgeObjectRetain();
  sub_10055595C(inited);
  uint64_t v8 = (void *)sub_10033241C(0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_100332380, 0, v7);

  swift_bridgeObjectRelease();
  if (!v8) {
    return 0;
  }
  id v9 = sub_1002497CC(v8);

  return v9;
}

uint64_t sub_100235764(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  long long v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065C2E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = enum case for LogKey.Prefix.update(_:);
  uint64_t v16 = type metadata accessor for LogKey.Prefix();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v14, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v4;
  v18[3] = a1;
  v18[4] = a2;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = &unk_10065C2F0;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 1, 1, v20);
  swift_retain();
  id v21 = v4;
  sub_100012670(a1, a2);
  swift_retain();
  sub_100016EDC((uint64_t)"Poll for updates Request", 24, 2, a3, a4, 1, (uint64_t)v14, (uint64_t)&_swiftEmptySetSingleton, 1u, (uint64_t)v11, (uint64_t)&unk_10065C300, v19, (uint64_t)&unk_10063B278, (uint64_t)&unk_10065C318);
  sub_10001729C((uint64_t)v11, &qword_10065B220);
  swift_release();
  swift_release();
  return sub_10001729C((uint64_t)v14, &qword_10065C2E0);
}

uint64_t sub_100235A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[37] = a7;
  v8[38] = a8;
  v8[35] = a5;
  v8[36] = a6;
  v8[33] = a3;
  v8[34] = a4;
  v8[31] = a1;
  v8[32] = a2;
  uint64_t v9 = type metadata accessor for PollForUpdatesRequest();
  v8[39] = v9;
  v8[40] = *(void *)(v9 - 8);
  v8[41] = swift_task_alloc();
  v8[42] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Logger();
  v8[43] = v10;
  v8[44] = *(void *)(v10 - 8);
  v8[45] = swift_task_alloc();
  v8[46] = swift_task_alloc();
  return _swift_task_switch(sub_100235B8C, 0, 0);
}

uint64_t sub_100235B8C()
{
  *(unsigned char *)(v0 + 129) = 0;
  uint64_t v1 = (__CFString *)String._bridgeToObjectiveC()();
  uint64_t v2 = (__CFString *)String._bridgeToObjectiveC()();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v1, v2, (Boolean *)(v0 + 129));

  if (*(unsigned char *)(v0 + 129)) {
    BOOL v4 = AppBooleanValue == 0;
  }
  else {
    BOOL v4 = 0;
  }
  if (v4)
  {
    static Logger.install.getter();
    id v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Not running automatic updates, setting is disabled", v9, 2u);
      swift_slowDealloc();
    }
    uint64_t v10 = *(void *)(v0 + 368);
    uint64_t v11 = *(void *)(v0 + 344);
    uint64_t v12 = *(void *)(v0 + 352);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    swift_getObjectType();
    v13._countAndFlagsBits = 0xD000000000000041;
    v13._object = (void *)0x80000001005B9670;
    XPCClientProtocol.logMessage(_:)(v13);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
  else
  {
    uint64_t v5 = *(void *)(*(void *)(v0 + 288) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
    swift_retain();
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v6;
    void *v6 = v0;
    v6[1] = sub_100235E4C;
    v6[3] = v5;
    return _swift_task_switch(sub_100238044, 0, 0);
  }
}

uint64_t sub_100235E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[48] = a1;
  v5[49] = a2;
  v5[50] = a3;
  swift_task_dealloc();
  if (v3)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v5[1];
    return v6();
  }
  else
  {
    return _swift_task_switch(sub_100236004, 0, 0);
  }
}

uint64_t sub_100236004()
{
  uint64_t v1 = *(void *)(v0[36] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies);
  v0[51] = v1;
  v0[52] = *(void *)(v1 + 152);
  uint64_t v2 = dword_1006638A0;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[53] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1002360FC;
  uint64_t v4 = v0[48];
  return ((uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + v2))(v4);
}

uint64_t sub_1002360FC(char a1)
{
  *(unsigned char *)(*(void *)v1 + 130) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100236248, 0, 0);
}

uint64_t sub_100236248()
{
  if (*(unsigned char *)(v0 + 130) == 1)
  {
    uint64_t v1 = dword_10065D610;
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 432) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100236458;
    uint64_t v3 = *(void *)(v0 + 272);
    uint64_t v4 = *(void *)(v0 + 280);
    uint64_t v6 = *(void *)(v0 + 256);
    uint64_t v5 = *(void *)(v0 + 264);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D610 + v1))(v6, v5, v3, v4);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v9, enum case for MarketplaceKitError.featureUnavailable(_:), v8);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_100236458()
{
  *(void *)(*(void *)v1 + 440) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100236C44;
  }
  else {
    uint64_t v2 = sub_100236598;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100236598()
{
  uint64_t v48 = v0;
  uint64_t v1 = *(void *)(v0 + 440);
  unint64_t v2 = *(void *)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 312);
  uint64_t v4 = *(void *)(v0 + 296);
  *(void *)(v0 + 216) = *(void *)(v0 + 336);
  *(void *)(v0 + 160) = v4;
  *(void *)(v0 + 168) = v2;
  *(void *)(v0 + 176) = v0 + 160;
  sub_100012670(v4, v2);
  *(void *)(v0 + 184) = &type metadata for Data;
  *(void *)(v0 + 192) = v3;
  *(void *)(v0 + 200) = sub_1000175C4();
  *(void *)(v0 + 208) = sub_1000139E4(&qword_10065C398, (void (*)(uint64_t))&type metadata accessor for PollForUpdatesRequest);
  decodeXPCValues<each A, B>(from:)();
  sub_100013510(*(void *)(v0 + 160), *(void *)(v0 + 168));
  if (!v1)
  {
    uint64_t v17 = *(void *)(v0 + 328);
    uint64_t v16 = *(void *)(v0 + 336);
    uint64_t v18 = *(void *)(v0 + 312);
    uint64_t v19 = *(void *)(v0 + 320);
    static Logger.install.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v17, v16, v18);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v23 = *(void *)(v0 + 352);
    uint64_t v24 = *(void *)(v0 + 360);
    uint64_t v25 = *(void *)(v0 + 344);
    uint64_t v27 = *(void *)(v0 + 320);
    uint64_t v26 = *(void *)(v0 + 328);
    if (v22)
    {
      uint64_t v43 = *(void *)(v0 + 312);
      uint64_t v45 = *(void *)(v0 + 344);
      uint64_t v28 = swift_slowAlloc();
      uint64_t v42 = (void *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 138412546;
      uint64_t v44 = v24;
      uint64_t v29 = sub_1005163F0();
      *(void *)(v0 + 240) = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v42 = v29;
      *(_WORD *)(v28 + 12) = 2082;
      uint64_t v30 = PollForUpdatesRequest.domain.getter();
      if (v31)
      {
        unint64_t v32 = v31;
      }
      else
      {
        uint64_t v30 = 0x73707061206C6C61;
        unint64_t v32 = 0xE800000000000000;
      }
      *(void *)(v0 + 232) = sub_1000143F4(v30, v32, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
      uint64_t v33 = v27 + 8;
      v34(v26, v43);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%@] Handling updates poll request for: %{public}s", (uint8_t *)v28, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v44, v45);
    }
    else
    {
      uint64_t v35 = *(void (**)(void, void))(v27 + 8);
      uint64_t v33 = v27 + 8;
      v35(*(void *)(v0 + 328), *(void *)(v0 + 312));

      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v25);
    }
    *(void *)(v0 + 448) = v33;
    uint64_t v37 = *(void *)(v0 + 272);
    uint64_t v36 = *(void *)(v0 + 280);
    long long v46 = *(_OWORD *)(v0 + 256);
    PollForUpdatesRequest.domain.getter();
    *(void *)(v0 + 456) = v38;
    *(void *)(v0 + 464) = swift_getObjectType();
    v39._countAndFlagsBits = 0xD00000000000002FLL;
    v39._object = (void *)0x80000001005B95C0;
    XPCClientProtocol.logMessage(_:)(v39);
    PollForUpdatesRequest.shouldStartUpdates.getter();
    *(_OWORD *)(v0 + 96) = v46;
    *(void *)(v0 + 112) = v37;
    *(void *)(v0 + 120) = v36;
    *(unsigned char *)(v0 + 128) = 0;
    uint64_t v40 = dword_100660370;
    uint64_t v41 = (void *)swift_task_alloc();
    *(void *)(v0 + 472) = v41;
    *uint64_t v41 = v0;
    v41[1] = sub_100236D10;
    uint64_t v50 = v0 + 96;
    __asm { BR              X10; sub_1002F4FE8 }
  }
  sub_1000172F8(&qword_10065C3A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v6;
  swift_getErrorValue();
  uint64_t v7 = *(void *)(*(void *)(v0 + 144) - 8);
  swift_task_alloc();
  (*(void (**)(void))(v7 + 16))();
  uint64_t v8 = String.init<A>(describing:)();
  uint64_t v10 = v9;
  swift_task_dealloc();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v8;
  *(void *)(inited + 56) = v10;
  sub_10044B428(inited);
  id v11 = objc_allocWithZone((Class)NSError);
  NSString v12 = String._bridgeToObjectiveC()();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v11 initWithDomain:v12 code:-1 userInfo:isa];

  swift_willThrow();
  swift_errorRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_100236C44()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100236D10()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100236E54, 0, 0);
}

uint64_t sub_100236E54()
{
  v1._object = (void *)0x80000001005B95F0;
  v1._countAndFlagsBits = 0xD000000000000040;
  XPCClientProtocol.logMessage(_:)(v1);
  uint64_t v2 = sub_1005163F0();
  v0[60] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[61] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100236F48;
  uint64_t v5 = v0[50];
  uint64_t v4 = v0[51];
  uint64_t v6 = v0[48];
  uint64_t v7 = v0[49];
  return sub_1003CF6F8(v2, v4, v6, v7, v5);
}

uint64_t sub_100236F48()
{
  Swift::String v1 = *(void **)(*(void *)v0 + 480);
  swift_task_dealloc();

  return _swift_task_switch(sub_100237088, 0, 0);
}

uint64_t sub_100237088()
{
  uint64_t v1 = v0[42];
  uint64_t v2 = v0[39];
  uint64_t v3 = v0[40];
  v4._object = (void *)0x80000001005B9640;
  v4._countAndFlagsBits = 0xD000000000000025;
  XPCClientProtocol.logMessage(_:)(v4);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1002371DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 136) = v12;
  *(_OWORD *)(v8 + 120) = v11;
  *(_OWORD *)(v8 + 104) = v10;
  *(void *)(v8 + 88) = a7;
  *(void *)(v8 + 96) = a8;
  *(void *)(v8 + 72) = a5;
  *(void *)(v8 + 80) = a6;
  *(void *)(v8 + 64) = a4;
  return _swift_task_switch(sub_10023721C, 0, 0);
}

uint64_t sub_10023721C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1002372E0;
  v2[3] = v1;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_1002372E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[19] = a1;
  v4[20] = a2;
  v4[21] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_100237834;
  }
  else {
    uint64_t v5 = sub_1002373F8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1002373F8()
{
  v0[22] = *(void *)(*(void *)(v0[8] + OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies) + 152);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[23] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002374DC;
  uint64_t v2 = v0[19];
  return v4(v2);
}

uint64_t sub_1002374DC(char a1)
{
  *(unsigned char *)(*(void *)v1 + 224) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1002375FC, 0, 0);
}

uint64_t sub_1002375FC()
{
  if (*(unsigned char *)(v0 + 224) == 1)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    Swift::Int v1 = sub_100010C5C((uint64_t)&off_1006375D0);
    *(void *)(v0 + 192) = v1;
    swift_arrayDestroy();
    Swift::String v13 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                    + dword_10065D5F0);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100237958;
    uint64_t v3 = *(void *)(v0 + 104);
    uint64_t v4 = *(void *)(v0 + 112);
    uint64_t v5 = *(void *)(v0 + 88);
    uint64_t v6 = *(void *)(v0 + 96);
    return v13(v1, 0, v5, v6, v3, v4);
  }
  else
  {
    uint64_t v8 = *(void (**)(void, uint64_t))(v0 + 72);
    uint64_t v9 = type metadata accessor for MarketplaceKitError();
    sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
    uint64_t v10 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v9 - 8) + 104))(v11, enum case for MarketplaceKitError.featureUnavailable(_:), v9);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_errorRetain();
    v8(0, v10);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_100237834()
{
  Swift::Int v1 = *(void (**)(void, uint64_t))(v0 + 72);
  uint64_t v2 = type metadata accessor for MarketplaceKitError();
  sub_1000139E4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
  uint64_t v3 = swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 104))(v4, enum case for MarketplaceKitError.networkError(_:), v2);
  v1(0, v3);
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100237958(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 208) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100237C68;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(unsigned char *)(v4 + 225) = a1 & 1;
    uint64_t v5 = sub_100237A8C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100237A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(v3 + 225) == 1)
  {
    if (qword_10065B128 == -1)
    {
      if ((*(void *)(v3 + 120) & 0x8000000000000000) == 0) {
        goto LABEL_4;
      }
    }
    else
    {
      a1 = swift_once();
      if ((*(void *)(v3 + 120) & 0x8000000000000000) == 0)
      {
LABEL_4:
        a2 = qword_10068DAA0;
        *(void *)(v3 + 216) = qword_10068DAA0;
        a1 = (uint64_t)sub_100237D84;
        a3 = 0;
        return _swift_task_switch(a1, a2, a3);
      }
    }
    __break(1u);
    return _swift_task_switch(a1, a2, a3);
  }
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  uint64_t v4 = *(void (**)(void, uint64_t))(v3 + 72);
  uint64_t v5 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  v4(0, v5);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v6 = *(uint64_t (**)(void))(v3 + 8);
  return v6();
}

uint64_t sub_100237C68()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void (**)(void, uint64_t))(v0 + 72);
  type metadata accessor for InternalError();
  sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  uint64_t v2 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  v1(0, v2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100237D84()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[10];
  uint64_t v5 = *(void **)(v0[27] + 112);
  v0[6] = v0[9];
  v0[7] = v4;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100238324;
  v0[5] = &unk_10063B1C8;
  uint64_t v6 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  [v5 getRemoteContentForLayerContextWithId:v3 style:v1 tag:v2 reply:v6];
  _Block_release(v6);
  return _swift_task_switch(sub_100237E9C, 0, 0);
}

uint64_t sub_100237E9C()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100237FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

uint64_t sub_100238024(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return _swift_task_switch(sub_100238044, 0, 0);
}

uint64_t sub_100238044()
{
  uint64_t v1 = v0[3];
  v0[4] = *(void *)(v1 + 16);
  v0[5] = *(void *)(v1 + 24);
  swift_unknownObjectRetain_n();
  v0[2] = sub_10044B428((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10065E710 + dword_10065E710);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[6] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100238120;
  uint64_t v3 = v0[3];
  return v5(v3, (uint64_t)(v0 + 2));
}

uint64_t sub_100238120()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_unknownObjectRelease();
    uint64_t v2 = sub_1002382B0;
  }
  else
  {
    uint64_t v2 = sub_10023823C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10023823C()
{
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v1 = v0[2];
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[1];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  return v2(v1, v3, v4);
}

uint64_t sub_1002382B0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100238324(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1002383B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _OWORD v8[5] = a7;
  _OWORD v8[6] = a8;
  v8[3] = a2;
  v8[4] = a4;
  v8[2] = a1;
  return _swift_task_switch(sub_10000E19C, 0, 0);
}

uint64_t sub_1002383D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _OWORD v8[5] = a7;
  _OWORD v8[6] = a8;
  v8[3] = a2;
  v8[4] = a4;
  v8[2] = a1;
  return _swift_task_switch(sub_100238400, 0, 0);
}

uint64_t sub_100238400()
{
  uint64_t v12 = v0;
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1;
  if (v1) {
    goto LABEL_2;
  }
  id v7 = (os_unfair_lock_s *)v0[4];
  uint64_t v8 = (void **)&v7[4];
  uint64_t v9 = v7 + 6;
  os_unfair_lock_lock(v7 + 6);
  sub_100006238(v8, &v11);
  os_unfair_lock_unlock(v9);
  uint64_t v2 = v11;
  if (v11)
  {
    uint64_t v1 = (void *)v0[3];
LABEL_2:
    id v3 = v1;
    sub_10000E2EC();
  }
  uint64_t v10 = (uint64_t (*)(uint64_t))(v0[5] + *(int *)v0[5]);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100006AF8;
  uint64_t v5 = v0[2];
  return v10(v5);
}

uint64_t sub_100238550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 16) = a1;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_100238618;
  v13[5] = a7;
  v13[6] = a8;
  v13[3] = a2;
  v13[4] = a4;
  return _swift_task_switch(sub_10023C298, 0, 0);
}

uint64_t sub_100238618(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  id v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_100238728(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    static Logger.daemon.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v14 = a1;
      uint64_t v12 = (uint8_t *)v11;
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_1000143F4(v14, a2, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Client disconnected: %{public}s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a1 = v14;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return sub_100357D1C(a1, a2);
  }
  return result;
}

uint64_t sub_100238940(uint64_t a1, void *a2, void *a3, void *a4, void (**a5)(void, void, void))
{
  uint64_t v10 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a5;
  uint64_t v14 = self;
  _Block_copy(a5);
  id v15 = [v14 currentConnection];
  if (v15)
  {
    uint64_t v16 = v15;
    [v15 auditToken];
    v26[0] = v26[1];
    uint64_t v17 = v27;
    uint64_t v18 = v28;

    uint64_t v19 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v12, 1, 1, v19);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = 0;
    *(void *)(v20 + 24) = 0;
    *(void *)(v20 + 32) = a4;
    *(void *)(v20 + 40) = sub_100238C24;
    *(void *)(v20 + 48) = v13;
    *(_OWORD *)(v20 + 56) = v26[0];
    *(void *)(v20 + 72) = v17;
    *(void *)(v20 + 80) = v18;
    *(void *)(v20 + 88) = a1;
    *(void *)(v20 + 96) = a2;
    *(void *)(v20 + 104) = a3;
    id v21 = a4;
    swift_retain();
    id v22 = a2;
    id v23 = a3;
    sub_100017544((uint64_t)v12, (uint64_t)&unk_10065C2C8, v20);
    swift_release();
    return swift_release();
  }
  else
  {
    type metadata accessor for InternalError();
    sub_1000139E4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void, void *))a5)[2](a5, 0, v25);

    swift_errorRelease();
    return swift_release();
  }
}

uint64_t sub_100238BEC()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100238C24(uint64_t a1, uint64_t a2)
{
  sub_100237FB4(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_100238C2C()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_100238C84()
{
  long long v8 = *(_OWORD *)(v0 + 64);
  long long v9 = *(_OWORD *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 32);
  long long v6 = *(_OWORD *)(v0 + 96);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1000176B4;
  *(_OWORD *)(v4 + 128) = v6;
  *(void *)(v4 + 112) = v2;
  *(void *)(v4 + 120) = v3;
  *(_OWORD *)(v4 + 80) = v9;
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 64) = v5;
  return _swift_task_switch(sub_10023721C, 0, 0);
}

uint64_t sub_100238D60()
{
  return swift_release();
}

uint64_t sub_100238D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  id v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *id v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_100235A18(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_100238E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = *(int **)(v6 + 16);
  id v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *id v15 = v7;
  v15[1] = sub_1000176B4;
  v15[2] = a1;
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v14 + *v14);
  uint64_t v16 = (void *)swift_task_alloc();
  v15[3] = v16;
  *uint64_t v16 = v15;
  v16[1] = sub_100211DEC;
  return v18(a2, a3, a4, a5, a6);
}

uint64_t sub_100238FAC(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000172F8(&qword_10065C2E0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + 40);
  char v14 = *(unsigned char *)(v1 + v4 + *(void *)(v3 + 64));
  uint64_t v8 = v1 + v4;
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_1000176B4;
  return sub_1001E50C4(a1, v12, v11, v10, v9, v5, v8, v14);
}

uint64_t sub_10023917C(uint64_t a1)
{
  char v13 = *(unsigned char *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v7 = *(void *)(v1 + 64);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000176B4;
  return sub_1001E77FC(a1, v13, v11, v10, v4, v5, v6, v7);
}

uint64_t sub_100239298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  id v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *id v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_100233674(a1, a2, a3, a4, a5, v12, v13, v14);
}

id sub_100239378(void *a1)
{
  return sub_1002355BC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100239380@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10023AE44(a1, a2);
}

uint64_t sub_1002393A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = *(void *)(v6 + 16);
  uint64_t v15 = *(void *)(v6 + 24);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v16;
  *uint64_t v16 = v7;
  v16[1] = sub_1000176B4;
  return sub_10022FF78(a1, a2, a3, a4, a5, a6, v14, v15);
}

uint64_t sub_10023949C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000172F8(&qword_10065C2E0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + 40);
  char v14 = *(unsigned char *)(v1 + v4 + *(void *)(v3 + 64));
  uint64_t v8 = v1 + v4;
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_1000176B4;
  return sub_1001E7410(a1, v12, v11, v10, v9, v5, v8, v14);
}

uint64_t sub_10023966C(uint64_t a1)
{
  char v13 = *(unsigned char *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v7 = *(void *)(v1 + 64);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000176B4;
  return sub_10020DDB0(a1, v13, v11, v10, v4, v5, v6, v7);
}

void sub_100239784(void **a1@<X0>, void *a2@<X8>)
{
  sub_1002331E4(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1002397A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = *(void *)(v6 + 16);
  uint64_t v14 = *(void *)(v6 + 24);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v16;
  *uint64_t v16 = v7;
  v16[1] = sub_1000176B4;
  return sub_10022F6A4(a1, a2, a3, a4, a5, a6, v15, v14);
}

uint64_t sub_10023988C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000172F8(&qword_10065C2E0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + 40);
  char v14 = *(unsigned char *)(v1 + v4 + *(void *)(v3 + 64));
  uint64_t v8 = v1 + v4;
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_1000176B4;
  return sub_1001E7024(a1, v12, v11, v10, v9, v5, v8, v14);
}

uint64_t sub_100239A5C(uint64_t a1)
{
  char v13 = *(unsigned char *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v7 = *(void *)(v1 + 64);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000176B4;
  return sub_10020A0BC(a1, v13, v11, v10, v4, v5, v6, v7);
}

uint64_t sub_100239B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_10022D740(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_100239C58()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100239C90(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_100239CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_10022C6A0(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_100239DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_10022B504(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_100239EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_100229F30(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_100239F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_100228670(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_10023A070()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10023A0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = *(void *)(v5 + 16);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1000176B4;
  return sub_1002280F4(a1, a2, a3, a4, a5, v12);
}

uint64_t sub_10023A174()
{
  return sub_10000A234(40);
}

uint64_t sub_10023A17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = *(void *)(v6 + 16);
  uint64_t v15 = *(void *)(v6 + 24);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v16;
  *uint64_t v16 = v7;
  v16[1] = sub_1000176B4;
  return sub_100225C94(a1, a2, a3, a4, a5, a6, v14, v15);
}

uint64_t sub_10023A278(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000172F8(&qword_10065C2E0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + 40);
  char v14 = *(unsigned char *)(v1 + v4 + *(void *)(v3 + 64));
  uint64_t v8 = v1 + v4;
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_1000176B4;
  return sub_1001E6C38(a1, v12, v11, v10, v9, v5, v8, v14);
}

uint64_t sub_10023A448(uint64_t a1)
{
  char v13 = *(unsigned char *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v7 = *(void *)(v1 + 64);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000176B4;
  return sub_1002063C8(a1, v13, v11, v10, v4, v5, v6, v7);
}

uint64_t sub_10023A560()
{
  return sub_10000A234(40);
}

uint64_t sub_10023A568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = *(void *)(v6 + 16);
  uint64_t v15 = *(void *)(v6 + 24);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v16;
  *uint64_t v16 = v7;
  v16[1] = sub_1000176B4;
  return sub_1002244B8(a1, a2, a3, a4, a5, a6, v14, v15);
}

uint64_t sub_10023A664(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000172F8(&qword_10065C2E0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + 40);
  char v14 = *(unsigned char *)(v1 + v4 + *(void *)(v3 + 64));
  uint64_t v8 = v1 + v4;
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_1000176B4;
  return sub_1001E684C(a1, v12, v11, v10, v9, v5, v8, v14);
}

uint64_t sub_10023A834(uint64_t a1)
{
  char v13 = *(unsigned char *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v7 = *(void *)(v1 + 64);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000176B4;
  return sub_1002026D4(a1, v13, v11, v10, v4, v5, v6, v7);
}

uint64_t sub_10023A94C()
{
  return sub_10000A234(40);
}

uint64_t sub_10023A954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_100220EC0(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_10023AA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = *(int **)(v6 + 16);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_1000176B4;
  v15[2] = a1;
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v14 + *v14);
  uint64_t v16 = (void *)swift_task_alloc();
  v15[3] = v16;
  *uint64_t v16 = v15;
  v16[1] = sub_100211BB0;
  return v18(a2, a3, a4, a5, a6);
}

uint64_t sub_10023AB90()
{
  return sub_10023ADCC();
}

uint64_t sub_10023ABA8()
{
  return sub_10000A234(40);
}

uint64_t sub_10023ABB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = *(void *)(v6 + 16);
  uint64_t v15 = *(void *)(v6 + 24);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v16;
  *uint64_t v16 = v7;
  v16[1] = sub_1000176B4;
  return sub_10022019C(a1, a2, a3, a4, a5, a6, v14, v15);
}

uint64_t sub_10023ACAC(void *a1)
{
  return sub_100220A20(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10023ACC8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10023AE44(a1, a2);
}

uint64_t sub_10023ACE4()
{
  return sub_10000A234(40);
}

uint64_t sub_10023ACEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_10021D3F0(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_10023ADCC()
{
  return sub_1002E9D44(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_10023ADFC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10023AE34(void *a1)
{
  return sub_10021FE1C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10023AE3C()
{
  return sub_10000A234(40);
}

uint64_t sub_10023AE44@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result;
  a2[1] = v5;
  return result;
}

unint64_t sub_10023AE84()
{
  unint64_t result = qword_10065C728;
  if (!qword_10065C728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10065C728);
  }
  return result;
}

uint64_t sub_10023AED8(void *a1)
{
  return sub_10021CFAC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10023AEE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = *(void *)(v6 + 16);
  uint64_t v15 = *(void *)(v6 + 24);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v16;
  *uint64_t v16 = v7;
  v16[1] = sub_1000176B4;
  return sub_10021B0D0(a1, a2, a3, a4, a5, a6, v14, v15);
}

uint64_t sub_10023AFE0(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000172F8(&qword_10065C2E0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + 40);
  char v14 = *(unsigned char *)(v1 + v4 + *(void *)(v3 + 64));
  uint64_t v8 = v1 + v4;
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_1000176B4;
  return sub_1001E6460(a1, v12, v11, v10, v9, v5, v8, v14);
}

uint64_t sub_10023B1B0(uint64_t a1)
{
  char v13 = *(unsigned char *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v7 = *(void *)(v1 + 64);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000176B4;
  return sub_1001FC95C(a1, v13, v11, v10, v4, v5, v6, v7);
}

uint64_t sub_10023B2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = *(void *)(v6 + 16);
  uint64_t v15 = *(void *)(v6 + 24);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v16;
  *uint64_t v16 = v7;
  v16[1] = sub_1000176B4;
  return sub_100216808(a1, a2, a3, a4, a5, a6, v14, v15);
}

uint64_t sub_10023B3C8(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000172F8(&qword_10065C2E0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + 40);
  char v14 = *(unsigned char *)(v1 + v4 + *(void *)(v3 + 64));
  uint64_t v8 = v1 + v4;
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_1000176B4;
  return sub_1001E6074(a1, v12, v11, v10, v9, v5, v8, v14);
}

uint64_t sub_10023B598(uint64_t a1)
{
  char v13 = *(unsigned char *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v7 = *(void *)(v1 + 64);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000176B4;
  return sub_1001F8C68(a1, v13, v11, v10, v4, v5, v6, v7);
}

unint64_t sub_10023B6B0()
{
  unint64_t result = qword_10065C7F0;
  if (!qword_10065C7F0)
  {
    sub_10017B924(&qword_10065C7E8);
    sub_1000139E4(&qword_10065C7E0, (void (*)(uint64_t))type metadata accessor for ActionButtonInstallMetadata);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10065C7F0);
  }
  return result;
}

uint64_t sub_10023B758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_100215A8C(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_10023B83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_100214E04(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_10023B920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_100214074(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_10023BA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = *(void *)(v6 + 16);
  uint64_t v15 = *(void *)(v6 + 24);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v16;
  *uint64_t v16 = v7;
  v16[1] = sub_1000176B4;
  return sub_100212D34(a1, a2, a3, a4, a5, a6, v14, v15);
}

uint64_t sub_10023BB00(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000172F8(&qword_10065C2E0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + 40);
  char v14 = *(unsigned char *)(v1 + v4 + *(void *)(v3 + 64));
  uint64_t v8 = v1 + v4;
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_1000176B4;
  return sub_1001E5C88(a1, v12, v11, v10, v9, v5, v8, v14);
}

uint64_t sub_10023BCD0(uint64_t a1)
{
  char v13 = *(unsigned char *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v7 = *(void *)(v1 + 64);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000176B4;
  return sub_1001F4F74(a1, v13, v11, v10, v4, v5, v6, v7);
}

unint64_t sub_10023BDE8()
{
  unint64_t result = qword_10065C890;
  if (!qword_10065C890)
  {
    sub_10017B924(&qword_10065C4D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10065C890);
  }
  return result;
}

uint64_t sub_10023BE58()
{
  sub_100013510(*(void *)(v0 + 24), *(void *)(v0 + 32));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10023BE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_1002122F8(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_10023BF78()
{
  return sub_10000A234(40);
}

uint64_t sub_10023BF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = *(void *)(v6 + 16);
  uint64_t v15 = *(void *)(v6 + 24);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v16;
  *uint64_t v16 = v7;
  v16[1] = sub_1000176B4;
  return sub_1001E4190(a1, a2, a3, a4, a5, a6, v14, v15);
}

uint64_t sub_10023C07C@<X0>(BOOL *a1@<X8>)
{
  return sub_10056F03C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10023C098()
{
  return sub_10000A234(48);
}

uint64_t sub_10023C0A0()
{
  return sub_10023DEB0((void (*)(void))&_swift_unknownObjectRelease, 56);
}

uint64_t sub_10023C0BC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000176B4;
  return sub_1001E2E88(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10023C184(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1000176B4;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065C968 + dword_10065C968);
  return v12(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10023C274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return _swift_task_switch(sub_10023C298, 0, 0);
}

uint64_t sub_10023C298()
{
  uint64_t v11 = v0;
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1;
  if (v1) {
    goto LABEL_2;
  }
  uint64_t v6 = (os_unfair_lock_s *)v0[4];
  uint64_t v7 = (void **)&v6[4];
  uint64_t v8 = v6 + 6;
  os_unfair_lock_lock(v6 + 6);
  sub_100006238(v7, &v10);
  os_unfair_lock_unlock(v8);
  uint64_t v2 = v10;
  if (v10)
  {
    uint64_t v1 = (void *)v0[3];
LABEL_2:
    id v3 = v1;
    sub_10000E2EC();
  }
  uint64_t v9 = (uint64_t (*)(void *))(v0[5] + *(int *)v0[5]);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10023C3EC;
  return v9(v0 + 2);
}

uint64_t sub_10023C3EC()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10023C51C;
  }
  else {
    uint64_t v2 = sub_10023C500;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10023C500()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_10023C51C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023C534(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1000176B4;
  return _swift_task_switch(sub_1001E0BBC, 0, 0);
}

uint64_t sub_10023C5E4()
{
  return sub_10000A234(40);
}

uint64_t sub_10023C5EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_1001DF790(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_10023C6CC()
{
  return sub_10000A234(40);
}

uint64_t sub_10023C6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_1001DD2A0(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_10023C7B4(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10023C7C4()
{
  uint64_t v2 = *(void *)(v0 + 16);
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_10023C86C;
  v3[2] = v2;
  return _swift_task_switch(sub_1001DEC08, 0, 0);
}

uint64_t sub_10023C86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *v3;
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  return v7(a1, a2, a3);
}

uint64_t sub_10023C980(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000176B4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10065CA28 + dword_10065CA28);
  return v6(a1, v4);
}

uint64_t sub_10023CA38(void *a1)
{
  return sub_1001A178C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10023CA54(void *a1)
{
  return sub_1001DEFD8(a1, *(void *)(v1 + 16), *(os_unfair_lock_s **)(v1 + 24));
}

uint64_t sub_10023CA5C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_10023CAA4()
{
  return sub_10000A234(40);
}

uint64_t sub_10023CAAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_1001DC2B4(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_10023CB8C()
{
  return sub_10000A234(40);
}

uint64_t sub_10023CB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_1001DB728(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_10023CC74(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000176B4;
  return sub_1003F7238(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10023CD3C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_1000176B4;
  v3[2] = v2;
  return _swift_task_switch(sub_1001DAF38, 0, 0);
}

uint64_t sub_10023CDE4()
{
  return sub_10000A234(40);
}

uint64_t sub_10023CDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = *(void *)(v6 + 16);
  uint64_t v15 = *(void *)(v6 + 24);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v16;
  *uint64_t v16 = v7;
  v16[1] = sub_1000176B4;
  return sub_1001DA0E8(a1, a2, a3, a4, a5, a6, v14, v15);
}

uint64_t sub_10023CEE8(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000172F8(&qword_10065C2E0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + 40);
  char v14 = *(unsigned char *)(v1 + v4 + *(void *)(v3 + 64));
  uint64_t v8 = v1 + v4;
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_1000176B4;
  return sub_1001E589C(a1, v12, v11, v10, v9, v5, v8, v14);
}

uint64_t sub_10023D0B8(uint64_t a1)
{
  char v13 = *(unsigned char *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v7 = *(void *)(v1 + 64);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000176B4;
  return sub_1001EF1E4(a1, v13, v11, v10, v4, v5, v6, v7);
}

uint64_t sub_10023D1D0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *char v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1000176B4;
  return _swift_task_switch(sub_1001D9BE8, 0, 0);
}

uint64_t sub_10023D284(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000172F8(&qword_10065C2E0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + 40);
  char v14 = *(unsigned char *)(v1 + v4 + *(void *)(v3 + 64));
  uint64_t v8 = v1 + v4;
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_1000176B4;
  return sub_1001E54B0(a1, v12, v11, v10, v9, v5, v8, v14);
}

uint64_t sub_10023D454(uint64_t a1)
{
  char v13 = *(unsigned char *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v7 = *(void *)(v1 + 64);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000176B4;
  return sub_1001EB4F0(a1, v13, v11, v10, v4, v5, v6, v7);
}

uint64_t sub_10023D56C()
{
  return sub_10000A234(40);
}

uint64_t sub_10023D574()
{
  long long v5 = *(_OWORD *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1000176B4;
  *(void *)(v3 + 112) = v2;
  *(_OWORD *)(v3 + 96) = v5;
  return _swift_task_switch(sub_1001D9328, 0, 0);
}

uint64_t sub_10023D630()
{
  return sub_10000A234(40);
}

uint64_t sub_10023D638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_1001D8780(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_10023D718()
{
  return sub_10000A234(40);
}

uint64_t sub_10023D720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_1001D68AC(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_10023D800(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10023D868(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_1000176B4;
  return sub_1001D7FC8(a1, a2, v6, v7, v8, v9, v10);
}

uint64_t sub_10023D940(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10023D9A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10023DA08()
{
  return sub_10000A234(40);
}

uint64_t sub_10023DA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_1001D5C80(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_10023DAF0()
{
  return sub_10023DEB0((void (*)(void))&_swift_release, 48);
}

uint64_t sub_10023DB0C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000176B4;
  return sub_1003A20A4(a1, v4, v5, v7, v6);
}

uint64_t sub_10023DBCC()
{
  return sub_10000A234(40);
}

uint64_t sub_10023DBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_1001D44C4(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_10023DCB8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000176B4;
  return sub_100432F50(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10023DD84()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10023DDCC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000B238;
  return sub_100433C5C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10023DE94()
{
  return sub_10023DEB0((void (*)(void))&_swift_release, 48);
}

uint64_t sub_10023DEB0(void (*a1)(void), uint64_t a2)
{
  swift_unknownObjectRelease();

  a1(*(void *)(v2 + 40));

  return _swift_deallocObject(v2, a2, 7);
}

void sub_10023DF14(void **a1)
{
  sub_1001CA868(a1, *(void **)(v1 + 16));
}

uint64_t sub_10023DF30()
{
  return sub_10000A234(40);
}

uint64_t sub_10023DF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_1001D3D10(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_10023E018()
{
  return sub_10000A234(40);
}

uint64_t sub_10023E020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_1001D3488(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_10023E100()
{
  return sub_10000A234(40);
}

uint64_t sub_10023E108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *uint64_t v15 = v6;
  v15[1] = sub_1000176B4;
  return sub_1001D2C80(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_10023E1EC()
{
  sub_100013510(*(void *)(v0 + 16), *(void *)(v0 + 24));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10023E224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = *(void *)(v5 + 16);
  uint64_t v12 = *(void *)(v5 + 24);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v14;
  *uint64_t v14 = v6;
  v14[1] = sub_1000176B4;
  return sub_1001D23D8(a1, a2, a3, a4, a5, v13, v12);
}

uint64_t sub_10023E2FC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v1 + 56);
  *(void *)(v2 + 16) = v6;
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + 8) = sub_1000176B4;
  *(_OWORD *)(v6 + 40) = v7;
  *(void *)(v6 + 24) = v4;
  *(void *)(v6 + 32) = v5;
  *(void *)(v6 + 16) = a1;
  return _swift_task_switch(sub_100238400, 0, 0);
}

void sub_10023E508(void **a1@<X0>, void *a2@<X8>)
{
}

void sub_10023E540()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + 56) == 1)
  {
    Hasher._combine(_:)(0);
    if (*(void *)(v0 + 72)) {
      goto LABEL_3;
    }
LABEL_6:
    Hasher._combine(_:)(0);
    if (*(void *)(v0 + 88)) {
      goto LABEL_4;
    }
LABEL_7:
    Hasher._combine(_:)(0);
    goto LABEL_8;
  }
  Swift::UInt64 v1 = *(void *)(v0 + 48);
  Hasher._combine(_:)(1u);
  Hasher._combine(_:)(v1);
  if (!*(void *)(v0 + 72)) {
    goto LABEL_6;
  }
LABEL_3:
  Hasher._combine(_:)(1u);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 88)) {
    goto LABEL_7;
  }
LABEL_4:
  Hasher._combine(_:)(1u);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
LABEL_8:
  Hasher._combine(_:)(*(unsigned char *)(v0 + 96) & 1);
}

Swift::Int sub_10023E698()
{
  return Hasher._finalize()();
}

Swift::Int sub_10023E6DC()
{
  return Hasher._finalize()();
}

uint64_t sub_10023E718(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v2;
  char v12 = *(unsigned char *)(a1 + 96);
  long long v3 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  _OWORD v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v4;
  long long v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 32);
  long long v7 = *(_OWORD *)(a2 + 48);
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v9 = *(_OWORD *)(a2 + 80);
  char v14 = *(unsigned char *)(a2 + 96);
  v13[4] = v8;
  v13[5] = v9;
  v13[2] = v6;
  v13[3] = v7;
  return sub_10023E784((uint64_t)v11, (uint64_t)v13) & 1;
}

uint64_t sub_10023E784(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), v6 = 0, (v5 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v7 || (char v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), v6 = 0, (v8 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (char v9 = _stringCompareWithSmolCheck(_:_:expecting:)(), v6 = 0, (v9 & 1) != 0))
      {
        char v6 = *(unsigned char *)(a2 + 56);
        if (*(unsigned char *)(a1 + 56))
        {
          if (!*(unsigned char *)(a2 + 56)) {
            return v6 & 1;
          }
        }
        else
        {
          if (*(void *)(a1 + 48) != *(void *)(a2 + 48)) {
            char v6 = 1;
          }
          if (v6) {
            goto LABEL_34;
          }
        }
        uint64_t v10 = *(void *)(a1 + 72);
        uint64_t v11 = *(void *)(a2 + 72);
        if (v10)
        {
          if (!v11) {
            goto LABEL_34;
          }
          if (*(void *)(a1 + 64) != *(void *)(a2 + 64) || v10 != v11)
          {
            char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
            char v6 = 0;
            if ((v12 & 1) == 0) {
              return v6 & 1;
            }
          }
        }
        else if (v11)
        {
          goto LABEL_34;
        }
        uint64_t v13 = *(void *)(a1 + 88);
        uint64_t v14 = *(void *)(a2 + 88);
        if (v13)
        {
          if (v14)
          {
            if (*(void *)(a1 + 80) != *(void *)(a2 + 80) || v13 != v14)
            {
              char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
              char v6 = 0;
              if ((v15 & 1) == 0) {
                return v6 & 1;
              }
            }
LABEL_36:
            char v6 = ((*(unsigned char *)(a1 + 96) & 1) == 0) ^ *(unsigned char *)(a2 + 96);
            return v6 & 1;
          }
        }
        else if (!v14)
        {
          goto LABEL_36;
        }
LABEL_34:
        char v6 = 0;
      }
    }
  }
  return v6 & 1;
}

uint64_t destroy for RestoreDistributor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RestoreDistributor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RestoreDistributor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

__n128 initializeWithTake for RestoreDistributor(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for RestoreDistributor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for RestoreDistributor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 97)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RestoreDistributor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 97) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RestoreDistributor()
{
  return &type metadata for RestoreDistributor;
}

unint64_t sub_10023EC2C()
{
  unint64_t result = qword_10065CD00;
  if (!qword_10065CD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065CD00);
  }
  return result;
}

uint64_t sub_10023EC80(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1000172F8(&qword_10065CE48);
    unint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    unint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (void *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v18 = v17[1];
    *(void *)&v36[0] = *v17;
    *((void *)&v36[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    long long v32 = v28;
    long long v33 = v29;
    uint64_t v34 = v30;
    sub_1001C5DD4(&v31, v35);
    long long v28 = v32;
    long long v29 = v33;
    uint64_t v30 = v34;
    sub_1001C5DD4(v35, v36);
    sub_1001C5DD4(v36, &v32);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v19 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)])) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)&v6[8 * v21];
      }
      while (v25 == -1);
      unint64_t v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(void *)(v10 + 32) = v30;
    uint64_t result = (uint64_t)sub_1001C5DD4(&v32, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_10024A370();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_10023F028(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_1000172F8(&qword_10065CEA8);
    unint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    unint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v34 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v33 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v47;
  uint64_t v7 = v45;
  int64_t v8 = &v40;
  unint64_t v9 = &v42;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v35 = 0;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v18 = v35 + 1;
  if (__OFADD__(v35, 1)) {
    goto LABEL_35;
  }
  if (v18 >= v33) {
    goto LABEL_32;
  }
  unint64_t v19 = *(void *)(v34 + 8 * v18);
  int64_t v20 = v35 + 1;
  if (!v19)
  {
    int64_t v20 = v35 + 2;
    if (v35 + 2 >= v33) {
      goto LABEL_32;
    }
    unint64_t v19 = *(void *)(v34 + 8 * v20);
    if (!v19)
    {
      int64_t v20 = v35 + 3;
      if (v35 + 3 >= v33) {
        goto LABEL_32;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v20);
      if (!v19)
      {
        int64_t v20 = v35 + 4;
        if (v35 + 4 >= v33) {
          goto LABEL_32;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          int64_t v21 = v35 + 5;
          if (v35 + 5 < v33)
          {
            unint64_t v19 = *(void *)(v34 + 8 * v21);
            if (v19)
            {
              int64_t v20 = v35 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v20 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_36;
              }
              if (v20 >= v33) {
                break;
              }
              unint64_t v19 = *(void *)(v34 + 8 * v20);
              ++v21;
              if (v19) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_10024A370();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  int64_t v35 = v20;
  uint64_t v36 = (v19 - 1) & v19;
  for (unint64_t i = __clz(__rbit64(v19)) + (v20 << 6); ; unint64_t i = __clz(__rbit64(v5)) | (v35 << 6))
  {
    char v22 = (uint64_t *)(*(void *)(v1 + 48) + 16 * i);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    sub_1000144C8(*(void *)(v1 + 56) + 32 * i, (uint64_t)v6);
    *(void *)&long long v46 = v24;
    *((void *)&v46 + 1) = v23;
    long long v44 = v46;
    v45[0] = v47[0];
    v45[1] = v47[1];
    uint64_t v38 = v24;
    uint64_t v39 = v23;
    sub_1001C5DD4(v7, &v37);
    swift_bridgeObjectRetain();
    sub_1000172F8((uint64_t *)&unk_10065C9C0);
    swift_dynamicCast();
    uint64_t v25 = v38;
    uint64_t v26 = v39;
    sub_100016CB8((uint64_t)v8, (uint64_t)v9);
    sub_100016CB8((uint64_t)v9, (uint64_t)v43);
    sub_100016CB8((uint64_t)v43, (uint64_t)v41);
    unint64_t result = sub_100016D20(v25, v26);
    unint64_t v27 = result;
    if (v28)
    {
      unint64_t v11 = v9;
      unint64_t v12 = v8;
      uint64_t v13 = v1;
      unint64_t v14 = v7;
      int64_t v15 = v6;
      int64_t v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *int64_t v16 = v25;
      v16[1] = v26;
      uint64_t v6 = v15;
      uint64_t v7 = v14;
      uint64_t v1 = v13;
      int64_t v8 = v12;
      unint64_t v9 = v11;
      unint64_t result = sub_10018AD2C((uint64_t)v41, v2[7] + 32 * v27, (uint64_t *)&unk_10065C9C0);
      unint64_t v5 = v36;
      if (!v36) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v29 = (uint64_t *)(v2[6] + 16 * result);
    *long long v29 = v25;
    v29[1] = v26;
    unint64_t result = sub_100016CB8((uint64_t)v41, v2[7] + 32 * result);
    uint64_t v30 = v2[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31) {
      goto LABEL_34;
    }
    v2[2] = v32;
    unint64_t v5 = v36;
    if (!v36) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v36 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_10023F3CC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1000172F8(&qword_10065CE48);
    unint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    unint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1000144C8(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1001C5DD4(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1001C5DD4(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1001C5DD4(v36, v37);
    sub_1001C5DD4(v37, &v33);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v20 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)&v6[8 * v22];
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_1001C5DD4(&v33, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_10024A370();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void *sub_10023F794(void *a1)
{
  uint64_t v1 = sub_1004EDDA4(a1);
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    sub_100455EE8(0, v2, 0);
    uint64_t v3 = 0;
    do
    {
      id v4 = *(id *)(v1 + 8 * v3 + 32);
      id v5 = sub_1002498C8(v4);
      uint64_t v7 = v6;

      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1) {
        sub_100455EE8(v8 > 1, v9 + 1, 1);
      }
      ++v3;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      uint64_t v10 = &_swiftEmptyArrayStorage[2 * v9];
      v10[4] = v5;
      v10[5] = v7;
    }
    while (v2 != v3);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

id sub_10023F898(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = a1;
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_100249364(1, a2, a3, (uint64_t)sub_1002492C8, 0, v5);
  swift_bridgeObjectRelease();

  if (!v6) {
    return 0;
  }
  id v7 = sub_1002498C8(v6);

  return v7;
}

void sub_10023F93C(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v10 = *a1;
  swift_bridgeObjectRetain();
  unint64_t v11 = (void *)sub_100249364(0, a2, a3, (uint64_t)sub_1002492C8, 0, v10);
  swift_bridgeObjectRelease();

  if (v11)
  {
    uint64_t v17 = &type metadata for String;
    uint64_t v18 = &protocol witness table for String;
    uint64_t v19 = &protocol witness table for String;
    uint64_t v15 = a4;
    uint64_t v16 = a5;
    type metadata accessor for JSONEncoder();
    swift_allocObject();
    swift_bridgeObjectRetain_n();
    id v12 = v11;
    JSONEncoder.init()();
    SQLiteEncodeValue(_:using:)(&v15, v20);
    if (v5)
    {
      swift_release();
      sub_100014524((uint64_t)&v15);
      swift_unexpectedError();
      __break(1u);
    }
    else
    {
      swift_release();
      sub_100014524((uint64_t)&v15);
      sub_10018AC60(v20, v20[3]);
      uint64_t v13 = _bridgeAnythingToObjectiveC<A>(_:)();
      sub_100014524((uint64_t)v20);
      NSString v14 = String._bridgeToObjectiveC()();
      objc_msgSend(v12, "setValue:forProperty:", v13, v14, v15, v16);
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_10023FB0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 64) = a4;
  *(void *)(v6 + 72) = v5;
  *(unsigned char *)(v6 + 168) = a5;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 56) = a3;
  *(void *)(v6 + 40) = a1;
  sub_1000172F8(&qword_10065E4D0);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for ManagedAppStatus.State();
  *(void *)(v6 + 96) = v7;
  *(void *)(v6 + 104) = *(void *)(v7 - 8);
  *(void *)(v6 + 112) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  *(void *)(v6 + 120) = v8;
  *(void *)(v6 + 128) = *(void *)(v8 - 8);
  *(void *)(v6 + 136) = swift_task_alloc();
  return _swift_task_switch(sub_10023FC74, v5, 0);
}

uint64_t sub_10023FC74()
{
  uint64_t v43 = v0;
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v5 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v6 = v0[6];
  static Logger.ddm.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  sub_100017238(v6, v5, &qword_10065E4D0);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v40 = v8;
    uint64_t v9 = v0[13];
    uint64_t v10 = v0[14];
    uint64_t v11 = v0[12];
    uint64_t v38 = v0[11];
    uint64_t v12 = v0[10];
    uint64_t v13 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446722;
    uint64_t v14 = ManagedAppStatus.State.rawValue.getter();
    v0[2] = sub_1000143F4(v14, v15, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
    *(_WORD *)(v13 + 12) = 2082;
    sub_100017238(v38, v12, &qword_10065E4D0);
    uint64_t v16 = type metadata accessor for ManagedAppStatus.Reason();
    uint64_t v17 = *(void *)(v16 - 8);
    int v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16);
    uint64_t v19 = v0[10];
    if (v18 == 1)
    {
      sub_10001729C(v0[10], &qword_10065E4D0);
      unint64_t v20 = 0xE400000000000000;
      uint64_t v21 = 1701736302;
    }
    else
    {
      uint64_t v21 = ManagedAppStatus.Reason.rawValue.getter();
      unint64_t v20 = v26;
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v16);
    }
    uint64_t v36 = v0[16];
    uint64_t v37 = v0[15];
    uint64_t v39 = v0[17];
    uint64_t v27 = v0[11];
    uint64_t v29 = v0[7];
    unint64_t v28 = v0[8];
    v0[3] = sub_1000143F4(v21, v20, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001729C(v27, &qword_10065E4D0);
    *(_WORD *)(v13 + 22) = 2080;
    swift_bridgeObjectRetain();
    v0[4] = sub_1000143F4(v29, v28, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v7, v40, "Setting state %{public}s reason %{public}s for declaration %s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v39, v37);
  }
  else
  {
    uint64_t v22 = v0[16];
    uint64_t v23 = v0[17];
    uint64_t v24 = v0[15];
    uint64_t v25 = v0[11];
    (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
    sub_10001729C(v25, &qword_10065E4D0);
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v24);
  }
  uint64_t v30 = v0[8];
  uint64_t v31 = v0[7];
  uint64_t v32 = (int8x16_t *)swift_task_alloc();
  v0[18] = v32;
  int8x16_t v33 = *(int8x16_t *)(v0 + 5);
  v32[1].i64[0] = v31;
  v32[1].i64[1] = v30;
  _OWORD v32[2] = vextq_s8(v33, v33, 8uLL);
  os_log_t log = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1006606E0 + dword_1006606E0);
  long long v34 = (void *)swift_task_alloc();
  v0[19] = v34;
  *long long v34 = v0;
  v34[1] = sub_100240100;
  return log((uint64_t)log, (uint64_t)sub_10024A6DC, (uint64_t)v32);
}

uint64_t sub_100240100()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = sub_1002402C8;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 72);
    swift_task_dealloc();
    uint64_t v4 = sub_100240228;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100240228()
{
  int v1 = *(unsigned __int8 *)(v0 + 168);
  if (v1 != 2) {
    sub_100249CF0(v1 & 1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1002402C8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10024035C(id *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v49 = a5;
  uint64_t v46 = a4;
  uint64_t v8 = sub_1000172F8(&qword_10065BD08);
  __chkstk_darwin(v8 - 8);
  uint64_t v50 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ManagedAppStatus.State();
  uint64_t v47 = *(void *)(v10 - 8);
  uint64_t v48 = v10;
  __chkstk_darwin(v10);
  unint64_t v59 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000172F8(&qword_10065E4D0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for ManagedAppStatus.Reason();
  uint64_t v15 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v45 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Logger();
  int v18 = *(char **)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = *a1;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_100249364(0, a2, a3, (uint64_t)sub_1002492C8, 0, v21);
  swift_bridgeObjectRelease();

  if (v22)
  {
    uint64_t v23 = (void *)v22;
    sub_100017238(v46, (uint64_t)v14, &qword_10065E4D0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v52) == 1)
    {
      sub_10001729C((uint64_t)v14, &qword_10065E4D0);
      uint64_t v24 = v51;
    }
    else
    {
      uint64_t v29 = v45;
      uint64_t v30 = v52;
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v45, v14, v52);
      sub_1000172F8(&qword_10065CF48);
      unint64_t v31 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1005A3EC0;
      (*(void (**)(unint64_t, char *, uint64_t))(v15 + 16))(v32 + v31, v29, v30);
      uint64_t v54 = sub_1000172F8(&qword_10065CE50);
      uint64_t v55 = sub_10024A6FC(&qword_10065CE58, &qword_10065CE60);
      uint64_t v56 = sub_10024A6FC(&qword_10065CF38, &qword_10065CF40);
      v53[0] = v32;
      type metadata accessor for JSONEncoder();
      swift_allocObject();
      id v33 = v23;
      swift_bridgeObjectRetain();
      JSONEncoder.init()();
      uint64_t v34 = v51;
      SQLiteEncodeValue(_:using:)(v53, v57);
      uint64_t v24 = v34;
      if (v34)
      {
LABEL_18:
        swift_release();
        sub_100014524((uint64_t)v53);
        swift_unexpectedError();
        __break(1u);
        return;
      }
      swift_release();
      sub_100014524((uint64_t)v53);
      sub_10018AC60(v57, v58);
      uint64_t v35 = _bridgeAnythingToObjectiveC<A>(_:)();
      sub_100014524((uint64_t)v57);
      NSString v36 = String._bridgeToObjectiveC()();
      [v33 setValue:v35 forProperty:v36];
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v29, v52);
    }
    uint64_t v38 = v47;
    uint64_t v37 = v48;
    (*(void (**)(char *, void, uint64_t))(v47 + 104))(v59, enum case for ManagedAppStatus.State.managed(_:), v48);
    sub_100013A2C(&qword_10065CF30, (void (*)(uint64_t))&type metadata accessor for ManagedAppStatus.State);
    uint64_t v39 = v49;
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    if (v53[0] == v57[0] && v53[1] == v57[1])
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v59, v37);
    }
    else
    {
      char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v59, v37);
      if ((v40 & 1) == 0)
      {
LABEL_14:
        uint64_t v44 = (uint64_t)v50;
        (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v50, v39, v37);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v44, 0, 1, v37);
        sub_1002455A0(v44, 2, v23);
        sub_10001729C(v44, &qword_10065BD08);

        return;
      }
    }
    uint64_t v54 = sub_1000172F8(&qword_10065CE50);
    uint64_t v55 = sub_10024A6FC(&qword_10065CE58, &qword_10065CE60);
    uint64_t v56 = sub_10024A6FC(&qword_10065CF38, &qword_10065CF40);
    v53[0] = (uint64_t)_swiftEmptyArrayStorage;
    type metadata accessor for JSONEncoder();
    swift_allocObject();
    id v41 = v23;
    JSONEncoder.init()();
    SQLiteEncodeValue(_:using:)(v53, v57);
    if (!v24)
    {
      swift_release();
      sub_100014524((uint64_t)v53);
      sub_10018AC60(v57, v58);
      uint64_t v42 = _bridgeAnythingToObjectiveC<A>(_:)();
      sub_100014524((uint64_t)v57);
      NSString v43 = String._bridgeToObjectiveC()();
      [v41 setValue:v42 forProperty:v43];

      swift_unknownObjectRelease();
      goto LABEL_14;
    }
    goto LABEL_18;
  }
  unint64_t v59 = v18;
  static Logger.ddm.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315138;
    uint64_t v52 = (uint64_t)(v27 + 4);
    v53[0] = v28;
    swift_bridgeObjectRetain();
    v57[0] = sub_1000143F4(a2, a3, v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Declaration %s could not be found", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*((void (**)(char *, uint64_t))v59 + 1))(v20, v17);
}

void sub_100240CB8(id *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v54 = a3;
  uint64_t v6 = sub_1000172F8(&qword_10065BD00);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DDMDeclarationStatusTemplate(0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (void *)((char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v49 - v13;
  uint64_t v16 = *a2;
  uint64_t v15 = a2[1];
  id v17 = *a1;
  swift_bridgeObjectRetain();
  int v18 = (void *)sub_100249364(0, v16, v15, (uint64_t)sub_1002492C8, 0, v17);
  swift_bridgeObjectRelease();

  if (v18)
  {
    sub_100249F0C((uint64_t)a2, (uint64_t)v12);
    id v19 = v18;
    sub_100241830(v19, (uint64_t)v8);

    sub_10018AD2C((uint64_t)v8, (uint64_t)v12 + *(int *)(v9 + 28), &qword_10065BD00);
    id v20 = v19;
    NSString v21 = String._bridgeToObjectiveC()();
    id v22 = [v20 valueForProperty:v21];

    if (v22)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v52 = 0u;
      long long v53 = 0u;
    }
    sub_100017238((uint64_t)&v52, (uint64_t)&v50, (uint64_t *)&unk_10065C9C0);
    if (v51)
    {
      sub_1001C5DD4(&v50, v49);
      type metadata accessor for JSONDecoder();
      swift_allocObject();
      JSONDecoder.init()();
      uint64_t v29 = sub_100243860(v49);
      if (v3) {
        goto LABEL_28;
      }
      uint64_t v30 = (void *)v29;
      swift_release();
      sub_100014524((uint64_t)v49);
      sub_10001729C((uint64_t)&v52, (uint64_t *)&unk_10065C9C0);
    }
    else
    {
      sub_10001729C((uint64_t)&v52, (uint64_t *)&unk_10065C9C0);

      uint64_t v30 = _swiftEmptyArrayStorage;
    }
    uint64_t v31 = *(int *)(v9 + 32);
    swift_bridgeObjectRelease();
    *(void *)((char *)v12 + v31) = v30;
    id v32 = v20;
    NSString v33 = String._bridgeToObjectiveC()();
    id v34 = [v32 valueForProperty:v33];

    if (v34)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v52 = 0u;
      long long v53 = 0u;
    }
    sub_100017238((uint64_t)&v52, (uint64_t)&v50, (uint64_t *)&unk_10065C9C0);
    if (!v51)
    {
      sub_10001729C((uint64_t)&v52, (uint64_t *)&unk_10065C9C0);

      goto LABEL_23;
    }
    sub_1001C5DD4(&v50, v49);
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    uint64_t v35 = sub_100241F7C(v49);
    if (!v3)
    {
      uint64_t v37 = v35;
      uint64_t v38 = v36;
      swift_release();
      sub_100014524((uint64_t)v49);
      sub_10001729C((uint64_t)&v52, (uint64_t *)&unk_10065C9C0);

      if (v37 == *v12 && v38 == v12[1])
      {
        swift_bridgeObjectRelease();
LABEL_21:
        unint64_t v40 = sub_1004ECB78();
        type metadata accessor for JSONEncoder();
        swift_allocObject();
        JSONEncoder.init()();
        if (*(void *)(sub_100249FE8(v40, (void (*)(long long *__return_ptr, long long *, char *))sub_100249FCC)+ 16))
        {
          sub_1000172F8(&qword_10065CE48);
          id v41 = (void *)static _DictionaryStorage.allocate(capacity:)();
        }
        else
        {
          id v41 = &_swiftEmptyDictionarySingleton;
        }
        *(void *)&long long v52 = v41;
        id v42 = v32;
        uint64_t v43 = swift_bridgeObjectRetain();
        sub_1004ED160(v43, 1, &v52);
        swift_bridgeObjectRelease();
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_release();
        [v42 setValuesWithDictionary:isa];
        swift_bridgeObjectRelease();
        swift_release();

        id v45 = sub_1002498C8(v42);
        uint64_t v47 = v46;

        uint64_t v48 = v54;
        *uint64_t v54 = v45;
        v48[1] = v47;
        goto LABEL_26;
      }
      char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v39) {
        goto LABEL_21;
      }
LABEL_23:
      type metadata accessor for InternalError();
      sub_100013A2C((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();

LABEL_26:
      sub_100249F70((uint64_t)v12);
      return;
    }
LABEL_28:
    swift_release();
    swift_unexpectedError();
    __break(1u);
    swift_release();
    swift_unexpectedError();
    __break(1u);
    swift_unexpectedError();
    __break(1u);
    return;
  }
  sub_100249F0C((uint64_t)a2, (uint64_t)v14);
  id v23 = sub_1004E9A50((uint64_t)v14, v17);
  if (!v3)
  {
    uint64_t v24 = v23;
    id v25 = sub_1002498C8(v23);
    uint64_t v27 = v26;

    uint64_t v28 = v54;
    *uint64_t v54 = v25;
    v28[1] = v27;
  }
}

void sub_100241370(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, BOOL *a4@<X8>)
{
  id v7 = *a1;
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_100249364(0, a2, a3, (uint64_t)sub_1002492C8, 0, v7);
  swift_bridgeObjectRelease();

  if (v8)
  {
    [v8 deleteFromDatabase];
  }
  *a4 = v8 == 0;
}

uint64_t sub_100241424()
{
  sub_10001729C(v0 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon32ManagedAppDeclarationStatusStore_database, &qword_10065CF60);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_10024146C()
{
  return type metadata accessor for ManagedAppDeclarationStatusStore();
}

uint64_t type metadata accessor for ManagedAppDeclarationStatusStore()
{
  uint64_t result = qword_10065CD38;
  if (!qword_10065CD38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002414C0()
{
  sub_10024155C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10024155C()
{
  if (!qword_10065CD50)
  {
    type metadata accessor for DDMDeclarationStatusDatabaseConfig(255);
    unint64_t v0 = type metadata accessor for SQLiteDatabase();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10065CD50);
    }
  }
}

uint64_t sub_1002415BC@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  id v3 = a1;
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [v3 valueForProperty:v4];

  if (v5)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_100017238((uint64_t)v12, (uint64_t)&v10, (uint64_t *)&unk_10065C9C0);
  if (v11)
  {
    sub_1001C5DD4(&v10, v9);
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    sub_100241CA8(v9, a2);
    swift_release();
    sub_100014524((uint64_t)v9);
    uint64_t v6 = type metadata accessor for Date();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a2, 0, 1, v6);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a2, 1, 1, v7);
  }
  return sub_10001729C((uint64_t)v12, (uint64_t *)&unk_10065C9C0);
}

uint64_t sub_100241818(uint64_t a1, void *a2)
{
  return sub_100241AAC(a1, a2, (uint64_t (*)(_OWORD *, uint64_t))sub_100243994);
}

uint64_t sub_100241830@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  id v3 = a1;
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [v3 valueForProperty:v4];

  if (v5)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_100017238((uint64_t)v12, (uint64_t)&v10, (uint64_t *)&unk_10065C9C0);
  if (v11)
  {
    sub_1001C5DD4(&v10, v9);
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    sub_1002435B4(v9, a2);
    swift_release();
    sub_100014524((uint64_t)v9);
    uint64_t updated = type metadata accessor for ManagedAppStatus.UpdateState();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(updated - 8) + 56))(a2, 0, 1, updated);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ManagedAppStatus.UpdateState();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a2, 1, 1, v7);
  }
  return sub_10001729C((uint64_t)v12, (uint64_t *)&unk_10065C9C0);
}

uint64_t sub_100241A94(uint64_t a1, void *a2)
{
  return sub_100241AAC(a1, a2, (uint64_t (*)(_OWORD *, uint64_t))sub_1002442B4);
}

uint64_t sub_100241AAC(uint64_t a1, void *a2, uint64_t (*a3)(_OWORD *, uint64_t))
{
  id v4 = a2;
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v4 valueForProperty:v5];

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v13, 0, sizeof(v13));
  }
  sub_100017238((uint64_t)v13, (uint64_t)&v11, (uint64_t *)&unk_10065C9C0);
  if (v12)
  {
    sub_1001C5DD4(&v11, v10);
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    uint64_t v7 = JSONDecoder.init()();
    uint64_t v8 = a3(v10, v7);
    swift_release();
    sub_100014524((uint64_t)v10);
  }
  else
  {
    uint64_t v8 = 0;
  }
  sub_10001729C((uint64_t)v13, (uint64_t *)&unk_10065C9C0);
  return v8;
}

uint64_t sub_100241CA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000172F8(&qword_10065B8F0);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000144C8((uint64_t)a1, (uint64_t)v22);
  if (swift_dynamicCast())
  {
    uint64_t v7 = v21[0];
    unint64_t v8 = v21[1];
    type metadata accessor for Date();
    sub_100013A2C(&qword_10065CFB8, (void (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    return sub_100013510(v7, v8);
  }
  uint64_t v10 = type metadata accessor for Date();
  sub_1000144C8((uint64_t)a1, (uint64_t)v22);
  int v11 = swift_dynamicCast();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  if (v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    v12(v6, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v6, 1, v10) != 1) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2, v6, v10);
    }
  }
  else
  {
    v12(v6, 1, 1, v10);
  }
  sub_10001729C((uint64_t)v6, &qword_10065B8F0);
  v22[0] = v10;
  sub_1000172F8(&qword_10065CFB0);
  uint64_t v14 = String.init<A>(describing:)();
  uint64_t v16 = v15;
  sub_10018AC60(a1, a1[3]);
  v22[0] = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
  uint64_t v17 = String.init<A>(describing:)();
  uint64_t v19 = v18;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v20 = v14;
  *(void *)(v20 + 8) = v16;
  *(void *)(v20 + 16) = v17;
  *(void *)(v20 + 24) = v19;
  *(unsigned char *)(v20 + 32) = 0;
  return swift_willThrow();
}

uint64_t sub_100241F7C(void *a1)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v6);
  if (!swift_dynamicCast()) {
    return sub_100247980(a1, (uint64_t)&type metadata for String);
  }
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t result = sub_100013510(v4, v5);
  if (!v1) {
    return v7;
  }
  return result;
}

uint64_t sub_10024204C(uint64_t a1, uint64_t a2)
{
  return sub_100242290(a1, a2, (void (*)(void))sub_10024A4A4, (uint64_t)&type metadata for ManagedAppDeclaration.ManagementScope, (uint64_t)&unk_10065CED0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100247CE0);
}

uint64_t sub_10024209C(void *a1)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v6);
  if (!swift_dynamicCast()) {
    return sub_100247A9C(a1, (uint64_t)&type metadata for Persona);
  }
  sub_10024AA80();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t result = sub_100013510(v4, v5);
  if (!v1) {
    return v7;
  }
  return result;
}

uint64_t sub_10024216C(void *a1)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v7);
  if (swift_dynamicCast())
  {
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    char v3 = sub_100013510(v5, v6);
    if (!v1) {
      char v3 = v7[39];
    }
  }
  else
  {
    char v3 = sub_100247BBC(a1, (uint64_t)&type metadata for Bool);
  }
  return v3 & 1;
}

uint64_t sub_100242240(uint64_t a1, uint64_t a2)
{
  return sub_100242290(a1, a2, (void (*)(void))sub_10024A450, (uint64_t)&type metadata for DDMInstallTiming, (uint64_t)&unk_10065CEB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100247CE0);
}

uint64_t sub_100242290(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_1000144C8(a1, (uint64_t)v15);
  if (swift_dynamicCast())
  {
    a3();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    uint64_t result = sub_100013510(v13, v14);
    if (!v6) {
      return v15[47];
    }
  }
  else
  {
    uint64_t result = a6(a1, a4, a4, a5);
    if (!v6) {
      return result & 1;
    }
  }
  return result;
}

uint64_t sub_100242394@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000172F8((uint64_t *)&unk_10065CA40);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000144C8((uint64_t)a1, (uint64_t)v22);
  if (swift_dynamicCast())
  {
    uint64_t v7 = v21[0];
    unint64_t v8 = v21[1];
    type metadata accessor for DDMPurchaseMethod();
    sub_100013A2C(&qword_10065BC88, (void (*)(uint64_t))&type metadata accessor for DDMPurchaseMethod);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    return sub_100013510(v7, v8);
  }
  else
  {
    uint64_t v10 = type metadata accessor for DDMPurchaseMethod();
    sub_1000144C8((uint64_t)a1, (uint64_t)v22);
    int v11 = swift_dynamicCast();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    if (v11)
    {
      uint64_t v13 = *(void *)(v10 - 8);
      v12(v6, 0, 1, v10);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2, v6, v10);
    }
    else
    {
      v12(v6, 1, 1, v10);
      sub_10001729C((uint64_t)v6, (uint64_t *)&unk_10065CA40);
      v22[0] = v10;
      sub_1000172F8(&qword_10065BC80);
      uint64_t v14 = String.init<A>(describing:)();
      uint64_t v16 = v15;
      sub_10018AC60(a1, a1[3]);
      v22[0] = swift_getDynamicType();
      sub_1000172F8(&qword_10065BC70);
      uint64_t v17 = String.init<A>(describing:)();
      uint64_t v19 = v18;
      sub_1001C3A08();
      swift_allocError();
      *(void *)uint64_t v20 = v14;
      *(void *)(v20 + 8) = v16;
      *(void *)(v20 + 16) = v17;
      *(void *)(v20 + 24) = v19;
      *(unsigned char *)(v20 + 32) = 0;
      return swift_willThrow();
    }
  }
}

uint64_t sub_100242640@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000172F8(&qword_10065C3C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000144C8((uint64_t)a1, (uint64_t)v22);
  if (swift_dynamicCast())
  {
    uint64_t v7 = v21[0];
    unint64_t v8 = v21[1];
    type metadata accessor for URL();
    sub_100013A2C(&qword_10065CFD8, (void (*)(uint64_t))&type metadata accessor for URL);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    return sub_100013510(v7, v8);
  }
  uint64_t v10 = type metadata accessor for URL();
  sub_1000144C8((uint64_t)a1, (uint64_t)v22);
  int v11 = swift_dynamicCast();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  if (v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    v12(v6, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v6, 1, v10) != 1) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2, v6, v10);
    }
  }
  else
  {
    v12(v6, 1, 1, v10);
  }
  sub_10001729C((uint64_t)v6, &qword_10065C3C0);
  v22[0] = v10;
  sub_1000172F8(&qword_10065CFE8);
  uint64_t v14 = String.init<A>(describing:)();
  uint64_t v16 = v15;
  sub_10018AC60(a1, a1[3]);
  v22[0] = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
  uint64_t v17 = String.init<A>(describing:)();
  uint64_t v19 = v18;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v20 = v14;
  *(void *)(v20 + 8) = v16;
  *(void *)(v20 + 16) = v17;
  *(void *)(v20 + 24) = v19;
  *(unsigned char *)(v20 + 32) = 0;
  return swift_willThrow();
}

uint64_t sub_100242914(void *a1)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v6);
  if (!swift_dynamicCast()) {
    return sub_100247E04(a1, (uint64_t)&type metadata for AppleItemID);
  }
  sub_10024A634();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t result = sub_100013510(v4, v5);
  if (!v1) {
    return v7;
  }
  return result;
}

uint64_t sub_1002429E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000172F8(&qword_10065BCD0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000144C8((uint64_t)a1, (uint64_t)v22);
  if (swift_dynamicCast())
  {
    uint64_t v7 = v21[0];
    unint64_t v8 = v21[1];
    type metadata accessor for Platform();
    sub_100013A2C(&qword_10065D030, (void (*)(uint64_t))&type metadata accessor for Platform);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    return sub_100013510(v7, v8);
  }
  uint64_t v10 = type metadata accessor for Platform();
  sub_1000144C8((uint64_t)a1, (uint64_t)v22);
  int v11 = swift_dynamicCast();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  if (v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    v12(v6, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v6, 1, v10) != 1) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2, v6, v10);
    }
  }
  else
  {
    v12(v6, 1, 1, v10);
  }
  sub_10001729C((uint64_t)v6, &qword_10065BCD0);
  v22[0] = v10;
  sub_1000172F8(&qword_10065D028);
  uint64_t v14 = String.init<A>(describing:)();
  uint64_t v16 = v15;
  sub_10018AC60(a1, a1[3]);
  v22[0] = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
  uint64_t v17 = String.init<A>(describing:)();
  uint64_t v19 = v18;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v20 = v14;
  *(void *)(v20 + 8) = v16;
  *(void *)(v20 + 16) = v17;
  *(void *)(v20 + 24) = v19;
  *(unsigned char *)(v20 + 32) = 0;
  return swift_willThrow();
}

uint64_t sub_100242CB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000172F8(&qword_10065BE10);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000144C8((uint64_t)a1, (uint64_t)v22);
  if (swift_dynamicCast())
  {
    uint64_t v7 = v21[0];
    unint64_t v8 = v21[1];
    type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum();
    sub_100013A2C(&qword_10065D050, (void (*)(uint64_t))&type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    return sub_100013510(v7, v8);
  }
  else
  {
    uint64_t v10 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum();
    sub_1000144C8((uint64_t)a1, (uint64_t)v22);
    int v11 = swift_dynamicCast();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    if (v11)
    {
      uint64_t v13 = *(void *)(v10 - 8);
      v12(v6, 0, 1, v10);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2, v6, v10);
    }
    else
    {
      v12(v6, 1, 1, v10);
      sub_10001729C((uint64_t)v6, &qword_10065BE10);
      v22[0] = v10;
      sub_1000172F8(&qword_10065D048);
      uint64_t v14 = String.init<A>(describing:)();
      uint64_t v16 = v15;
      sub_10018AC60(a1, a1[3]);
      v22[0] = swift_getDynamicType();
      sub_1000172F8(&qword_10065BC70);
      uint64_t v17 = String.init<A>(describing:)();
      uint64_t v19 = v18;
      sub_1001C3A08();
      swift_allocError();
      *(void *)uint64_t v20 = v14;
      *(void *)(v20 + 8) = v16;
      *(void *)(v20 + 16) = v17;
      *(void *)(v20 + 24) = v19;
      *(unsigned char *)(v20 + 32) = 0;
      return swift_willThrow();
    }
  }
}

uint64_t sub_100242F64(void *a1)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v6);
  if (!swift_dynamicCast()) {
    return sub_100247F18(a1, (uint64_t)&type metadata for AppInstallPhase);
  }
  sub_1001CDA60();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t result = sub_100013510(v4, v5);
  if (!v1) {
    return v6[39];
  }
  return result;
}

uint64_t sub_100243034@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000172F8(&qword_10065C9B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000144C8((uint64_t)a1, (uint64_t)v22);
  if (swift_dynamicCast())
  {
    uint64_t v7 = v21[0];
    unint64_t v8 = v21[1];
    type metadata accessor for UUID();
    sub_100013A2C((unint64_t *)&unk_10065C920, (void (*)(uint64_t))&type metadata accessor for UUID);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    return sub_100013510(v7, v8);
  }
  uint64_t v10 = type metadata accessor for UUID();
  sub_1000144C8((uint64_t)a1, (uint64_t)v22);
  int v11 = swift_dynamicCast();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  if (v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    v12(v6, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v6, 1, v10) != 1) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2, v6, v10);
    }
  }
  else
  {
    v12(v6, 1, 1, v10);
  }
  sub_10001729C((uint64_t)v6, &qword_10065C9B0);
  v22[0] = v10;
  sub_1000172F8(&qword_10065CF78);
  uint64_t v14 = String.init<A>(describing:)();
  uint64_t v16 = v15;
  sub_10018AC60(a1, a1[3]);
  v22[0] = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
  uint64_t v17 = String.init<A>(describing:)();
  uint64_t v19 = v18;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v20 = v14;
  *(void *)(v20 + 8) = v16;
  *(void *)(v20 + 16) = v17;
  *(void *)(v20 + 24) = v19;
  *(unsigned char *)(v20 + 32) = 0;
  return swift_willThrow();
}

uint64_t sub_100243308@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000172F8(&qword_10065BD08);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000144C8((uint64_t)a1, (uint64_t)v22);
  if (swift_dynamicCast())
  {
    uint64_t v7 = v21[0];
    unint64_t v8 = v21[1];
    type metadata accessor for ManagedAppStatus.State();
    sub_100013A2C(&qword_10065CF50, (void (*)(uint64_t))&type metadata accessor for ManagedAppStatus.State);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    return sub_100013510(v7, v8);
  }
  else
  {
    uint64_t v10 = type metadata accessor for ManagedAppStatus.State();
    sub_1000144C8((uint64_t)a1, (uint64_t)v22);
    int v11 = swift_dynamicCast();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    if (v11)
    {
      uint64_t v13 = *(void *)(v10 - 8);
      v12(v6, 0, 1, v10);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2, v6, v10);
    }
    else
    {
      v12(v6, 1, 1, v10);
      sub_10001729C((uint64_t)v6, &qword_10065BD08);
      v22[0] = v10;
      sub_1000172F8(&qword_10065D058);
      uint64_t v14 = String.init<A>(describing:)();
      uint64_t v16 = v15;
      sub_10018AC60(a1, a1[3]);
      v22[0] = swift_getDynamicType();
      sub_1000172F8(&qword_10065BC70);
      uint64_t v17 = String.init<A>(describing:)();
      uint64_t v19 = v18;
      sub_1001C3A08();
      swift_allocError();
      *(void *)uint64_t v20 = v14;
      *(void *)(v20 + 8) = v16;
      *(void *)(v20 + 16) = v17;
      *(void *)(v20 + 24) = v19;
      *(unsigned char *)(v20 + 32) = 0;
      return swift_willThrow();
    }
  }
}

uint64_t sub_1002435B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000172F8(&qword_10065BD00);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000144C8((uint64_t)a1, (uint64_t)v22);
  if (swift_dynamicCast())
  {
    uint64_t v7 = v21[0];
    unint64_t v8 = v21[1];
    type metadata accessor for ManagedAppStatus.UpdateState();
    sub_100013A2C(&qword_10065CE98, (void (*)(uint64_t))&type metadata accessor for ManagedAppStatus.UpdateState);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    return sub_100013510(v7, v8);
  }
  else
  {
    uint64_t updated = type metadata accessor for ManagedAppStatus.UpdateState();
    sub_1000144C8((uint64_t)a1, (uint64_t)v22);
    int v11 = swift_dynamicCast();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 56);
    if (v11)
    {
      uint64_t v13 = *(void *)(updated - 8);
      v12(v6, 0, 1, updated);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2, v6, updated);
    }
    else
    {
      v12(v6, 1, 1, updated);
      sub_10001729C((uint64_t)v6, &qword_10065BD00);
      v22[0] = updated;
      sub_1000172F8(&qword_10065CE90);
      uint64_t v14 = String.init<A>(describing:)();
      uint64_t v16 = v15;
      sub_10018AC60(a1, a1[3]);
      v22[0] = swift_getDynamicType();
      sub_1000172F8(&qword_10065BC70);
      uint64_t v17 = String.init<A>(describing:)();
      uint64_t v19 = v18;
      sub_1001C3A08();
      swift_allocError();
      *(void *)uint64_t v20 = v14;
      *(void *)(v20 + 8) = v16;
      *(void *)(v20 + 16) = v17;
      *(void *)(v20 + 24) = v19;
      *(unsigned char *)(v20 + 32) = 0;
      return swift_willThrow();
    }
  }
}

uint64_t sub_100243860(void *a1)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v7);
  if (swift_dynamicCast())
  {
    sub_1000172F8(&qword_10065CE50);
    sub_10024A6FC(&qword_10065CE58, &qword_10065CE60);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    uint64_t result = sub_100013510(v5, v6);
    if (!v1) {
      return v8;
    }
  }
  else
  {
    uint64_t v4 = sub_1000172F8(&qword_10065CE50);
    return sub_100248030(a1, v4, &qword_10065CE50, &qword_10065CE68);
  }
  return result;
}

uint64_t sub_100243994(void *a1)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v7);
  if (swift_dynamicCast())
  {
    sub_1000172F8(&qword_10065D008);
    sub_10024AA1C(&qword_10065D010);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    uint64_t result = sub_100013510(v5, v6);
    if (!v1) {
      return v8;
    }
  }
  else
  {
    uint64_t v4 = sub_1000172F8(&qword_10065D008);
    return sub_100248030(a1, v4, &qword_10065D008, &qword_10065D018);
  }
  return result;
}

uint64_t sub_100243AB4(uint64_t a1, uint64_t a2)
{
  return sub_100242290(a1, a2, (void (*)(void))sub_10024A920, (uint64_t)&type metadata for AppPackageType, (uint64_t)&qword_10065CF98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100248A34);
}

uint64_t sub_100243B04(void *a1)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v6);
  if (!swift_dynamicCast()) {
    return sub_100248B4C(a1, (uint64_t)&type metadata for AppleVersionID, (uint64_t)&type metadata for AppleVersionID, &qword_10065CF08);
  }
  sub_10024A5E0();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t result = sub_100013510(v4, v5);
  if (!v1) {
    return v7;
  }
  return result;
}

uint64_t sub_100243BE0(void *a1)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v6);
  if (!swift_dynamicCast()) {
    return sub_100248268(a1, (uint64_t)&type metadata for AnyDistributor);
  }
  sub_10024A688();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t result = sub_100013510(v4, v5);
  if (!v1) {
    return v7;
  }
  return result;
}

uint64_t sub_100243CBC(void *a1, uint64_t a2)
{
  return sub_100244528(a1, a2, (void (*)(void))sub_10024A538, (uint64_t)&type metadata for StoreMetadata, &qword_10065CEE8);
}

uint64_t sub_100243CF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000172F8(&qword_10065CFF0);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000144C8((uint64_t)a1, (uint64_t)v22);
  if (swift_dynamicCast())
  {
    uint64_t v7 = v21[0];
    unint64_t v8 = v21[1];
    type metadata accessor for AppInstallRequestType();
    sub_100013A2C(&qword_10065D000, (void (*)(uint64_t))&type metadata accessor for AppInstallRequestType);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    return sub_100013510(v7, v8);
  }
  else
  {
    uint64_t v10 = type metadata accessor for AppInstallRequestType();
    sub_1000144C8((uint64_t)a1, (uint64_t)v22);
    int v11 = swift_dynamicCast();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    if (v11)
    {
      uint64_t v13 = *(void *)(v10 - 8);
      v12(v6, 0, 1, v10);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2, v6, v10);
    }
    else
    {
      v12(v6, 1, 1, v10);
      sub_10001729C((uint64_t)v6, &qword_10065CFF0);
      v22[0] = v10;
      sub_1000172F8(&qword_10065CFF8);
      uint64_t v14 = String.init<A>(describing:)();
      uint64_t v16 = v15;
      sub_10018AC60(a1, a1[3]);
      v22[0] = swift_getDynamicType();
      sub_1000172F8(&qword_10065BC70);
      uint64_t v17 = String.init<A>(describing:)();
      uint64_t v19 = v18;
      sub_1001C3A08();
      swift_allocError();
      *(void *)uint64_t v20 = v14;
      *(void *)(v20 + 8) = v16;
      *(void *)(v20 + 16) = v17;
      *(void *)(v20 + 24) = v19;
      *(unsigned char *)(v20 + 32) = 0;
      return swift_willThrow();
    }
  }
}

uint64_t sub_100243FA4(void *a1, uint64_t a2)
{
  return sub_100243FE0(a1, a2, (void (*)(void))sub_10024ABBC, (uint64_t)&type metadata for AppInstallPriority, &qword_10065D0B0);
}

uint64_t sub_100243FE0(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t *a5)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v13);
  if (!swift_dynamicCast()) {
    return sub_100248384(a1, a4, a4, a5);
  }
  a3();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t result = sub_100013510(v11, v12);
  if (!v5) {
    return v13[39];
  }
  return result;
}

uint64_t sub_1002440CC@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v17);
  if (swift_dynamicCast())
  {
    uint64_t v4 = v18[0];
    unint64_t v5 = v18[1];
    sub_10024AC64();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    return sub_100013510(v4, v5);
  }
  else
  {
    sub_1000144C8((uint64_t)a1, (uint64_t)v18);
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      long long v7 = v17[1];
      *a2 = v17[0];
      a2[1] = v7;
      long long v8 = v17[3];
      a2[2] = v17[2];
      a2[3] = v8;
      long long v9 = v17[5];
      a2[4] = v17[4];
      a2[5] = v9;
      a2[6] = v17[6];
    }
    else
    {
      *(void *)&v17[0] = &type metadata for AppPackageEncryption;
      sub_1000172F8(&qword_10065D0D0);
      uint64_t v10 = String.init<A>(describing:)();
      uint64_t v12 = v11;
      sub_10018AC60(a1, a1[3]);
      *(void *)&v17[0] = swift_getDynamicType();
      sub_1000172F8(&qword_10065BC70);
      uint64_t v13 = String.init<A>(describing:)();
      uint64_t v15 = v14;
      sub_1001C3A08();
      swift_allocError();
      *(void *)uint64_t v16 = v10;
      *(void *)(v16 + 8) = v12;
      *(void *)(v16 + 16) = v13;
      *(void *)(v16 + 24) = v15;
      *(unsigned char *)(v16 + 32) = 0;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_100244278(void *a1, uint64_t a2)
{
  return sub_100243FE0(a1, a2, (void (*)(void))sub_10024ACB8, (uint64_t)&type metadata for AppInstallSource, &qword_10065D0E8);
}

uint64_t sub_1002442B4(void *a1)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v7);
  if (swift_dynamicCast())
  {
    sub_1000172F8(&qword_10065D078);
    sub_10024AB28(&qword_10065D080, &qword_10065D088);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    uint64_t result = sub_100013510(v5, v6);
    if (!v1) {
      return v8;
    }
  }
  else
  {
    uint64_t v4 = sub_1000172F8(&qword_10065D078);
    return sub_100248498(a1, v4);
  }
  return result;
}

uint64_t sub_1002443D8(void *a1)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v7);
  if (swift_dynamicCast())
  {
    type metadata accessor for LogKey();
    sub_100013A2C(&qword_10065CF68, (void (*)(uint64_t))&type metadata accessor for LogKey);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    uint64_t result = sub_100013510(v5, v6);
    if (!v1) {
      return v8;
    }
  }
  else
  {
    uint64_t v4 = type metadata accessor for LogKey();
    return sub_1002485B4(a1, v4);
  }
  return result;
}

uint64_t sub_1002444EC(void *a1, uint64_t a2)
{
  return sub_100244528(a1, a2, (void (*)(void))sub_10024A58C, (uint64_t)&type metadata for AnyError, &qword_10065CEF8);
}

uint64_t sub_100244528(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t *a5)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v13);
  if (!swift_dynamicCast()) {
    return sub_1002486C4(a1, a4, a4, a5);
  }
  a3();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t result = sub_100013510(v11, v12);
  if (!v5) {
    return v14;
  }
  return result;
}

uint64_t sub_100244614@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v12);
  if (swift_dynamicCast())
  {
    sub_10024AC10();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    uint64_t result = sub_100013510(v10, v11);
    if (v2) {
      return result;
    }
  }
  else
  {
    uint64_t result = sub_1002487D8(a1, (uint64_t)v15);
    if (v2) {
      return result;
    }
    *(_OWORD *)uint64_t v13 = v15[0];
    *(_OWORD *)&unsigned char v13[16] = v15[1];
    long long v14 = v15[2];
  }
  uint64_t v6 = *(void *)&v13[24];
  char v7 = v14;
  uint64_t v8 = *((void *)&v14 + 1);
  long long v9 = *(_OWORD *)&v13[8];
  *(unsigned char *)a2 = v13[0];
  *(_OWORD *)(a2 + 8) = v9;
  *(void *)(a2 + 24) = v6;
  *(unsigned char *)(a2 + 32) = v7;
  *(void *)(a2 + 40) = v8;
  return result;
}

uint64_t sub_100244728(void *a1, uint64_t a2)
{
  return sub_100244C44(a1, a2, (uint64_t)&type metadata for UInt, (uint64_t)&protocol witness table for UInt, &qword_10065D100);
}

uint64_t sub_100244758@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)&v16);
  if (swift_dynamicCast())
  {
    uint64_t v4 = v20[0];
    unint64_t v5 = v20[1];
    sub_10024A790();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    return sub_100013510(v4, v5);
  }
  else
  {
    sub_1000144C8((uint64_t)a1, (uint64_t)v20);
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      long long v7 = v17;
      *a2 = v16;
      a2[1] = v7;
      long long v8 = v19;
      a2[2] = v18;
      a2[3] = v8;
    }
    else
    {
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      sub_10001729C((uint64_t)&v16, &qword_1006666D0);
      *(void *)&long long v16 = &type metadata for BlockVerifierState;
      sub_1000172F8(&qword_10065D0B8);
      uint64_t v9 = String.init<A>(describing:)();
      uint64_t v11 = v10;
      sub_10018AC60(a1, a1[3]);
      *(void *)&long long v16 = swift_getDynamicType();
      sub_1000172F8(&qword_10065BC70);
      uint64_t v12 = String.init<A>(describing:)();
      uint64_t v14 = v13;
      sub_1001C3A08();
      swift_allocError();
      *(void *)uint64_t v15 = v9;
      *(void *)(v15 + 8) = v11;
      *(void *)(v15 + 16) = v12;
      *(void *)(v15 + 24) = v14;
      *(unsigned char *)(v15 + 32) = 0;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_100244910(void *a1)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v13);
  if (swift_dynamicCast())
  {
    sub_10024AAD4();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    uint64_t result = sub_100013510(v11, v12);
    if (v1) {
      return result;
    }
    int v4 = v13[36];
    unsigned int v5 = v13[37];
    unsigned int v6 = v13[38];
    unsigned int v7 = v13[39];
  }
  else
  {
    uint64_t result = sub_10024891C(a1, (uint64_t)&type metadata for NetworkPolicy.Decision);
    if (v1) {
      return result;
    }
    unsigned int v7 = BYTE3(result) & 1;
    unsigned int v6 = WORD1(result) & 1;
    int v4 = result & 1;
    unsigned int v5 = (result >> 8) & 1;
  }
  if (v7) {
    int v8 = 0x1000000;
  }
  else {
    int v8 = 0;
  }
  if (v6) {
    int v9 = 0x10000;
  }
  else {
    int v9 = 0;
  }
  if (v5) {
    int v10 = 256;
  }
  else {
    int v10 = 0;
  }
  return v10 | v4 | v9 | v8;
}

uint64_t sub_100244A30(uint64_t a1, uint64_t a2)
{
  return sub_100242290(a1, a2, (void (*)(void))sub_10024AD0C, (uint64_t)&type metadata for AppInstallIntent, (uint64_t)&unk_10065D0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100248A34);
}

uint64_t sub_100244A80@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v13);
  if (swift_dynamicCast())
  {
    sub_10024AD60();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    return sub_100013510(v12, *((unint64_t *)&v12 + 1));
  }
  else
  {
    sub_1000144C8((uint64_t)a1, (uint64_t)v13);
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      *a2 = v12;
    }
    else
    {
      v13[0] = &type metadata for AppStoreReceipt;
      sub_1000172F8(&qword_10065D108);
      uint64_t v5 = String.init<A>(describing:)();
      uint64_t v7 = v6;
      sub_10018AC60(a1, a1[3]);
      v13[0] = swift_getDynamicType();
      sub_1000172F8(&qword_10065BC70);
      uint64_t v8 = String.init<A>(describing:)();
      uint64_t v10 = v9;
      sub_1001C3A08();
      swift_allocError();
      *(void *)uint64_t v11 = v5;
      *(void *)(v11 + 8) = v7;
      *(void *)(v11 + 16) = v8;
      *(void *)(v11 + 24) = v10;
      *(unsigned char *)(v11 + 32) = 0;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_100244C14(void *a1, uint64_t a2)
{
  return sub_100244C44(a1, a2, (uint64_t)&type metadata for Int, (uint64_t)&protocol witness table for Int, &qword_10065D070);
}

uint64_t sub_100244C44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v12);
  if (!swift_dynamicCast()) {
    return sub_100248B4C(a1, a3, a3, a5);
  }
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t result = sub_100013510(v10, v11);
  if (!v5) {
    return v13;
  }
  return result;
}

void sub_100244D28(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000172F8(&qword_10065B8F0);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100017238(a1, (uint64_t)v11, &qword_10065B8F0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    id v12 = a3;
LABEL_5:
    uint64_t v20 = 0;
    goto LABEL_6;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v8, v11, v5);
  v23[3] = v5;
  v23[4] = sub_100013A2C(&qword_10065CFB8, (void (*)(uint64_t))&type metadata accessor for Date);
  v23[5] = sub_100013A2C(&qword_10065CFC0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v13 = sub_10019CE94(v23);
  (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v6 + 16))(v13, v8, v5);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  id v14 = a3;
  JSONEncoder.init()();
  SQLiteEncodeValue(_:using:)(v23, v24);
  swift_release();
  sub_100014524((uint64_t)v23);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v25;
  if (!v25) {
    goto LABEL_5;
  }
  long long v16 = sub_10018AC60(v24, v25);
  uint64_t v17 = *(void *)(v15 - 8);
  __chkstk_darwin(v16);
  long long v19 = &v22[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *))(v17 + 16))(v19);
  uint64_t v20 = _bridgeAnythingToObjectiveC<A>(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v19, v15);
  sub_100014524((uint64_t)v24);
LABEL_6:
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setValue:v20 forProperty:v21];

  swift_unknownObjectRelease();
}

void sub_10024516C(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  if (a2 >> 60 == 15)
  {
    id v5 = a4;
    uint64_t v6 = 0;
  }
  else
  {
    v11[3] = &type metadata for Data;
    v11[4] = sub_10024A974();
    v11[5] = sub_10024A9C8();
    v11[0] = a1;
    v11[1] = a2;
    type metadata accessor for JSONEncoder();
    swift_allocObject();
    id v9 = a4;
    sub_10018B2A8(a1, a2);
    JSONEncoder.init()();
    SQLiteEncodeValue(_:using:)(v11, v12);
    swift_release();
    sub_100014524((uint64_t)v11);
    sub_10018AC60(v12, v12[3]);
    uint64_t v6 = _bridgeAnythingToObjectiveC<A>(_:)();
    sub_100014524((uint64_t)v12);
  }
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a4 setValue:v6 forProperty:v10];

  swift_unknownObjectRelease();
}

void sub_100245370(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a1;
  if (a1)
  {
    v8[3] = sub_1000172F8(&qword_10065D008);
    v8[4] = sub_10024AA1C(&qword_10065D010);
    _OWORD v8[5] = sub_10024AA1C((unint64_t *)&qword_10065D020);
    v8[0] = v4;
    type metadata accessor for JSONEncoder();
    swift_allocObject();
    id v5 = a3;
    swift_bridgeObjectRetain();
    JSONEncoder.init()();
    SQLiteEncodeValue(_:using:)(v8, v9);
    swift_release();
    sub_100014524((uint64_t)v8);
    sub_10018AC60(v9, v9[3]);
    uint64_t v4 = _bridgeAnythingToObjectiveC<A>(_:)();
    sub_100014524((uint64_t)v9);
  }
  else
  {
    id v6 = a3;
  }
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setValue:v4 forProperty:v7];

  swift_unknownObjectRelease();
}

void sub_1002455A0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for ManagedAppStatus.State();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000172F8(&qword_10065BD08);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100017238(a1, (uint64_t)v11, &qword_10065BD08);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    id v12 = a3;
LABEL_5:
    uint64_t v20 = 0;
    goto LABEL_6;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v8, v11, v5);
  v23[3] = v5;
  v23[4] = sub_100013A2C(&qword_10065CF50, (void (*)(uint64_t))&type metadata accessor for ManagedAppStatus.State);
  v23[5] = sub_100013A2C(&qword_10065CF58, (void (*)(uint64_t))&type metadata accessor for ManagedAppStatus.State);
  uint64_t v13 = sub_10019CE94(v23);
  (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v6 + 16))(v13, v8, v5);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  id v14 = a3;
  JSONEncoder.init()();
  SQLiteEncodeValue(_:using:)(v23, v24);
  swift_release();
  sub_100014524((uint64_t)v23);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v25;
  if (!v25) {
    goto LABEL_5;
  }
  long long v16 = sub_10018AC60(v24, v25);
  uint64_t v17 = *(void *)(v15 - 8);
  __chkstk_darwin(v16);
  long long v19 = &v22[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *))(v17 + 16))(v19);
  uint64_t v20 = _bridgeAnythingToObjectiveC<A>(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v19, v15);
  sub_100014524((uint64_t)v24);
LABEL_6:
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setValue:v20 forProperty:v21];

  swift_unknownObjectRelease();
}

void sub_1002459EC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000172F8(&qword_10065C3C0);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100017238(a1, (uint64_t)v11, &qword_10065C3C0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    id v12 = a3;
LABEL_5:
    uint64_t v20 = 0;
    goto LABEL_6;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v8, v11, v5);
  v23[3] = v5;
  v23[4] = sub_100013A2C(&qword_10065CFD8, (void (*)(uint64_t))&type metadata accessor for URL);
  v23[5] = sub_100013A2C(&qword_10065CFE0, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v13 = sub_10019CE94(v23);
  (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v6 + 16))(v13, v8, v5);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  id v14 = a3;
  JSONEncoder.init()();
  SQLiteEncodeValue(_:using:)(v23, v24);
  swift_release();
  sub_100014524((uint64_t)v23);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v25;
  if (!v25) {
    goto LABEL_5;
  }
  long long v16 = sub_10018AC60(v24, v25);
  uint64_t v17 = *(void *)(v15 - 8);
  __chkstk_darwin(v16);
  long long v19 = &v22[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *))(v17 + 16))(v19);
  uint64_t v20 = _bridgeAnythingToObjectiveC<A>(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v19, v15);
  sub_100014524((uint64_t)v24);
LABEL_6:
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setValue:v20 forProperty:v21];

  swift_unknownObjectRelease();
}

void sub_100245EC4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a2;
  if (a2)
  {
    v9[3] = &type metadata for String;
    uint64_t v9[4] = &protocol witness table for String;
    v9[5] = &protocol witness table for String;
    v9[0] = a1;
    v9[1] = a2;
    type metadata accessor for JSONEncoder();
    swift_allocObject();
    id v6 = a4;
    swift_bridgeObjectRetain();
    JSONEncoder.init()();
    SQLiteEncodeValue(_:using:)(v9, v10);
    swift_release();
    sub_100014524((uint64_t)v9);
    sub_10018AC60(v10, v10[3]);
    uint64_t v5 = _bridgeAnythingToObjectiveC<A>(_:)();
    sub_100014524((uint64_t)v10);
  }
  else
  {
    id v7 = a4;
  }
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a4 setValue:v5 forProperty:v8];

  swift_unknownObjectRelease();
}

void sub_100246144(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a1;
  if (a1)
  {
    v8[3] = sub_1000172F8(&qword_10065D078);
    v8[4] = sub_10024AB28(&qword_10065D080, &qword_10065D088);
    _OWORD v8[5] = sub_10024AB28(&qword_10065D090, &qword_10065D098);
    v8[0] = v4;
    type metadata accessor for JSONEncoder();
    swift_allocObject();
    id v5 = a3;
    swift_bridgeObjectRetain();
    JSONEncoder.init()();
    SQLiteEncodeValue(_:using:)(v8, v9);
    swift_release();
    sub_100014524((uint64_t)v8);
    sub_10018AC60(v9, v9[3]);
    uint64_t v4 = _bridgeAnythingToObjectiveC<A>(_:)();
    sub_100014524((uint64_t)v9);
  }
  else
  {
    id v6 = a3;
  }
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setValue:v4 forProperty:v7];

  swift_unknownObjectRelease();
}

void sub_10024639C(uint64_t a1, char a2, void *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1000172F8(&qword_10065C9B0);
  __chkstk_darwin(v10 - 8);
  id v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100017238(a1, (uint64_t)v12, &qword_10065C9B0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    id v13 = a3;
LABEL_5:
    uint64_t v21 = 0;
    goto LABEL_6;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32))(v9, v12, v6);
  uint64_t v24[3] = v6;
  v24[4] = sub_100013A2C((unint64_t *)&unk_10065C920, (void (*)(uint64_t))&type metadata accessor for UUID);
  v24[5] = sub_100013A2C(&qword_10065CF80, (void (*)(uint64_t))&type metadata accessor for UUID);
  id v14 = sub_10019CE94(v24);
  (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v7 + 16))(v14, v9, v6);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  id v15 = a3;
  JSONEncoder.init()();
  SQLiteEncodeValue(_:using:)(v24, v25);
  swift_release();
  sub_100014524((uint64_t)v24);
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v16 = v26;
  if (!v26) {
    goto LABEL_5;
  }
  uint64_t v17 = sub_10018AC60(v25, v26);
  uint64_t v18 = *(void *)(v16 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = &v23[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *))(v18 + 16))(v20);
  uint64_t v21 = _bridgeAnythingToObjectiveC<A>(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v20, v16);
  sub_100014524((uint64_t)v25);
LABEL_6:
  sub_1001A0578(a2);
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setValue:v21 forProperty:v22];

  swift_unknownObjectRelease();
}

void sub_10024673C(uint64_t a1, char a2, void *a3)
{
  sub_100017238(a1, (uint64_t)v17, &qword_1006666D0);
  if (!(void)v18)
  {
    id v12 = a3;
    goto LABEL_5;
  }
  v16[0] = v17[0];
  v16[1] = v17[1];
  v16[2] = v18;
  v16[3] = v19;
  _OWORD v15[3] = &type metadata for BlockVerifierState;
  v15[4] = sub_10024A790();
  v15[5] = sub_10024A7E4();
  v15[0] = swift_allocObject();
  sub_10024A870((uint64_t)v16, v15[0] + 16);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  id v5 = a3;
  JSONEncoder.init()();
  SQLiteEncodeValue(_:using:)(v15, v20);
  swift_release();
  sub_100014524((uint64_t)v15);
  sub_10024A8CC((uint64_t)v16);
  uint64_t v6 = v21;
  if (!v21)
  {
LABEL_5:
    uint64_t v11 = 0;
    goto LABEL_6;
  }
  uint64_t v7 = sub_10018AC60(v20, v21);
  uint64_t v8 = *(void *)(v6 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v10);
  uint64_t v11 = _bridgeAnythingToObjectiveC<A>(_:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
  sub_100014524((uint64_t)v20);
LABEL_6:
  sub_1004B3BC0(a2);
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setValue:v11 forProperty:v13];

  swift_unknownObjectRelease();
}

uint64_t sub_100246990(uint64_t a1, void *a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    id v5 = a2;
    sub_100455C1C(0, v3, 0);
    uint64_t v6 = (unsigned __int8 *)(a1 + 32);
    unint64_t v7 = (unint64_t)"declaration_key";
    do
    {
      int v8 = *v6++;
      unint64_t v9 = 0xED000064695F6D65;
      unint64_t v10 = 0x74695F656C707061;
      switch(v8)
      {
        case 1:
          unint64_t v9 = 0xEA00000000007365;
          unint64_t v10 = 0x7475626972747461;
          break;
        case 2:
          unint64_t v9 = 0xEF617461645F7070;
          unint64_t v10 = 0x615F70756B636162;
          break;
        case 3:
          unint64_t v9 = 0xE900000000000064;
          unint64_t v10 = 0x695F656C646E7562;
          break;
        case 4:
          unint64_t v9 = 0xEE0064695F6E6F69;
          goto LABEL_9;
        case 5:
          unint64_t v9 = 0xEF79656B5F6E6F69;
LABEL_9:
          unint64_t v10 = 0x746172616C636564;
          break;
        case 6:
          unint64_t v9 = 0xEE00676E696D6974;
          unint64_t v10 = 0x5F6C6C6174736E69;
          break;
        case 7:
          unint64_t v10 = 0xD000000000000019;
          unint64_t v9 = v7 | 0x8000000000000000;
          break;
        case 8:
          unint64_t v9 = 0xE700000000000000;
          unint64_t v10 = 0x65736E6563696CLL;
          break;
        case 9:
          unint64_t v9 = 0x80000001005B8120;
          unint64_t v10 = 0xD000000000000010;
          break;
        case 10:
          unint64_t v9 = 0xEC0000006C72755FLL;
          unint64_t v10 = 0x74736566696E616DLL;
          break;
        case 11:
          unint64_t v9 = 0xE400000000000000;
          unint64_t v10 = 1701667182;
          break;
        case 12:
          unint64_t v9 = 0xE700000000000000;
          unint64_t v10 = 0x616E6F73726570;
          break;
        case 13:
          unint64_t v9 = 0xE800000000000000;
          unint64_t v10 = 0x6D726F6674616C70;
          break;
        case 14:
          unint64_t v9 = 0xEF646F6874656D5FLL;
          unint64_t v10 = 0x6573616863727570;
          break;
        case 15:
          unint64_t v10 = 0xD000000000000016;
          unint64_t v9 = 0x80000001005B8150;
          break;
        case 16:
          unint64_t v9 = 0xEB00000000656D61;
          unint64_t v10 = 0x6E5F726F646E6576;
          break;
        default:
          break;
      }
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1)
      {
        uint64_t v20 = (const char *)v7;
        sub_100455C1C(v11 > 1, v12 + 1, 1);
        unint64_t v7 = (unint64_t)v20;
      }
      _swiftEmptyArrayStorage[2] = v12 + 1;
      NSString v13 = &_swiftEmptyArrayStorage[2 * v12];
      void v13[4] = v10;
      v13[5] = v9;
      --v3;
    }
    while (v3);
  }
  else
  {
    id v14 = a2;
  }
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v16 = [a2 getValuesForProperties:isa];

  uint64_t v17 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v18 = sub_10023F028(v17);
  swift_bridgeObjectRelease();
  sub_1000172F8(&qword_10065CEA0);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = v18;
  return result;
}

uint64_t sub_100246D64(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    id v5 = a2;
    sub_100455C1C(0, v3, 0);
    uint64_t v6 = (unsigned __int8 *)(a1 + 32);
    do
    {
      int v8 = *v6++;
      int v7 = v8;
      BOOL v9 = v8 == 1;
      if (v8 == 1) {
        uint64_t v10 = 0x696669746E656469;
      }
      else {
        uint64_t v10 = 0x6E6F6973726576;
      }
      if (v9) {
        unint64_t v11 = 0xEA00000000007265;
      }
      else {
        unint64_t v11 = 0xE700000000000000;
      }
      if (v7) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = 1701869940;
      }
      if (v7) {
        unint64_t v13 = v11;
      }
      else {
        unint64_t v13 = 0xE400000000000000;
      }
      unint64_t v15 = _swiftEmptyArrayStorage[2];
      unint64_t v14 = _swiftEmptyArrayStorage[3];
      if (v15 >= v14 >> 1) {
        sub_100455C1C(v14 > 1, v15 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v15 + 1;
      id v16 = (char *)&_swiftEmptyArrayStorage[2 * v15];
      *((void *)v16 + 4) = v12;
      *((void *)v16 + 5) = v13;
      --v3;
    }
    while (v3);
    uint64_t v2 = a2;
  }
  else
  {
    id v17 = a2;
  }
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v19 = [v2 getValuesForProperties:isa];

  uint64_t v20 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v21 = sub_10023F028(v20);
  swift_bridgeObjectRelease();
  sub_1000172F8(&qword_10065CEA0);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = v21;
  return result;
}

uint64_t sub_100246F50(uint64_t a1, void *a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    id v5 = a2;
    sub_100455C1C(0, v3, 0);
    uint64_t v6 = (unsigned __int8 *)(a1 + 32);
    do
    {
      int v7 = *v6++;
      unint64_t v8 = 0xEA00000000006469;
      unint64_t v9 = 0x5F746E756F636361;
      switch(v7)
      {
        case 1:
          unint64_t v8 = 0xED00006C72755F65;
          unint64_t v9 = 0x726168735F707061;
          break;
        case 2:
          unint64_t v8 = 0xE900000000000064;
          unint64_t v9 = 0x695F656C646E7562;
          break;
        case 3:
          unint64_t v8 = 0xEE006E6F69737265;
          unint64_t v9 = 0x765F656C646E7562;
          break;
        case 4:
          unint64_t v8 = 0xE700000000000000;
          unint64_t v9 = 0x6C72755F706461;
          break;
        case 5:
          unint64_t v9 = 0xD00000000000001ALL;
          unint64_t v8 = 0x80000001005B73A0;
          break;
        case 6:
          unint64_t v8 = 0x80000001005B84F0;
          unint64_t v9 = 0xD000000000000014;
          break;
        case 7:
          unint64_t v8 = 0xE700000000000000;
          unint64_t v9 = 0x64695F6D657469;
          break;
        case 8:
          unint64_t v9 = 0x5F6E6F6973726576;
          break;
        default:
          break;
      }
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      unint64_t v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1) {
        sub_100455C1C(v10 > 1, v11 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v11 + 1;
      uint64_t v12 = &_swiftEmptyArrayStorage[2 * v11];
      uint64_t v12[4] = v9;
      v12[5] = v8;
      --v3;
    }
    while (v3);
  }
  else
  {
    id v13 = a2;
  }
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v15 = [a2 getValuesForProperties:isa];

  uint64_t v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v17 = sub_10023F028(v16);
  swift_bridgeObjectRelease();
  sub_1000172F8(&qword_10065CEA0);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = v17;
  return result;
}

uint64_t sub_100247214(uint64_t a1, void *a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    id v5 = a2;
    sub_100455C1C(0, v3, 0);
    uint64_t v6 = (unsigned __int8 *)(a1 + 32);
    do
    {
      int v7 = *v6++;
      unint64_t v8 = 0xEE0064695F6E6F69;
      uint64_t v9 = 0x746172616C636564;
      switch(v7)
      {
        case 1:
          unint64_t v8 = 0xEF79656B5F6E6F69;
          break;
        case 2:
          unint64_t v8 = 0xE500000000000000;
          uint64_t v9 = 0x6574617473;
          break;
        case 3:
          unint64_t v8 = 0xEC00000065746174;
          uint64_t v9 = 0x735F657461647075;
          break;
        case 4:
          unint64_t v8 = 0xE700000000000000;
          uint64_t v9 = 0x736E6F73616572;
          break;
        default:
          break;
      }
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      unint64_t v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1) {
        sub_100455C1C(v10 > 1, v11 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v11 + 1;
      uint64_t v12 = &_swiftEmptyArrayStorage[2 * v11];
      uint64_t v12[4] = v9;
      v12[5] = v8;
      --v3;
    }
    while (v3);
  }
  else
  {
    id v13 = a2;
  }
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v15 = [a2 getValuesForProperties:isa];

  uint64_t v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v17 = sub_10023F028(v16);
  swift_bridgeObjectRelease();
  sub_1000172F8(&qword_10065CEA0);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = v17;
  return result;
}

uint64_t sub_10024743C(uint64_t a1, void *a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    id v5 = a2;
    sub_100455C1C(0, v3, 0);
    uint64_t v6 = (unsigned __int8 *)(a1 + 32);
    do
    {
      int v7 = *v6++;
      unint64_t v8 = 0xEC00000074657366;
      unint64_t v9 = 0x666F5F7365747962;
      switch(v7)
      {
        case 1:
          unint64_t v8 = 0xED00007473656769;
          unint64_t v9 = 0x645F726568706963;
          break;
        case 2:
          unint64_t v8 = 0xEF657A69735F6465;
          unint64_t v9 = 0x73736572706D6F63;
          break;
        case 3:
          unint64_t v8 = 0xEF64695F6573696DLL;
          unint64_t v9 = 0x6F72705F61746164;
          break;
        case 4:
          unint64_t v8 = 0xE600000000000000;
          unint64_t v9 = 0x747365676964;
          break;
        case 5:
          unint64_t v8 = 0xED00006E6F697461;
          unint64_t v9 = 0x636F6C5F6B736964;
          break;
        case 6:
          unint64_t v8 = 0xEA00000000006E6FLL;
          unint64_t v9 = 0x6974707972636E65;
          break;
        case 7:
          unint64_t v9 = 0x6B636F6C625F7369;
          unint64_t v8 = 0xEA00000000006465;
          break;
        case 8:
          unint64_t v9 = 0xD000000000000012;
          unint64_t v8 = 0x80000001005B8380;
          break;
        case 9:
          unint64_t v8 = 0xE900000000000064;
          unint64_t v9 = 0x695F746E65726170;
          break;
        case 10:
          unint64_t v8 = 0xED0000746E756F63;
          unint64_t v9 = 0x5F74736575716572;
          break;
        case 11:
          unint64_t v8 = 0xEE0065746174735FLL;
          unint64_t v9 = 0x7265696669726576;
          break;
        case 12:
          unint64_t v8 = 0xE400000000000000;
          unint64_t v9 = 1701869940;
          break;
        case 13:
          unint64_t v8 = 0x80000001005B83C0;
          unint64_t v9 = 0xD000000000000011;
          break;
        case 14:
          unint64_t v8 = 0xE300000000000000;
          unint64_t v9 = 7107189;
          break;
        case 15:
          unint64_t v8 = 0xE700000000000000;
          unint64_t v9 = 0x746E6169726176;
          break;
        default:
          break;
      }
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      unint64_t v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1) {
        sub_100455C1C(v10 > 1, v11 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v11 + 1;
      uint64_t v12 = &_swiftEmptyArrayStorage[2 * v11];
      uint64_t v12[4] = v9;
      v12[5] = v8;
      --v3;
    }
    while (v3);
  }
  else
  {
    id v13 = a2;
  }
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v15 = [a2 getValuesForProperties:isa];

  uint64_t v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v17 = sub_10023F028(v16);
  swift_bridgeObjectRelease();
  sub_1000172F8(&qword_10065CEA0);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = v17;
  return result;
}

uint64_t sub_1002477FC(uint64_t a1, void *a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    id v5 = a2;
    sub_100455C1C(0, v3, 0);
    uint64_t v6 = (char *)(a1 + 32);
    do
    {
      char v7 = *v6++;
      uint64_t v8 = sub_1001A0578(v7);
      uint64_t v10 = v9;
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1) {
        sub_100455C1C(v11 > 1, v12 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v12 + 1;
      id v13 = &_swiftEmptyArrayStorage[2 * v12];
      void v13[4] = v8;
      v13[5] = v10;
      --v3;
    }
    while (v3);
  }
  else
  {
    id v14 = a2;
  }
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v16 = [a2 getValuesForProperties:isa];

  uint64_t v17 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v18 = sub_10023F028(v17);
  swift_bridgeObjectRelease();
  sub_1000172F8(&qword_10065CEA0);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = v18;
  return result;
}

uint64_t sub_100247980(void *a1, uint64_t a2)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v14);
  if (swift_dynamicCast() && v13) {
    return v12;
  }
  v14[0] = a2;
  sub_1000172F8(&qword_10065BC68);
  uint64_t v5 = String.init<A>(describing:)();
  uint64_t v7 = v6;
  sub_10018AC60(a1, a1[3]);
  v14[0] = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
  uint64_t v8 = String.init<A>(describing:)();
  uint64_t v10 = v9;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v11 = v5;
  *(void *)(v11 + 8) = v7;
  *(void *)(v11 + 16) = v8;
  *(void *)(v11 + 24) = v10;
  *(unsigned char *)(v11 + 32) = 0;
  return swift_willThrow();
}

uint64_t sub_100247A9C(void *a1, uint64_t a2)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v14);
  if (swift_dynamicCast() && v13 != 2) {
    return v12;
  }
  v14[0] = a2;
  sub_1000172F8(&qword_10065D040);
  uint64_t v4 = String.init<A>(describing:)();
  uint64_t v6 = v5;
  sub_10018AC60(a1, a1[3]);
  v14[0] = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
  uint64_t v7 = String.init<A>(describing:)();
  uint64_t v9 = v8;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v10 = v4;
  *(void *)(v10 + 8) = v6;
  *(void *)(v10 + 16) = v7;
  *(void *)(v10 + 24) = v9;
  *(unsigned char *)(v10 + 32) = 0;
  return swift_willThrow();
}

uint64_t sub_100247BBC(void *a1, uint64_t a2)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v13);
  if (swift_dynamicCast() && v14 != 2)
  {
    char v11 = v14 & 1;
  }
  else
  {
    v13[0] = a2;
    sub_1000172F8(&qword_10065CEC0);
    uint64_t v4 = String.init<A>(describing:)();
    uint64_t v6 = v5;
    sub_10018AC60(a1, a1[3]);
    v13[0] = swift_getDynamicType();
    sub_1000172F8(&qword_10065BC70);
    uint64_t v7 = String.init<A>(describing:)();
    uint64_t v9 = v8;
    sub_1001C3A08();
    swift_allocError();
    *(void *)uint64_t v10 = v4;
    *(void *)(v10 + 8) = v6;
    *(void *)(v10 + 16) = v7;
    *(void *)(v10 + 24) = v9;
    *(unsigned char *)(v10 + 32) = 0;
    swift_willThrow();
  }
  return v11 & 1;
}

uint64_t sub_100247CE0(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v15);
  if (swift_dynamicCast() && v16 != 2) {
    return v16 & 1;
  }
  v15[0] = a2;
  sub_1000172F8(a4);
  uint64_t v7 = String.init<A>(describing:)();
  uint64_t v9 = v8;
  sub_10018AC60(a1, a1[3]);
  v15[0] = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
  uint64_t v10 = String.init<A>(describing:)();
  uint64_t v12 = v11;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v13 = v7;
  *(void *)(v13 + 8) = v9;
  *(void *)(v13 + 16) = v10;
  *(void *)(v13 + 24) = v12;
  *(unsigned char *)(v13 + 32) = 0;
  swift_willThrow();
  return 0;
}

uint64_t sub_100247E04(void *a1, uint64_t a2)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v13);
  if (swift_dynamicCast()) {
    return v12;
  }
  v13[0] = a2;
  sub_1000172F8(&qword_10065CF18);
  uint64_t v5 = String.init<A>(describing:)();
  uint64_t v7 = v6;
  sub_10018AC60(a1, a1[3]);
  v13[0] = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
  uint64_t v8 = String.init<A>(describing:)();
  uint64_t v10 = v9;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v11 = v5;
  *(void *)(v11 + 8) = v7;
  *(void *)(v11 + 16) = v8;
  *(void *)(v11 + 24) = v10;
  *(unsigned char *)(v11 + 32) = 0;
  return swift_willThrow();
}

uint64_t sub_100247F18(void *a1, uint64_t a2)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v12);
  if (!swift_dynamicCast() || (uint64_t result = v13, v13 == 8))
  {
    v12[0] = a2;
    sub_1000172F8(&qword_10065CFA8);
    uint64_t v5 = String.init<A>(describing:)();
    uint64_t v7 = v6;
    sub_10018AC60(a1, a1[3]);
    v12[0] = swift_getDynamicType();
    sub_1000172F8(&qword_10065BC70);
    uint64_t v8 = String.init<A>(describing:)();
    uint64_t v10 = v9;
    sub_1001C3A08();
    swift_allocError();
    *(void *)uint64_t v11 = v5;
    *(void *)(v11 + 8) = v7;
    *(void *)(v11 + 16) = v8;
    *(void *)(v11 + 24) = v10;
    *(unsigned char *)(v11 + 32) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_100248030(void *a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v16);
  sub_1000172F8(a3);
  if (!swift_dynamicCast() || (uint64_t result = v17) == 0)
  {
    v16[0] = a2;
    sub_1000172F8(a4);
    uint64_t v9 = String.init<A>(describing:)();
    uint64_t v11 = v10;
    sub_10018AC60(a1, a1[3]);
    v16[0] = swift_getDynamicType();
    sub_1000172F8(&qword_10065BC70);
    uint64_t v12 = String.init<A>(describing:)();
    uint64_t v14 = v13;
    sub_1001C3A08();
    swift_allocError();
    *(void *)uint64_t v15 = v9;
    *(void *)(v15 + 8) = v11;
    *(void *)(v15 + 16) = v12;
    *(void *)(v15 + 24) = v14;
    *(unsigned char *)(v15 + 32) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_10024814C(void *a1)
{
  unint64_t v2 = sub_10024A4F8();
  sub_1000144C8((uint64_t)a1, (uint64_t)v11);
  if (swift_dynamicCast()) {
    return v11[5];
  }
  v11[0] = v2;
  sub_1000172F8(&qword_10065CED8);
  uint64_t v4 = String.init<A>(describing:)();
  uint64_t v6 = v5;
  sub_10018AC60(a1, a1[3]);
  v11[0] = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
  uint64_t v7 = String.init<A>(describing:)();
  uint64_t v9 = v8;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v10 = v4;
  *(void *)(v10 + 8) = v6;
  *(void *)(v10 + 16) = v7;
  *(void *)(v10 + 24) = v9;
  *(unsigned char *)(v10 + 32) = 0;
  return swift_willThrow();
}

uint64_t sub_100248268(void *a1, uint64_t a2)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v13);
  if (swift_dynamicCast()) {
    return v12;
  }
  v13[0] = a2;
  sub_1000172F8(&qword_10065CF28);
  uint64_t v5 = String.init<A>(describing:)();
  uint64_t v7 = v6;
  sub_10018AC60(a1, a1[3]);
  v13[0] = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
  uint64_t v8 = String.init<A>(describing:)();
  uint64_t v10 = v9;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v11 = v5;
  *(void *)(v11 + 8) = v7;
  *(void *)(v11 + 16) = v8;
  *(void *)(v11 + 24) = v10;
  *(unsigned char *)(v11 + 32) = 0;
  return swift_willThrow();
}

uint64_t sub_100248384(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v15);
  if (swift_dynamicCast()) {
    return v16;
  }
  v15[0] = a2;
  sub_1000172F8(a4);
  uint64_t v8 = String.init<A>(describing:)();
  uint64_t v10 = v9;
  sub_10018AC60(a1, a1[3]);
  v15[0] = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
  uint64_t v11 = String.init<A>(describing:)();
  uint64_t v13 = v12;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v14 = v8;
  *(void *)(v14 + 8) = v10;
  *(void *)(v14 + 16) = v11;
  *(void *)(v14 + 24) = v13;
  *(unsigned char *)(v14 + 32) = 0;
  return swift_willThrow();
}

uint64_t sub_100248498(void *a1, uint64_t a2)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v12);
  sub_1000172F8(&qword_10065D078);
  if (swift_dynamicCast()) {
    return v12[5];
  }
  v12[0] = a2;
  sub_1000172F8(&qword_10065D0A0);
  uint64_t v5 = String.init<A>(describing:)();
  uint64_t v7 = v6;
  sub_10018AC60(a1, a1[3]);
  v12[0] = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
  uint64_t v8 = String.init<A>(describing:)();
  uint64_t v10 = v9;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v11 = v5;
  *(void *)(v11 + 8) = v7;
  *(void *)(v11 + 16) = v8;
  *(void *)(v11 + 24) = v10;
  *(unsigned char *)(v11 + 32) = 0;
  return swift_willThrow();
}

uint64_t sub_1002485B4(void *a1, uint64_t a2)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v12);
  if (swift_dynamicCast()) {
    return v12[5];
  }
  v12[0] = a2;
  sub_1000172F8(&qword_10065CF70);
  uint64_t v5 = String.init<A>(describing:)();
  uint64_t v7 = v6;
  sub_10018AC60(a1, a1[3]);
  v12[0] = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
  uint64_t v8 = String.init<A>(describing:)();
  uint64_t v10 = v9;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v11 = v5;
  *(void *)(v11 + 8) = v7;
  *(void *)(v11 + 16) = v8;
  *(void *)(v11 + 24) = v10;
  *(unsigned char *)(v11 + 32) = 0;
  return swift_willThrow();
}

uint64_t sub_1002486C4(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v15);
  if (swift_dynamicCast()) {
    return v15[5];
  }
  v15[0] = a2;
  sub_1000172F8(a4);
  uint64_t v8 = String.init<A>(describing:)();
  uint64_t v10 = v9;
  sub_10018AC60(a1, a1[3]);
  v15[0] = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
  uint64_t v11 = String.init<A>(describing:)();
  uint64_t v13 = v12;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v14 = v8;
  *(void *)(v14 + 8) = v10;
  *(void *)(v14 + 16) = v11;
  *(void *)(v14 + 24) = v13;
  *(unsigned char *)(v14 + 32) = 0;
  return swift_willThrow();
}

uint64_t sub_1002487D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v17);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    *(unsigned char *)a2 = v12 & 1;
    *(_OWORD *)(a2 + 8) = v13;
    *(void *)(a2 + 24) = v14;
    *(unsigned char *)(a2 + 32) = v15 & 1;
    *(void *)(a2 + 40) = v16;
  }
  else
  {
    sub_1000172F8(&qword_10065D0C8);
    uint64_t v5 = String.init<A>(describing:)();
    uint64_t v7 = v6;
    sub_10018AC60(a1, a1[3]);
    swift_getDynamicType();
    sub_1000172F8(&qword_10065BC70);
    uint64_t v8 = String.init<A>(describing:)();
    uint64_t v10 = v9;
    sub_1001C3A08();
    swift_allocError();
    *(void *)uint64_t v11 = v5;
    *(void *)(v11 + 8) = v7;
    *(void *)(v11 + 16) = v8;
    *(void *)(v11 + 24) = v10;
    *(unsigned char *)(v11 + 32) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_10024891C(void *a1, uint64_t a2)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v12);
  if (swift_dynamicCast()) {
    return v13 & 0x1010101;
  }
  v12[0] = a2;
  sub_1000172F8(&qword_10065D068);
  uint64_t v5 = String.init<A>(describing:)();
  uint64_t v7 = v6;
  sub_10018AC60(a1, a1[3]);
  v12[0] = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
  uint64_t v8 = String.init<A>(describing:)();
  uint64_t v10 = v9;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v11 = v5;
  *(void *)(v11 + 8) = v7;
  *(void *)(v11 + 16) = v8;
  *(void *)(v11 + 24) = v10;
  *(unsigned char *)(v11 + 32) = 0;
  return swift_willThrow();
}

uint64_t sub_100248A34(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v15);
  if (swift_dynamicCast()) {
    return v16 & 1;
  }
  v15[0] = a2;
  sub_1000172F8(a4);
  uint64_t v8 = String.init<A>(describing:)();
  uint64_t v10 = v9;
  sub_10018AC60(a1, a1[3]);
  v15[0] = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
  uint64_t v11 = String.init<A>(describing:)();
  uint64_t v13 = v12;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v14 = v8;
  *(void *)(v14 + 8) = v10;
  *(void *)(v14 + 16) = v11;
  *(void *)(v14 + 24) = v13;
  *(unsigned char *)(v14 + 32) = 0;
  return swift_willThrow();
}

uint64_t sub_100248B4C(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v16);
  if (swift_dynamicCast()) {
    return v15;
  }
  v16[0] = a2;
  sub_1000172F8(a4);
  uint64_t v8 = String.init<A>(describing:)();
  uint64_t v10 = v9;
  sub_10018AC60(a1, a1[3]);
  v16[0] = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
  uint64_t v11 = String.init<A>(describing:)();
  uint64_t v13 = v12;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v14 = v8;
  *(void *)(v14 + 8) = v10;
  *(void *)(v14 + 16) = v11;
  *(void *)(v14 + 24) = v13;
  *(unsigned char *)(v14 + 32) = 0;
  return swift_willThrow();
}

void sub_100248C64(uint64_t a1, uint64_t a2, unsigned char *a3, void **a4, void (*a5)(void **__return_ptr, uint64_t, uint64_t), uint64_t a6, uint64_t a7)
{
  a5(&v10, a1, a7);
  uint64_t v9 = *a4;
  *a4 = v10;

  *a3 = 1;
}

void *sub_100248CC4(uint64_t a1, uint64_t a2, unsigned char *a3, unsigned char *a4, void *(*a5)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t result = a5(&v10, a1, a7);
  *a4 = v10;
  *a3 = 1;
  return result;
}

uint64_t sub_100248D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_100248D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a1 + 32))(a2, a3, a4);
}

id sub_100248D78(__int16 a1, uint64_t a2, uint64_t a3)
{
  sub_100416498(a1);
  v11[3] = &type metadata for String;
  v11[4] = &protocol witness table for String;
  v11[5] = &protocol witness table for String;
  v11[0] = a2;
  v11[1] = a3;
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  swift_bridgeObjectRetain();
  JSONEncoder.init()();
  SQLiteEncodeValue(_:using:)(v11, v12);
  swift_release();
  if ((a1 & 0x100) != 0) {
    uint64_t v6 = 2;
  }
  else {
    uint64_t v6 = 1;
  }
  sub_100014524((uint64_t)v11);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10018AC60(v12, v12[3]);
  uint64_t v8 = _bridgeAnythingToObjectiveC<A>(_:)();
  id v9 = [self predicateWithProperty:v7 value:v8 comparisonType:v6];
  swift_unknownObjectRelease();

  sub_100014524((uint64_t)v12);
  return v9;
}

id sub_100248EEC(__int16 a1, uint64_t a2, uint64_t a3)
{
  v9[3] = &type metadata for String;
  uint64_t v9[4] = &protocol witness table for String;
  v9[5] = &protocol witness table for String;
  v9[0] = a2;
  v9[1] = a3;
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  swift_bridgeObjectRetain();
  JSONEncoder.init()();
  SQLiteEncodeValue(_:using:)(v9, v10);
  swift_release();
  if ((a1 & 0x100) != 0) {
    uint64_t v4 = 2;
  }
  else {
    uint64_t v4 = 1;
  }
  sub_100014524((uint64_t)v9);
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10018AC60(v10, v10[3]);
  uint64_t v6 = _bridgeAnythingToObjectiveC<A>(_:)();
  id v7 = [self predicateWithProperty:v5 value:v6 comparisonType:v4];
  swift_unknownObjectRelease();

  sub_100014524((uint64_t)v10);
  return v7;
}

id sub_100249104(char a1, uint64_t a2, uint64_t a3)
{
  v9[3] = &type metadata for String;
  uint64_t v9[4] = &protocol witness table for String;
  v9[5] = &protocol witness table for String;
  v9[0] = a2;
  v9[1] = a3;
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  swift_bridgeObjectRetain();
  JSONEncoder.init()();
  SQLiteEncodeValue(_:using:)(v9, v10);
  swift_release();
  if (a1) {
    uint64_t v4 = 2;
  }
  else {
    uint64_t v4 = 1;
  }
  sub_100014524((uint64_t)v9);
  NSString v5 = String._bridgeToObjectiveC()();
  sub_10018AC60(v10, v10[3]);
  uint64_t v6 = _bridgeAnythingToObjectiveC<A>(_:)();
  id v7 = [self predicateWithProperty:v5 value:v6 comparisonType:v4];
  swift_unknownObjectRelease();

  sub_100014524((uint64_t)v10);
  return v7;
}

uint64_t sub_100249268@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_1000172F8(&qword_10065CEA0);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = v3;
  *a2 = v4;
  return swift_bridgeObjectRetain();
}

void sub_1002492C8(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  type metadata accessor for DDMDeclarationStatusEntity.Entity();
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v7 = a2;
  id v8 = [v6 initWithPersistentID:a1 onConnection:v7];
  LODWORD(a1) = [v8 existsInDatabase];

  if (!a1)
  {

    id v8 = 0;
  }
  *a3 = v8;
}

uint64_t sub_100249364(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v22 = 0;
  type metadata accessor for DDMDeclarationStatusEntity.Entity();
  id v12 = [objc_allocWithZone((Class)ASUSQLiteQueryDescriptor) initWithEntityClass:swift_getObjCClassFromMetadata() memoryEntityClass:0];
  id v13 = sub_100248EEC(a1 & 0x1FF, a2, a3);
  [v12 setPredicate:v13];

  id v14 = [objc_allocWithZone((Class)ASUSQLiteQuery) initOnConnection:a6 descriptor:v12];
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = &v22;
  _OWORD v15[3] = a4;
  uint64_t v15[4] = a5;
  v15[5] = a6;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_10024A3B0;
  *(void *)(v16 + 24) = v15;
  aBlock[4] = sub_10024A420;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100248D44;
  aBlock[3] = &unk_10063C818;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = a6;
  swift_retain();
  swift_release();
  [v14 enumeratePersistentIDsUsingBlock:v17];

  _Block_release(v17);
  LOBYTE(a6) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a6)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = v22;
    swift_release();
    return v20;
  }
  return result;
}

id sub_100249580(void *a1)
{
  uint64_t v2 = 17;
  sub_100455D20(0, 17, 0);
  unint64_t v3 = _swiftEmptyArrayStorage[2];
  uint64_t v4 = &byte_100636CE0;
  do
  {
    char v6 = *v4++;
    char v5 = v6;
    unint64_t v7 = _swiftEmptyArrayStorage[3];
    if (v3 >= v7 >> 1) {
      sub_100455D20(v7 > 1, v3 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v3 + 1;
    *((unsigned char *)&_swiftEmptyArrayStorage[4] + v3++) = v5;
    --v2;
  }
  while (v2);
  sub_100246990((uint64_t)_swiftEmptyArrayStorage, a1);
  swift_bridgeObjectRelease();
  return [a1 persistentID];
}

id sub_10024967C(void *a1)
{
  sub_100455DF0(0, 3, 0);
  unint64_t v3 = _swiftEmptyArrayStorage[2];
  unint64_t v2 = _swiftEmptyArrayStorage[3];
  int64_t v4 = v2 >> 1;
  unint64_t v5 = v3 + 1;
  if (v2 >> 1 <= v3)
  {
    sub_100455DF0(v2 > 1, v3 + 1, 1);
    unint64_t v2 = _swiftEmptyArrayStorage[3];
    int64_t v4 = v2 >> 1;
  }
  _swiftEmptyArrayStorage[2] = v5;
  *((unsigned char *)&_swiftEmptyArrayStorage[4] + v3) = 0;
  unint64_t v6 = v3 + 2;
  if (v4 < (uint64_t)(v3 + 2))
  {
    sub_100455DF0(v2 > 1, v3 + 2, 1);
    unint64_t v2 = _swiftEmptyArrayStorage[3];
    int64_t v4 = v2 >> 1;
  }
  _swiftEmptyArrayStorage[2] = v6;
  *((unsigned char *)&_swiftEmptyArrayStorage[4] + v5) = 1;
  if (v4 < (uint64_t)(v3 + 3)) {
    sub_100455DF0(v2 > 1, v3 + 3, 1);
  }
  _swiftEmptyArrayStorage[2] = v3 + 3;
  *((unsigned char *)&_swiftEmptyArrayStorage[4] + v6) = 2;
  sub_100246D64((uint64_t)_swiftEmptyArrayStorage, a1);
  swift_release();
  return [a1 persistentID];
}

id sub_1002497CC(void *a1)
{
  uint64_t v2 = 9;
  sub_100455EC0(0, 9, 0);
  unint64_t v3 = _swiftEmptyArrayStorage[2];
  int64_t v4 = &byte_100636D18;
  do
  {
    char v6 = *v4++;
    char v5 = v6;
    unint64_t v7 = _swiftEmptyArrayStorage[3];
    if (v3 >= v7 >> 1) {
      sub_100455EC0(v7 > 1, v3 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v3 + 1;
    *((unsigned char *)&_swiftEmptyArrayStorage[4] + v3++) = v5;
    --v2;
  }
  while (v2);
  sub_100246F50((uint64_t)_swiftEmptyArrayStorage, a1);
  swift_bridgeObjectRelease();
  return [a1 persistentID];
}

id sub_1002498C8(void *a1)
{
  sub_100455F18(0, 5, 0);
  unint64_t v3 = _swiftEmptyArrayStorage[2];
  unint64_t v2 = _swiftEmptyArrayStorage[3];
  int64_t v4 = v2 >> 1;
  unint64_t v5 = v3 + 1;
  if (v2 >> 1 <= v3)
  {
    sub_100455F18(v2 > 1, v3 + 1, 1);
    unint64_t v2 = _swiftEmptyArrayStorage[3];
    int64_t v4 = v2 >> 1;
  }
  _swiftEmptyArrayStorage[2] = v5;
  *((unsigned char *)&_swiftEmptyArrayStorage[4] + v3) = 0;
  unint64_t v6 = v3 + 2;
  if (v4 < (uint64_t)(v3 + 2))
  {
    sub_100455F18(v2 > 1, v3 + 2, 1);
    unint64_t v2 = _swiftEmptyArrayStorage[3];
    int64_t v4 = v2 >> 1;
  }
  _swiftEmptyArrayStorage[2] = v6;
  *((unsigned char *)&_swiftEmptyArrayStorage[4] + v5) = 1;
  unint64_t v7 = v3 + 3;
  if (v4 < (uint64_t)(v3 + 3)) {
    sub_100455F18(v2 > 1, v3 + 3, 1);
  }
  _swiftEmptyArrayStorage[2] = v7;
  *((unsigned char *)&_swiftEmptyArrayStorage[4] + v6) = 2;
  unint64_t v8 = _swiftEmptyArrayStorage[3];
  int64_t v9 = v8 >> 1;
  unint64_t v10 = v3 + 4;
  if ((uint64_t)(v8 >> 1) < (uint64_t)(v3 + 4))
  {
    sub_100455F18(v8 > 1, v3 + 4, 1);
    unint64_t v8 = _swiftEmptyArrayStorage[3];
    int64_t v9 = v8 >> 1;
  }
  _swiftEmptyArrayStorage[2] = v10;
  *((unsigned char *)&_swiftEmptyArrayStorage[4] + v7) = 3;
  if (v9 < (uint64_t)(v3 + 5)) {
    sub_100455F18(v8 > 1, v3 + 5, 1);
  }
  _swiftEmptyArrayStorage[2] = v3 + 5;
  *((unsigned char *)&_swiftEmptyArrayStorage[4] + v10) = 4;
  sub_100247214((uint64_t)_swiftEmptyArrayStorage, a1);
  swift_release();
  return [a1 persistentID];
}

id sub_100249AB8(void *a1)
{
  uint64_t v2 = 16;
  id v12 = _swiftEmptyArrayStorage;
  sub_100455FA8(0, 16, 0);
  unint64_t v3 = _swiftEmptyArrayStorage;
  unint64_t v4 = _swiftEmptyArrayStorage[2];
  unint64_t v5 = &byte_100636D70;
  do
  {
    char v7 = *v5++;
    char v6 = v7;
    id v12 = v3;
    unint64_t v8 = v3[3];
    if (v4 >= v8 >> 1)
    {
      sub_100455FA8(v8 > 1, v4 + 1, 1);
      unint64_t v3 = v12;
    }
    v3[2] = v4 + 1;
    *((unsigned char *)v3 + v4++ + 32) = v6;
    --v2;
  }
  while (v2);
  uint64_t v9 = sub_10024743C((uint64_t)v3, a1);
  swift_bridgeObjectRelease();
  id v10 = [a1 persistentID];
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  sub_100249268((uint64_t *)(v9 + 16), (uint64_t *)&v12);
  os_unfair_lock_unlock((os_unfair_lock_t)(v9 + 24));
  swift_release();
  return v10;
}

id sub_100249BF4(void *a1)
{
  uint64_t v2 = 39;
  sub_100455FD0(0, 39, 0);
  unint64_t v3 = _swiftEmptyArrayStorage[2];
  unint64_t v4 = &byte_100636C98;
  do
  {
    char v6 = *v4++;
    char v5 = v6;
    unint64_t v7 = _swiftEmptyArrayStorage[3];
    if (v3 >= v7 >> 1) {
      sub_100455FD0(v7 > 1, v3 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v3 + 1;
    *((unsigned char *)&_swiftEmptyArrayStorage[4] + v3++) = v5;
    --v2;
  }
  while (v2);
  sub_1002477FC((uint64_t)_swiftEmptyArrayStorage, a1);
  swift_bridgeObjectRelease();
  return [a1 persistentID];
}

uint64_t sub_100249CF0(char a1)
{
  int v1 = a1 & 1;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.ddm.getter();
  char v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)unint64_t v8 = 136446210;
    LOBYTE(v15) = v1;
    uint64_t v9 = String.init<A>(describing:)();
    uint64_t v14 = v2;
    uint64_t v15 = sub_1000143F4(v9, v10, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Notifying subscriber in scope %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v14);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  if (v1) {
    uint64_t v11 = "com.apple.managedappdistribution.managed-app-changed.user";
  }
  else {
    uint64_t v11 = "com.apple.managedappdistribution.managed-app-changed.system";
  }
  return notify_post(v11);
}

uint64_t sub_100249F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DDMDeclarationStatusTemplate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100249F70(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DDMDeclarationStatusTemplate(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100249FCC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10025B0A8(a1, a2, a3);
}

uint64_t sub_100249FE8(uint64_t a1, void (*a2)(long long *__return_ptr, long long *, char *))
{
  void (*v38)(long long *__return_ptr, long long *, char *);

  uint64_t v38 = a2;
  uint64_t v22 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v23 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (v6) {
    goto LABEL_6;
  }
LABEL_7:
  if (__OFADD__(v8++, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v8 >= v23) {
    goto LABEL_33;
  }
  unint64_t v13 = *(void *)(v22 + 8 * v8);
  if (v13) {
    goto LABEL_19;
  }
  int64_t v14 = v8 + 1;
  if (v8 + 1 >= v23) {
    goto LABEL_33;
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13)
  {
LABEL_18:
    int64_t v8 = v14;
LABEL_19:
    unint64_t v6 = (v13 - 1) & v13;
    for (unint64_t i = __clz(__rbit64(v13)) + (v8 << 6); ; unint64_t i = v10 | (v8 << 6))
    {
      char v15 = *(unsigned char *)(*(void *)(a1 + 48) + i);
      sub_100017238(*(void *)(a1 + 56) + 48 * i, (uint64_t)v36 + 8, &qword_10065CE70);
      LOBYTE(v36[0]) = v15;
      v34[0] = v36[0];
      v34[1] = v36[1];
      uint64_t v34[2] = v36[2];
      uint64_t v35 = v37;
      *((void *)&v25 + 1) = &type metadata for DDMDeclarationStatusEntity.Property;
      *(void *)&long long v26 = sub_10024A31C();
      LOBYTE(v24) = v34[0];
      v38(&v29, &v24, (char *)v34 + 8);
      if (v2) {
        break;
      }
      sub_100014524((uint64_t)&v24);
      sub_10001729C((uint64_t)v34, &qword_10065CE80);
      if (*((void *)&v30 + 1))
      {
        long long v26 = v31;
        long long v27 = v32;
        uint64_t v28 = v33;
        long long v24 = v29;
        long long v25 = v30;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_10028F274(0, v9[2] + 1, 1, v9);
          uint64_t v9 = (void *)result;
        }
        unint64_t v17 = v9[2];
        unint64_t v16 = v9[3];
        if (v17 >= v16 >> 1)
        {
          uint64_t result = (uint64_t)sub_10028F274((void *)(v16 > 1), v17 + 1, 1, v9);
          uint64_t v9 = (void *)result;
        }
        _OWORD v9[2] = v17 + 1;
        id v18 = &v9[9 * v17];
        *((_OWORD *)v18 + 2) = v24;
        long long v19 = v25;
        long long v20 = v26;
        long long v21 = v27;
        v18[12] = v28;
        *((_OWORD *)v18 + 4) = v20;
        *((_OWORD *)v18 + 5) = v21;
        *((_OWORD *)v18 + 3) = v19;
        if (!v6) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t result = sub_10001729C((uint64_t)&v29, &qword_10065CE88);
        if (!v6) {
          goto LABEL_7;
        }
      }
LABEL_6:
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
    }
    sub_100014524((uint64_t)&v24);
    sub_10001729C((uint64_t)v34, &qword_10065CE80);
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  int64_t v14 = v8 + 2;
  if (v8 + 2 >= v23)
  {
LABEL_33:
    swift_release();
    return (uint64_t)v9;
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13) {
    goto LABEL_18;
  }
  int64_t v14 = v8 + 3;
  if (v8 + 3 >= v23) {
    goto LABEL_33;
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13) {
    goto LABEL_18;
  }
  int64_t v14 = v8 + 4;
  if (v8 + 4 >= v23) {
    goto LABEL_33;
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v23) {
      goto LABEL_33;
    }
    unint64_t v13 = *(void *)(v22 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_19;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

unint64_t sub_10024A31C()
{
  unint64_t result = qword_10065CE78;
  if (!qword_10065CE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065CE78);
  }
  return result;
}

uint64_t sub_10024A370()
{
  return swift_release();
}

uint64_t sub_10024A378()
{
  return _swift_deallocObject(v0, 48, 7);
}

void sub_10024A3B0(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v5 = *(void ***)(v3 + 16);
  (*(void (**)(void **__return_ptr, uint64_t, void))(v3 + 24))(&v7, a1, *(void *)(v3 + 40));
  unint64_t v6 = *v5;
  *uint64_t v5 = v7;

  *a3 = 1;
}

uint64_t sub_10024A410()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10024A420()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10024A448()
{
  return swift_release();
}

unint64_t sub_10024A450()
{
  unint64_t result = qword_10065CEB0;
  if (!qword_10065CEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065CEB0);
  }
  return result;
}

unint64_t sub_10024A4A4()
{
  unint64_t result = qword_10065CEC8;
  if (!qword_10065CEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065CEC8);
  }
  return result;
}

unint64_t sub_10024A4F8()
{
  unint64_t result = qword_100661DD0;
  if (!qword_100661DD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100661DD0);
  }
  return result;
}

unint64_t sub_10024A538()
{
  unint64_t result = qword_10065CEE0;
  if (!qword_10065CEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065CEE0);
  }
  return result;
}

unint64_t sub_10024A58C()
{
  unint64_t result = qword_10065CEF0;
  if (!qword_10065CEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065CEF0);
  }
  return result;
}

unint64_t sub_10024A5E0()
{
  unint64_t result = qword_10065CF00;
  if (!qword_10065CF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065CF00);
  }
  return result;
}

unint64_t sub_10024A634()
{
  unint64_t result = qword_10065CF10;
  if (!qword_10065CF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065CF10);
  }
  return result;
}

unint64_t sub_10024A688()
{
  unint64_t result = qword_10065CF20;
  if (!qword_10065CF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065CF20);
  }
  return result;
}

void sub_10024A6DC(id *a1)
{
  sub_10024035C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10024A6FC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10017B924(&qword_10065CE50);
    sub_100013A2C(a2, (void (*)(uint64_t))&type metadata accessor for ManagedAppStatus.Reason);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10024A790()
{
  unint64_t result = qword_10065CF88;
  if (!qword_10065CF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065CF88);
  }
  return result;
}

unint64_t sub_10024A7E4()
{
  unint64_t result = qword_10065CF90;
  if (!qword_10065CF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065CF90);
  }
  return result;
}

uint64_t sub_10024A838()
{
  sub_100014524(v0 + 24);

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10024A870(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10024A8CC(uint64_t a1)
{
  return a1;
}

unint64_t sub_10024A920()
{
  unint64_t result = qword_10065CFA0;
  if (!qword_10065CFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065CFA0);
  }
  return result;
}

unint64_t sub_10024A974()
{
  unint64_t result = qword_10065CFC8;
  if (!qword_10065CFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065CFC8);
  }
  return result;
}

unint64_t sub_10024A9C8()
{
  unint64_t result = qword_10065CFD0;
  if (!qword_10065CFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065CFD0);
  }
  return result;
}

uint64_t sub_10024AA1C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10017B924(&qword_10065D008);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10024AA80()
{
  unint64_t result = qword_10065D038;
  if (!qword_10065D038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D038);
  }
  return result;
}

unint64_t sub_10024AAD4()
{
  unint64_t result = qword_10065D060;
  if (!qword_10065D060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D060);
  }
  return result;
}

uint64_t sub_10024AB28(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10017B924(&qword_10065D078);
    sub_100013A2C(a2, (void (*)(uint64_t))&type metadata accessor for ApprovedDeveloper);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10024ABBC()
{
  unint64_t result = qword_10065D0A8;
  if (!qword_10065D0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D0A8);
  }
  return result;
}

unint64_t sub_10024AC10()
{
  unint64_t result = qword_10065D0C0;
  if (!qword_10065D0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D0C0);
  }
  return result;
}

unint64_t sub_10024AC64()
{
  unint64_t result = qword_10065D0D8;
  if (!qword_10065D0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D0D8);
  }
  return result;
}

unint64_t sub_10024ACB8()
{
  unint64_t result = qword_10065D0E0;
  if (!qword_10065D0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D0E0);
  }
  return result;
}

unint64_t sub_10024AD0C()
{
  unint64_t result = qword_10065D0F0;
  if (!qword_10065D0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D0F0);
  }
  return result;
}

unint64_t sub_10024AD60()
{
  unint64_t result = qword_10065D110;
  if (!qword_10065D110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D110);
  }
  return result;
}

void sub_10024ADB4(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v173 = a1;
  uint64_t v4 = (os_unfair_lock_s *)type metadata accessor for DispatchWorkItemFlags();
  uint64_t v157 = *(void *)&v4[-2]._os_unfair_lock_opaque;
  __chkstk_darwin(v4);
  unint64_t v6 = &v142[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v152 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v151 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  char v150 = &v142[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v155 = type metadata accessor for DispatchQoS();
  uint64_t v154 = *(void *)(v155 - 8);
  uint64_t v8 = __chkstk_darwin(v155);
  long long v153 = &v142[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __chkstk_darwin(v8);
  long long v148 = &v142[-v11];
  __chkstk_darwin(v10);
  long long v149 = &v142[-v12];
  uint64_t v165 = type metadata accessor for URLRequest();
  uint64_t v13 = *(void *)(v165 - 8);
  __chkstk_darwin(v165);
  v166 = &v142[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_1000172F8(&qword_10065C3C0);
  __chkstk_darwin(v15 - 8);
  v161 = &v142[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v171 = type metadata accessor for URL();
  uint64_t v170 = *(void *)(v171 - 8);
  uint64_t v17 = __chkstk_darwin(v171);
  long long v162 = &v142[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __chkstk_darwin(v17);
  long long v163 = &v142[-v20];
  __chkstk_darwin(v19);
  long long v167 = &v142[-v21];
  uint64_t v174 = type metadata accessor for Logger();
  uint64_t v187 = *(void *)(v174 - 8);
  uint64_t v22 = __chkstk_darwin(v174);
  char v160 = &v142[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = __chkstk_darwin(v22);
  long long v159 = &v142[-v25];
  uint64_t v26 = __chkstk_darwin(v24);
  char v172 = &v142[-v27];
  __chkstk_darwin(v26);
  long long v29 = &v142[-v28];
  long long v30 = *(os_unfair_lock_s **)&v1[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_state];
  uint64_t v31 = (uint64_t)&v30[4];
  long long v32 = v30 + 25;
  os_unfair_lock_lock(v30 + 25);
  uint64_t v168 = v31;
  sub_10024C71C(v31);
  if (v2)
  {
    os_unfair_lock_unlock(v32);
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v33 = 0;
  os_unfair_lock_t v169 = v32;
  os_unfair_lock_unlock(v32);
  static Logger.download.getter();
  id v34 = v3;
  uint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.info.getter();
  BOOL v37 = os_log_type_enabled(v35, v36);
  long long v158 = v4;
  uint64_t v164 = v13;
  v156 = v6;
  if (v37)
  {
    uint64_t v147 = 0;
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    v146 = (void (*)(unsigned char *, uint64_t))swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 138412290;
    char v39 = *(Class *)((char *)&v34->isa + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey);
    aBlock.value._countAndFlagsBits = (uint64_t)v39;
    id v40 = v39;
    uint64_t v33 = v147;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(void *)v146 = v39;

    _os_log_impl((void *)&_mh_execute_header, v35, v36, "[%@] Resetting data consumer", v38, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v35 = v34;
  }

  uint64_t v41 = v187 + 8;
  id v42 = *(void (**)(unsigned char *, uint64_t))(v187 + 8);
  v42(v29, v174);
  uint64_t v43 = (Class *)((char *)&v34->isa + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer);
  uint64_t v44 = sub_10018AC60((Class *)((char *)&v34->isa + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer), *(uint64_t *)((char *)&v34[3].isa + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer));
  __chkstk_darwin(v44);
  *(void *)&v142[-16] = v45;
  OS_dispatch_queue.sync<A>(execute:)();
  if (!v33)
  {
    sub_100017238(v173, (uint64_t)&aBlock, &qword_1006666D0);
    if ((void)v185)
    {
      Swift::String_optional v179 = aBlock;
      long long v180 = v184;
      long long v181 = v185;
      long long v182 = v186;
    }
    else
    {
      uint64_t v46 = *(uint64_t *)((char *)&v34->isa + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_download);
      uint64_t v47 = OBJC_IVAR____TtC28ManagedAppDistributionDaemon8Download_request;
      uint64_t v48 = type metadata accessor for DownloadRequest();
      sub_100017238(v46 + v47 + *(int *)(v48 + 56), (uint64_t)&v179, &qword_1006666D0);
      sub_10001729C((uint64_t)&aBlock, &qword_1006666D0);
    }
    uint64_t v49 = v172;
    char v145 = v34;
    if ((void)v181)
    {
      Swift::String_optional aBlock = v179;
      long long v184 = v180;
      long long v185 = v181;
      long long v186 = v182;
      static Logger.download.getter();
      sub_10024A870((uint64_t)&aBlock, (uint64_t)&v179);
      long long v50 = v34;
      uint64_t v51 = v49;
      long long v52 = Logger.logObject.getter();
      os_log_type_t v53 = static os_log_type_t.default.getter();
      int v54 = v53;
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v55 = swift_slowAlloc();
        uint64_t v56 = swift_slowAlloc();
        int v143 = v54;
        uint64_t v57 = (void *)v56;
        long long v144 = (void *)swift_slowAlloc();
        long long v178 = v144;
        *(_DWORD *)uint64_t v55 = 138412546;
        v146 = v42;
        uint64_t v58 = *(Class *)((char *)&v50->isa + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey);
        uint64_t v147 = 0;
        uint64_t v176 = (uint64_t)v58;
        uint64_t v187 = v41;
        id v59 = v58;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v57 = v58;

        *(_WORD *)(v55 + 12) = 2082;
        uint64_t v175 = *((void *)&v182 + 1);
        uint64_t v176 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v177 = v60;
        v61._countAndFlagsBits = 47;
        v61._object = (void *)0xE100000000000000;
        String.append(_:)(v61);
        uint64_t v175 = v182;
        uint64_t v41 = v187;
        v62._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v62);
        uint64_t v33 = v147;
        swift_bridgeObjectRelease();
        uint64_t v176 = sub_1000143F4(v176, v177, (uint64_t *)&v178);
        id v42 = v146;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10024A8CC((uint64_t)&v179);
        _os_log_impl((void *)&_mh_execute_header, v52, (os_log_type_t)v143, "[%@] Resuming download with state: %{public}s", (uint8_t *)v55, 0x16u);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        Swift::String v63 = v172;
      }
      else
      {

        sub_10024A8CC((uint64_t)&v179);
        Swift::String v63 = v51;
      }
      v42(v63, v174);
      uint64_t v64 = sub_10024A8CC((uint64_t)&aBlock);
      id v34 = v145;
    }
    else
    {
      uint64_t v64 = sub_10001729C((uint64_t)&v179, &qword_1006666D0);
    }
    __chkstk_darwin(v64);
    uint64_t v65 = v173;
    *(void *)&v142[-16] = v34;
    *(void *)&v142[-8] = v65;
    unint64_t v66 = v169;
    os_unfair_lock_lock(v169);
    sub_100254CAC(v168);
    os_unfair_lock_unlock(v66);
    if (!v33)
    {
      uint64_t v187 = v41;
      uint64_t v147 = 0;
      unint64_t v67 = *(char **)((char *)&v34->isa + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_download)
          + OBJC_IVAR____TtC28ManagedAppDistributionDaemon8Download_request;
      uint64_t v68 = type metadata accessor for DownloadRequest();
      uint64_t v69 = v170;
      char v70 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v170 + 16);
      id v71 = v167;
      uint64_t v72 = v171;
      v70(v167, &v67[*(int *)(v68 + 20)], v171);
      uint64_t v173 = v68;
      if (v67[*(int *)(v68 + 36)] == 1)
      {
        uint64_t v73 = v67;
        id v74 = v161;
        sub_1004CF2D8((uint64_t)v161);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v69 + 48))(v74, 1, v72) == 1)
        {
          sub_10001729C((uint64_t)v74, &qword_10065C3C0);
        }
        else
        {
          (*(void (**)(unsigned char *, uint64_t))(v69 + 8))(v71, v72);
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v69 + 32))(v71, v74, v72);
        }
        unint64_t v67 = v73;
      }
      char v172 = v67;
      v146 = v42;
      id v75 = v163;
      v70(v163, v71, v72);
      v161 = &v67[*(int *)(v173 + 24)];
      v70(v162, v75, v72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v76 = v166;
      URLRequest.init(url:cachePolicy:timeoutInterval:)();
      URLRequest.allowsCellularAccess.setter();
      URLRequest.allowsConstrainedNetworkAccess.setter();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      URLRequest.allowsExpensiveNetworkAccess.setter();
      uint64_t v77 = *(unsigned char **)(v69 + 8);
      uint64_t v170 = v69 + 8;
      ((void (*)(unsigned char *, uint64_t))v77)(v75, v171);
      uint64_t v78 = v77;
      uint64_t v79 = *sub_10018AC60(v43, v43[3]);
      uint64_t v80 = swift_allocObject();
      *(void *)(v80 + 16) = 0;
      *(unsigned char *)(v80 + 24) = 0;
      uint64_t v81 = __chkstk_darwin(v80);
      *(void *)&v142[-16] = v79;
      *(void *)&v142[-8] = v81;
      uint64_t v82 = v147;
      OS_dispatch_queue.sync<A>(execute:)();
      if (v82)
      {
        swift_release();
LABEL_25:
        ((void (*)(unsigned char *, uint64_t))v78)(v167, v171);
        (*(void (**)(unsigned char *, uint64_t))(v164 + 8))(v76, v165);
        return;
      }
      swift_beginAccess();
      uint64_t v83 = *(void *)(v80 + 16);
      if (*(unsigned char *)(v80 + 24))
      {
        aBlock.value._countAndFlagsBits = *(void *)(v80 + 16);
        swift_errorRetain();
        sub_1000172F8(&qword_10065B260);
        swift_willThrowTypedImpl();
        swift_release();
        goto LABEL_25;
      }
      swift_release();
      long long v162 = v78;
      if (v83)
      {
        static Logger.download.getter();
        unint64_t v84 = v145;
        unint64_t v85 = Logger.logObject.getter();
        os_log_type_t v86 = static os_log_type_t.default.getter();
        int v87 = v86;
        if (os_log_type_enabled(v85, v86))
        {
          uint64_t v88 = swift_slowAlloc();
          LODWORD(v163) = v87;
          uint64_t v89 = v88;
          uint64_t v90 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v89 = 138412546;
          uint64_t v147 = v89 + 4;
          uint64_t v91 = *(Class *)((char *)&v84->isa + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey);
          long long v144 = (void *)(v89 + 12);
          aBlock.value._countAndFlagsBits = (uint64_t)v91;
          id v92 = v91;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v90 = v91;

          *(_WORD *)(v89 + 12) = 2048;
          aBlock.value._countAndFlagsBits = v83;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v85, (os_log_type_t)v163, "[%@] Resuming download at offset %llu", (uint8_t *)v89, 0x16u);
          sub_1000172F8(&qword_10065DB10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          unint64_t v85 = v84;
        }
        uint64_t v93 = v146;

        v93(v159, v174);
        aBlock.value._countAndFlagsBits = 0x3D7365747962;
        aBlock.value._object = (void *)0xE600000000000000;
        uint64_t v176 = v83;
        v94._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v94);
        swift_bridgeObjectRelease();
        v95._countAndFlagsBits = 45;
        v95._object = (void *)0xE100000000000000;
        String.append(_:)(v95);
        v96._countAndFlagsBits = 0x65676E6152;
        v96._object = (void *)0xE500000000000000;
        URLRequest.setValue(_:forHTTPHeaderField:)(aBlock, v96);
        swift_bridgeObjectRelease();
        uint64_t v97 = v169;
        os_unfair_lock_lock(v169);
        sub_10024CB04(v168);
        uint64_t v147 = 0;
        os_unfair_lock_unlock(v97);
      }
      else
      {
        uint64_t v147 = 0;
      }
      uint64_t v173 = v172[*(int *)(v173 + 44)];
      char v98 = *v161;
      unint64_t v99 = *((void *)v161 + 1);
      uint64_t v100 = v161[17];
      uint64_t v101 = *((void *)v161 + 6);
      char v172 = (char *)*((void *)v161 + 5);
      char v102 = v161[56];
      uint64_t v103 = self;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v104 = [v103 defaultSessionConfiguration];
      objc_msgSend(v104, "set_timingDataOptions:", 69);
      [v104 setHTTPCookieAcceptPolicy:1];
      [v104 setHTTPShouldSetCookies:0];
      [v104 setHTTPShouldUsePipelining:1];
      [v104 setRequestCachePolicy:1];
      objc_msgSend(v104, "set_overridesBackgroundSessionAutoRedirect:", 1);
      [v104 setAllowsCellularAccess:v99 & 1];
      [v104 setAllowsConstrainedNetworkAccess:(v99 >> 1) & 1];
      [v104 setAllowsExpensiveNetworkAccess:(v99 >> 2) & 1];
      [v104 setDiscretionary:v100];
      objc_msgSend(v104, "set_requiresPowerPluggedIn:", (v98 & 1) == 0);
      NSString v105 = String._bridgeToObjectiveC()();
      objc_msgSend(v104, "set_sourceApplicationBundleIdentifier:", v105);

      if (v101)
      {
        NSString v106 = String._bridgeToObjectiveC()();
        objc_msgSend(v104, "set_sourceApplicationSecondaryIdentifier:", v106);
      }
      sub_100373694(v102);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v107 = (char *)[self sessionWithConfiguration:v104];

      Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
      id v109 = [v107 dataTaskWithRequest:isa];

      objc_msgSend(v109, "set_priority:", qword_1005A4CC0[v173]);
      uint64_t v110 = v145;
      __chkstk_darwin([v109 setDelegate:v145]);
      *(void *)&v142[-16] = v109;
      *(void *)&v142[-8] = v107;
      uint64_t v4 = v169;
      os_unfair_lock_lock(v169);
      uint64_t v111 = v147;
      sub_100254CC8(v168);
      if (!v111)
      {
        os_unfair_lock_unlock(v4);
        uint64_t v112 = v160;
        static Logger.download.getter();
        uint64_t v113 = v110;
        id v114 = v109;
        uint64_t v115 = v113;
        id v116 = v114;
        uint64_t v117 = Logger.logObject.getter();
        os_log_type_t v118 = static os_log_type_t.default.getter();
        int v119 = v118;
        BOOL v120 = os_log_type_enabled(v117, v118);
        uint64_t v147 = 0;
        char v172 = v107;
        if (v120)
        {
          uint64_t v121 = swift_slowAlloc();
          uint64_t v122 = (void *)swift_slowAlloc();
          os_unfair_lock_t v169 = (os_unfair_lock_t)swift_slowAlloc();
          aBlock.value._countAndFlagsBits = (uint64_t)v169;
          *(_DWORD *)uint64_t v121 = 138412802;
          LODWORD(v168) = v119;
          uint64_t v123 = v116;
          uint64_t v124 = *(Class *)((char *)&v115->isa + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey);
          uint64_t v176 = (uint64_t)v124;
          id v125 = v124;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          void *v122 = v124;
          id v116 = v123;

          *(_WORD *)(v121 + 12) = 2114;
          uint64_t v176 = (uint64_t)v123;
          id v126 = v123;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          v122[1] = v123;

          *(_WORD *)(v121 + 22) = 2082;
          swift_beginAccess();
          sub_100013A74(&qword_10065D3F8, (void (*)(uint64_t))&type metadata accessor for URLRequest);
          uint64_t v127 = dispatch thunk of CustomStringConvertible.description.getter();
          long long v178 = (void *)sub_1000143F4(v127, v128, &aBlock.value._countAndFlagsBits);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v117, (os_log_type_t)v168, "[%@] Resuming data task: %{public}@ with request: %{public}s", (uint8_t *)v121, 0x20u);
          sub_1000172F8(&qword_10065DB10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          long long v129 = v160;
        }
        else
        {

          long long v129 = v112;
        }
        v146(v129, v174);
        char v130 = v148;
        switch((char)v173)
        {
          case 2:
          case 3:
          case 4:
            static DispatchQoS.userInitiated.getter();
            break;
          default:
            static DispatchQoS.utility.getter();
            break;
        }
        sub_100176BD4();
        uint64_t v131 = v154;
        unint64_t v132 = v149;
        uint64_t v133 = v155;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v154 + 32))(v149, v130, v155);
        uint64_t v134 = v150;
        DispatchQoS.qosClass.getter();
        uint64_t v187 = *(void *)(v131 + 8);
        ((void (*)(unsigned char *, uint64_t))v187)(v132, v133);
        uint64_t v174 = static OS_dispatch_queue.global(qos:)();
        (*(void (**)(unsigned char *, uint64_t))(v151 + 8))(v134, v152);
        uint64_t v135 = swift_allocObject();
        *(void *)(v135 + 16) = v116;
        *(void *)&long long v185 = sub_100254D1C;
        *((void *)&v185 + 1) = v135;
        aBlock.value._countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
        aBlock.value._object = (void *)1107296256;
        *(void *)&long long v184 = sub_1002557B0;
        *((void *)&v184 + 1) = &unk_10063C9D0;
        v136 = _Block_copy(&aBlock);
        id v137 = v116;
        long long v138 = v153;
        static DispatchQoS.unspecified.getter();
        long long v178 = _swiftEmptyArrayStorage;
        sub_100013A74(&qword_10065D3E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1000172F8(&qword_10065D3E8);
        sub_10000DDFC((unint64_t *)&qword_10065D3F0, &qword_10065D3E8);
        long long v139 = v156;
        char v140 = v158;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        v141 = (void *)v174;
        OS_dispatch_queue.async(group:qos:flags:execute:)();

        _Block_release(v136);
        (*(void (**)(unsigned char *, os_unfair_lock_s *))(v157 + 8))(v139, v140);
        ((void (*)(unsigned char *, uint64_t))v187)(v138, v133);
        ((void (*)(unsigned char *, uint64_t))v162)(v167, v171);
        swift_release();
        (*(void (**)(unsigned char *, uint64_t))(v164 + 8))(v166, v165);
        return;
      }
LABEL_44:
      os_unfair_lock_unlock(v4);
      __break(1u);
      JUMPOUT(0x10024C708);
    }
  }
}

uint64_t sub_10024C71C(uint64_t a1)
{
  *(unsigned char *)(a1 + 80) = 1;
  uint64_t result = swift_errorRelease();
  *(void *)(a1 + 56) = 0;
  return result;
}

uint64_t sub_10024C758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_download)
     + OBJC_IVAR____TtC28ManagedAppDistributionDaemon8Download_request;
  uint64_t v5 = type metadata accessor for DownloadRequest();
  uint64_t v6 = v5;
  uint64_t v7 = (uint64_t *)(v4 + *(int *)(v5 + 52));
  uint64_t v8 = *v7;
  unint64_t v9 = v7[1];
  uint64_t v11 = v7[2];
  unint64_t v10 = v7[3];
  uint64_t v13 = v7[4];
  uint64_t v12 = v7[5];
  uint64_t v15 = v7[6];
  uint64_t v14 = v7[7];
  uint64_t v16 = v7[8];
  uint64_t v17 = v7[9];
  unint64_t v18 = v7[10];
  unint64_t v19 = v7[11];
  uint64_t v21 = v7[12];
  uint64_t v20 = v7[13];
  if (v19 >> 62)
  {
    if (v19 >> 62 == 1)
    {
      v62[0] = *v7;
      v62[1] = v9;
      v62[2] = v11;
      v62[3] = v10;
      char v63 = v13 & 1;
      uint64_t v64 = v12;
      uint64_t v65 = v15;
      v66[0] = v14;
      v66[1] = v16;
      char v67 = v19 & 1;
      uint64_t v68 = v21;
      uint64_t v69 = v20;
      uint64_t v22 = v4 + *(int *)(v5 + 48);
      v66[2] = v17;
      v66[3] = v18;
      uint64_t v32 = v15;
      uint64_t v34 = v14;
      uint64_t v28 = v13;
      uint64_t v30 = v12;
      unint64_t v26 = v10;
      uint64_t v38 = v17;
      uint64_t v40 = v16;
      unint64_t v36 = v18;
      sub_10001733C(v22, (uint64_t)v70, &qword_10065D400);
      sub_100017238(a3, (uint64_t)&v43, &qword_1006666D0);
      if ((void)v45)
      {
        long long v47 = v43;
        long long v48 = v44;
        long long v49 = v45;
        long long v50 = v46;
        sub_100254D34(v8, v9, v11, v26, v28, v30, v32, v34, v40, v38, v36, v19);
        sub_100254DD4(v70);
      }
      else
      {
        sub_100017238(v4 + *(int *)(v6 + 56), (uint64_t)&v47, &qword_1006666D0);
        sub_100254D34(v8, v9, v11, v26, v28, v30, v32, v34, v40, v38, v36, v19);
        sub_100254DD4(v70);
        sub_10001729C((uint64_t)&v43, &qword_1006666D0);
      }
      *((void *)&v52 + 1) = &type metadata for Decrypter;
      os_log_type_t v53 = &off_100640828;
      *(void *)&long long v51 = swift_allocObject();
      uint64_t v23 = v71;
      sub_100274210((uint64_t)v62, (uint64_t)v66, v70, (uint64_t)&v47, v51 + 16);
      if (v23) {
        return sub_100254EB8((uint64_t)&v51);
      }
    }
    else
    {
      os_log_type_t v53 = 0;
      long long v51 = 0u;
      long long v52 = 0u;
    }
  }
  else
  {
    unint64_t v37 = v7[10];
    uint64_t v39 = v7[9];
    uint64_t v41 = v7[8];
    v54[0] = *v7;
    v54[1] = v9;
    char v55 = v11 & 1;
    unint64_t v56 = v10;
    uint64_t v57 = v13;
    uint64_t v58 = v12;
    char v59 = v15 & 1;
    uint64_t v60 = v14;
    uint64_t v33 = v15;
    uint64_t v35 = v14;
    uint64_t v29 = v13;
    uint64_t v31 = v12;
    unint64_t v27 = v10;
    sub_10001733C(v4 + *(int *)(v5 + 48), (uint64_t)v61, &qword_10065D400);
    sub_100017238(a3, (uint64_t)&v43, &qword_1006666D0);
    if ((void)v45)
    {
      long long v47 = v43;
      long long v48 = v44;
      long long v49 = v45;
      long long v50 = v46;
      sub_100254D34(v8, v9, v11, v27, v29, v31, v33, v35, v41, v39, v37, v19);
      sub_100254DD4(v61);
    }
    else
    {
      sub_100017238(v4 + *(int *)(v6 + 56), (uint64_t)&v47, &qword_1006666D0);
      sub_100254D34(v8, v9, v11, v27, v29, v31, v33, v35, v41, v39, v37, v19);
      sub_100254DD4(v61);
      sub_10001729C((uint64_t)&v43, &qword_1006666D0);
    }
    *((void *)&v52 + 1) = &type metadata for Decrypter;
    os_log_type_t v53 = &off_100640828;
    *(void *)&long long v51 = swift_allocObject();
    uint64_t v25 = v71;
    sub_1004A1A94(v54, v61, (uint64_t)&v47, v51 + 16);
    if (v25) {
      return sub_100254EB8((uint64_t)&v51);
    }
  }
  return sub_100254F0C((uint64_t)&v51, a1 + 8);
}

uint64_t sub_10024CB04(uint64_t result)
{
  *(unsigned char *)(result + 48) = 1;
  return result;
}

void sub_10024CB10(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = *(void **)a1;
  id v7 = a2;

  *(void *)a1 = a2;
  uint64_t v8 = *(void **)(a1 + 64);
  id v9 = a3;

  *(void *)(a1 + 64) = a3;
}

id sub_10024CB70(uint64_t a1)
{
  return sub_10024CBA8(a1, 4);
}

id sub_10024CB8C(uint64_t a1)
{
  return sub_10024CBA8(a1, 0);
}

id sub_10024CBA8(uint64_t a1, char a2)
{
  *(unsigned char *)(a1 + 80) = a2;
  id result = *(id *)a1;
  if (result) {
    return [result cancel];
  }
  return result;
}

uint64_t type metadata accessor for DownloadTask()
{
  return self;
}

uint64_t sub_10024CCA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[5] = a1;
  uint64_t v7 = type metadata accessor for URLRequest();
  v6[8] = v7;
  v6[9] = *(void *)(v7 - 8);
  v6[10] = swift_task_alloc();
  v6[11] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  v6[12] = v8;
  v6[13] = *(void *)(v8 - 8);
  v6[14] = swift_task_alloc();
  return _swift_task_switch(sub_10024CDD4, 0, 0);
}

uint64_t sub_10024CDD4()
{
  long long v50 = v0;
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = (void *)v0[7];
  static Logger.download.getter();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v7(v1, v5, v3);
  long long v48 = v7;
  v7(v2, v5, v3);
  id v8 = v6;
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    os_log_t log = v9;
    os_log_type_t v45 = v10;
    uint64_t v11 = v0[9];
    uint64_t v41 = v0[11];
    uint64_t v12 = (char *)v0[7];
    uint64_t v44 = v0[8];
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 138412802;
    uint64_t v16 = *(void **)&v12[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey];
    v0[2] = v16;
    uint64_t v49 = v15;
    id v17 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v14 = v16;

    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v18 = URLRequest.debugDescription.getter();
    v0[3] = sub_1000143F4(v18, v19, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v20(v41, v44);
    *(_WORD *)(v13 + 22) = 2080;
    if (!URLRequest.allHTTPHeaderFields.getter()) {
      sub_10044B560((uint64_t)_swiftEmptyArrayStorage);
    }
    uint64_t v21 = v0[13];
    uint64_t v42 = v0[12];
    uint64_t v43 = v0[14];
    uint64_t v22 = v0[10];
    uint64_t v23 = v0[8];
    uint64_t v24 = Dictionary.description.getter();
    unint64_t v26 = v25;
    swift_bridgeObjectRelease();
    v0[4] = sub_1000143F4(v24, v26, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v20(v22, v23);
    _os_log_impl((void *)&_mh_execute_header, log, v45, "[%@] Following redirect: %s headers: %s", (uint8_t *)v13, 0x20u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v43, v42);
  }
  else
  {
    uint64_t v27 = v0[13];
    uint64_t v47 = v0[14];
    uint64_t v29 = v0[11];
    uint64_t v28 = v0[12];
    uint64_t v31 = v0[9];
    uint64_t v30 = v0[10];
    uint64_t v32 = v9;
    uint64_t v34 = (void *)v0[7];
    uint64_t v33 = v0[8];

    uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v35(v29, v33);
    v35(v30, v33);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v47, v28);
  }
  uint64_t v36 = v0[8];
  uint64_t v37 = v0[9];
  uint64_t v38 = v0[5];
  v48(v38, v0[6], v36);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v36);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = (uint64_t (*)(void))v0[1];
  return v39();
}

uint64_t sub_10024D394(void *a1, void *a2, void *a3, uint64_t a4, const void *a5, void *a6)
{
  v6[4] = a3;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a2;
  uint64_t v12 = type metadata accessor for URLRequest();
  v6[6] = v12;
  v6[7] = *(void *)(v12 - 8);
  uint64_t v13 = swift_task_alloc();
  v6[8] = v13;
  sub_1000172F8(&qword_10065D390);
  v6[9] = swift_task_alloc();
  uint64_t v14 = swift_task_alloc();
  v6[10] = v14;
  v6[11] = _Block_copy(a5);
  static URLRequest._unconditionallyBridgeFromObjectiveC(_:)();
  id v15 = a1;
  id v16 = a2;
  id v17 = a3;
  a6;
  uint64_t v21 = (void *)swift_task_alloc();
  v6[12] = v21;
  void *v21 = v6;
  v21[1] = sub_10024D538;
  return sub_10024CCA4(v14, v18, v19, v20, v13);
}

uint64_t sub_10024D538()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v18 = *(void *)(*v0 + 80);
  uint64_t v2 = *(void *)(*v0 + 72);
  uint64_t v17 = *(void *)(*v0 + 64);
  uint64_t v3 = *(void *)(*v0 + 56);
  uint64_t v4 = *(void *)(*v0 + 48);
  uint64_t v5 = *(void **)(*v0 + 40);
  uint64_t v6 = *(void **)(*v0 + 32);
  uint64_t v7 = *(void **)(*v0 + 24);
  id v8 = *(void **)(*v0 + 16);
  uint64_t v9 = *v0;
  swift_task_dealloc();

  os_log_type_t v10 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v10(v17, v4);
  sub_10001733C(v18, v2, &qword_10065D390);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1, v4) == 1)
  {
    Class isa = 0;
  }
  else
  {
    uint64_t v12 = v1[9];
    uint64_t v13 = v1[6];
    Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
    v10(v12, v13);
  }
  uint64_t v14 = (void (**)(void, void))v1[11];
  ((void (**)(void, Class))v14)[2](v14, isa);
  _Block_release(v14);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v15 = *(uint64_t (**)(void))(v9 + 8);
  return v15();
}

uint64_t sub_10024D7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v11;
  *uint64_t v11 = v7;
  v11[1] = sub_1000176B4;
  return sub_10024D894(a5, a6, a7);
}

uint64_t sub_10024D894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[228] = v3;
  v4[227] = a3;
  v4[226] = a2;
  v4[225] = a1;
  uint64_t v5 = type metadata accessor for Logger();
  v4[229] = v5;
  v4[230] = *(void *)(v5 - 8);
  v4[231] = swift_task_alloc();
  v4[232] = swift_task_alloc();
  v4[233] = swift_task_alloc();
  v4[234] = swift_task_alloc();
  v4[235] = swift_task_alloc();
  v4[236] = swift_task_alloc();
  v4[237] = swift_task_alloc();
  v4[238] = swift_task_alloc();
  v4[239] = swift_task_alloc();
  v4[240] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URLError.Code();
  v4[241] = v6;
  v4[242] = *(void *)(v6 - 8);
  v4[243] = swift_task_alloc();
  return _swift_task_switch(sub_10024DA2C, 0, 0);
}

uint64_t sub_10024DA2C()
{
  uint64_t v210 = v0;
  uint64_t v1 = (unsigned char *)(v0 + 1488);
  uint64_t v2 = *(NSObject **)(v0 + 1816);
  char v205 = (void *)(v0 + 1744);
  os_log_t log = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 1944);
    uint64_t v4 = *(void *)(v0 + 1936);
    uint64_t v5 = *(void *)(v0 + 1928);
    swift_errorRetain();
    static URLError.cancelled.getter();
    sub_100013A74((unint64_t *)&unk_10065D3D0, (void (*)(uint64_t))&type metadata accessor for URLError.Code);
    char v6 = static _ErrorCodeProtocol.~= infix(_:_:)();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v7 = *(void **)(v0 + 1824);
    uint64_t v8 = *(void **)(v0 + 1808);
    if (v6)
    {
      static Logger.download.getter();
      id v9 = v7;
      id v10 = v8;
      id v11 = v9;
      id v12 = v10;
      uint64_t v13 = Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.default.getter();
      BOOL v15 = os_log_type_enabled(v13, v14);
      id v16 = *(char **)(v0 + 1824);
      uint64_t v17 = *(void **)(v0 + 1808);
      if (v15)
      {
        uint64_t v18 = swift_slowAlloc();
        uint64_t v19 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = 138412546;
        uint64_t v20 = *(void **)&v16[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey];
        *(void *)(v0 + 1784) = v20;
        id v21 = v20;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v19 = v20;

        *(_WORD *)(v18 + 12) = 2114;
        *(void *)(v0 + 1792) = v17;
        id v22 = v17;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v19[1] = v17;

        uint64_t v1 = (unsigned char *)(v0 + 1488);
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "[%@] Data task %{public}@ was finished", (uint8_t *)v18, 0x16u);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v2 = log;
        swift_errorRelease();
      }
      else
      {
        uint64_t v2 = log;
        swift_errorRelease();
      }
      uint64_t v56 = *(void *)(v0 + 1920);
    }
    else
    {
      swift_errorRelease();
      swift_errorRetain();
      static Logger.download.getter();
      swift_errorRetain();
      id v40 = v7;
      id v41 = v8;
      swift_errorRetain();
      id v42 = v40;
      id v43 = v41;
      uint64_t v44 = Logger.logObject.getter();
      os_log_type_t v45 = static os_log_type_t.error.getter();
      BOOL v46 = os_log_type_enabled(v44, v45);
      uint64_t v47 = *(char **)(v0 + 1824);
      long long v48 = *(void **)(v0 + 1808);
      if (v46)
      {
        os_log_type_t v202 = v45;
        uint64_t v49 = swift_slowAlloc();
        long long v50 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v49 = 138412802;
        uint64_t v51 = *(void **)&v47[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey];
        *(void *)(v0 + 1760) = v51;
        id v52 = v51;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *long long v50 = v51;

        *(_WORD *)(v49 + 12) = 2114;
        *(void *)(v0 + 1768) = v48;
        id v53 = v48;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v50[1] = v48;

        *(_WORD *)(v49 + 22) = 2114;
        uint64_t v1 = (unsigned char *)(v0 + 1488);
        swift_errorRetain();
        uint64_t v54 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v0 + 1776) = v54;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v50[2] = v54;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v44, v202, "[%@] Data task %{public}@ did complete with error: %{public}@", (uint8_t *)v49, 0x20u);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v2 = log;
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();

        swift_errorRelease();
        swift_errorRelease();
      }
      uint64_t v56 = *(void *)(v0 + 1912);
    }
    char v55 = *(void (**)(uint64_t, void))(*(void *)(v0 + 1840) + 8);
    v55(v56, *(void *)(v0 + 1832));
  }
  else
  {
    uint64_t v23 = *(void **)(v0 + 1824);
    uint64_t v24 = *(void **)(v0 + 1808);
    static Logger.download.getter();
    id v25 = v23;
    id v26 = v24;
    id v27 = v25;
    id v28 = v26;
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.default.getter();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v32 = *(char **)(v0 + 1824);
    uint64_t v33 = *(void **)(v0 + 1808);
    if (v31)
    {
      os_log_type_t typed = v30;
      uint64_t v34 = (void *)(v0 + 1752);
      uint64_t v35 = swift_slowAlloc();
      *(void *)v201 = v0;
      uint64_t v36 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 138412546;
      uint64_t v37 = *(void **)&v32[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey];
      *char v205 = v37;
      id v38 = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v36 = v37;

      *(_WORD *)(v35 + 12) = 2114;
      *uint64_t v34 = v33;
      id v39 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v36[1] = v33;

      _os_log_impl((void *)&_mh_execute_header, v29, typed, "[%@] Data task %{public}@ did complete", (uint8_t *)v35, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      uint64_t v0 = *(void *)v201;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    char v55 = *(void (**)(uint64_t, void))(*(void *)(v0 + 1840) + 8);
    v55(*(void *)(v0 + 1904), *(void *)(v0 + 1832));
    uint64_t v2 = 0;
  }
  *(void *)(v0 + 1952) = v55;
  uint64_t v57 = *(os_unfair_lock_s **)(*(void *)(v0 + 1824)
                             + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_state);
  *(void *)(v0 + 1960) = v57;
  uint64_t v58 = (uint64_t)&v57[4];
  char v59 = v57 + 25;
  os_unfair_lock_lock(v57 + 25);
  sub_100250574(v58, v1);
  os_unfair_lock_unlock(v59);
  int v60 = *(unsigned __int8 *)(v0 + 1488);
  long long v203 = (void *)(v0 + 1536);
  sub_10001733C(v0 + 1496, v0 + 1536, (uint64_t *)&unk_10065D300);
  if (!v2 || v60 == 3)
  {
LABEL_20:
    unint64_t v66 = (_OWORD *)(v0 + 496);
    uint64_t v195 = v0 + 656;
    uint64_t v206 = v0 + 896;
    switch(v60)
    {
      case 1:
        __break(1u);
        goto LABEL_92;
      case 2:
        sub_10018AC60((void *)(*(void *)(v0 + 1824) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer), *(void *)(*(void *)(v0 + 1824) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer + 24));
        sub_1003C9C88();
        uint64_t v86 = *(void *)(*(void *)(v0 + 1824) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_download);
        int v87 = (_OWORD *)(v0 + 496);
        *unint64_t v66 = 0u;
        *(_OWORD *)(v0 + 512) = 0u;
        *(_OWORD *)(v0 + 528) = 0u;
        *(_OWORD *)(v0 + 544) = 0u;
        *(void *)(v0 + 560) = 0;
        *(unsigned char *)(v0 + 568) = 3;
        uint64_t v88 = *(os_unfair_lock_s **)(v86 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon8Download_storage);
        *(void *)(swift_task_alloc() + 16) = v66;
        uint64_t v89 = v88 + 4;
        v88 += 28;
        os_unfair_lock_lock(v88);
        sub_100255798(v89, v209);
        os_unfair_lock_unlock(v88);
        uint64_t v90 = v209[0];
        swift_task_dealloc();
        uint64_t v91 = *(void *)(v90 + 16);
        if (!v91) {
          goto LABEL_62;
        }
        uint64_t v92 = *(void *)(sub_1000172F8((uint64_t *)&unk_10065D3C0) - 8);
        uint64_t v93 = v90 + ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80));
        uint64_t v94 = *(void *)(v92 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1001C75E0(v0 + 496, v0 + 576);
          CheckedContinuation.resume(returning:)();
          v93 += v94;
          --v91;
        }
        while (v91);
        goto LABEL_39;
      case 3:
        goto LABEL_42;
      case 4:
        sub_10018AC60((void *)(*(void *)(v0 + 1824) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer), *(void *)(*(void *)(v0 + 1824) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer + 24));
        sub_1003C90FC();
        if (*(void *)(v0 + 1560))
        {
          sub_10019B17C((uint64_t)v203, v0 + 1616);
          sub_10018AC60((void *)(v0 + 1616), *(void *)(v0 + 1640));
          sub_1002E9388(v0 + 1424);
          sub_100014524(v0 + 1616);
          uint64_t v95 = v0 + 1424;
        }
        else
        {
          uint64_t v95 = v0 + 1424;
          *(_OWORD *)(v0 + 1456) = 0u;
          *(_OWORD *)(v0 + 1472) = 0u;
          *(_OWORD *)(v0 + 1424) = 0u;
          *(_OWORD *)(v0 + 1440) = 0u;
        }
        uint64_t v137 = *(void *)(*(void *)(v0 + 1824) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_download);
        sub_100017238(v95, v206, &qword_1006666D0);
        *(unsigned char *)(v0 + 968) = 0;
        long long v138 = *(os_unfair_lock_s **)(v137 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon8Download_storage);
        *(void *)(swift_task_alloc() + 16) = v206;
        long long v139 = v138 + 4;
        v138 += 28;
        os_unfair_lock_lock(v138);
        sub_100255798(v139, v209);
        os_unfair_lock_unlock(v138);
        uint64_t v140 = v209[0];
        swift_task_dealloc();
        uint64_t v141 = *(void *)(v140 + 16);
        if (v141)
        {
          uint64_t v142 = *(void *)(sub_1000172F8((uint64_t *)&unk_10065D3C0) - 8);
          uint64_t v143 = v140 + ((*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80));
          uint64_t v144 = *(void *)(v142 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_1001C75E0(v206, v0 + 976);
            CheckedContinuation.resume(returning:)();
            v143 += v144;
            --v141;
          }
          while (v141);
          swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        sub_1001C7DE4(v206);
        sub_10001729C(v0 + 1424, &qword_1006666D0);
        goto LABEL_71;
      case 5:
        int v87 = (_OWORD *)(v0 + 416);
        uint64_t v96 = *(void *)(v0 + 1560);
        if (v96)
        {
          uint64_t v97 = sub_10018AC60(v203, *(void *)(v0 + 1560));
          uint64_t v98 = *(void *)(v96 - 8);
          uint64_t v99 = swift_task_alloc();
          (*(void (**)(uint64_t, void *, uint64_t))(v98 + 16))(v99, v97, v96);
          uint64_t v100 = sub_1002E8EEC();
          unint64_t v102 = v101;
          swift_task_dealloc();
          if (v102 >> 60 != 15)
          {
            sub_10018AC60((void *)(*(void *)(v0 + 1824) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer), *(void *)(*(void *)(v0 + 1824)+ OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer+ 24));
            sub_1003C8C4C(v100, v102);
            sub_10018AE44(v100, v102);
          }
        }
        sub_10018AC60((void *)(*(void *)(v0 + 1824) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer), *(void *)(*(void *)(v0 + 1824) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer + 24));
        sub_1003C9C88();
        uint64_t v103 = *(void *)(*(void *)(v0 + 1824) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_download);
        _OWORD *v87 = 0u;
        *(_OWORD *)(v0 + 432) = 0u;
        *(_OWORD *)(v0 + 448) = 0u;
        *(_OWORD *)(v0 + 464) = 0u;
        *(void *)(v0 + 480) = 0;
        *(unsigned char *)(v0 + 488) = 3;
        id v104 = *(os_unfair_lock_s **)(v103 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon8Download_storage);
        *(void *)(swift_task_alloc() + 16) = v87;
        NSString v105 = v104 + 4;
        v104 += 28;
        os_unfair_lock_lock(v104);
        sub_100255798(v105, v209);
        os_unfair_lock_unlock(v104);
        uint64_t v106 = v209[0];
        swift_task_dealloc();
        uint64_t v107 = *(void *)(v106 + 16);
        if (v107)
        {
          uint64_t v108 = *(void *)(sub_1000172F8((uint64_t *)&unk_10065D3C0) - 8);
          uint64_t v109 = v106 + ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80));
          uint64_t v110 = *(void *)(v108 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_1001C75E0(v0 + 416, v0 + 336);
            CheckedContinuation.resume(returning:)();
            v109 += v110;
            --v107;
          }
          while (v107);
LABEL_39:
          swift_bridgeObjectRelease_n();
          uint64_t v111 = (uint64_t)v87;
        }
        else
        {
LABEL_62:
          swift_bridgeObjectRelease();
          uint64_t v111 = (uint64_t)v87;
        }
LABEL_70:
        sub_1001C7DE4(v111);
        break;
      default:
        sub_10018AC60((void *)(*(void *)(v0 + 1824) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer), *(void *)(*(void *)(v0 + 1824) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer + 24));
        sub_1003C90FC();
        uint64_t v67 = *(void *)(*(void *)(v0 + 1824) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_download);
        *(void *)(v0 + 656) = 1;
        *(_OWORD *)(v0 + 664) = 0u;
        *(_OWORD *)(v0 + 680) = 0u;
        *(_OWORD *)(v0 + 696) = 0u;
        *(_OWORD *)(v0 + 712) = 0u;
        *(unsigned char *)(v0 + 728) = 3;
        uint64_t v68 = *(os_unfair_lock_s **)(v67 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon8Download_storage);
        *(void *)(swift_task_alloc() + 16) = v195;
        uint64_t v69 = v68 + 4;
        v68 += 28;
        os_unfair_lock_lock(v68);
        sub_100255798(v69, v209);
        os_unfair_lock_unlock(v68);
        uint64_t v70 = v209[0];
        swift_task_dealloc();
        uint64_t v71 = *(void *)(v70 + 16);
        if (v71)
        {
          uint64_t v72 = *(void *)(sub_1000172F8((uint64_t *)&unk_10065D3C0) - 8);
          uint64_t v73 = v70 + ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80));
          uint64_t v74 = *(void *)(v72 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_1001C75E0(v195, v0 + 736);
            CheckedContinuation.resume(returning:)();
            v73 += v74;
            --v71;
          }
          while (v71);
          swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v111 = v0 + 656;
        goto LABEL_70;
    }
    goto LABEL_71;
  }
  os_log_type_t type = v55;
  uint64_t v61 = *(void *)(v0 + 1944);
  uint64_t v62 = *(void *)(v0 + 1936);
  uint64_t v63 = *(void *)(v0 + 1928);
  uint64_t v64 = *(void *)(v0 + 1816);
  swift_errorRetain();
  static URLError.cancelled.getter();
  sub_100013A74((unint64_t *)&unk_10065D3D0, (void (*)(uint64_t))&type metadata accessor for URLError.Code);
  char v65 = static _ErrorCodeProtocol.~= infix(_:_:)();
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
  if (v65)
  {
    swift_errorRelease();
    char v55 = type;
    goto LABEL_20;
  }
  id v75 = *(void **)(v0 + 1824);
  static Logger.download.getter();
  swift_errorRetain();
  id v76 = v75;
  swift_errorRetain();
  id v77 = v76;
  uint64_t v78 = Logger.logObject.getter();
  os_log_type_t v79 = static os_log_type_t.error.getter();
  BOOL v80 = os_log_type_enabled(v78, v79);
  uint64_t v81 = *(char **)(v0 + 1824);
  if (v80)
  {
    uint64_t v82 = swift_slowAlloc();
    long long v194 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v82 = 138412546;
    uint64_t v191 = v82 + 4;
    os_log_type_t v192 = v79;
    uint64_t v83 = *(void **)&v81[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey];
    *(void *)(v0 + 1728) = v83;
    id v84 = v83;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *long long v194 = v83;

    *(_WORD *)(v82 + 12) = 2114;
    swift_errorRetain();
    uint64_t v85 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 1736) = v85;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v194[1] = v85;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v78, v192, "[%@] Transitioning to failed state as error occurred durring download: %{public}@", (uint8_t *)v82, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v112 = *(void *)(v0 + 1896);
  uint64_t v113 = *(void *)(v0 + 1832);

  char v55 = type;
  type(v112, v113);
  *(void *)(swift_task_alloc() + 16) = v64;
  os_unfair_lock_lock(v59);
  sub_100254BE0(v58);
  os_unfair_lock_unlock(v59);
  swift_errorRelease();
  swift_task_dealloc();
LABEL_42:
  sub_10018AC60((void *)(*(void *)(v0 + 1824) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer), *(void *)(*(void *)(v0 + 1824) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer + 24));
  sub_1003C90FC();
  id v114 = (_OWORD *)(v0 + 1296);
  if (*(void *)(v0 + 1560))
  {
    sub_10019B17C((uint64_t)v203, v0 + 1576);
    sub_10018AC60((void *)(v0 + 1576), *(void *)(v0 + 1600));
    sub_1002E9388(v0 + 1296);
    sub_100014524(v0 + 1576);
  }
  else
  {
    *(_OWORD *)(v0 + 1328) = 0u;
    *(_OWORD *)(v0 + 1344) = 0u;
    _OWORD *v114 = 0u;
    *(_OWORD *)(v0 + 1312) = 0u;
  }
  os_unfair_lock_lock(v59);
  sub_1002505B4(v58, v209);
  *(void *)(v0 + 1968) = 0;
  os_unfair_lock_unlock(v59);
  uint64_t v115 = v209[0];
  if (!v209[0])
  {
    if (!log)
    {
LABEL_92:
      __break(1u);
      JUMPOUT(0x10024F9D8);
    }
    uint64_t v115 = *(void *)(v0 + 1816);
    swift_errorRetain();
  }
  uint64_t v116 = sub_10033E8A8(v115);
  uint64_t v118 = v116;
  char v119 = v117;
  if (v117 != 2) {
    goto LABEL_55;
  }
  if (v116 == 3)
  {
    typeb = v55;
    uint64_t v164 = *(void **)(v0 + 1824);
    static Logger.download.getter();
    id v165 = v164;
    v166 = Logger.logObject.getter();
    os_log_type_t v167 = static os_log_type_t.error.getter();
    BOOL v168 = os_log_type_enabled(v166, v167);
    os_unfair_lock_t v169 = *(char **)(v0 + 1824);
    if (v168)
    {
      uint64_t v170 = (uint8_t *)swift_slowAlloc();
      long long v207 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v170 = 138412290;
      uint64_t v171 = *(void **)&v169[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey];
      *(void *)(v0 + 1704) = v171;
      id v172 = v171;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v207 = v171;
      id v114 = (_OWORD *)(v0 + 1296);

      _os_log_impl((void *)&_mh_execute_header, v166, v167, "[%@] Network timed out, will retry immediately", v170, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    typeb(*(void *)(v0 + 1864), *(void *)(v0 + 1832));
    *(_OWORD *)(v0 + 1392) = 0u;
    *(_OWORD *)(v0 + 1408) = 0u;
    *(_OWORD *)(v0 + 1360) = 0u;
    *(_OWORD *)(v0 + 1376) = 0u;
    sub_10024ADB4(v0 + 1360);
    sub_10001729C(v0 + 1360, &qword_1006666D0);
    sub_10001729C((uint64_t)v114, &qword_1006666D0);
LABEL_71:
    uint64_t v157 = *(void *)(v0 + 1960);
    long long v158 = (os_unfair_lock_s *)(v157 + 100);
    long long v159 = (id *)(v157 + 16);
    objc_msgSend(*(id *)(v0 + 1800), "finishTasksAndInvalidate", v191);
    os_unfair_lock_lock(v158);
    sub_1002505E4(v159);
    os_unfair_lock_unlock(v158);
    char v160 = *(os_unfair_lock_s **)(v0 + 1960);
    v161 = v160 + 25;
    uint64_t v162 = (uint64_t)&v160[4];
    sub_10001729C((uint64_t)v203, (uint64_t *)&unk_10065D300);
    os_unfair_lock_lock(v161);
    sub_100252858(v162);
    os_unfair_lock_unlock(v161);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v163 = *(uint64_t (**)(void))(v0 + 8);
    return v163();
  }
  if (v116 == 2)
  {
    typeCC_MD5_CTX c = v55;
    uint64_t v122 = v0 + 16;
    uint64_t v173 = *(void **)(v0 + 1824);
    static Logger.download.getter();
    id v174 = v173;
    uint64_t v175 = Logger.logObject.getter();
    os_log_type_t v176 = static os_log_type_t.error.getter();
    BOOL v177 = os_log_type_enabled(v175, v176);
    long long v178 = *(char **)(v0 + 1824);
    if (v177)
    {
      Swift::String_optional v179 = (uint8_t *)swift_slowAlloc();
      long long v204 = (void *)swift_slowAlloc();
      *(_DWORD *)Swift::String_optional v179 = 138412290;
      long long v180 = *(void **)&v178[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey];
      *(void *)(v0 + 1664) = v180;
      id v181 = v180;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v204 = v180;
      id v114 = (_OWORD *)(v0 + 1296);

      _os_log_impl((void *)&_mh_execute_header, v175, v176, "[%@] Network disconnected, will retry later", v179, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v182 = *(void *)(v0 + 1824);
    typec(*(void *)(v0 + 1872), *(void *)(v0 + 1832));
    uint64_t v183 = *(void *)(v182 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_download);
    sub_100017238((uint64_t)v114, v0 + 16, &qword_1006666D0);
    *(unsigned char *)(v0 + 88) = 1;
    uint64_t v184 = *(void *)(v183 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon8Download_storage);
    *(void *)(swift_task_alloc() + 16) = v122;
    os_unfair_lock_lock((os_unfair_lock_t)(v184 + 112));
    sub_100255798((void *)(v184 + 16), v209);
    os_unfair_lock_unlock((os_unfair_lock_t)(v184 + 112));
    uint64_t v185 = v209[0];
    swift_task_dealloc();
    uint64_t v186 = *(void *)(v185 + 16);
    if (v186)
    {
      uint64_t v187 = v114;
      uint64_t v188 = *(void *)(sub_1000172F8((uint64_t *)&unk_10065D3C0) - 8);
      uint64_t v189 = v185 + ((*(unsigned __int8 *)(v188 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80));
      uint64_t v190 = *(void *)(v188 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1001C75E0(v0 + 16, v0 + 96);
        CheckedContinuation.resume(returning:)();
        v189 += v190;
        --v186;
      }
      while (v186);
      swift_bridgeObjectRelease_n();
      id v114 = v187;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    goto LABEL_82;
  }
  if (v116 != 1)
  {
LABEL_55:
    os_log_type_t typea = v55;
    uint64_t v122 = v0 + 1216;
    uint64_t v123 = *(void **)(v0 + 1824);
    sub_100254C14(v116, v117);
    static Logger.download.getter();
    sub_100254C14(v118, v119);
    sub_100254C14(v118, v119);
    id v124 = v123;
    sub_100254C14(v118, v119);
    id v125 = v124;
    sub_100254C14(v118, v119);
    id v126 = Logger.logObject.getter();
    os_log_type_t v127 = static os_log_type_t.error.getter();
    BOOL v128 = os_log_type_enabled(v126, v127);
    long long v129 = *(char **)(v0 + 1824);
    if (v128)
    {
      uint64_t v130 = swift_slowAlloc();
      long long v193 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v130 = 138412802;
      uint64_t v131 = *(void **)&v129[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey];
      *(void *)(v0 + 1672) = v131;
      id v132 = v131;
      uint64_t v122 = v0 + 1216;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v193 = v131;

      *(_WORD *)(v130 + 12) = 2114;
      sub_100254910();
      swift_allocError();
      *(void *)uint64_t v133 = v118;
      *(unsigned char *)(v133 + 8) = v119;
      sub_100254C14(v118, v119);
      uint64_t v134 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 1656) = v134;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v193[1] = v134;
      sub_100254C28(v118, v119);
      sub_100254C28(v118, v119);
      *(_WORD *)(v130 + 22) = 2114;
      swift_allocError();
      *(void *)uint64_t v135 = v118;
      *(unsigned char *)(v135 + 8) = v119;
      sub_100254C14(v118, v119);
      uint64_t v136 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 1680) = v136;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v193[2] = v136;
      sub_100254C28(v118, v119);
      sub_100254C28(v118, v119);
      _os_log_impl((void *)&_mh_execute_header, v126, v127, "[%@] Download failed: %{public}@, phase: %{public}@", (uint8_t *)v130, 0x20u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_100254C28(v118, v119);
      sub_100254C28(v118, v119);
      sub_100254C28(v118, v119);
      sub_100254C28(v118, v119);
    }
    char v145 = v126;
    uint64_t v146 = *(void *)(v0 + 1856);
    uint64_t v147 = *(void *)(v0 + 1832);
    uint64_t v148 = *(void *)(v0 + 1824);

    typea(v146, v147);
    uint64_t v149 = *(void *)(v148 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_download);
    sub_100254910();
    *(void *)(v0 + 1216) = swift_allocError();
    *(void *)uint64_t v150 = v118;
    *(unsigned char *)(v150 + 8) = v119;
    id v114 = (_OWORD *)(v0 + 1296);
    sub_100017238(v0 + 1296, v0 + 1224, &qword_1006666D0);
    *(unsigned char *)(v0 + 1288) = 2;
    uint64_t v151 = *(void *)(v149 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon8Download_storage);
    *(void *)(swift_task_alloc() + 16) = v122;
    sub_100254C14(v118, v119);
    os_unfair_lock_lock((os_unfair_lock_t)(v151 + 112));
    sub_100255798((void *)(v151 + 16), v209);
    os_unfair_lock_unlock((os_unfair_lock_t)(v151 + 112));
    uint64_t v152 = v209[0];
    swift_task_dealloc();
    uint64_t v153 = *(void *)(v152 + 16);
    if (v153)
    {
      uint64_t v154 = *(void *)(sub_1000172F8((uint64_t *)&unk_10065D3C0) - 8);
      uint64_t v155 = v152 + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80));
      uint64_t v156 = *(void *)(v154 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1001C75E0(v122, v0 + 1136);
        CheckedContinuation.resume(returning:)();
        v155 += v156;
        --v153;
      }
      while (v153);
      swift_bridgeObjectRelease_n();
      id v114 = (_OWORD *)(v0 + 1296);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_100254C28(v118, v119);
    sub_100254C28(v118, v119);
LABEL_82:
    sub_1001C7DE4(v122);
    sub_10001729C((uint64_t)v114, &qword_1006666D0);
    goto LABEL_71;
  }
  *(void *)(v0 + 1976) = *(void *)(*(void *)(v0 + 1824)
                                     + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_download);
  BOOL v120 = (void *)swift_task_alloc();
  *(void *)(v0 + 1984) = v120;
  void *v120 = v0;
  v120[1] = sub_10024F9F0;
  return sub_10033DBD4();
}

uint64_t sub_10024F9F0(char a1)
{
  *(unsigned char *)(*(void *)v1 + 89) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10024FAF0, 0, 0);
}

void sub_10024FAF0()
{
  uint64_t v66 = v0;
  uint64_t v1 = v0 + 1296;
  uint64_t v2 = *(void **)(v0 + 1824);
  if (*(unsigned char *)(v0 + 89))
  {
    static Logger.download.getter();
    id v3 = v2;
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = *(char **)(v0 + 1824);
    if (v6)
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v64 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412290;
      id v9 = *(void **)&v7[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey];
      *(void *)(v0 + 1696) = v9;
      id v10 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v64 = v9;

      _os_log_impl((void *)&_mh_execute_header, v4, v5, "[%@] Network changed, will retry immediately", v8, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v19 = *(void *)(v0 + 1968);
    (*(void (**)(void, void))(v0 + 1952))(*(void *)(v0 + 1888), *(void *)(v0 + 1832));
    sub_10024ADB4(v0 + 1296);
    uint64_t v20 = v19;
    sub_10001729C(v0 + 1296, &qword_1006666D0);
    if (v19)
    {
      id v21 = *(void **)(v0 + 1824);
      static Logger.download.getter();
      id v22 = v21;
      swift_errorRetain();
      id v23 = v22;
      swift_errorRetain();
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.error.getter();
      int v26 = v25;
      BOOL v27 = os_log_type_enabled(v24, v25);
      id v28 = *(char **)(v0 + 1824);
      if (v27)
      {
        uint64_t v29 = swift_slowAlloc();
        os_log_type_t v30 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v29 = 138412546;
        LODWORD(type) = v26;
        BOOL v31 = *(void **)&v28[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey];
        *(void *)(v0 + 1720) = v31;
        id v32 = v31;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *os_log_type_t v30 = v31;

        *(_WORD *)(v29 + 12) = 2114;
        swift_errorRetain();
        uint64_t v33 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v0 + 1712) = v33;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v30[1] = v33;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)type, "[%@] Error occurred while handling download task completion: %{public}@", (uint8_t *)v29, 0x16u);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
      }
      id v43 = *(os_unfair_lock_s **)(v0 + 1960);
      uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v0 + 1952);
      uint64_t v45 = *(void *)(v0 + 1848);
      uint64_t v46 = *(void *)(v0 + 1832);

      v44(v45, v46);
      *(void *)(swift_task_alloc() + 16) = v20;
      os_unfair_lock_lock(v43 + 25);
      sub_100254BE0((uint64_t)&v43[4]);
      os_unfair_lock_unlock(v43 + 25);
      uint64_t v47 = *(void *)(v0 + 1824);
      swift_task_dealloc();
      uint64_t v48 = *(void *)(v47 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_download);
      *(void *)(v0 + 176) = v20;
      *(_OWORD *)(v0 + 184) = 0u;
      *(_OWORD *)(v0 + 200) = 0u;
      *(_OWORD *)(v0 + 216) = 0u;
      *(_OWORD *)(v0 + 232) = 0u;
      *(unsigned char *)(v0 + 248) = 2;
      uint64_t v49 = *(os_unfair_lock_s **)(v48 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon8Download_storage);
      *(void *)(swift_task_alloc() + 16) = v0 + 176;
      long long v50 = v49 + 4;
      v49 += 28;
      swift_errorRetain();
      os_unfair_lock_lock(v49);
      sub_100254BF8(v50, v65);
      os_unfair_lock_unlock(v49);
      uint64_t v51 = v65[0];
      swift_task_dealloc();
      uint64_t v52 = *(void *)(v51 + 16);
      if (v52)
      {
        uint64_t v53 = *(void *)(sub_1000172F8((uint64_t *)&unk_10065D3C0) - 8);
        uint64_t v54 = v51 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
        uint64_t v55 = *(void *)(v53 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1001C75E0(v0 + 176, v0 + 256);
          CheckedContinuation.resume(returning:)();
          v54 += v55;
          --v52;
        }
        while (v52);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_errorRelease();
      sub_1001C7DE4(v0 + 176);
    }
    goto LABEL_23;
  }
  static Logger.download.getter();
  id v11 = v2;
  id v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.error.getter();
  BOOL v14 = os_log_type_enabled(v12, v13);
  BOOL v15 = *(char **)(v0 + 1824);
  if (v14)
  {
    id v16 = (uint8_t *)swift_slowAlloc();
    os_log_type_t type = (void *)swift_slowAlloc();
    *(_DWORD *)id v16 = 138412290;
    uint64_t v17 = *(void **)&v15[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey];
    *(void *)(v0 + 1688) = v17;
    id v18 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t type = v17;
    uint64_t v1 = v0 + 1296;

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[%@] Network changed, will retry later", v16, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v34 = *(void *)(v0 + 1976);
  uint64_t v35 = *(void *)(v0 + 1968);
  (*(void (**)(void, void))(v0 + 1952))(*(void *)(v0 + 1880), *(void *)(v0 + 1832));
  sub_100017238(v1, v0 + 816, &qword_1006666D0);
  *(unsigned char *)(v0 + 888) = 1;
  uint64_t v36 = *(os_unfair_lock_s **)(v34 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon8Download_storage);
  *(void *)(swift_task_alloc() + 16) = v0 + 816;
  uint64_t v37 = v36 + 4;
  v36 += 28;
  os_unfair_lock_lock(v36);
  sub_100255798(v37, v65);
  os_unfair_lock_unlock(v36);
  if (!v35)
  {
    uint64_t v38 = v65[0];
    swift_task_dealloc();
    uint64_t v39 = *(void *)(v38 + 16);
    if (v39)
    {
      uint64_t v40 = *(void *)(sub_1000172F8((uint64_t *)&unk_10065D3C0) - 8);
      uint64_t v41 = v38 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
      uint64_t v42 = *(void *)(v40 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1001C75E0(v0 + 816, v0 + 1056);
        CheckedContinuation.resume(returning:)();
        v41 += v42;
        --v39;
      }
      while (v39);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_1001C7DE4(v0 + 816);
    sub_10001729C(v1, &qword_1006666D0);
LABEL_23:
    uint64_t v56 = *(void *)(v0 + 1960);
    uint64_t v57 = (os_unfair_lock_s *)(v56 + 100);
    uint64_t v58 = (id *)(v56 + 16);
    objc_msgSend(*(id *)(v0 + 1800), "finishTasksAndInvalidate", type);
    os_unfair_lock_lock(v57);
    sub_1002505E4(v58);
    os_unfair_lock_unlock(v57);
    char v59 = *(os_unfair_lock_s **)(v0 + 1960);
    int v60 = v59 + 25;
    uint64_t v61 = (uint64_t)&v59[4];
    sub_10001729C(v0 + 1536, (uint64_t *)&unk_10065D300);
    os_unfair_lock_lock(v60);
    sub_100252858(v61);
    os_unfair_lock_unlock(v60);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v62 = *(void (**)(void))(v0 + 8);
    v62();
  }
}

uint64_t sub_100250574@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(a1 + 80);
  return sub_100017238(a1 + 8, (uint64_t)(a2 + 8), (uint64_t *)&unk_10065D300);
}

uint64_t sub_1002505B4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 56);
  return swift_errorRetain();
}

void sub_1002505E4(id *a1)
{
  *a1 = 0;
  a1[8] = 0;
}

uint64_t sub_100250628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[27] = a4;
  v5[28] = v4;
  v5[26] = a1;
  return _swift_task_switch(sub_10025064C, 0, 0);
}

uint64_t sub_10025064C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 224) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_download)
     + OBJC_IVAR____TtC28ManagedAppDistributionDaemon8Download_request;
  uint64_t v2 = (int *)type metadata accessor for DownloadRequest();
  sub_100017238(v1 + v2[16], v0 + 128, &qword_10065D3A0);
  if (*(void *)(v0 + 152))
  {
    sub_10018B164((long long *)(v0 + 128), v0 + 88);
    id v3 = (uint64_t *)(v1 + v2[17]);
    unint64_t v4 = v3[1];
    if (v4)
    {
      uint64_t v5 = *(void *)(v0 + 224);
      uint64_t v6 = *v3;
      sub_10019B17C(v0 + 88, v0 + 168);
      char v7 = *(unsigned char *)(v1 + v2[18]);
      uint64_t v8 = *(void **)(v5 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey);
      id v9 = self;
      swift_bridgeObjectRetain();
      id v10 = v8;
      id v11 = [v9 ephemeralSessionConfiguration];
      [v11 setHTTPShouldSetCookies:0];
      [v11 setHTTPCookieAcceptPolicy:1];
      [v11 setRequestCachePolicy:1];
      sub_100373694(1);
      id v12 = [self sessionWithConfiguration:v11];

      type metadata accessor for PlainHTTP();
      uint64_t v13 = swift_allocObject();
      *(unsigned char *)(v13 + 24) = 0;
      *(void *)(v13 + 16) = v12;
      type metadata accessor for DecoratedHTTP();
      *(void *)(v0 + 232) = swift_initStackObject();
      *(void *)(v0 + 240) = sub_1002C20CC(v13, v0 + 168, v6, v4, v7, v10);
      BOOL v14 = (void *)swift_task_alloc();
      *(void *)(v0 + 248) = v14;
      *BOOL v14 = v0;
      v14[1] = sub_100250988;
      uint64_t v15 = *(void *)(v0 + 208);
      uint64_t v16 = *(void *)(v0 + 216);
      return sub_1002C1A88(v15, v16);
    }
    sub_100014524(v0 + 88);
  }
  else
  {
    sub_10001729C(v0 + 128, &qword_10065D3A0);
  }
  uint64_t v18 = *(void *)(v0 + 208);
  uint64_t v19 = *(void *)(v0 + 216);
  uint64_t v20 = type metadata accessor for URLRequest();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v18, v19, v20);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  id v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_100250988()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100250AA0, 0, 0);
}

uint64_t sub_100250AA0()
{
  uint64_t v1 = *(void *)(v0 + 208);
  sub_100014524(v0 + 88);
  uint64_t v2 = type metadata accessor for URLRequest();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100250CDC(void *a1, void *a2, uint64_t a3, const void *a4, void *a5)
{
  v5[3] = a2;
  v5[4] = a5;
  v5[2] = a1;
  uint64_t v10 = type metadata accessor for URLRequest();
  v5[5] = v10;
  v5[6] = *(void *)(v10 - 8);
  uint64_t v11 = swift_task_alloc();
  v5[7] = v11;
  sub_1000172F8(&qword_10065D390);
  v5[8] = swift_task_alloc();
  uint64_t v12 = swift_task_alloc();
  v5[9] = v12;
  v5[10] = _Block_copy(a4);
  static URLRequest._unconditionallyBridgeFromObjectiveC(_:)();
  id v13 = a1;
  id v14 = a2;
  id v15 = a5;
  uint64_t v16 = (void *)swift_task_alloc();
  v5[11] = v16;
  *uint64_t v16 = v5;
  v16[1] = sub_100250E8C;
  v16[27] = v11;
  v16[28] = v15;
  v16[26] = v12;
  return _swift_task_switch(sub_10025064C, 0, 0);
}

uint64_t sub_100250E8C()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v17 = *(void *)(*v0 + 72);
  uint64_t v2 = *(void *)(*v0 + 64);
  uint64_t v3 = *(void *)(*v0 + 56);
  uint64_t v4 = *(void *)(*v0 + 48);
  uint64_t v5 = *(void *)(*v0 + 40);
  uint64_t v6 = *(void **)(*v0 + 32);
  char v7 = *(void **)(*v0 + 24);
  uint64_t v8 = *(void **)(*v0 + 16);
  uint64_t v9 = *v0;
  swift_task_dealloc();

  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v10(v3, v5);
  sub_10001733C(v17, v2, &qword_10065D390);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v5) == 1)
  {
    Class isa = 0;
  }
  else
  {
    uint64_t v12 = v1[8];
    uint64_t v13 = v1[5];
    Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
    v10(v12, v13);
  }
  id v14 = (void (**)(void, void))v1[10];
  ((void (**)(void, Class))v14)[2](v14, isa);
  _Block_release(v14);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v15 = *(uint64_t (**)(void))(v9 + 8);
  return v15();
}

void *sub_100251118()
{
  id result = (void *)sub_100251138();
  off_10065D120 = result;
  return result;
}

uint64_t sub_100251138()
{
  sub_1000172F8(&qword_10065D360);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1005A3FC0;
  strcpy((char *)(v0 + 32), "accept-ranges");
  *(_WORD *)(v0 + 46) = -4864;
  strcpy((char *)(v0 + 48), "content-type");
  *(unsigned char *)(v0 + 61) = 0;
  *(_WORD *)(v0 + 62) = -5120;
  strcpy((char *)(v0 + 64), "content-length");
  *(unsigned char *)(v0 + 79) = -18;
  strcpy((char *)(v0 + 80), "content-range");
  *(_WORD *)(v0 + 94) = -4864;
  if (os_variant_has_internal_content())
  {
    uint64_t v0 = (uint64_t)sub_10028ED9C((void *)1, 5, 1, (void *)v0);
    *(void *)(v0 + 16) = 5;
    *(void *)(v0 + 96) = 0xD00000000000001ELL;
    *(void *)(v0 + 104) = 0x80000001005BA0E0;
  }
  return v0;
}

uint64_t sub_100251238()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000172F8(&qword_10065B650);
  __chkstk_darwin(v2 - 8);
  uint64_t v74 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URLComponents();
  uint64_t v75 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v76 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000172F8(&qword_10065C3C0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v71 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v71 - v9;
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  id v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v77 = (char *)&v71 - v16;
  self;
  uint64_t v17 = swift_dynamicCastObjCClass();
  if (v17)
  {
    uint64_t v18 = (void *)v17;
    uint64_t v72 = v4;
    uint64_t v73 = (void (**)(void, uint64_t))v0;
    uint64_t v79 = 0x203A737574617473;
    unint64_t v80 = 0xE800000000000000;
    id v19 = v0;
    id v78 = [v18 statusCode];
    v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    uint64_t v22 = v79;
    unint64_t v21 = v80;
    uint64_t v23 = sub_10028ED9C(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v25 = v23[2];
    unint64_t v24 = v23[3];
    if (v25 >= v24 >> 1) {
      uint64_t v23 = sub_10028ED9C((void *)(v24 > 1), v25 + 1, 1, v23);
    }
    v23[2] = v25 + 1;
    int v26 = &v23[2 * v25];
    v26[4] = v22;
    v26[5] = v21;

    uint64_t v4 = v72;
    uint64_t v1 = v73;
  }
  else
  {
    uint64_t v23 = _swiftEmptyArrayStorage;
  }
  id v27 = [v1 URL];
  if (!v27)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_11;
  }
  id v28 = v27;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v29(v10, v15, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  os_log_type_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v30(v10, 1, v11) == 1)
  {
LABEL_11:
    uint64_t v37 = &qword_10065C3C0;
    uint64_t v38 = (uint64_t)v10;
    goto LABEL_12;
  }
  uint64_t v73 = (void (**)(void, uint64_t))v12;
  uint64_t v31 = v4;
  id v32 = v77;
  v29(v77, v10, v11);
  uint64_t v33 = v32;
  uint64_t v34 = v31;
  uint64_t v35 = v74;
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  uint64_t v36 = v75;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v35, 1, v31) == 1)
  {
    ((void (**)(char *, uint64_t))v73)[1](v33, v11);
    uint64_t v37 = &qword_10065B650;
    uint64_t v38 = (uint64_t)v35;
LABEL_12:
    sub_10001729C(v38, v37);
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v76, v35, v31);
  URLComponents.query.getter();
  uint64_t v57 = v56;
  swift_bridgeObjectRelease();
  uint64_t v58 = v73;
  if (v57) {
    URLComponents.query.setter();
  }
  uint64_t v59 = (uint64_t)v71;
  URLComponents.url.getter();
  if (v30((char *)v59, 1, v11) == 1)
  {
    sub_10001729C(v59, &qword_10065C3C0);
    int v60 = v76;
  }
  else
  {
    uint64_t v61 = URL.absoluteString.getter();
    uint64_t v63 = v62;
    v58[1](v59, v11);
    uint64_t v79 = 0x203A6C7275;
    unint64_t v80 = 0xE500000000000000;
    v64._countAndFlagsBits = v61;
    v64._object = v63;
    String.append(_:)(v64);
    swift_bridgeObjectRelease();
    uint64_t v65 = v79;
    unint64_t v66 = v80;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v23 = sub_10028ED9C(0, v23[2] + 1, 1, v23);
    }
    int v60 = v76;
    unint64_t v68 = v23[2];
    unint64_t v67 = v23[3];
    if (v68 >= v67 >> 1)
    {
      uint64_t v70 = sub_10028ED9C((void *)(v67 > 1), v68 + 1, 1, v23);
      int v60 = v76;
      uint64_t v23 = v70;
    }
    v23[2] = v68 + 1;
    uint64_t v69 = &v23[2 * v68];
    void v69[4] = v65;
    v69[5] = v66;
  }
  (*(void (**)(char *, uint64_t))(v36 + 8))(v60, v34);
  ((void (**)(char *, uint64_t))v58)[1](v77, v11);
LABEL_13:
  id v39 = [v1 _allHTTPHeaderFieldsAsArrays];
  if (v39)
  {
    uint64_t v40 = v39;
    sub_1000172F8((uint64_t *)&unk_10065C5D0);
    uint64_t v41 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v41 = sub_10044BF78((uint64_t)_swiftEmptyArrayStorage);
  }
  uint64_t v42 = swift_bridgeObjectRetain();
  uint64_t v79 = sub_100251A48(v42);
  swift_bridgeObjectRetain();
  sub_100252AEC(&v79);
  swift_bridgeObjectRelease();
  uint64_t v43 = v79;
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_1002538E4(v43, v41);
  swift_release();
  swift_bridgeObjectRelease_n();
  uint64_t v79 = (uint64_t)v44;
  sub_1000172F8((uint64_t *)&unk_10065C5D0);
  sub_10000DDFC((unint64_t *)&qword_10065D350, (uint64_t *)&unk_10065C5D0);
  uint64_t v45 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v47 = v46;
  swift_bridgeObjectRelease();
  uint64_t v79 = 0x3A73726564616568;
  unint64_t v80 = 0xE90000000000000ALL;
  v48._countAndFlagsBits = v45;
  v48._object = v47;
  String.append(_:)(v48);
  swift_bridgeObjectRelease();
  uint64_t v49 = v79;
  unint64_t v50 = v80;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v23 = sub_10028ED9C(0, v23[2] + 1, 1, v23);
  }
  unint64_t v52 = v23[2];
  unint64_t v51 = v23[3];
  if (v52 >= v51 >> 1) {
    uint64_t v23 = sub_10028ED9C((void *)(v51 > 1), v52 + 1, 1, v23);
  }
  v23[2] = v52 + 1;
  uint64_t v53 = &v23[2 * v52];
  v53[4] = v49;
  v53[5] = v50;
  uint64_t v79 = (uint64_t)v23;
  uint64_t v54 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v54;
}

uint64_t sub_100251A48(uint64_t a1)
{
  int64_t v1 = 0;
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v3 = v4;
  uint64_t v5 = 1 << *(unsigned char *)(result - 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v3;
  uint64_t v31 = result;
  int64_t v32 = (unint64_t)(v5 + 63) >> 6;
  os_log_type_t v30 = _swiftEmptyArrayStorage;
  if ((v6 & v3) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  while (2)
  {
    int64_t v10 = v1 + 1;
    if (!__OFADD__(v1, 1))
    {
      if (v10 < v32)
      {
        unint64_t v11 = *(void *)(v31 + 8 * v10);
        ++v1;
        if (v11) {
          goto LABEL_21;
        }
        int64_t v1 = v10 + 1;
        if (v10 + 1 >= v32) {
          goto LABEL_46;
        }
        unint64_t v11 = *(void *)(v31 + 8 * v1);
        if (v11) {
          goto LABEL_21;
        }
        int64_t v1 = v10 + 2;
        if (v10 + 2 >= v32) {
          goto LABEL_46;
        }
        unint64_t v11 = *(void *)(v31 + 8 * v1);
        if (v11) {
          goto LABEL_21;
        }
        int64_t v1 = v10 + 3;
        if (v10 + 3 >= v32) {
          goto LABEL_46;
        }
        unint64_t v11 = *(void *)(v31 + 8 * v1);
        if (v11)
        {
LABEL_21:
          unint64_t v7 = (v11 - 1) & v11;
          for (unint64_t i = __clz(__rbit64(v11)) + (v1 << 6); ; unint64_t i = v8 | (v1 << 6))
          {
            int64_t v34 = v1;
            uint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
            uint64_t v15 = *v13;
            uint64_t v14 = v13[1];
            uint64_t v16 = qword_10065B0D0;
            swift_bridgeObjectRetain();
            if (v16 != -1) {
              swift_once();
            }
            uint64_t v17 = (char *)off_10065D120;
            Swift::String v18 = String.lowercased()();
            uint64_t v19 = *((void *)v17 + 2);
            if (!v19) {
              goto LABEL_5;
            }
            if (*((void *)v17 + 4) != v18._countAndFlagsBits || (void *)*((void *)v17 + 5) != v18._object)
            {
              uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
              if ((result & 1) == 0) {
                break;
              }
            }
LABEL_40:
            swift_bridgeObjectRelease();
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v25 = v30;
            if ((result & 1) == 0)
            {
              uint64_t result = sub_100455C1C(0, v30[2] + 1, 1);
              unint64_t v25 = v30;
            }
            int v26 = v25;
            unint64_t v28 = v25[2];
            unint64_t v27 = v25[3];
            if (v28 >= v27 >> 1)
            {
              uint64_t result = sub_100455C1C(v27 > 1, v28 + 1, 1);
              int v26 = v30;
            }
            _OWORD v26[2] = v28 + 1;
            os_log_type_t v30 = v26;
            uint64_t v29 = &v26[2 * v28];
            v29[4] = v15;
            v29[5] = v14;
            int64_t v1 = v34;
            if (!v7) {
              goto LABEL_7;
            }
LABEL_6:
            unint64_t v8 = __clz(__rbit64(v7));
            v7 &= v7 - 1;
          }
          if (v19 != 1)
          {
            unint64_t v21 = (void **)(v17 + 56);
            uint64_t v22 = 1;
            while (1)
            {
              uint64_t v23 = v22 + 1;
              if (__OFADD__(v22, 1)) {
                break;
              }
              if (*(v21 - 1) == (void *)v18._countAndFlagsBits && *v21 == v18._object) {
                goto LABEL_40;
              }
              uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
              if (result) {
                goto LABEL_40;
              }
              v21 += 2;
              ++v22;
              if (v23 == v19) {
                goto LABEL_5;
              }
            }
            __break(1u);
            break;
          }
LABEL_5:
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          int64_t v1 = v34;
          if (!v7) {
            continue;
          }
          goto LABEL_6;
        }
        int64_t v12 = v10 + 4;
        if (v12 < v32)
        {
          unint64_t v11 = *(void *)(v31 + 8 * v12);
          int64_t v1 = v12;
          if (!v11)
          {
            while (1)
            {
              int64_t v1 = v12 + 1;
              if (__OFADD__(v12, 1)) {
                goto LABEL_49;
              }
              if (v1 >= v32) {
                goto LABEL_46;
              }
              unint64_t v11 = *(void *)(v31 + 8 * v1);
              ++v12;
              if (v11) {
                goto LABEL_21;
              }
            }
          }
          goto LABEL_21;
        }
      }
LABEL_46:
      swift_release();
      return (uint64_t)v30;
    }
    break;
  }
  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_100251D64(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)(a2 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey);
  id v4 = [v3 description];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v7 = v6;

  v8._countAndFlagsBits = v5;
  v8._object = v7;
  String.append(_:)(v8);

  swift_bridgeObjectRelease();
  type metadata accessor for Transaction();
  swift_allocObject();
  uint64_t v9 = sub_1005160BC(0x64616F6C6E776F44, 0xE90000000000002FLL);
  uint64_t result = swift_release();
  *(void *)(a1 + 72) = v9;
  return result;
}

uint64_t sub_100251E54@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  if (*(unsigned char *)(result + 80) == 1) {
    *a2 = *(unsigned char *)(result + 48);
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_100251E70(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 80) = 3;
  sub_100254910();
  uint64_t v4 = swift_allocError();
  *(void *)uint64_t v5 = a2;
  *(unsigned char *)(v5 + 8) = 0;
  uint64_t result = swift_errorRelease();
  *(void *)(a1 + 56) = v4;
  return result;
}

uint64_t sub_100251EE0(uint64_t a1)
{
  *(unsigned char *)(a1 + 80) = 3;
  sub_100254910();
  uint64_t v2 = swift_allocError();
  *(void *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 8) = 2;
  uint64_t result = swift_errorRelease();
  *(void *)(a1 + 56) = v2;
  return result;
}

uint64_t sub_100251F50(uint64_t result)
{
  *(unsigned char *)(result + 80) = 5;
  return result;
}

uint64_t sub_1002520F4(void *a1, void *a2, void *a3, void *aBlock, void *a5)
{
  v5[4] = a3;
  v5[5] = a5;
  v5[2] = a1;
  v5[3] = a2;
  v5[6] = _Block_copy(aBlock);
  uint64_t v15 = (uint64_t (*)(uint64_t))((char *)&dword_10065D330 + dword_10065D330);
  id v10 = a1;
  id v11 = a2;
  id v12 = a3;
  a5;
  uint64_t v13 = (void *)swift_task_alloc();
  v5[7] = v13;
  *uint64_t v13 = v5;
  v13[1] = sub_1002521E8;
  return v15((uint64_t)v12);
}

uint64_t sub_1002521E8(uint64_t a1)
{
  uint64_t v3 = *(void (***)(void, void))(*v1 + 48);
  uint64_t v4 = *(void **)(*v1 + 40);
  uint64_t v5 = *(void **)(*v1 + 32);
  uint64_t v6 = *(void **)(*v1 + 24);
  unint64_t v7 = *(void **)(*v1 + 16);
  uint64_t v10 = *v1;
  swift_task_dealloc();

  v3[2](v3, a1);
  _Block_release(v3);
  Swift::String v8 = *(uint64_t (**)(void))(v10 + 8);
  return v8();
}

uint64_t sub_100252380(uint64_t a1, unsigned char *a2, uint64_t a3, unint64_t a4, uint8_t *a5)
{
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + 80) == 5)
  {
    sub_100017238(a1 + 8, (uint64_t)v36, (uint64_t *)&unk_10065D300);
    uint64_t v15 = v36[3];
    uint64_t result = sub_10001729C((uint64_t)v36, (uint64_t *)&unk_10065D300);
    if (v15)
    {
      uint64_t v17 = *(void *)(a1 + 32);
      if (!v17) {
        return result;
      }
      uint64_t v35 = a5;
      uint64_t v37 = v5;
      uint64_t v18 = *(void *)(a1 + 40);
      sub_100239C90(a1 + 8, v17);
      uint64_t v19 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v18 + 16);
      sub_100012670(a3, a4);
      uint64_t v20 = v37;
      uint64_t result = v19(a3, a4, v17, v18);
      if (v20)
      {
        uint64_t v22 = v20;
        a5 = v35;
LABEL_12:
        *(unsigned char *)(a1 + 80) = 3;
        swift_errorRetain();
        swift_errorRelease();
        *(void *)(a1 + 56) = v22;
        [(uint8_t *)a5 cancel];
        return swift_errorRelease();
      }
      unint64_t v29 = v21;
      a5 = v35;
      if (v21 >> 60 != 15)
      {
        uint64_t v30 = result;
        sub_10018AC60(&a2[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer], *(void *)&a2[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer + 24]);
        char v31 = sub_1003C8C4C(v30, v29);
        char v32 = v31;
        uint64_t result = sub_10018AE44(v30, v29);
        if (v32)
        {
LABEL_17:
          if ((a2[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_verifyEntireFile] & 1) == 0)
          {
            *(unsigned char *)(a1 + 80) = 2;
            return (uint64_t)[(uint8_t *)a5 cancel];
          }
        }
      }
    }
    else
    {
      sub_10018AC60(&a2[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer], *(void *)&a2[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer + 24]);
      uint64_t result = sub_1003C8C4C(a3, a4);
      if (v5)
      {
        uint64_t v22 = v5;
        goto LABEL_12;
      }
      if (result) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    static Logger.download.getter();
    uint64_t v23 = a2;
    unint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v24, v25))
    {
      int v26 = (uint8_t *)swift_slowAlloc();
      int64_t v34 = (void *)swift_slowAlloc();
      uint64_t v37 = v5;
      uint64_t v35 = v26;
      *(_DWORD *)int v26 = 138412290;
      uint64_t v33 = v26 + 4;
      unint64_t v27 = *(Class *)((char *)&v23->isa + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey);
      v36[0] = v27;
      id v28 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *int64_t v34 = v27;

      _os_log_impl((void *)&_mh_execute_header, v24, v25, "[%@] Download state not running, ignoring received data", v35, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      unint64_t v24 = v23;
    }

    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return result;
}

uint64_t sub_100252838(uint64_t a1)
{
  return sub_100252380(a1, *(unsigned char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(uint8_t **)(v1 + 40));
}

uint64_t sub_100252858(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(a1 + 72) = 0;
  return result;
}

uint64_t sub_100252890()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = (void *)v0[6];
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *unint64_t v7 = v1;
  v7[1] = sub_10000B238;
  Swift::String v8 = (uint64_t (*)(void *, void *, void *, void *, void *))((char *)&dword_10065D310 + dword_10065D310);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t sub_10025295C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1000176B4;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_100663B50 + dword_100663B50);
  return v6(v2, v3, v4);
}

uint64_t sub_100252A20(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_1000176B4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_100663B60 + dword_100663B60);
  return v8(a1, v4, v5, v6);
}

Swift::Int sub_100252AEC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1002538D0(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_100252B58(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_100252B58(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_100253244(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  Swift::Int v105 = result;
  unint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_118:
      uint64_t v94 = v11;
      id v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_100253314((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_1002538A8((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v104[2] = 0;
      return swift_bridgeObjectRelease();
    }
    id v104 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v7 + 16) = v6;
    id v104 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v106 = v3;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    unint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ _stringCompareWithSmolCheck(_:_:expecting:)()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      Swift::Int v22 = v20 + 1;
      Swift::Int v9 = v20;
      Swift::Int v20 = v22;
    }
    while (v22 < v3);
    Swift::Int v20 = v22;
LABEL_36:
    Swift::Int v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        Swift::Int v27 = v20;
        Swift::Int v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      Swift::Int v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1002535B0(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_1002535B0((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      Swift::Int v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        unint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_100253314((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        Swift::Int v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    Swift::Int v32 = v3;
  }
  else {
    Swift::Int v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        int64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        Swift::Int v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      Swift::Int v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100253244(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    Swift::Int v9 = (uint64_t *)(v7 + 16 * v4);
    Swift::Int result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      Swift::Int result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100253314(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  Swift::Int v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      Swift::Int v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          Swift::Int v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            Swift::Int v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      Swift::Int v27 = v7;
    }
LABEL_50:
    sub_1002537EC((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1002535B0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000172F8(&qword_10065D358);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1002536AC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for ApprovedDeveloper();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1002537EC(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_1002538A8(uint64_t a1)
{
  return sub_1002535B0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1002538BC(void *a1)
{
  return sub_100456A70(0, a1[2], 0, a1);
}

uint64_t sub_1002538D0(uint64_t a1)
{
  return sub_100456170(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_1002538E4(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_100455C1C(0, v2, 0);
    uint64_t v5 = (void **)(a1 + 40);
    do
    {
      uint64_t v7 = (uint64_t)*(v5 - 1);
      unint64_t v6 = *v5;
      swift_bridgeObjectRetain();
      v8._countAndFlagsBits = v7;
      v8._object = v6;
      String.append(_:)(v8);
      v9._countAndFlagsBits = 8250;
      v9._object = (void *)0xE200000000000000;
      String.append(_:)(v9);
      if (*(void *)(a2 + 16))
      {
        swift_bridgeObjectRetain();
        sub_100016D20(v7, (uint64_t)v6);
        if (v10) {
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
      }
      sub_1000172F8((uint64_t *)&unk_10065C5D0);
      sub_10000DDFC((unint64_t *)&qword_10065D350, (uint64_t *)&unk_10065C5D0);
      uint64_t v11 = BidirectionalCollection<>.joined(separator:)();
      uint64_t v13 = v12;
      swift_bridgeObjectRelease();
      v14._countAndFlagsBits = v11;
      v14._object = v13;
      String.append(_:)(v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v16 = _swiftEmptyArrayStorage[2];
      unint64_t v15 = _swiftEmptyArrayStorage[3];
      if (v16 >= v15 >> 1) {
        sub_100455C1C(v15 > 1, v16 + 1, 1);
      }
      v5 += 2;
      _swiftEmptyArrayStorage[2] = v16 + 1;
      uint64_t v17 = &_swiftEmptyArrayStorage[2 * v16];
      v17[4] = 8224;
      v17[5] = 0xE200000000000000;
      --v2;
    }
    while (v2);
  }
  return _swiftEmptyArrayStorage;
}

id sub_100253AD8(uint64_t a1)
{
  int64_t v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_state;
  char v20 = 0;
  memset(v19, 0, sizeof(v19));
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v21 = 0;
  char v24 = 1;
  sub_1000172F8((uint64_t *)&unk_10065D430);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 100) = 0;
  sub_1002550F0((uint64_t)v19, v6 + 16);
  uint64_t v7 = v2;
  sub_100255128((uint64_t)v19);
  *(void *)&v2[v5] = v6;
  *(void *)&v7[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_download] = a1;
  uint64_t v8 = a1 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon8Download_request;
  Swift::String v9 = (int *)type metadata accessor for DownloadRequest();
  sub_10019B17C(v8 + v9[7], (uint64_t)&v7[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer]);
  BOOL v10 = 0;
  uint64_t v11 = *(void **)(v8 + v9[8]);
  *(void *)&v7[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey] = v11;
  uint64_t v12 = v8 + v9[12];
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = *(void *)(v12 + 40);
  if (v13 != 1 && v14 != 0) {
    BOOL v10 = *(void *)(v14 + 16) == 1;
  }
  v7[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_verifyEntireFile] = v10;
  swift_retain();
  id v16 = v11;

  v18.receiver = v7;
  v18.super_class = ObjectType;
  return objc_msgSendSuper2(&v18, "init");
}

uint64_t sub_100253C38(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  uint64_t v3 = type metadata accessor for Logger();
  v2[14] = v3;
  v2[15] = *(void *)(v3 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  return _swift_task_switch(sub_100253D2C, 0, 0);
}

void *sub_100253D2C()
{
  uint64_t v92 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0[13];
  uint64_t v3 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_state);
  *(void *)(swift_task_alloc() + 16) = v2;
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 25;
  os_unfair_lock_lock(v3 + 25);
  sub_100254874((uint64_t)&v3[4]);
  os_unfair_lock_unlock(v3 + 25);
  uint64_t v6 = (void *)v1[12];
  uint64_t v7 = (void *)v1[13];
  swift_task_dealloc();
  static Logger.download.getter();
  id v8 = v7;
  id v9 = v6;
  id v10 = v8;
  id v11 = v9;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t type = static os_log_type_t.default.getter();
  BOOL v13 = os_log_type_enabled(v12, type);
  uint64_t v14 = v1[20];
  uint64_t v15 = v1[15];
  uint64_t v89 = v1[14];
  uint64_t v17 = (void *)v1[12];
  id v16 = (char *)v1[13];
  if (v13)
  {
    os_unfair_lock_t locka = v5;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v79 = (void *)swift_slowAlloc();
    v91[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 138412546;
    os_log_t log = v12;
    int v19 = *(void **)&v16[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey];
    v1[10] = v19;
    id v20 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v79 = v19;

    *(_WORD *)(v18 + 12) = 2082;
    uint64_t v21 = sub_100251238();
    v1[11] = sub_1000143F4(v21, v22, v91);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, log, type, "[%@] Received response: %{public}s", (uint8_t *)v18, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v5 = locka;
    swift_slowDealloc();

    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v23(v14, v89);
  }
  else
  {

    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v23(v14, v89);
  }
  os_unfair_lock_lock(v5);
  sub_100251E54(v4, v91);
  os_unfair_lock_unlock(v5);
  char v24 = v91[0];
  self;
  uint64_t result = (void *)swift_dynamicCastObjCClass();
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v26 = (uint64_t)[result statusCode];
  uint64_t v27 = v26;
  if (v26 >= 400)
  {
    uint64_t v86 = v4;
    unint64_t v40 = (void *)v1[13];
    static Logger.download.getter();
    id v41 = v40;
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.error.getter();
    BOOL v44 = os_log_type_enabled(v42, v43);
    uint64_t v45 = (char *)v1[13];
    if (v44)
    {
      uint64_t v81 = v42;
      uint64_t v46 = v1 + 6;
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      char v48 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 138412290;
      uint64_t v88 = v1;
      uint64_t v49 = *(void **)&v45[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey];
      *uint64_t v46 = v49;
      id v50 = v49;
      uint64_t v42 = v81;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *char v48 = v49;
      uint64_t v1 = v88;

      _os_log_impl((void *)&_mh_execute_header, v81, v43, "[%@] Invalid status code, failing download", v47, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    v23(v1[19], v1[14]);
    *(void *)(swift_task_alloc() + 16) = v27;
    os_unfair_lock_lock(v5);
    sub_100254890(v86);
    os_unfair_lock_unlock(v5);
    swift_task_dealloc();
    goto LABEL_28;
  }
  char v28 = v24 ^ 1;
  if (v26 == 206) {
    char v28 = 1;
  }
  if ((v28 & 1) == 0)
  {
    uint64_t v90 = v1 + 7;
    uint64_t v85 = v4;
    uint64_t v29 = v1 + 9;
    uint64_t v30 = (void *)v1[13];
    static Logger.download.getter();
    id v31 = v30;
    Swift::Int v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    BOOL v34 = os_log_type_enabled(v32, v33);
    uint64_t v35 = (char *)v1[13];
    uint64_t v87 = v1;
    lock = v5;
    if (v34)
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      Swift::Int v37 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 138412290;
      uint64_t v38 = *(void **)&v35[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey];
      *uint64_t v29 = v38;
      id v39 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *Swift::Int v37 = v38;
      uint64_t v1 = v87;

      _os_log_impl((void *)&_mh_execute_header, v32, v33, "[%@] Expected partial content, truncating consumer", v36, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v51 = v1[13];
    v23(v1[18], v1[14]);
    uint64_t v52 = (void *)(v51 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer);
    sub_10018AC60((void *)(v51 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer), *(void *)(v51 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_consumer + 24));
    sub_1003C9A9C();
    uint64_t v53 = *sub_10018AC60(v52, v52[3]);
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = 0;
    *(unsigned char *)(v54 + 24) = 0;
    uint64_t v55 = swift_task_alloc();
    *(void *)(v55 + 16) = v53;
    *(void *)(v55 + 24) = v54;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_task_dealloc();
    swift_beginAccess();
    uint64_t v56 = *(void *)(v54 + 16);
    if (*(unsigned char *)(v54 + 24))
    {
      *uint64_t v90 = v56;
      swift_errorRetain();
      sub_1000172F8(&qword_10065B260);
      swift_willThrowTypedImpl();
      swift_release();
LABEL_24:
      unint64_t v68 = (void *)v1[13];
      static Logger.download.getter();
      id v69 = v68;
      uint64_t v70 = Logger.logObject.getter();
      os_log_type_t v71 = static os_log_type_t.error.getter();
      BOOL v72 = os_log_type_enabled(v70, v71);
      uint64_t v73 = (char *)v1[13];
      if (v72)
      {
        uint64_t v74 = (uint8_t *)swift_slowAlloc();
        uint64_t v75 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v74 = 138412290;
        uint64_t v76 = *(void **)&v73[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey];
        v1[5] = v76;
        id v77 = v76;
        uint64_t v1 = v87;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v75 = v76;

        _os_log_impl((void *)&_mh_execute_header, v70, v71, "[%@] Expected partial content, failing download", v74, 0xCu);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      v23(v1[16], v1[14]);
      os_unfair_lock_lock(lock);
      sub_100251EE0(v85);
      os_unfair_lock_unlock(lock);
      swift_errorRelease();
LABEL_28:
      uint64_t v67 = 0;
      goto LABEL_29;
    }
    swift_release();
    uint64_t v4 = v85;
    if (v56)
    {
      uint64_t v57 = (void *)v1[13];
      static Logger.download.getter();
      id v58 = v57;
      uint64_t v59 = Logger.logObject.getter();
      os_log_type_t v60 = static os_log_type_t.error.getter();
      BOOL v61 = os_log_type_enabled(v59, v60);
      uint64_t v62 = (char *)v1[13];
      if (v61)
      {
        uint64_t v63 = (uint8_t *)swift_slowAlloc();
        uint64_t v64 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v63 = 138412290;
        BOOL v65 = *(void **)&v62[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12DownloadTask_logKey];
        v1[8] = v65;
        id v66 = v65;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v64 = v65;

        _os_log_impl((void *)&_mh_execute_header, v59, v60, "[%@] Resumption offset expected to be zero after truncation", v63, 0xCu);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      v23(v1[17], v1[14]);
      type metadata accessor for InternalError();
      sub_100013A74((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      goto LABEL_24;
    }
  }
  os_unfair_lock_lock(v5);
  sub_100251F50(v4);
  os_unfair_lock_unlock(v5);
  uint64_t v67 = 1;
LABEL_29:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v78 = (uint64_t (*)(uint64_t))v1[1];
  return (void *)v78(v67);
}

uint64_t sub_100254874(uint64_t a1)
{
  return sub_100251D64(a1, *(void *)(v1 + 16));
}

uint64_t sub_100254890(uint64_t a1)
{
  return sub_100251E70(a1, *(void *)(v1 + 16));
}

uint64_t sub_1002548AC()
{
  sub_1002548E8(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1002548E8(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

void sub_1002548F4()
{
  sub_1003C8658(*(char **)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_100254910()
{
  unint64_t result = qword_10065D368;
  if (!qword_10065D368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D368);
  }
  return result;
}

uint64_t sub_100254968()
{
  _Block_release(*(const void **)(v0 + 40));

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002549C0()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (const void *)v0[5];
  uint64_t v6 = (void *)v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1000176B4;
  id v8 = (uint64_t (*)(void *, void *, uint64_t, const void *, void *))((char *)&dword_10065D370 + dword_10065D370);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t sub_100254A90()
{
  swift_unknownObjectRelease();

  swift_errorRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100254AE8()
{
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1000176B4;
  uint64_t v6 = (void *)swift_task_alloc();
  uint64_t v5[2] = v6;
  void *v6 = v5;
  v6[1] = sub_1000176B4;
  return sub_10024D894(v2, v4, v3);
}

uint64_t sub_100254BE0(uint64_t a1)
{
  return sub_100254C3C(a1);
}

uint64_t sub_100254BF8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1001C731C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_100254C14(uint64_t a1, char a2)
{
  if (a2 == 1) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_100254C28(uint64_t a1, char a2)
{
  if (a2 == 1) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100254C3C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  *(unsigned char *)(a1 + 80) = 3;
  swift_errorRetain();
  uint64_t result = swift_errorRelease();
  *(void *)(a1 + 56) = v3;
  return result;
}

void sub_100254C90()
{
  sub_1003C94F8(*(char **)(v0 + 16));
}

uint64_t sub_100254CAC(uint64_t a1)
{
  return sub_10024C758(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_100254CC8(uint64_t a1)
{
  sub_10024CB10(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100254CE4()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100254D1C()
{
  return [*(id *)(v0 + 16) resume];
}

uint64_t sub_100254D2C()
{
  return swift_release();
}

uint64_t sub_100254D34(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, unint64_t a12)
{
  if (a12 >> 62 == 1)
  {
    sub_100012670(a3, a4);
    swift_bridgeObjectRetain();
    sub_100012670(a10, a11);
  }
  else
  {
    if (a12 >> 62) {
      return result;
    }
    sub_100012670(result, a2);
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRetain();
}

uint64_t *sub_100254DD4(uint64_t *a1)
{
  return a1;
}

uint64_t sub_100254E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100254E54()
{
  sub_100014524((uint64_t)(v0 + 2));
  unint64_t v1 = v0[8];
  if (v1 >> 60 != 15) {
    sub_100013510(v0[7], v1);
  }
  if (v0[10])
  {
    swift_bridgeObjectRelease();
    sub_100014524((uint64_t)(v0 + 12));
  }

  return _swift_deallocObject(v0, 152, 7);
}

uint64_t sub_100254EB8(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    return swift_slowDealloc();
  }
  return result;
}

uint64_t sub_100254F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000172F8((uint64_t *)&unk_10065D300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100254F74()
{
  _Block_release(*(const void **)(v0 + 48));

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100254FD4()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = v0[5];
  uint64_t v7 = (const void *)v0[6];
  uint64_t v6 = (void *)v0[7];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_1000176B4;
  id v9 = (uint64_t (*)(void *, void *, void *, uint64_t, const void *, void *))((char *)&dword_10065D408
                                                                                     + dword_10065D408);
  return v9(v2, v3, v4, v5, v7, v6);
}

uint64_t sub_1002550B0()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002550F0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100255128(uint64_t a1)
{
  return a1;
}

uint64_t destroy for DownloadTask.State(uint64_t a1)
{
  if (*(void *)(a1 + 32)) {
    sub_100014524(a1 + 8);
  }
  swift_errorRelease();

  return swift_release();
}

uint64_t initializeWithCopy for DownloadTask.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = a1 + 8;
  uint64_t v6 = a2 + 8;
  uint64_t v7 = *(void *)(a2 + 32);
  id v8 = v4;
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v9;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(v5, v6, v7);
  }
  else
  {
    long long v10 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)uint64_t v5 = *(_OWORD *)v6;
    *(_OWORD *)(v5 + 16) = v10;
    *(void *)(v5 + 32) = *(void *)(v6 + 32);
  }
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  swift_errorRetain();
  uint64_t v12 = *(void **)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v13;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  id v14 = v12;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DownloadTask.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v7)
    {
      *(void *)(a1 + 32) = v7;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 8, a2 + 8);
      goto LABEL_8;
    }
LABEL_7:
    long long v8 = *(_OWORD *)(a2 + 8);
    long long v9 = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(_OWORD *)(a1 + 8) = v8;
    *(_OWORD *)(a1 + 24) = v9;
    goto LABEL_8;
  }
  if (!v7)
  {
    sub_100014524(a1 + 8);
    goto LABEL_7;
  }
  sub_1002553AC((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
LABEL_8:
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  swift_errorRetain();
  *(void *)(a1 + 56) = v10;
  swift_errorRelease();
  uint64_t v11 = *(void **)(a1 + 64);
  uint64_t v12 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v12;
  id v13 = v12;

  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t *sub_1002553AC(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          void *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for DownloadTask.State(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for DownloadTask.State(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  if (*(void *)(a1 + 32)) {
    sub_100014524(a1 + 8);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_errorRelease();
  uint64_t v6 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadTask.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 81)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadTask.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 81) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadTask.State()
{
  return &type metadata for DownloadTask.State;
}

void sub_100255780()
{
}

uint64_t sub_100255798@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_100254BF8(a1, a2);
}

uint64_t sub_1002557B0(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

id sub_100255824()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ServiceListenerDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ServiceListenerDelegate()
{
  return self;
}

uint64_t sub_100255890()
{
  return swift_release();
}

uint64_t sub_10025589C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002558DC()
{
  return sub_100238728(*(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1002558EC(void *a1)
{
  uint64_t v20 = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  id v1 = a1;
  objc_super v2 = sub_10043A9AC((uint64_t)&v18, v1);
  uint64_t v4 = v3;

  if (*((void *)&v19 + 1)) {
    sub_100014524((uint64_t)&v18);
  }
  *(void *)&long long v18 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    type metadata accessor for DDMInstallHistoryEntryEntity.Entity();
    Class ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    id v7 = v2;
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v9 = 0;
    while (v9 < *(void *)(v4 + 16))
    {
      uint64_t v10 = *(void *)(v4 + 8 * v9 + 32);
      id v11 = objc_allocWithZone(ObjCClassFromMetadata);
      id v12 = v7;
      id v13 = [v11 initWithPersistentID:v10 onConnection:v12];
      LODWORD(v10) = [v13 existsInDatabase];

      if (!v10)
      {
        swift_bridgeObjectRelease();

        id v12 = v13;
        goto LABEL_10;
      }
      ++v9;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t result = specialized ContiguousArray._endMutation()();
      if (v5 == v9)
      {
        swift_bridgeObjectRelease();
LABEL_10:

        goto LABEL_11;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_11:
    uint64_t v14 = v18;
    swift_bridgeObjectRelease();

    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      id v16 = (void **)(v14 + 32);
      do
      {
        uint64_t v17 = *v16++;
        [v17 deleteFromDatabase];
        --v15;
      }
      while (v15);
    }
    return swift_release();
  }
  return result;
}

unint64_t *sub_100255AB8()
{
  sub_1000172F8((uint64_t *)&unk_100663BE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
  *(void *)(inited + 56) = &type metadata for SQLiteTable;
  *(void *)(inited + 64) = &off_1006493B8;
  id v1 = (void *)swift_allocObject();
  *(void *)(inited + 32) = v1;
  v1[2] = sub_100255B9C;
  v1[3] = 0;
  v1[4] = 0xD000000000000013;
  v1[5] = 0x80000001005BA230;
  objc_super v2 = sub_1004AB980(inited);
  swift_setDeallocating();
  sub_1000172F8(&qword_10065C038);
  swift_arrayDestroy();
  return v2;
}

unint64_t *sub_100255B9C()
{
  v5[0] = 0x695F656C646E7562;
  v5[1] = 0xE900000000000064;
  uint64_t v5[2] = 1415071060;
  v5[3] = 0xE400000000000000;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  char v9 = 0;
  sub_1000172F8((uint64_t *)&unk_100663BE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A4070;
  *(void *)(inited + 56) = &type metadata for SQLiteColumn;
  *(void *)(inited + 64) = &off_1006493B0;
  uint64_t v1 = swift_allocObject();
  *(void *)(inited + 32) = v1;
  sub_1001CD8D8((uint64_t)v5, v1 + 16);
  *(void *)(inited + 96) = &type metadata for SQLiteIndex;
  *(void *)(inited + 104) = &off_1006493A8;
  uint64_t v2 = swift_allocObject();
  *(void *)(inited + 72) = v2;
  *(void *)(v2 + 16) = 0x695F656C646E7562;
  *(void *)(v2 + 24) = 0xE900000000000064;
  strcpy((char *)(v2 + 32), "bundle_id_idx");
  *(_WORD *)(v2 + 46) = -4864;
  *(unsigned char *)(v2 + 48) = 0;
  uint64_t v3 = sub_1004AB980(inited);
  swift_setDeallocating();
  sub_1000172F8(&qword_10065C038);
  swift_arrayDestroy();
  sub_1001CD934((uint64_t)v5);
  return v3;
}

uint64_t sub_100255CF4()
{
  return 0x4449656C646E7562;
}

uint64_t sub_100255D0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_100255DA4(uint64_t a1)
{
  unint64_t v2 = sub_100257430();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100255DE0(uint64_t a1)
{
  unint64_t v2 = sub_100257430();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100255E1C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1000172F8(&qword_10065D5C0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018AC60(a1, a1[3]);
  sub_100257430();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_100014524((uint64_t)a1);
  }
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = sub_100014524((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_100255F94(void *a1)
{
  uint64_t v2 = sub_1000172F8(&qword_10065D5D0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018AC60(a1, a1[3]);
  sub_100257430();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

Swift::Int sub_1002560CC()
{
  return Hasher._finalize()();
}

uint64_t sub_100256128()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100256180()
{
  return Hasher._finalize()();
}

uint64_t sub_1002561D8(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

Swift::Int sub_100256208()
{
  return Hasher._finalize()();
}

uint64_t sub_100256260()
{
  return String.hash(into:)();
}

Swift::Int sub_10025627C()
{
  return Hasher._finalize()();
}

uint64_t sub_1002562D0@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100638110, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3 != 0;
  return result;
}

void sub_100256324(void *a1@<X8>)
{
  *a1 = 0x695F656C646E7562;
  a1[1] = 0xE900000000000064;
}

void sub_100256344(void *a1@<X8>)
{
  *a1 = &off_100638148;
}

id sub_1002564F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DDMInstallHistoryEntryEntity.Entity();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DDMInstallHistoryEntryEntity.Entity()
{
  return self;
}

uint64_t sub_10025654C(void **a1)
{
  id v77 = a1;
  uint64_t v2 = type metadata accessor for CocoaError.Code();
  uint64_t v72 = *(void *)(v2 - 8);
  uint64_t v73 = v2;
  __chkstk_darwin(v2);
  uint64_t v75 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v70 = *(void *)(v4 - 8);
  uint64_t v71 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v74 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v64 - v7;
  uint64_t v9 = type metadata accessor for URL.DirectoryHint();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  long long v19 = (char *)&v64 - v18;
  static URL.applicationSupportDirectory.getter();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for URL.DirectoryHint.inferFromPath(_:), v9);
  sub_100017B14();
  URL.appending<A>(components:directoryHint:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v76 = v13;
  v20(v17, v13);
  uint64_t v21 = Data.init(contentsOf:options:)();
  if (v1)
  {
    v20(v19, v76);
    uint64_t v27 = v72;
    uint64_t v26 = v73;
    swift_errorRetain();
    char v28 = v75;
    static CocoaError.fileReadNoSuchFile.getter();
    sub_100256E74();
    char v29 = static _ErrorCodeProtocol.~= infix(_:_:)();
    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v26);
    if (v29)
    {
      return swift_errorRelease();
    }
    else
    {
      static Logger.ddm.getter();
      swift_errorRetain();
      swift_errorRetain();
      id v31 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v31, v32))
      {
        os_log_type_t v33 = (uint8_t *)swift_slowAlloc();
        BOOL v34 = (void *)swift_slowAlloc();
        *(_DWORD *)os_log_type_t v33 = 138543362;
        swift_errorRetain();
        uint64_t v35 = (void *)_swift_stdlib_bridgeErrorToNSError();
        uint64_t v78 = v35;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *BOOL v34 = v35;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Unable to read ddm install history from disk: %{public}@", v33, 0xCu);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v74, v71);
    }
  }
  else
  {
    uint64_t v23 = v21;
    unint64_t v24 = v22;
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    uint64_t v25 = JSONDecoder.init()();
    sub_1000172F8(&qword_10065D508);
    sub_100256ECC();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    uint64_t v66 = v25;
    uint64_t v67 = v23;
    unint64_t v68 = v24;
    uint64_t v36 = v78;
    if (v78[2])
    {
      Swift::Int v37 = v8;
      static Logger.ddm.getter();
      swift_bridgeObjectRetain();
      uint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.default.getter();
      BOOL v40 = os_log_type_enabled(v38, v39);
      BOOL v65 = v20;
      if (v40)
      {
        id v41 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)id v41 = 134349056;
        uint64_t v78 = (void *)v36[2];
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "Migrating %{public}ld legacy install history entries", v41, 0xCu);
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v70 + 8))(v37, v71);
      int64_t v42 = 0;
      os_log_type_t v43 = v36 + 7;
      uint64_t v44 = 1 << *((unsigned char *)v36 + 32);
      uint64_t v45 = -1;
      if (v44 < 64) {
        uint64_t v45 = ~(-1 << v44);
      }
      unint64_t v46 = v45 & v36[7];
      int64_t v69 = (unint64_t)(v44 + 63) >> 6;
      uint64_t v47 = v77;
      if (!v46) {
        goto LABEL_19;
      }
LABEL_18:
      unint64_t v48 = __clz(__rbit64(v46));
      v46 &= v46 - 1;
      for (unint64_t i = v48 | (v42 << 6); ; unint64_t i = __clz(__rbit64(v51)) + (v42 << 6))
      {
        uint64_t v53 = (uint64_t *)(v36[6] + 16 * i);
        uint64_t v54 = *v53;
        uint64_t v55 = v53[1];
        uint64_t v56 = *v47;
        swift_bridgeObjectRetain();

        uint64_t v47 = v77;
        if (v46) {
          goto LABEL_18;
        }
LABEL_19:
        if (__OFADD__(v42++, 1))
        {
          __break(1u);
          goto LABEL_41;
        }
        if (v42 >= v69) {
          goto LABEL_36;
        }
        unint64_t v51 = v43[v42];
        if (!v51)
        {
          int64_t v52 = v42 + 1;
          if (v42 + 1 >= v69) {
            goto LABEL_36;
          }
          unint64_t v51 = v43[v52];
          if (!v51)
          {
            int64_t v52 = v42 + 2;
            if (v42 + 2 >= v69) {
              goto LABEL_36;
            }
            unint64_t v51 = v43[v52];
            if (!v51)
            {
              int64_t v52 = v42 + 3;
              if (v42 + 3 >= v69)
              {
LABEL_36:
                swift_release();
                uint64_t v20 = v65;
                goto LABEL_37;
              }
              unint64_t v51 = v43[v52];
              if (!v51)
              {
                while (1)
                {
                  int64_t v42 = v52 + 1;
                  if (__OFADD__(v52, 1)) {
                    break;
                  }
                  if (v42 >= v69) {
                    goto LABEL_36;
                  }
                  unint64_t v51 = v43[v42];
                  ++v52;
                  if (v51) {
                    goto LABEL_29;
                  }
                }
LABEL_41:
                __break(1u);
              }
            }
          }
          int64_t v42 = v52;
        }
LABEL_29:
        unint64_t v46 = (v51 - 1) & v51;
      }
    }
    swift_bridgeObjectRelease();
LABEL_37:
    id v57 = [self defaultManager];
    URL._bridgeToObjectiveC()(v58);
    os_log_type_t v60 = v59;
    uint64_t v78 = 0;
    unsigned int v61 = [v57 removeItemAtURL:v59 error:&v78];

    if (v61)
    {
      uint64_t v62 = v78;
      v20(v19, v76);
      swift_release();
      return sub_100013510(v67, v68);
    }
    else
    {
      uint64_t v63 = v78;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_release();
      sub_100013510(v67, v68);
      swift_errorRelease();
      return ((uint64_t (*)(char *, uint64_t))v20)(v19, v76);
    }
  }
}

unint64_t sub_100256E74()
{
  unint64_t result = qword_10065D500;
  if (!qword_10065D500)
  {
    type metadata accessor for CocoaError.Code();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D500);
  }
  return result;
}

unint64_t sub_100256ECC()
{
  unint64_t result = qword_10065D510;
  if (!qword_10065D510)
  {
    sub_10017B924(&qword_10065D508);
    sub_100256F40();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D510);
  }
  return result;
}

unint64_t sub_100256F40()
{
  unint64_t result = qword_10065D518;
  if (!qword_10065D518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D518);
  }
  return result;
}

uint64_t sub_100256F94()
{
  return sub_1001CD9A4((void (*)(void))&_swift_release, 48);
}

uint64_t sub_100256FB0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 72)) {
    sub_100014524(v0 + 48);
  }

  return _swift_deallocObject(v0, 97, 7);
}

uint64_t sub_100257000()
{
  return sub_1001CD9A4((void (*)(void))&_swift_bridgeObjectRelease, 49);
}

ValueMetadata *type metadata accessor for DDMInstallHistoryEntryEntity()
{
  return &type metadata for DDMInstallHistoryEntryEntity;
}

ValueMetadata *type metadata accessor for DDMInstallHistoryEntryEntity.Property()
{
  return &type metadata for DDMInstallHistoryEntryEntity.Property;
}

ValueMetadata *type metadata accessor for DDMInstallHistoryDatabaseConfig()
{
  return &type metadata for DDMInstallHistoryDatabaseConfig;
}

void *initializeBufferWithCopyOfBuffer for DDMInstallHistoryDatabaseConfig.LegacyHistoryEntry(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for DDMInstallHistoryDatabaseConfig.LegacyHistoryEntry()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for DDMInstallHistoryDatabaseConfig.LegacyHistoryEntry(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for DDMInstallHistoryDatabaseConfig.LegacyHistoryEntry(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DDMInstallHistoryDatabaseConfig.LegacyHistoryEntry(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DDMInstallHistoryDatabaseConfig.LegacyHistoryEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DDMInstallHistoryDatabaseConfig.LegacyHistoryEntry()
{
  return &type metadata for DDMInstallHistoryDatabaseConfig.LegacyHistoryEntry;
}

unint64_t sub_100257198()
{
  unint64_t result = qword_10065D520;
  if (!qword_10065D520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D520);
  }
  return result;
}

unint64_t sub_1002571F0()
{
  unint64_t result = qword_10065D558;
  if (!qword_10065D558)
  {
    sub_10017B924(&qword_10065D560);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D558);
  }
  return result;
}

unint64_t sub_100257250()
{
  unint64_t result = qword_10065D568;
  if (!qword_10065D568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D568);
  }
  return result;
}

unint64_t sub_1002572A8()
{
  unint64_t result = qword_10065D570;
  if (!qword_10065D570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D570);
  }
  return result;
}

unint64_t sub_1002572FC(void *a1)
{
  a1[1] = sub_100257334();
  a1[2] = sub_100257388();
  unint64_t result = sub_1002573DC();
  a1[3] = result;
  return result;
}

unint64_t sub_100257334()
{
  unint64_t result = qword_10065D5A8;
  if (!qword_10065D5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D5A8);
  }
  return result;
}

unint64_t sub_100257388()
{
  unint64_t result = qword_10065D5B0;
  if (!qword_10065D5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D5B0);
  }
  return result;
}

unint64_t sub_1002573DC()
{
  unint64_t result = qword_10065D5B8;
  if (!qword_10065D5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D5B8);
  }
  return result;
}

unint64_t sub_100257430()
{
  unint64_t result = qword_10065D5C8;
  if (!qword_10065D5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D5C8);
  }
  return result;
}

unsigned char *_s28ManagedAppDistributionDaemon28DDMInstallHistoryEntryEntityV8PropertyOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100257520);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DDMInstallHistoryDatabaseConfig.LegacyHistoryEntry.CodingKeys()
{
  return &type metadata for DDMInstallHistoryDatabaseConfig.LegacyHistoryEntry.CodingKeys;
}

ValueMetadata *type metadata accessor for DDMInstallHistoryDatabaseTransaction()
{
  return &type metadata for DDMInstallHistoryDatabaseTransaction;
}

unint64_t sub_10025756C()
{
  unint64_t result = qword_10065D5D8;
  if (!qword_10065D5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D5D8);
  }
  return result;
}

unint64_t sub_1002575C4()
{
  unint64_t result = qword_10065D5E0;
  if (!qword_10065D5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D5E0);
  }
  return result;
}

unint64_t sub_10025761C()
{
  unint64_t result = qword_10065D5E8;
  if (!qword_10065D5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D5E8);
  }
  return result;
}

Swift::Int sub_100257674()
{
  uint64_t v1 = *(void *)(v0 + 24);
  Hasher.init(_seed:)();
  String.hash(into:)();
  if (v1)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

void sub_100257710()
{
  uint64_t v1 = *(void *)(v0 + 24);
  String.hash(into:)();
  if (v1)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_10025779C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  Hasher.init(_seed:)();
  String.hash(into:)();
  if (v1)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

uint64_t sub_100257834(uint64_t *a1, uint64_t *a2)
{
  return sub_100257AFC(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

Swift::Int sub_100257850()
{
  uint64_t v1 = *(void *)v0;
  Swift::UInt v2 = *(unsigned __int8 *)(v0 + 8);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v2);
  sub_100012B7C((uint64_t)v4, v1);
  return Hasher._finalize()();
}

void sub_1002578B0(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  Hasher._combine(_:)(*(unsigned __int8 *)(v1 + 8));

  sub_100012B7C(a1, v3);
}

Swift::Int sub_100257900()
{
  uint64_t v1 = *(void *)v0;
  Swift::UInt v2 = *(unsigned __int8 *)(v0 + 8);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v2);
  sub_100012B7C((uint64_t)v4, v1);
  return Hasher._finalize()();
}

uint64_t sub_10025795C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)a2;
  int v6 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!v6) {
      return 0;
    }
  }
  else if (v6)
  {
    return 0;
  }
  return sub_10032875C(v4, v5);
}

uint64_t sub_10025798C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*(void *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_100016D20(a2, a3);
    if (v11)
    {
      sub_1000144C8(*(void *)(a1 + 56) + 32 * v10, (uint64_t)&v18);
    }
    else
    {
      long long v18 = 0u;
      long long v19 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }
  if (!a5)
  {
    sub_100016CB8((uint64_t)&v18, (uint64_t)v16);
    if (v17)
    {
      if (swift_dynamicCast())
      {
        char v12 = (char)v15;
        return v12 & 1;
      }
LABEL_18:
      char v12 = 0;
      return v12 & 1;
    }
    uint64_t v13 = (long long *)v16;
LABEL_17:
    sub_100016E7C((uint64_t)v13);
    goto LABEL_18;
  }
  sub_1001CD9F8((uint64_t)&v18, (uint64_t)v16);
  if (!v17)
  {
    sub_100016E7C((uint64_t)v16);
    goto LABEL_15;
  }
  sub_1000172F8((uint64_t *)&unk_10065C5D0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    uint64_t v13 = &v18;
    goto LABEL_17;
  }
  char v12 = sub_10054E494(a4, a5, v15);
  swift_bridgeObjectRelease();
  sub_100016E7C((uint64_t)&v18);
  return v12 & 1;
}

uint64_t sub_100257AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 == a5 && a2 == a6 || (char v12 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v12 & 1) != 0))
  {
    if (a4)
    {
      if (a8 && (a3 == a7 && a4 == a8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)) {
        return 1;
      }
    }
    else if (!a8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_100257BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  long long v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v18 - v9;
  if (os_variant_has_internal_content()
    && (a1 == 0xD000000000000010 && a2 == 0x80000001005BA250
     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    static Logger.daemon.getter();
    char v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v11, v12))
    {
      uint64_t v14 = 1;
      goto LABEL_12;
    }
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "We’re running an internal OS build, and the “hosting app” is actually madctl. Allowing MAD usage…", v13, 2u);
    uint64_t v14 = 1;
  }
  else
  {
    static Logger.daemon.getter();
    char v11 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v11, v15))
    {
      uint64_t v14 = 0;
      unint64_t v10 = v8;
      goto LABEL_12;
    }
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v15, "Either we’re not running an internal OS build or the hosting app isn’t actually madctl.", v16, 2u);
    uint64_t v14 = 0;
    unint64_t v10 = v8;
  }
  swift_slowDealloc();
LABEL_12:

  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return v14;
}

uint64_t sub_100257DEC(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  uint64_t v3 = type metadata accessor for Logger();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for DMCAppsScope();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for DMCAppsClient();
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  return _swift_task_switch(sub_100257F74, 0, 0);
}

uint64_t sub_100257F74()
{
  (*(void (**)(void, void, void))(v0[11] + 104))(v0[12], enum case for DMCAppsScope.system(_:), v0[10]);
  DMCAppsClient.init(scope:)();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[16] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100258050;
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  return DMCAppsClient.isManaged(bundleID:persona:)(v3, v2, 0, 0);
}

uint64_t sub_100258050(char a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 120);
  uint64_t v5 = *(void *)(*v2 + 112);
  uint64_t v6 = *(void *)(*v2 + 104);
  *(unsigned char *)(v3 + 144) = a1;
  *(void *)(v3 + 136) = v1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v1) {
    uint64_t v7 = sub_100258568;
  }
  else {
    uint64_t v7 = sub_1002581C8;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1002581C8()
{
  uint64_t v24 = v0;
  if (*(unsigned char *)(v0 + 144) == 1)
  {
    static Logger.daemon.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.debug.getter();
    BOOL v3 = os_log_type_enabled(v1, v2);
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v5 = *(void *)(v0 + 48);
    uint64_t v6 = *(void *)(v0 + 56);
    unint64_t v7 = *(void *)(v0 + 40);
    if (v3)
    {
      uint64_t v21 = *(void *)(v0 + 32);
      long long v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)long long v8 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 24) = sub_1000143F4(v21, v7, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "Hosting app “%s” is managed. Allowing MAD usage…", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
  }
  else
  {
    static Logger.daemon.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.debug.getter();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = *(void *)(v0 + 56);
    uint64_t v13 = *(void *)(v0 + 64);
    unint64_t v15 = *(void *)(v0 + 40);
    uint64_t v14 = *(void *)(v0 + 48);
    if (v11)
    {
      uint64_t v16 = *(void *)(v0 + 32);
      uint64_t v22 = *(void *)(v0 + 64);
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 16) = sub_1000143F4(v16, v15, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Hosting app “%s” isn’t managed.", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v22, v14);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v14);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v19 = *(unsigned __int8 *)(v0 + 144);
  return v18(v19);
}

uint64_t sub_100258568()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

unint64_t sub_1002585F8(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  long long v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  BOOL v11 = (char *)&v45 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  unint64_t v46 = (char *)&v45 - v13;
  __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v45 - v14;
  static Logger.daemon.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v47 = v11;
  if (v18)
  {
    uint64_t v19 = swift_slowAlloc();
    id v50 = v8;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v49 = v5;
    uint64_t v53 = v21;
    uint64_t v48 = v4;
    *(_DWORD *)uint64_t v20 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1000143F4(a1, a2, &v53);
    uint64_t v4 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Checking whether hosting app “%s” was installed for development (e.g., from Xcode)…", v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v5 = v49;
    swift_slowDealloc();
    long long v8 = v50;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v22 = *(void (**)(char *, uint64_t))(v5 + 8);
  v22(v15, v4);
  uint64_t v23 = v51;
  id v24 = objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain();
  id v25 = sub_1003DB240(a1, a2, 0);
  if (v23) {
    return a2 & 1;
  }
  uint64_t v27 = v25;
  if (([v25 isProfileValidated] & 1) != 0
    && ([v27 isBeta] & 1) == 0)
  {
    id v50 = (char *)a1;
    os_log_type_t v39 = v46;
    static Logger.daemon.getter();
    swift_bridgeObjectRetain_n();
    BOOL v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v40, v41))
    {
      unint64_t v51 = v22;
      uint64_t v42 = swift_slowAlloc();
      uint64_t v48 = v4;
      os_log_type_t v43 = (uint8_t *)v42;
      uint64_t v53 = swift_slowAlloc();
      uint64_t v49 = v5;
      *(_DWORD *)os_log_type_t v43 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_1000143F4((uint64_t)v50, a2, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Hosting app “%s” was indeed installed for development. Allowing MAD usage…", v43, 0xCu);
      LOBYTE(a2) = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v51(v46, v48);
      return a2 & 1;
    }

    swift_bridgeObjectRelease_n();
    uint64_t v44 = v39;
    goto LABEL_20;
  }
  if (os_variant_has_internal_content() && [v27 isAdHocCodeSigned])
  {
    static Logger.daemon.getter();
    swift_bridgeObjectRetain_n();
    char v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v28, v29))
    {
      unint64_t v51 = v22;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v48 = v4;
      id v31 = (uint8_t *)v30;
      uint64_t v32 = swift_slowAlloc();
      uint64_t v49 = v5;
      uint64_t v53 = v32;
      *(_DWORD *)id v31 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_1000143F4(a1, a2, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "We’re running an internal OS build, and hosting app “%s” was installed with an ad-hoc code signature. Allowing MAD usage…", v31, 0xCu);
      LOBYTE(a2) = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v51(v47, v48);
      return a2 & 1;
    }

    swift_bridgeObjectRelease_n();
    uint64_t v44 = v47;
LABEL_20:
    v22(v44, v4);
    LOBYTE(a2) = 1;
    return a2 & 1;
  }
  static Logger.daemon.getter();
  swift_bridgeObjectRetain_n();
  os_log_type_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.debug.getter();
  id v50 = v8;
  os_log_type_t v35 = v34;
  if (os_log_type_enabled(v33, v34))
  {
    unint64_t v51 = v22;
    uint64_t v36 = swift_slowAlloc();
    uint64_t v48 = v4;
    Swift::Int v37 = (uint8_t *)v36;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v49 = v5;
    uint64_t v53 = v38;
    *(_DWORD *)Swift::Int v37 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1000143F4(a1, a2, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v33, v35, "Hosting app “%s” wasn’t installed for development.", v37, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v51(v50, v48);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v22(v50, v4);
  }
  LOBYTE(a2) = 0;
  return a2 & 1;
}

uint64_t sub_100258D88(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 160) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1002591F0;
  }
  else
  {
    *(unsigned char *)(v4 + 169) = a1 & 1;
    uint64_t v5 = sub_100258EB4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100258EB4()
{
  uint64_t v22 = v0;
  if (*(unsigned char *)(v0 + 169) == 1) {
    goto LABEL_2;
  }
  uint64_t v3 = *(void *)(v0 + 160);
  char v4 = sub_1002585F8(*(void *)(v0 + 136), *(void *)(v0 + 144));
  if (v3)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    if (v4)
    {
LABEL_2:

      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
      uint64_t v2 = 1;
      goto LABEL_11;
    }
    static Logger.daemon.getter();
    swift_bridgeObjectRetain();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    BOOL v7 = os_log_type_enabled(v5, v6);
    unint64_t v8 = *(void *)(v0 + 144);
    if (v7)
    {
      uint64_t v9 = *(void *)(v0 + 136);
      uint64_t v20 = *(void *)(v0 + 104);
      uint64_t v10 = *(void *)(v0 + 88);
      uint64_t v19 = *(void *)(v0 + 80);
      BOOL v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)BOOL v11 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 24) = sub_1000143F4(v9, v8, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Hosting app “%s” isn’t madctl, isn’t managed, and wasn’t installed for development. Disallowing MAD usage…", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v20, v19);
    }
    else
    {
      uint64_t v12 = *(void *)(v0 + 104);
      uint64_t v13 = *(void *)(v0 + 80);
      uint64_t v14 = *(void *)(v0 + 88);

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    unint64_t v15 = *(void **)(v0 + 128);
    uint64_t v16 = type metadata accessor for ManagedAppDistributionError();
    sub_1002596D8((unint64_t *)&qword_10065B910, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 104))(v17, enum case for ManagedAppDistributionError.appNotManaged(_:), v16);
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = 0;
LABEL_11:
  return v1(v2);
}

uint64_t sub_1002591F0()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_100259290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_1002592B4, 0, 0);
}

uint64_t sub_1002592B4()
{
  if (os_variant_has_internal_content())
  {
    Swift::Int v1 = sub_100010C5C((uint64_t)&off_100637350);
    v0[6] = v1;
    swift_arrayDestroy();
    uint64_t v9 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065D5F0
                                                                                   + dword_10065D5F0);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[7] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100259450;
    uint64_t v3 = v0[4];
    uint64_t v4 = v0[5];
    uint64_t v5 = v0[2];
    uint64_t v6 = v0[3];
    return v9(v1, 1, v5, v6, v3, v4);
  }
  else
  {
    type metadata accessor for InternalError();
    sub_1002596D8((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    unint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_100259450(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100259674;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(unsigned char *)(v4 + 72) = a1 & 1;
    uint64_t v5 = sub_100259584;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100259584()
{
  if (*(unsigned char *)(v0 + 72) != 1)
  {
    type metadata accessor for InternalError();
    sub_1002596D8((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100259674()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002596D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for EntitlementVerification.EntitlementPredicate(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EntitlementVerification.EntitlementPredicate(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for EntitlementVerification.EntitlementPredicate(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for EntitlementVerification.EntitlementPredicate(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EntitlementVerification.EntitlementPredicate(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EntitlementVerification.EntitlementPredicate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100259878(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_100259880(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for EntitlementVerification.EntitlementPredicate()
{
  return &type metadata for EntitlementVerification.EntitlementPredicate;
}

ValueMetadata *type metadata accessor for EntitlementVerification()
{
  return &type metadata for EntitlementVerification;
}

void *assignWithCopy for EntitlementVerification.Entitlement(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for EntitlementVerification.Entitlement(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for EntitlementVerification.Entitlement()
{
  return &type metadata for EntitlementVerification.Entitlement;
}

unint64_t sub_100259978()
{
  unint64_t result = qword_10065D618;
  if (!qword_10065D618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D618);
  }
  return result;
}

unint64_t sub_1002599D0()
{
  unint64_t result = qword_10065D620[0];
  if (!qword_10065D620[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10065D620);
  }
  return result;
}

uint64_t sub_100259A2C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100259A70()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Bag()
{
  return sub_100259AC0();
}

{
  return type metadata accessor for Bag();
}

uint64_t sub_100259AC0()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100259AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_100259AFC()
{
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_100259B38(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

void *sub_100259B88(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = v4;
  return a1;
}

__n128 initializeWithTake for PassbookProvisioningUtilities.Error(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_100259C00(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for SetDistributorMetadataTask(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SetDistributorMetadataTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for Bag.Snapshot()
{
  return sub_100259AC0();
}

uint64_t sub_100259CF0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100259D8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    uint64_t v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_100259E94(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_100259F08(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  swift_bridgeObjectRetain();
  v6(v8, v9, v5);
  return a1;
}

void *sub_100259F98(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_OWORD *sub_10025A030(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_10025A0A0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_10025A128(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 16) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 16) & ~v6);
      }
      unint64_t v15 = *((void *)a1 + 1);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_10025A2C8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 16) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x10025A528);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 16] & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for BagKey()
{
  return sub_100259AC0();
}

uint64_t type metadata accessor for RequiredBagKey()
{
  return sub_100259AC0();
}

uint64_t sub_10025A580(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_10025A58C(_xpc_activity_s *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v10 - 8);
  unsigned int v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v13 = (_xpc_activity_s *)swift_unknownObjectRetain();
  unint64_t state = xpc_activity_get_state(v13);
  if (state == 2)
  {
    if (xpc_activity_set_state(a1, 4))
    {
      uint64_t v17 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v12, 1, 1, v17);
      unint64_t v18 = (void *)swift_allocObject();
      v18[2] = 0;
      v18[3] = 0;
      void v18[4] = a2;
      v18[5] = a3;
      v18[6] = a1;
      swift_retain();
      sub_100017544((uint64_t)v12, (uint64_t)&unk_10065D948, (uint64_t)v18);
      return swift_release();
    }
  }
  else
  {
    unint64_t v15 = state;
    if (state <= 1)
    {
      return swift_unknownObjectRelease();
    }
    uint64_t result = swift_unknownObjectRelease();
    if (v15 - 3 < 3) {
      return result;
    }
    __break(1u);
  }
  static Logger.general.getter();
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Invalid transition occurred while handling activity", v21, 2u);
    swift_slowDealloc();
    swift_unknownObjectRelease();
  }
  else
  {

    swift_unknownObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10025A844(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a6;
  uint64_t v8 = type metadata accessor for Logger();
  v6[8] = v8;
  v6[9] = *(void *)(v8 - 8);
  v6[10] = swift_task_alloc();
  v6[11] = swift_task_alloc();
  uint64_t v11 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v9 = (void *)swift_task_alloc();
  v6[12] = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_10025A98C;
  return v11();
}

uint64_t sub_10025A98C()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10025ABB8;
  }
  else {
    uint64_t v2 = sub_10025AAA0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10025AAA0()
{
  if (!xpc_activity_set_state(*(xpc_activity_t *)(v0 + 56), 5))
  {
    static Logger.general.getter();
    uint64_t v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v1, v2))
    {
      unsigned int v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "Invalid transition occurred while completing activity", v3, 2u);
      swift_slowDealloc();
    }
    uint64_t v4 = *(void *)(v0 + 88);
    uint64_t v5 = *(void *)(v0 + 64);
    uint64_t v6 = *(void *)(v0 + 72);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10025ABB8()
{
  uint64_t v23 = v0;
  static Logger.general.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v19 = *(void *)(v0 + 72);
    uint64_t v20 = *(void *)(v0 + 64);
    uint64_t v21 = *(void *)(v0 + 80);
    unsigned int v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)unsigned int v3 = 136446210;
    swift_getErrorValue();
    uint64_t v4 = *(void *)(*(void *)(v0 + 24) - 8);
    swift_task_alloc();
    (*(void (**)(void))(v4 + 16))();
    uint64_t v5 = String.init<A>(describing:)();
    unint64_t v7 = v6;
    swift_task_dealloc();
    *(void *)(v0 + 48) = sub_1000143F4(v5, v7, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Uncaught error occurred while executing activity: %{public}s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 72);
    uint64_t v8 = *(void *)(v0 + 80);
    uint64_t v10 = *(void *)(v0 + 64);
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  if (!xpc_activity_set_state(*(xpc_activity_t *)(v0 + 56), 5))
  {
    static Logger.general.getter();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v11, v12))
    {
      int v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Invalid transition occurred while completing activity", v13, 2u);
      swift_slowDealloc();
    }
    uint64_t v14 = *(void *)(v0 + 88);
    uint64_t v15 = *(void *)(v0 + 64);
    uint64_t v16 = *(void *)(v0 + 72);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_10025AF34()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ScheduledActivity()
{
  return self;
}

uint64_t sub_10025AF98()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10025AFE0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  unint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000B238;
  return sub_10025A844(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10025B0A8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10025B4B4(a1, a2, a3);
}

uint64_t SQLiteEncodeValue(_:using:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  sub_10025B368((uint64_t)a1, (uint64_t)v18);
  sub_1000172F8(&qword_10065D950);
  if (swift_dynamicCast())
  {
    char v9 = v17;
    a2[3] = (uint64_t)&type metadata for Bool;
    *(unsigned char *)a2 = v9;
  }
  else
  {
    uint64_t v10 = &type metadata for UInt;
    if (swift_dynamicCast()
      || (uint64_t v10 = &type metadata for UInt64, swift_dynamicCast())
      || (uint64_t v10 = &type metadata for Int, swift_dynamicCast())
      || (uint64_t v10 = &type metadata for Int64, swift_dynamicCast()))
    {
      uint64_t v11 = v17;
      a2[3] = (uint64_t)v10;
      *a2 = v11;
    }
    else if (swift_dynamicCast())
    {
      long long v13 = v17;
      a2[3] = (uint64_t)&type metadata for String;
      *(_OWORD *)a2 = v13;
    }
    else if (swift_dynamicCast())
    {
      a2[3] = v5;
      uint64_t v14 = sub_10019CE94(a2);
      (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v6 + 32))(v14, v8, v5);
    }
    else if (swift_dynamicCast())
    {
      a2[3] = (uint64_t)&type metadata for Data;
      *(_OWORD *)a2 = v17;
    }
    else
    {
      sub_10018AC60(a1, a1[3]);
      uint64_t v15 = dispatch thunk of JSONEncoder.encode<A>(_:)();
      if (!v2)
      {
        a2[3] = (uint64_t)&type metadata for Data;
        *a2 = v15;
        a2[1] = v16;
      }
    }
  }
  return sub_100014524((uint64_t)v18);
}

uint64_t sub_10025B368(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *sub_10025B3CC(uint64_t a1)
{
  uint64_t v2 = (void *)a1;
  sub_1000144C8(a1, (uint64_t)v8);
  if (swift_dynamicCast())
  {
    uint64_t v2 = (void *)v6;
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    sub_100013510(v6, v7);
    if (!v1) {
      return (void *)v8[0];
    }
  }
  else
  {
    uint64_t v3 = (void *)sub_10024814C(v2);
    if (!v1)
    {
      uint64_t v4 = v3;
      uint64_t v2 = [v3 unsignedLongLongValue];
    }
  }
  return v2;
}

uint64_t sub_10025B4B4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_10025C1AC(a2, (uint64_t)&v8);
  if (v9)
  {
    sub_10025C214(&v8, v7);
    sub_10018AC60(a1, a1[3]);
    dispatch thunk of RawRepresentable.rawValue.getter();
    AnyHashable.init<A>(_:)();
    SQLiteEncodeValue(_:using:)(v7, (uint64_t *)(a3 + 40));
    if (v3) {
      sub_10025C22C(a3);
    }
    return sub_100014524((uint64_t)v7);
  }
  else
  {
    *(void *)(a3 + 64) = 0;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_10025B5B4(uint64_t a1)
{
  uint64_t v2 = v1;
  v16[0] = a1;
  uint64_t v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue_serial.Attributes();
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v8 - 8);
  *(void *)(v1 + 16) = sub_10044C51C((uint64_t)_swiftEmptyArrayStorage);
  sub_10018B1DC(0, (unint64_t *)&qword_100662110);
  static DispatchQoS.unspecified.getter();
  v16[1] = _swiftEmptyArrayStorage;
  sub_10025CC5C();
  sub_1000172F8(&qword_100662120);
  sub_10025CCB4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v3);
  *(void *)(v1 + 32) = OS_dispatch_queue_serial.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v9 = v16[0];
  URL.path(percentEncoded:)(1);
  id v10 = objc_allocWithZone((Class)ASUSQLiteConnectionOptions);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [v10 initWithDatabasePath:v11];

  id v13 = [objc_allocWithZone((Class)ASUSQLiteConnection) initWithOptions:v12];
  uint64_t v14 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v9, v14);
  *(void *)(v2 + 24) = v13;
  return v2;
}

uint64_t sub_10025B894(unsigned __int8 *a1)
{
  if (a1[1]) {
    int v1 = 256;
  }
  else {
    int v1 = 0;
  }
  return v1 | *a1;
}

uint64_t sub_10025B8B0()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SQLiteConnection()
{
  return self;
}

uint64_t sub_10025B91C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10025B9BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_10025BAC0(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_10025BB34(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  swift_retain();
  v5(v7, v8, v4);
  return a1;
}

void *sub_10025BBC4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_10025BC54(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_10025BCC4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_10025BD4C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_10025BEEC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 8) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x10025C148);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 8] & ~v9;
          uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
          v20(v19);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = a2 - 1;
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for SQLiteDatabase()
{
  return sub_100259AC0();
}

uint64_t sub_10025C188()
{
  return OS_dispatch_queue_serial_executor.asUnownedSerialExecutor()();
}

uint64_t sub_10025C1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000172F8(&qword_10065CE70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_10025C214(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_10025C22C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10025C280(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  size_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.sql.getter();
  swift_bridgeObjectRetain_n();
  BOOL v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v23 = v3;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v24 = a1;
    unsigned int v14 = (uint8_t *)v13;
    int v15 = (void *)swift_slowAlloc();
    uint64_t v22 = v4;
    aBlock[0] = v15;
    uint64_t v21 = v7;
    *(_DWORD *)unsigned int v14 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1000143F4(v24, a2, (uint64_t *)aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s", v14, 0xCu);
    swift_arrayDestroy();
    uint64_t v4 = v22;
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v21);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  NSString v16 = String._bridgeToObjectiveC()();
  aBlock[4] = nullsub_1;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1004A87A4;
  aBlock[3] = &unk_10063D218;
  int v17 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  unsigned int v18 = [v4 executeStatement:v16 error:aBlock bindings:v17];
  _Block_release(v17);

  uint64_t result = (uint64_t)aBlock[0];
  if (v18)
  {
    uint64_t result = swift_isEscapingClosureAtFileLocation();
    if ((result & 1) == 0) {
      return result;
    }
    __break(1u);
  }
  uint64_t v20 = (void *)result;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10025C600()
{
  return swift_release();
}

uint64_t sub_10025C608()
{
  sub_10025D0F8(v0, (uint64_t)v14);
  if (v18)
  {
    if (sqlite3_errstr(v14[0]))
    {
      v13[0] = 0;
      v13[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(19);
      v1._countAndFlagsBits = 0x65206574694C5153;
      v1._object = (void *)0xED000020726F7272;
      String.append(_:)(v1);
      v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v2);
      swift_bridgeObjectRelease();
      v3._countAndFlagsBits = 8250;
      v3._object = (void *)0xE200000000000000;
      String.append(_:)(v3);
      sub_1000172F8((uint64_t *)&unk_10065DAF0);
      _print_unlocked<A, B>(_:_:)();
    }
    else
    {
      strcpy((char *)v13, "SQLite error ");
      HIWORD(v13[1]) = -4864;
      v11._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v11);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v4 = *(void *)v14;
    unsigned int v5 = v15;
    uint64_t v6 = v16;
    uint64_t v7 = v17;
    _StringGuts.grow(_:)(38);
    swift_bridgeObjectRelease();
    v13[0] = 0xD00000000000001ALL;
    v13[1] = 0x80000001005BA360;
    v8._countAndFlagsBits = v4;
    v8._object = v5;
    String.append(_:)(v8);
    v9._countAndFlagsBits = 0x20646E756F66202CLL;
    v9._object = (void *)0xE800000000000000;
    String.append(_:)(v9);
    v10._countAndFlagsBits = v6;
    v10._object = v7;
    String.append(_:)(v10);
  }
  return v13[0];
}

uint64_t sub_10025C800()
{
  sub_10025D0F8(v0, (uint64_t)v2);
  return sub_10025C608();
}

uint64_t sub_10025C838(void *a1, uint64_t a2)
{
  sub_10018AC60(a1, a1[3]);
  dispatch thunk of Encoder.singleValueContainer()();
  v10[0] = 0;
  id v3 = [self archivedDataWithRootObject:a2 requiringSecureCoding:1 error:v10];
  id v4 = v10[0];
  if (v3)
  {
    unsigned int v5 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    v10[0] = v5;
    v10[1] = v7;
    sub_100239C90((uint64_t)v11, v12);
    sub_10024A9C8();
    dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)();
    sub_100013510((uint64_t)v5, (unint64_t)v7);
  }
  else
  {
    Swift::String v8 = v4;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return sub_100014524((uint64_t)v11);
}

uint64_t sub_10025C988@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10025CFA8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10025C9B4(void *a1)
{
  return sub_10025C838(a1, *v1);
}

uint64_t sub_10025C9D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  id v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  if (_getErrorEmbeddedNSError<A>(_:)())
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v6, v4, a1);
  }
  uint64_t v7 = _convertErrorToNSError(_:)();
  swift_errorRelease();
  return v7;
}

uint64_t sub_10025CB18(void *a1)
{
  sub_1000144C8((uint64_t)a1, (uint64_t)v11);
  if (swift_dynamicCast()) {
    return v10;
  }
  sub_1000144C8((uint64_t)a1, (uint64_t)v11);
  if (swift_dynamicCast()) {
    return v10;
  }
  v11[0] = &type metadata for Data;
  sub_1000172F8(&qword_10065DAC8);
  uint64_t v3 = String.init<A>(describing:)();
  uint64_t v5 = v4;
  sub_10018AC60(a1, a1[3]);
  v11[0] = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
  uint64_t v6 = String.init<A>(describing:)();
  uint64_t v8 = v7;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v9 = v3;
  *(void *)(v9 + 8) = v5;
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v8;
  *(unsigned char *)(v9 + 32) = 0;
  return swift_willThrow();
}

unint64_t sub_10025CC5C()
{
  unint64_t result = qword_10065DAD0;
  if (!qword_10065DAD0)
  {
    type metadata accessor for OS_dispatch_queue_serial.Attributes();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065DAD0);
  }
  return result;
}

unint64_t sub_10025CCB4()
{
  unint64_t result = qword_10065DAD8;
  if (!qword_10065DAD8)
  {
    sub_10017B924(&qword_100662120);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065DAD8);
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyError()
{
  return &type metadata for AnyError;
}

uint64_t sub_10025CD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for SQLiteError(uint64_t a1)
{
  return sub_10025CD78(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_10025CD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SQLiteError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_10025CD20(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for SQLiteError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_10025CD20(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  sub_10025CD78(v8, v9, v10, v11, v12);
  return a1;
}

__n128 initializeWithTake for SQLiteError(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SQLiteError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 32) = v3;
  sub_10025CD78(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLiteError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLiteError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10025CF84(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_10025CF8C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SQLiteError()
{
  return &type metadata for SQLiteError;
}

uint64_t sub_10025CFA8(void *a1)
{
  unsigned int v3 = sub_10018AC60(a1, a1[3]);
  dispatch thunk of Decoder.singleValueContainer()();
  if (v1)
  {
    sub_100014524((uint64_t)a1);
    return (uint64_t)v3;
  }
  sub_10018AC60(v7, v7[3]);
  sub_10024A974();
  dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)();
  sub_10018B1DC(0, &qword_10065DAE0);
  sub_10018B1DC(0, &qword_10065DAE8);
  uint64_t result = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
  unsigned int v3 = (void *)result;
  if (result)
  {
    sub_100013510(v5, v6);
    sub_100014524((uint64_t)v7);
    sub_100014524((uint64_t)a1);
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_10025D0F8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t destroy for IPA_PreambleTask(id *a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for IPA_PreambleTask(void *a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  a1[6] = *(void *)(a2 + 48);
  a1[7] = v7;
  a1[8] = *(void *)(a2 + 64);
  id v8 = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for IPA_PreambleTask(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for IPA_PreambleTask(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for IPA_PreambleTask(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for IPA_PreambleTask(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IPA_PreambleTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IPA_PreambleTask()
{
  return &type metadata for IPA_PreambleTask;
}

uint64_t sub_10025D450(uint64_t a1)
{
  v2[26] = a1;
  v2[27] = v1;
  uint64_t v3 = type metadata accessor for Logger();
  v2[28] = v3;
  v2[29] = *(void *)(v3 - 8);
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for AppInstallTaskResult();
  v2[35] = v4;
  v2[36] = *(void *)(v4 - 8);
  v2[37] = swift_task_alloc();
  sub_1000172F8(&qword_10065E4D0);
  v2[38] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for ManagedAppStatus.State();
  v2[39] = v5;
  unsigned char v2[40] = *(void *)(v5 - 8);
  v2[41] = swift_task_alloc();
  sub_1000172F8(&qword_10065C3C0);
  v2[42] = swift_task_alloc();
  v2[43] = swift_task_alloc();
  v2[44] = type metadata accessor for PlaceholderPromiseBuilder();
  v2[45] = swift_task_alloc();
  sub_1000172F8(&qword_10065CFF0);
  v2[46] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for AppInstallRequestType();
  v2[47] = v6;
  v2[48] = *(void *)(v6 - 8);
  v2[49] = swift_task_alloc();
  v2[50] = swift_task_alloc();
  v2[51] = swift_task_alloc();
  v2[52] = swift_task_alloc();
  sub_1000172F8(&qword_10065C9B0);
  v2[53] = swift_task_alloc();
  v2[54] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  v2[55] = v7;
  v2[56] = *(void *)(v7 - 8);
  v2[57] = swift_task_alloc();
  v2[58] = swift_task_alloc();
  v2[59] = swift_task_alloc();
  v2[60] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for FeatureFlag();
  v2[61] = v8;
  v2[62] = *(void *)(v8 - 8);
  v2[63] = swift_task_alloc();
  return _swift_task_switch(sub_10025D89C, 0, 0);
}

uint64_t sub_10025D89C()
{
  uint64_t v262 = v0;
  uint64_t v1 = v0 + 48;
  uint64_t v2 = (void **)(v0 + 80);
  uint64_t v3 = (uint64_t *)(v0 + 96);
  v252 = (void **)(v0 + 88);
  os_log_type_t type = (void **)(v0 + 144);
  long long v240 = (uint64_t *)(v0 + 152);
  uint64_t v247 = v0 + 160;
  uint64_t v4 = (void **)(v0 + 168);
  char v256 = (uint64_t *)(v0 + 176);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(*(void *)(v0 + 216) + 8);
  uint64_t v5 = *(os_unfair_lock_s **)(v0 + 56);
  *(void *)(v0 + 512) = v5;
  swift_retain();
  char v6 = sub_1003126A8(29, v5);
  sub_100263CCC(v0 + 48);
  uint64_t v7 = 2;
  if (((1 << v6) & 0x26) == 0)
  {
    if (((1 << v6) & 0x18) != 0)
    {
      uint64_t v7 = 3;
    }
    else
    {
      uint64_t v9 = *(void *)(v259 + 496);
      uint64_t v8 = *(void *)(v259 + 504);
      uint64_t v10 = *(void *)(v259 + 488);
      (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v8, enum case for FeatureFlag.backgroundUpdateScheduling(_:), v10);
      char v11 = isFeatureEnabled(_:)();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
      if (v11) {
        uint64_t v7 = 4;
      }
      else {
        uint64_t v7 = 1;
      }
    }
  }
  uint64_t v12 = *(void *)(v259 + 440);
  uint64_t v13 = *(void *)(v259 + 448);
  uint64_t v14 = *(void *)(v259 + 432);
  swift_retain();
  sub_100311ADC(15, v5, v14);
  sub_100263CCC(v1);
  int v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  *(void *)(v259 + 520) = v15;
  *(void *)(v259 + 528) = (v13 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v15(v14, 1, v12) == 1)
  {
    uint64_t v16 = *(id **)(v259 + 216);
    sub_10001729C(*(void *)(v259 + 432), &qword_10065C9B0);
    static Logger.install.getter();
    sub_100263CF8(v16);
    sub_100263CF8(v16);
    int v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v20 = *(void ***)(v259 + 216);
    if (v19)
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412290;
      uint64_t v23 = *v20;
      *uint64_t v4 = *v20;
      id v24 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v22 = v23;
      sub_100263D7C(v20);
      sub_100263D7C(v20);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "[%@] Install identifier was incorrect type or missing", v21, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100263D7C(*(void ***)(v259 + 216));
      sub_100263D7C(v20);
    }
    uint64_t v52 = *(void *)(v259 + 248);
    uint64_t v53 = *(void *)(v259 + 224);
    uint64_t v54 = *(void *)(v259 + 232);

    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v52, v53);
    type metadata accessor for InternalError();
    sub_100013ABC((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_24;
  }
  uint64_t v25 = *(void *)(v259 + 480);
  uint64_t v26 = *(void *)(v259 + 440);
  uint64_t v27 = *(void *)(v259 + 448);
  uint64_t v28 = *(void *)(v259 + 432);
  os_log_type_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32);
  *(void *)(v259 + 536) = v29;
  *(void *)(v259 + 544) = (v27 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v29(v25, v28, v26);
  swift_retain();
  uint64_t v30 = sub_100312690(6, v5);
  unint64_t v32 = v31;
  *(void *)(v259 + 552) = v30;
  *(void *)(v259 + 560) = v31;
  sub_100263CCC(v1);
  if (!v32)
  {
LABEL_20:
    uint64_t v55 = (void *)v259;
    uint64_t v56 = *(id **)(v259 + 216);
    static Logger.install.getter();
    sub_100263CF8(v56);
    sub_100263CF8(v56);
    id v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.error.getter();
    BOOL v59 = os_log_type_enabled(v57, v58);
    os_log_type_t v60 = *(void ***)(v259 + 216);
    if (v59)
    {
      unsigned int v61 = (uint8_t *)swift_slowAlloc();
      uint64_t v62 = (void *)swift_slowAlloc();
      *(_DWORD *)unsigned int v61 = 138412290;
      uint64_t v63 = *v60;
      *uint64_t v2 = *v60;
      id v64 = v63;
      uint64_t v55 = (void *)v259;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v62 = v63;
      sub_100263D7C(v60);
      sub_100263D7C(v60);
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "[%@] Install bundle information was incorrect type or missing", v61, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100263D7C(*(void ***)(v259 + 216));
      sub_100263D7C(v60);
    }
    uint64_t v65 = v55[60];
    uint64_t v67 = v55[55];
    uint64_t v66 = v55[56];
    uint64_t v68 = v55[32];
    uint64_t v69 = v55[28];
    uint64_t v70 = v55[29];

    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v68, v69);
    type metadata accessor for InternalError();
    sub_100013ABC((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v67);
    goto LABEL_24;
  }
  swift_retain();
  uint64_t v237 = sub_100312690(7, v5);
  uint64_t v34 = v33;
  sub_100263CCC(v1);
  if (!v34)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  long long v231 = v29;
  swift_retain();
  uint64_t v230 = sub_100312690(8, v5);
  uint64_t v36 = v35;
  sub_100263CCC(v1);
  if (!v36)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v233 = v36;
  uint64_t v235 = v30;
  unint64_t v236 = v32;
  uint64_t v38 = *(void *)(v259 + 376);
  uint64_t v37 = *(void *)(v259 + 384);
  uint64_t v39 = *(void *)(v259 + 368);
  swift_retain();
  sub_100312650(16, v5, v39);
  sub_100263CCC(v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v39, 1, v38) == 1)
  {
    uint64_t v40 = *(void *)(v259 + 368);
    os_log_type_t v41 = *(id **)(v259 + 216);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001729C(v40, &qword_10065CFF0);
    static Logger.install.getter();
    sub_100263CF8(v41);
    swift_bridgeObjectRetain();
    sub_100263CF8(v41);
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.error.getter();
    BOOL v44 = os_log_type_enabled(v42, v43);
    uint64_t v45 = *(void *)(v259 + 264);
    uint64_t v47 = *(void *)(v259 + 224);
    uint64_t v46 = *(void *)(v259 + 232);
    uint64_t v48 = *(void ***)(v259 + 216);
    if (v44)
    {
      uint64_t v257 = *(void *)(v259 + 264);
      uint64_t v49 = swift_slowAlloc();
      long long v244 = (void *)swift_slowAlloc();
      v261[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v49 = 138412546;
      id v50 = *v48;
      *v252 = *v48;
      id v51 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v244 = v50;
      sub_100263D7C(v48);
      sub_100263D7C(v48);
      *(_WORD *)(v49 + 12) = 2082;
      swift_bridgeObjectRetain();
      *uint64_t v3 = sub_1000143F4(v235, v236, v261);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "[%@][%{public}s] Failed to find install type", (uint8_t *)v49, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v257, v47);
    }
    else
    {
      sub_100263D7C(*(void ***)(v259 + 216));
      sub_100263D7C(v48);
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
    }
    uint64_t v87 = *(void *)(v259 + 480);
    uint64_t v88 = *(void *)(v259 + 440);
    uint64_t v89 = *(void *)(v259 + 448);
    type metadata accessor for InternalError();
    sub_100013ABC((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
LABEL_41:
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v87, v88);
LABEL_24:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v71 = *(uint64_t (**)(void))(v259 + 8);
LABEL_25:
    return v71();
  }
  uint64_t v253 = v34;
  uint64_t v74 = *(void *)(v259 + 408);
  uint64_t v73 = *(void *)(v259 + 416);
  uint64_t v76 = *(void *)(v259 + 376);
  uint64_t v75 = *(void *)(v259 + 384);
  (*(void (**)(uint64_t, void, uint64_t))(v75 + 32))(v73, *(void *)(v259 + 368), v76);
  long long v228 = *(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16);
  v228(v74, v73, v76);
  int v77 = (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 88))(v74, v76);
  unsigned int v78 = enum case for AppInstallRequestType.restore(_:);
  if (v77 == enum case for AppInstallRequestType.promotion(_:)
    || v77 == enum case for AppInstallRequestType.restore(_:)
    || v77 == enum case for AppInstallRequestType.restoreUpdate(_:))
  {
    uint64_t v99 = sub_100264544(v235, v236, *(void *)(v259 + 416));
    if (!v99)
    {
      uint64_t v128 = *(void *)(v259 + 416);
      uint64_t v129 = *(void *)(v259 + 392);
      uint64_t v130 = *(void *)(v259 + 376);
      uint64_t v131 = *(id **)(v259 + 216);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static Logger.install.getter();
      v228(v129, v128, v130);
      sub_100263CF8(v131);
      swift_bridgeObjectRetain();
      sub_100263CF8(v131);
      id v132 = Logger.logObject.getter();
      os_log_type_t v133 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v132, v133))
      {
        uint64_t v238 = *(void *)(v259 + 392);
        uint64_t v242 = *(void *)(v259 + 384);
        uint64_t v232 = *(void *)(v259 + 376);
        uint64_t v234 = *(void *)(v259 + 400);
        uint64_t v254 = *(void *)(v259 + 272);
        uint64_t v248 = *(void *)(v259 + 232);
        uint64_t v134 = *(void ***)(v259 + 216);
        uint64_t v250 = *(void *)(v259 + 224);
        uint64_t v135 = swift_slowAlloc();
        char v241 = (void *)swift_slowAlloc();
        v261[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v135 = 138412802;
        uint64_t v136 = *v134;
        *(void *)(v259 + 184) = *v134;
        id v137 = v136;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *char v241 = v136;
        sub_100263D7C(v134);
        sub_100263D7C(v134);
        *(_WORD *)(v135 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)(v259 + 192) = sub_1000143F4(v235, v236, v261);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v135 + 22) = 2080;
        v228(v234, v238, v232);
        uint64_t v138 = String.init<A>(describing:)();
        *(void *)(v259 + 200) = sub_1000143F4(v138, v139, v261);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v140 = *(void (**)(uint64_t, uint64_t))(v242 + 8);
        v140(v238, v232);
        _os_log_impl((void *)&_mh_execute_header, v132, v133, "[%@][%{public}s] Failed to create / get coordinator for installType: %s", (uint8_t *)v135, 0x20u);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v248 + 8))(v254, v250);
      }
      else
      {
        uint64_t v159 = *(void *)(v259 + 384);
        uint64_t v158 = *(void *)(v259 + 392);
        uint64_t v160 = *(void *)(v259 + 376);
        uint64_t v161 = *(void *)(v259 + 272);
        uint64_t v163 = *(void *)(v259 + 224);
        uint64_t v162 = *(void *)(v259 + 232);
        uint64_t v164 = *(void ***)(v259 + 216);
        sub_100263D7C(v164);
        sub_100263D7C(v164);
        swift_bridgeObjectRelease_n();
        uint64_t v140 = *(void (**)(uint64_t, uint64_t))(v159 + 8);
        v140(v158, v160);

        (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v161, v163);
      }
      uint64_t v87 = *(void *)(v259 + 480);
      uint64_t v88 = *(void *)(v259 + 440);
      uint64_t v89 = *(void *)(v259 + 448);
      uint64_t v165 = *(void *)(v259 + 416);
      uint64_t v166 = *(void *)(v259 + 376);
      type metadata accessor for InternalError();
      sub_100013ABC((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      v140(v165, v166);
      goto LABEL_41;
    }
    unsigned int v243 = v78;
    uint64_t v86 = v259;
  }
  else
  {
    unsigned int v243 = enum case for AppInstallRequestType.restore(_:);
    swift_retain();
    uint64_t v79 = sub_1003124C8(24, v5);
    unint64_t v81 = v80;
    sub_100263CCC(v1);
    if (v81 == 2) {
      uint64_t v82 = 0;
    }
    else {
      uint64_t v82 = v79;
    }
    if (v81 == 2) {
      unint64_t v83 = 0;
    }
    else {
      unint64_t v83 = v81;
    }
    char v229 = AppInstallRequestType.isUpdate.getter();
    sub_10018B1DC(0, &qword_10065DB18);
    swift_bridgeObjectRetain();
    uint64_t v245 = v79;
    sub_100263E98(v79, v81);
    sub_1004C413C(v235, v236, v82, v83);
    if (!v84)
    {
      sub_100263EA8();
      swift_allocError();
      *uint64_t v90 = 1;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v91 = *(void *)(v259 + 480);
      uint64_t v92 = *(void *)(v259 + 440);
      uint64_t v93 = *(void *)(v259 + 448);
      uint64_t v95 = *(void *)(v259 + 408);
      uint64_t v94 = *(void *)(v259 + 416);
      uint64_t v96 = *(void *)(v259 + 376);
      uint64_t v97 = *(void *)(v259 + 384);
      sub_1001C6440(v245, v81);
      uint64_t v98 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
      v98(v94, v96);
      (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v91, v92);
      v98(v95, v96);
      goto LABEL_24;
    }
    uint64_t v85 = v84;
    uint64_t v86 = v259;
    uint64_t v99 = sub_1003B1B5C(v84, v229 & 1, v7, (id)1);
    uint64_t v100 = *(void *)(v259 + 408);
    uint64_t v102 = *(void *)(v259 + 376);
    uint64_t v101 = *(void *)(v259 + 384);

    sub_1001C6440(v245, v81);
    (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v100, v102);
  }
  id v103 = v99;
  *(void *)(v86 + 576) = v99;
  *(void *)(v86 + 568) = v103;
  uint64_t v104 = *(void *)(v86 + 400);
  uint64_t v106 = *(void *)(v86 + 376);
  uint64_t v105 = *(void *)(v86 + 384);
  (*(void (**)(uint64_t, void, uint64_t))(v105 + 104))(v104, v243, v106);
  sub_100013ABC(&qword_10065B518, (void (*)(uint64_t))&type metadata accessor for AppInstallRequestType);
  char v107 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v108 = *(void (**)(uint64_t, uint64_t))(v105 + 8);
  *(void *)(v86 + 584) = v108;
  *(void *)(v86 + 592) = (v105 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v108(v104, v106);
  if ((v107 & 1) != 0
    || [v103 creatorIdentifier] != (id)28
    || ([v103 hasPlaceholderPromise] & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v86 + 104) = &OBJC_PROTOCOL___IXCoordinatorWithInitialODRAssetPromises;
    uint64_t v109 = swift_dynamicCastObjCProtocolConditional();
    if (v109)
    {
      uint64_t v110 = (void *)v109;
      uint64_t v111 = *(void **)(v86 + 568);
      sub_10018B1DC(0, &qword_10065DC10);
      id v112 = v111;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      *(void *)(v86 + 160) = 0;
      unsigned int v114 = [v110 setInitialODRAssetPromises:isa error:v247];

      uint64_t v115 = *(void **)(v86 + 160);
      if (!v114)
      {
        uint64_t v141 = *(void (**)(uint64_t, uint64_t))(v86 + 584);
        uint64_t v142 = *(void **)(v259 + 576);
        uint64_t v143 = *(void **)(v259 + 568);
        uint64_t v255 = *(void *)(v259 + 480);
        uint64_t v144 = *(void *)(v259 + 448);
        uint64_t v145 = *(void *)(v259 + 440);
        uint64_t v146 = *(void *)(v259 + 416);
        uint64_t v147 = *(void *)(v259 + 376);
        id v148 = v115;
        swift_bridgeObjectRelease();
        _convertNSErrorToError(_:)();

        swift_willThrow();
        v141(v146, v147);
        (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v255, v145);
        goto LABEL_24;
      }
      uint64_t v116 = *(void **)(v86 + 568);
      id v117 = v115;
    }
    *(void *)(v86 + 112) = &OBJC_PROTOCOL___IXCoordinatorWithDeviceSecurityPromise;
    uint64_t v118 = swift_dynamicCastObjCProtocolConditional();
    *(void *)(v86 + 648) = v118;
    if (v118)
    {
      uint64_t v119 = v118;
      BOOL v120 = *(void **)(v86 + 568);
      id v121 = objc_allocWithZone((Class)IXPromisedOutOfBandTransfer);
      id v122 = v120;
      NSString v123 = String._bridgeToObjectiveC()();
      id v124 = [v121 initWithName:v123 client:28 diskSpaceNeeded:0];
      *(void *)(v86 + 656) = v124;

      if (!v124)
      {
        type metadata accessor for InternalError();
        sub_100013ABC((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
        uint64_t v167 = swift_allocError();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        swift_bridgeObjectRelease();
        BOOL v168 = *(id **)(v86 + 216);
        static Logger.install.getter();
        sub_100263CF8(v168);
        swift_errorRetain();
        sub_100263CF8(v168);
        swift_errorRetain();
        os_unfair_lock_t v169 = Logger.logObject.getter();
        os_log_type_t v170 = static os_log_type_t.error.getter();
        BOOL v171 = os_log_type_enabled(v169, v170);
        id v172 = *(void ***)(v86 + 216);
        if (v171)
        {
          uint64_t v173 = swift_slowAlloc();
          id v174 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v173 = 138412546;
          uint64_t v175 = *v172;
          *os_log_type_t type = *v172;
          id v176 = v175;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          void *v174 = v175;
          sub_100263D7C(v172);
          sub_100263D7C(v172);
          *(_WORD *)(v173 + 12) = 2114;
          swift_errorRetain();
          uint64_t v177 = _swift_stdlib_bridgeErrorToNSError();
          *long long v240 = v177;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          v174[1] = v177;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v169, v170, "[%@] Failed to set device security promise: %{public}@", (uint8_t *)v173, 0x16u);
          sub_1000172F8(&qword_10065DB10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_100263D7C(*(void ***)(v86 + 216));
          sub_100263D7C(v172);
          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t v193 = *(void *)(v86 + 648);
        long long v194 = *(void **)(v86 + 568);
        uint64_t v195 = *(void *)(v86 + 288);
        uint64_t v197 = *(void *)(v86 + 232);
        uint64_t v196 = *(void *)(v86 + 240);
        uint64_t v198 = *(void *)(v86 + 224);

        (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v196, v198);
        sub_1000172F8(&qword_10065DBF0);
        uint64_t v199 = *(void *)(v195 + 72);
        unint64_t v200 = (*(unsigned __int8 *)(v195 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v195 + 80);
        uint64_t v201 = swift_allocObject();
        *(_OWORD *)(v201 + 16) = xmmword_1005A4070;
        os_log_type_t v202 = (void *)(v201 + v200);
        *os_log_type_t v202 = v193;
        swift_storeEnumTagMultiPayload();
        *(void *)((char *)v202 + v199) = v167;
        swift_storeEnumTagMultiPayload();

        long long v203 = *(void (**)(uint64_t, uint64_t))(v86 + 584);
        long long v204 = *(void **)(v86 + 576);
        uint64_t v205 = *(void *)(v86 + 480);
        uint64_t v206 = *(void *)(v86 + 448);
        uint64_t v207 = *(void *)(v259 + 440);
        uint64_t v208 = *(void *)(v259 + 416);
        uint64_t v209 = *(void *)(v259 + 376);
        uint64_t v210 = *(uint64_t **)(v259 + 208);

        v203(v208, v209);
        (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v205, v207);
        *uint64_t v210 = v201;
        swift_storeEnumTagMultiPayload();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v71 = *(uint64_t (**)(void))(v259 + 8);
        goto LABEL_25;
      }
      uint64_t v125 = swift_task_alloc();
      *(void *)(v86 + 664) = v125;
      *(void *)(v125 + 16) = v119;
      *(void *)(v125 + 24) = v124;
      uint64_t v126 = dword_10065DC08;
      os_log_type_t v127 = (void *)swift_task_alloc();
      *(void *)(v86 + 672) = v127;
      *os_log_type_t v127 = v86;
      v127[1] = sub_100260894;
      return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10065DC08 + v126))((uint64_t)v124, (int *)&unk_10065DC00);
    }
    else
    {
      uint64_t v149 = *(os_unfair_lock_s **)(v86 + 512);
      swift_retain();
      uint64_t v150 = sub_100312690(11, v149);
      uint64_t v152 = v151;
      *(void *)(v86 + 688) = v151;
      sub_100263CCC(v1);
      if (v152)
      {
        uint64_t v153 = *(void *)(v86 + 304);
        (*(void (**)(void, void, void))(*(void *)(v86 + 320) + 104))(*(void *)(v86 + 328), enum case for ManagedAppStatus.State.queued(_:), *(void *)(v86 + 312));
        uint64_t v154 = type metadata accessor for ManagedAppStatus.Reason();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v154 - 8) + 56))(v153, 1, 1, v154);
        uint64_t v155 = (void *)swift_task_alloc();
        *(void *)(v86 + 696) = v155;
        *uint64_t v155 = v86;
        v155[1] = sub_100260D4C;
        uint64_t v156 = *(void *)(v86 + 304);
        uint64_t v157 = *(void *)(v86 + 328);
        return sub_10023FB0C(v157, v156, v150, v152, 0);
      }
      else
      {
        uint64_t v185 = *(os_unfair_lock_s **)(v86 + 512);
        swift_retain();
        uint64_t v186 = sub_1003122C0(36, v185);
        uint64_t v188 = v187;
        char v190 = v189;
        *(void *)(v86 + 712) = v186;
        LODWORD(v185) = ~v189;
        *(void *)(v86 + 720) = v187;
        *(unsigned char *)(v86 + 760) = v189;
        sub_100263CCC(v1);
        if (v185)
        {
          uint64_t v191 = *(void *)(*(void *)(v86 + 216) + 56);
          sub_1001C617C();
          os_log_type_t v192 = (void *)swift_task_alloc();
          *(void *)(v86 + 728) = v192;
          *os_log_type_t v192 = v86;
          v192[1] = sub_100261118;
          return sub_10056C26C(v186, v188, v190 & 1, v191, 0, 0);
        }
        else
        {
          uint64_t v224 = *(os_unfair_lock_s **)(v86 + 512);
          uint64_t v225 = *(void *)(*(void *)(v86 + 216) + 40);
          *(void *)(v86 + 736) = v225;
          swift_retain();
          *(void *)(v86 + 744) = sub_100312294(2, v224);
          *(unsigned char *)(v86 + 761) = v226;
          sub_100263CCC(v1);
          swift_retain();
          *(void *)(v86 + 752) = sub_100312268(3, v224);
          *(unsigned char *)(v86 + 762) = v227;
          sub_100263CCC(v1);
          return _swift_task_switch(sub_100261374, v225, 0);
        }
      }
    }
  }
  else
  {
    uint64_t v179 = *(void *)(v86 + 472);
    uint64_t v178 = *(void *)(v86 + 480);
    uint64_t v181 = *(void *)(v86 + 440);
    uint64_t v180 = *(void *)(v86 + 448);
    uint64_t v182 = *(void *)(v86 + 344);
    swift_retain();
    sub_100312488(5, v5, v182);
    sub_100263CCC(v1);
    swift_retain();
    char v183 = sub_100312470(14, v5);
    sub_100263CCC(v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v180 + 16))(v179, v178, v181);
    swift_retain();
    uint64_t v184 = (void *)sub_100312458(33, v5);
    sub_100263CCC(v1);
    if (v184)
    {
      [v184 copy];
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_10018B1DC(0, (unint64_t *)&qword_10065DC30);
      swift_dynamicCast();
      uint64_t v260 = *v256;
    }
    else
    {
      uint64_t v260 = 0;
    }
    uint64_t v246 = *(void *)(v86 + 440);
    uint64_t v249 = *(void *)(v86 + 472);
    uint64_t v212 = *(int **)(v86 + 352);
    uint64_t v211 = *(void *)(v86 + 360);
    uint64_t v213 = *(void *)(v86 + 344);
    uint64_t v258 = *(void *)(v86 + 336);
    char v251 = **(void ***)(v86 + 216);
    *(unsigned char *)(v211 + v212[11]) = 0;
    char v214 = v183 & 1;
    *(unsigned char *)(v211 + v212[12]) = 0;
    uint64_t v215 = v211 + v212[13];
    uint64_t v216 = type metadata accessor for URL();
    char v217 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v216 - 8) + 56);
    v217(v215, 1, 1, v216);
    sub_10026400C(v213, v211);
    v218 = (uint64_t *)(v211 + v212[5]);
    uint64_t *v218 = v235;
    v218[1] = v236;
    long long v219 = (uint64_t *)(v211 + v212[6]);
    *long long v219 = v237;
    v219[1] = v253;
    long long v220 = (uint64_t *)(v211 + v212[7]);
    *long long v220 = v230;
    v220[1] = v233;
    *(unsigned char *)(v211 + v212[8]) = v214;
    v231(v211 + v212[9], v249, v246);
    *(void *)(v211 + v212[10]) = 1;
    *(void *)(v211 + v212[14]) = v260;
    *(unsigned char *)(v211 + v212[15]) = 0;
    *(void *)(v211 + v212[16]) = v251;
    v217(v258, 1, 1, v216);
    swift_bridgeObjectRetain();
    id v221 = v251;
    char v222 = (void *)swift_task_alloc();
    *(void *)(v86 + 600) = v222;
    *char v222 = v86;
    v222[1] = sub_10025F8DC;
    uint64_t v223 = *(void *)(v86 + 336);
    return sub_100264DEC(v223);
  }
}

uint64_t sub_10025F8DC(uint64_t a1)
{
  uint64_t v3 = *v2;
  v3[76] = a1;
  v3[77] = v1;
  swift_task_dealloc();
  sub_10001729C(v3[42], &qword_10065C3C0);
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1002619DC;
  }
  else
  {
    uint64_t v4 = sub_10025FA54;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10025FA54()
{
  uint64_t v1 = v0[76];
  uint64_t v2 = v0[71];
  uint64_t v3 = swift_task_alloc();
  v0[78] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = dword_10065DC28;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[79] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10025FB5C;
  uint64_t v6 = v0[76];
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10065DC28 + v4))(v6, (int *)&unk_10065DC20);
}

uint64_t sub_10025FB5C()
{
  *(void *)(*(void *)v1 + 640) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v2 = sub_100261BFC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10025FCD8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10025FCD8()
{
  uint64_t v1 = *(void *)(v0 + 360);

  sub_100264074(v1);
  *(void *)(v0 + 104) = &OBJC_PROTOCOL___IXCoordinatorWithInitialODRAssetPromises;
  uint64_t v2 = swift_dynamicCastObjCProtocolConditional();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = *(void **)(v0 + 568);
    sub_10018B1DC(0, &qword_10065DC10);
    id v5 = v4;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    *(void *)(v0 + 160) = 0;
    unsigned int v7 = [v3 setInitialODRAssetPromises:isa error:v0 + 160];

    uint64_t v8 = *(void **)(v0 + 160);
    if (!v7)
    {
      unint64_t v80 = *(void (**)(uint64_t, uint64_t))(v0 + 584);
      uint64_t v22 = *(void **)(v0 + 576);
      uint64_t v23 = *(void **)(v0 + 568);
      uint64_t v81 = *(void *)(v0 + 480);
      uint64_t v24 = *(void *)(v0 + 440);
      uint64_t v25 = *(void *)(v0 + 448);
      uint64_t v26 = *(void *)(v0 + 416);
      uint64_t v27 = *(void *)(v0 + 376);
      id v28 = v8;
      swift_bridgeObjectRelease();
      _convertNSErrorToError(_:)();

      swift_willThrow();
      v80(v26, v27);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v81, v24);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      os_log_type_t v29 = *(uint64_t (**)(void))(v0 + 8);
LABEL_22:
      return v29();
    }
    uint64_t v9 = *(void **)(v0 + 568);
    id v10 = v8;
  }
  *(void *)(v0 + 112) = &OBJC_PROTOCOL___IXCoordinatorWithDeviceSecurityPromise;
  uint64_t v11 = swift_dynamicCastObjCProtocolConditional();
  *(void *)(v0 + 648) = v11;
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = *(void **)(v0 + 568);
    id v14 = objc_allocWithZone((Class)IXPromisedOutOfBandTransfer);
    id v15 = v13;
    NSString v16 = String._bridgeToObjectiveC()();
    id v17 = [v14 initWithName:v16 client:28 diskSpaceNeeded:0];
    *(void *)(v0 + 656) = v17;

    if (v17)
    {
      uint64_t v18 = swift_task_alloc();
      *(void *)(v0 + 664) = v18;
      *(void *)(v18 + 16) = v12;
      *(void *)(v18 + 24) = v17;
      uint64_t v19 = dword_10065DC08;
      uint64_t v20 = (void *)swift_task_alloc();
      *(void *)(v0 + 672) = v20;
      *uint64_t v20 = v0;
      v20[1] = sub_100260894;
      return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10065DC08 + v19))((uint64_t)v17, (int *)&unk_10065DC00);
    }
    type metadata accessor for InternalError();
    sub_100013ABC((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    uint64_t v39 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_bridgeObjectRelease();
    uint64_t v40 = *(id **)(v0 + 216);
    static Logger.install.getter();
    sub_100263CF8(v40);
    swift_errorRetain();
    sub_100263CF8(v40);
    swift_errorRetain();
    os_log_type_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.error.getter();
    BOOL v43 = os_log_type_enabled(v41, v42);
    BOOL v44 = *(void ***)(v0 + 216);
    if (v43)
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 138412546;
      uint64_t v47 = *v44;
      *(void *)(v0 + 144) = *v44;
      id v48 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v46 = v47;
      sub_100263D7C(v44);
      sub_100263D7C(v44);
      *(_WORD *)(v45 + 12) = 2114;
      swift_errorRetain();
      uint64_t v49 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 152) = v49;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v46[1] = v49;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "[%@] Failed to set device security promise: %{public}@", (uint8_t *)v45, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100263D7C(*(void ***)(v0 + 216));
      sub_100263D7C(v44);
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v59 = *(void *)(v0 + 648);
    os_log_type_t v60 = *(void **)(v0 + 568);
    uint64_t v61 = *(void *)(v0 + 288);
    uint64_t v63 = *(void *)(v0 + 232);
    uint64_t v62 = *(void *)(v0 + 240);
    uint64_t v64 = *(void *)(v0 + 224);

    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
    sub_1000172F8(&qword_10065DBF0);
    uint64_t v65 = *(void *)(v61 + 72);
    unint64_t v66 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
    uint64_t v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = xmmword_1005A4070;
    uint64_t v68 = (void *)(v67 + v66);
    *uint64_t v68 = v59;
    swift_storeEnumTagMultiPayload();
    *(void *)((char *)v68 + v65) = v39;
    swift_storeEnumTagMultiPayload();

    uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v0 + 584);
    uint64_t v70 = *(void *)(v0 + 480);
    uint64_t v71 = *(void *)(v0 + 448);
    uint64_t v72 = *(void *)(v0 + 440);
    uint64_t v73 = *(void *)(v0 + 416);
    uint64_t v74 = *(void *)(v0 + 376);
    uint64_t v75 = *(uint64_t **)(v0 + 208);

    v69(v73, v74);
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v70, v72);
    *uint64_t v75 = v67;
    swift_storeEnumTagMultiPayload();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v29 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_22;
  }
  uint64_t v30 = *(os_unfair_lock_s **)(v0 + 512);
  swift_retain();
  uint64_t v31 = sub_100312690(11, v30);
  uint64_t v33 = v32;
  *(void *)(v0 + 688) = v32;
  sub_100263CCC(v0 + 48);
  if (v33)
  {
    uint64_t v34 = *(void *)(v0 + 304);
    (*(void (**)(void, void, void))(*(void *)(v0 + 320) + 104))(*(void *)(v0 + 328), enum case for ManagedAppStatus.State.queued(_:), *(void *)(v0 + 312));
    uint64_t v35 = type metadata accessor for ManagedAppStatus.Reason();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 1, 1, v35);
    uint64_t v36 = (void *)swift_task_alloc();
    *(void *)(v0 + 696) = v36;
    *uint64_t v36 = v0;
    v36[1] = sub_100260D4C;
    uint64_t v37 = *(void *)(v0 + 328);
    uint64_t v38 = *(void *)(v0 + 304);
    return sub_10023FB0C(v37, v38, v31, v33, 0);
  }
  else
  {
    id v50 = *(os_unfair_lock_s **)(v0 + 512);
    swift_retain();
    uint64_t v51 = sub_1003122C0(36, v50);
    uint64_t v53 = v52;
    char v55 = v54;
    *(void *)(v0 + 712) = v51;
    int v56 = ~v54;
    *(void *)(v0 + 720) = v52;
    *(unsigned char *)(v0 + 760) = v54;
    sub_100263CCC(v0 + 48);
    if (v56)
    {
      uint64_t v57 = *(void *)(*(void *)(v0 + 216) + 56);
      sub_1001C617C();
      os_log_type_t v58 = (void *)swift_task_alloc();
      *(void *)(v0 + 728) = v58;
      void *v58 = v0;
      v58[1] = sub_100261118;
      return sub_10056C26C(v51, v53, v55 & 1, v57, 0, 0);
    }
    else
    {
      uint64_t v76 = *(os_unfair_lock_s **)(v0 + 512);
      uint64_t v77 = *(void *)(*(void *)(v0 + 216) + 40);
      *(void *)(v0 + 736) = v77;
      swift_retain();
      *(void *)(v0 + 744) = sub_100312294(2, v76);
      *(unsigned char *)(v0 + 761) = v78;
      sub_100263CCC(v0 + 48);
      swift_retain();
      *(void *)(v0 + 752) = sub_100312268(3, v76);
      *(unsigned char *)(v0 + 762) = v79;
      sub_100263CCC(v0 + 48);
      return _swift_task_switch(sub_100261374, v77, 0);
    }
  }
}

uint64_t sub_100260894()
{
  *(void *)(*(void *)v1 + 680) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v2 = sub_100261E28;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100260A10;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100260A10()
{
  uint64_t v1 = *(void **)(v0 + 568);

  uint64_t v2 = *(os_unfair_lock_s **)(v0 + 512);
  swift_retain();
  uint64_t v3 = sub_100312690(11, v2);
  uint64_t v5 = v4;
  *(void *)(v0 + 688) = v4;
  sub_100263CCC(v0 + 48);
  if (v5)
  {
    uint64_t v6 = *(void *)(v0 + 304);
    (*(void (**)(void, void, void))(*(void *)(v0 + 320) + 104))(*(void *)(v0 + 328), enum case for ManagedAppStatus.State.queued(_:), *(void *)(v0 + 312));
    uint64_t v7 = type metadata accessor for ManagedAppStatus.Reason();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 696) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_100260D4C;
    uint64_t v9 = *(void *)(v0 + 328);
    uint64_t v10 = *(void *)(v0 + 304);
    return sub_10023FB0C(v9, v10, v3, v5, 0);
  }
  else
  {
    uint64_t v12 = *(os_unfair_lock_s **)(v0 + 512);
    swift_retain();
    uint64_t v13 = sub_1003122C0(36, v12);
    uint64_t v15 = v14;
    char v17 = v16;
    *(void *)(v0 + 712) = v13;
    int v18 = ~v16;
    *(void *)(v0 + 720) = v14;
    *(unsigned char *)(v0 + 760) = v16;
    sub_100263CCC(v0 + 48);
    if (v18)
    {
      uint64_t v19 = *(void *)(*(void *)(v0 + 216) + 56);
      sub_1001C617C();
      uint64_t v20 = (void *)swift_task_alloc();
      *(void *)(v0 + 728) = v20;
      *uint64_t v20 = v0;
      v20[1] = sub_100261118;
      return sub_10056C26C(v13, v15, v17 & 1, v19, 0, 0);
    }
    else
    {
      uint64_t v21 = *(os_unfair_lock_s **)(v0 + 512);
      uint64_t v22 = *(void *)(*(void *)(v0 + 216) + 40);
      *(void *)(v0 + 736) = v22;
      swift_retain();
      *(void *)(v0 + 744) = sub_100312294(2, v21);
      *(unsigned char *)(v0 + 761) = v23;
      sub_100263CCC(v0 + 48);
      swift_retain();
      *(void *)(v0 + 752) = sub_100312268(3, v21);
      *(unsigned char *)(v0 + 762) = v24;
      sub_100263CCC(v0 + 48);
      return _swift_task_switch(sub_100261374, v22, 0);
    }
  }
}

uint64_t sub_100260D4C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 704) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = v2[40];
    uint64_t v3 = v2[41];
    uint64_t v7 = v2 + 38;
    uint64_t v5 = v2[38];
    uint64_t v6 = v7[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001729C(v5, &qword_10065E4D0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v6);
    uint64_t v8 = sub_1002622AC;
  }
  else
  {
    uint64_t v10 = v2[40];
    uint64_t v9 = v2[41];
    uint64_t v13 = v2 + 38;
    uint64_t v11 = v2[38];
    uint64_t v12 = v13[1];
    swift_bridgeObjectRelease();
    sub_10001729C(v11, &qword_10065E4D0);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v12);
    uint64_t v8 = sub_100260F24;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_100260F24()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 512);
  swift_retain();
  uint64_t v2 = sub_1003122C0(36, v1);
  uint64_t v4 = v3;
  char v6 = v5;
  *(void *)(v0 + 712) = v2;
  int v7 = ~v5;
  *(void *)(v0 + 720) = v3;
  *(unsigned char *)(v0 + 760) = v5;
  sub_100263CCC(v0 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(*(void *)(v0 + 216) + 56);
    sub_1001C617C();
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 728) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_100261118;
    return sub_10056C26C(v2, v4, v6 & 1, v8, 0, 0);
  }
  else
  {
    uint64_t v11 = *(os_unfair_lock_s **)(v0 + 512);
    uint64_t v12 = *(void *)(*(void *)(v0 + 216) + 40);
    *(void *)(v0 + 736) = v12;
    swift_retain();
    *(void *)(v0 + 744) = sub_100312294(2, v11);
    *(unsigned char *)(v0 + 761) = v13;
    sub_100263CCC(v0 + 48);
    swift_retain();
    *(void *)(v0 + 752) = sub_100312268(3, v11);
    *(unsigned char *)(v0 + 762) = v14;
    sub_100263CCC(v0 + 48);
    return _swift_task_switch(sub_100261374, v12, 0);
  }
}

uint64_t sub_100261118()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 720);
  uint64_t v2 = *(void *)(*(void *)v0 + 712);
  unsigned __int8 v3 = *(unsigned char *)(*(void *)v0 + 760);
  swift_task_dealloc();
  sub_10018ACA4(v2, v1, v3);
  return _swift_task_switch(sub_100261284, 0, 0);
}

uint64_t sub_100261284()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 512);
  uint64_t v2 = *(void *)(*(void *)(v0 + 216) + 40);
  *(void *)(v0 + 736) = v2;
  swift_retain();
  *(void *)(v0 + 744) = sub_100312294(2, v1);
  *(unsigned char *)(v0 + 761) = v3;
  sub_100263CCC(v0 + 48);
  swift_retain();
  *(void *)(v0 + 752) = sub_100312268(3, v1);
  *(unsigned char *)(v0 + 762) = v4;
  sub_100263CCC(v0 + 48);
  return _swift_task_switch(sub_100261374, v2, 0);
}

uint64_t sub_100261374()
{
  uint64_t v1 = *(char **)(v0 + 720);
  uint64_t v2 = *(void *)(v0 + 712);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 760);
  sub_1002B676C(*(void *)(v0 + 552), *(void *)(v0 + 560), *(void *)(v0 + 744), *(unsigned char *)(v0 + 761) & 1, v2, v1, v3, *(void *)(v0 + 752), *(unsigned char *)(v0 + 762) & 1, *(void *)(v0 + 480), 0);
  sub_10018ACA4(v2, (uint64_t)v1, v3);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100261478, 0, 0);
}

uint64_t sub_100261478()
{
  uint64_t v1 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 520);
  uint64_t v2 = *(void *)(v0 + 440);
  uint64_t v3 = *(void *)(v0 + 424);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(*(void *)(v0 + 216) + 24);
  char v4 = *(os_unfair_lock_s **)(v0 + 72);
  swift_retain();
  sub_100312228(3, v4, v3);
  sub_100263CCC(v0 + 64);
  if (v1(v3, 1, v2) == 1)
  {
    sub_10001729C(*(void *)(v0 + 424), &qword_10065C9B0);
LABEL_19:
    char v28 = 1;
    goto LABEL_20;
  }
  (*(void (**)(void, void, void))(v0 + 536))(*(void *)(v0 + 464), *(void *)(v0 + 424), *(void *)(v0 + 440));
  *(void *)(v0 + 120) = &OBJC_PROTOCOL___IXCoordinatorWithAppAssetPromise;
  uint64_t v5 = swift_dynamicCastObjCProtocolConditional();
  if (!v5)
  {
LABEL_18:
    (*(void (**)(void, void))(*(void *)(v0 + 448) + 8))(*(void *)(v0 + 464), *(void *)(v0 + 440));
    goto LABEL_19;
  }
  uint64_t v6 = (void *)v5;
  id v7 = *(id *)(v0 + 568);
  unsigned int v8 = [v6 hasAppAssetPromise];
  uint64_t v9 = *(void **)(v0 + 568);
  if (!v8)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 448) + 8))(*(void *)(v0 + 464), *(void *)(v0 + 440));
LABEL_13:

    goto LABEL_19;
  }
  *(void *)(v0 + 128) = &OBJC_PROTOCOL___IXCoordinatorWithAppAssetPromise;
  id v10 = v9;
  uint64_t result = swift_dynamicCastObjCProtocolConditional();
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v12 = (void *)result;
  id v13 = v6;
  if (![v12 hasAppAssetPromise])
  {
    char v16 = *(void **)(v0 + 568);

LABEL_17:
    goto LABEL_18;
  }
  *(void *)(v0 + 136) = 0;
  id v14 = [v12 appAssetPromiseWithError:v0 + 136];
  uint64_t v15 = *(void **)(v0 + 136);
  char v16 = *(void **)(v0 + 568);
  if (!v14)
  {
    id v29 = v15;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    goto LABEL_17;
  }
  char v17 = v14;
  id v18 = v15;

  self;
  uint64_t v19 = (void *)swift_dynamicCastObjCClass();

  if (!v19)
  {
    char v16 = *(void **)(v0 + 568);

    goto LABEL_17;
  }
  uint64_t v20 = *(void *)(v0 + 456);
  uint64_t v21 = *(void *)(v0 + 440);
  uint64_t v22 = *(void *)(v0 + 448);
  id v23 = [v19 uniqueIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v23) = static UUID.== infix(_:_:)();
  char v24 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v24(v20, v21);
  uint64_t v9 = *(void **)(v0 + 568);
  uint64_t v25 = *(void *)(v0 + 464);
  uint64_t v26 = *(void *)(v0 + 440);
  if ((v23 & 1) == 0)
  {
    v24(*(void *)(v0 + 464), *(void *)(v0 + 440));

    goto LABEL_13;
  }
  unsigned __int8 v27 = [v19 isComplete];

  v24(v25, v26);
  if ((v27 & 1) == 0) {
    goto LABEL_19;
  }
  char v28 = 3;
LABEL_20:
  uint64_t v30 = *(void *)(v0 + 568);
  uint64_t v32 = *(void *)(v0 + 288);
  uint64_t v31 = *(char **)(v0 + 296);
  *uint64_t v31 = v28;
  swift_storeEnumTagMultiPayload();
  sub_1000172F8(&qword_10065DBF0);
  uint64_t v33 = *(void *)(v32 + 72);
  unint64_t v34 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1005A4070;
  uint64_t v36 = (void *)(v35 + v34);
  *uint64_t v36 = v30;
  swift_storeEnumTagMultiPayload();
  sub_100263EFC((uint64_t)v31, (uint64_t)v36 + v33);
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v0 + 584);
  uint64_t v38 = *(void *)(v0 + 480);
  uint64_t v39 = *(void *)(v0 + 448);
  uint64_t v40 = *(void *)(v0 + 440);
  uint64_t v41 = *(void *)(v0 + 416);
  uint64_t v42 = *(void *)(v0 + 376);
  BOOL v43 = *(uint64_t **)(v0 + 208);

  v37(v41, v42);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
  *BOOL v43 = v35;
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44();
}

uint64_t sub_1002619DC()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 584);
  uint64_t v2 = *(void **)(v0 + 576);
  uint64_t v3 = *(void *)(v0 + 480);
  uint64_t v4 = *(void *)(v0 + 440);
  uint64_t v5 = *(void *)(v0 + 448);
  uint64_t v6 = *(void *)(v0 + 416);
  uint64_t v7 = *(void *)(v0 + 376);
  uint64_t v8 = *(void *)(v0 + 360);

  sub_100264074(v8);
  v1(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100261BFC()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 584);
  uint64_t v2 = *(void **)(v0 + 576);
  uint64_t v3 = *(void **)(v0 + 568);
  uint64_t v11 = *(void *)(v0 + 480);
  uint64_t v4 = *(void *)(v0 + 440);
  uint64_t v5 = *(void *)(v0 + 448);
  uint64_t v6 = *(void *)(v0 + 416);
  uint64_t v7 = *(void *)(v0 + 376);
  uint64_t v8 = *(void *)(v0 + 360);

  sub_100264074(v8);
  v1(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v11, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100261E28()
{
  uint64_t v1 = *(void *)(v0 + 680);
  uint64_t v2 = *(id **)(v0 + 216);
  static Logger.install.getter();
  sub_100263CF8(v2);
  swift_errorRetain();
  sub_100263CF8(v2);
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void ***)(v0 + 216);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v30 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412546;
    uint64_t v7 = *v5;
    *(void *)(v0 + 144) = *v5;
    id v8 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v30 = v7;
    sub_100263D7C(v5);
    sub_100263D7C(v5);
    *(_WORD *)(v6 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 152) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v30[1] = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%@] Failed to set device security promise: %{public}@", (uint8_t *)v6, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    id v10 = *(void ***)(v0 + 216);
    sub_100263D7C(v10);
    sub_100263D7C(v10);
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v11 = *(void *)(v0 + 648);
  uint64_t v12 = *(void **)(v0 + 568);
  uint64_t v13 = *(void *)(v0 + 288);
  uint64_t v15 = *(void *)(v0 + 232);
  uint64_t v14 = *(void *)(v0 + 240);
  uint64_t v16 = *(void *)(v0 + 224);

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  sub_1000172F8(&qword_10065DBF0);
  uint64_t v17 = *(void *)(v13 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1005A4070;
  uint64_t v20 = (void *)(v19 + v18);
  *uint64_t v20 = v11;
  swift_storeEnumTagMultiPayload();
  *(void *)((char *)v20 + v17) = v1;
  swift_storeEnumTagMultiPayload();

  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 584);
  uint64_t v22 = *(void *)(v0 + 480);
  uint64_t v23 = *(void *)(v0 + 448);
  uint64_t v24 = *(void *)(v0 + 440);
  uint64_t v25 = *(void *)(v0 + 416);
  uint64_t v26 = *(void *)(v0 + 376);
  unsigned __int8 v27 = *(uint64_t **)(v0 + 208);

  v21(v25, v26);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  *unsigned __int8 v27 = v19;
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_1002622AC()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 584);
  uint64_t v2 = *(void **)(v0 + 576);
  uint64_t v3 = *(void *)(v0 + 480);
  uint64_t v4 = *(void *)(v0 + 440);
  uint64_t v5 = *(void *)(v0 + 448);
  uint64_t v6 = *(void *)(v0 + 416);
  uint64_t v7 = *(void *)(v0 + 376);

  v1(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1002624C0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return _swift_task_switch(sub_100262550, 0, 0);
}

uint64_t sub_100262550()
{
  *(void *)(v0 + 16) = 0;
  unsigned int v1 = [*(id *)(v0 + 24) setPlaceholderPromise:*(void *)(v0 + 32) error:v0 + 16];
  uint64_t v2 = *(void **)(v0 + 16);
  if (v1)
  {
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    id v3 = v2;
    uint64_t v4 = v7;
  }
  else
  {
    id v5 = v2;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v4();
}

uint64_t sub_100262654(uint64_t a1, int *a2)
{
  v2[18] = a1;
  uint64_t v4 = sub_1000172F8((uint64_t *)&unk_10065DC50);
  v2[19] = v4;
  v2[20] = *(void *)(v4 - 8);
  v2[21] = swift_task_alloc();
  uint64_t v7 = (uint64_t (*)(void))((char *)a2 + *a2);
  id v5 = (void *)swift_task_alloc();
  v2[22] = v5;
  *id v5 = v2;
  v5[1] = sub_10026278C;
  return v7();
}

uint64_t sub_10026278C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1002628C8, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    id v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1002628C8()
{
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  id v3 = (void *)v0[18];
  uint64_t v4 = v0[19];
  uint64_t v5 = _convertErrorToNSError(_:)();
  v0[24] = v5;
  v0[2] = v0;
  v0[3] = sub_100262A68;
  swift_continuation_init();
  v0[17] = v4;
  uint64_t v6 = sub_10019CE94(v0 + 14);
  sub_1000172F8(&qword_10065B260);
  CheckedContinuation.init(continuation:function:)();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 32))(v6, v1, v4);
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 1107296256;
  v0[12] = sub_100263DFC;
  v0[13] = &unk_10063D480;
  [v3 cancelForReason:v5 client:28 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100262A68()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 200) = v1;
  if (v1) {
    uint64_t v2 = sub_100264C58;
  }
  else {
    uint64_t v2 = sub_100264C70;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100262B78(uint64_t a1, int *a2)
{
  v2[18] = a1;
  uint64_t v4 = sub_1000172F8((uint64_t *)&unk_10065DC50);
  v2[19] = v4;
  v2[20] = *(void *)(v4 - 8);
  v2[21] = swift_task_alloc();
  uint64_t v7 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v5 = (void *)swift_task_alloc();
  v2[22] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100262CB0;
  return v7();
}

uint64_t sub_100262CB0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100262DEC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    id v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100262DEC()
{
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  id v3 = (void *)v0[18];
  uint64_t v4 = v0[19];
  uint64_t v5 = _convertErrorToNSError(_:)();
  v0[24] = v5;
  v0[2] = v0;
  v0[3] = sub_100262A68;
  swift_continuation_init();
  v0[17] = v4;
  uint64_t v6 = sub_10019CE94(v0 + 14);
  sub_1000172F8(&qword_10065B260);
  CheckedContinuation.init(continuation:function:)();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 32))(v6, v1, v4);
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 1107296256;
  v0[12] = sub_100263DFC;
  v0[13] = &unk_10063D4F8;
  [v3 cancelForReason:v5 client:28 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100262F8C(uint64_t a1, int *a2)
{
  v2[18] = a1;
  uint64_t v4 = sub_1000172F8((uint64_t *)&unk_10065DC50);
  v2[19] = v4;
  v2[20] = *(void *)(v4 - 8);
  v2[21] = swift_task_alloc();
  uint64_t v7 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v5 = (void *)swift_task_alloc();
  v2[22] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1002630C4;
  return v7();
}

uint64_t sub_1002630C4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100263200, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    id v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100263200()
{
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  id v3 = (void *)v0[18];
  uint64_t v4 = v0[19];
  uint64_t v5 = _convertErrorToNSError(_:)();
  v0[24] = v5;
  v0[2] = v0;
  v0[3] = sub_100262A68;
  swift_continuation_init();
  v0[17] = v4;
  uint64_t v6 = sub_10019CE94(v0 + 14);
  sub_1000172F8(&qword_10065B260);
  CheckedContinuation.init(continuation:function:)();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 32))(v6, v1, v4);
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 1107296256;
  v0[12] = sub_100263DFC;
  v0[13] = &unk_10063D4A8;
  [v3 cancelForReason:v5 client:28 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1002633A0(uint64_t a1, int *a2)
{
  v2[18] = a1;
  uint64_t v4 = sub_1000172F8((uint64_t *)&unk_10065DC50);
  v2[19] = v4;
  v2[20] = *(void *)(v4 - 8);
  v2[21] = swift_task_alloc();
  uint64_t v7 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v5 = (void *)swift_task_alloc();
  v2[22] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1002634D8;
  return v7();
}

uint64_t sub_1002634D8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100263614, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    id v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100263614()
{
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  id v3 = (void *)v0[18];
  uint64_t v4 = v0[19];
  uint64_t v5 = _convertErrorToNSError(_:)();
  v0[24] = v5;
  v0[2] = v0;
  v0[3] = sub_1002637B4;
  swift_continuation_init();
  v0[17] = v4;
  uint64_t v6 = sub_10019CE94(v0 + 14);
  sub_1000172F8(&qword_10065B260);
  CheckedContinuation.init(continuation:function:)();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 32))(v6, v1, v4);
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 1107296256;
  v0[12] = sub_100263DFC;
  v0[13] = &unk_10063D4D0;
  [v3 cancelForReason:v5 client:28 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1002637B4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 200) = v1;
  if (v1) {
    uint64_t v2 = sub_100263940;
  }
  else {
    uint64_t v2 = sub_1002638C4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002638C4()
{
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100263940()
{
  swift_willThrow();
  swift_errorRelease();

  swift_willThrow();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002639D0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return _swift_task_switch(sub_100263A60, 0, 0);
}

uint64_t sub_100263A60()
{
  *(void *)(v0 + 16) = 0;
  unsigned int v1 = [*(id *)(v0 + 24) setDeviceSecurityPromise:*(void *)(v0 + 32) error:v0 + 16];
  uint64_t v2 = *(void **)(v0 + 16);
  if (v1)
  {
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    id v3 = v2;
    uint64_t v4 = v7;
  }
  else
  {
    id v5 = v2;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v4();
}

uint64_t sub_100263B64(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (sub_1004E588C() != 2)
  {
    id v8 = [a1 identity];
    id v9 = [v8 bundleID];

    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    if (v10 == a2 && v12 == a3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0) {
        return 1;
      }
    }
    uint64_t v15 = (void **)(a4 + 16);
    swift_beginAccess();
    uint64_t v16 = *v15;
    *uint64_t v15 = a1;

    id v17 = a1;
  }
  return 1;
}

__n128 sub_100263C78@<Q0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_10026417C(a1, a2, a3, a4, a5, a6, v11);
  if (!v7)
  {
    long long v10 = v11[3];
    *(_OWORD *)(a7 + 32) = v11[2];
    *(_OWORD *)(a7 + 48) = v10;
    *(void *)(a7 + 64) = v12;
    __n128 result = (__n128)v11[1];
    *(_OWORD *)a7 = v11[0];
    *(__n128 *)(a7 + 16) = result;
  }
  return result;
}

uint64_t sub_100263CCC(uint64_t a1)
{
  return a1;
}

id *sub_100263CF8(id *a1)
{
  id v2 = *a1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void **sub_100263D7C(void **a1)
{
  id v2 = *a1;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return a1;
}

void sub_100263DFC(uint64_t a1, void *a2)
{
  sub_10018B1DC(0, &qword_10065DC60);
  sub_10018AC60((void *)(a1 + 32), *(void *)(a1 + 56));
  if (a2)
  {
    id v4 = a2;
    sub_1000172F8((uint64_t *)&unk_10065DC50);
    CheckedContinuation.resume(throwing:)();
  }
  else
  {
    sub_1000172F8((uint64_t *)&unk_10065DC50);
    CheckedContinuation.resume(returning:)();
  }
}

uint64_t sub_100263E98(uint64_t a1, unint64_t a2)
{
  if (a2 != 2) {
    return sub_1001C5E20(a1, a2);
  }
  return a1;
}

unint64_t sub_100263EA8()
{
  unint64_t result = qword_10065DB20;
  if (!qword_10065DB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065DB20);
  }
  return result;
}

uint64_t sub_100263EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppInstallTaskResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100263F60()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_10000B238;
  *(_OWORD *)(v2 + 24) = v3;
  return _swift_task_switch(sub_100263A60, 0, 0);
}

uint64_t sub_10026400C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000172F8(&qword_10065C3C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100264074(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PlaceholderPromiseBuilder();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002640D0()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1000176B4;
  *(_OWORD *)(v2 + 24) = v3;
  return _swift_task_switch(sub_100262550, 0, 0);
}

uint64_t sub_10026417C@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v42 = a5;
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v39 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = a4;
  id v17 = a1;
  id v40 = sub_100249BF4(v17);
  uint64_t v19 = v18;

  swift_retain();
  uint64_t v20 = sub_10041CE88(a2, (uint64_t)[v17 persistentID]);
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v39 = v20;

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = a3[28];
    uint64_t v24 = a3[2];
    uint64_t v25 = a3[21];
    uint64_t v26 = a3[24];
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_release();
    uint64_t v27 = *(void *)(v26 + 152);
    swift_retain();
    swift_release();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();

    swift_release_n();
    swift_release_n();
    swift_release_n();
    uint64_t result = swift_release_n();
    id v29 = v40;
    *a7 = v16;
    a7[1] = v29;
    uint64_t v30 = v39;
    a7[2] = v19;
    a7[3] = v30;
    a7[4] = v22;
    a7[5] = v23;
    a7[6] = v24;
    a7[7] = v25;
    a7[8] = v27;
  }
  else
  {
    id v40 = a3;
    uint64_t v41 = a6;
    id v38 = v16;
    swift_release();
    static Logger.install.getter();
    uint64_t v31 = v17;
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      unint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v34 = 134217984;
      id v43 = [v31 persistentID];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v32, v33, "No package available for \"%lld\"", v34, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      uint64_t v32 = v31;
    }
    uint64_t v35 = v39;

    (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v13);
    type metadata accessor for InternalError();
    sub_100013ABC((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();

    swift_release();
    id v36 = v38;

    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void **sub_100264544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v45 = a1;
  uint64_t v46 = a2;
  uint64_t v5 = type metadata accessor for AppInstallRequestType();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v40 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v41 = (char *)&v39 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  id v48 = (char *)&v39 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  uint64_t v42 = v15 + 16;
  BOOL v44 = *(void (**)(char *, void, uint64_t))(v6 + 104);
  v44(v14, enum case for AppInstallRequestType.restore(_:), v5);
  sub_100013ABC(&qword_10065B640, (void (*)(uint64_t))&type metadata accessor for AppInstallRequestType);
  uint64_t v49 = a3;
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v43 = v3;
  uint64_t v47 = v15;
  if (aBlock == v50 && v53 == v51) {
    char v16 = 1;
  }
  else {
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17(v14, v5);
  uint64_t v18 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v48, v49, v5);
  if (v16) {
    goto LABEL_9;
  }
  uint64_t v39 = v17;
  uint64_t v19 = v41;
  v44(v41, enum case for AppInstallRequestType.restoreUpdate(_:), v5);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (aBlock == v50 && v53 == v51)
  {
    swift_bridgeObjectRelease_n();
    id v17 = v39;
    v39(v19, v5);
LABEL_9:
    v17(v18, v5);
LABEL_10:
    sub_10018B1DC(0, (unint64_t *)&qword_100661B30);
    Class ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    uint64_t v21 = (void *)swift_allocObject();
    uint64_t v22 = v46;
    void v21[2] = v45;
    v21[3] = v22;
    uint64_t v23 = v47;
    v21[4] = v47;
    int v56 = sub_100264C68;
    uint64_t v57 = v21;
    Swift::String_optional aBlock = _NSConcreteStackBlock;
    uint64_t v53 = 1107296256;
    uint64_t v24 = &unk_10063D458;
    goto LABEL_11;
  }
  uint64_t v31 = v18;
  char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  os_log_type_t v33 = v39;
  v39(v19, v5);
  v33(v31, v5);
  if (v32) {
    goto LABEL_10;
  }
  unint64_t v34 = v40;
  v44(v40, enum case for AppInstallRequestType.promotion(_:), v5);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (aBlock == v50 && v53 == v51)
  {
    swift_bridgeObjectRelease_n();
    v33(v34, v5);
    uint64_t v23 = v47;
  }
  else
  {
    uint64_t v35 = v33;
    char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v35(v34, v5);
    uint64_t v23 = v47;
    if ((v36 & 1) == 0) {
      goto LABEL_12;
    }
  }
  sub_10018B1DC(0, (unint64_t *)&unk_10065DC40);
  Class ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v37 = (void *)swift_allocObject();
  uint64_t v38 = v46;
  v37[2] = v45;
  _OWORD v37[3] = v38;
  v37[4] = v23;
  int v56 = sub_100264BD0;
  uint64_t v57 = v37;
  Swift::String_optional aBlock = _NSConcreteStackBlock;
  uint64_t v53 = 1107296256;
  uint64_t v24 = &unk_10063D408;
LABEL_11:
  char v54 = sub_1004E598C;
  char v55 = v24;
  uint64_t v25 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  Swift::String_optional aBlock = 0;
  unsigned __int8 v26 = [ObjCClassFromMetadata enumerateCoordinatorsWithError:&aBlock usingBlock:v25];
  _Block_release(v25);
  uint64_t v27 = aBlock;
  if ((v26 & 1) == 0)
  {
    char v28 = v27;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_release();
    return v28;
  }
LABEL_12:
  swift_beginAccess();
  char v28 = *(void ***)(v23 + 16);
  id v29 = v28;
  swift_release();
  return v28;
}

uint64_t sub_100264B94()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100264BD0(void *a1)
{
  return sub_100263B64(a1, v1[2], v1[3], v1[4]) & 1;
}

uint64_t sub_100264BF4()
{
  return swift_release();
}

uint64_t sub_100264C00()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100264C40(uint64_t a1, uint64_t a2)
{
  return sub_1000144C8(a2 + 32, a1 + 32);
}

uint64_t sub_100264C50(uint64_t a1)
{
  return sub_100014524(a1 + 32);
}

char *sub_100264C84(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  switch(a2 >> 62)
  {
    case 1uLL:
      if ((int)a1 <= a1 >> 32)
      {
        sub_100012670(a1, a2);
        uint64_t v4 = __DataStorage._bytes.getter();
        if (v4)
        {
          uint64_t v5 = __DataStorage._offset.getter();
          uint64_t v6 = (int)a1 - v5;
          if (!__OFSUB__((int)a1, v5))
          {
            __DataStorage._length.getter();
            v4 += v6;
LABEL_15:
            sub_100013510(a1, v2);
            return (char *)v4;
          }
LABEL_19:
          __break(1u);
        }
LABEL_14:
        __DataStorage._length.getter();
        goto LABEL_15;
      }
      __break(1u);
      goto LABEL_18;
    case 2uLL:
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v8 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      uint64_t v9 = __DataStorage._bytes.getter();
      if (!v9)
      {
        uint64_t v4 = 0;
        if (!__OFSUB__(v8, v7)) {
          goto LABEL_10;
        }
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
      unint64_t v2 = v9;
      uint64_t v10 = __DataStorage._offset.getter();
      if (__OFSUB__(v7, v10))
      {
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      uint64_t v4 = v2 + v7 - v10;
      if (__OFSUB__(v8, v7)) {
        goto LABEL_13;
      }
LABEL_10:
      __DataStorage._length.getter();
      swift_release();
      swift_release();
      return (char *)v4;
    default:
      return &v12;
  }
}

uint64_t sub_100264DEC(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_100264E0C, 0, 0);
}

uint64_t sub_100264E0C()
{
  uint64_t v1 = v0[1].i64[1];
  uint64_t v2 = (int *)type metadata accessor for PlaceholderPromiseBuilder();
  uint64_t v3 = v2;
  if (*(unsigned char *)(v1 + v2[15]) == 1)
  {
    sub_100269A78();
    uint64_t v4 = (uint64_t *)(v1 + v3[5]);
    uint64_t v5 = *v4;
    uint64_t v6 = v4[1];
    swift_bridgeObjectRetain();
    id v7 = sub_100265440(v5, v6, 28, 1);
    v0[2].i64[0] = (uint64_t)v7;
    uint64_t v8 = (uint64_t)v7;
    uint64_t v9 = swift_task_alloc();
    v0[2].i64[1] = v9;
    *(void *)(v9 + 16) = v8;
    uint64_t v24 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10065DC28 + dword_10065DC28);
    uint64_t v10 = (void *)swift_task_alloc();
    v0[3].i64[0] = (uint64_t)v10;
    *uint64_t v10 = v0;
    v10[1] = sub_100265094;
    uint64_t v11 = (int *)&unk_10065DCA0;
  }
  else
  {
    char v12 = (uint64_t *)(v1 + v2[6]);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    uint64_t v15 = (uint64_t *)(v1 + v2[5]);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = *(void *)(v1 + v2[10]);
    objc_allocWithZone((Class)IXPlaceholder);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v19 = sub_100269CBC(v13, v14, v16, v17, v18, 28, (SEL *)&selRef_initAppPlaceholderWithBundleName_bundleID_installType_client_error_);
    v0[4].i64[0] = (uint64_t)v19;
    uint64_t v8 = (uint64_t)v19;
    uint64_t v20 = swift_task_alloc();
    v0[4].i64[1] = v20;
    int8x16_t v21 = v0[1];
    *(void *)(v20 + 16) = v8;
    *(int8x16_t *)(v20 + 24) = vextq_s8(v21, v21, 8uLL);
    uint64_t v24 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10065DC28 + dword_10065DC28);
    uint64_t v22 = (void *)swift_task_alloc();
    v0[5].i64[0] = (uint64_t)v22;
    void *v22 = v0;
    v22[1] = sub_100265244;
    uint64_t v11 = (int *)&unk_10065DC90;
  }
  return v24(v8, v11);
}

uint64_t sub_100265094()
{
  uint64_t v2 = (void *)*v1;
  v2[7] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1002651D8, 0, 0);
  }
  else
  {
    uint64_t v3 = v2[4];
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(uint64_t))v2[1];
    return v4(v3);
  }
}

uint64_t sub_1002651D8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100265244()
{
  uint64_t v2 = (void *)*v1;
  v2[11] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100265388, 0, 0);
  }
  else
  {
    uint64_t v3 = v2[8];
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(uint64_t))v2[1];
    return v4(v3);
  }
}

uint64_t sub_100265388()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for PlaceholderPromiseBuilder()
{
  uint64_t result = qword_10065DD58;
  if (!qword_10065DD58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_100265440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = 0;
  id v7 = [(id)swift_getObjCClassFromMetadata() placeholderForRemovableSystemAppWithBundleID:v6 client:a3 installType:a4 error:&v11];

  if (v7)
  {
    id v8 = v11;
  }
  else
  {
    id v9 = v11;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v7;
}

uint64_t sub_100265530(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return _swift_task_switch(sub_1002655C0, 0, 0);
}

uint64_t sub_1002655C0()
{
  *(void *)(v0 + 16) = 0;
  unsigned int v1 = [*(id *)(v0 + 24) setConfigurationCompleteWithError:v0 + 16];
  uint64_t v2 = *(void **)(v0 + 16);
  if (v1)
  {
    id v7 = *(uint64_t (**)(void))(v0 + 8);
    id v3 = v2;
    uint64_t v4 = v7;
  }
  else
  {
    id v5 = v2;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v4();
}

uint64_t sub_1002656C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  v3[19] = type metadata accessor for PlaceholderPromiseBuilder();
  v3[20] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v3[21] = v4;
  v3[22] = *(void *)(v4 - 8);
  v3[23] = swift_task_alloc();
  sub_1000172F8(&qword_10065DCA8);
  v3[24] = swift_task_alloc();
  sub_1000172F8(&qword_10065C3C0);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v3[27] = v5;
  v3[28] = *(void *)(v5 - 8);
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  return _swift_task_switch(sub_1002658C0, 0, 0);
}

uint64_t sub_1002658C0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 136) + *(int *)(*(void *)(v0 + 152) + 56));
  *(void *)(v0 + 104) = 0;
  unsigned int v2 = [*(id *)(v0 + 128) setMetadata:v1 error:v0 + 104];
  id v3 = *(void **)(v0 + 104);
  if (!v2)
  {
    id v24 = v3;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    goto LABEL_11;
  }
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 136);
  id v6 = objc_allocWithZone((Class)IXPlaceholderAttributes);
  id v7 = v3;
  id v8 = [v6 init];
  id v9 = v8;
  *(void *)(v0 + 248) = v8;
  if (*(unsigned char *)(v5 + *(int *)(v4 + 48))) {
    [v8 setLaunchProhibited:1];
  }
  if (*(unsigned char *)(*(void *)(v0 + 136) + *(int *)(*(void *)(v0 + 152) + 44)) == 1) {
    [v9 setArcadeApp:1];
  }
  uint64_t v10 = *(void **)(v0 + 128);
  *(void *)(v0 + 80) = 0;
  unsigned int v11 = [v10 setPlaceholderAttributes:v9 error:v0 + 80];
  char v12 = *(void **)(v0 + 80);
  if (!v11)
  {
    id v25 = v12;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    goto LABEL_11;
  }
  uint64_t v13 = *(void *)(v0 + 152);
  uint64_t v14 = *(void *)(v0 + 136);
  int v15 = *(unsigned __int8 *)(v14 + *(int *)(v13 + 32));
  id v16 = v12;
  if (v15 == 1)
  {
    uint64_t v17 = *(void **)(v0 + 128);
    _StringGuts.grow(_:)(20);
    uint64_t v18 = (uint64_t *)(v14 + *(int *)(v13 + 20));
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v21._countAndFlagsBits = 0xD000000000000012;
    v21._object = (void *)0x80000001005BA3F0;
    String.append(_:)(v21);
    id v22 = objc_allocWithZone((Class)IXPlaceholder);
    id v23 = sub_100269CBC(0xD000000000000011, 0x80000001005BA3D0, v20, v19, (uint64_t)v17, 28, (SEL *)&selRef_initPlugInPlaceholderWithBundleName_bundleID_parentPlaceholder_client_error_);
    *(void *)(v0 + 256) = v23;
    id v28 = v23;
    uint64_t v29 = *(void *)(v0 + 136);

    uint64_t v30 = swift_task_alloc();
    *(void *)(v0 + 264) = v30;
    *(void *)(v30 + 16) = v29;
    *(void *)(v30 + 24) = v28;
    uint64_t v31 = dword_10065DC28;
    char v32 = (void *)swift_task_alloc();
    *(void *)(v0 + 272) = v32;
    *char v32 = v0;
    v32[1] = sub_100266404;
    os_log_type_t v33 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10065DC28 + v31);
    unint64_t v34 = (int *)&unk_10065DCE8;
LABEL_22:
    return v33((uint64_t)v28, v34);
  }
  uint64_t v35 = *(void *)(v0 + 216);
  uint64_t v36 = *(void *)(v0 + 224);
  uint64_t v37 = *(void *)(v0 + 208);
  sub_10001893C(*(void *)(v0 + 144), v37);
  uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  if (v38(v37, 1, v35) != 1)
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 224) + 32))(*(void *)(v0 + 240), *(void *)(v0 + 208), *(void *)(v0 + 216));
    if ((URL.isFileURL.getter() & 1) == 0) {
      __break(1u);
    }
    id v47 = objc_allocWithZone((Class)IXPromisedTransferToPath);
    NSString v48 = String._bridgeToObjectiveC()();
    URL._bridgeToObjectiveC()(v49);
    uint64_t v51 = v50;
    id v28 = [v47 initWithName:v48 client:28 transferPath:v50 diskSpaceNeeded:0];
    *(void *)(v0 + 288) = v28;

    if (v28)
    {
      uint64_t v52 = *(void *)(v0 + 128);
      [v28 setShouldCopy:1];
      [v28 setComplete:1];
      uint64_t v53 = swift_task_alloc();
      *(void *)(v0 + 296) = v53;
      *(void *)(v53 + 16) = v52;
      *(void *)(v53 + 24) = v28;
      uint64_t v54 = dword_10065DC68;
      char v55 = (void *)swift_task_alloc();
      *(void *)(v0 + 304) = v55;
      *char v55 = v0;
      v55[1] = sub_10026778C;
      os_log_type_t v33 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10065DC68 + v54);
      unint64_t v34 = dword_10065DCD8;
      goto LABEL_22;
    }
    uint64_t v67 = *(void *)(v0 + 240);
    uint64_t v68 = *(void **)(v0 + 248);
    uint64_t v69 = *(void *)(v0 + 216);
    uint64_t v70 = *(void *)(v0 + 224);
    type metadata accessor for InternalError();
    sub_10019FE50();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v67, v69);
    goto LABEL_11;
  }
  uint64_t v39 = *(void *)(v0 + 216);
  uint64_t v40 = *(void *)(v0 + 200);
  uint64_t v41 = *(void *)(v0 + 136);
  sub_10001729C(*(void *)(v0 + 208), &qword_10065C3C0);
  sub_10001893C(v41, v40);
  if (v38(v40, 1, v39) == 1)
  {
    sub_10001729C(*(void *)(v0 + 200), &qword_10065C3C0);
    uint64_t v42 = *(void **)(v0 + 128);
    *(void *)(v0 + 72) = 0;
    unsigned __int8 v43 = [v42 setConfigurationCompleteWithError:v0 + 72];
    BOOL v44 = *(void **)(v0 + 72);
    uint64_t v45 = *(void **)(v0 + 248);
    if (v43)
    {
      id v46 = v44;

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      unsigned __int8 v26 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_12;
    }
    id v71 = v44;
    _convertNSErrorToError(_:)();

    swift_willThrow();
LABEL_11:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unsigned __int8 v26 = *(uint64_t (**)(void))(v0 + 8);
LABEL_12:
    return v26();
  }
  uint64_t v56 = *(void *)(v0 + 192);
  uint64_t v57 = *(void *)(v0 + 152);
  uint64_t v58 = *(void *)(v0 + 136);
  (*(void (**)(void, void, void))(*(void *)(v0 + 224) + 32))(*(void *)(v0 + 232), *(void *)(v0 + 200), *(void *)(v0 + 216));
  uint64_t v59 = sub_1000172F8(&qword_10065DCB0);
  *(void *)(v0 + 320) = v59;
  uint64_t v60 = *(int *)(v59 + 48);
  uint64_t v61 = *(void *)(v58 + *(int *)(v57 + 64));
  id v62 = [self ephemeralSessionConfiguration];
  [v62 setHTTPShouldSetCookies:0];
  [v62 setHTTPCookieAcceptPolicy:1];
  [v62 setRequestCachePolicy:1];
  sub_100373694(1);
  id v63 = [self sessionWithConfiguration:v62];
  *(void *)(v0 + 328) = v63;

  type metadata accessor for PlainHTTP();
  uint64_t inited = swift_initStackObject();
  *(void *)(v0 + 336) = inited;
  *(unsigned char *)(inited + 24) = 1;
  *(void *)(inited + 16) = v63;
  uint64_t v65 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v65;
  *uint64_t v65 = v0;
  v65[1] = sub_100267AC0;
  uint64_t v66 = *(void *)(v0 + 232);
  return sub_10029CE90(v56 + v60, v66, inited, v61);
}

uint64_t sub_100266404()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unsigned int v2 = sub_100266EC4;
  }
  else
  {
    swift_task_dealloc();
    unsigned int v2 = sub_100266554;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100266554()
{
  uint64_t v74 = v0;
  uint64_t v1 = (void *)v0[32];
  unsigned int v2 = (void *)v0[16];
  sub_1000172F8((uint64_t *)&unk_100660E90);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1005A55B0;
  *(void *)(v3 + 32) = v1;
  uint64_t v73 = v3;
  specialized Array._endMutation()();
  sub_100269A78();
  id v4 = v1;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v0[15] = 0;
  LODWORD(v2) = [v2 setAppExtensionPlaceholderPromises:isa error:v0 + 15];

  id v6 = (void *)v0[15];
  id v7 = (void *)v0[32];
  if (v2)
  {
    id v8 = v6;
  }
  else
  {
    id v9 = v6;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v10 = v0[20];
    uint64_t v11 = v0[17];
    static Logger.install.getter();
    sub_100269DD8(v11, v10);
    swift_errorRetain();
    swift_errorRetain();
    char v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    BOOL v14 = os_log_type_enabled(v12, v13);
    uint64_t v15 = v0[22];
    uint64_t v16 = v0[23];
    uint64_t v17 = v0[20];
    uint64_t v18 = v0[21];
    if (v14)
    {
      uint64_t v72 = v0[23];
      os_log_type_t type = v13;
      uint64_t v19 = v0[19];
      os_log_t log = v12;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v69 = v15;
      Swift::String v21 = (void *)swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 138412546;
      uint64_t v71 = v18;
      id v22 = *(void **)(v17 + *(int *)(v19 + 64));
      v0[11] = v22;
      id v23 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v21 = v22;
      sub_100264074(v17);
      *(_WORD *)(v20 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v24 = *(void *)(v0[7] - 8);
      swift_task_alloc();
      (*(void (**)(void))(v24 + 16))();
      uint64_t v25 = String.init<A>(describing:)();
      unint64_t v27 = v26;
      swift_task_dealloc();
      v0[14] = sub_1000143F4(v25, v27, &v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, log, type, "[%@] Non-fatal error occurred when setting extension placeholder: %s", (uint8_t *)v20, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v72, v71);
    }
    else
    {
      swift_errorRelease();
      sub_100264074(v17);
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v18);
    }
  }
  uint64_t v28 = v0[27];
  uint64_t v29 = v0[28];
  uint64_t v30 = v0[26];
  sub_10001893C(v0[18], v30);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  if (v31(v30, 1, v28) == 1)
  {
    uint64_t v32 = v0[27];
    uint64_t v33 = v0[25];
    uint64_t v34 = v0[17];
    sub_10001729C(v0[26], &qword_10065C3C0);
    sub_10001893C(v34, v33);
    if (v31(v33, 1, v32) == 1)
    {
      sub_10001729C(v0[25], &qword_10065C3C0);
      uint64_t v35 = (void *)v0[16];
      v0[9] = 0;
      unsigned __int8 v36 = [v35 setConfigurationCompleteWithError:v0 + 9];
      uint64_t v37 = (void *)v0[9];
      uint64_t v38 = (void *)v0[31];
      if (v36)
      {
        id v39 = v37;

        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v40 = (uint64_t (*)(void))v0[1];
LABEL_21:
        return v40();
      }
      id v67 = v37;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_20:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v40 = (uint64_t (*)(void))v0[1];
      goto LABEL_21;
    }
    uint64_t v52 = v0[24];
    uint64_t v53 = v0[19];
    uint64_t v54 = v0[17];
    (*(void (**)(void, void, void))(v0[28] + 32))(v0[29], v0[25], v0[27]);
    uint64_t v55 = sub_1000172F8(&qword_10065DCB0);
    v0[40] = v55;
    uint64_t v56 = *(int *)(v55 + 48);
    uint64_t v57 = *(void *)(v54 + *(int *)(v53 + 64));
    id v58 = [self ephemeralSessionConfiguration];
    [v58 setHTTPShouldSetCookies:0];
    [v58 setHTTPCookieAcceptPolicy:1];
    [v58 setRequestCachePolicy:1];
    sub_100373694(1);
    id v59 = [self sessionWithConfiguration:v58];
    v0[41] = v59;

    type metadata accessor for PlainHTTP();
    uint64_t inited = swift_initStackObject();
    v0[42] = inited;
    *(unsigned char *)(inited + 24) = 1;
    *(void *)(inited + 16) = v59;
    uint64_t v61 = (void *)swift_task_alloc();
    v0[43] = v61;
    *uint64_t v61 = v0;
    v61[1] = sub_100267AC0;
    uint64_t v62 = v0[29];
    return sub_10029CE90(v52 + v56, v62, inited, v57);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[28] + 32))(v0[30], v0[26], v0[27]);
    if ((URL.isFileURL.getter() & 1) == 0) {
      __break(1u);
    }
    id v41 = objc_allocWithZone((Class)IXPromisedTransferToPath);
    NSString v42 = String._bridgeToObjectiveC()();
    URL._bridgeToObjectiveC()(v43);
    uint64_t v45 = v44;
    id v46 = [v41 initWithName:v42 client:28 transferPath:v44 diskSpaceNeeded:0];
    v0[36] = v46;

    if (!v46)
    {
      uint64_t v63 = v0[30];
      uint64_t v64 = (void *)v0[31];
      uint64_t v65 = v0[27];
      uint64_t v66 = v0[28];
      type metadata accessor for InternalError();
      sub_10019FE50();
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v63, v65);
      goto LABEL_20;
    }
    uint64_t v47 = v0[16];
    [v46 setShouldCopy:1];
    [v46 setComplete:1];
    uint64_t v48 = swift_task_alloc();
    v0[37] = v48;
    *(void *)(v48 + 16) = v47;
    *(void *)(v48 + 24) = v46;
    uint64_t v49 = dword_10065DC68;
    id v50 = (void *)swift_task_alloc();
    v0[38] = v50;
    *id v50 = v0;
    v50[1] = sub_10026778C;
    return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10065DC68 + v49))((uint64_t)v46, dword_10065DCD8);
  }
}

uint64_t sub_100266EC4()
{
  uint64_t v66 = v0;
  uint64_t v1 = (void *)v0;

  swift_task_dealloc();
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 136);
  static Logger.install.getter();
  sub_100269DD8(v3, v2);
  swift_errorRetain();
  swift_errorRetain();
  id v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v62 = *(void *)(v0 + 176);
    uint64_t v6 = *(void *)(v0 + 160);
    uint64_t v63 = *(void *)(v0 + 168);
    uint64_t v64 = *(void *)(v0 + 184);
    uint64_t v7 = *(void *)(v0 + 152);
    os_log_t log = v4;
    uint64_t v8 = swift_slowAlloc();
    id v9 = (void *)swift_slowAlloc();
    uint64_t v65 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412546;
    os_log_type_t type = v5;
    uint64_t v10 = *(void **)(v6 + *(int *)(v7 + 64));
    v1[11] = v10;
    id v11 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v9 = v10;
    sub_100264074(v6);
    *(_WORD *)(v8 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v12 = *(void *)(v1[7] - 8);
    swift_task_alloc();
    (*(void (**)(void))(v12 + 16))();
    uint64_t v13 = String.init<A>(describing:)();
    unint64_t v15 = v14;
    swift_task_dealloc();
    v1[14] = sub_1000143F4(v13, v15, &v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, type, "[%@] Non-fatal error occurred when setting extension placeholder: %s", (uint8_t *)v8, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v64, v63);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 176);
    uint64_t v17 = *(void *)(v0 + 184);
    uint64_t v19 = v1[20];
    uint64_t v18 = v1[21];
    swift_errorRelease();
    sub_100264074(v19);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v18);
  }
  uint64_t v20 = v1[27];
  uint64_t v21 = v1[28];
  uint64_t v22 = v1[26];
  sub_10001893C(v1[18], v22);
  id v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v23(v22, 1, v20) == 1)
  {
    uint64_t v24 = v1[27];
    uint64_t v25 = v1[25];
    uint64_t v26 = v1[17];
    sub_10001729C(v1[26], &qword_10065C3C0);
    sub_10001893C(v26, v25);
    if (v23(v25, 1, v24) == 1)
    {
      sub_10001729C(v1[25], &qword_10065C3C0);
      unint64_t v27 = (void *)v1[16];
      v1[9] = 0;
      unsigned __int8 v28 = [v27 setConfigurationCompleteWithError:v1 + 9];
      uint64_t v29 = (void *)v1[9];
      uint64_t v30 = (void *)v1[31];
      if (v28)
      {
        id v31 = v29;

        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v32 = (uint64_t (*)(void))v1[1];
LABEL_19:
        return v32();
      }
      id v59 = v29;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_18:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v32 = (uint64_t (*)(void))v1[1];
      goto LABEL_19;
    }
    uint64_t v44 = v1[24];
    uint64_t v45 = v1[19];
    uint64_t v46 = v1[17];
    (*(void (**)(void, void, void))(v1[28] + 32))(v1[29], v1[25], v1[27]);
    uint64_t v47 = sub_1000172F8(&qword_10065DCB0);
    v1[40] = v47;
    uint64_t v48 = *(int *)(v47 + 48);
    uint64_t v49 = *(void *)(v46 + *(int *)(v45 + 64));
    id v50 = [self ephemeralSessionConfiguration];
    [v50 setHTTPShouldSetCookies:0];
    [v50 setHTTPCookieAcceptPolicy:1];
    [v50 setRequestCachePolicy:1];
    sub_100373694(1);
    id v51 = [self sessionWithConfiguration:v50];
    v1[41] = v51;

    type metadata accessor for PlainHTTP();
    uint64_t inited = swift_initStackObject();
    v1[42] = inited;
    *(unsigned char *)(inited + 24) = 1;
    *(void *)(inited + 16) = v51;
    uint64_t v53 = (void *)swift_task_alloc();
    v1[43] = v53;
    *uint64_t v53 = v1;
    v53[1] = sub_100267AC0;
    uint64_t v54 = v1[29];
    return sub_10029CE90(v44 + v48, v54, inited, v49);
  }
  else
  {
    (*(void (**)(void, void, void))(v1[28] + 32))(v1[30], v1[26], v1[27]);
    if ((URL.isFileURL.getter() & 1) == 0) {
      __break(1u);
    }
    id v33 = objc_allocWithZone((Class)IXPromisedTransferToPath);
    NSString v34 = String._bridgeToObjectiveC()();
    URL._bridgeToObjectiveC()(v35);
    uint64_t v37 = v36;
    id v38 = [v33 initWithName:v34 client:28 transferPath:v36 diskSpaceNeeded:0];
    v1[36] = v38;

    if (!v38)
    {
      uint64_t v55 = v1[30];
      uint64_t v56 = (void *)v1[31];
      uint64_t v57 = v1[27];
      uint64_t v58 = v1[28];
      type metadata accessor for InternalError();
      sub_10019FE50();
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v55, v57);
      goto LABEL_18;
    }
    uint64_t v39 = v1[16];
    [v38 setShouldCopy:1];
    [v38 setComplete:1];
    uint64_t v40 = swift_task_alloc();
    v1[37] = v40;
    *(void *)(v40 + 16) = v39;
    *(void *)(v40 + 24) = v38;
    uint64_t v41 = dword_10065DC68;
    NSString v42 = (void *)swift_task_alloc();
    v1[38] = v42;
    void *v42 = v1;
    v42[1] = sub_10026778C;
    return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10065DC68 + v41))((uint64_t)v38, dword_10065DCD8);
  }
}

uint64_t sub_10026778C()
{
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1002682E4;
  }
  else {
    uint64_t v2 = sub_1002678EC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002678EC()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 224);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  *(void *)(v0 + 72) = 0;
  unsigned int v4 = [*(id *)(v0 + 128) setConfigurationCompleteWithError:v0 + 72];
  os_log_type_t v5 = *(void **)(v0 + 72);
  uint64_t v6 = *(void **)(v0 + 248);
  if (v4)
  {
    id v7 = v5;
  }
  else
  {
    id v9 = v5;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100267AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v3;
  uint64_t v6 = *v3;
  swift_task_dealloc();
  uint64_t v8 = *(void **)(v6 + 328);
  if (v2)
  {
    swift_setDeallocating();
    [v8 invalidateAndCancel];

    swift_errorRelease();
    id v9 = sub_1002683F4;
  }
  else
  {
    *(void *)(v7 + 352) = a2;
    *(void *)(v7 + 360) = a1;
    swift_setDeallocating();
    [v8 invalidateAndCancel];

    id v9 = sub_100267C80;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_100267C80()
{
  uint64_t v1 = v0[20].i64[0];
  uint64_t v2 = (int8x16_t *)v0[12].i64[0];
  *uint64_t v2 = vextq_s8(v0[22], v0[22], 8uLL);
  (*(void (**)(int8x16_t *, void, uint64_t, uint64_t))(*(void *)(v1 - 8) + 56))(v2, 0, 1, v1);
  uint64_t v3 = v2->i64[0];
  v0[23].i64[0] = v2->i64[0];
  unint64_t v4 = v2->u64[1];
  v0[23].i64[1] = v4;
  sub_10001729C((uint64_t)v2->i64 + *(int *)(v1 + 48), &qword_10065DCB8);
  id v5 = objc_allocWithZone((Class)IXPromisedInMemoryData);
  sub_100012670(v3, v4);
  NSString v6 = String._bridgeToObjectiveC()();
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v8 = [v5 initWithName:v6 client:28 data:isa];
  v0[24].i64[0] = (uint64_t)v8;
  sub_100013510(v3, v4);

  if (v8)
  {
    uint64_t v9 = v0[8].i64[0];
    uint64_t v10 = swift_task_alloc();
    v0[24].i64[1] = v10;
    *(void *)(v10 + 16) = v9;
    *(void *)(v10 + 24) = v8;
    uint64_t v11 = dword_10065DC70;
    uint64_t v12 = (void *)swift_task_alloc();
    v0[25].i64[0] = (uint64_t)v12;
    *uint64_t v12 = v0;
    v12[1] = sub_100267FA0;
    return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10065DC70 + v11))((uint64_t)v8, dword_10065DCC8);
  }
  else
  {
    unint64_t v14 = (void *)v0[15].i64[1];
    uint64_t v16 = v0[14].i64[0];
    uint64_t v15 = v0[14].i64[1];
    uint64_t v17 = v0[13].i64[1];
    type metadata accessor for InternalError();
    sub_10019FE50();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    sub_100013510(v3, v4);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0->i64[1];
    return v18();
  }
}

uint64_t sub_100267FA0()
{
  *(void *)(*(void *)v1 + 408) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10026860C;
  }
  else {
    uint64_t v2 = sub_100268100;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100268100()
{
  unint64_t v1 = *(void *)(v0 + 376);
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v5 = *(void *)(v0 + 216);

  sub_100013510(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  *(void *)(v0 + 72) = 0;
  unsigned int v6 = [*(id *)(v0 + 128) setConfigurationCompleteWithError:v0 + 72];
  uint64_t v7 = *(void **)(v0 + 72);
  id v8 = *(void **)(v0 + 248);
  if (v6)
  {
    id v9 = v7;
  }
  else
  {
    id v11 = v7;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1002682E4()
{
  unint64_t v1 = *(void **)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 224);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1002683F4()
{
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 192);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 320) - 8) + 56))(v4, 1, 1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10001729C(v4, &qword_10065DCA8);
  *(void *)(v0 + 72) = 0;
  unsigned int v5 = [*(id *)(v0 + 128) setConfigurationCompleteWithError:v0 + 72];
  unsigned int v6 = *(void **)(v0 + 72);
  uint64_t v7 = *(void **)(v0 + 248);
  if (v5)
  {
    id v8 = v6;
  }
  else
  {
    id v10 = v6;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_10026860C()
{
  unint64_t v1 = *(void *)(v0 + 376);
  uint64_t v2 = *(void **)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v5 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 232);
  uint64_t v6 = *(void *)(v0 + 216);

  sub_100013510(v3, v1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100268730(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return _swift_task_switch(sub_10026B4B0, 0, 0);
}

uint64_t sub_1002687C0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return _swift_task_switch(sub_100268850, 0, 0);
}

uint64_t sub_100268850()
{
  *(void *)(v0 + 16) = 0;
  unsigned int v1 = [*(id *)(v0 + 24) setIconPromise:*(void *)(v0 + 32) error:v0 + 16];
  uint64_t v2 = *(void **)(v0 + 16);
  if (v1)
  {
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    id v3 = v2;
    uint64_t v4 = v7;
  }
  else
  {
    id v5 = v2;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v4();
}

uint64_t sub_100268954(uint64_t a1, uint64_t a2)
{
  v2[24] = a1;
  v2[25] = a2;
  sub_1000172F8(&qword_10065DCA8);
  v2[26] = swift_task_alloc();
  sub_1000172F8(&qword_10065C3C0);
  v2[27] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v2[28] = v3;
  v2[29] = *(void *)(v3 - 8);
  v2[30] = swift_task_alloc();
  return _swift_task_switch(sub_100268AA0, 0, 0);
}

uint64_t sub_100268AA0()
{
  unsigned int v1 = (void *)v0[25];
  id v2 = [objc_allocWithZone((Class)IXPlaceholderAttributes) init];
  v0[31] = v2;
  uint64_t v3 = type metadata accessor for PlaceholderPromiseBuilder();
  NSString v4 = String._bridgeToObjectiveC()();
  [v2 setBundleVersion:v4];

  sub_1000172F8(&qword_10065C3A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A4070;
  *(void *)(inited + 32) = 0xD00000000000001ALL;
  *(void *)(inited + 40) = 0x80000001005BA410;
  *(void *)(inited + 48) = 0xD000000000000022;
  *(void *)(inited + 56) = 0x80000001005BA430;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0xD000000000000019;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 88) = 0x80000001005BA460;
  *(void *)(inited + 96) = 0xD000000000000011;
  *(void *)(inited + 104) = 0x80000001005BA3D0;
  sub_10044B428(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 setExtensionDictionary:isa];

  v0[22] = 0;
  unsigned int v7 = [v1 setPlaceholderAttributes:v2 error:v0 + 22];
  uint64_t v8 = (void *)v0[22];
  if (!v7) {
    goto LABEL_5;
  }
  uint64_t v9 = v0[28];
  uint64_t v10 = v0[29];
  uint64_t v11 = v0[27];
  sub_10001893C(v0[24] + *(int *)(v3 + 52), v11);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1)
  {
    uint64_t v12 = v0[27];
    id v13 = v8;
    sub_10001729C(v12, &qword_10065C3C0);
    unint64_t v14 = (void *)v0[25];
    v0[23] = 0;
    unsigned __int8 v15 = [v14 setConfigurationCompleteWithError:v0 + 23];
    uint64_t v8 = (void *)v0[23];
    id v2 = (id)v0[31];
    if (v15)
    {
      id v16 = v8;

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v17 = (uint64_t (*)(void))v0[1];
LABEL_6:
      return v17();
    }
LABEL_5:
    id v18 = v8;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    goto LABEL_6;
  }
  uint64_t v20 = v0[26];
  uint64_t v21 = v0[24];
  (*(void (**)(void, void, void))(v0[29] + 32))(v0[30], v0[27], v0[28]);
  uint64_t v22 = sub_1000172F8(&qword_10065DCB0);
  v0[32] = v22;
  uint64_t v23 = *(int *)(v22 + 48);
  uint64_t v24 = *(void *)(v21 + *(int *)(v3 + 64));
  uint64_t v25 = self;
  id v26 = v8;
  id v27 = [v25 ephemeralSessionConfiguration];
  [v27 setHTTPShouldSetCookies:0];
  [v27 setHTTPCookieAcceptPolicy:1];
  [v27 setRequestCachePolicy:1];
  sub_100373694(1);
  id v28 = [self sessionWithConfiguration:v27];
  v0[33] = v28;

  type metadata accessor for PlainHTTP();
  uint64_t v29 = swift_initStackObject();
  v0[34] = v29;
  *(unsigned char *)(v29 + 24) = 1;
  *(void *)(v29 + 16) = v28;
  uint64_t v30 = (void *)swift_task_alloc();
  v0[35] = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_100268F54;
  uint64_t v31 = v0[30];
  return sub_10029CE90(v20 + v23, v31, v29, v24);
}

uint64_t sub_100268F54(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v3;
  uint64_t v6 = *v3;
  swift_task_dealloc();
  uint64_t v8 = *(void **)(v6 + 264);
  if (v2)
  {
    swift_setDeallocating();
    [v8 invalidateAndCancel];

    swift_errorRelease();
    uint64_t v9 = sub_100269720;
  }
  else
  {
    *(void *)(v7 + 288) = a2;
    *(void *)(v7 + 296) = a1;
    swift_setDeallocating();
    [v8 invalidateAndCancel];

    uint64_t v9 = sub_100269114;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_100269114()
{
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = *(int8x16_t **)(v0 + 208);
  *uint64_t v2 = vextq_s8(*(int8x16_t *)(v0 + 288), *(int8x16_t *)(v0 + 288), 8uLL);
  (*(void (**)(int8x16_t *, void, uint64_t, uint64_t))(*(void *)(v1 - 8) + 56))(v2, 0, 1, v1);
  uint64_t v3 = v2->i64[0];
  *(void *)(v0 + 304) = v2->i64[0];
  unint64_t v4 = v2->u64[1];
  *(void *)(v0 + 312) = v4;
  sub_10001729C((uint64_t)v2->i64 + *(int *)(v1 + 48), &qword_10065DCB8);
  id v5 = objc_allocWithZone((Class)IXPromisedInMemoryData);
  sub_100012670(v3, v4);
  NSString v6 = String._bridgeToObjectiveC()();
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v8 = [v5 initWithName:v6 client:28 data:isa];
  *(void *)(v0 + 320) = v8;
  sub_100013510(v3, v4);

  if (v8)
  {
    uint64_t v9 = *(void *)(v0 + 200);
    uint64_t v10 = swift_task_alloc();
    *(void *)(v0 + 328) = v10;
    *(void *)(v10 + 16) = v9;
    *(void *)(v10 + 24) = v8;
    uint64_t v11 = dword_10065DC70;
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_10026943C;
    return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10065DC70 + v11))((uint64_t)v8, (int *)&unk_10065DCF8);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    sub_100013510(v3, v4);
    *(void *)(v0 + 184) = 0;
    unsigned int v14 = [*(id *)(v0 + 200) setConfigurationCompleteWithError:v0 + 184];
    unsigned __int8 v15 = *(void **)(v0 + 184);
    id v16 = *(void **)(v0 + 248);
    if (v14)
    {
      id v17 = v15;
    }
    else
    {
      id v19 = v15;
      _convertNSErrorToError(_:)();

      swift_willThrow();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
}

uint64_t sub_10026943C()
{
  *(void *)(*(void *)v1 + 344) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1002698D8;
  }
  else {
    uint64_t v2 = sub_10026959C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10026959C()
{
  unint64_t v1 = *(void *)(v0 + 312);
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v5 = *(void *)(v0 + 224);

  sub_100013510(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  *(void *)(v0 + 184) = 0;
  unsigned int v6 = [*(id *)(v0 + 200) setConfigurationCompleteWithError:v0 + 184];
  uint64_t v7 = *(void **)(v0 + 184);
  id v8 = *(void **)(v0 + 248);
  if (v6)
  {
    id v9 = v7;
  }
  else
  {
    id v11 = v7;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_100269720()
{
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 256) - 8) + 56))(v4, 1, 1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10001729C(v4, &qword_10065DCA8);
  *(void *)(v0 + 184) = 0;
  unsigned int v5 = [*(id *)(v0 + 200) setConfigurationCompleteWithError:v0 + 184];
  unsigned int v6 = *(void **)(v0 + 184);
  uint64_t v7 = *(void **)(v0 + 248);
  if (v5)
  {
    id v8 = v6;
  }
  else
  {
    id v10 = v6;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1002698D8()
{
  unint64_t v1 = *(void *)(v0 + 312);
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v4 = *(void **)(v0 + 248);
  uint64_t v5 = *(void *)(v0 + 224);
  uint64_t v6 = *(void *)(v0 + 232);

  sub_100013510(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1002699D0()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_10000B238;
  return sub_1002656C4(v2, v3, v4);
}

unint64_t sub_100269A78()
{
  unint64_t result = qword_100661AC0;
  if (!qword_100661AC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100661AC0);
  }
  return result;
}

uint64_t sub_100269AB8()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000176B4;
  v3[3] = v2;
  return _swift_task_switch(sub_1002655C0, 0, 0);
}

uint64_t sub_100269B64()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1000176B4;
  *(_OWORD *)(v2 + 24) = v3;
  return _swift_task_switch(sub_100268850, 0, 0);
}

uint64_t sub_100269C10()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1000176B4;
  *(_OWORD *)(v2 + 24) = v3;
  return _swift_task_switch(sub_10026B4B0, 0, 0);
}

id sub_100269CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, SEL *a7)
{
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = 0;
  id v13 = objc_msgSend(v7, *a7, v11, v12, a5, a6, &v17);

  if (v13)
  {
    id v14 = v17;
  }
  else
  {
    id v15 = v17;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v13;
}

uint64_t sub_100269DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaceholderPromiseBuilder();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100269E3C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1000176B4;
  return sub_100268954(v2, v3);
}

uint64_t sub_100269ED4()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1000176B4;
  *(_OWORD *)(v2 + 24) = v3;
  return _swift_task_switch(sub_10026B4B0, 0, 0);
}

uint64_t *sub_100269F80(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v45 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v42 = v8;
    uint64_t v44 = v7;
    if (v45(a2, 1, v7))
    {
      uint64_t v9 = sub_1000172F8(&qword_10065C3C0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = a3[6];
    id v13 = (uint64_t *)((char *)a1 + v11);
    id v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *id v13 = *v14;
    v13[1] = v15;
    id v16 = (uint64_t *)((char *)a1 + v12);
    id v17 = (uint64_t *)((char *)a2 + v12);
    uint64_t v18 = v17[1];
    *id v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = a3[7];
    uint64_t v20 = a3[8];
    uint64_t v21 = (uint64_t *)((char *)a1 + v19);
    uint64_t v22 = (uint64_t *)((char *)a2 + v19);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    LOBYTE(v22) = *((unsigned char *)a2 + v20);
    void *v21 = v23;
    v21[1] = v24;
    *((unsigned char *)a1 + v20) = (_BYTE)v22;
    uint64_t v25 = a3[9];
    id v26 = (char *)a1 + v25;
    unsigned __int8 v43 = (char *)a2 + v25;
    uint64_t v27 = type metadata accessor for UUID();
    id v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28(v26, v43, v27);
    uint64_t v29 = a3[11];
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *((unsigned char *)a1 + v29) = *((unsigned char *)a2 + v29);
    uint64_t v30 = a3[13];
    *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    if (v45((uint64_t *)((char *)a2 + v30), 1, v44))
    {
      uint64_t v33 = sub_1000172F8(&qword_10065C3C0);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v31, v32, v44);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v31, 0, 1, v44);
    }
    uint64_t v34 = a3[14];
    uint64_t v35 = a3[15];
    unsigned __int8 v36 = *(void **)((char *)a2 + v34);
    *(uint64_t *)((char *)a1 + v34) = (uint64_t)v36;
    *((unsigned char *)a1 + v35) = *((unsigned char *)a2 + v35);
    uint64_t v37 = a3[16];
    id v38 = *(void **)((char *)a2 + v37);
    *(uint64_t *)((char *)a1 + v37) = (uint64_t)v38;
    id v39 = v36;
    id v40 = v38;
  }
  return a1;
}

void sub_10026A2A4(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[9];
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[13];
  if (!v6(v9, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v4);
  }

  uint64_t v10 = *(void **)(a1 + a2[16]);
}

char *sub_10026A43C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  unsigned __int8 v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v40 = v7;
  uint64_t v42 = v6;
  if (v43(a2, 1, v6))
  {
    uint64_t v8 = sub_1000172F8(&qword_10065C3C0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  id v14 = &a1[v10];
  uint64_t v15 = &a2[v10];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)id v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v17];
  uint64_t v20 = &a2[v17];
  uint64_t v21 = *(void *)v20;
  uint64_t v22 = *((void *)v20 + 1);
  LOBYTE(v20) = a2[v18];
  *(void *)uint64_t v19 = v21;
  *((void *)v19 + 1) = v22;
  a1[v18] = (char)v20;
  uint64_t v23 = a3[9];
  uint64_t v24 = &a1[v23];
  uint64_t v41 = &a2[v23];
  uint64_t v25 = type metadata accessor for UUID();
  id v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26(v24, v41, v25);
  uint64_t v27 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  a1[v27] = a2[v27];
  uint64_t v28 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  if (v43(&a2[v28], 1, v42))
  {
    uint64_t v31 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v29, v30, v42);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v29, 0, 1, v42);
  }
  uint64_t v32 = a3[14];
  uint64_t v33 = a3[15];
  uint64_t v34 = *(void **)&a2[v32];
  *(void *)&a1[v32] = v34;
  a1[v33] = a2[v33];
  uint64_t v35 = a3[16];
  unsigned __int8 v36 = *(void **)&a2[v35];
  *(void *)&a1[v35] = v36;
  id v37 = v34;
  id v38 = v36;
  return a1;
}

char *sub_10026A710(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_1000172F8(&qword_10065C3C0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  id v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[8]] = a2[a3[8]];
  uint64_t v21 = a3[9];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  a1[a3[11]] = a2[a3[11]];
  a1[a3[12]] = a2[a3[12]];
  uint64_t v25 = a3[13];
  id v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  int v28 = v8(&a1[v25], 1, v6);
  int v29 = v8(v27, 1, v6);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v26, v27, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v26, v6);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    uint64_t v30 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v26, v27, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v26, 0, 1, v6);
LABEL_13:
  uint64_t v31 = a3[14];
  uint64_t v32 = *(void **)&a1[v31];
  uint64_t v33 = *(void **)&a2[v31];
  *(void *)&a1[v31] = v33;
  id v34 = v33;

  a1[a3[15]] = a2[a3[15]];
  uint64_t v35 = a3[16];
  unsigned __int8 v36 = *(void **)&a2[v35];
  id v37 = *(void **)&a1[v35];
  *(void *)&a1[v35] = v36;
  id v38 = v36;

  return a1;
}

char *sub_10026AACC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_1000172F8(&qword_10065C3C0);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  uint64_t v11 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  a1[v11] = a2[v11];
  uint64_t v12 = a3[9];
  uint64_t v13 = &a1[v12];
  id v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  a1[v16] = a2[v16];
  uint64_t v17 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  if (v8(&a2[v17], 1, v6))
  {
    uint64_t v20 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v18, v19, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
  }
  uint64_t v21 = a3[15];
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  a1[v21] = a2[v21];
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  return a1;
}

char *sub_10026AD40(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_1000172F8(&qword_10065C3C0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  id v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[6];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v21 = *(void *)v19;
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[7];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v26 = *(void *)v24;
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = v26;
  *((void *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  int v28 = &a1[v27];
  int v29 = &a2[v27];
  uint64_t v30 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  a1[v31] = a2[v31];
  uint64_t v32 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  uint64_t v33 = &a1[v32];
  id v34 = &a2[v32];
  int v35 = v8(&a1[v32], 1, v6);
  int v36 = v8(v34, 1, v6);
  if (!v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v33, v34, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v33, v6);
    goto LABEL_12;
  }
  if (v36)
  {
LABEL_12:
    uint64_t v37 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v33, v34, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v33, 0, 1, v6);
LABEL_13:
  uint64_t v38 = a3[14];
  id v39 = *(void **)&a1[v38];
  *(void *)&a1[v38] = *(void *)&a2[v38];

  uint64_t v40 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  uint64_t v41 = *(void **)&a1[v40];
  *(void *)&a1[v40] = *(void *)&a2[v40];

  return a1;
}

uint64_t sub_10026B0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10026B0C8);
}

uint64_t sub_10026B0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000172F8(&qword_10065C3C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for UUID();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 36);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_10026B1FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10026B210);
}

uint64_t sub_10026B210(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000172F8(&qword_10065C3C0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for UUID();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 36);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_10026B344()
{
  sub_10026B458();
  if (v0 <= 0x3F)
  {
    type metadata accessor for UUID();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10026B458()
{
  if (!qword_100661BB0)
  {
    type metadata accessor for URL();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100661BB0);
    }
  }
}

uint64_t sub_10026B4B0()
{
  return sub_100268850();
}

uint64_t *sub_10026B524(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    unint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *unint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    long long v15 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v15;
    uint64_t v16 = *((void *)v14 + 5);
    *((void *)v13 + 4) = *((void *)v14 + 4);
    *((void *)v13 + 5) = v16;
    uint64_t v17 = *((void *)v14 + 7);
    *((void *)v13 + 6) = *((void *)v14 + 6);
    *((void *)v13 + 7) = v17;
    *((void *)v13 + 8) = *((void *)v14 + 8);
    *(_OWORD *)(v13 + 72) = *(_OWORD *)(v14 + 72);
    *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
    *(_OWORD *)(v13 + 104) = *(_OWORD *)(v14 + 104);
    *(_OWORD *)(v13 + 114) = *(_OWORD *)(v14 + 114);
    uint64_t v18 = *((void *)v14 + 18);
    *((void *)v13 + 17) = *((void *)v14 + 17);
    *((void *)v13 + 18) = v18;
    uint64_t v19 = *((void *)v14 + 20);
    *((void *)v13 + 19) = *((void *)v14 + 19);
    *((void *)v13 + 20) = v19;
    uint64_t v21 = *((void *)v14 + 21);
    uint64_t v20 = *((void *)v14 + 22);
    v13[184] = v14[184];
    *((void *)v13 + 21) = v21;
    *((void *)v13 + 22) = v20;
    v13[185] = v14[185];
    v13[186] = v14[186];
    uint64_t v22 = *((void *)v14 + 25);
    *((void *)v13 + 24) = *((void *)v14 + 24);
    *((void *)v13 + 25) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10026B6DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10026B7A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  unint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  uint64_t v15 = *(void *)(v13 + 40);
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  *(void *)(v12 + 40) = v15;
  uint64_t v16 = *(void *)(v13 + 56);
  *(void *)(v12 + 48) = *(void *)(v13 + 48);
  *(void *)(v12 + 56) = v16;
  *(void *)(v12 + 64) = *(void *)(v13 + 64);
  *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
  *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
  *(_OWORD *)(v12 + 104) = *(_OWORD *)(v13 + 104);
  *(_OWORD *)(v12 + 114) = *(_OWORD *)(v13 + 114);
  uint64_t v17 = *(void *)(v13 + 144);
  *(void *)(v12 + 136) = *(void *)(v13 + 136);
  *(void *)(v12 + 144) = v17;
  uint64_t v18 = *(void *)(v13 + 160);
  *(void *)(v12 + 152) = *(void *)(v13 + 152);
  *(void *)(v12 + 160) = v18;
  uint64_t v20 = *(void *)(v13 + 168);
  uint64_t v19 = *(void *)(v13 + 176);
  *(unsigned char *)(v12 + 184) = *(unsigned char *)(v13 + 184);
  *(void *)(v12 + 168) = v20;
  *(void *)(v12 + 176) = v19;
  *(unsigned char *)(v12 + 185) = *(unsigned char *)(v13 + 185);
  *(unsigned char *)(v12 + 186) = *(unsigned char *)(v13 + 186);
  uint64_t v21 = *(void *)(v13 + 200);
  *(void *)(v12 + 192) = *(void *)(v13 + 192);
  *(void *)(v12 + 200) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10026B90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  *(void *)(v11 + 24) = *(void *)(v12 + 24);
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 40) = *(void *)(v12 + 40);
  *(void *)(v11 + 48) = *(void *)(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 56) = *(void *)(v12 + 56);
  *(void *)(v11 + 64) = *(void *)(v12 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v13 = *(_OWORD *)(v12 + 72);
  long long v14 = *(_OWORD *)(v12 + 88);
  long long v15 = *(_OWORD *)(v12 + 104);
  *(_OWORD *)(v11 + 114) = *(_OWORD *)(v12 + 114);
  *(_OWORD *)(v11 + 104) = v15;
  *(_OWORD *)(v11 + 88) = v14;
  *(_OWORD *)(v11 + 72) = v13;
  *(void *)(v11 + 136) = *(void *)(v12 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 144) = *(void *)(v12 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 152) = *(void *)(v12 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 160) = *(void *)(v12 + 160);
  *(void *)(v11 + 168) = *(void *)(v12 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v12 + 176);
  *(unsigned char *)(v11 + 184) = *(unsigned char *)(v12 + 184);
  *(void *)(v11 + 176) = v16;
  *(unsigned char *)(v11 + 185) = *(unsigned char *)(v12 + 185);
  *(unsigned char *)(v11 + 186) = *(unsigned char *)(v12 + 186);
  *(void *)(v11 + 192) = *(void *)(v12 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 200) = *(void *)(v12 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10026BB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[3];
  v8[2] = v9[2];
  v8[3] = v10;
  long long v11 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v11;
  long long v12 = v9[7];
  void v8[6] = v9[6];
  v8[7] = v12;
  long long v13 = v9[5];
  void v8[4] = v9[4];
  _OWORD v8[5] = v13;
  long long v14 = v9[12];
  long long v15 = v9[10];
  v8[11] = v9[11];
  v8[12] = v14;
  long long v16 = v9[9];
  v8[8] = v9[8];
  v8[9] = v16;
  v8[10] = v15;
  return a1;
}

uint64_t sub_10026BBC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v14 + 48);
  *(void *)(v13 + 40) = *(void *)(v14 + 40);
  *(void *)(v13 + 48) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v14 + 64);
  *(void *)(v13 + 56) = *(void *)(v14 + 56);
  *(void *)(v13 + 64) = v17;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v13 + 72) = *(_OWORD *)(v14 + 72);
  *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
  *(_OWORD *)(v13 + 104) = *(_OWORD *)(v14 + 104);
  *(_OWORD *)(v13 + 114) = *(_OWORD *)(v14 + 114);
  *(void *)(v13 + 136) = *(void *)(v14 + 136);
  swift_bridgeObjectRelease();
  *(void *)(v13 + 144) = *(void *)(v14 + 144);
  swift_bridgeObjectRelease();
  *(void *)(v13 + 152) = *(void *)(v14 + 152);
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v14 + 168);
  *(void *)(v13 + 160) = *(void *)(v14 + 160);
  *(void *)(v13 + 168) = v18;
  swift_bridgeObjectRelease();
  *(void *)(v13 + 176) = *(void *)(v14 + 176);
  *(unsigned char *)(v13 + 184) = *(unsigned char *)(v14 + 184);
  *(_WORD *)(v13 + 185) = *(_WORD *)(v14 + 185);
  *(void *)(v13 + 192) = *(void *)(v14 + 192);
  swift_bridgeObjectRelease();
  *(void *)(v13 + 200) = *(void *)(v14 + 200);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10026BD28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10026BD3C);
}

uint64_t sub_10026BD3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10026BE00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10026BE14);
}

uint64_t sub_10026BE14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for URL();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ADP()
{
  uint64_t result = qword_10065DE18;
  if (!qword_10065DE18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10026BF20()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10026BFC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v3 = swift_bridgeObjectRetain() + 56;
  uint64_t v4 = 1;
  uint64_t v5 = v1;
  do
  {
    if (*(unsigned char *)(v3 - 24))
    {
LABEL_15:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v6)
    {
      uint64_t v4 = 0;
      goto LABEL_17;
    }
    v3 += 32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v7 = a1 + 56;
  while (1)
  {
    if (*(unsigned char *)(v7 - 24) != 1)
    {
      uint64_t v4 = 0;
      goto LABEL_15;
    }
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v8) {
      break;
    }
    v7 += 32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v1)
    {
      uint64_t v4 = 0;
      goto LABEL_17;
    }
  }
  uint64_t v4 = 1;
LABEL_17:
  swift_bridgeObjectRelease();
  return v4;
}

void sub_10026C18C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain();
  id v8 = sub_10026EFD8(a2, a3, 0);
  uint64_t v11 = v8;
  if (!v8)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
LABEL_3:
    uint64_t v12 = 0;
LABEL_4:
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    goto LABEL_5;
  }
  id v22 = sub_1004FBAD4();
  if (v23)
  {

LABEL_2:
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    goto LABEL_3;
  }
  uint64_t v24 = (uint64_t)v22;
  sub_10019CCE0((uint64_t)a1);
  uint64_t v25 = swift_bridgeObjectRetain();
  uint64_t v26 = sub_10026F0B4(v25, a1, v24);
  sub_10019CD38((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v26 + 16);
  if (!v12)
  {

    swift_bridgeObjectRelease();
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    goto LABEL_4;
  }
  id v27 = [v11 iTunesMetadata];
  id v28 = [v27 variantID];

  if (v28
    && (uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(),
        unint64_t v31 = v30,
        v28,
        sub_10026EC78(v29, v31, (uint64_t)&v121),
        (uint64_t v32 = v122) != 0))
  {
    uint64_t v33 = v121;
    uint64_t v34 = v123;
    uint64_t v35 = v126;
    uint64_t v79 = *(void *)(v26 + 16);
    if (v79)
    {
      uint64_t v109 = v121;
      uint64_t v115 = v124;
      unint64_t v116 = v125;
      uint64_t v117 = v127;
      uint64_t v36 = v26 + 32;
      swift_bridgeObjectRetain();
      uint64_t v37 = 0;
      uint64_t v38 = v34;
      char v107 = a4;
      uint64_t v81 = v11;
      uint64_t v110 = v35;
      uint64_t v114 = v32;
      uint64_t v77 = v26 + 32;
      while (1)
      {
        uint64_t v47 = (uint64_t *)(v36 + 104 * v37);
        uint64_t v48 = v47[4];
        uint64_t v49 = *(void *)(v48 + 16);
        if (v49) {
          break;
        }
LABEL_29:
        if (++v37 == v79)
        {

          swift_bridgeObjectRelease();
          uint64_t v75 = v109;
          uint64_t v76 = v32;
          goto LABEL_52;
        }
      }
      uint64_t v78 = v37;
      uint64_t v50 = v47[1];
      uint64_t v51 = v47[3];
      uint64_t v88 = (void *)v47[2];
      uint64_t v90 = *v47;
      uint64_t v52 = v47[7];
      uint64_t v84 = v47[6];
      uint64_t v86 = v47[5];
      uint64_t v53 = v47[9];
      uint64_t v54 = v47[11];
      uint64_t v100 = v47[10];
      uint64_t v102 = v47[8];
      uint64_t v98 = v47[12];
      unint64_t v108 = sub_10026F334();
      swift_bridgeObjectRetain_n();
      uint64_t v96 = v50;
      swift_bridgeObjectRetain();
      uint64_t v94 = v51;
      swift_bridgeObjectRetain();
      uint64_t v92 = v52;
      swift_bridgeObjectRetain();
      uint64_t v106 = v53;
      swift_bridgeObjectRetain();
      uint64_t v104 = v54;
      swift_bridgeObjectRetain();
      uint64_t v80 = v48;
      uint64_t v55 = (void *)(v48 + 80);
      uint64_t v56 = v110;
      while (1)
      {
        uint64_t v111 = v49;
        uint64_t v58 = *(v55 - 6);
        uint64_t v57 = *(v55 - 5);
        uint64_t v59 = *(v55 - 1);
        uint64_t v60 = *v55;
        uint64_t v61 = *(v55 - 2);
        long long v112 = *((_OWORD *)v55 - 2);
        id v124 = &type metadata for ADPManifest.InstallTarget;
        unint64_t v125 = v108;
        uint64_t v62 = swift_allocObject();
        uint64_t v121 = v62;
        *(void *)(v62 + 16) = v58;
        *(void *)(v62 + 24) = v57;
        *(_OWORD *)(v62 + 32) = v112;
        *(void *)(v62 + 48) = v61;
        *(void *)(v62 + 56) = v59;
        *(void *)(v62 + 64) = v60;
        v120[3] = &type metadata for VariantDescriptor;
        v120[4] = sub_1001C68A8();
        uint64_t v63 = (void *)swift_allocObject();
        v120[0] = v63;
        v63[2] = v109;
        v63[3] = v114;
        v63[4] = v38;
        v63[5] = v115;
        v63[6] = v116;
        v63[7] = v56;
        v63[8] = v117;
        if (v58 == v109 && v114 == v57)
        {
          sub_10019B17C((uint64_t)&v121, (uint64_t)v119);
          sub_10019B17C((uint64_t)v120, (uint64_t)v118);
        }
        else
        {
          char v64 = _stringCompareWithSmolCheck(_:_:expecting:)();
          sub_10019B17C((uint64_t)&v121, (uint64_t)v119);
          sub_10019B17C((uint64_t)v120, (uint64_t)v118);
          BOOL v65 = 0;
          if ((v64 & 1) == 0) {
            goto LABEL_47;
          }
        }
        uint64_t v66 = sub_10018AC60(v119, v119[3]);
        uint64_t v68 = v66[2];
        uint64_t v67 = v66[3];
        uint64_t v69 = v66[4];
        uint64_t v70 = v66[6];
        uint64_t v71 = sub_10018AC60(v118, v118[3]);
        uint64_t v72 = v71[6];
        BOOL v65 = (v70 | v72) == 0;
        if (v70 && v72) {
          BOOL v65 = v68 == v71[2] && v67 == v71[3] && v69 == v71[4];
        }
LABEL_47:
        BOOL v113 = v65;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v56 = v110;
        sub_1001C682C(v109, v114);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1001C682C(v109, v114);
        sub_100014524((uint64_t)v119);
        sub_100014524((uint64_t)v118);
        sub_100014524((uint64_t)&v121);
        sub_100014524((uint64_t)v120);
        sub_10018B054(v109, v114);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v113)
        {

          swift_bridgeObjectRelease();
          uint64_t v13 = v80;
          swift_bridgeObjectRelease_n();
          sub_10018B054(v109, v114);
          uint64_t v12 = v94;
          uint64_t v10 = v96;
          uint64_t v11 = v88;
          uint64_t v9 = v90;
          uint64_t v15 = v84;
          uint64_t v14 = v86;
          uint64_t v16 = v92;
          a4 = v107;
          goto LABEL_53;
        }
        v55 += 7;
        uint64_t v49 = v111 - 1;
        a4 = v107;
        if (v111 == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v37 = v78;
          uint64_t v11 = v81;
          uint64_t v32 = v114;
          uint64_t v36 = v77;
          goto LABEL_29;
        }
      }
    }

    uint64_t v75 = v33;
    uint64_t v76 = v32;
LABEL_52:
    sub_10018B054(v75, v76);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v100 = 0;
    uint64_t v102 = 0;
    uint64_t v104 = 0;
    uint64_t v106 = 0;
    uint64_t v98 = 0;
LABEL_53:
    swift_bridgeObjectRelease();
    uint64_t v19 = v100;
    uint64_t v17 = v102;
    uint64_t v20 = v104;
    uint64_t v18 = v106;
    uint64_t v21 = v98;
  }
  else
  {
    uint64_t v82 = v11;
    uint64_t v39 = 0;
    while (1)
    {
      uint64_t v40 = v39 + 1;
      if (__OFADD__(v39, 1))
      {
        __break(1u);
        return;
      }
      uint64_t v41 = (uint64_t *)(v26 + 32 + 104 * v39);
      uint64_t v42 = v41[4];
      uint64_t v43 = *(void *)(v42 + 16);
      if (v43) {
        break;
      }
LABEL_16:
      uint64_t v39 = v40;
      if (v40 == v12)
      {
        swift_bridgeObjectRelease();

        goto LABEL_2;
      }
    }
    uint64_t v44 = v41[4];
    uint64_t v87 = (void *)v41[2];
    uint64_t v89 = *v41;
    uint64_t v93 = v41[3];
    uint64_t v95 = v41[1];
    uint64_t v83 = v41[6];
    uint64_t v85 = v41[5];
    uint64_t v91 = v41[7];
    uint64_t v99 = v41[10];
    uint64_t v101 = v41[8];
    uint64_t v45 = (void *)(v42 + 40);
    uint64_t v103 = v41[11];
    uint64_t v105 = v41[9];
    uint64_t v97 = v41[12];
    while (1)
    {
      BOOL v46 = *(v45 - 1) == 0x6173726576696E75 && *v45 == 0xE90000000000006CLL;
      if (v46 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      v45 += 7;
      if (!--v43) {
        goto LABEL_16;
      }
    }
    uint64_t v10 = v95;
    swift_bridgeObjectRetain();
    uint64_t v12 = v93;
    swift_bridgeObjectRetain();
    uint64_t v13 = v44;
    swift_bridgeObjectRetain();
    uint64_t v16 = v91;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();

    uint64_t v20 = v103;
    uint64_t v18 = v105;
    uint64_t v11 = v87;
    uint64_t v9 = v89;
    uint64_t v15 = v83;
    uint64_t v14 = v85;
    uint64_t v19 = v99;
    uint64_t v17 = v101;
    uint64_t v21 = v97;
  }
LABEL_5:
  *a4 = v9;
  a4[1] = v10;
  a4[2] = v11;
  a4[3] = v12;
  a4[4] = v13;
  a4[5] = v14;
  a4[6] = v15;
  a4[7] = v16;
  a4[8] = v17;
  a4[9] = v18;
  a4[10] = v19;
  a4[11] = v20;
  a4[12] = v21;
}

void sub_10026C95C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 192);
  v64[0] = v3;
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v52 = v4;
  if (!v4)
  {
    char v6 = _swiftEmptyArrayStorage;
LABEL_25:
    sub_10018A1C0(&v58, a1, v6);
    swift_bridgeObjectRelease();
    uint64_t v19 = v59;
    if ((void)v59)
    {
      uint64_t v20 = v58;
      uint64_t v21 = *((void *)&v62 + 1);
      if (v4)
      {
        uint64_t v54 = *((void *)&v59 + 1);
        uint64_t v55 = v60;
        uint64_t v57 = v61;
        uint64_t v22 = v3 + 32;
        swift_bridgeObjectRetain_n();
        uint64_t v23 = 0;
        uint64_t v45 = v3 + 32;
        do
        {
          uint64_t v24 = (uint64_t *)(v22 + (v23 << 6));
          uint64_t v25 = v24[2];
          uint64_t v26 = *(void *)(v25 + 16);
          if (v26)
          {
            uint64_t v27 = v24[4];
            uint64_t v47 = v24[3];
            uint64_t v48 = *v24;
            long long v46 = *(_OWORD *)(v24 + 5);
            uint64_t v28 = v24[7];
            long long v53 = *(_OWORD *)(v24 + 1);
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t v50 = v27;
            swift_bridgeObjectRetain();
            uint64_t v49 = v28;
            swift_bridgeObjectRetain();
            uint64_t v29 = (void *)(v25 + 40);
            while (1)
            {
              uint64_t v30 = v29[1];
              uint64_t v31 = v29[2];
              uint64_t v32 = v29[3];
              uint64_t v33 = v29[5];
              BOOL v34 = *(v29 - 1) == v20 && v19 == *v29;
              if (v34 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                if (v33)
                {
                  if (v21)
                  {
                    BOOL v35 = v30 == v54 && v31 == v55;
                    if (v35 && v32 == v57)
                    {
LABEL_49:
                      swift_bridgeObjectRelease_n();
                      sub_10017B89C((uint64_t)v64);
                      sub_10017B89C((uint64_t)v64);
                      sub_10018B054(v20, v19);
                      long long v37 = v53;
                      uint64_t v39 = v49;
                      uint64_t v38 = v50;
                      uint64_t v41 = v47;
                      uint64_t v40 = v48;
                      long long v42 = v46;
                      goto LABEL_53;
                    }
                  }
                }
                else if (!v21)
                {
                  goto LABEL_49;
                }
              }
              v29 += 7;
              if (!--v26)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                uint64_t v4 = v52;
                uint64_t v22 = v45;
                break;
              }
            }
          }
          ++v23;
        }
        while (v23 != v4);
        sub_10017B89C((uint64_t)v64);
        sub_10017B89C((uint64_t)v64);
        uint64_t v43 = v20;
        uint64_t v44 = v19;
      }
      else
      {
        uint64_t v43 = v58;
        uint64_t v44 = v59;
      }
      sub_10018B054(v43, v44);
    }
    sub_10026E9F4((uint64_t)&v58);
    uint64_t v40 = v58;
    long long v37 = v59;
    uint64_t v41 = v60;
    uint64_t v38 = v61;
    long long v42 = v62;
    uint64_t v39 = v63;
LABEL_53:
    *(void *)a2 = v40;
    *(_OWORD *)(a2 + 8) = v37;
    *(void *)(a2 + 24) = v41;
    *(void *)(a2 + 32) = v38;
    *(_OWORD *)(a2 + 40) = v42;
    *(void *)(a2 + 56) = v39;
    return;
  }
  uint64_t v56 = a1;
  swift_bridgeObjectRetain();
  uint64_t v5 = (uint64_t *)(v3 + 48);
  char v6 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v7 = *v5;
    uint64_t v8 = *(void *)(*v5 + 16);
    int64_t v9 = v6[2];
    int64_t v10 = v9 + v8;
    if (__OFADD__(v9, v8)) {
      break;
    }
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v10 <= v6[3] >> 1)
    {
      if (*(void *)(v7 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v9 <= v10) {
        int64_t v12 = v9 + v8;
      }
      else {
        int64_t v12 = v9;
      }
      char v6 = sub_10028F134(isUniquelyReferenced_nonNull_native, v12, 1, v6);
      if (*(void *)(v7 + 16))
      {
LABEL_14:
        uint64_t v13 = v6[2];
        if ((v6[3] >> 1) - v13 < v8) {
          goto LABEL_57;
        }
        unint64_t v14 = (unint64_t)&v6[7 * v13 + 4];
        if (v7 + 32 < v14 + 56 * v8 && v14 < v7 + 32 + 56 * v8) {
          goto LABEL_59;
        }
        swift_arrayInitWithCopy();
        if (v8)
        {
          uint64_t v16 = v6[2];
          BOOL v17 = __OFADD__(v16, v8);
          uint64_t v18 = v16 + v8;
          if (v17) {
            goto LABEL_58;
          }
          v6[2] = v18;
        }
        goto LABEL_4;
      }
    }
    if (v8) {
      goto LABEL_56;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    v5 += 8;
    if (!--v4)
    {
      sub_10017B89C((uint64_t)v64);
      uint64_t v4 = v52;
      a1 = v56;
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10026CD4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[53] = a6;
  v7[54] = a7;
  v7[51] = a3;
  v7[52] = a5;
  v7[49] = a1;
  v7[50] = a2;
  uint64_t v8 = type metadata accessor for Logger();
  v7[55] = v8;
  v7[56] = *(void *)(v8 - 8);
  v7[57] = swift_task_alloc();
  v7[58] = swift_task_alloc();
  v7[59] = swift_task_alloc();
  v7[60] = swift_task_alloc();
  sub_1000172F8(&qword_10065C3C0);
  v7[61] = swift_task_alloc();
  v7[62] = swift_task_alloc();
  v7[63] = swift_task_alloc();
  v7[64] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for URL();
  v7[65] = v9;
  v7[66] = *(void *)(v9 - 8);
  v7[67] = swift_task_alloc();
  v7[68] = swift_task_alloc();
  v7[69] = swift_task_alloc();
  v7[70] = swift_task_alloc();
  return _swift_task_switch(sub_10026CF18, 0, 0);
}

uint64_t sub_10026CF18()
{
  if (URL.hasDirectoryPath.getter())
  {
    uint64_t v1 = *(void *)(v0 + 528);
    (*(void (**)(void, void, void))(v1 + 16))(*(void *)(v0 + 552), *(void *)(v0 + 400), *(void *)(v0 + 520));
    uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
    uint64_t v3 = (v1 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 528);
    uint64_t v5 = *(void *)(v0 + 520);
    uint64_t v6 = *(void *)(v0 + 512);
    URL.absoluteString.getter();
    swift_bridgeObjectRetain();
    v7._countAndFlagsBits = 47;
    v7._object = (void *)0xE100000000000000;
    String.append(_:)(v7);
    swift_bridgeObjectRelease();
    URL.init(string:)();
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v5);
    if (result == 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v9 = *(void *)(v0 + 528);
    uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
    uint64_t v3 = (v9 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v2(*(void *)(v0 + 552), *(void *)(v0 + 512), *(void *)(v0 + 520));
  }
  *(void *)(v0 + 568) = v2;
  uint64_t v10 = *(void *)(v0 + 560);
  uint64_t v11 = *(void *)(v0 + 552);
  int64_t v12 = *(void **)(v0 + 528);
  uint64_t v13 = *(void *)(v0 + 520);
  uint64_t v15 = *(void *)(v0 + 496);
  uint64_t v14 = *(void *)(v0 + 504);
  *(void *)(v0 + 576) = v3;
  v2(v10, v11, v13);
  uint64_t v16 = (void (*)(uint64_t, uint64_t, uint64_t))v12[2];
  *(void *)(v0 + 584) = v16;
  *(void *)(v0 + 592) = (unint64_t)(v12 + 2) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v16(v15, v10, v13);
  BOOL v17 = (void (*)(uint64_t, void, uint64_t, uint64_t))v12[7];
  *(void *)(v0 + 600) = v17;
  *(void *)(v0 + 608) = (unint64_t)(v12 + 7) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v17(v15, 0, 1, v13);
  URL.init(string:relativeTo:)();
  sub_10001729C(v15, &qword_10065C3C0);
  uint64_t v18 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v12[6];
  *(void *)(v0 + 616) = v18;
  *(void *)(v0 + 624) = (unint64_t)(v12 + 6) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v18(v14, 1, v13) == 1)
  {
    uint64_t v19 = *(void *)(v0 + 560);
    uint64_t v20 = *(void *)(v0 + 528);
    uint64_t v21 = *(void *)(v0 + 520);
    sub_10001729C(*(void *)(v0 + 504), &qword_10065C3C0);
    uint64_t v22 = type metadata accessor for MarketplaceKitError();
    sub_10026F43C();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v22 - 8) + 104))(v23, enum case for MarketplaceKitError.invalidAlternativeDistributionPackageURL(_:), v22);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
  else
  {
    v2(*(void *)(v0 + 544), *(void *)(v0 + 504), *(void *)(v0 + 520));
    *(_OWORD *)(v0 + 240) = 0u;
    *(void *)(v0 + 256) = 0;
    *(_OWORD *)(v0 + 224) = 0u;
    *(unsigned char *)(v0 + 264) = -1;
    uint64_t v27 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, char))((char *)&dword_10065F848 + dword_10065F848);
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 632) = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_10026D360;
    uint64_t v26 = *(void *)(v0 + 544);
    return v27(v26, 0, v0 + 224, 0, 1);
  }
}

uint64_t sub_10026D360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[80] = a1;
  v5[81] = a2;
  uint64_t v6 = (uint64_t)(v5 + 28);
  v5[82] = a3;
  v5[83] = v3;
  swift_task_dealloc();
  sub_10001729C(v6, &qword_10065B8E8);
  if (v3) {
    Swift::String v7 = sub_10026DA18;
  }
  else {
    Swift::String v7 = sub_10026D494;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_10026D494()
{
  if ([*(id *)(v0 + 656) statusCode] != (id)200)
  {
    uint64_t v10 = *(void **)(v0 + 656);
    unint64_t v11 = *(void *)(v0 + 648);
    uint64_t v12 = *(void *)(v0 + 640);
    uint64_t v13 = *(void *)(v0 + 560);
    uint64_t v14 = *(void *)(v0 + 544);
    uint64_t v15 = *(void *)(v0 + 528);
    uint64_t v16 = *(void *)(v0 + 520);
    uint64_t v17 = type metadata accessor for MarketplaceKitError();
    sub_10026F43C();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v17 - 8) + 104))(v18, enum case for MarketplaceKitError.invalidAlternativeDistributionPackageSignature(_:), v17);
    swift_willThrow();

    sub_100013510(v12, v11);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v19(v14, v16);
    uint64_t v20 = v13;
    uint64_t v21 = v16;
LABEL_8:
    v19(v20, v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
    return v40();
  }
  uint64_t v1 = *(void **)(v0 + 432);
  static Logger.install.getter();
  id v2 = v1;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void **)(v0 + 432);
  if (v5)
  {
    Swift::String v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)Swift::String v7 = 138412290;
    *(void *)(v0 + 384) = v6;
    id v9 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v8 = v6;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%@] Received signature data", v7, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v3 = *(NSObject **)(v0 + 432);
  }
  uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 616);
  uint64_t v44 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 600);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 584);
  uint64_t v23 = *(void *)(v0 + 560);
  uint64_t v24 = *(void *)(v0 + 520);
  uint64_t v26 = *(void *)(v0 + 488);
  uint64_t v25 = *(void *)(v0 + 496);
  uint64_t v27 = *(void *)(v0 + 480);
  uint64_t v28 = *(void *)(v0 + 440);
  uint64_t v29 = *(void *)(v0 + 448);

  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  *(void *)(v0 + 672) = v30;
  *(void *)(v0 + 680) = (v29 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v30(v27, v28);
  v22(v25, v23, v24);
  v44(v25, 0, 1, v24);
  URL.init(string:relativeTo:)();
  sub_10001729C(v25, &qword_10065C3C0);
  if (v45(v26, 1, v24) == 1)
  {
    uint64_t v31 = *(void **)(v0 + 656);
    unint64_t v32 = *(void *)(v0 + 648);
    uint64_t v33 = *(void *)(v0 + 640);
    uint64_t v34 = *(void *)(v0 + 560);
    uint64_t v35 = *(void *)(v0 + 544);
    uint64_t v36 = *(void *)(v0 + 528);
    uint64_t v37 = *(void *)(v0 + 520);
    sub_10001729C(*(void *)(v0 + 488), &qword_10065C3C0);
    uint64_t v38 = type metadata accessor for MarketplaceKitError();
    sub_10026F43C();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v38 - 8) + 104))(v39, enum case for MarketplaceKitError.invalidAlternativeDistributionPackageURL(_:), v38);
    swift_willThrow();

    sub_100013510(v33, v32);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v19(v35, v37);
    uint64_t v20 = v34;
    uint64_t v21 = v37;
    goto LABEL_8;
  }
  (*(void (**)(void, void, void))(v0 + 568))(*(void *)(v0 + 536), *(void *)(v0 + 488), *(void *)(v0 + 520));
  *(_OWORD *)(v0 + 272) = 0u;
  *(_OWORD *)(v0 + 288) = 0u;
  *(void *)(v0 + 304) = 0;
  *(unsigned char *)(v0 + 312) = -1;
  long long v46 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, char))((char *)&dword_10065F848 + dword_10065F848);
  long long v42 = (void *)swift_task_alloc();
  *(void *)(v0 + 688) = v42;
  void *v42 = v0;
  v42[1] = sub_10026DB58;
  uint64_t v43 = *(void *)(v0 + 536);
  return v46(v43, 0, v0 + 272, 0, 1);
}

uint64_t sub_10026DA18()
{
  uint64_t v1 = v0[70];
  uint64_t v2 = v0[65];
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0[66] + 8);
  v3(v0[68], v2);
  v3(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10026DB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v5 = (void *)*v4;
  v5[87] = a1;
  v5[88] = a2;
  uint64_t v6 = (uint64_t)(v5 + 34);
  v5[89] = a3;
  v5[90] = v3;
  swift_task_dealloc();
  sub_10001729C(v6, &qword_10065B8E8);
  if (v3) {
    Swift::String v7 = sub_10026E87C;
  }
  else {
    Swift::String v7 = sub_10026DC8C;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_10026DC8C()
{
  uint64_t v120 = v0;
  if ([*(id *)(v0 + 712) statusCode] != (id)200)
  {
    uint64_t v9 = *(void **)(v0 + 712);
    unint64_t v10 = *(void *)(v0 + 704);
    uint64_t v11 = *(void *)(v0 + 696);
    uint64_t v12 = *(void **)(v0 + 656);
    uint64_t v13 = *(void *)(v0 + 640);
    uint64_t v104 = *(void *)(v0 + 544);
    uint64_t v106 = *(void *)(v0 + 560);
    unint64_t v96 = *(void *)(v0 + 648);
    uint64_t v100 = *(void *)(v0 + 536);
    uint64_t v14 = *(void *)(v0 + 528);
    uint64_t v15 = *(void *)(v0 + 520);
    uint64_t v16 = type metadata accessor for MarketplaceKitError();
    sub_10026F43C();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 104))(v17, enum case for MarketplaceKitError.invalidManifest(_:), v16);
    swift_willThrow();

    sub_100013510(v11, v10);
    sub_100013510(v13, v96);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v18(v100, v15);
    v18(v104, v15);
    uint64_t v19 = v106;
    uint64_t v20 = v15;
LABEL_12:
    v18(v19, v20);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v52 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_13;
  }
  uint64_t v1 = *(void **)(v0 + 432);
  static Logger.install.getter();
  id v2 = v1;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void **)(v0 + 432);
  if (v5)
  {
    Swift::String v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v103 = (void *)swift_slowAlloc();
    *(_DWORD *)Swift::String v7 = 138412290;
    *(void *)(v0 + 376) = v6;
    id v8 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v103 = v6;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%@] Received manifest data", v7, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v3 = *(NSObject **)(v0 + 432);
  }
  uint64_t v21 = *(void *)(v0 + 720);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v0 + 672);
  unint64_t v23 = *(void *)(v0 + 648);
  uint64_t v24 = *(void *)(v0 + 640);
  uint64_t v25 = *(void *)(v0 + 472);
  uint64_t v26 = *(void *)(v0 + 440);

  v22(v25, v26);
  type metadata accessor for PackageValidator();
  swift_allocObject();
  sub_100012670(v24, v23);
  PackageValidator.init(signatureData:requireTrust:)();
  if (v21)
  {
    uint64_t v27 = *(void **)(v0 + 432);
    static Logger.install.getter();
    id v28 = v27;
    swift_errorRetain();
    id v29 = v28;
    swift_errorRetain();
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    BOOL v32 = os_log_type_enabled(v30, v31);
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v0 + 672);
    uint64_t v34 = *(void *)(v0 + 456);
    uint64_t v36 = *(void **)(v0 + 432);
    uint64_t v35 = *(void *)(v0 + 440);
    if (v32)
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v94 = (void *)swift_slowAlloc();
      *(void *)&long long v107 = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 138412546;
      uint64_t v101 = v35;
      *(void *)(v0 + 360) = v36;
      uint64_t v97 = v34;
      id v38 = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v94 = v36;

      *(_WORD *)(v37 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v39 = *(void *)(*(void *)(v0 + 328) - 8);
      swift_task_alloc();
      (*(void (**)(void))(v39 + 16))();
      uint64_t v40 = String.init<A>(describing:)();
      unint64_t v42 = v41;
      swift_task_dealloc();
      *(void *)(v0 + 352) = sub_1000143F4(v40, v42, (uint64_t *)&v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "[%@] Error validating ADP signature: %{public}s", (uint8_t *)v37, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v33(v97, v101);
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();

      v33(v34, v35);
    }
    uint64_t v43 = *(void **)(v0 + 712);
    unint64_t v44 = *(void *)(v0 + 704);
    uint64_t v45 = *(void *)(v0 + 696);
    long long v46 = *(void **)(v0 + 656);
    uint64_t v47 = *(void *)(v0 + 640);
    uint64_t v105 = *(void *)(v0 + 560);
    uint64_t v102 = *(void *)(v0 + 544);
    unint64_t v95 = *(void *)(v0 + 648);
    uint64_t v98 = *(void *)(v0 + 536);
    uint64_t v48 = *(void *)(v0 + 528);
    uint64_t v49 = *(void *)(v0 + 520);
    uint64_t v50 = type metadata accessor for MarketplaceKitError();
    sub_10026F43C();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v50 - 8) + 104))(v51, enum case for MarketplaceKitError.invalidAlternativeDistributionPackageSignature(_:), v50);
    swift_willThrow();

    sub_100013510(v45, v44);
    swift_errorRelease();
    sub_100013510(v47, v95);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
    v18(v98, v49);
    v18(v102, v49);
    uint64_t v19 = v105;
    uint64_t v20 = v49;
    goto LABEL_12;
  }
  dispatch thunk of PackageValidator.validateResource(_:withData:)();
  uint64_t v54 = (long long *)(v0 + 16);
  uint64_t v55 = *(void **)(v0 + 432);
  static Logger.install.getter();
  id v56 = v55;
  uint64_t v57 = Logger.logObject.getter();
  os_log_type_t v58 = static os_log_type_t.default.getter();
  BOOL v59 = os_log_type_enabled(v57, v58);
  uint64_t v60 = *(void **)(v0 + 432);
  if (v59)
  {
    uint64_t v61 = (uint8_t *)swift_slowAlloc();
    uint64_t v99 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v61 = 138412290;
    *(void *)(v0 + 368) = v60;
    id v62 = v60;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v99 = v60;

    uint64_t v54 = (long long *)(v0 + 16);
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "[%@] ADP signature validated successfully", v61, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  swift_release();

  uint64_t v63 = *(void *)(v0 + 528);
  (*(void (**)(void, void))(v0 + 672))(*(void *)(v0 + 464), *(void *)(v0 + 440));
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_10026F494();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  char v64 = (void (**)(uint64_t, uint64_t))(v63 + 8);
  unint64_t v65 = *(void *)(v0 + 704);
  uint64_t v66 = *(void *)(v0 + 696);
  uint64_t v67 = *(void **)(v0 + 656);
  uint64_t v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 568);
  uint64_t v92 = *(void *)(v0 + 560);
  uint64_t v88 = *(void *)(v0 + 544);
  uint64_t v68 = *(void *)(v0 + 536);
  uint64_t v87 = *(void *)(v0 + 520);
  uint64_t v91 = *(void *)(v0 + 424);
  uint64_t v90 = *(void *)(v0 + 416);
  uint64_t v89 = *(void *)(v0 + 392);
  unint64_t v69 = *(void *)(v0 + 648);
  uint64_t v70 = *(void *)(v0 + 640);

  sub_100013510(v66, v65);
  swift_release();
  sub_100013510(v70, v69);
  uint64_t v71 = *v64;
  (*v64)(v68, v87);
  v71(v88, v87);
  long long v72 = v54[11];
  long long v117 = v54[10];
  long long v118 = v72;
  long long v119 = v54[12];
  long long v73 = v54[7];
  long long v113 = v54[6];
  long long v114 = v73;
  long long v74 = v54[9];
  long long v115 = v54[8];
  long long v116 = v74;
  long long v75 = v54[3];
  long long v109 = v54[2];
  long long v110 = v75;
  long long v76 = v54[5];
  long long v111 = v54[4];
  long long v112 = v76;
  long long v77 = v54[1];
  long long v107 = *v54;
  long long v108 = v77;
  v93(v89, v92, v87);
  uint64_t v78 = type metadata accessor for ADP();
  uint64_t v79 = (void *)(v89 + *(int *)(v78 + 20));
  *uint64_t v79 = v90;
  v79[1] = v91;
  uint64_t v80 = (_OWORD *)(v89 + *(int *)(v78 + 24));
  long long v81 = v118;
  v80[10] = v117;
  v80[11] = v81;
  v80[12] = v119;
  long long v82 = v114;
  v80[6] = v113;
  v80[7] = v82;
  long long v83 = v116;
  _WORD v80[8] = v115;
  v80[9] = v83;
  long long v84 = v110;
  v80[2] = v109;
  v80[3] = v84;
  long long v85 = v112;
  v80[4] = v111;
  v80[5] = v85;
  long long v86 = v108;
  _OWORD *v80 = v107;
  v80[1] = v86;
  swift_bridgeObjectRetain();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v52 = *(uint64_t (**)(void))(v0 + 8);
LABEL_13:
  return v52();
}

uint64_t sub_10026E87C()
{
  unint64_t v1 = *(void *)(v0 + 648);
  uint64_t v2 = *(void *)(v0 + 640);
  uint64_t v3 = *(void *)(v0 + 560);
  uint64_t v4 = *(void *)(v0 + 544);
  uint64_t v5 = *(void *)(v0 + 536);
  uint64_t v6 = *(void *)(v0 + 528);
  uint64_t v7 = *(void *)(v0 + 520);

  sub_100013510(v2, v1);
  id v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v8(v5, v7);
  v8(v4, v7);
  v8(v3, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

void sub_10026E9F4(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 192);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = 0;
    uint64_t v6 = v3 + 32;
    while (1)
    {
      uint64_t v7 = v6;
      id v8 = (uint64_t *)(v6 + (v5 << 6));
      uint64_t v9 = v8[2];
      uint64_t v10 = *(void *)(v9 + 16);
      if (v10) {
        break;
      }
LABEL_3:
      ++v5;
      uint64_t v6 = v7;
      if (v5 == v4) {
        goto LABEL_14;
      }
    }
    uint64_t v22 = v8[1];
    uint64_t v23 = *v8;
    uint64_t v21 = v8[3];
    uint64_t v19 = v8[4];
    long long v20 = *(_OWORD *)(v8 + 5);
    uint64_t v11 = (void *)(v9 + 40);
    uint64_t v12 = v8[7];
    while (1)
    {
      BOOL v13 = *(v11 - 1) == 0x6173726576696E75 && *v11 == 0xE90000000000006CLL;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      v11 += 7;
      if (!--v10) {
        goto LABEL_3;
      }
    }
    uint64_t v14 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = v23;
    uint64_t v17 = v21;
    long long v18 = v20;
  }
  else
  {
LABEL_14:
    uint64_t v16 = 0;
    uint64_t v14 = 0;
    uint64_t v9 = 0;
    uint64_t v17 = 0;
    uint64_t v15 = 0;
    uint64_t v12 = 0;
    long long v18 = 0uLL;
  }
  *(void *)a1 = v16;
  *(void *)(a1 + 8) = v14;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v17;
  *(void *)(a1 + 32) = v15;
  *(_OWORD *)(a1 + 40) = v18;
  *(void *)(a1 + 56) = v12;
}

uint64_t sub_10026EB68(void *a1)
{
  uint64_t v2 = a1[3];
  unint64_t v3 = a1[4];
  swift_bridgeObjectRetain();
  sub_100515B6C(v2, v3);
  swift_bridgeObjectRelease();
  sub_100515D28(a1[2]);
  sub_100515D28(a1[1]);
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = 58;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 58;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  sub_100515B6C(v2, v3);
  return swift_bridgeObjectRelease();
}

unint64_t sub_10026EC78@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v3 = a2;
  uint64_t v4 = a1;
  unint64_t result = sub_10054F088(58, 0xE100000000000000, a1, a2);
  long long v7 = 0uLL;
  if (v8)
  {
    uint64_t v26 = 0;
    long long v25 = 0uLL;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = String.subscript.getter();
  unint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  if ((sub_10026F3D0(49, 0xE100000000000000, v9, v11, v13, v15) & 1) == 0)
  {
    char v27 = sub_10026F3D0(48, 0xE100000000000000, v9, v11, v13, v15);
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
    {
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(a3 + 48) = 0;
      *(_OWORD *)(a3 + 16) = 0u;
      *(_OWORD *)(a3 + 32) = 0u;
      *(_OWORD *)a3 = 0u;
      return result;
    }
    unint64_t v28 = String.index(after:)();
    sub_10026EF8C(v28, v4, v3);
    swift_bridgeObjectRelease();
    uint64_t v4 = static String._fromSubstring(_:)();
    unint64_t v3 = v29;
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  unint64_t v16 = String.index(after:)();
  unint64_t v17 = sub_10026EF8C(v16, v4, v3);
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  unint64_t result = sub_10054F178(47, 0xE100000000000000, v17, v19);
  if (v20)
  {
    uint64_t v4 = static String._fromSubstring(_:)();
    unint64_t v3 = v30;
LABEL_11:
    unint64_t result = swift_bridgeObjectRelease();
    uint64_t v26 = 0;
    long long v25 = 0uLL;
    long long v7 = 0uLL;
    goto LABEL_12;
  }
  if (result >> 14 < v17 >> 14)
  {
    __break(1u);
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  Substring.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v4 = static String._fromSubstring(_:)();
  unint64_t v3 = v21;
  swift_bridgeObjectRelease();
  unint64_t result = Substring.index(after:)();
  if (v19 >> 14 < result >> 14)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  Substring.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v22 = static String._fromSubstring(_:)();
  unint64_t v24 = v23;
  swift_bridgeObjectRelease();
  unint64_t result = sub_100447360(v22, v24, (uint64_t *)v31);
  long long v7 = v31[0];
  long long v25 = v31[1];
  uint64_t v26 = v32;
LABEL_12:
  *(void *)a3 = v4;
  *(void *)(a3 + 8) = v3;
  *(_OWORD *)(a3 + 16) = v7;
  *(_OWORD *)(a3 + 32) = v25;
  *(void *)(a3 + 48) = v26;
  return result;
}

unint64_t sub_10026EF8C(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return String.subscript.getter();
  }
  __break(1u);
  return result;
}

id sub_10026EFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 fetchingPlaceholder:a3 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_10026F0B4(uint64_t result, void *a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    unint64_t v5 = 0;
    uint64_t v6 = result + 72;
    unint64_t v27 = v3 - 1;
    id v7 = _swiftEmptyArrayStorage;
    uint64_t v28 = result + 72;
    while (1)
    {
      unint64_t v29 = v7;
      if (v5 <= v3) {
        unint64_t v8 = v3;
      }
      else {
        unint64_t v8 = v5;
      }
      unint64_t v9 = (void *)(v6 + 104 * v5);
      unint64_t v10 = v5;
      while (1)
      {
        if (v8 == v10)
        {
          __break(1u);
          return result;
        }
        uint64_t v11 = *(v9 - 5);
        uint64_t v12 = *(v9 - 4);
        long long v38 = *((_OWORD *)v9 - 1);
        uint64_t v34 = v9[1];
        uint64_t v35 = *(v9 - 3);
        uint64_t v13 = v9[3];
        uint64_t v14 = v9[4];
        uint64_t v33 = v9[5];
        uint64_t v36 = v9[6];
        uint64_t v37 = v9[2];
        uint64_t v32 = v9[7];
        if (v13 != *a2 || v14 != a2[1]) {
          break;
        }
        if (*v9 == a3) {
          goto LABEL_16;
        }
LABEL_14:
        ++v10;
        v9 += 13;
        if (v3 == v10) {
          return (uint64_t)v29;
        }
      }
      uint64_t v30 = *v9;
      uint64_t v15 = a2;
      uint64_t v16 = *(v9 - 4);
      uint64_t v17 = *(v9 - 5);
      unint64_t v18 = v3;
      uint64_t v19 = v9[3];
      uint64_t v20 = v9[4];
      unint64_t v21 = v8;
      unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      unint64_t v8 = v21;
      unint64_t v3 = v18;
      uint64_t v11 = v17;
      uint64_t v12 = v16;
      a2 = v15;
      if ((result & 1) == 0) {
        goto LABEL_14;
      }
      uint64_t v14 = v20;
      uint64_t v13 = v19;
      if (v30 != a3) {
        goto LABEL_14;
      }
LABEL_16:
      unint64_t v22 = v3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v7 = v29;
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        unint64_t result = sub_100455C98(0, v29[2] + 1, 1);
        id v7 = v29;
      }
      unint64_t v24 = v7[2];
      unint64_t v23 = v7[3];
      unint64_t v25 = v24 + 1;
      if (v24 >= v23 >> 1)
      {
        unint64_t result = sub_100455C98(v23 > 1, v24 + 1, 1);
        unint64_t v25 = v24 + 1;
        id v7 = v29;
      }
      unint64_t v5 = v10 + 1;
      v7[2] = v25;
      uint64_t v26 = &v7[13 * v24];
      v26[4] = v11;
      v26[5] = v12;
      v26[6] = v35;
      *(_OWORD *)(v26 + 7) = v38;
      v26[9] = a3;
      v26[10] = v34;
      v26[11] = v37;
      v26[12] = v13;
      v26[13] = v14;
      v26[14] = v33;
      v26[15] = v36;
      v26[16] = v32;
      uint64_t v6 = v28;
      unint64_t v3 = v22;
      if (v27 == v10) {
        return (uint64_t)v7;
      }
    }
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

unint64_t sub_10026F334()
{
  unint64_t result = qword_10065DE58;
  if (!qword_10065DE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10065DE58);
  }
  return result;
}

uint64_t sub_10026F390()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10026F3D0(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v7 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (a1 == a5 && a2 == a6 && !(a3 >> 16) && v7 == a4 >> 16) {
    return 1;
  }
  else {
    return _stringCompareInternal(_:_:_:_:expecting:)() & 1;
  }
}

unint64_t sub_10026F43C()
{
  unint64_t result = qword_10065B538;
  if (!qword_10065B538)
  {
    type metadata accessor for MarketplaceKitError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065B538);
  }
  return result;
}

unint64_t sub_10026F494()
{
  unint64_t result = qword_10065DE68;
  if (!qword_10065DE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065DE68);
  }
  return result;
}

uint64_t destroy for BlockVerifierState(uint64_t a1)
{
  return sub_100014524(a1 + 8);
}

uint64_t initializeWithCopy for BlockVerifierState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithCopy for BlockVerifierState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  sub_1002553AC((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

__n128 initializeWithTake for BlockVerifierState(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for BlockVerifierState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  sub_100014524(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for BlockVerifierState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BlockVerifierState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockVerifierState()
{
  return &type metadata for BlockVerifierState;
}

uint64_t destroy for BlockDigest()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BlockDigest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BlockDigest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for BlockDigest(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BlockDigest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BlockDigest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BlockDigest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockDigest()
{
  return &type metadata for BlockDigest;
}

uint64_t sub_10026F904(void *a1, int a2)
{
  int v18 = a2;
  uint64_t v3 = sub_1000172F8(&qword_10065DF70);
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  __chkstk_darwin(v3);
  unint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000172F8(&qword_10065DF78);
  uint64_t v6 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000172F8(&qword_10065DF80);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018AC60(a1, a1[3]);
  sub_100272AC8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  if (v18)
  {
    char v20 = 1;
    sub_100272B1C();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    char v19 = 0;
    sub_100272B70();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  }
  return (*v13)(v12, v9);
}

BOOL sub_10026FBB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void sub_10026FBD0()
{
  Hasher._combine(_:)(*v0);
}

uint64_t sub_10026FC00()
{
  if (*v0) {
    return 0x363532616873;
  }
  else {
    return 3499117;
  }
}

uint64_t sub_10026FC30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002716D0(a1, a2);
  *a3 = result;
  return result;
}

void sub_10026FC58(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_10026FC64(uint64_t a1)
{
  unint64_t v2 = sub_100272AC8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10026FCA0(uint64_t a1)
{
  unint64_t v2 = sub_100272AC8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10026FCDC()
{
  return 0;
}

uint64_t sub_10026FCE8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_10026FD18(uint64_t a1)
{
  unint64_t v2 = sub_100272B70();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10026FD54(uint64_t a1)
{
  unint64_t v2 = sub_100272B70();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10026FD90(uint64_t a1)
{
  unint64_t v2 = sub_100272B1C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10026FDCC(uint64_t a1)
{
  unint64_t v2 = sub_100272B1C();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_10026FE08()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

Swift::Int sub_10026FE50()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_10026FE94@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1002717AC(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_10026FEC4(void *a1)
{
  return sub_10026F904(a1, *v1);
}

uint64_t sub_10026FEE0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1000172F8(&qword_10065DEB0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10018AC60(a1, a1[3]);
  sub_1002720B8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v11[0] = *v3;
  char v12 = 0;
  sub_100270A10();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    v11[0] = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v11[0] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_10001733C((uint64_t)(v3 + 40), (uint64_t)v13, &qword_10065DEB8);
    sub_10001733C((uint64_t)v13, (uint64_t)v11, &qword_10065DEB8);
    char v12 = 3;
    sub_1000172F8((uint64_t *)&unk_10065C5D0);
    sub_10027210C(&qword_10065DEC0);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

BOOL sub_100270114(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100270128()
{
  uint64_t result = 0x687469726F676C61;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x747365676964;
      break;
    case 2:
      uint64_t result = 0x7A69536B636F6C62;
      break;
    case 3:
      uint64_t result = 0x6769446B636F6C62;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1002701C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100271BFC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1002701F0(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1002701FC(uint64_t a1)
{
  unint64_t v2 = sub_1002720B8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100270238(uint64_t a1)
{
  unint64_t v2 = sub_1002720B8();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100270274@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100271DE0(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1002702B8(void *a1)
{
  return sub_10026FEE0(a1);
}

unint64_t sub_1002702F4()
{
  unint64_t result = 0x687469726F676C61;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7453726568736168;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10027039C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002728F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002703C4(uint64_t a1)
{
  unint64_t v2 = sub_100270968();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100270400(uint64_t a1)
{
  unint64_t v2 = sub_100270968();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10027043C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = sub_1000172F8(&qword_10065DE70);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018AC60(a1, a1[3]);
  sub_100270968();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    char v19 = 0;
    sub_1002709BC();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    char v9 = v14;
    LOBYTE(v17[0]) = v14;
    LOBYTE(v14) = 2;
    *(void *)&long long v18 = KeyedDecodingContainer.decode(_:forKey:)();
    LOBYTE(v14) = 3;
    *((void *)&v18 + 1) = KeyedDecodingContainer.decode(_:forKey:)();
    char v19 = 1;
    if (v9)
    {
      uint64_t v15 = &type metadata for ResumableHash.SHA256State;
      unint64_t v16 = sub_1001CF10C();
      sub_1001CEDF0();
    }
    else
    {
      uint64_t v15 = &type metadata for ResumableHash.MD5State;
      unint64_t v16 = sub_1001CF500();
      sub_1001CF244();
    }
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_10018B164(&v14, (uint64_t)v17 + 8);
    long long v11 = v17[1];
    *a2 = v17[0];
    a2[1] = v11;
    long long v12 = v18;
    a2[2] = v17[2];
    a2[3] = v12;
  }
  return sub_100014524((uint64_t)a1);
}

uint64_t sub_1002706BC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1000172F8(&qword_10065DE88);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10018AC60(a1, a1[3]);
  sub_100270968();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v10[15] = *(unsigned char *)v3;
  v10[14] = 0;
  sub_100270A10();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    sub_10018AC60((void *)(v3 + 8), *(void *)(v3 + 32));
    v10[13] = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v10[12] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v10[11] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100270898@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_10027043C(a1, a2);
}

uint64_t sub_1002708B0(void *a1)
{
  return sub_1002706BC(a1);
}

uint64_t sub_1002708C8()
{
  uint64_t v3 = dispatch thunk of CustomStringConvertible.description.getter();
  v0._countAndFlagsBits = 47;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  v1._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_100270968()
{
  unint64_t result = qword_10065DE78;
  if (!qword_10065DE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065DE78);
  }
  return result;
}

unint64_t sub_1002709BC()
{
  unint64_t result = qword_10065DE80;
  if (!qword_10065DE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065DE80);
  }
  return result;
}

unint64_t sub_100270A10()
{
  unint64_t result = qword_10065DE90;
  if (!qword_10065DE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065DE90);
  }
  return result;
}

uint64_t sub_100270A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 40);
  if (!v5)
  {
    sub_10001733C(a1 + 8, (uint64_t)v21, &qword_10065C4D0);
    sub_10018AFE0((uint64_t)v21);
    goto LABEL_5;
  }
  sub_10001733C(a1 + 24, (uint64_t)v20, &qword_10065DEF8);
  sub_10001733C((uint64_t)v20, (uint64_t)&v22, &qword_10065DEF8);
  if (v23)
  {
    sub_10001733C(a1 + 8, (uint64_t)v19, &qword_10065C4D0);
    sub_10018AFE0((uint64_t)v19);
    swift_bridgeObjectRelease();
LABEL_5:
    type metadata accessor for InternalError();
    sub_10019FE50();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return sub_10001729C(a2, &qword_1006666D0);
  }
  uint64_t v8 = v22;
  char v9 = *(unsigned char *)a1;
  *(unsigned char *)a3 = *(unsigned char *)a1;
  *(void *)(a3 + 8) = v5;
  *(void *)(a3 + 16) = v8;
  sub_100017238(a2, (uint64_t)v15, &qword_1006666D0);
  if ((void)v16)
  {
    sub_10019B17C((uint64_t)v15 + 8, (uint64_t)&v11);
    swift_bridgeObjectRetain();
    sub_10024A8CC((uint64_t)v15);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_10001729C((uint64_t)v15, &qword_1006666D0);
    long long v11 = 0u;
    long long v12 = 0u;
    *(void *)&long long v13 = 0;
  }
  sub_100270CA0((uint64_t)&v11, v9, (uint64_t *)v15);
  sub_10001733C(a1 + 8, (uint64_t)v18, &qword_10065C4D0);
  sub_10018AFE0((uint64_t)v18);
  swift_bridgeObjectRelease();
  sub_10001729C((uint64_t)&v11, &qword_10065DEC8);
  sub_10018B164(v15, a3 + 24);
  sub_10001733C(a2, (uint64_t)&v11, &qword_1006666D0);
  if ((void)v13)
  {
    v15[0] = v11;
    v15[1] = v12;
    long long v16 = v13;
    long long v17 = v14;
    uint64_t v10 = *((void *)&v14 + 1);
    *(void *)(a3 + 64) = v14;
    uint64_t result = sub_10024A8CC((uint64_t)v15);
    *(void *)(a3 + 72) = v10;
  }
  else
  {
    uint64_t result = sub_10001729C((uint64_t)&v11, &qword_1006666D0);
    *(void *)(a3 + 64) = 0;
    *(void *)(a3 + 72) = 0;
  }
  return result;
}