uint64_t sub_1003AE460(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  void *v5;
  uint64_t (*v6)(uint64_t, int *);
  uint64_t v8;

  v4 = *(int **)(v1 + 16);
  v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000176B4;
  v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1006619C0 + dword_1006619C0);
  return v6(a1, v4);
}

uint64_t sub_1003AE518()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 113, 7);
}

uint64_t sub_1003AE578(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v12 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_1000176B4;
  return sub_10037DDBC(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1003AE66C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_10000B238;
  return sub_10037E114(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1003AE748(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  void *v10 = v3;
  v10[1] = sub_1000176B4;
  return sub_10037E9E4(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_1003AE814()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 130, 7);
}

uint64_t sub_1003AE878()
{
  v1 = (int *)type metadata accessor for Restore();
  uint64_t v19 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v17 = *(void *)(*((void *)v1 - 1) + 64);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = (v19 + 40) & ~v19;
  uint64_t v2 = v0 + v18;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  v16 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v16(v0 + v18, v3);

  uint64_t v5 = v0 + v18 + v1[7];
  uint64_t v6 = type metadata accessor for AppInstallRequestType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + v18 + v1[8];
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v20 = *(void *)(v8 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (!v9(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = v2 + v1[10];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3)) {
    v16(v10, v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v2 + v1[17];
  if (!v9(v11, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v11, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[23];
  if (!v9(v12, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v12, v8);
  }
  unint64_t v13 = (v17 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_release();

  return _swift_deallocObject(v0, v14 + 8, v19 | 7);
}

uint64_t sub_1003AEBE8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Restore() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = *(void *)((char *)v1 + v6);
  uint64_t v12 = *(void *)((char *)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *unint64_t v13 = v2;
  v13[1] = sub_1000176B4;
  return sub_10037F660(a1, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1003AED2C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003AED64(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_1000176B4;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100661A38 + dword_100661A38);
  return v6(a1, v4);
}

uint64_t sub_1003AEE1C()
{
  return sub_1003AEE34((void (*)(void))&_swift_release);
}

uint64_t sub_1003AEE34(void (*a1)(void))
{
  swift_unknownObjectRelease();
  a1(*(void *)(v1 + 32));

  return _swift_deallocObject(v1, 40, 7);
}

uint64_t sub_1003AEE84(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000176B4;
  return sub_10037C6DC(a1, v4, v5, v6);
}

uint64_t sub_1003AEF38(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1000176B4;
  return sub_10037C9C0(a1, v1);
}

uint64_t sub_1003AEFD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003AF03C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003AF0A0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for RestoreManager.RestoreManagerError(uint64_t a1)
{
  return sub_1003AF0C8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1003AF0C8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s28ManagedAppDistributionDaemon14RestoreManagerC19RestoreManagerErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1003AF0A0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for RestoreManager.RestoreManagerError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1003AF0A0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1003AF0C8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for RestoreManager.RestoreManagerError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1003AF0C8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RestoreManager.RestoreManagerError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RestoreManager.RestoreManagerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1003AF258(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1003AF270(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RestoreManager.RestoreManagerError()
{
  return &type metadata for RestoreManager.RestoreManagerError;
}

unint64_t sub_1003AF29C()
{
  unint64_t result = qword_100661AA0;
  if (!qword_100661AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100661AA0);
  }
  return result;
}

uint64_t sub_1003AF308(void *a1)
{
  return sub_1003AE008(a1);
}

uint64_t sub_1003AF324()
{
  return sub_10039C008();
}

void sub_1003AF398()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000172F8((uint64_t *)&unk_100661AB0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  v129 = (char *)&v120 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v130 = (uint64_t *)((char *)&v120 - v5);
  uint64_t CoordinatorTask = type metadata accessor for CreateCoordinatorTask();
  uint64_t v7 = __chkstk_darwin(CoordinatorTask);
  uint64_t v123 = (uint64_t)&v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v120 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v127 = (uint64_t)&v120 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  v16 = (char *)&v120 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v120 - v17;
  uint64_t v135 = type metadata accessor for Logger();
  v132 = *(os_activity_scope_state_s **)(v135 - 8);
  uint64_t v19 = __chkstk_darwin(v135);
  v125 = (char *)&v120 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  v23 = (char *)&v120 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  v128 = (char *)&v120 - v25;
  __chkstk_darwin(v24);
  v27 = (char *)&v120 - v26;
  static Logger.install.getter();
  v134 = v1;
  sub_1003B1DB0((uint64_t)v1, (uint64_t)v18);
  v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  BOOL v30 = os_log_type_enabled(v28, v29);
  v124 = v23;
  v122 = v11;
  v126 = v16;
  if (v30)
  {
    v31 = (uint8_t *)swift_slowAlloc();
    os_log_t v121 = (os_log_t)swift_slowAlloc();
    *(_DWORD *)v31 = 138412290;
    uint64_t v32 = *(int *)(CoordinatorTask + 52);
    uint64_t v131 = CoordinatorTask;
    v33 = *(void **)&v18[v32];
    v137[0] = v33;
    id v34 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v121->char isa = (Class)v33;
    uint64_t CoordinatorTask = v131;
    sub_1003B1E14((uint64_t)v18);
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "[%@] Creating coordinator", v31, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1003B1E14((uint64_t)v18);
  }

  v35 = v132;
  v36 = (os_activity_scope_state_s *)&v132->opaque[1];
  v37 = (uint64_t *)v132->opaque[1];
  ((void (*)(char *, uint64_t))v37)(v27, v135);
  v38 = (uint64_t *)v134;
  char isa = (char)v134[4].isa;
  if (!isa)
  {
    uint64_t v131 = CoordinatorTask;
    os_log_t v121 = (os_log_t)v134->isa;
    v50 = (void (*)(void, void))v130;
    ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v35[3].opaque[1])(v130, 1, 1, v135);
    uint64_t v51 = (uint64_t)v50;
    uint64_t v52 = (uint64_t)v129;
    sub_100017238(v51, (uint64_t)v129, (uint64_t *)&unk_100661AB0);
    swift_bridgeObjectRetain_n();
    v53 = sub_100011088("LSApplicationRecord", 19, 2, 0, 1, 1, v52, (void *)&_mh_execute_header);
    uint64_t v55 = v54;
    v57 = v56;
    v59 = v58;
    if (qword_10065B150 != -1) {
      swift_once();
    }
    v137[0] = v53;
    v137[1] = (void *)v55;
    v137[2] = v57;
    v137[3] = v59;
    swift_retain();
    swift_retain();
    swift_retain();
    v129 = v57;
    swift_retain();
    sub_1000172F8(&qword_10065F9C0);
    swift_task_localValuePush();
    os_unfair_lock_lock((os_unfair_lock_t)(v55 + 24));
    uint64_t v60 = v133;
    sub_100006238((void **)(v55 + 16), v137);
    if (v60)
    {
      os_unfair_lock_unlock((os_unfair_lock_t)(v55 + 24));
      __break(1u);
      return;
    }
    v132 = v53;
    os_unfair_lock_unlock((os_unfair_lock_t)(v55 + 24));
    v61 = v137[0];
    if (v137[0])
    {
      sub_10000E2EC();
    }
    id v62 = objc_allocWithZone((Class)LSApplicationIdentity);
    swift_bridgeObjectRetain();
    NSString v63 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v64 = [v62 initWithBundleIdentifier:v63 URL:0 personaUniqueString:0 personaType:4];

    v137[0] = 0;
    id v65 = [v64 findApplicationRecordFetchingPlaceholder:0 error:v137];
    if (v65)
    {
      id v66 = v137[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      v68 = v37;
      v69 = v36;
      v70 = v137[0];
      _convertNSErrorToError(_:)();

      v36 = v69;
      v37 = v68;
      swift_willThrow();

      swift_errorRelease();
      swift_bridgeObjectRelease();
    }
    swift_task_localValuePop();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_10001729C((uint64_t)v130, (uint64_t *)&unk_100661AB0);

    v38 = (uint64_t *)v134;
    uint64_t v133 = 0;
    if (v65)
    {
      v71 = v128;
      static Logger.install.getter();
      uint64_t v72 = (uint64_t)v126;
      sub_1003B1DB0((uint64_t)v38, (uint64_t)v126);
      uint64_t v73 = v127;
      sub_1003B1DB0((uint64_t)v38, v127);
      v74 = Logger.logObject.getter();
      os_log_type_t v75 = static os_log_type_t.error.getter();
      BOOL v76 = os_log_type_enabled(v74, v75);
      uint64_t CoordinatorTask = v131;
      if (v76)
      {
        uint64_t v77 = swift_slowAlloc();
        os_log_t v121 = v74;
        uint64_t v78 = v77;
        v79 = (uint64_t *)v73;
        v80 = (void *)swift_slowAlloc();
        v81 = (char *)swift_slowAlloc();
        v129 = v81;
        *(_DWORD *)uint64_t v78 = 138412546;
        v132 = v36;
        v82 = *(void **)(v72 + *(int *)(CoordinatorTask + 52));
        uint64_t v136 = (uint64_t)v82;
        v137[0] = v81;
        v130 = v37;
        id v83 = v82;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v80 = v82;
        uint64_t CoordinatorTask = v131;
        sub_1003B1E14(v72);
        *(_WORD *)(v78 + 12) = 2082;
        uint64_t v84 = *v79;
        unint64_t v85 = v79[1];
        swift_bridgeObjectRetain();
        uint64_t v136 = sub_1000143F4(v84, v85, (uint64_t *)v137);
        uint64_t v86 = v135;
        v36 = v132;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v38 = (uint64_t *)v134;
        swift_bridgeObjectRelease();
        sub_1003B1E14((uint64_t)v79);
        os_log_t v87 = v121;
        sub_1000172F8(&qword_10065DB10);
        char isa = 1;
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v88 = v86;
        v37 = v130;
        ((void (*)(char *, uint64_t))v130)(v128, v88);
      }
      else
      {
        sub_1003B1E14(v72);
        sub_1003B1E14(v73);

        ((void (*)(char *, uint64_t))v37)(v71, v135);
        char isa = 1;
      }
    }
    else
    {
      char isa = 0;
      uint64_t CoordinatorTask = v131;
    }
  }
  int v40 = *((unsigned __int8 *)v38 + 32);
  uint64_t v41 = *v38;
  uint64_t v42 = v38[1];
  uint64_t v43 = v38[5];
  sub_10018B1DC(0, &qword_10065DB18);
  swift_bridgeObjectRetain();
  sub_1004C413C(v41, v42, 0, 0);
  if (!v44)
  {
    sub_100263EA8();
    swift_allocError();
    unsigned char *v67 = 1;
    swift_willThrow();
    return;
  }
  v45 = v44;
  uint64_t v46 = v133;
  id v47 = sub_1003B1B5C(v44, isa, v43, (id)(v40 != 2));
  char v49 = v48;

  if (!v46)
  {
    if ((v49 & 1) != 0 || [v47 creatorIdentifier] == (id)28)
    {
      sub_1003B0174(v47);
      v137[4] = &OBJC_PROTOCOL___IXCoordinatorWithInitialODRAssetPromises;
      uint64_t v89 = swift_dynamicCastObjCProtocolConditional();
      if (v89)
      {
        v90 = (void *)v89;
        v91 = v36;
        sub_10018B1DC(0, &qword_10065DC10);
        id v92 = v47;
        Class v93 = Array._bridgeToObjectiveC()().super.isa;
        v137[0] = 0;
        unsigned int v94 = [v90 setInitialODRAssetPromises:v93 error:v137];

        if (!v94)
        {
          v119 = v137[0];
          _convertNSErrorToError(_:)();

          swift_willThrow();
          return;
        }
        id v95 = v137[0];

        v36 = v91;
        v38 = (uint64_t *)v134;
      }
      v96 = v124;
      static Logger.install.getter();
      uint64_t v97 = (uint64_t)v122;
      sub_1003B1DB0((uint64_t)v38, (uint64_t)v122);
      v98 = v47;
      v99 = Logger.logObject.getter();
      os_log_type_t v100 = static os_log_type_t.default.getter();
      v134 = v99;
      LODWORD(v133) = v100;
      if (os_log_type_enabled(v99, v100))
      {
        uint64_t v101 = swift_slowAlloc();
        v102 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v101 = 138412546;
        v130 = v37;
        uint64_t v131 = v101 + 4;
        uint64_t v103 = *(int *)(CoordinatorTask + 52);
        v104 = v98;
        v105 = *(void **)(v97 + v103);
        v137[0] = v105;
        v132 = v36;
        id v106 = v105;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v102 = v105;
        sub_1003B1E14(v97);
        *(_WORD *)(v101 + 12) = 2114;
        v137[0] = v104;
        v107 = v104;
        v37 = v130;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v102[1] = v104;

        _os_log_impl((void *)&_mh_execute_header, v134, (os_log_type_t)v133, "[%@] Created coordinator: %{public}@", (uint8_t *)v101, 0x16u);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        v96 = v124;
        swift_slowDealloc();
      }
      else
      {
        sub_1003B1E14(v97);

        v134 = v98;
      }
    }
    else
    {
      v96 = v125;
      static Logger.install.getter();
      uint64_t v108 = (uint64_t)v38;
      uint64_t v109 = v123;
      sub_1003B1DB0(v108, v123);
      v110 = v47;
      v111 = Logger.logObject.getter();
      os_log_type_t v112 = static os_log_type_t.default.getter();
      v134 = v111;
      LODWORD(v133) = v112;
      if (os_log_type_enabled(v111, v112))
      {
        uint64_t v113 = swift_slowAlloc();
        v114 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v113 = 138412546;
        v130 = v37;
        uint64_t v131 = v113 + 4;
        uint64_t v115 = v109;
        v116 = *(void **)(v109 + *(int *)(CoordinatorTask + 52));
        v137[0] = v116;
        v132 = v36;
        id v117 = v116;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v114 = v116;
        sub_1003B1E14(v115);
        *(_WORD *)(v113 + 12) = 2114;
        v137[0] = v110;
        v118 = v110;
        v37 = v130;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v114[1] = v110;

        _os_log_impl((void *)&_mh_execute_header, v134, (os_log_type_t)v133, "[%@] Found existing coordinator: %{public}@", (uint8_t *)v113, 0x16u);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        v96 = v125;
      }
      else
      {
        sub_1003B1E14(v109);

        v134 = v110;
      }
    }

    ((void (*)(char *, uint64_t))v37)(v96, v135);
  }
}

void sub_1003B0174(void *a1)
{
  uint64_t CoordinatorTask = type metadata accessor for CreateCoordinatorTask();
  uint64_t v4 = __chkstk_darwin(CoordinatorTask);
  unsigned __int8 v6 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v81 - v7;
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v81 - v14;
  if ([a1 creatorIdentifier] == (id)28)
  {
    uint64_t v88 = a1;
    if (([a1 hasPlaceholderPromise] & 1) == 0)
    {
      os_log_t v87 = (int *)CoordinatorTask;
      unint64_t v85 = v13;
      static Logger.install.getter();
      uint64_t v89 = v1;
      sub_1003B1DB0((uint64_t)v1, (uint64_t)v8);
      v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.default.getter();
      BOOL v18 = os_log_type_enabled(v16, v17);
      uint64_t v84 = v6;
      if (v18)
      {
        uint64_t v19 = swift_slowAlloc();
        id v83 = (void *)v9;
        uint64_t v20 = (uint8_t *)v19;
        v82 = (void *)swift_slowAlloc();
        uint64_t v86 = v10;
        *(_DWORD *)uint64_t v20 = 138412290;
        uint64_t v21 = *(void **)&v8[v87[13]];
        v92[0] = v21;
        id v22 = v21;
        uint64_t v10 = v86;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v82 = v21;
        sub_1003B1E14((uint64_t)v8);
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "[%@] Configuring placeholder promise", v20, 0xCu);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v9 = (uint64_t)v83;
        swift_slowDealloc();
      }
      else
      {
        sub_1003B1E14((uint64_t)v8);
      }

      uint64_t v25 = *(void (**)(char *, uint64_t))(v10 + 8);
      uint64_t v23 = v10 + 8;
      uint64_t v24 = v25;
      v25(v15, v9);
      sub_10018B1DC(0, (unint64_t *)&qword_100661AC0);
      uint64_t v27 = v89[2];
      uint64_t v26 = v89[3];
      uint64_t v28 = *v89;
      uint64_t v29 = v89[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v30 = v27;
      uint64_t v31 = v90;
      uint64_t v32 = sub_1004E5B14(v30, v26, v28, v29, 1);
      uint64_t v90 = v31;
      if (!v31)
      {
        v33 = v32;
        if (!v32)
        {
          sub_1003B1E70();
          uint64_t v45 = swift_allocError();
          *uint64_t v46 = 3;
          uint64_t v90 = v45;
          swift_willThrow();
          return;
        }
        uint64_t v86 = v23;
        id v34 = [objc_allocWithZone((Class)IXPlaceholderAttributes) init];
        v35 = v34;
        v36 = v87;
        int v37 = *((unsigned __int8 *)v89 + v87[9]);
        if (v37 != 2) {
          [v34 setLaunchProhibited:v37 & 1];
        }
        v92[0] = 0;
        unsigned int v38 = [v33 setPlaceholderAttributes:v35 error:v92];
        id v39 = v92[0];
        if (v38)
        {
          int v40 = v89;
          if ((*((unsigned char *)v89 + v36[10]) & 0xFE) == 2)
          {
            uint64_t v41 = *(void **)((char *)v89 + v36[11]);
            if (!v41)
            {
              type metadata accessor for InternalError();
              sub_10019FE50();
              uint64_t v49 = swift_allocError();
              swift_storeEnumTagMultiPayload();
              id v50 = v39;
              uint64_t v90 = v49;
LABEL_29:
              swift_willThrow();

LABEL_30:
              return;
            }
            id v42 = v92[0];
            [v41 copy];
            _bridgeAnyObjectToAny(_:)();
            swift_unknownObjectRelease();
            sub_10018B1DC(0, (unint64_t *)&qword_10065DC30);
            swift_dynamicCast();
            uint64_t v43 = v91;
            if (*(uint64_t *)((char *)v40 + v36[12] + 8)) {
              NSString v44 = String._bridgeToObjectiveC()();
            }
            else {
              NSString v44 = 0;
            }
            char v48 = v88;
            [v43 setManagementDeclarationIdentifier:v44];

            v92[0] = 0;
            id v51 = v43;
            if (![v33 setMetadata:v51 error:v92])
            {
              id v72 = v92[0];
              uint64_t v73 = _convertNSErrorToError(_:)();

              uint64_t v90 = v73;
              swift_willThrow();

              return;
            }
            id v52 = v92[0];
          }
          else
          {
            id v47 = v92[0];
            char v48 = v88;
          }
          id v53 = sub_1003B0A24();
          if (v53)
          {
            uint64_t v54 = v53;
            v92[0] = 0;
            if (![v33 setIconPromise:v53 error:v92])
            {
              id v70 = v92[0];
              uint64_t v71 = _convertNSErrorToError(_:)();

              uint64_t v90 = v71;
              swift_willThrow();

              goto LABEL_30;
            }
            id v55 = v92[0];
          }
          v92[0] = 0;
          unsigned int v56 = [v33 setConfigurationCompleteWithError:v92];
          id v39 = v92[0];
          if (v56)
          {
            v92[0] = 0;
            id v57 = v39;
            if ([v48 setPlaceholderPromise:v33 error:v92])
            {
              id v58 = v92[0];
              static Logger.install.getter();
              uint64_t v59 = (uint64_t)v84;
              sub_1003B1DB0((uint64_t)v89, (uint64_t)v84);
              uint64_t v60 = Logger.logObject.getter();
              os_log_type_t v61 = static os_log_type_t.default.getter();
              int v62 = v61;
              if (os_log_type_enabled(v60, v61))
              {
                uint64_t v63 = swift_slowAlloc();
                LODWORD(v88) = v62;
                id v64 = (uint8_t *)v63;
                id v83 = (void *)swift_slowAlloc();
                uint64_t v89 = v35;
                *(_DWORD *)id v64 = 138412290;
                v82 = v64 + 4;
                id v65 = *(void **)(v59 + v36[13]);
                v92[0] = v65;
                id v66 = v65;
                p_char isa = v89;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                *id v83 = v65;
                sub_1003B1E14(v59);
                _os_log_impl((void *)&_mh_execute_header, v60, (os_log_type_t)v88, "[%@] Placeholder promise configured", v64, 0xCu);
                sub_1000172F8(&qword_10065DB10);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                uint64_t v60 = v33;
              }
              else
              {

                sub_1003B1E14(v59);
                p_char isa = &v33->isa;
              }

              v24(v85, v9);
              return;
            }
            id v74 = v92[0];
            uint64_t v75 = _convertNSErrorToError(_:)();

            uint64_t v90 = v75;
            swift_willThrow();
            sub_1003B1E70();
            swift_allocError();
            *BOOL v76 = 2;
            uint64_t v77 = (void *)_convertErrorToNSError(_:)();
            swift_errorRelease();
            v92[0] = 0;
            unsigned int v78 = [v33 cancelForReason:v77 client:28 error:v92];

            id v79 = v92[0];
            if (!v78)
            {
              v80 = v79;
              _convertNSErrorToError(_:)();

              swift_willThrow();
              swift_errorRelease();

              return;
            }
            goto LABEL_29;
          }
        }
        id v68 = v39;
        uint64_t v69 = _convertNSErrorToError(_:)();

        uint64_t v90 = v69;
        goto LABEL_29;
      }
    }
  }
}

id sub_1003B0A24()
{
  uint64_t CoordinatorTask = type metadata accessor for CreateCoordinatorTask();
  __chkstk_darwin(CoordinatorTask);
  uint64_t v3 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v37 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unsigned __int8 v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000172F8(&qword_10065C3C0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100017238(v0 + *(int *)(CoordinatorTask + 32), (uint64_t)v9, &qword_10065C3C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_10001729C((uint64_t)v9, &qword_10065C3C0);
    return 0;
  }
  else
  {
    uint64_t v36 = v0;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    id v15 = objc_allocWithZone((Class)IXPromisedTransferToPath);
    NSString v16 = String._bridgeToObjectiveC()();
    id v14 = [v15 initWithName:v16 client:28 diskSpaceNeeded:0];

    if (v14)
    {
      if (URL.isFileURL.getter())
      {
        [v14 setShouldCopy:1];
        URL._bridgeToObjectiveC()(v17);
        uint64_t v19 = v18;
        [v14 setTransferPath:v18];

        [v14 setComplete:1];
      }
      else
      {
        static Logger.install.getter();
        uint64_t v20 = v36;
        sub_1003B1DB0(v36, (uint64_t)v3);
        uint64_t v21 = Logger.logObject.getter();
        os_log_type_t v22 = static os_log_type_t.default.getter();
        int v35 = v22;
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v32 = v21;
          uint64_t v23 = (uint8_t *)swift_slowAlloc();
          v33 = (void *)swift_slowAlloc();
          id v34 = v23;
          *(_DWORD *)uint64_t v23 = 138412290;
          uint64_t v24 = *(void **)&v3[*(int *)(CoordinatorTask + 52)];
          unsigned int v38 = v24;
          v31[1] = &v39;
          v31[2] = v23 + 4;
          id v25 = v24;
          uint64_t v20 = v36;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          void *v33 = v24;
          uint64_t v21 = v32;
          sub_1003B1E14((uint64_t)v3);
          _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v35, "[%@] Starting artwork request", v34, 0xCu);
          sub_1000172F8(&qword_10065DB10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_1003B1E14((uint64_t)v3);
        }

        (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v4);
        uint64_t v26 = *(void **)(v20 + *(int *)(CoordinatorTask + 52));
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = v26;
        *(void *)(v27 + 24) = v14;
        id v28 = v26;
        id v29 = v14;
        sub_1003B1758((uint64_t)v13, (uint64_t)sub_1003B1F04, v27);
        swift_release();
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return v14;
}

void sub_1003B0EDC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v59 = a5;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v58 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  id v14 = (char *)v54 - v13;
  __chkstk_darwin(v12);
  NSString v16 = (char *)v54 - v15;
  uint64_t v17 = sub_1000172F8(&qword_10065C3C0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for URL();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    swift_errorRetain();
    static Logger.install.getter();
    swift_errorRetain();
    id v24 = a4;
    swift_errorRetain();
    id v25 = v24;
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      id v29 = (void *)swift_slowAlloc();
      unsigned int v56 = (uint8_t *)swift_slowAlloc();
      uint64_t v60 = (uint64_t)v25;
      aBlock = (void **)v56;
      *(_DWORD *)uint64_t v28 = 138412546;
      os_log_t v55 = v26;
      id v30 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v29 = v25;

      *(_WORD *)(v28 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v31 = Error.localizedDescription.getter();
      uint64_t v60 = sub_1000143F4(v31, v32, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      uint64_t v26 = v55;
      _os_log_impl((void *)&_mh_execute_header, v55, v27, "[%@] Error fetching artwork data: %{public}s", (uint8_t *)v28, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }

    (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v58);
    id v39 = v59;
    int v40 = (void *)_convertErrorToNSError(_:)();
    id v65 = nullsub_1;
    uint64_t v66 = 0;
    aBlock = _NSConcreteStackBlock;
    uint64_t v62 = 1107296256;
    uint64_t v63 = sub_1003C85EC;
    id v64 = &unk_1006445C8;
    uint64_t v41 = _Block_copy(&aBlock);
    [v39 cancelForReason:v40 client:28 completion:v41];
    _Block_release(v41);

    swift_errorRelease();
  }
  else
  {
    sub_100017238(a1, (uint64_t)v19, &qword_10065C3C0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
    {
      sub_10001729C((uint64_t)v19, &qword_10065C3C0);
      static Logger.install.getter();
      v33 = a4;
      id v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        uint64_t v37 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 138412290;
        aBlock = v33;
        unsigned int v38 = v33;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v37 = v33;

        _os_log_impl((void *)&_mh_execute_header, v34, v35, "[%@] Error fetching artwork data", v36, 0xCu);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        id v34 = v33;
      }

      (*(void (**)(char *, uint64_t))(v57 + 8))(v14, v58);
      sub_1003B1E70();
      swift_allocError();
      *id v47 = 3;
      char v48 = (void *)_convertErrorToNSError(_:)();
      swift_errorRelease();
      id v65 = nullsub_1;
      uint64_t v66 = 0;
      aBlock = _NSConcreteStackBlock;
      uint64_t v62 = 1107296256;
      uint64_t v63 = sub_1003C85EC;
      id v64 = &unk_1006445A0;
      uint64_t v49 = _Block_copy(&aBlock);
      [v59 cancelForReason:v48 client:28 completion:v49];
      _Block_release(v49);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v19, v20);
      static Logger.install.getter();
      id v42 = a4;
      uint64_t v43 = Logger.logObject.getter();
      os_log_type_t v44 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = (uint8_t *)swift_slowAlloc();
        os_log_t v55 = (os_log_t)swift_slowAlloc();
        unsigned int v56 = v45;
        *(_DWORD *)uint64_t v45 = 138412290;
        v54[1] = v45 + 4;
        aBlock = v42;
        uint64_t v46 = v42;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v55->char isa = (Class)v42;

        _os_log_impl((void *)&_mh_execute_header, v43, v44, "[%@] Artwork request completed successfully", v56, 0xCu);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v43 = v42;
      }

      (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v58);
      id v50 = v59;
      [v59 setShouldCopy:0];
      URL._bridgeToObjectiveC()(v51);
      id v53 = v52;
      [v50 setTransferPath:v52];

      [v50 setComplete:1];
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    }
  }
}

void sub_1003B1758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = a2;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URLRequest();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [self ephemeralSessionConfiguration];
  id v14 = [self sessionWithConfiguration:v13];

  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  URLRequest.init(url:cachePolicy:timeoutInterval:)();
  Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  aBlock[4] = v19;
  aBlock[5] = a3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003B19F4;
  aBlock[3] = &unk_100644578;
  NSString v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v17 = [v14 downloadTaskWithRequest:isa completionHandler:v16];
  _Block_release(v16);

  [v17 resume];
}

uint64_t sub_1003B19F4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = sub_1000172F8(&qword_10065C3C0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(char *, void *, void *))(a1 + 32);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
  }
  else
  {
    uint64_t v13 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
  }
  swift_retain();
  id v14 = a3;
  id v15 = a4;
  v11(v10, a3, a4);

  swift_release();
  return sub_10001729C((uint64_t)v10, &qword_10065C3C0);
}

id sub_1003B1B5C(void *a1, char a2, uint64_t a3, id a4)
{
  char v18 = 0;
  switch(a2)
  {
    case 1:
      uint64_t v7 = (unint64_t *)&unk_100661B38;
      break;
    case 2:
      uint64_t v7 = (unint64_t *)&qword_100661B30;
      break;
    case 3:
      uint64_t v7 = (unint64_t *)&unk_10065DC40;
      break;
    default:
      uint64_t v7 = (unint64_t *)&unk_100661B40;
      break;
  }
  sub_10018B1DC(0, v7);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v17 = 0;
  id v9 = a1;
  id v10 = [ObjCClassFromMetadata coordinatorForAppWithIdentity:v9 withClientID:28 createIfNotExisting:a4 & 1 created:&v18 error:&v17];
  if (v10)
  {
    a4 = v10;
    id v11 = v17;

    uint64_t v19 = &OBJC_PROTOCOL___IXCoordinatorWithImportance;
    uint64_t v12 = swift_dynamicCastObjCProtocolConditional();
    if (!v12) {
      return a4;
    }
    uint64_t v13 = (void *)v12;
    id v17 = 0;
    id v9 = a4;
    if ([v13 setImportance:a3 error:&v17])
    {
      id v14 = v17;

      return a4;
    }
    a4 = v17;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  else
  {
    id v15 = v17;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }

  return a4;
}

uint64_t type metadata accessor for CreateCoordinatorTask()
{
  uint64_t result = qword_100661BA0;
  if (!qword_100661BA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003B1DB0(uint64_t a1, uint64_t a2)
{
  uint64_t CoordinatorTask = type metadata accessor for CreateCoordinatorTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(CoordinatorTask - 8) + 16))(a2, a1, CoordinatorTask);
  return a2;
}

uint64_t sub_1003B1E14(uint64_t a1)
{
  uint64_t CoordinatorTask = type metadata accessor for CreateCoordinatorTask();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(CoordinatorTask - 8) + 8))(a1, CoordinatorTask);
  return a1;
}

unint64_t sub_1003B1E70()
{
  unint64_t result = qword_100664AE0;
  if (!qword_100664AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100664AE0);
  }
  return result;
}

uint64_t sub_1003B1EC4()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003B1F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1003B0EDC(a1, a2, a3, *(void **)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t sub_1003B1F0C()
{
  return swift_release();
}

unsigned char *storeEnumTagSinglePayload for CreateCoordinatorError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003B1FE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CreateCoordinatorError()
{
  return &type metadata for CreateCoordinatorError;
}

void *sub_1003B2018(uint64_t a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[2];
    uint64_t v9 = a2[3];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(void *)(a1 + 40) = a2[5];
    uint64_t v10 = a3[8];
    __dst = (void *)(a1 + v10);
    id v11 = (char *)a2 + v10;
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    uint64_t v12 = type metadata accessor for URL();
    uint64_t v13 = *(void *)(v12 - 8);
    id v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_1000172F8(&qword_10065C3C0);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v17 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)v4 + v17) = *((unsigned char *)a2 + v17);
    uint64_t v18 = a3[11];
    uint64_t v19 = a3[12];
    uint64_t v20 = *(void **)((char *)a2 + v18);
    *(void *)((char *)v4 + v18) = v20;
    uint64_t v21 = (void *)((char *)v4 + v19);
    uint64_t v22 = (uint64_t *)((char *)a2 + v19);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[13];
    id v25 = *(void **)((char *)a2 + v24);
    *(void *)((char *)v4 + v24) = v25;
    id v26 = v20;
    swift_bridgeObjectRetain();
    id v27 = v25;
  }
  return v4;
}

void sub_1003B2218(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[8];
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + a2[13]);
}

uint64_t sub_1003B230C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v9 = a3[8];
  __dst = (void *)(a1 + v9);
  uint64_t v10 = (const void *)(a2 + v9);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_1000172F8(&qword_10065C3C0);
    memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v15 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v16 = a3[11];
  uint64_t v17 = a3[12];
  uint64_t v18 = *(void **)(a2 + v16);
  *(void *)(a1 + v16) = v18;
  uint64_t v19 = (void *)(a1 + v17);
  uint64_t v20 = (void *)(a2 + v17);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = a3[13];
  uint64_t v23 = *(void **)(a2 + v22);
  *(void *)(a1 + v22) = v23;
  id v24 = v18;
  swift_bridgeObjectRetain();
  id v25 = v23;
  return a1;
}

uint64_t sub_1003B24BC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = a3[8];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v15 = a3[11];
  uint64_t v16 = *(void **)(a1 + v15);
  uint64_t v17 = *(void **)(a2 + v15);
  *(void *)(a1 + v15) = v17;
  id v18 = v17;

  uint64_t v19 = a3[12];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[13];
  uint64_t v23 = *(void **)(a2 + v22);
  id v24 = *(void **)(a1 + v22);
  *(void *)(a1 + v22) = v23;
  id v25 = v23;

  return a1;
}

uint64_t sub_1003B2700(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1003B2868(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v8 = a3[8];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  uint64_t v18 = a3[11];
  uint64_t v19 = *(void **)(a1 + v18);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);

  uint64_t v20 = a3[12];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[13];
  id v26 = *(void **)(a1 + v25);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);

  return a1;
}

uint64_t sub_1003B2A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003B2A84);
}

uint64_t sub_1003B2A84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000172F8(&qword_10065C3C0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1003B2B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003B2B4C);
}

uint64_t sub_1003B2B4C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000172F8(&qword_10065C3C0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1003B2BF8()
{
  sub_10026B458();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_1003B2CD8()
{
  unint64_t result = qword_100661C00;
  if (!qword_100661C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100661C00);
  }
  return result;
}

uint64_t sub_1003B2D3C(uint64_t a1, uint64_t a2)
{
  v3[115] = v2;
  v3[114] = a2;
  v3[113] = a1;
  v3[116] = type metadata accessor for AppStoreItem(0);
  v3[117] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v3[118] = v4;
  v3[119] = *(void *)(v4 - 8);
  v3[120] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for CellularIdentity();
  v3[121] = v5;
  v3[122] = *(void *)(v5 - 8);
  v3[123] = swift_task_alloc();
  v3[124] = type metadata accessor for EvaluatorDownload();
  v3[125] = swift_task_alloc();
  sub_1000172F8(&qword_100661C18);
  v3[126] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for NetworkPath();
  v3[127] = v6;
  v3[128] = *(void *)(v6 - 8);
  v3[129] = swift_task_alloc();
  sub_1000172F8(&qword_10065C3C0);
  v3[130] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for AppInstallRequestType();
  v3[131] = v7;
  v3[132] = *(void *)(v7 - 8);
  v3[133] = swift_task_alloc();
  v3[134] = swift_task_alloc();
  v3[135] = type metadata accessor for CreateCoordinatorTask();
  v3[136] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  v3[137] = v8;
  v3[138] = *(void *)(v8 - 8);
  v3[139] = swift_task_alloc();
  v3[140] = swift_task_alloc();
  v3[141] = swift_task_alloc();
  return _swift_task_switch(sub_1003B30BC, 0, 0);
}

uint64_t sub_1003B30BC()
{
  unsigned int v78 = (const void *)(v0 + 376);
  id v79 = (void *)(v0 + 16);
  static Logger.install.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    int v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Starting preflight", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = *(void *)(v0 + 1128);
  uint64_t v5 = *(void *)(v0 + 1104);
  uint64_t v6 = *(void *)(v0 + 1096);
  uint64_t v7 = *(void *)(v0 + 1072);
  uint64_t v8 = *(void *)(v0 + 1056);
  uint64_t v9 = *(void *)(v0 + 1048);
  uint64_t v10 = *(void *)(v0 + 928);
  uint64_t v11 = *(void *)(v0 + 920);

  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  *(void *)(v0 + 1136) = v12;
  *(void *)(v0 + 1144) = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v12(v4, v6);
  uint64_t v13 = type metadata accessor for AppStorePreflightTask();
  *(void *)(v0 + 1152) = v13;
  uint64_t v14 = *(int *)(v13 + 20);
  *(_DWORD *)(v0 + 1240) = v14;
  uint64_t v15 = v11 + v14;
  uint64_t v16 = *(int *)(v10 + 24);
  *(_DWORD *)(v0 + 1244) = v16;
  uint64_t v17 = v15 + v16;
  uint64_t v18 = *(void *)(v15 + v16 + 16);
  uint64_t v19 = *(void *)(v15 + v16 + 24);
  uint64_t v20 = *(void *)(v15 + v16 + 32);
  uint64_t v80 = *(void *)(v15 + v16 + 40);
  uint64_t v21 = *(int *)(v13 + 24);
  *(_DWORD *)(v0 + 1248) = v21;
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  *(void *)(v0 + 1160) = v22;
  *(void *)(v0 + 1168) = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v22(v7, v11 + v21, v9);
  int v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88))(v7, v9);
  uint64_t v77 = v18;
  uint64_t v76 = v19;
  if (v23 == enum case for AppInstallRequestType.update(_:))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v74 = 1;
  }
  else if (v23 == enum case for AppInstallRequestType.promotion(_:))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v74 = 3;
  }
  else if (v23 == enum case for AppInstallRequestType.restore(_:))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v74 = 2;
  }
  else
  {
    uint64_t v24 = *(void *)(v0 + 1072);
    uint64_t v25 = *(void *)(v0 + 1048);
    id v26 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 1056) + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(v24, v25);
    char v74 = 0;
  }
  uint64_t v27 = *(void *)(v0 + 1088);
  uint64_t v28 = *(int **)(v0 + 1080);
  uint64_t v29 = *(void *)(v0 + 1040);
  uint64_t v75 = v29;
  uint64_t v30 = v15 + *(int *)(*(void *)(v0 + 928) + 20);
  uint64_t v31 = type metadata accessor for URL();
  *(void *)(v0 + 1176) = v31;
  uint64_t v32 = *(void *)(v31 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v29, v30, v31);
  v33 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56);
  *(void *)(v0 + 1184) = v33;
  *(void *)(v0 + 1192) = (v32 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v33(v29, 0, 1, v31);
  char v34 = *(unsigned char *)(v17 + 205);
  sub_1003B4730();
  long long v35 = *(_OWORD *)(v17 + 16);
  long long v36 = *(_OWORD *)(v17 + 32);
  long long v37 = *(_OWORD *)(v17 + 48);
  uint64_t v38 = *(void *)(v17 + 64);
  uint64_t v39 = *(void *)(v17 + 72);
  uint64_t v40 = *(void *)(v17 + 96);
  char v41 = *(unsigned char *)(v17 + 104);
  long long v42 = *(_OWORD *)(v17 + 112);
  uint64_t v43 = *(void *)(v17 + 128);
  __int16 v44 = *(_WORD *)(v17 + 136);
  uint64_t v45 = *(void *)(v17 + 192);
  char v46 = *(unsigned char *)(v17 + 200);
  __int16 v47 = *(_WORD *)(v17 + 201);
  char v48 = *(unsigned char *)(v17 + 203);
  char v49 = *(unsigned char *)(v17 + 204);
  char v50 = *(unsigned char *)(v17 + 206);
  uint64_t v51 = *(void *)(v17 + 240);
  long long v52 = *(_OWORD *)(v17 + 280);
  long long v53 = *(_OWORD *)(v17 + 296);
  uint64_t v54 = *(void *)(v17 + 312);
  char v55 = *(unsigned char *)(v17 + 320);
  long long v56 = *(_OWORD *)(v17 + 80);
  long long v57 = *(_OWORD *)(v17 + 144);
  long long v58 = *(_OWORD *)(v17 + 160);
  long long v59 = *(_OWORD *)(v17 + 176);
  long long v61 = *(_OWORD *)(v17 + 208);
  long long v60 = *(_OWORD *)(v17 + 224);
  long long v62 = *(_OWORD *)(v17 + 248);
  long long v63 = *(_OWORD *)(v17 + 264);
  long long v64 = *(_OWORD *)(v17 + 328);
  long long v65 = *(_OWORD *)(v17 + 344);
  *(_OWORD *)(v0 + 376) = *(_OWORD *)v17;
  *(_OWORD *)(v0 + 392) = v35;
  *(_OWORD *)(v0 + 408) = v36;
  *(_OWORD *)(v0 + 424) = v37;
  *(void *)(v0 + 440) = v38;
  *(void *)(v0 + 448) = v39;
  *(_OWORD *)(v0 + 456) = v56;
  *(void *)(v0 + 472) = v40;
  *(unsigned char *)(v0 + 480) = v41;
  *(_OWORD *)(v0 + 488) = v42;
  *(void *)(v0 + 504) = v43;
  *(_WORD *)(v0 + 512) = v44;
  *(_OWORD *)(v0 + 520) = v57;
  *(_OWORD *)(v0 + 536) = v58;
  *(_OWORD *)(v0 + 552) = v59;
  *(void *)(v0 + 568) = v45;
  *(unsigned char *)(v0 + 576) = v46;
  *(_WORD *)(v0 + 577) = v47;
  *(unsigned char *)(v0 + 579) = v48;
  *(unsigned char *)(v0 + 580) = v49;
  *(unsigned char *)(v0 + 581) = v34;
  *(unsigned char *)(v0 + 582) = v50;
  *(_OWORD *)(v0 + 584) = v61;
  *(_OWORD *)(v0 + 600) = v60;
  *(void *)(v0 + 616) = v51;
  *(_OWORD *)(v0 + 624) = v62;
  *(_OWORD *)(v0 + 640) = v63;
  *(_OWORD *)(v0 + 656) = v52;
  *(_OWORD *)(v0 + 672) = v53;
  *(void *)(v0 + 688) = v54;
  *(unsigned char *)(v0 + 696) = v55;
  *(_OWORD *)(v0 + 704) = v64;
  *(_OWORD *)(v0 + 720) = v65;
  memcpy(v79, v78, 0x168uLL);
  sub_1001C65EC((uint64_t)v78);
  id v66 = sub_10050BEA8((uint64_t)v79);
  [v66 copy];
  _bridgeAnyObjectToAny(_:)();

  swift_unknownObjectRelease();
  swift_dynamicCast();
  uint64_t v67 = *(void *)(v0 + 880);
  uint64_t v68 = sub_1005163F0();
  *(void *)uint64_t v27 = v77;
  *(void *)(v27 + 8) = v76;
  *(void *)(v27 + 16) = v20;
  *(void *)(v27 + 24) = v80;
  *(unsigned char *)(v27 + 32) = v74;
  *(void *)(v27 + 40) = 3;
  sub_10026400C(v75, v27 + v28[8]);
  *(unsigned char *)(v27 + v28[9]) = v34;
  *(unsigned char *)(v27 + v28[10]) = 2;
  *(void *)(v27 + v28[11]) = v67;
  uint64_t v69 = (void *)(v27 + v28[12]);
  void *v69 = 0;
  v69[1] = 0;
  *(void *)(v27 + v28[13]) = v68;
  sub_1003AF398();
  *(void *)(v0 + 1200) = v70;
  sub_1003B4770();
  *(void *)(v0 + 1208) = 0;
  uint64_t v71 = (void *)swift_task_alloc();
  *(void *)(v0 + 1216) = v71;
  void *v71 = v0;
  v71[1] = sub_1003B3898;
  uint64_t v72 = *(void *)(v0 + 1008);
  return sub_100174C50(v72);
}

uint64_t sub_1003B3898()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1003B39C0, 0, 0);
}

uint64_t sub_1003B39C0()
{
  uint64_t v1 = *(void *)(v0 + 1008);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 1024) + 48))(v1, 1, *(void *)(v0 + 1016)) == 1)
  {
    sub_10001729C(v1, &qword_100661C18);
    static Logger.install.getter();
    os_log_type_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 138412290;
      uint64_t v6 = sub_1005163F0();
      *(void *)(v0 + 896) = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v5 = v6;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%@] Network disconnected during preflight, using implicit defaults", v4, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v0 + 1136);
    uint64_t v8 = *(void *)(v0 + 1120);
    uint64_t v9 = *(void *)(v0 + 1096);

    v7(v8, v9);
    static Logger.install.getter();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Preflight succeeded", v12, 2u);
      swift_slowDealloc();
    }
    long long v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1160);
    uint64_t v13 = *(int *)(v0 + 1248);
    uint64_t v14 = *(int *)(v0 + 1240);
    long long v56 = *(void (**)(uint64_t, uint64_t))(v0 + 1136);
    uint64_t v15 = *(void *)(v0 + 1112);
    uint64_t v16 = *(void *)(v0 + 1096);
    uint64_t v57 = *(void *)(v0 + 1064);
    uint64_t v58 = *(void *)(v0 + 1048);
    uint64_t v17 = *(void *)(v0 + 960);
    uint64_t v18 = *(void *)(v0 + 952);
    uint64_t v55 = *(void *)(v0 + 944);
    uint64_t v59 = *(void *)(v0 + 936);
    uint64_t v19 = *(void *)(v0 + 920);
    uint64_t v61 = *(void *)(v0 + 1152);
    uint64_t v62 = *(void *)(v0 + 904);

    v56(v15, v16);
    uint64_t v20 = v17;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v17, v19, v55);
    v60(v57, v19 + v13, v58);
    sub_1003B5A8C(v19 + v14, v59, type metadata accessor for AppStoreItem);
    uint64_t v21 = (uint64_t *)(v19 + *(int *)(v61 + 32));
    uint64_t v22 = *v21;
    unint64_t v23 = v21[1];
    uint64_t v24 = (_OWORD *)(v19 + *(int *)(v61 + 28));
    long long v26 = v24[4];
    long long v25 = v24[5];
    long long v27 = v24[3];
    *(_OWORD *)(v0 + 831) = *(_OWORD *)((char *)v24 + 95);
    *(_OWORD *)(v0 + 800) = v26;
    *(_OWORD *)(v0 + 816) = v25;
    *(_OWORD *)(v0 + 784) = v27;
    long long v29 = v24[1];
    long long v28 = v24[2];
    *(_OWORD *)(v0 + 736) = *v24;
    *(_OWORD *)(v0 + 752) = v29;
    *(_OWORD *)(v0 + 768) = v28;
    sub_1001C5E20(v22, v23);
    sub_10018AB28(v0 + 736);
    uint64_t v30 = (void *)sub_1005163F0();
    sub_1003B4EA0(v20, v57, v59, v22, v23, 0, v0 + 736, v30, v62);
    uint64_t v31 = *(void **)(v0 + 1200);
    sub_1003B5AF4(*(void *)(v0 + 1088), (uint64_t (*)(void))type metadata accessor for CreateCoordinatorTask);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
    return v32();
  }
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 1184);
  uint64_t v34 = *(void *)(v0 + 1176);
  uint64_t v35 = *(int *)(v0 + 1244);
  uint64_t v36 = *(void *)(v0 + 1000);
  uint64_t v37 = *(void *)(v0 + 928);
  uint64_t v38 = *(void *)(v0 + 920) + *(int *)(v0 + 1240);
  sub_1003B59D8(v1, *(void *)(v0 + 1032));
  v33(v36, 1, 1, v34);
  uint64_t v39 = *(void *)(v38 + *(int *)(v37 + 28));
  if (!*(void *)(v39 + 16))
  {
    __break(1u);
LABEL_16:
    __break(1u);
  }
  uint64_t v41 = *(void *)(v38 + v35 + 216);
  uint64_t v40 = *(void *)(v38 + v35 + 224);
  uint64_t v42 = type metadata accessor for AppStorePackage(0);
  uint64_t v43 = *(void *)(v39
                  + ((*(unsigned __int8 *)(*(void *)(v42 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v42 - 8) + 80))
                  + *(int *)(v42 + 20));
  if (v43 < 0) {
    goto LABEL_16;
  }
  uint64_t v44 = *(void *)(v0 + 1000);
  uint64_t v45 = *(int **)(v0 + 992);
  swift_bridgeObjectRetain();
  uint64_t v46 = sub_1005163F0();
  __int16 v47 = (void *)(v44 + v45[5]);
  *__int16 v47 = v41;
  v47[1] = v40;
  *(void *)(v44 + v45[6]) = v43;
  *(_DWORD *)(v44 + v45[7]) = 2;
  *(unsigned char *)(v44 + v45[9]) = 0;
  *(void *)(v44 + v45[8]) = v46;
  static CellularIdentity.current()();
  uint64_t v48 = dword_100665118;
  char v49 = (void *)swift_task_alloc();
  *(void *)(v0 + 1224) = v49;
  *char v49 = v0;
  v49[1] = sub_1003B40E4;
  uint64_t v50 = *(void *)(v0 + 1032);
  uint64_t v51 = *(void *)(v0 + 1000);
  uint64_t v52 = *(void *)(v0 + 984);
  uint64_t v53 = *(void *)(v0 + 912);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, char, uint64_t))((char *)&dword_100665118 + v48))(v51, v50, v52, 0, v53);
}

uint64_t sub_1003B40E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 984);
  uint64_t v3 = *(void *)(*(void *)v1 + 976);
  uint64_t v4 = *(void *)(*(void *)v1 + 968);
  *(void *)(*(void *)v1 + 1232) = a1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_1003B4270, 0, 0);
}

uint64_t sub_1003B4270()
{
  int v34 = *(_DWORD *)(v0 + 1232);
  uint64_t v1 = *(void *)(v0 + 1032);
  sub_1003B5AF4(*(void *)(v0 + 1000), (uint64_t (*)(void))type metadata accessor for EvaluatorDownload);
  sub_1003B5AF4(v1, (uint64_t (*)(void))type metadata accessor for NetworkPath);
  static Logger.install.getter();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Preflight succeeded", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1160);
  uint64_t v5 = *(int *)(v0 + 1248);
  uint64_t v6 = *(int *)(v0 + 1240);
  long long v27 = *(void (**)(uint64_t, uint64_t))(v0 + 1136);
  uint64_t v7 = *(void *)(v0 + 1112);
  uint64_t v8 = *(void *)(v0 + 1096);
  uint64_t v28 = *(void *)(v0 + 1064);
  uint64_t v29 = *(void *)(v0 + 1048);
  uint64_t v9 = *(void *)(v0 + 960);
  uint64_t v10 = *(void *)(v0 + 952);
  uint64_t v26 = *(void *)(v0 + 944);
  uint64_t v30 = *(void *)(v0 + 936);
  uint64_t v11 = *(void *)(v0 + 920);
  uint64_t v32 = *(void *)(v0 + 1152);
  uint64_t v33 = *(void *)(v0 + 904);

  v27(v7, v8);
  uint64_t v12 = v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v11, v26);
  v31(v28, v11 + v5, v29);
  sub_1003B5A8C(v11 + v6, v30, type metadata accessor for AppStoreItem);
  uint64_t v13 = *(int *)(v32 + 28);
  uint64_t v14 = (uint64_t *)(v11 + *(int *)(v32 + 32));
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  long long v18 = *(_OWORD *)(v11 + v13 + 64);
  long long v17 = *(_OWORD *)(v11 + v13 + 80);
  long long v19 = *(_OWORD *)(v11 + v13 + 48);
  *(_OWORD *)(v0 + 831) = *(_OWORD *)(v11 + v13 + 95);
  *(_OWORD *)(v0 + 800) = v18;
  *(_OWORD *)(v0 + 816) = v17;
  *(_OWORD *)(v0 + 784) = v19;
  long long v21 = *(_OWORD *)(v11 + v13 + 16);
  long long v20 = *(_OWORD *)(v11 + v13 + 32);
  *(_OWORD *)(v0 + 736) = *(_OWORD *)(v11 + v13);
  *(_OWORD *)(v0 + 752) = v21;
  *(_OWORD *)(v0 + 768) = v20;
  sub_1001C5E20(v15, v16);
  sub_10018AB28(v0 + 736);
  uint64_t v22 = (void *)sub_1005163F0();
  sub_1003B4EA0(v12, v28, v30, v15, v16, v34 & 0x1010101, v0 + 736, v22, v33);
  unint64_t v23 = *(void **)(v0 + 1200);
  sub_1003B5AF4(*(void *)(v0 + 1088), (uint64_t (*)(void))type metadata accessor for CreateCoordinatorTask);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t type metadata accessor for AppStorePreflightTask()
{
  uint64_t result = qword_100661C88;
  if (!qword_100661C88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1003B4730()
{
  unint64_t result = qword_10065DC30;
  if (!qword_10065DC30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10065DC30);
  }
  return result;
}

unint64_t sub_1003B4770()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v49 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v49 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v49 - v12;
  if (sub_100431C0C())
  {
    static Logger.install.getter();
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      unint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "App installation is restricted", v16, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    sub_1003B5B54();
    swift_allocError();
    *(_OWORD *)uint64_t v17 = 0u;
    *(_OWORD *)(v17 + 16) = 0u;
    *(void *)(v17 + 32) = 0;
LABEL_14:
    char v29 = 3;
LABEL_15:
    *(unsigned char *)(v17 + 40) = v29;
    return swift_willThrow();
  }
  uint64_t v50 = v2;
  uint64_t v51 = v1;
  unint64_t result = (unint64_t)[self sharedConnection];
  if (!result)
  {
LABEL_33:
    __break(1u);
    return result;
  }
  long long v19 = (void *)result;
  id v20 = [(id)result effectiveValueForSetting:MCFeatureMaximumAppsRating];

  if (!v20)
  {
    uint64_t v22 = type metadata accessor for AppStorePreflightTask();
    uint64_t v25 = v0 + *(int *)(v22 + 20);
    uint64_t v24 = type metadata accessor for AppStoreItem(0);
    if (*(uint64_t *)(v25 + *(int *)(v24 + 24) + 272) <= 1000) {
      goto LABEL_18;
    }
    uint64_t v21 = 1000;
LABEL_11:
    static Logger.install.getter();
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 134217984;
      unint64_t v53 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Exceedes content rating: %ld", v28, 0xCu);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v51);
    sub_1003B5B54();
    swift_allocError();
    *(void *)uint64_t v17 = 1;
    *(_OWORD *)(v17 + 8) = 0u;
    *(_OWORD *)(v17 + 24) = 0u;
    goto LABEL_14;
  }
  uint64_t v21 = (uint64_t)[v20 integerValue];

  uint64_t v22 = type metadata accessor for AppStorePreflightTask();
  uint64_t v23 = v0 + *(int *)(v22 + 20);
  uint64_t v24 = type metadata accessor for AppStoreItem(0);
  if (v21 < *(void *)(v23 + *(int *)(v24 + 24) + 272)) {
    goto LABEL_11;
  }
LABEL_18:
  uint64_t v30 = v24;
  type metadata accessor for AppStorePreflightTask();
  uint64_t v31 = v0 + *(int *)(v22 + 20);
  type metadata accessor for AppStoreItem(0);
  unint64_t result = *(void *)(v31 + *(int *)(v30 + 24) + 312);
  if (result)
  {
    uint64_t v32 = sub_1004329B8(result);
    if (v32[2])
    {
      static Logger.install.getter();
      swift_bridgeObjectRetain_n();
      uint64_t v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        unint64_t v53 = swift_slowAlloc();
        *(_DWORD *)uint64_t v35 = 136315138;
        char v49 = v35 + 4;
        swift_bridgeObjectRetain();
        uint64_t v36 = Array.description.getter();
        unint64_t v38 = v37;
        swift_bridgeObjectRelease();
        uint64_t v52 = sub_1000143F4(v36, v38, (uint64_t *)&v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "Mismatched capabilities: %s", v35, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v50 + 8))(v13, v51);
      sub_1003B5B54();
      swift_allocError();
      *(void *)uint64_t v48 = v32;
      *(_OWORD *)(v48 + 8) = 0u;
      *(_OWORD *)(v48 + 24) = 0u;
      *(unsigned char *)(v48 + 40) = 0;
      return swift_willThrow();
    }
    unint64_t result = swift_bridgeObjectRelease();
  }
  uint64_t v39 = *(void *)(v31 + *(int *)(v30 + 28));
  if (!*(void *)(v39 + 16))
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v40 = type metadata accessor for AppStorePackage(0);
  uint64_t v41 = *(void *)(v40 - 8);
  unint64_t result = v40 - 8;
  unint64_t v42 = v39
      + *(int *)(result + 32)
      + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  if ((*(unsigned char *)(v42 + 8) & 1) == 0)
  {
    unint64_t v43 = *(void *)v42;
    unint64_t result = sub_100431EC0();
    uint64_t v44 = result;
    if ((result & 0x8000000000000000) != 0 || result < v43)
    {
      static Logger.install.getter();
      uint64_t v45 = Logger.logObject.getter();
      os_log_type_t v46 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = swift_slowAlloc();
        *(_DWORD *)uint64_t v47 = 134349312;
        unint64_t v53 = v43;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v47 + 12) = 2050;
        unint64_t v53 = v44;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "Insufficient space available. Need %{public}llu, available: %{public}ld", (uint8_t *)v47, 0x16u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v51);
      sub_1003B5B54();
      swift_allocError();
      *(void *)uint64_t v17 = v43;
      *(_OWORD *)(v17 + 8) = 0u;
      *(_OWORD *)(v17 + 24) = 0u;
      char v29 = 2;
      goto LABEL_15;
    }
  }
  return result;
}

uint64_t sub_1003B4EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, void *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v179 = a4;
  v173 = a8;
  int v178 = a6;
  unint64_t v180 = a5;
  uint64_t v190 = a2;
  uint64_t v191 = a3;
  uint64_t v12 = type metadata accessor for Platform();
  uint64_t v140 = *(void *)(v12 - 8);
  uint64_t v141 = v12;
  __chkstk_darwin(v12);
  v139 = (char *)&v137 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000172F8(&qword_10065C3C0);
  __chkstk_darwin(v14 - 8);
  uint64_t v187 = (uint64_t)&v137 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v188 = (int *)((char *)&v137 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = type metadata accessor for AppPackageTemplate();
  uint64_t v20 = *(void *)(v19 - 8);
  v169 = (int *)v19;
  uint64_t v170 = v20;
  __chkstk_darwin(v19);
  uint64_t v186 = (uint64_t)&v137 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018AB94(a7);
  uint64_t v22 = (int *)type metadata accessor for AppInstallTemplate();
  uint64_t v23 = a9 + v22[7];
  uint64_t v189 = v17;
  uint64_t v24 = *(void (**)(void))(v17 + 56);
  uint64_t v171 = v23;
  v193 = v24;
  uint64_t v194 = v17 + 56;
  v24();
  uint64_t v25 = (void *)(a9 + v22[10]);
  *uint64_t v25 = 0;
  v25[1] = 0;
  uint64_t v26 = (void *)(a9 + v22[14]);
  *uint64_t v26 = 0;
  v26[1] = 0;
  uint64_t v27 = a9 + v22[16];
  uint64_t v28 = type metadata accessor for UUID();
  uint64_t v29 = *(void *)(v28 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v27, 1, 1, v28);
  *(unsigned char *)(a9 + v22[17]) = 2;
  uint64_t v30 = (uint64_t *)(a9 + v22[19]);
  long long v192 = xmmword_1005A5CE0;
  *(_OWORD *)uint64_t v30 = xmmword_1005A5CE0;
  uint64_t v172 = v22[20];
  *(void *)(a9 + v172) = 0;
  uint64_t v31 = a9 + v22[21];
  *(void *)uint64_t v31 = 0;
  *(unsigned char *)(v31 + 8) = 1;
  uint64_t v176 = v22[22];
  v177 = v30;
  *(_DWORD *)(a9 + v176) = 2;
  uint64_t v138 = a9 + v22[30];
  static Platform.current.getter();
  *(unsigned char *)(a9 + v22[31]) = 0;
  uint64_t v32 = (void *)(a9 + v22[32]);
  *uint64_t v32 = 0;
  v32[1] = 0;
  *(_OWORD *)(a9 + v22[33]) = v192;
  uint64_t v33 = (void *)(a9 + v22[34]);
  void *v33 = 0;
  v33[1] = 0;
  uint64_t v34 = a9 + v22[35];
  *(void *)uint64_t v34 = 0;
  *(void *)(v34 + 8) = 0;
  *(unsigned char *)(v34 + 16) = -1;
  uint64_t v35 = (void *)(a9 + v22[36]);
  void *v35 = 0;
  v35[1] = 0;
  *(unsigned char *)(a9 + v22[37]) = 0;
  uint64_t v174 = v29;
  uint64_t v175 = v28;
  uint64_t v36 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(a9, a1, v28);
  uint64_t v37 = a9 + v22[13];
  uint64_t v38 = type metadata accessor for AppInstallRequestType();
  uint64_t v39 = *(void *)(v38 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v37, v190, v38);
  *(void *)&long long v192 = type metadata accessor for AppStoreItem(0);
  uint64_t v40 = *(void *)(v191 + *(int *)(v192 + 28));
  if (!*(void *)(v40 + 16))
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v166 = v39;
  uint64_t v167 = v38;
  uint64_t v168 = v36;
  uint64_t v41 = (int *)type metadata accessor for AppStorePackage(0);
  uint64_t v42 = v40
      + ((*(unsigned __int8 *)(*((void *)v41 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v41 - 1) + 80));
  v164 = *(void (**)(int *, uint64_t, uint64_t))(v189 + 16);
  uint64_t v165 = v189 + 16;
  v164(v188, v42, v16);
  uint64_t v185 = v40;
  if (!*(void *)(v40 + 16))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v43 = v16;
  uint64_t v44 = *(void *)(v42 + v41[5]);
  uint64_t v45 = (uint64_t *)(v42 + v41[6]);
  uint64_t v162 = *v45;
  uint64_t v163 = v44;
  int v161 = *((unsigned __int8 *)v45 + 8);
  os_log_type_t v46 = (uint64_t *)(v42 + v41[12]);
  uint64_t v47 = v46[1];
  uint64_t v181 = v43;
  if (v47)
  {
    uint64_t v48 = v46[5];
    uint64_t v49 = v46[6];
    uint64_t v50 = v46[3];
    uint64_t v183 = v46[4];
    uint64_t v184 = v48;
    uint64_t v182 = v50;
    uint64_t v159 = v46[2];
    uint64_t v196 = *v46;
    uint64_t v51 = v196;
    uint64_t v197 = v47;
    uint64_t v198 = v159;
    uint64_t v199 = v50;
    uint64_t v200 = v183;
    uint64_t v201 = v48;
    uint64_t v202 = v49;
    swift_bridgeObjectRetain();
    uint64_t v52 = swift_bridgeObjectRetain();
    uint64_t v160 = sub_10018A9D8(v52, v53, v54, v55, v56, v57, v58);
    uint64_t v60 = v59;
    sub_10018B054(v51, v47);
    if (*(void *)(v185 + 16))
    {
      uint64_t v154 = v60;
      uint64_t v43 = v181;
      goto LABEL_7;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v154 = 0;
  uint64_t v160 = 0;
LABEL_7:
  uint64_t v61 = (uint64_t *)(v42 + v41[9]);
  uint64_t v62 = v61[1];
  uint64_t v155 = *v61;
  uint64_t v156 = v62;
  uint64_t v63 = v61[3];
  uint64_t v157 = v61[2];
  uint64_t v158 = v63;
  uint64_t v64 = v61[5];
  uint64_t v159 = v61[4];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v193)(v187, 1, 1, v43);
  if (!*(void *)(v185 + 16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v65 = v41[8];
  id v66 = (uint64_t *)(v42 + v41[7]);
  uint64_t v67 = *v66;
  unint64_t v68 = v66[1];
  uint64_t v149 = v64;
  unint64_t v150 = v68;
  uint64_t v182 = v66[2];
  uint64_t v183 = v67;
  uint64_t v69 = v66[4];
  uint64_t v152 = v66[3];
  uint64_t v153 = v69;
  uint64_t v70 = v66[5];
  uint64_t v72 = v66[6];
  uint64_t v71 = v66[7];
  uint64_t v184 = v70;
  uint64_t v185 = v72;
  uint64_t v151 = v71;
  unint64_t v148 = *(void *)(v42 + v65 + 8);
  if (v148 >> 60 == 15)
  {
LABEL_19:
    sub_100254E0C(v155, v156, v157);
    sub_1003B5A3C(v183, v150, v182, v152, v153);
    uint64_t result = sub_1001C5E34(v179, v180);
    __break(1u);
    return result;
  }
  uint64_t v73 = v43;
  int v145 = *(unsigned __int8 *)(v42 + v41[13]);
  uint64_t v74 = *(void *)(v42 + v65);
  uint64_t v75 = v22[24];
  v146 = (void *)(a9 + v22[23]);
  v147 = (void *)(a9 + v75);
  uint64_t v76 = v169;
  uint64_t v77 = v186;
  uint64_t v78 = v186 + v169[6];
  v142 = (uint64_t *)(v186 + v169[7]);
  id v79 = (uint64_t *)(v186 + v169[9]);
  uint64_t v80 = (void *)(v186 + v169[10]);
  uint64_t v143 = v186 + v169[11];
  uint64_t v144 = v74;
  v193();
  uint64_t v81 = v77 + v76[14];
  *(void *)uint64_t v81 = 0;
  *(void *)(v81 + 8) = 0;
  *(unsigned char *)(v81 + 16) = -1;
  v82 = (void *)(v77 + v76[15]);
  void *v82 = 0;
  v82[1] = 0;
  (*(void (**)(uint64_t, int *, uint64_t))(v189 + 32))(v77, v188, v73);
  *(void *)(v77 + v76[5]) = v163;
  *(void *)uint64_t v78 = v162;
  *(unsigned char *)(v78 + 8) = v161;
  uint64_t v83 = v159;
  uint64_t v84 = v142;
  uint64_t v86 = v154;
  uint64_t v85 = v155;
  uint64_t *v142 = v160;
  v84[1] = v86;
  *(unsigned char *)(v77 + v76[8]) = 0;
  uint64_t v87 = v156;
  uint64_t v88 = v157;
  uint64_t *v79 = v85;
  v79[1] = v87;
  uint64_t v89 = v158;
  v79[2] = v88;
  v79[3] = v89;
  uint64_t v90 = v149;
  v79[4] = v83;
  v79[5] = v90;
  void *v80 = 0;
  v80[1] = 0;
  v80[4] = 0;
  v80[5] = 0;
  v80[2] = 1;
  v80[3] = 0;
  sub_100254E0C(v85, v87, v88);
  v188 = v22;
  uint64_t v189 = a9;
  unint64_t v92 = v150;
  uint64_t v91 = v151;
  uint64_t v94 = v152;
  uint64_t v93 = v153;
  sub_1003B5A3C(v183, v150, v182, v152, v153);
  uint64_t v95 = v144;
  unint64_t v96 = v148;
  sub_10018B2A8(v144, v148);
  sub_10027ED88(v187, v143);
  *(unsigned char *)(v77 + v76[12]) = v145;
  uint64_t v97 = v77 + v76[13];
  *(void *)uint64_t v97 = v183;
  *(void *)(v97 + 8) = v92;
  *(void *)(v97 + 16) = v182;
  *(void *)(v97 + 24) = v94;
  uint64_t v98 = v184;
  *(void *)(v97 + 32) = v93;
  *(void *)(v97 + 40) = v98;
  *(void *)(v97 + 48) = v185;
  *(void *)(v97 + 56) = v91;
  os_log_type_t v100 = v188;
  uint64_t v99 = v189;
  *(void *)(v97 + 64) = v95;
  *(void *)(v97 + 72) = v96;
  *(_OWORD *)(v97 + 80) = 0u;
  *(_OWORD *)(v97 + 96) = 0u;
  uint64_t v101 = v191;
  uint64_t v102 = v191 + *(int *)(v192 + 24);
  uint64_t v103 = *(void *)(v102 + 16);
  uint64_t v187 = *(void *)(v102 + 24);
  uint64_t v104 = v187;
  v105 = (void *)(v99 + v100[8]);
  void *v105 = v103;
  v105[1] = v104;
  uint64_t v106 = *(void *)(v102 + 32);
  uint64_t v185 = *(void *)(v102 + 40);
  uint64_t v107 = v185;
  uint64_t v108 = (void *)(v99 + v100[9]);
  *uint64_t v108 = v106;
  v108[1] = v107;
  uint64_t v109 = *(void *)(v102 + 72);
  v110 = (void *)(v99 + v100[29]);
  void *v110 = *(void *)(v102 + 64);
  v110[1] = v109;
  v111 = (void *)(v99 + v100[15]);
  unint64_t v112 = v180;
  void *v111 = v179;
  v111[1] = v112;
  sub_1000172F8(&qword_10065E0A0);
  unint64_t v113 = (*(unsigned __int8 *)(v170 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80);
  uint64_t v114 = swift_allocObject();
  *(_OWORD *)(v114 + 16) = xmmword_1005A3EC0;
  uint64_t v115 = v114 + v113;
  uint64_t v116 = v101;
  sub_1003B5A8C(v77, v115, (uint64_t (*)(void))type metadata accessor for AppPackageTemplate);
  *(void *)(v99 + v100[18]) = v114;
  id v117 = v173;
  *(void *)(v99 + v100[5]) = v173;
  uint64_t v118 = v99 + v100[6];
  *(void *)uint64_t v118 = *(void *)(v102 + 272);
  *(unsigned char *)(v118 + 8) = 0;
  *(unsigned char *)(v99 + v100[27]) = *(unsigned char *)(v102 + 204);
  v119 = v146;
  void *v146 = *(void *)(v102 + 208);
  *((unsigned char *)v119 + 8) = 0;
  uint64_t v120 = v147;
  void *v147 = *(void *)(v102 + 96);
  *((unsigned char *)v120 + 8) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v121 = v117;
  uint64_t v122 = v171;
  sub_10001729C(v171, &qword_10065C3C0);
  uint64_t v123 = v181;
  v164((int *)v122, v116 + *(int *)(v192 + 20), v181);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v193)(v122, 0, 1, v123);
  int v124 = *(unsigned __int8 *)(v102 + 320);
  if (v124 != 2)
  {
    v125 = v139;
    if (v124) {
      static Platform.macOS.getter();
    }
    else {
      static Platform.iOS.getter();
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v140 + 40))(v138, v125, v141);
  }
  sub_1003B4730();
  memcpy(v195, (const void *)v102, sizeof(v195));
  sub_1001C65EC((uint64_t)v195);
  id v126 = sub_10050BEA8((uint64_t)v195);
  [v126 copy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();

  swift_dynamicCast();
  uint64_t v127 = v203;

  (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v190, v167);
  (*(void (**)(uint64_t, uint64_t))(v174 + 8))(v168, v175);
  sub_1003B5AF4(v186, (uint64_t (*)(void))type metadata accessor for AppPackageTemplate);
  uint64_t v128 = v172;

  *(void *)(v99 + v128) = v127;
  v129 = (uint64_t *)(v116 + *(int *)(v192 + 32));
  uint64_t v130 = *v129;
  unint64_t v131 = v129[1];
  v132 = v177;
  uint64_t v133 = *v177;
  unint64_t v134 = v177[1];
  sub_10018B2A8(*v129, v131);
  sub_10018AE44(v133, v134);
  uint64_t *v132 = v130;
  v132[1] = v131;
  uint64_t v135 = (void *)(v99 + v100[11]);
  *uint64_t v135 = 0;
  v135[1] = 0;
  *(unsigned char *)(v99 + v100[25]) = 1;
  *(unsigned char *)(v99 + v100[28]) = 1;
  *(_DWORD *)(v99 + v176) = v178 & 0x1010101;
  *(unsigned char *)(v99 + v100[26]) = 2;
  uint64_t result = sub_1003B5AF4(v116, type metadata accessor for AppStoreItem);
  *(unsigned char *)(v99 + v100[12]) = 0;
  return result;
}

uint64_t sub_1003B59D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NetworkPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003B5A3C(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 != 1)
  {
    sub_100012670(result, a2);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1003B5A8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003B5AF4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1003B5B54()
{
  unint64_t result = qword_100661C20;
  if (!qword_100661C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100661C20);
  }
  return result;
}

uint64_t sub_1003B5BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for AppStorePreflightTask.Error(uint64_t a1)
{
  return sub_1003B5BDC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
}

uint64_t sub_1003B5BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for AppStorePreflightTask.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 40);
  sub_1003B5BA8(*(void *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for AppStorePreflightTask.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 40);
  sub_1003B5BA8(*(void *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  unsigned __int8 v14 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_1003B5BDC(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for AppStorePreflightTask.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_1003B5BDC(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppStorePreflightTask.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AppStorePreflightTask.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1003B5DE8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 2u) {
    return *(unsigned __int8 *)(a1 + 40);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1003B5E00(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AppStorePreflightTask.Error()
{
  return &type metadata for AppStorePreflightTask.Error;
}

void *sub_1003B5E34(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v39 = *a2;
    *a1 = *a2;
    uint64_t v40 = (void *)(v39 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v67 = a3;
    uint64_t v8 = a3[5];
    uint64_t v65 = a1;
    uint64_t v9 = (void *)((char *)a1 + v8);
    unint64_t v68 = a2;
    long long v10 = (char *)a2 + v8;
    *uint64_t v9 = *(void *)((char *)a2 + v8);
    unsigned __int8 v11 = (int *)type metadata accessor for AppStoreItem(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = (char *)v9 + v12;
    unsigned __int8 v14 = &v10[v12];
    uint64_t v15 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = v11[6];
    uint64_t v17 = (char *)v9 + v16;
    uint64_t v18 = &v10[v16];
    uint64_t v19 = *((void *)v18 + 1);
    *(void *)uint64_t v17 = *(void *)v18;
    *((void *)v17 + 1) = v19;
    uint64_t v20 = *((void *)v18 + 3);
    *((void *)v17 + 2) = *((void *)v18 + 2);
    *((void *)v17 + 3) = v20;
    uint64_t v21 = *((void *)v18 + 5);
    *((void *)v17 + 4) = *((void *)v18 + 4);
    *((void *)v17 + 5) = v21;
    uint64_t v22 = *((void *)v18 + 7);
    *((void *)v17 + 6) = *((void *)v18 + 6);
    *((void *)v17 + 7) = v22;
    uint64_t v23 = *((void *)v18 + 9);
    *((void *)v17 + 8) = *((void *)v18 + 8);
    *((void *)v17 + 9) = v23;
    uint64_t v24 = *((void *)v18 + 11);
    *((void *)v17 + 10) = *((void *)v18 + 10);
    *((void *)v17 + 11) = v24;
    *((void *)v17 + 12) = *((void *)v18 + 12);
    v17[104] = v18[104];
    uint64_t v25 = *((void *)v18 + 15);
    *((void *)v17 + 14) = *((void *)v18 + 14);
    *((void *)v17 + 15) = v25;
    *((void *)v17 + 16) = *((void *)v18 + 16);
    v17[136] = v18[136];
    v17[137] = v18[137];
    uint64_t v26 = *((void *)v18 + 19);
    *((void *)v17 + 18) = *((void *)v18 + 18);
    *((void *)v17 + 19) = v26;
    uint64_t v27 = *((void *)v18 + 21);
    *((void *)v17 + 20) = *((void *)v18 + 20);
    *((void *)v17 + 21) = v27;
    uint64_t v28 = *((void *)v18 + 23);
    *((void *)v17 + 22) = *((void *)v18 + 22);
    *((void *)v17 + 23) = v28;
    v17[200] = v18[200];
    *((void *)v17 + 24) = *((void *)v18 + 24);
    *(_DWORD *)(v17 + 201) = *(_DWORD *)(v18 + 201);
    v17[205] = v18[205];
    v17[206] = v18[206];
    *((_OWORD *)v17 + 13) = *((_OWORD *)v18 + 13);
    uint64_t v29 = *((void *)v18 + 29);
    *((void *)v17 + 28) = *((void *)v18 + 28);
    *((void *)v17 + 29) = v29;
    uint64_t v30 = *((void *)v18 + 31);
    *((void *)v17 + 30) = *((void *)v18 + 30);
    *((void *)v17 + 31) = v30;
    uint64_t v31 = *((void *)v18 + 33);
    *((void *)v17 + 32) = *((void *)v18 + 32);
    *((void *)v17 + 33) = v31;
    *((_OWORD *)v17 + 17) = *((_OWORD *)v18 + 17);
    uint64_t v32 = *((void *)v18 + 37);
    *((void *)v17 + 36) = *((void *)v18 + 36);
    *((void *)v17 + 37) = v32;
    uint64_t v33 = *((void *)v18 + 39);
    *((void *)v17 + 38) = *((void *)v18 + 38);
    *((void *)v17 + 39) = v33;
    v17[320] = v18[320];
    uint64_t v34 = *((void *)v18 + 42);
    *((void *)v17 + 41) = *((void *)v18 + 41);
    *((void *)v17 + 42) = v34;
    uint64_t v35 = *((void *)v18 + 44);
    *((void *)v17 + 43) = *((void *)v18 + 43);
    *((void *)v17 + 44) = v35;
    *(void *)((char *)v9 + v11[7]) = *(void *)&v10[v11[7]];
    uint64_t v64 = v11;
    uint64_t v36 = v11[8];
    id v66 = v9;
    uint64_t v63 = (char *)v9 + v36;
    uint64_t v37 = (uint64_t *)&v10[v36];
    unint64_t v38 = *(void *)&v10[v36 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v38 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v63 = *(_OWORD *)v37;
    }
    else
    {
      uint64_t v41 = *v37;
      sub_100012670(*v37, v38);
      *(void *)uint64_t v63 = v41;
      *((void *)v63 + 1) = v38;
    }
    uint64_t v42 = v64[9];
    uint64_t v43 = (void *)((char *)v66 + v42);
    uint64_t v44 = &v10[v42];
    uint64_t v45 = *((void *)v44 + 1);
    *uint64_t v43 = *(void *)v44;
    v43[1] = v45;
    uint64_t v46 = v67[6];
    uint64_t v40 = v65;
    uint64_t v47 = (char *)v65 + v46;
    uint64_t v48 = (char *)v68 + v46;
    uint64_t v49 = type metadata accessor for AppInstallRequestType();
    uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16);
    swift_bridgeObjectRetain();
    v50(v47, v48, v49);
    uint64_t v51 = v67[7];
    uint64_t v52 = v67[8];
    uint64_t v53 = (char *)v65 + v51;
    uint64_t v54 = (char *)v68 + v51;
    uint64_t v55 = *((void *)v54 + 1);
    *(void *)uint64_t v53 = *(void *)v54;
    *((void *)v53 + 1) = v55;
    uint64_t v56 = *((void *)v54 + 3);
    *((void *)v53 + 2) = *((void *)v54 + 2);
    *((void *)v53 + 3) = v56;
    uint64_t v57 = *((void *)v54 + 5);
    *((void *)v53 + 4) = *((void *)v54 + 4);
    *((void *)v53 + 5) = v57;
    *((void *)v53 + 6) = *((void *)v54 + 6);
    *(_OWORD *)(v53 + 56) = *(_OWORD *)(v54 + 56);
    *(_OWORD *)(v53 + 72) = *(_OWORD *)(v54 + 72);
    uint64_t v58 = *((void *)v54 + 12);
    *((void *)v53 + 11) = *((void *)v54 + 11);
    *((void *)v53 + 12) = v58;
    *((_DWORD *)v53 + 26) = *((_DWORD *)v54 + 26);
    v53[108] = v54[108];
    *(_WORD *)(v53 + 109) = *(_WORD *)(v54 + 109);
    uint64_t v59 = (void *)((char *)v65 + v52);
    uint64_t v60 = (void *)((char *)v68 + v52);
    unint64_t v61 = *(void *)((char *)v68 + v52 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v61 >= 2)
    {
      void *v59 = *v60;
      v59[1] = v61;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
    }
  }
  return v40;
}

unint64_t sub_1003B62D0(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for AppStoreItem(0);
  uint64_t v7 = v5 + *(int *)(v6 + 20);
  uint64_t v8 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = (uint64_t *)(v5 + *(int *)(v6 + 32));
  unint64_t v10 = v9[1];
  if (v10 >> 60 != 15) {
    sub_100013510(*v9, v10);
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + a2[6];
  uint64_t v12 = type metadata accessor for AppInstallRequestType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t result = *(void *)(a1 + a2[8] + 8);
  if (result >= 2)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1003B6514(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v63 = a3;
  uint64_t v64 = a2;
  uint64_t v7 = a3[5];
  uint64_t v65 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  unint64_t v10 = (int *)type metadata accessor for AppStoreItem(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = v8 + v11;
  uint64_t v13 = v9 + v11;
  uint64_t v14 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = v8 + v15;
  uint64_t v17 = v9 + v15;
  uint64_t v18 = *(void *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  *(void *)(v16 + 8) = v18;
  uint64_t v19 = *(void *)(v17 + 24);
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  *(void *)(v16 + 24) = v19;
  uint64_t v20 = *(void *)(v17 + 40);
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  *(void *)(v16 + 40) = v20;
  uint64_t v21 = *(void *)(v17 + 56);
  *(void *)(v16 + 48) = *(void *)(v17 + 48);
  *(void *)(v16 + 56) = v21;
  uint64_t v22 = *(void *)(v17 + 72);
  *(void *)(v16 + 64) = *(void *)(v17 + 64);
  *(void *)(v16 + 72) = v22;
  uint64_t v23 = *(void *)(v17 + 88);
  *(void *)(v16 + 80) = *(void *)(v17 + 80);
  *(void *)(v16 + 88) = v23;
  *(void *)(v16 + 96) = *(void *)(v17 + 96);
  *(unsigned char *)(v16 + 104) = *(unsigned char *)(v17 + 104);
  uint64_t v24 = *(void *)(v17 + 120);
  *(void *)(v16 + 112) = *(void *)(v17 + 112);
  *(void *)(v16 + 120) = v24;
  *(void *)(v16 + 128) = *(void *)(v17 + 128);
  *(unsigned char *)(v16 + 136) = *(unsigned char *)(v17 + 136);
  *(unsigned char *)(v16 + 137) = *(unsigned char *)(v17 + 137);
  uint64_t v25 = *(void *)(v17 + 152);
  *(void *)(v16 + 144) = *(void *)(v17 + 144);
  *(void *)(v16 + 152) = v25;
  uint64_t v26 = *(void *)(v17 + 168);
  *(void *)(v16 + 160) = *(void *)(v17 + 160);
  *(void *)(v16 + 168) = v26;
  uint64_t v27 = *(void *)(v17 + 184);
  *(void *)(v16 + 176) = *(void *)(v17 + 176);
  *(void *)(v16 + 184) = v27;
  *(unsigned char *)(v16 + 200) = *(unsigned char *)(v17 + 200);
  *(void *)(v16 + 192) = *(void *)(v17 + 192);
  *(_DWORD *)(v16 + 201) = *(_DWORD *)(v17 + 201);
  *(unsigned char *)(v16 + 205) = *(unsigned char *)(v17 + 205);
  *(unsigned char *)(v16 + 206) = *(unsigned char *)(v17 + 206);
  *(_OWORD *)(v16 + 208) = *(_OWORD *)(v17 + 208);
  uint64_t v28 = *(void *)(v17 + 232);
  *(void *)(v16 + 224) = *(void *)(v17 + 224);
  *(void *)(v16 + 232) = v28;
  uint64_t v29 = *(void *)(v17 + 248);
  *(void *)(v16 + 240) = *(void *)(v17 + 240);
  *(void *)(v16 + 248) = v29;
  uint64_t v30 = *(void *)(v17 + 264);
  *(void *)(v16 + 256) = *(void *)(v17 + 256);
  *(void *)(v16 + 264) = v30;
  *(_OWORD *)(v16 + 272) = *(_OWORD *)(v17 + 272);
  uint64_t v31 = *(void *)(v17 + 296);
  *(void *)(v16 + 288) = *(void *)(v17 + 288);
  *(void *)(v16 + 296) = v31;
  uint64_t v32 = *(void *)(v17 + 312);
  *(void *)(v16 + 304) = *(void *)(v17 + 304);
  *(void *)(v16 + 312) = v32;
  *(unsigned char *)(v16 + 320) = *(unsigned char *)(v17 + 320);
  uint64_t v33 = *(void *)(v17 + 336);
  *(void *)(v16 + 328) = *(void *)(v17 + 328);
  *(void *)(v16 + 336) = v33;
  uint64_t v34 = *(void *)(v17 + 352);
  *(void *)(v16 + 344) = *(void *)(v17 + 344);
  *(void *)(v16 + 352) = v34;
  *(void *)(v8 + v10[7]) = *(void *)(v9 + v10[7]);
  unint64_t v61 = v10;
  uint64_t v62 = v8;
  uint64_t v35 = v10[8];
  uint64_t v36 = v8 + v35;
  uint64_t v60 = (uint64_t *)(v9 + v35);
  unint64_t v37 = *(void *)(v9 + v35 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v37 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v60;
  }
  else
  {
    uint64_t v38 = *v60;
    sub_100012670(*v60, v37);
    *(void *)uint64_t v36 = v38;
    *(void *)(v36 + 8) = v37;
  }
  uint64_t v39 = v61[9];
  uint64_t v40 = (void *)(v62 + v39);
  uint64_t v41 = (void *)(v9 + v39);
  uint64_t v42 = v41[1];
  *uint64_t v40 = *v41;
  v40[1] = v42;
  uint64_t v43 = v63[6];
  uint64_t v44 = v65 + v43;
  uint64_t v45 = v64 + v43;
  uint64_t v46 = type metadata accessor for AppInstallRequestType();
  uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16);
  swift_bridgeObjectRetain();
  v47(v44, v45, v46);
  uint64_t v48 = v63[7];
  uint64_t v49 = v63[8];
  uint64_t v50 = v65 + v48;
  uint64_t v51 = v64 + v48;
  uint64_t v52 = *(void *)(v51 + 8);
  *(void *)uint64_t v50 = *(void *)v51;
  *(void *)(v50 + 8) = v52;
  uint64_t v53 = *(void *)(v51 + 24);
  *(void *)(v50 + 16) = *(void *)(v51 + 16);
  *(void *)(v50 + 24) = v53;
  uint64_t v54 = *(void *)(v51 + 40);
  *(void *)(v50 + 32) = *(void *)(v51 + 32);
  *(void *)(v50 + 40) = v54;
  *(void *)(v50 + 48) = *(void *)(v51 + 48);
  *(_OWORD *)(v50 + 56) = *(_OWORD *)(v51 + 56);
  *(_OWORD *)(v50 + 72) = *(_OWORD *)(v51 + 72);
  uint64_t v55 = *(void *)(v51 + 96);
  *(void *)(v50 + 88) = *(void *)(v51 + 88);
  *(void *)(v50 + 96) = v55;
  *(_DWORD *)(v50 + 104) = *(_DWORD *)(v51 + 104);
  *(unsigned char *)(v50 + 108) = *(unsigned char *)(v51 + 108);
  *(_WORD *)(v50 + 109) = *(_WORD *)(v51 + 109);
  uint64_t v56 = (void *)(v65 + v49);
  uint64_t v57 = (void *)(v64 + v49);
  unint64_t v58 = *(void *)(v64 + v49 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v58 >= 2)
  {
    void *v56 = *v57;
    v56[1] = v58;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
  }
  return v65;
}

uint64_t sub_1003B6954(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  unint64_t v10 = (int *)type metadata accessor for AppStoreItem(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = v8 + v11;
  uint64_t v13 = v9 + v11;
  uint64_t v14 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = v8 + v15;
  uint64_t v17 = v9 + v15;
  *(void *)uint64_t v16 = *(void *)(v9 + v15);
  *(void *)(v16 + 8) = *(void *)(v9 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  *(void *)(v16 + 24) = *(void *)(v17 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  *(void *)(v16 + 40) = *(void *)(v17 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 48) = *(void *)(v17 + 48);
  *(void *)(v16 + 56) = *(void *)(v17 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 64) = *(void *)(v17 + 64);
  *(void *)(v16 + 72) = *(void *)(v17 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 80) = *(void *)(v17 + 80);
  *(void *)(v16 + 88) = *(void *)(v17 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 96) = *(void *)(v17 + 96);
  *(unsigned char *)(v16 + 104) = *(unsigned char *)(v17 + 104);
  *(void *)(v16 + 112) = *(void *)(v17 + 112);
  *(void *)(v16 + 120) = *(void *)(v17 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 128) = *(void *)(v17 + 128);
  *(unsigned char *)(v16 + 136) = *(unsigned char *)(v17 + 136);
  *(unsigned char *)(v16 + 137) = *(unsigned char *)(v17 + 137);
  *(void *)(v16 + 144) = *(void *)(v17 + 144);
  *(void *)(v16 + 152) = *(void *)(v17 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 160) = *(void *)(v17 + 160);
  *(void *)(v16 + 168) = *(void *)(v17 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 176) = *(void *)(v17 + 176);
  *(void *)(v16 + 184) = *(void *)(v17 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v17 + 192);
  *(unsigned char *)(v16 + 200) = *(unsigned char *)(v17 + 200);
  *(void *)(v16 + 192) = v18;
  *(unsigned char *)(v16 + 201) = *(unsigned char *)(v17 + 201);
  *(unsigned char *)(v16 + 202) = *(unsigned char *)(v17 + 202);
  *(unsigned char *)(v16 + 203) = *(unsigned char *)(v17 + 203);
  *(unsigned char *)(v16 + 204) = *(unsigned char *)(v17 + 204);
  *(unsigned char *)(v16 + 205) = *(unsigned char *)(v17 + 205);
  *(unsigned char *)(v16 + 206) = *(unsigned char *)(v17 + 206);
  *(void *)(v16 + 208) = *(void *)(v17 + 208);
  *(void *)(v16 + 216) = *(void *)(v17 + 216);
  *(void *)(v16 + 224) = *(void *)(v17 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 232) = *(void *)(v17 + 232);
  *(void *)(v16 + 240) = *(void *)(v17 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 248) = *(void *)(v17 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 256) = *(void *)(v17 + 256);
  *(void *)(v16 + 264) = *(void *)(v17 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 272) = *(void *)(v17 + 272);
  *(void *)(v16 + 280) = *(void *)(v17 + 280);
  *(void *)(v16 + 288) = *(void *)(v17 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 296) = *(void *)(v17 + 296);
  *(void *)(v16 + 304) = *(void *)(v17 + 304);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 312) = *(void *)(v17 + 312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 320) = *(unsigned char *)(v17 + 320);
  *(void *)(v16 + 328) = *(void *)(v17 + 328);
  *(void *)(v16 + 336) = *(void *)(v17 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 344) = *(void *)(v17 + 344);
  *(void *)(v16 + 352) = *(void *)(v17 + 352);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + v10[7]) = *(void *)(v9 + v10[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = v10[8];
  uint64_t v20 = (uint64_t *)(v8 + v19);
  uint64_t v21 = (uint64_t *)(v9 + v19);
  unint64_t v22 = *(void *)(v9 + v19 + 8);
  if (*(void *)(v8 + v19 + 8) >> 60 == 15)
  {
    if (v22 >> 60 != 15)
    {
      uint64_t v23 = *v21;
      sub_100012670(v23, v22);
      *uint64_t v20 = v23;
      v20[1] = v22;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v22 >> 60 == 15)
  {
    sub_1002DEBB4((uint64_t)v20);
LABEL_6:
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    goto LABEL_8;
  }
  uint64_t v24 = *v21;
  sub_100012670(v24, v22);
  uint64_t v25 = *v20;
  unint64_t v26 = v20[1];
  *uint64_t v20 = v24;
  v20[1] = v22;
  sub_100013510(v25, v26);
LABEL_8:
  uint64_t v27 = v10[9];
  uint64_t v28 = (void *)(v8 + v27);
  uint64_t v29 = (void *)(v9 + v27);
  void *v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[6];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = type metadata accessor for AppInstallRequestType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 24))(v31, v32, v33);
  uint64_t v34 = a3[7];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(void *)uint64_t v35 = *(void *)(a2 + v34);
  *(void *)(v35 + 8) = *(void *)(a2 + v34 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v35 + 16) = *(void *)(v36 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v35 + 24) = *(void *)(v36 + 24);
  *(void *)(v35 + 32) = *(void *)(v36 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v35 + 40) = *(void *)(v36 + 40);
  *(void *)(v35 + 48) = *(void *)(v36 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v35 + 56) = *(void *)(v36 + 56);
  *(void *)(v35 + 64) = *(void *)(v36 + 64);
  *(void *)(v35 + 72) = *(void *)(v36 + 72);
  *(void *)(v35 + 80) = *(void *)(v36 + 80);
  *(void *)(v35 + 88) = *(void *)(v36 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v35 + 96) = *(_DWORD *)(v36 + 96);
  *(_DWORD *)(v35 + 100) = *(_DWORD *)(v36 + 100);
  *(_DWORD *)(v35 + 104) = *(_DWORD *)(v36 + 104);
  *(unsigned char *)(v35 + 108) = *(unsigned char *)(v36 + 108);
  *(unsigned char *)(v35 + 109) = *(unsigned char *)(v36 + 109);
  *(unsigned char *)(v35 + 110) = *(unsigned char *)(v36 + 110);
  uint64_t v37 = a3[8];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  unint64_t v40 = *(void *)(a1 + v37 + 8);
  unint64_t v41 = v39[1];
  if (v40 >= 2)
  {
    if (v41 >= 2)
    {
      void *v38 = *v39;
      v38[1] = v39[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_10001729C((uint64_t)v38, &qword_100661C28);
    goto LABEL_13;
  }
  if (v41 < 2)
  {
LABEL_13:
    *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
    return a1;
  }
  void *v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1003B6F98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  unint64_t v10 = (int *)type metadata accessor for AppStoreItem(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = v8 + v11;
  uint64_t v13 = v9 + v11;
  uint64_t v14 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  memcpy((void *)(v8 + v10[6]), (const void *)(v9 + v10[6]), 0x168uLL);
  *(void *)(v8 + v10[7]) = *(void *)(v9 + v10[7]);
  *(_OWORD *)(v8 + v10[8]) = *(_OWORD *)(v9 + v10[8]);
  *(_OWORD *)(v8 + v10[9]) = *(_OWORD *)(v9 + v10[9]);
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for AppInstallRequestType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[7];
  uint64_t v20 = a3[8];
  uint64_t v21 = (_OWORD *)(a1 + v19);
  unint64_t v22 = (_OWORD *)(a2 + v19);
  long long v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  *(_OWORD *)((char *)v21 + 95) = *(_OWORD *)((char *)v22 + 95);
  long long v24 = v22[5];
  v21[4] = v22[4];
  v21[5] = v24;
  long long v25 = v22[3];
  v21[2] = v22[2];
  v21[3] = v25;
  *(_OWORD *)(a1 + v20) = *(_OWORD *)(a2 + v20);
  return a1;
}

uint64_t sub_1003B7134(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  unint64_t v10 = (int *)type metadata accessor for AppStoreItem(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = v8 + v11;
  uint64_t v13 = v9 + v11;
  uint64_t v14 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = v8 + v15;
  uint64_t v17 = v9 + v15;
  uint64_t v18 = *(void *)(v9 + v15 + 8);
  *(void *)uint64_t v16 = *(void *)(v9 + v15);
  *(void *)(v16 + 8) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v17 + 24);
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  *(void *)(v16 + 24) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v17 + 40);
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  *(void *)(v16 + 40) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v17 + 56);
  *(void *)(v16 + 48) = *(void *)(v17 + 48);
  *(void *)(v16 + 56) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v17 + 72);
  *(void *)(v16 + 64) = *(void *)(v17 + 64);
  *(void *)(v16 + 72) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v17 + 88);
  *(void *)(v16 + 80) = *(void *)(v17 + 80);
  *(void *)(v16 + 88) = v23;
  swift_bridgeObjectRelease();
  *(void *)(v16 + 96) = *(void *)(v17 + 96);
  *(unsigned char *)(v16 + 104) = *(unsigned char *)(v17 + 104);
  uint64_t v24 = *(void *)(v17 + 120);
  *(void *)(v16 + 112) = *(void *)(v17 + 112);
  *(void *)(v16 + 120) = v24;
  swift_bridgeObjectRelease();
  *(void *)(v16 + 128) = *(void *)(v17 + 128);
  *(_WORD *)(v16 + 136) = *(_WORD *)(v17 + 136);
  uint64_t v25 = *(void *)(v17 + 152);
  *(void *)(v16 + 144) = *(void *)(v17 + 144);
  *(void *)(v16 + 152) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(v17 + 168);
  *(void *)(v16 + 160) = *(void *)(v17 + 160);
  *(void *)(v16 + 168) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(v17 + 184);
  *(void *)(v16 + 176) = *(void *)(v17 + 176);
  *(void *)(v16 + 184) = v27;
  swift_bridgeObjectRelease();
  *(void *)(v16 + 192) = *(void *)(v17 + 192);
  *(_DWORD *)(v16 + 200) = *(_DWORD *)(v17 + 200);
  *(unsigned char *)(v16 + 204) = *(unsigned char *)(v17 + 204);
  *(_WORD *)(v16 + 205) = *(_WORD *)(v17 + 205);
  *(_OWORD *)(v16 + 208) = *(_OWORD *)(v17 + 208);
  *(void *)(v16 + 224) = *(void *)(v17 + 224);
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v17 + 240);
  *(void *)(v16 + 232) = *(void *)(v17 + 232);
  *(void *)(v16 + 240) = v28;
  swift_bridgeObjectRelease();
  *(void *)(v16 + 248) = *(void *)(v17 + 248);
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(v17 + 264);
  *(void *)(v16 + 256) = *(void *)(v17 + 256);
  *(void *)(v16 + 264) = v29;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v16 + 272) = *(_OWORD *)(v17 + 272);
  *(void *)(v16 + 288) = *(void *)(v17 + 288);
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v17 + 304);
  *(void *)(v16 + 296) = *(void *)(v17 + 296);
  *(void *)(v16 + 304) = v30;
  swift_bridgeObjectRelease();
  *(void *)(v16 + 312) = *(void *)(v17 + 312);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 320) = *(unsigned char *)(v17 + 320);
  uint64_t v31 = *(void *)(v17 + 336);
  *(void *)(v16 + 328) = *(void *)(v17 + 328);
  *(void *)(v16 + 336) = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(v17 + 352);
  *(void *)(v16 + 344) = *(void *)(v17 + 344);
  *(void *)(v16 + 352) = v32;
  swift_bridgeObjectRelease();
  *(void *)(v8 + v10[7]) = *(void *)(v9 + v10[7]);
  swift_bridgeObjectRelease();
  uint64_t v33 = v10[8];
  uint64_t v34 = v8 + v33;
  uint64_t v35 = v9 + v33;
  unint64_t v36 = *(void *)(v8 + v33 + 8);
  if (v36 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v37 = *(void *)(v35 + 8);
  if (v37 >> 60 == 15)
  {
    sub_1002DEBB4(v34);
LABEL_4:
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    goto LABEL_6;
  }
  uint64_t v38 = *(void *)v34;
  *(void *)uint64_t v34 = *(void *)v35;
  *(void *)(v34 + 8) = v37;
  sub_100013510(v38, v36);
LABEL_6:
  uint64_t v39 = v10[9];
  unint64_t v40 = (void *)(v8 + v39);
  unint64_t v41 = (uint64_t *)(v9 + v39);
  uint64_t v43 = *v41;
  uint64_t v42 = v41[1];
  *unint64_t v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[6];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  uint64_t v47 = type metadata accessor for AppInstallRequestType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 40))(v45, v46, v47);
  uint64_t v48 = a3[7];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  uint64_t v51 = *(void *)(a2 + v48 + 8);
  *(void *)uint64_t v49 = *(void *)(a2 + v48);
  *(void *)(v49 + 8) = v51;
  swift_bridgeObjectRelease();
  *(void *)(v49 + 16) = *(void *)(v50 + 16);
  swift_bridgeObjectRelease();
  uint64_t v52 = *(void *)(v50 + 32);
  *(void *)(v49 + 24) = *(void *)(v50 + 24);
  *(void *)(v49 + 32) = v52;
  swift_bridgeObjectRelease();
  uint64_t v53 = *(void *)(v50 + 48);
  *(void *)(v49 + 40) = *(void *)(v50 + 40);
  *(void *)(v49 + 48) = v53;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v49 + 56) = *(_OWORD *)(v50 + 56);
  *(_OWORD *)(v49 + 72) = *(_OWORD *)(v50 + 72);
  *(void *)(v49 + 88) = *(void *)(v50 + 88);
  swift_bridgeObjectRelease();
  *(void *)(v49 + 96) = *(void *)(v50 + 96);
  *(_DWORD *)(v49 + 104) = *(_DWORD *)(v50 + 104);
  *(unsigned char *)(v49 + 108) = *(unsigned char *)(v50 + 108);
  *(unsigned char *)(v49 + 109) = *(unsigned char *)(v50 + 109);
  *(unsigned char *)(v49 + 110) = *(unsigned char *)(v50 + 110);
  uint64_t v54 = a3[8];
  uint64_t v55 = (void *)(a1 + v54);
  uint64_t v56 = (void *)(a2 + v54);
  if (*(void *)(a1 + v54 + 8) >= 2uLL)
  {
    unint64_t v57 = v56[1];
    if (v57 >= 2)
    {
      *uint64_t v55 = *v56;
      v55[1] = v57;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_10001729C((uint64_t)v55, &qword_100661C28);
  }
  *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
  return a1;
}

uint64_t sub_1003B7558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003B756C);
}

uint64_t sub_1003B756C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for AppStoreItem(0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = type metadata accessor for AppInstallRequestType();
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[7] + 8);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_1003B76D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003B76E4);
}

uint64_t sub_1003B76E4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = type metadata accessor for AppStoreItem(0);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = type metadata accessor for AppInstallRequestType();
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[7] + 8) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1003B7844()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for AppStoreItem(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for AppInstallRequestType();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void *sub_1003B795C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  char v11 = a5 & 1;
  uint64_t v12 = sub_1000172F8(&qword_10065B8F0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1003B803C(a1, a2, a3, a4, v11);
  uint64_t v30 = sub_1000172F8(&qword_10065B8F8);
  uint64_t v20 = sub_10000DDFC((unint64_t *)&qword_10065B900, &qword_10065B8F8);
  LOBYTE(v29) = 0;
  uint64_t v31 = v20;
  *((void *)&v29 + 1) = v19;
  sub_1000172F8(&qword_10065B908);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
  sub_10018B164(&v29, inited + 32);
  uint64_t v28 = _swiftEmptyArrayStorage;
  id v22 = a6;
  swift_bridgeObjectRetain();
  sub_100554CA8(inited);
  uint64_t v23 = (void *)sub_1003B86D8(0, (uint64_t)v28, (uint64_t)sub_1003B863C, 0, v22);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (v23)
  {
    id v24 = v23;
    sub_1002415BC(v24, (uint64_t)v14);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {

      sub_10001729C((uint64_t)v14, &qword_10065B8F0);
      return 0;
    }
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    Date.timeIntervalSinceNow.getter();
    if (v25 <= -86400.0)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);

      return 0;
    }
    id v26 = v24;
    uint64_t v23 = (void *)sub_1003B7CA8(2, v26);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return v23;
}

uint64_t sub_1003B7CA8(uint64_t a1, void *a2)
{
  id v2 = a2;
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v2 valueForProperty:v3];

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_1001CD9F8((uint64_t)v10, (uint64_t)&v8);
  if (v9)
  {
    sub_1001C5DD4(&v8, v7);
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    uint64_t v5 = sub_10025CB18(v7);
    swift_release();
    sub_100014524((uint64_t)v7);
  }
  else
  {
    uint64_t v5 = 0;
  }
  sub_10001729C((uint64_t)v10, (uint64_t *)&unk_10065C9C0);
  return v5;
}

void sub_1003B7E98(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v20 = sub_1000172F8(&qword_100661CD0);
  uint64_t v21 = sub_10000DDFC(&qword_100661CD8, &qword_100661CD0);
  __int16 v17 = 0;
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  id v6 = v5;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_10043AA04((uint64_t)&v17, v6);
  uint64_t v9 = v8;

  if (v20) {
    sub_100014524((uint64_t)&v17);
  }
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    type metadata accessor for MarketplaceCertificateEntity.Entity();
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    unint64_t v12 = 0;
    while (v12 < *(void *)(v9 + 16))
    {
      uint64_t v13 = *(void *)(v9 + 8 * v12 + 32);
      id v14 = objc_allocWithZone(ObjCClassFromMetadata);
      id v15 = v7;
      id v16 = [v14 initWithPersistentID:v13 onConnection:v15];
      LOBYTE(v14) = [v16 existsInDatabase];

      if ((v14 & 1) == 0)
      {
        swift_bridgeObjectRelease();

        uint64_t v7 = v16;
        goto LABEL_11;
      }
      ++v12;
      [v16 deleteFromDatabase];

      if (v10 == v12)
      {
        swift_bridgeObjectRelease();
        uint64_t v7 = v15;
        goto LABEL_11;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_11:
  }
}

uint64_t sub_1003B803C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = sub_1000172F8(&qword_100661CD0);
  uint64_t v21 = v10;
  uint64_t v11 = sub_10000DDFC(&qword_100661CD8, &qword_100661CD0);
  uint64_t v22 = v11;
  LOWORD(v19) = 0;
  *((void *)&v19 + 1) = a1;
  uint64_t v20 = a2;
  sub_1000172F8(&qword_10065B908);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1005A3EC0;
  sub_10018B164(&v19, v12 + 32);
  uint64_t v21 = v10;
  uint64_t v22 = v11;
  LOWORD(v19) = 4;
  *((void *)&v19 + 1) = a3;
  uint64_t v20 = a4;
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1005A3EC0;
  sub_10018B164(&v19, v13 + 32);
  uint64_t v21 = sub_1000172F8(&qword_100661CE0);
  uint64_t v14 = sub_10000DDFC(&qword_100661CE8, &qword_100661CE0);
  LOWORD(v19) = 3;
  uint64_t v22 = v14;
  *((void *)&v19 + 1) = a5 & 1;
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1005A3EC0;
  sub_10018B164(&v19, v15 + 32);
  *(void *)&long long v19 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100554CA8(v12);
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_100554CA8(v16);
  uint64_t v17 = swift_bridgeObjectRetain();
  sub_100554CA8(v17);
  sub_1000172F8((uint64_t *)&unk_100661CF0);
  swift_arrayDestroy();
  return v19;
}

unint64_t *sub_1003B823C()
{
  sub_1000172F8((uint64_t *)&unk_100663BE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
  *(void *)(inited + 56) = &type metadata for SQLiteTable;
  *(void *)(inited + 64) = &off_1006493B8;
  unint64_t v1 = (void *)swift_allocObject();
  *(void *)(inited + 32) = v1;
  v1[2] = sub_1003B8320;
  v1[3] = 0;
  v1[4] = 0xD000000000000017;
  v1[5] = 0x80000001005BDCC0;
  id v2 = sub_1004AB980(inited);
  swift_setDeallocating();
  sub_1000172F8(&qword_10065C038);
  swift_arrayDestroy();
  return v2;
}

unint64_t *sub_1003B8320()
{
  strcpy(v29, "distributor_id");
  v29[15] = -18;
  uint64_t v30 = 1415071060;
  unint64_t v31 = 0xE400000000000000;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  char v35 = 0;
  v24[0] = 0xD000000000000011;
  v24[1] = 0x80000001005B8480;
  v24[2] = 1112493122;
  v24[3] = 0xE400000000000000;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  char v28 = 0;
  v19[0] = 0xD000000000000010;
  v19[1] = 0x80000001005B84A0;
  v19[2] = 1112493122;
  v19[3] = 0xE400000000000000;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  char v23 = 0;
  v14[0] = 0xD000000000000010;
  v14[1] = 0x80000001005B84C0;
  v14[2] = 0x52454745544E49;
  v14[3] = 0xE700000000000000;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  char v18 = 0;
  v9[0] = 7107189;
  v9[1] = 0xE300000000000000;
  v9[2] = 1415071060;
  v9[3] = 0xE400000000000000;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  char v13 = 0;
  sub_1000172F8((uint64_t *)&unk_100663BE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A4B40;
  *(void *)(inited + 56) = &type metadata for SQLiteColumn;
  *(void *)(inited + 64) = &off_1006493B0;
  uint64_t v1 = swift_allocObject();
  *(void *)(inited + 32) = v1;
  sub_1001CD8D8((uint64_t)v29, v1 + 16);
  *(void *)(inited + 96) = &type metadata for SQLiteColumn;
  *(void *)(inited + 104) = &off_1006493B0;
  uint64_t v2 = swift_allocObject();
  *(void *)(inited + 72) = v2;
  sub_1001CD8D8((uint64_t)v24, v2 + 16);
  *(void *)(inited + 136) = &type metadata for SQLiteColumn;
  *(void *)(inited + 144) = &off_1006493B0;
  uint64_t v3 = swift_allocObject();
  *(void *)(inited + 112) = v3;
  sub_1001CD8D8((uint64_t)v19, v3 + 16);
  *(void *)(inited + 176) = &type metadata for SQLiteColumn;
  *(void *)(inited + 184) = &off_1006493B0;
  uint64_t v4 = swift_allocObject();
  *(void *)(inited + 152) = v4;
  sub_1001CD8D8((uint64_t)v14, v4 + 16);
  *(void *)(inited + 216) = &type metadata for SQLiteColumn;
  *(void *)(inited + 224) = &off_1006493B0;
  uint64_t v5 = swift_allocObject();
  *(void *)(inited + 192) = v5;
  sub_1001CD8D8((uint64_t)v9, v5 + 16);
  *(void *)(inited + 256) = &type metadata for SQLiteIndex;
  *(void *)(inited + 264) = &off_1006493A8;
  uint64_t v6 = swift_allocObject();
  *(void *)(inited + 232) = v6;
  strcpy((char *)(v6 + 16), "distributor_id");
  *(unsigned char *)(v6 + 31) = -18;
  *(void *)(v6 + 32) = 0xD000000000000012;
  *(void *)(v6 + 40) = 0x80000001005BE990;
  *(unsigned char *)(v6 + 48) = 0;
  uint64_t v7 = sub_1004AB980(inited);
  swift_setDeallocating();
  sub_1000172F8(&qword_10065C038);
  swift_arrayDestroy();
  sub_1001CD934((uint64_t)v9);
  sub_1001CD934((uint64_t)v14);
  sub_1001CD934((uint64_t)v19);
  sub_1001CD934((uint64_t)v24);
  sub_1001CD934((uint64_t)v29);
  return v7;
}

uint64_t sub_1003B8620()
{
  return sub_1001CD9A4((void (*)(void))&_swift_release, 48);
}

void sub_1003B863C(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  type metadata accessor for MarketplaceCertificateEntity.Entity();
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v7 = a2;
  id v8 = [v6 initWithPersistentID:a1 onConnection:v7];
  LODWORD(a1) = [v8 existsInDatabase];

  if (!a1)
  {

    id v8 = 0;
  }
  *a3 = v8;
}

uint64_t sub_1003B86D8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9 = a1 & 1;
  uint64_t v20 = 0;
  type metadata accessor for MarketplaceCertificateEntity.Entity();
  id v10 = [objc_allocWithZone((Class)ASUSQLiteQueryDescriptor) initWithEntityClass:swift_getObjCClassFromMetadata() memoryEntityClass:0];
  long long v11 = (void *)sub_10043DAEC(v9, a2);
  [v10 setPredicate:v11];

  id v12 = [objc_allocWithZone((Class)ASUSQLiteQuery) initOnConnection:a5 descriptor:v10];
  char v13 = (void *)swift_allocObject();
  v13[2] = &v20;
  v13[3] = a3;
  v13[4] = a4;
  v13[5] = a5;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1001A2178;
  *(void *)(v14 + 24) = v13;
  aBlock[4] = sub_1001A2194;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100248D44;
  aBlock[3] = &unk_1006447D8;
  long long v15 = _Block_copy(aBlock);
  id v16 = a5;
  swift_retain();
  swift_release();
  [v12 enumeratePersistentIDsUsingBlock:v15];

  _Block_release(v15);
  LOBYTE(a5) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a5)
  {
    __break(1u);
  }
  else
  {
    uint64_t v18 = v20;
    swift_release();
    return v18;
  }
  return result;
}

uint64_t sub_1003B88EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 72)) {
    sub_100014524(v0 + 48);
  }

  return _swift_deallocObject(v0, 97, 7);
}

uint64_t sub_1003B893C()
{
  return sub_1001CD9A4((void (*)(void))&_swift_bridgeObjectRelease, 49);
}

uint64_t sub_1003B8958()
{
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003B8990()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003B89A0()
{
  return swift_release();
}

uint64_t sub_1003B89A8()
{
  *(void *)(v1 + 80) = v0;
  return _swift_task_switch(sub_1003B89C8, 0, 0);
}

uint64_t sub_1003B89C8()
{
  sub_1003B9450();
  id v1 = objc_allocWithZone((Class)SBSRemoteAlertDefinition);
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  *(void *)(v0 + 88) = [v1 initWithServiceName:v2 viewControllerClassName:v3];

  return _swift_task_switch(sub_1003B8AAC, 0, 0);
}

uint64_t sub_1003B8AAC()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  v0[2] = v0;
  v0[3] = sub_1003B8B50;
  uint64_t v3 = swift_continuation_init();
  sub_1003B8C90(v3, v2, v1);
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1003B8B50()
{
  return _swift_task_switch(sub_1003B8C30, 0, 0);
}

uint64_t sub_1003B8C30()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1003B8C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = [objc_allocWithZone((Class)SBSRemoteAlertConfigurationContext) init];
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = a1;
  aBlock[4] = sub_1003B9618;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003B91E4;
  aBlock[3] = &unk_100644850;
  uint64_t v9 = _Block_copy(aBlock);
  id v10 = self;
  swift_retain();
  id v11 = [v10 responderWithHandler:v9];
  _Block_release(v9);
  swift_release();
  swift_release();
  id v12 = [objc_allocWithZone((Class)BSAction) initWithInfo:0 responder:v11];
  sub_1000172F8((uint64_t *)&unk_100660E90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A55B0;
  *(void *)(inited + 32) = v12;
  aBlock[0] = inited;
  specialized Array._endMutation()();
  unint64_t v14 = aBlock[0];
  if (aBlock[0] >> 62)
  {
    id v17 = v12;
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v18) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  uint64_t v15 = *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v16 = v12;
  if (v15) {
LABEL_3:
  }
    sub_1003B9F34(v14, &qword_100661DB8, &qword_100661DA8);
LABEL_5:
  swift_bridgeObjectRelease();
  sub_10018B1DC(0, &qword_100661DA8);
  sub_1003B9628();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v6 setActions:isa];

  id v20 = [self newHandleWithDefinition:a3 configurationContext:v6];
  long long v21 = *(void **)(a2 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23BATransparencySheetTask_remoteHandle);
  *(void *)(a2 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23BATransparencySheetTask_remoteHandle) = v20;
  id v22 = v20;

  [v22 registerObserver:a2];
  id v23 = [objc_allocWithZone((Class)SBSRemoteAlertActivationContext) init];
  [v22 activateWithContext:v23];
}

void sub_1003B8FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    static Logger.install.getter();
    id v10 = v9;
    id v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v20 = a3;
      uint64_t v13 = swift_slowAlloc();
      uint64_t v19 = v5;
      unint64_t v14 = (uint8_t *)v13;
      uint64_t v18 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v14 = 138412290;
      uint64_t v15 = *(Class *)((char *)&v10->isa + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23BATransparencySheetTask_logKey);
      long long v21 = v15;
      id v16 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v18 = v15;

      _os_log_impl((void *)&_mh_execute_header, v11, v12, "[%@] Transparency sheet confirmed", v14, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v5 = v19;
      swift_slowDealloc();
    }
    else
    {

      id v11 = v10;
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_continuation_throwingResume();
  }
}

void sub_1003B91E4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

id sub_1003B93AC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BATransparencySheetTask();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BATransparencySheetTask()
{
  return self;
}

void sub_1003B9450()
{
  memset(v5, 0, sizeof(v5));
  sub_10029ABD8(0, (uint64_t)v5, &v6);
  sub_100016E7C((uint64_t)v5);
  uint64_t v0 = v7;
  sub_100016E7C((uint64_t)&v6);
  if (!v0)
  {
    if (_stringCompareWithSmolCheck(_:_:expecting:)())
    {
      id v1 = [self standardUserDefaults];
      if (!v1) {
        return;
      }
    }
    else
    {
      id v2 = objc_allocWithZone((Class)NSUserDefaults);
      NSString v3 = String._bridgeToObjectiveC()();
      id v1 = [v2 initWithSuiteName:v3];

      if (!v1) {
        return;
      }
    }
    NSString v4 = String._bridgeToObjectiveC()();
    [v1 setBool:1 forKey:v4];
  }
}

uint64_t sub_1003B95A8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003B95E0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003B9618(uint64_t a1)
{
  sub_1003B8FA4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1003B9620()
{
  return swift_release();
}

unint64_t sub_1003B9628()
{
  unint64_t result = qword_100661DB0;
  if (!qword_100661DB0)
  {
    sub_10018B1DC(255, &qword_100661DA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100661DB0);
  }
  return result;
}

void *sub_1003B9690(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000172F8(&qword_100661DE0);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      long long v6 = *(void **)(v32 + 8 * v4);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      Hasher.init(_seed:)();
      id v7 = v6;
      String.hash(into:)();
      Swift::Int v8 = Hasher._finalize()();
      unint64_t result = (void *)swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v17 = v16;
        if (v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        unint64_t result = (void *)swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v24 = v23;
          if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          unint64_t result = (void *)swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return (void *)v3;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

Swift::Int sub_1003B98C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000172F8(&qword_100660768);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v45 = v3 + 56;
    uint64_t v41 = v1;
    uint64_t v42 = a1 + 32;
    uint64_t v40 = v3;
    while (1)
    {
      long long v6 = (uint64_t *)(v42 + (v4 << 6));
      uint64_t v7 = *v6;
      uint64_t v8 = v6[1];
      Swift::UInt64 v10 = v6[2];
      Swift::UInt64 v9 = v6[3];
      Swift::UInt64 v11 = v6[4];
      *(_DWORD *)uint64_t v44 = *((unsigned __int8 *)v6 + 40);
      uint64_t v12 = v6[6];
      uint64_t v13 = v6[7];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v14 = v7;
      String.hash(into:)();
      uint64_t v51 = v8;
      swift_bridgeObjectRelease();
      Swift::UInt64 v48 = v10;
      Hasher._combine(_:)(v10);
      Swift::UInt64 v47 = v9;
      Hasher._combine(_:)(v9);
      Swift::UInt64 v46 = v11;
      Hasher._combine(_:)(v11);
      Hasher._combine(_:)(v44[0]);
      swift_bridgeObjectRetain();
      uint64_t v49 = v12;
      String.hash(into:)();
      uint64_t v50 = v13;
      swift_bridgeObjectRelease();
      Swift::Int result = Hasher._finalize()();
      uint64_t v16 = ~(-1 << *(unsigned char *)(v3 + 32));
      unint64_t v17 = result & v16;
      unint64_t v18 = (result & (unint64_t)v16) >> 6;
      uint64_t v19 = *(void *)(v45 + 8 * v18);
      uint64_t v20 = 1 << (result & v16);
      uint64_t v21 = *(void *)(v3 + 48);
      if ((v20 & v19) != 0)
      {
        uint64_t v43 = v4;
        uint64_t v22 = v14;
        uint64_t v23 = *(void *)(v3 + 48);
        uint64_t v24 = v8;
        do
        {
          uint64_t v25 = v21 + (v17 << 6);
          Swift::Int result = *(void *)v25;
          uint64_t v26 = *(void *)(v25 + 16);
          uint64_t v27 = *(void *)(v25 + 24);
          uint64_t v28 = *(void *)(v25 + 32);
          int v29 = *(unsigned __int8 *)(v25 + 40);
          uint64_t v30 = *(void *)(v25 + 48);
          uint64_t v31 = *(void *)(v25 + 56);
          BOOL v32 = *(void *)v25 == v22 && *(void *)(v25 + 8) == v24;
          if (v32 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(), v21 = v23, v22 = v14, (result & 1) != 0))
          {
            BOOL v33 = v26 == v48 && v27 == v47;
            BOOL v34 = v33 && v28 == v46;
            if (v34 && ((*(_DWORD *)v44 ^ v29) & 1) == 0)
            {
              BOOL v35 = v30 == v49 && v31 == v50;
              if (v35
                || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(), v21 = v23, v22 = v14, (result & 1) != 0))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v3 = v40;
                uint64_t v5 = v41;
                uint64_t v4 = v43;
                goto LABEL_4;
              }
            }
          }
          unint64_t v17 = (v17 + 1) & v16;
          unint64_t v18 = v17 >> 6;
          uint64_t v19 = *(void *)(v45 + 8 * (v17 >> 6));
          uint64_t v20 = 1 << v17;
          uint64_t v24 = v51;
        }
        while ((v19 & (1 << v17)) != 0);
        uint64_t v3 = v40;
        uint64_t v5 = v41;
        uint64_t v21 = *(void *)(v40 + 48);
        uint64_t v4 = v43;
      }
      else
      {
        uint64_t v22 = v14;
        uint64_t v5 = v41;
        uint64_t v24 = v8;
      }
      *(void *)(v45 + 8 * v18) = v20 | v19;
      uint64_t v36 = v21 + (v17 << 6);
      *(void *)uint64_t v36 = v22;
      *(void *)(v36 + 8) = v24;
      *(void *)(v36 + 16) = v48;
      *(void *)(v36 + 24) = v47;
      *(void *)(v36 + 32) = v46;
      *(unsigned char *)(v36 + 40) = v44[0];
      *(void *)(v36 + 48) = v49;
      *(void *)(v36 + 56) = v50;
      uint64_t v37 = *(void *)(v3 + 16);
      BOOL v38 = __OFADD__(v37, 1);
      uint64_t v39 = v37 + 1;
      if (v38) {
        break;
      }
      *(void *)(v3 + 16) = v39;
LABEL_4:
      if (++v4 == v5) {
        return v3;
      }
    }
    __break(1u);
  }
  else
  {
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return result;
}

void sub_1003B9BC0(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_1000172F8(&qword_100661DC0);
      uint64_t v3 = (void *)static _SetStorage.allocate(capacity:)();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = (char *)(v3 + 7);
  uint64_t v42 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v10 = __OFADD__(v8++, 1);
      if (v10)
      {
        __break(1u);
        goto LABEL_36;
      }
      uint64_t v11 = v9;
      Swift::Int v12 = NSObject._rawHashValue(seed:)(v3[5]);
      uint64_t v13 = -1 << *((unsigned char *)v3 + 32);
      unint64_t v14 = v12 & ~v13;
      unint64_t v15 = v14 >> 6;
      uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
      uint64_t v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        type metadata accessor for InstallCoordinationInstallObserver.Observer(0);
        id v18 = *(id *)(v3[6] + 8 * v14);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19)
        {
LABEL_11:
          swift_unknownObjectRelease();
          goto LABEL_12;
        }
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(v3[6] + 8 * v14);
          char v22 = static NSObject.== infix(_:_:)();

          if (v22) {
            goto LABEL_11;
          }
        }
      }
      *(void *)&v7[8 * v15] = v17 | v16;
      *(void *)(v3[6] + 8 * v14) = v11;
      uint64_t v23 = v3[2];
      BOOL v10 = __OFADD__(v23, 1);
      uint64_t v24 = v23 + 1;
      if (v10) {
        goto LABEL_37;
      }
      v3[2] = v24;
LABEL_12:
      if (v8 == v42) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  uint64_t v41 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v41)
  {
    Swift::Int v26 = v3[5];
    id v27 = *(id *)(a1 + 32 + 8 * v25);
    Swift::Int v28 = NSObject._rawHashValue(seed:)(v26);
    uint64_t v29 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
    uint64_t v33 = 1 << v30;
    if (((1 << v30) & v32) != 0)
    {
      type metadata accessor for InstallCoordinationInstallObserver.Observer(0);
      id v34 = *(id *)(v3[6] + 8 * v30);
      char v35 = static NSObject.== infix(_:_:)();

      if (v35) {
        goto LABEL_23;
      }
      uint64_t v36 = ~v29;
      unint64_t v30 = (v30 + 1) & v36;
      unint64_t v31 = v30 >> 6;
      uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
      uint64_t v33 = 1 << v30;
      if ((v32 & (1 << v30)) != 0)
      {
        while (1)
        {
          id v37 = *(id *)(v3[6] + 8 * v30);
          char v38 = static NSObject.== infix(_:_:)();

          if (v38) {
            break;
          }
          unint64_t v30 = (v30 + 1) & v36;
          unint64_t v31 = v30 >> 6;
          uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
          uint64_t v33 = 1 << v30;
          if ((v32 & (1 << v30)) == 0) {
            goto LABEL_31;
          }
        }
LABEL_23:

        uint64_t v5 = v42;
        goto LABEL_24;
      }
LABEL_31:
      uint64_t v5 = v42;
    }
    *(void *)&v7[8 * v31] = v33 | v32;
    *(void *)(v3[6] + 8 * v30) = v27;
    uint64_t v39 = v3[2];
    BOOL v10 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v10) {
      goto LABEL_38;
    }
    v3[2] = v40;
LABEL_24:
    if (++v25 == v5) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

void sub_1003B9F18(unint64_t a1)
{
}

void sub_1003B9F34(unint64_t a1, uint64_t *a2, unint64_t *a3)
{
  unint64_t v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9)
    {
LABEL_3:
      sub_1000172F8(a2);
      uint64_t v6 = (void *)static _SetStorage.allocate(capacity:)();
      uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v5) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v8) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v6 = &_swiftEmptySetSingleton;
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v5) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return;
  }
LABEL_9:
  BOOL v10 = (char *)(v6 + 7);
  uint64_t v46 = v8;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v13 = __OFADD__(v11++, 1);
      if (v13)
      {
        __break(1u);
        goto LABEL_36;
      }
      uint64_t v14 = v12;
      Swift::Int v15 = NSObject._rawHashValue(seed:)(v6[5]);
      uint64_t v16 = -1 << *((unsigned char *)v6 + 32);
      unint64_t v17 = v15 & ~v16;
      unint64_t v18 = v17 >> 6;
      uint64_t v19 = *(void *)&v10[8 * (v17 >> 6)];
      uint64_t v20 = 1 << v17;
      if (((1 << v17) & v19) != 0)
      {
        sub_10018B1DC(0, a3);
        id v21 = *(id *)(v6[6] + 8 * v17);
        char v22 = static NSObject.== infix(_:_:)();

        if (v22)
        {
LABEL_11:
          swift_unknownObjectRelease();
          goto LABEL_12;
        }
        uint64_t v23 = ~v16;
        while (1)
        {
          unint64_t v17 = (v17 + 1) & v23;
          unint64_t v18 = v17 >> 6;
          uint64_t v19 = *(void *)&v10[8 * (v17 >> 6)];
          uint64_t v20 = 1 << v17;
          if ((v19 & (1 << v17)) == 0) {
            break;
          }
          id v24 = *(id *)(v6[6] + 8 * v17);
          char v25 = static NSObject.== infix(_:_:)();

          if (v25) {
            goto LABEL_11;
          }
        }
      }
      *(void *)&v10[8 * v18] = v20 | v19;
      *(void *)(v6[6] + 8 * v17) = v14;
      uint64_t v26 = v6[2];
      BOOL v13 = __OFADD__(v26, 1);
      uint64_t v27 = v26 + 1;
      if (v13) {
        goto LABEL_37;
      }
      v6[2] = v27;
LABEL_12:
      if (v11 == v46) {
        return;
      }
    }
  }
  uint64_t v28 = 0;
  uint64_t v44 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v28 != v44)
  {
    Swift::Int v29 = v6[5];
    id v30 = *(id *)(a1 + 32 + 8 * v28);
    Swift::Int v31 = NSObject._rawHashValue(seed:)(v29);
    uint64_t v32 = -1 << *((unsigned char *)v6 + 32);
    unint64_t v33 = v31 & ~v32;
    unint64_t v34 = v33 >> 6;
    uint64_t v35 = *(void *)&v10[8 * (v33 >> 6)];
    uint64_t v36 = 1 << v33;
    if (((1 << v33) & v35) != 0)
    {
      sub_10018B1DC(0, a3);
      id v37 = *(id *)(v6[6] + 8 * v33);
      char v38 = static NSObject.== infix(_:_:)();

      if (v38) {
        goto LABEL_23;
      }
      uint64_t v39 = ~v32;
      unint64_t v33 = (v33 + 1) & v39;
      unint64_t v34 = v33 >> 6;
      uint64_t v35 = *(void *)&v10[8 * (v33 >> 6)];
      uint64_t v36 = 1 << v33;
      if ((v35 & (1 << v33)) != 0)
      {
        while (1)
        {
          id v40 = *(id *)(v6[6] + 8 * v33);
          char v41 = static NSObject.== infix(_:_:)();

          if (v41) {
            break;
          }
          unint64_t v33 = (v33 + 1) & v39;
          unint64_t v34 = v33 >> 6;
          uint64_t v35 = *(void *)&v10[8 * (v33 >> 6)];
          uint64_t v36 = 1 << v33;
          if ((v35 & (1 << v33)) == 0) {
            goto LABEL_31;
          }
        }
LABEL_23:

        uint64_t v8 = v46;
        goto LABEL_24;
      }
LABEL_31:
      uint64_t v8 = v46;
    }
    *(void *)&v10[8 * v34] = v36 | v35;
    *(void *)(v6[6] + 8 * v33) = v30;
    uint64_t v42 = v6[2];
    BOOL v13 = __OFADD__(v42, 1);
    uint64_t v43 = v42 + 1;
    if (v13) {
      goto LABEL_38;
    }
    v6[2] = v43;
LABEL_24:
    if (++v28 == v8) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_1003BA298()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.install.getter();
  unint64_t v5 = v0;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = v2;
    uint64_t v9 = (uint8_t *)v8;
    Swift::Int v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    uint64_t v10 = v1;
    uint64_t v11 = *(Class *)((char *)&v5->isa + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23BATransparencySheetTask_logKey);
    unint64_t v17 = v11;
    id v12 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *Swift::Int v15 = v11;
    uint64_t v1 = v10;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%@] Sheet did activate", v9, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v16;
    swift_slowDealloc();
  }
  else
  {

    uint64_t v6 = v5;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_1003BA4A4()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.install.getter();
  unint64_t v5 = v0;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = v2;
    uint64_t v9 = (uint8_t *)v8;
    unint64_t v17 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    uint64_t v10 = v1;
    uint64_t v11 = *(Class *)((char *)&v5->isa + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23BATransparencySheetTask_logKey);
    uint64_t v19 = v11;
    id v12 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v17 = v11;
    uint64_t v1 = v10;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%@] Sheet did deactivate", v9, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v18;
    swift_slowDealloc();
  }
  else
  {

    uint64_t v6 = v5;
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v13 = OBJC_IVAR____TtC28ManagedAppDistributionDaemon23BATransparencySheetTask_remoteHandle;
  uint64_t v14 = *(Class *)((char *)&v5->isa
                 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23BATransparencySheetTask_remoteHandle);
  if (v14)
  {
    [v14 unregisterObserver:v5];
    Swift::Int v15 = *(Class *)((char *)&v5->isa + v13);
  }
  else
  {
    Swift::Int v15 = 0;
  }
  *(Class *)((char *)&v5->isa + v13) = 0;
}

uint64_t sub_1003BA6E0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  os_log_type_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = OBJC_IVAR____TtC28ManagedAppDistributionDaemon23BATransparencySheetTask_remoteHandle;
  uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC28ManagedAppDistributionDaemon23BATransparencySheetTask_remoteHandle];
  if (v11)
  {
    [v11 unregisterObserver:v1];
    id v12 = *(void **)&v1[v10];
  }
  else
  {
    id v12 = 0;
  }
  *(void *)&v1[v10] = 0;

  if (a1)
  {
    swift_errorRetain();
    static Logger.install.getter();
    swift_errorRetain();
    uint64_t v13 = v1;
    swift_errorRetain();
    uint64_t v14 = v13;
    Swift::Int v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = (void *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v36 = v32;
      *(_DWORD *)uint64_t v17 = 138412546;
      uint64_t v33 = v4;
      uint64_t v34 = v3;
      uint64_t v19 = *(void **)&v14[OBJC_IVAR____TtC28ManagedAppDistributionDaemon23BATransparencySheetTask_logKey];
      os_log_t v31 = v15;
      uint64_t v35 = (uint64_t)v19;
      id v20 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v18 = v19;

      *(_WORD *)(v17 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v21 = Error.localizedDescription.getter();
      uint64_t v35 = sub_1000143F4(v21, v22, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v23 = v31;
      _os_log_impl((void *)&_mh_execute_header, v31, v16, "[%@] Sheet did invalidate with error: %{public}s", (uint8_t *)v17, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v9, v34);
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();

      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    }
  }
  else
  {
    static Logger.install.getter();
    char v25 = v1;
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = v3;
      *(_DWORD *)uint64_t v28 = 138412290;
      Swift::Int v29 = *(Class *)((char *)&v25->isa + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23BATransparencySheetTask_logKey);
      uint64_t v36 = (uint64_t)v29;
      id v30 = v29;
      uint64_t v3 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(void *)uint64_t v33 = v29;

      _os_log_impl((void *)&_mh_execute_header, v26, v27, "[%@] Sheet did invalidate", v28, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v26 = v25;
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
}

Swift::Int sub_1003BAB70()
{
  Swift::UInt64 v1 = *(void *)(v0 + 16);
  Swift::UInt64 v2 = *(void *)(v0 + 24);
  Swift::UInt64 v3 = *(void *)(v0 + 32);
  Swift::UInt8 v4 = *(unsigned char *)(v0 + 40);
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1003BAC4C()
{
  Swift::UInt64 v1 = *(void *)(v0 + 16);
  Swift::UInt64 v2 = *(void *)(v0 + 24);
  Swift::UInt64 v3 = *(void *)(v0 + 32);
  Swift::UInt8 v4 = *(unsigned char *)(v0 + 40);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1003BAD10()
{
  Swift::UInt64 v1 = *(void *)(v0 + 16);
  Swift::UInt64 v2 = *(void *)(v0 + 24);
  Swift::UInt64 v3 = *(void *)(v0 + 32);
  Swift::UInt8 v4 = *(unsigned char *)(v0 + 40);
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1003BADE8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  _OWORD v7[2] = a1[2];
  v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_1003C1D6C((uint64_t)v7, (uint64_t)v8) & 1;
}

uint64_t sub_1003BAE34()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100014524(v0 + 56);
  sub_100014524(v0 + 96);
  sub_10001729C(v0 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon19LicenseRenewalBatch_resolutionURL, &qword_10065C3C0);

  return swift_deallocClassInstance();
}

uint64_t sub_1003BAEC8()
{
  return type metadata accessor for LicenseRenewalBatch();
}

uint64_t type metadata accessor for LicenseRenewalBatch()
{
  uint64_t result = qword_100661E10;
  if (!qword_100661E10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003BAF1C()
{
  sub_10026B458();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1003BAFD4()
{
  *(void *)(v1 + 72) = v0;
  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 80) = v2;
  *long long v2 = v1;
  v2[1] = sub_1003BB068;
  return sub_1003BB2EC(1);
}

uint64_t sub_1003BB068(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_1003BB1A4, 0, 0);
  }
  else
  {
    long long v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_1003BB1A4()
{
  *(void *)(v0 + 64) = *(void *)(v0 + 88);
  swift_errorRetain();
  sub_1000172F8(&qword_10065B260);
  if (swift_dynamicCast()
    && *(void *)(v0 + 32)
    && (int v1 = *(_DWORD *)(v0 + 16), swift_bridgeObjectRelease(), v1 == -7006))
  {
    swift_errorRelease();
    long long v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v2;
    *long long v2 = v0;
    v2[1] = sub_1002EB128;
    return sub_1003BB2EC(0);
  }
  else
  {
    swift_errorRelease();
    swift_willThrow();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_1003BB2EC(char a1)
{
  *(void *)(v2 + 152) = v1;
  *(unsigned char *)(v2 + 372) = a1;
  type metadata accessor for ConfigurationBag(0);
  *(void *)(v2 + 160) = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Logger();
  *(void *)(v2 + 168) = v3;
  *(void *)(v2 + 176) = *(void *)(v3 - 8);
  *(void *)(v2 + 184) = swift_task_alloc();
  *(void *)(v2 + 192) = swift_task_alloc();
  *(void *)(v2 + 200) = swift_task_alloc();
  return _swift_task_switch(sub_1003BB3F8, 0, 0);
}

uint64_t sub_1003BB3F8()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0 + 19;
  uint64_t v2 = (uint64_t *)v0[19];
  static Logger.ald.getter();
  uint64_t v4 = *v2;
  v3[7] = *v2;
  uint64_t v5 = (void *)v2[2];
  v3[8] = v5;
  v3[9] = v2[3];
  v3[10] = v2[4];
  swift_retain_n();
  id v6 = v5;
  swift_retain();
  swift_retain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v22 = v7;
    os_log_type_t type = v8;
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    id v20 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    v1[18] = v6;
    id v10 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v20 = v6;
    swift_release_n();

    uint64_t v7 = v22;
    swift_release();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v22, type, "[%@] Fetching configuration bag", v9, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();

    swift_release();
    swift_release();
  }

  uint64_t v11 = v1[25];
  uint64_t v12 = v1[21];
  uint64_t v13 = v1[22];
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v1[30] = v14;
  v1[31] = (v13 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v14(v11, v12);
  uint64_t v15 = *(void *)(v4 + 40);
  uint64_t v16 = *(void *)(v4 + 48);
  uint64_t v17 = (void *)swift_task_alloc();
  v1[32] = v17;
  *uint64_t v17 = v1;
  v17[1] = sub_1003BB68C;
  uint64_t v18 = v1[20];
  return sub_1002CDB18(v18, v15, v16, v4 + 96, (uint64_t)v6);
}

uint64_t sub_1003BB68C()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003BC35C;
  }
  else {
    uint64_t v2 = sub_1003BB7A0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003BB7A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + 216);
  static Logger.ald.getter();
  swift_retain_n();
  id v3 = v2;
  swift_retain();
  swift_retain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = *(void **)(v1 + 216);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v27 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    *(void *)(v1 + 136) = v6;
    id v8 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v27 = v6;
    swift_release_n();

    swift_release();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[%@] Fetching certificates", v7, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v9 = *(void **)(v1 + 216);
    swift_release_n();

    swift_release();
    swift_release();
  }

  uint64_t v10 = *(void *)(v1 + 208);
  uint64_t v11 = *(void **)(v1 + 216);
  uint64_t v12 = *(void *)(v1 + 152);
  (*(void (**)(void, void))(v1 + 240))(*(void *)(v1 + 192), *(void *)(v1 + 168));
  uint64_t v13 = v10 + 56;
  sub_10019B17C(v10 + 56, v1 + 88);
  uint64_t v14 = *(void *)(v10 + 16);
  unint64_t v15 = *(void *)(v10 + 24);
  LOBYTE(v12) = *(unsigned char *)(v12 + 8);
  uint64_t v16 = self;
  id v17 = v11;
  swift_bridgeObjectRetain();
  id v18 = [v16 ephemeralSessionConfiguration];
  [v18 setHTTPShouldSetCookies:0];
  [v18 setHTTPCookieAcceptPolicy:1];
  [v18 setRequestCachePolicy:1];
  sub_100373694(1);
  id v19 = [self sessionWithConfiguration:v18];

  type metadata accessor for PlainHTTP();
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 24) = 0;
  *(void *)(v20 + 16) = v19;
  type metadata accessor for DecoratedHTTP();
  *(void *)(v1 + 272) = swift_initStackObject();
  uint64_t v21 = sub_1002C20CC(v20, v1 + 88, v14, v15, v12, v17);
  *(void *)(v1 + 280) = v21;
  uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, char))((char *)&dword_10065B8D8
                                                                                        + dword_10065B8D8);
  unint64_t v22 = (void *)swift_task_alloc();
  *(void *)(v1 + 288) = v22;
  *unint64_t v22 = v1;
  v22[1] = sub_1003BBB50;
  uint64_t v23 = *(void *)(v1 + 216);
  uint64_t v24 = *(void *)(v1 + 224);
  char v25 = *(unsigned char *)(v1 + 372);
  return v28(v21, v13, v23, 0, 1, v24, v25);
}

uint64_t sub_1003BBB50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = (void *)*v5;
  v6[37] = a1;
  v6[38] = a2;
  v6[39] = a3;
  v6[40] = a4;
  v6[41] = v4;
  swift_task_dealloc();
  if (v4) {
    uint64_t v7 = sub_1003BBEEC;
  }
  else {
    uint64_t v7 = sub_1003BBC6C;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1003BBC6C()
{
  uint64_t v1 = *(void **)(v0 + 216);
  static Logger.ald.getter();
  swift_retain_n();
  id v2 = v1;
  swift_retain();
  swift_retain();
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v5 = *(void **)(v0 + 216);
    id v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)id v6 = 138412290;
    *(void *)(v0 + 128) = v5;
    id v8 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v7 = v5;
    swift_release_n();

    swift_release();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%@] Fetching renewed license", v6, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v9 = *(void **)(v0 + 216);
    swift_release_n();

    swift_release();
    swift_release();
  }

  uint64_t v10 = *(void *)(v0 + 312);
  unint64_t v11 = *(void *)(v0 + 320);
  uint64_t v13 = *(void *)(v0 + 296);
  unint64_t v12 = *(void *)(v0 + 304);
  (*(void (**)(void, void))(v0 + 240))(*(void *)(v0 + 184), *(void *)(v0 + 168));
  sub_100012670(v13, v12);
  sub_100012670(v10, v11);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 336) = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1003BBF8C;
  uint64_t v15 = *(void *)(v0 + 312);
  uint64_t v16 = *(void *)(v0 + 320);
  uint64_t v17 = *(void *)(v0 + 296);
  uint64_t v18 = *(void *)(v0 + 304);
  uint64_t v19 = *(void *)(v0 + 160);
  return sub_1003BC4B0(v19, v17, v18, v15, v16, 1);
}

uint64_t sub_1003BBEEC()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_release();
  sub_1003C1E40(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1003BBF8C(uint64_t a1, uint64_t a2, int a3)
{
  os_log_type_t v5 = (void *)*v4;
  id v6 = (void *)*v4;
  v6[43] = a1;
  v6[44] = a2;
  *((_DWORD *)v6 + 92) = a3;
  v6[45] = v3;
  swift_task_dealloc();
  unint64_t v7 = v5[38];
  uint64_t v8 = v5[37];
  sub_100013510(v5[39], v5[40]);
  sub_100013510(v8, v7);
  if (v3) {
    uint64_t v9 = sub_1003BC3E8;
  }
  else {
    uint64_t v9 = sub_1003BC118;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_1003BC118()
{
  uint64_t v1 = *(void *)(v0 + 312);
  unint64_t v2 = *(void *)(v0 + 320);
  sub_100012670(*(void *)(v0 + 296), *(void *)(v0 + 304));
  sub_100012670(v1, v2);
  if (qword_10065B130 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(v0 + 360);
  unint64_t v4 = sub_1004E2C70(*(void *)(v0 + 296), *(void *)(v0 + 304), *(void *)(v0 + 312), *(void *)(v0 + 320), *(void *)(v0 + 344), *(void *)(v0 + 352), *(_DWORD *)(v0 + 368), 0, 0xE000000000000000, *(void **)(v0 + 216));
  uint64_t v6 = *(void *)(v0 + 344);
  unint64_t v5 = *(void *)(v0 + 352);
  uint64_t v8 = *(void *)(v0 + 312);
  unint64_t v7 = *(void *)(v0 + 320);
  uint64_t v10 = *(void *)(v0 + 296);
  unint64_t v9 = *(void *)(v0 + 304);
  if (v3)
  {
    sub_1003C1E40(*(void *)(v0 + 160));
    sub_100013510(v8, v7);
    sub_100013510(v10, v9);
    sub_100013510(v6, v5);
    sub_100013510(v10, v9);
    sub_100013510(v8, v7);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  else
  {
    unint64_t v13 = v4;
    sub_1003C1E40(*(void *)(v0 + 160));
    sub_100013510(v8, v7);
    sub_100013510(v10, v9);
    sub_100013510(v6, v5);
    sub_100013510(v10, v9);
    sub_100013510(v8, v7);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(unint64_t))(v0 + 8);
    return v14(v13);
  }
}

uint64_t sub_1003BC35C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003BC3E8()
{
  uint64_t v1 = v0[39];
  unint64_t v2 = v0[40];
  uint64_t v4 = v0[37];
  unint64_t v3 = v0[38];
  uint64_t v5 = v0[20];
  swift_release();
  sub_100013510(v4, v3);
  sub_100013510(v1, v2);
  sub_1003C1E40(v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1003BC4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v7 + 129) = a6;
  *(void *)(v7 + 440) = a5;
  *(void *)(v7 + 448) = v6;
  *(void *)(v7 + 424) = a3;
  *(void *)(v7 + 432) = a4;
  *(void *)(v7 + 408) = a1;
  *(void *)(v7 + 416) = a2;
  uint64_t v8 = type metadata accessor for Logger();
  *(void *)(v7 + 456) = v8;
  *(void *)(v7 + 464) = *(void *)(v8 - 8);
  *(void *)(v7 + 472) = swift_task_alloc();
  *(void *)(v7 + 480) = swift_task_alloc();
  *(void *)(v7 + 488) = swift_task_alloc();
  *(void *)(v7 + 496) = swift_task_alloc();
  *(void *)(v7 + 504) = swift_task_alloc();
  sub_1000172F8(&qword_10065C3C0);
  *(void *)(v7 + 512) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for URL();
  *(void *)(v7 + 520) = v9;
  *(void *)(v7 + 528) = *(void *)(v9 - 8);
  *(void *)(v7 + 536) = swift_task_alloc();
  return _swift_task_switch(sub_1003BC63C, 0, 0);
}

uint64_t sub_1003BC63C()
{
  uint64_t v103 = v0;
  uint64_t v1 = v0[66];
  uint64_t v2 = v0[65];
  uint64_t v3 = v0[64];
  uint64_t v4 = v0[51];
  uint64_t v5 = v4 + *(int *)(type metadata accessor for ConfigurationBag(0) + 20);
  uint64_t v6 = type metadata accessor for ConfigurationBag.LicenseConfiguration(0);
  sub_10001893C(v5 + *(int *)(v6 + 20), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    sub_10001729C(v0[64], &qword_10065C3C0);
    type metadata accessor for InternalError();
    sub_10019FE50();
    swift_allocError();
    *uint64_t v7 = 0x6C6177656E6572;
    v7[1] = 0xE700000000000000;
    _OWORD v7[2] = 0xD000000000000020;
    v7[3] = 0x80000001005BEB20;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v78 = (uint64_t (*)(void))v0[1];
    return v78();
  }
  uint64_t v8 = (uint64_t)(v0 + 23);
  uint64_t v88 = (uint64_t)(v0 + 46);
  uint64_t v9 = v0[56];
  (*(void (**)(void, void, void))(v0[66] + 32))(v0[67], v0[64], v0[65]);
  uint64_t v10 = *(void **)v9;
  v0[68] = *(void *)v9;
  sub_10019B17C((uint64_t)(v10 + 7), (uint64_t)(v0 + 23));
  uint64_t v11 = v10[2];
  unint64_t v12 = v10[3];
  uint64_t v89 = v0;
  char v13 = *(unsigned char *)(v9 + 8);
  uint64_t v14 = *(void **)(v9 + 16);
  v89[69] = v14;
  uint64_t v15 = self;
  swift_bridgeObjectRetain();
  id v16 = v14;
  id v17 = [v15 ephemeralSessionConfiguration];
  [v17 setHTTPShouldSetCookies:0];
  [v17 setHTTPCookieAcceptPolicy:1];
  [v17 setRequestCachePolicy:1];
  sub_100373694(1);
  id v18 = [self sessionWithConfiguration:v17];

  type metadata accessor for PlainHTTP();
  uint64_t v19 = swift_allocObject();
  *(unsigned char *)(v19 + 24) = 0;
  *(void *)(v19 + 16) = v18;
  type metadata accessor for DecoratedHTTP();
  v89[70] = swift_initStackObject();
  char v20 = v13;
  uint64_t v21 = v89;
  v89[71] = sub_1002C20CC(v19, v8, v11, v12, v20, v16);
  static Logger.ald.getter();
  v89[46] = *(void *)(v9 + 24);
  v89[72] = *(void *)(v9 + 32);
  id v22 = v16;
  swift_retain();
  sub_1003C1E9C(v88);
  swift_retain();
  id v23 = v22;
  swift_retain();
  sub_1003C1E9C(v88);
  swift_retain();
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    os_log_type_t v84 = v25;
    log = v24;
    uint64_t v87 = v10;
    uint64_t v26 = swift_slowAlloc();
    os_log_type_t v27 = (void *)swift_slowAlloc();
    uint64_t v101 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 138412546;
    v89[45] = v23;
    id v28 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v27 = v23;

    uint64_t v83 = v28;
    uint64_t v85 = (uint8_t *)v26;
    *(_WORD *)(v26 + 12) = 2082;
    swift_beginAccess();
    uint64_t v29 = v10[4];
    int64_t v30 = *(void *)(v29 + 16);
    os_log_t v31 = _swiftEmptyArrayStorage;
    if (v30)
    {
      v102[0] = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      uint64_t v32 = v102;
      sub_100455C1C(0, v30, 0);
      uint64_t v33 = (void *)v102[0];
      int64_t v35 = sub_100257AF4(v29);
      uint64_t v91 = v29 + 56;
      char v37 = v36 & 1;
      uint64_t v90 = v29;
      while ((v35 & 0x8000000000000000) == 0 && v35 < 1 << *(unsigned char *)(v29 + 32))
      {
        if (((*(void *)(v91 + (((unint64_t)v35 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v35) & 1) == 0) {
          goto LABEL_38;
        }
        if (*(_DWORD *)(v29 + 36) != v34) {
          goto LABEL_39;
        }
        int v92 = v34;
        char v93 = v37;
        int64_t v38 = *(void *)(v29 + 48) + (v35 << 6);
        uint64_t v39 = *(void *)(v38 + 8);
        uint64_t v40 = *(void *)(v38 + 16);
        uint64_t v41 = *(void *)(v38 + 32);
        unint64_t v96 = *(void **)v38;
        uint64_t v97 = v39;
        v89[47] = v40;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v42._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v42);
        swift_bridgeObjectRelease();
        v43._countAndFlagsBits = 58;
        v43._object = (void *)0xE100000000000000;
        String.append(_:)(v43);
        v89[48] = v41;
        v44._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v32 = &v96;
        String.append(_:)(v44);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v45 = v96;
        uint64_t v46 = v97;
        v102[0] = v33;
        unint64_t v48 = v33[2];
        unint64_t v47 = v33[3];
        uint64_t v21 = (void *)(v48 + 1);
        if (v48 >= v47 >> 1)
        {
          uint64_t v32 = v102;
          sub_100455C1C(v47 > 1, v48 + 1, 1);
          uint64_t v33 = (void *)v102[0];
        }
        v33[2] = v21;
        uint64_t v49 = &v33[2 * v48];
        v49[4] = v45;
        v49[5] = v46;
        uint64_t v29 = v90;
        int64_t v50 = sub_100257AF8(v35, v92, v93 & 1, v90);
        int64_t v35 = v50;
        char v37 = v51 & 1;
        if (!--v30)
        {
          os_log_t v31 = v33;
          sub_1000162C0(v50, v34, v37);
          swift_bridgeObjectRelease();
          uint64_t v21 = v89;
          goto LABEL_15;
        }
      }
      goto LABEL_37;
    }
LABEL_15:
    uint64_t v94 = v21[63];
    uint64_t v56 = v21[57];
    uint64_t v57 = v21[58];
    v21[49] = v31;
    sub_1000172F8((uint64_t *)&unk_10065C5D0);
    sub_10017B8C8();
    uint64_t v58 = BidirectionalCollection<>.joined(separator:)();
    unint64_t v60 = v59;
    swift_bridgeObjectRelease();
    v89[50] = sub_1000143F4(v58, v60, &v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_release();
    uint64_t v10 = v87;
    uint64_t v21 = v89;
    swift_bridgeObjectRelease();
    sub_1003C1EC8(v88);

    swift_release();
    swift_release();
    sub_1003C1EC8(v88);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, log, v84, "[%@] Renewing licenses for apps: %{public}s", v85, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
    v55(v94, v56);
  }
  else
  {
    uint64_t v52 = v89[63];
    uint64_t v53 = v89[57];
    uint64_t v54 = v89[58];
    swift_release();

    sub_1003C1EC8(v88);
    swift_release();
    swift_release();
    sub_1003C1EC8(v88);

    swift_release();
    uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
    v55(v52, v53);
  }
  v21[73] = v55;
  swift_beginAccess();
  uint64_t v61 = v10[4];
  int64_t v62 = *(void *)(v61 + 16);
  uint64_t v32 = _swiftEmptyArrayStorage;
  if (!v62)
  {
LABEL_26:
    if (qword_10065B130 == -1) {
      goto LABEL_27;
    }
    goto LABEL_40;
  }
  unint64_t v96 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  sub_100455E78(0, v62, 0);
  uint64_t v32 = v96;
  int64_t v63 = sub_100257AF4(v61);
  int v65 = v64;
  char v67 = v66 & 1;
  uint64_t v21 = (void *)(v61 + 56);
  while ((v63 & 0x8000000000000000) == 0 && v63 < 1 << *(unsigned char *)(v61 + 32))
  {
    if (((*(void *)((char *)v21 + (((unint64_t)v63 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v63) & 1) == 0) {
      goto LABEL_35;
    }
    if (*(_DWORD *)(v61 + 36) != v65) {
      goto LABEL_36;
    }
    uint64_t v68 = *(void *)(*(void *)(v61 + 48) + (v63 << 6) + 32);
    unint64_t v96 = v32;
    unint64_t v70 = v32[2];
    unint64_t v69 = v32[3];
    if (v70 >= v69 >> 1)
    {
      sub_100455E78(v69 > 1, v70 + 1, 1);
      uint64_t v32 = v96;
    }
    v32[2] = v70 + 1;
    v32[v70 + 4] = v68;
    int64_t v71 = sub_100257AF8(v63, v65, v67 & 1, v61);
    int64_t v63 = v71;
    int v65 = v72;
    char v67 = v73 & 1;
    if (!--v62)
    {
      sub_1000162C0(v71, v72, v73 & 1);
      swift_bridgeObjectRelease();
      uint64_t v21 = v89;
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  swift_once();
LABEL_27:
  sub_1004E27F8((uint64_t)v32, 1, v21[52], v21[53], v21[54], v21[55]);
  uint64_t v74 = v96;
  uint64_t v75 = v97;
  uint64_t v76 = v98;
  uint64_t v77 = v99;
  *((_DWORD *)v21 + 33) = v100;
  swift_bridgeObjectRelease();
  v21[20] = &type metadata for LicenseRenewalRequest;
  v21[21] = sub_1003C1EF4();
  uint64_t v80 = swift_allocObject();
  v21[17] = v80;
  *(void *)(v80 + 16) = v74;
  *(void *)(v80 + 24) = v75;
  *(void *)(v80 + 32) = v76;
  *(void *)(v80 + 40) = v77;
  *(void *)(v80 + 48) = 0;
  *(unsigned char *)(v80 + 56) = 1;
  *((unsigned char *)v21 + 176) = 0;
  sub_1002C66D0((uint64_t)(v21 + 17), (uint64_t)(v21 + 11));
  uint64_t v95 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, char))((char *)&dword_10065F848 + dword_10065F848);
  uint64_t v81 = (void *)swift_task_alloc();
  v21[74] = v81;
  void *v81 = v21;
  v81[1] = sub_1003BD15C;
  uint64_t v82 = v21[67];
  return v95(v82, 1, (uint64_t)(v21 + 11), 0, 1);
}

uint64_t sub_1003BD15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[75] = a1;
  v5[76] = a2;
  v5[77] = a3;
  v5[78] = v3;
  swift_task_dealloc();
  sub_10001729C((uint64_t)(v5 + 11), &qword_10065B8E8);
  if (v3)
  {
    uint64_t v6 = sub_1003BDBE0;
  }
  else
  {
    sub_1002C672C((uint64_t)(v5 + 17));
    uint64_t v6 = sub_1003BD2B4;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_1003BD2B4()
{
  uint64_t v70 = v0;
  if ([*(id *)(v0 + 616) statusCode] != (id)200)
  {
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 744) = v7;
    *uint64_t v7 = v0;
    uint64_t v8 = sub_1003BEB08;
LABEL_7:
    v7[1] = v8;
    char v9 = *(unsigned char *)(v0 + 129);
    return sub_1003BF8FC(v9);
  }
  uint64_t v1 = *(void *)(v0 + 624);
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_1003C1F88();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 616);
    unint64_t v3 = *(void *)(v0 + 608);
    uint64_t v4 = *(void *)(v0 + 600);
    (*(void (**)(void, void))(*(void *)(v0 + 528) + 8))(*(void *)(v0 + 536), *(void *)(v0 + 520));

    swift_release();
    sub_100013510(v4, v3);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  swift_release();
  uint64_t v10 = *(void **)(v0 + 288);
  uint64_t v11 = Data.init(base64Encoded:options:)();
  *(void *)(v0 + 632) = v11;
  *(void *)(v0 + 640) = v12;
  if (v12 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 696) = v7;
    *uint64_t v7 = v0;
    uint64_t v8 = sub_1003BE3C8;
    goto LABEL_7;
  }
  unint64_t v61 = v12;
  uint64_t v62 = v11;
  if (v10)
  {
    char v13 = *(void **)(v0 + 552);
    uint64_t v68 = v10;
    swift_bridgeObjectRelease();
    static Logger.ald.getter();
    id v14 = v13;
    swift_bridgeObjectRetain();
    id v15 = v14;
    swift_retain();
    sub_1003C1E9C(v0 + 368);
    swift_retain();
    swift_bridgeObjectRetain();
    id v16 = Logger.logObject.getter();
    os_log_type_t type = static os_log_type_t.error.getter();
    BOOL v17 = os_log_type_enabled(v16, type);
    id v18 = *(void (**)(uint64_t, uint64_t))(v0 + 584);
    uint64_t v19 = *(void **)(v0 + 552);
    uint64_t v64 = *(void *)(v0 + 456);
    uint64_t v66 = *(void *)(v0 + 496);
    if (v17)
    {
      log = v16;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = (void *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 138412546;
      *(void *)(v0 + 336) = v19;
      id v22 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v21 = v19;
      swift_release();

      sub_1003C1EC8(v0 + 368);
      swift_release();
      *(_WORD *)(v20 + 12) = 2082;
      *(void *)(v0 + 344) = v10;
      sub_1000172F8((uint64_t *)&unk_10065C5D0);
      sub_10017B8C8();
      uint64_t v23 = BidirectionalCollection<>.joined(separator:)();
      *(void *)(v0 + 352) = sub_1000143F4(v23, v24, &v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, log, type, "[%@] Licenses ineligible for renewal: %{public}s", (uint8_t *)v20, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v18(v66, v64);
    }
    else
    {
      swift_release();

      sub_1003C1EC8(v0 + 368);
      swift_bridgeObjectRelease_n();
      swift_release();
      v18(v66, v64);
    }
    uint64_t v32 = *(void *)(*(void *)(v0 + 544) + 32);
    uint64_t v33 = *(void *)(v32 + 56);
    uint64_t v63 = v32 + 56;
    uint64_t v34 = -1;
    uint64_t v35 = -1 << *(unsigned char *)(v32 + 32);
    if (-v35 < 64) {
      uint64_t v34 = ~(-1 << -(char)v35);
    }
    unint64_t v36 = v34 & v33;
    int64_t v65 = (unint64_t)(63 - v35) >> 6;
    uint64_t v67 = *(void *)(*(void *)(v0 + 544) + 32);
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v37 = 0;
    *(void *)typea = v10 + 9;
    while (1)
    {
      if (v36)
      {
        unint64_t v38 = __clz(__rbit64(v36));
        v36 &= v36 - 1;
        unint64_t v39 = v38 | (v37 << 6);
      }
      else
      {
        int64_t v40 = v37 + 1;
        if (__OFADD__(v37, 1)) {
          goto LABEL_63;
        }
        if (v40 >= v65)
        {
LABEL_61:
          unint64_t v53 = *(void *)(v0 + 608);
          uint64_t v54 = *(void *)(v0 + 600);
          uint64_t v55 = *(void *)(v0 + 536);
          uint64_t v56 = *(void *)(v0 + 528);
          uint64_t v57 = *(void *)(v0 + 520);

          sub_100013510(v54, v53);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
          goto LABEL_16;
        }
        unint64_t v41 = *(void *)(v63 + 8 * v40);
        ++v37;
        if (!v41)
        {
          int64_t v37 = v40 + 1;
          if (v40 + 1 >= v65) {
            goto LABEL_61;
          }
          unint64_t v41 = *(void *)(v63 + 8 * v37);
          if (!v41)
          {
            int64_t v37 = v40 + 2;
            if (v40 + 2 >= v65) {
              goto LABEL_61;
            }
            unint64_t v41 = *(void *)(v63 + 8 * v37);
            if (!v41)
            {
              int64_t v42 = v40 + 3;
              if (v42 >= v65) {
                goto LABEL_61;
              }
              unint64_t v41 = *(void *)(v63 + 8 * v42);
              if (!v41)
              {
                while (1)
                {
                  int64_t v37 = v42 + 1;
                  if (__OFADD__(v42, 1)) {
                    goto LABEL_64;
                  }
                  if (v37 >= v65) {
                    goto LABEL_61;
                  }
                  unint64_t v41 = *(void *)(v63 + 8 * v37);
                  ++v42;
                  if (v41) {
                    goto LABEL_39;
                  }
                }
              }
              int64_t v37 = v42;
            }
          }
        }
LABEL_39:
        unint64_t v36 = (v41 - 1) & v41;
        unint64_t v39 = __clz(__rbit64(v41)) + (v37 << 6);
      }
      *(void *)(v0 + 320) = *(void *)(*(void *)(v67 + 48) + (v39 << 6) + 32);
      uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v45 = v44;
      uint64_t v46 = v10[2];
      if (v46)
      {
        uint64_t v47 = v43;
        BOOL v48 = v68[4] == v43 && v68[5] == v44;
        if (v48 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
LABEL_60:
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v7 = (void *)swift_task_alloc();
          *(void *)(v0 + 648) = v7;
          *uint64_t v7 = v0;
          uint64_t v8 = sub_1003BDCD0;
          goto LABEL_7;
        }
        if (v46 != 1)
        {
          if (v68[6] == v47 && v68[7] == v45) {
            goto LABEL_60;
          }
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if (result) {
            goto LABEL_60;
          }
          if (v46 != 2) {
            break;
          }
        }
      }
LABEL_23:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = v68;
    }
    uint64_t v49 = *(void **)typea;
    uint64_t v50 = 2;
    while (1)
    {
      uint64_t v51 = v50 + 1;
      if (__OFADD__(v50, 1)) {
        break;
      }
      if (*(v49 - 1) == v47 && *v49 == v45) {
        goto LABEL_60;
      }
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      if (result) {
        goto LABEL_60;
      }
      ++v50;
      v49 += 2;
      if (v51 == v46) {
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
  }
  else
  {
    unint64_t v25 = *(void *)(v0 + 608);
    uint64_t v26 = *(void *)(v0 + 600);
    uint64_t v27 = *(void *)(v0 + 536);
    uint64_t v28 = *(void *)(v0 + 528);
    uint64_t v29 = *(void *)(v0 + 520);

    sub_100013510(v26, v25);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
LABEL_16:
    uint64_t v30 = *(unsigned int *)(v0 + 132);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_t v31 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v0 + 8);
    return v31(v62, v61, v30);
  }
  return result;
}

uint64_t sub_1003BDBE0()
{
  uint64_t v1 = v0[67];
  uint64_t v2 = v0[66];
  uint64_t v3 = v0[65];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_1002C672C((uint64_t)(v0 + 17));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1003BDCD0(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 656) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1003BF6CC;
  }
  else
  {
    *(unsigned char *)(v4 + 130) = a1 & 1;
    uint64_t v5 = sub_1003BDDFC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003BDDFC()
{
  if (*(unsigned char *)(v0 + 130) == 1)
  {
    uint64_t v1 = *(void **)(v0 + 552);
    static Logger.ald.getter();
    id v2 = v1;
    swift_retain();
    sub_1003C1E9C(v0 + 368);
    swift_retain();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    BOOL v5 = os_log_type_enabled(v3, v4);
    uint64_t v6 = *(void **)(v0 + 552);
    if (v5)
    {
      unint64_t v24 = v3;
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      *(void *)(v0 + 328) = v6;
      id v9 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v8 = v6;
      swift_release();

      uint64_t v3 = v24;
      sub_1003C1EC8(v0 + 368);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v24, v4, "[%@] Re-attempting license renewal after showing resolution sheet for ineligible license", v7, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release();

      sub_1003C1EC8(v0 + 368);
      swift_release();
    }

    (*(void (**)(void, void))(v0 + 584))(*(void *)(v0 + 488), *(void *)(v0 + 456));
    id v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 664) = v18;
    *id v18 = v0;
    v18[1] = sub_1003BE150;
    uint64_t v19 = *(void *)(v0 + 440);
    uint64_t v20 = *(void *)(v0 + 424);
    uint64_t v21 = *(void *)(v0 + 432);
    uint64_t v23 = *(void *)(v0 + 408);
    uint64_t v22 = *(void *)(v0 + 416);
    return sub_1003BC4B0(v23, v22, v20, v21, v19, 0);
  }
  else
  {
    uint64_t v10 = *(void **)(v0 + 616);
    unint64_t v11 = *(void *)(v0 + 608);
    uint64_t v12 = *(void *)(v0 + 600);
    (*(void (**)(void, void))(*(void *)(v0 + 528) + 8))(*(void *)(v0 + 536), *(void *)(v0 + 520));

    sub_100013510(v12, v11);
    swift_release();
    uint64_t v13 = *(void *)(v0 + 640);
    uint64_t v14 = *(void *)(v0 + 632);
    uint64_t v15 = *(unsigned int *)(v0 + 132);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8);
    return v16(v14, v13, v15);
  }
}

uint64_t sub_1003BE150(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v8 = *v4;
  *(void *)(*v4 + 672) = v3;
  swift_task_dealloc();
  if (v3)
  {
    id v9 = sub_1003BF7E4;
  }
  else
  {
    *(_DWORD *)(v8 + 180) = a3;
    *(void *)(v8 + 680) = a2;
    *(void *)(v8 + 688) = a1;
    id v9 = sub_1003BE290;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_1003BE290()
{
  unint64_t v1 = *(void *)(v0 + 640);
  uint64_t v2 = *(void *)(v0 + 632);
  unint64_t v3 = *(void *)(v0 + 608);
  uint64_t v4 = *(void *)(v0 + 600);
  uint64_t v5 = *(void *)(v0 + 536);
  uint64_t v6 = *(void *)(v0 + 528);
  uint64_t v7 = *(void *)(v0 + 520);

  sub_100013510(v4, v3);
  swift_release();
  sub_10018AE44(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  uint64_t v8 = *(void *)(v0 + 688);
  uint64_t v9 = *(void *)(v0 + 680);
  uint64_t v10 = *(unsigned int *)(v0 + 180);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8);
  return v11(v8, v9, v10);
}

uint64_t sub_1003BE3C8(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 704) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1003BF4C4;
  }
  else
  {
    *(unsigned char *)(v4 + 131) = a1 & 1;
    uint64_t v5 = sub_1003BE4F4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003BE4F4()
{
  if (*(unsigned char *)(v0 + 131) == 1)
  {
    uint64_t v1 = *(void **)(v0 + 552);
    static Logger.ald.getter();
    id v2 = v1;
    swift_retain();
    sub_1003C1E9C(v0 + 368);
    swift_retain();
    unint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    BOOL v5 = os_log_type_enabled(v3, v4);
    uint64_t v6 = *(void **)(v0 + 552);
    if (v5)
    {
      uint64_t v25 = v3;
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      *(void *)(v0 + 312) = v6;
      id v9 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v8 = v6;
      swift_release();

      unint64_t v3 = v25;
      sub_1003C1EC8(v0 + 368);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v25, v4, "[%@] Re-attempting license renewal after showing resolution sheet for invalid response", v7, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release();

      sub_1003C1EC8(v0 + 368);
      swift_release();
    }

    (*(void (**)(void, void))(v0 + 584))(*(void *)(v0 + 480), *(void *)(v0 + 456));
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 712) = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_1003BE8A4;
    uint64_t v20 = *(void *)(v0 + 440);
    uint64_t v21 = *(void *)(v0 + 424);
    uint64_t v22 = *(void *)(v0 + 432);
    uint64_t v24 = *(void *)(v0 + 408);
    uint64_t v23 = *(void *)(v0 + 416);
    return sub_1003BC4B0(v24, v23, v21, v22, v20, 0);
  }
  else
  {
    uint64_t v10 = *(void **)(v0 + 616);
    unint64_t v11 = *(void *)(v0 + 608);
    uint64_t v12 = *(void *)(v0 + 600);
    uint64_t v13 = *(void *)(v0 + 536);
    uint64_t v14 = *(void *)(v0 + 528);
    uint64_t v15 = *(void *)(v0 + 520);
    type metadata accessor for InternalError();
    sub_10019FE50();
    swift_allocError();
    void *v16 = 0x77656E6572;
    v16[1] = 0xE500000000000000;
    v16[2] = 0xD00000000000001BLL;
    v16[3] = 0x80000001005BEB70;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    sub_100013510(v12, v11);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    BOOL v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_1003BE8A4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v8 = *v4;
  *(void *)(*v4 + 720) = v3;
  swift_task_dealloc();
  if (v3)
  {
    id v9 = sub_1003BF5C8;
  }
  else
  {
    *(_DWORD *)(v8 + 792) = a3;
    *(void *)(v8 + 728) = a2;
    *(void *)(v8 + 736) = a1;
    id v9 = sub_1003BE9E4;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_1003BE9E4()
{
  unint64_t v1 = *(void *)(v0 + 608);
  uint64_t v2 = *(void *)(v0 + 600);
  uint64_t v3 = *(void *)(v0 + 536);
  uint64_t v4 = *(void *)(v0 + 528);
  uint64_t v5 = *(void *)(v0 + 520);

  sub_100013510(v2, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v0 + 736);
  uint64_t v7 = *(void *)(v0 + 728);
  uint64_t v8 = *(unsigned int *)(v0 + 792);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8);
  return v9(v6, v7, v8);
}

uint64_t sub_1003BEB08(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 752) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1003BF2BC;
  }
  else
  {
    *(unsigned char *)(v4 + 177) = a1 & 1;
    uint64_t v5 = sub_1003BEC34;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003BEC34()
{
  if (*(unsigned char *)(v0 + 177) == 1)
  {
    uint64_t v1 = *(void **)(v0 + 552);
    static Logger.ald.getter();
    id v2 = v1;
    swift_retain();
    sub_1003C1E9C(v0 + 368);
    swift_retain();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    BOOL v5 = os_log_type_enabled(v3, v4);
    uint64_t v6 = *(void **)(v0 + 552);
    if (v5)
    {
      uint64_t v26 = v3;
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      *(void *)(v0 + 296) = v6;
      id v9 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v8 = v6;
      swift_release();

      uint64_t v3 = v26;
      sub_1003C1EC8(v0 + 368);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v26, v4, "[%@] Re-attempting license renewal after showing resolution sheet for invalid status code", v7, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release();

      sub_1003C1EC8(v0 + 368);
      swift_release();
    }

    (*(void (**)(void, void))(v0 + 584))(*(void *)(v0 + 472), *(void *)(v0 + 456));
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 760) = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_1003BF058;
    uint64_t v20 = *(void *)(v0 + 440);
    uint64_t v21 = *(void *)(v0 + 424);
    uint64_t v22 = *(void *)(v0 + 432);
    uint64_t v24 = *(void *)(v0 + 408);
    uint64_t v23 = *(void *)(v0 + 416);
    return sub_1003BC4B0(v24, v23, v21, v22, v20, 0);
  }
  else
  {
    uint64_t v10 = *(void **)(v0 + 616);
    unint64_t v11 = *(void *)(v0 + 608);
    uint64_t v12 = *(void *)(v0 + 600);
    uint64_t v27 = *(void *)(v0 + 536);
    uint64_t v13 = *(void *)(v0 + 528);
    uint64_t v25 = *(void *)(v0 + 520);
    type metadata accessor for InternalError();
    sub_10019FE50();
    swift_allocError();
    uint64_t v15 = v14;
    _StringGuts.grow(_:)(23);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 304) = [v10 statusCode];
    v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    *uint64_t v15 = 0x77656E6572;
    v15[1] = 0xE500000000000000;
    v15[2] = 0xD000000000000015;
    v15[3] = 0x80000001005BEB50;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    sub_100013510(v12, v11);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v27, v25);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    BOOL v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_1003BF058(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v8 = *v4;
  *(void *)(*v4 + 768) = v3;
  swift_task_dealloc();
  if (v3)
  {
    id v9 = sub_1003BF3C0;
  }
  else
  {
    *(_DWORD *)(v8 + 796) = a3;
    *(void *)(v8 + 776) = a2;
    *(void *)(v8 + 784) = a1;
    id v9 = sub_1003BF198;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_1003BF198()
{
  unint64_t v1 = *(void *)(v0 + 608);
  uint64_t v2 = *(void *)(v0 + 600);
  uint64_t v3 = *(void *)(v0 + 536);
  uint64_t v4 = *(void *)(v0 + 528);
  uint64_t v5 = *(void *)(v0 + 520);

  sub_100013510(v2, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v0 + 784);
  uint64_t v7 = *(void *)(v0 + 776);
  uint64_t v8 = *(unsigned int *)(v0 + 796);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8);
  return v9(v6, v7, v8);
}

uint64_t sub_1003BF2BC()
{
  unint64_t v1 = *(void *)(v0 + 608);
  uint64_t v2 = *(void *)(v0 + 600);
  uint64_t v3 = *(void *)(v0 + 536);
  uint64_t v4 = *(void *)(v0 + 528);
  uint64_t v5 = *(void *)(v0 + 520);

  sub_100013510(v2, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1003BF3C0()
{
  unint64_t v1 = *(void *)(v0 + 608);
  uint64_t v2 = *(void *)(v0 + 600);
  uint64_t v3 = *(void *)(v0 + 536);
  uint64_t v4 = *(void *)(v0 + 528);
  uint64_t v5 = *(void *)(v0 + 520);

  sub_100013510(v2, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1003BF4C4()
{
  unint64_t v1 = *(void *)(v0 + 608);
  uint64_t v2 = *(void *)(v0 + 600);
  uint64_t v3 = *(void *)(v0 + 536);
  uint64_t v4 = *(void *)(v0 + 528);
  uint64_t v5 = *(void *)(v0 + 520);

  sub_100013510(v2, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1003BF5C8()
{
  unint64_t v1 = *(void *)(v0 + 608);
  uint64_t v2 = *(void *)(v0 + 600);
  uint64_t v3 = *(void *)(v0 + 536);
  uint64_t v4 = *(void *)(v0 + 528);
  uint64_t v5 = *(void *)(v0 + 520);

  sub_100013510(v2, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1003BF6CC()
{
  unint64_t v1 = *(void *)(v0 + 640);
  uint64_t v2 = *(void *)(v0 + 632);
  unint64_t v3 = *(void *)(v0 + 608);
  uint64_t v4 = *(void *)(v0 + 600);
  uint64_t v5 = *(void *)(v0 + 536);
  uint64_t v6 = *(void *)(v0 + 528);
  uint64_t v7 = *(void *)(v0 + 520);

  sub_100013510(v4, v3);
  swift_release();
  sub_10018AE44(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1003BF7E4()
{
  unint64_t v1 = *(void *)(v0 + 640);
  uint64_t v2 = *(void *)(v0 + 632);
  unint64_t v3 = *(void *)(v0 + 608);
  uint64_t v4 = *(void *)(v0 + 600);
  uint64_t v5 = *(void *)(v0 + 536);
  uint64_t v6 = *(void *)(v0 + 528);
  uint64_t v7 = *(void *)(v0 + 520);

  sub_100013510(v4, v3);
  swift_release();
  sub_10018AE44(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1003BF8FC(char a1)
{
  *(void *)(v2 + 472) = v1;
  *(unsigned char *)(v2 + 81) = a1;
  uint64_t v3 = type metadata accessor for LicenseResolutionRequest();
  *(void *)(v2 + 480) = v3;
  *(void *)(v2 + 488) = *(void *)(v3 - 8);
  *(void *)(v2 + 496) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for LicenseResolutionContext();
  *(void *)(v2 + 504) = v4;
  *(void *)(v2 + 512) = *(void *)(v4 - 8);
  *(void *)(v2 + 520) = swift_task_alloc();
  *(void *)(v2 + 528) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Logger();
  *(void *)(v2 + 536) = v5;
  *(void *)(v2 + 544) = *(void *)(v5 - 8);
  *(void *)(v2 + 552) = swift_task_alloc();
  *(void *)(v2 + 560) = swift_task_alloc();
  *(void *)(v2 + 568) = swift_task_alloc();
  *(void *)(v2 + 576) = swift_task_alloc();
  *(void *)(v2 + 584) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URL();
  *(void *)(v2 + 592) = v6;
  *(void *)(v2 + 600) = *(void *)(v6 - 8);
  *(void *)(v2 + 608) = swift_task_alloc();
  *(void *)(v2 + 616) = swift_task_alloc();
  sub_1000172F8(&qword_10065C3C0);
  *(void *)(v2 + 624) = swift_task_alloc();
  *(void *)(v2 + 632) = swift_task_alloc();
  return _swift_task_switch(sub_1003BFB68, 0, 0);
}

uint64_t sub_1003BFB68()
{
  uint64_t v1 = *(void *)(v0 + 472);
  if ((*(unsigned char *)(v1 + 8) & 1) == 0)
  {
    uint64_t v2 = (void *)(v0 + 552);
    static Logger.ald.getter();
    uint64_t v3 = *(void **)(v1 + 16);
    *(void *)(v0 + 432) = *(void *)(v1 + 24);
    swift_retain_n();
    id v4 = v3;
    sub_1003C1E9C(v0 + 432);
    swift_retain();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      unint64_t v36 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      *(void *)(v0 + 424) = v4;
      id v8 = v4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v36 = v4;
      swift_release_n();

      uint64_t v2 = (void *)(v0 + 552);
      sub_1003C1EC8(v0 + 432);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%@] Not showing license resolution sheet as prompting not allowed", v7, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
LABEL_10:
      swift_slowDealloc();
LABEL_14:

      (*(void (**)(void, void))(*(void *)(v0 + 544) + 8))(*v2, *(void *)(v0 + 536));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
      return v21(0);
    }
    swift_release_n();

    uint64_t v20 = v0 + 432;
    goto LABEL_13;
  }
  uint64_t v9 = *(void *)v1;
  *(void *)(v0 + 640) = *(void *)v1;
  swift_beginAccess();
  uint64_t v10 = *(void *)(v9 + 32);
  if (*(void *)(v10 + 16) != 1)
  {
LABEL_8:
    uint64_t v2 = (void *)(v0 + 560);
    uint64_t v14 = *(void *)(v0 + 472);
    static Logger.ald.getter();
    uint64_t v15 = *(void **)(v14 + 16);
    *(void *)(v0 + 408) = *(void *)(v14 + 24);
    swift_retain_n();
    id v16 = v15;
    sub_1003C1E9C(v0 + 408);
    swift_retain();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = (void *)swift_slowAlloc();
      *(_DWORD *)id v18 = 138412290;
      *(void *)(v0 + 440) = v16;
      id v19 = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v35 = v16;
      swift_release_n();

      uint64_t v2 = (void *)(v0 + 560);
      sub_1003C1EC8(v0 + 408);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v5, v17, "[%@] Not showing license resolution sheet as this was a request for multiple apps", v18, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      goto LABEL_10;
    }
    swift_release_n();

    uint64_t v20 = v0 + 408;
LABEL_13:
    sub_1003C1EC8(v20);
    swift_release();
    goto LABEL_14;
  }
  uint64_t result = sub_100257AF4(*(void *)(v9 + 32));
  if (v13)
  {
LABEL_25:
    __break(1u);
    return result;
  }
  if (*(_DWORD *)(v10 + 36) != v12)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (result == 1 << *(unsigned char *)(v10 + 32)) {
    goto LABEL_8;
  }
  int v22 = *(unsigned __int8 *)(v0 + 81);
  sub_1003C1CC4(result, v12, v10, v0 + 304);
  if (v22 == 1
    && (uint64_t v23 = *(void *)(v0 + 632),
        uint64_t v24 = *(void *)(v0 + 600),
        uint64_t v25 = *(void *)(v0 + 592),
        sub_10001893C(v9 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon19LicenseRenewalBatch_resolutionURL, v23),
        LODWORD(v25) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v23, 1, v25),
        sub_10001729C(v23, &qword_10065C3C0),
        v25 != 1))
  {
    char v30 = 0;
    char v28 = 24;
    char v29 = 26;
    uint64_t v27 = 8;
    uint64_t v26 = 7;
  }
  else
  {
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    char v28 = 25;
    char v29 = -1;
    char v30 = 1;
  }
  uint64_t v32 = *(void *)(v0 + 352);
  uint64_t v31 = *(void *)(v0 + 360);
  *(unsigned char *)(v0 + 84) = v28;
  *(void *)(v0 + 672) = v32;
  *(void *)(v0 + 664) = v27;
  *(unsigned char *)(v0 + 83) = v29;
  *(unsigned char *)(v0 + 82) = v30;
  *(void *)(v0 + 656) = v26;
  *(void *)(v0 + 648) = v31;
  uint64_t v33 = *(void *)(v0 + 472);
  *(void *)(v0 + 16) = v32;
  *(void *)(v0 + 24) = v31;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(unsigned char *)(v0 + 80) = v28;
  *(void *)(v0 + 88) = v27;
  *(void *)(v0 + 144) = 0;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(unsigned char *)(v0 + 152) = 26;
  swift_bridgeObjectRetain();
  sub_1003C1FDC(v9, v0 + 232);
  *(void *)(v0 + 680) = *(void *)(v33 + 32);
  uint64_t v34 = (void *)swift_task_alloc();
  *(void *)(v0 + 688) = v34;
  *uint64_t v34 = v0;
  v34[1] = sub_1003C01A8;
  return sub_100560FFC(v0 + 232);
}

uint64_t sub_1003C01A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  os_log_type_t v6 = (void *)*v2;
  v3[87] = a1;
  v3[88] = a2;
  swift_task_dealloc();
  id v4 = (void *)swift_task_alloc();
  v3[89] = v4;
  *id v4 = v6;
  v4[1] = sub_1003C0300;
  return sub_100560FFC((uint64_t)(v3 + 2));
}

uint64_t sub_1003C0300(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  os_log_type_t v6 = (void *)*v2;
  v3[90] = a1;
  v3[91] = a2;
  swift_task_dealloc();
  id v4 = (void *)swift_task_alloc();
  v3[92] = v4;
  *id v4 = v6;
  v4[1] = sub_1003C0458;
  return sub_100560FFC((uint64_t)(v3 + 11));
}

uint64_t sub_1003C0458(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 744) = a1;
  *(void *)(v3 + 752) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_1003C055C, 0, 0);
}

uint64_t sub_1003C055C()
{
  if (*(unsigned char *)(v0 + 82))
  {
    uint64_t v1 = *(void *)(v0 + 752);
    uint64_t v2 = *(void *)(v0 + 744);
    long long v13 = *(_OWORD *)(v0 + 696);
    long long v14 = *(_OWORD *)(v0 + 720);
    char v15 = *(unsigned char *)(v0 + 84);
    uint64_t v3 = *(void *)(v0 + 672);
    uint64_t v4 = *(void *)(v0 + 664);
    unsigned __int8 v5 = *(unsigned char *)(v0 + 83);
    uint64_t v6 = *(void *)(v0 + 656);
    uint64_t v7 = *(void *)(v0 + 648);
    type metadata accessor for SystemAlert();
    uint64_t v8 = swift_allocObject();
    *(void *)(v0 + 784) = v8;
    *(_OWORD *)(v8 + 16) = v13;
    *(_OWORD *)(v8 + 32) = v14;
    *(void *)(v8 + 48) = v2;
    *(void *)(v8 + 56) = v1;
    *(void *)(v8 + 64) = 0;
    *(void *)(v8 + 72) = 0;
    *(_WORD *)(v8 + 80) = 0;
    sub_1003C20B4(v0 + 232);
    sub_1003C2100(v6, 0, 0, 0, 0, 0, 0, 0, v5);
    sub_10019C9FC(v4, 0, 0, 0, 0, 0, 0, 0, 26);
    sub_10019C9FC(v3, v7, 0, 0, 0, 0, 0, 0, v15);
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 792) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1003C0A5C;
    return sub_10042D9F4();
  }
  else
  {
    char v11 = *(unsigned char *)(v0 + 83);
    *(void *)(v0 + 160) = *(void *)(v0 + 656);
    *(_OWORD *)(v0 + 168) = 0u;
    *(_OWORD *)(v0 + 184) = 0u;
    *(_OWORD *)(v0 + 200) = 0u;
    *(void *)(v0 + 216) = 0;
    *(unsigned char *)(v0 + 224) = v11;
    int v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 760) = v12;
    *int v12 = v0;
    v12[1] = sub_1003C07A8;
    return sub_100560FFC(v0 + 160);
  }
}

uint64_t sub_1003C07A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 768) = a1;
  *(void *)(v3 + 776) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_1003C08AC, 0, 0);
}

uint64_t sub_1003C08AC()
{
  uint64_t v1 = *(void *)(v0 + 776);
  uint64_t v2 = *(void *)(v0 + 768);
  long long v12 = *(_OWORD *)(v0 + 720);
  long long v13 = *(_OWORD *)(v0 + 744);
  long long v11 = *(_OWORD *)(v0 + 696);
  char v14 = *(unsigned char *)(v0 + 84);
  uint64_t v3 = *(void *)(v0 + 672);
  uint64_t v4 = *(void *)(v0 + 664);
  unsigned __int8 v5 = *(unsigned char *)(v0 + 83);
  uint64_t v6 = *(void *)(v0 + 656);
  uint64_t v7 = *(void *)(v0 + 648);
  type metadata accessor for SystemAlert();
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 784) = v8;
  *(_OWORD *)(v8 + 16) = v11;
  *(_OWORD *)(v8 + 32) = v12;
  *(_OWORD *)(v8 + 48) = v13;
  *(void *)(v8 + 64) = v2;
  *(void *)(v8 + 72) = v1;
  *(_WORD *)(v8 + 80) = 0;
  sub_1003C20B4(v0 + 232);
  sub_1003C2100(v6, 0, 0, 0, 0, 0, 0, 0, v5);
  sub_10019C9FC(v4, 0, 0, 0, 0, 0, 0, 0, 26);
  sub_10019C9FC(v3, v7, 0, 0, 0, 0, 0, 0, v14);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 792) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1003C0A5C;
  return sub_10042D9F4();
}

uint64_t sub_1003C0A5C(char a1)
{
  *(unsigned char *)(*(void *)v1 + 85) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1003C0B5C, 0, 0);
}

uint64_t sub_1003C0B5C()
{
  if (*(unsigned char *)(v0 + 85))
  {
    uint64_t v1 = (void *)(v0 + 568);
    uint64_t v2 = *(void *)(v0 + 472);
    sub_100333AA4(v0 + 304);
    static Logger.ald.getter();
    uint64_t v3 = *(void **)(v2 + 16);
    *(void *)(v0 + 416) = *(void *)(v2 + 24);
    swift_retain();
    swift_retain();
    id v4 = v3;
    sub_1003C1E9C(v0 + 416);
    swift_retain();
    swift_retain();
    id v5 = v4;
    sub_1003C1E9C(v0 + 416);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      os_log_type_t type = v7;
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = (void *)swift_slowAlloc();
      buf = v8;
      *(_DWORD *)uint64_t v8 = 138412290;
      *(void *)(v0 + 448) = v5;
      id v10 = v5;
      uint64_t v1 = (void *)(v0 + 568);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v9 = v5;
      swift_release();

      sub_1003C1EC8(v0 + 416);
      swift_release();
      swift_release();

      sub_1003C1EC8(v0 + 416);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v6, type, "[%@] Ignored request to resolve license issue", buf, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release();
      swift_release();

      sub_1003C1EC8(v0 + 416);
      swift_release();
      swift_release();

      sub_1003C1EC8(v0 + 416);
    }
    swift_release();
LABEL_14:

    (*(void (**)(void, void))(*(void *)(v0 + 544) + 8))(*v1, *(void *)(v0 + 536));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21(0);
  }
  if (*(unsigned char *)(v0 + 81) != 1)
  {
    sub_100333AA4(v0 + 304);
    goto LABEL_10;
  }
  uint64_t v11 = *(void *)(v0 + 624);
  uint64_t v12 = *(void *)(v0 + 600);
  uint64_t v13 = *(void *)(v0 + 592);
  sub_1003C1824(v0 + 304, v11);
  sub_100333AA4(v0 + 304);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v11, 1, v13) == 1)
  {
    sub_10001729C(*(void *)(v0 + 624), &qword_10065C3C0);
LABEL_10:
    uint64_t v14 = *(void *)(v0 + 472);
    static Logger.ald.getter();
    uint64_t v15 = *(void **)(v14 + 16);
    *(void *)(v0 + 392) = *(void *)(v14 + 24);
    swift_retain();
    swift_retain();
    id v16 = v15;
    sub_1003C1E9C(v0 + 392);
    swift_retain();
    swift_retain();
    id v17 = v16;
    sub_1003C1E9C(v0 + 392);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v18))
    {
      os_log_type_t typea = v18;
      id v19 = (uint8_t *)swift_slowAlloc();
      int64_t v40 = (void *)swift_slowAlloc();
      bufa = v19;
      *(_DWORD *)id v19 = 138412290;
      *(void *)(v0 + 456) = v17;
      id v20 = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *int64_t v40 = v17;
      swift_release();

      sub_1003C1EC8(v0 + 392);
      swift_release();
      swift_release();

      sub_1003C1EC8(v0 + 392);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v6, typea, "[%@] Acknowledged developer interaction required alert", bufa, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release();
      swift_release();

      sub_1003C1EC8(v0 + 392);
      swift_release();
      swift_release();

      sub_1003C1EC8(v0 + 392);
    }
    swift_release();
    uint64_t v1 = (void *)(v0 + 576);
    goto LABEL_14;
  }
  uint64_t v23 = *(void *)(v0 + 472);
  (*(void (**)(void, void, void))(*(void *)(v0 + 600) + 32))(*(void *)(v0 + 616), *(void *)(v0 + 624), *(void *)(v0 + 592));
  static Logger.ald.getter();
  uint64_t v24 = *(void **)(v23 + 16);
  *(void *)(v0 + 400) = *(void *)(v23 + 24);
  swift_retain_n();
  id v25 = v24;
  sub_1003C1E9C(v0 + 400);
  swift_retain();
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    char v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = v26;
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)char v28 = 138412290;
    *(void *)(v0 + 464) = v25;
    id v30 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v31 = (void *)v29;
    uint64_t v26 = v46;
    void *v31 = v25;
    swift_release_n();

    sub_1003C1EC8(v0 + 400);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v46, v27, "[%@] Asked to resolve license issue", v28, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();

    sub_1003C1EC8(v0 + 400);
    swift_release();
  }

  uint64_t v32 = *(void *)(v0 + 616);
  uint64_t v33 = *(void *)(v0 + 608);
  uint64_t v34 = *(void *)(v0 + 600);
  uint64_t v35 = *(void *)(v0 + 592);
  uint64_t v36 = *(void *)(v0 + 528);
  uint64_t v37 = *(void *)(v0 + 520);
  uint64_t v38 = *(void *)(v0 + 512);
  uint64_t v45 = *(void *)(v0 + 504);
  (*(void (**)(void, void))(*(void *)(v0 + 544) + 8))(*(void *)(v0 + 584), *(void *)(v0 + 536));
  LogKey.stringValue.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v33, v32, v35);
  LicenseResolutionContext.init(logKey:url:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v37, v36, v45);
  LicenseResolutionRequest.init(context:)();
  unint64_t v39 = (void *)swift_task_alloc();
  *(void *)(v0 + 800) = v39;
  *unint64_t v39 = v0;
  v39[1] = sub_1003C1410;
  return LicenseResolutionRequest.run()();
}

uint64_t sub_1003C1410()
{
  *(void *)(*(void *)v1 + 808) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003C16A0;
  }
  else {
    uint64_t v2 = sub_1003C1524;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003C1524()
{
  uint64_t v1 = v0[66];
  uint64_t v2 = v0[63];
  uint64_t v3 = v0[64];
  uint64_t v5 = v0[61];
  uint64_t v4 = v0[62];
  uint64_t v6 = v0[60];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(void, void))(v0[75] + 8))(v0[77], v0[74]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v7 = (uint64_t (*)(uint64_t))v0[1];
  return v7(1);
}

uint64_t sub_1003C16A0()
{
  uint64_t v1 = v0[77];
  uint64_t v2 = v0[75];
  uint64_t v3 = v0[74];
  uint64_t v4 = v0[66];
  uint64_t v5 = v0[63];
  uint64_t v6 = v0[64];
  uint64_t v8 = v0[61];
  uint64_t v7 = v0[62];
  uint64_t v9 = v0[60];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v10 = (uint64_t (*)(void))v0[1];
  return v10(0);
}

uint64_t sub_1003C1824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v3 = sub_1000172F8(&qword_10065B650);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URLComponents();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000172F8(&qword_10065C3C0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001893C(*v2 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon19LicenseRenewalBatch_resolutionURL, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    id v17 = &qword_10065C3C0;
    uint64_t v18 = (uint64_t)v12;
LABEL_5:
    sub_10001729C(v18, v17);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v24, 1, 1, v13);
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    id v17 = &qword_10065B650;
    uint64_t v18 = (uint64_t)v5;
    goto LABEL_5;
  }
  uint64_t v22 = v7;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  sub_1000172F8(&qword_100663AB0);
  v21[1] = 2 * *(void *)(*(void *)(type metadata accessor for URLQueryItem() - 8) + 72);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1005A6B00;
  URLQueryItem.init(name:value:)();
  uint64_t v20 = v23;
  uint64_t v25 = *(void *)(v23 + 16);
  dispatch thunk of CustomStringConvertible.description.getter();
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(v20 + 24);
  dispatch thunk of CustomStringConvertible.description.getter();
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  URLComponents.queryItems.setter();
  URLComponents.url.getter();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1003C1CC4@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || 1 << *(unsigned char *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a3 + 36) != a2)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v4 = *(void *)(a3 + 48) + (result << 6);
  uint64_t v5 = *(void *)(v4 + 8);
  uint64_t v6 = *(void *)(v4 + 32);
  char v7 = *(unsigned char *)(v4 + 40);
  uint64_t v8 = *(void *)(v4 + 48);
  uint64_t v9 = *(void *)(v4 + 56);
  *(void *)a4 = *(void *)v4;
  *(void *)(a4 + 8) = v5;
  *(_OWORD *)(a4 + 16) = *(_OWORD *)(v4 + 16);
  *(void *)(a4 + 32) = v6;
  *(unsigned char *)(a4 + 40) = v7;
  *(void *)(a4 + 48) = v8;
  *(void *)(a4 + 56) = v9;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1003C1D6C(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v5 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16)
      && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      && *(void *)(a1 + 32) == *(void *)(a2 + 32)
      && ((*(unsigned __int8 *)(a1 + 40) ^ *(unsigned __int8 *)(a2 + 40)) & 1) == 0)
    {
      if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56))
      {
        return 1;
      }
      else
      {
        return _stringCompareWithSmolCheck(_:_:expecting:)();
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1003C1E40(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConfigurationBag(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003C1E9C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1003C1EC8(uint64_t a1)
{
  return a1;
}

unint64_t sub_1003C1EF4()
{
  unint64_t result = qword_100661EF0;
  if (!qword_100661EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100661EF0);
  }
  return result;
}

uint64_t sub_1003C1F48()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 57, 7);
}

unint64_t sub_1003C1F88()
{
  unint64_t result = qword_100661F00;
  if (!qword_100661F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100661F00);
  }
  return result;
}

uint64_t sub_1003C1FDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t result = sub_100257AF4(v4);
  if (v7) {
    goto LABEL_9;
  }
  if (*(_DWORD *)(v4 + 36) != v6)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(v4 + 32)
    || (sub_1003C1CC4(result, v6, v4, (uint64_t)v10),
        char v8 = v10[40],
        swift_bridgeObjectRelease(),
        uint64_t result = swift_bridgeObjectRelease(),
        (v8 & 1) == 0))
  {
    uint64_t v9 = 58;
  }
  else
  {
    uint64_t v9 = 59;
  }
  *(void *)a2 = v9;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(void *)(a2 + 56) = 0;
  *(unsigned char *)(a2 + 64) = 26;
  return result;
}

uint64_t sub_1003C20B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1003C2100(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  if (a9 != 255) {
    return sub_10019C9FC(result, a2, a3, a4, a5, a6, a7, a8, a9);
  }
  return result;
}

uint64_t destroy for LicenseRenewalBatch.App()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LicenseRenewalBatch.App(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LicenseRenewalBatch.App(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LicenseRenewalBatch.App(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LicenseRenewalBatch.App()
{
  return &type metadata for LicenseRenewalBatch.App;
}

unint64_t sub_1003C22B0()
{
  unint64_t result = qword_100661F08;
  if (!qword_100661F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100661F08);
  }
  return result;
}

uint64_t *sub_1003C2304(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *((void *)v10 + 1);
    *(void *)uint64_t v9 = *(void *)v10;
    *((void *)v9 + 1) = v11;
    uint64_t v12 = *((void *)v10 + 3);
    *((void *)v9 + 2) = *((void *)v10 + 2);
    *((void *)v9 + 3) = v12;
    *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    uint64_t v13 = *((void *)v10 + 7);
    *((void *)v9 + 6) = *((void *)v10 + 6);
    *((void *)v9 + 7) = v13;
    uint64_t v14 = *((void *)v10 + 9);
    *((void *)v9 + 8) = *((void *)v10 + 8);
    *((void *)v9 + 9) = v14;
    *((void *)v9 + 10) = *((void *)v10 + 10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1003C242C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003C24C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = v10;
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  uint64_t v12 = *(void *)(v9 + 56);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(void *)(v8 + 56) = v12;
  uint64_t v13 = *(void *)(v9 + 72);
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  *(void *)(v8 + 72) = v13;
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1003C259C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  v8[3] = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  _OWORD v8[4] = v9[4];
  v8[5] = v9[5];
  v8[6] = v9[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[7] = v9[7];
  v8[8] = v9[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[9] = v9[9];
  v8[10] = v9[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1003C26C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v10;
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  long long v11 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v11;
  return a1;
}

uint64_t sub_1003C275C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v9 + 64);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(void *)(v8 + 64) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v9 + 80);
  *(void *)(v8 + 72) = *(void *)(v9 + 72);
  *(void *)(v8 + 80) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1003C2830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003C2844);
}

uint64_t sub_1003C2844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1003C2908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003C291C);
}

uint64_t sub_1003C291C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for OAuthCredential()
{
  uint64_t result = qword_100661F68;
  if (!qword_100661F68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003C2A28()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1003C2ABC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, NSObject *a4@<X3>, NSObject *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v109 = a5;
  uint64_t v113 = a6;
  unint64_t v114 = a2;
  uint64_t v117 = type metadata accessor for OAuthCredential();
  uint64_t v112 = *(void *)(v117 - 8);
  uint64_t v10 = __chkstk_darwin(v117);
  uint64_t v102 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v101 = (char *)&v99 - v12;
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v110 = v13;
  uint64_t v111 = v14;
  uint64_t v15 = __chkstk_darwin(v13);
  int v100 = (char *)&v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v106 = (char *)&v99 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  os_log_t v104 = (os_log_t)((char *)&v99 - v20);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v103 = (char *)&v99 - v22;
  __chkstk_darwin(v21);
  v105 = (char *)&v99 - v23;
  sub_1000172F8(&qword_10065E908);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A4B40;
  *(void *)(inited + 32) = kSecClass;
  uint64_t v115 = kSecClassInternetPassword;
  type metadata accessor for CFString(0);
  uint64_t v116 = v25;
  *(void *)(inited + 40) = kSecClassInternetPassword;
  *(void *)(inited + 64) = v25;
  *(void *)(inited + 72) = kSecMatchLimit;
  *(void *)(inited + 80) = kSecMatchLimitOne;
  *(void *)(inited + 104) = v25;
  *(void *)(inited + 112) = kSecAttrAccount;
  uint64_t v107 = a1;
  *(void *)(inited + 120) = a1;
  *(void *)(inited + 128) = a2;
  *(void *)(inited + 144) = &type metadata for String;
  *(void *)(inited + 152) = kSecAttrServer;
  uint64_t v108 = a3;
  *(void *)(inited + 160) = a3;
  *(void *)(inited + 168) = a4;
  *(void *)(inited + 184) = &type metadata for String;
  *(void *)(inited + 192) = kSecReturnAttributes;
  *(unsigned char *)(inited + 200) = 1;
  *(void *)(inited + 224) = &type metadata for Bool;
  *(void *)(inited + 232) = kSecReturnData;
  *(void *)(inited + 264) = &type metadata for Bool;
  *(unsigned char *)(inited + 240) = 1;
  CFStringRef v26 = (id)kSecClass;
  os_log_type_t v27 = v115;
  unint64_t v28 = v114;
  CFStringRef v29 = (id)kSecMatchLimit;
  CFStringRef v30 = (id)kSecMatchLimitOne;
  CFStringRef v31 = (id)kSecAttrAccount;
  swift_bridgeObjectRetain();
  CFStringRef v32 = (id)kSecAttrServer;
  swift_bridgeObjectRetain();
  CFStringRef v33 = (id)kSecReturnAttributes;
  CFStringRef v34 = (id)kSecReturnData;
  sub_10044B684(inited);
  CFTypeRef v122 = 0;
  sub_1003C5C80(&qword_10065B450, type metadata accessor for CFString);
  CFDictionaryRef isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  OSStatus v36 = SecItemCopyMatching(isa, &v122);

  if (v36)
  {
    if (v36 == -25300)
    {
      uint64_t v37 = v105;
      static Logger.oauth.getter();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v38 = v109;
      unint64_t v39 = Logger.logObject.getter();
      os_log_type_t v40 = static os_log_type_t.debug.getter();
      int v41 = v40;
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v42 = swift_slowAlloc();
        LODWORD(v115) = v41;
        uint64_t v43 = v42;
        uint64_t v44 = swift_slowAlloc();
        uint64_t v109 = v39;
        uint64_t v45 = (void *)v44;
        uint64_t v116 = swift_slowAlloc();
        *(void *)&long long v120 = v116;
        *(_DWORD *)uint64_t v43 = 138412803;
        uint64_t v118 = (uint64_t)v38;
        unint64_t v46 = v28;
        uint64_t v47 = v38;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v45 = v38;

        *(_WORD *)(v43 + 12) = 2085;
        swift_bridgeObjectRetain();
        uint64_t v118 = sub_1000143F4(v107, v46, (uint64_t *)&v120);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v43 + 22) = 2085;
        swift_bridgeObjectRetain();
        uint64_t v118 = sub_1000143F4(v108, (unint64_t)a4, (uint64_t *)&v120);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        BOOL v48 = v109;
        _os_log_impl((void *)&_mh_execute_header, v109, (os_log_type_t)v115, "[%@] No existing token for account: %{sensitive}s@%{sensitive}s", (uint8_t *)v43, 0x20u);
        sub_1000172F8(&qword_10065DB10);
        uint64_t v49 = 1;
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v111 + 8))(v105, v110);
LABEL_27:
        uint64_t v79 = v112;
        uint64_t v78 = v113;
        goto LABEL_28;
      }

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v37 = v106;
      static Logger.oauth.getter();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v57 = v109;
      uint64_t v58 = Logger.logObject.getter();
      os_log_type_t v59 = static os_log_type_t.error.getter();
      int v60 = v59;
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v61 = swift_slowAlloc();
        uint64_t v115 = v58;
        uint64_t v62 = v61;
        v105 = (char *)swift_slowAlloc();
        uint64_t v116 = swift_slowAlloc();
        *(void *)&long long v120 = v116;
        *(_DWORD *)uint64_t v62 = 138413059;
        LODWORD(v109) = v60;
        uint64_t v118 = (uint64_t)v57;
        uint64_t v63 = v57;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(void *)v105 = v57;

        *(_WORD *)(v62 + 12) = 2085;
        swift_bridgeObjectRetain();
        uint64_t v118 = sub_1000143F4(v107, v28, (uint64_t *)&v120);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v62 + 22) = 2085;
        swift_bridgeObjectRetain();
        uint64_t v118 = sub_1000143F4(v108, (unint64_t)a4, (uint64_t *)&v120);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v62 + 32) = 1024;
        LODWORD(v118) = v36;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v64 = v115;
        _os_log_impl((void *)&_mh_execute_header, v115, (os_log_type_t)v109, "[%@] Error fetching token for account: %{sensitive}s@%{sensitive}s status: %d", (uint8_t *)v62, 0x26u);
        sub_1000172F8(&qword_10065DB10);
        uint64_t v49 = 1;
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v111 + 8))(v106, v110);
        goto LABEL_27;
      }

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v111 + 8))(v37, v110);
LABEL_26:
    uint64_t v49 = 1;
    goto LABEL_27;
  }
  uint64_t v50 = (uint64_t)v102;
  uint64_t v51 = v103;
  os_log_t v52 = v104;
  if (!v122) {
    goto LABEL_22;
  }
  *(void *)&long long v120 = v122;
  swift_unknownObjectRetain();
  sub_1000172F8(&qword_100661FA8);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v53 = v118;
  if (*(void *)(v118 + 16))
  {
    uint64_t v54 = (id)kSecValueData;
    unint64_t v55 = sub_100451D14((uint64_t)v54);
    if (v56)
    {
      sub_1000144C8(*(void *)(v53 + 56) + 32 * v55, (uint64_t)&v120);
    }
    else
    {
      long long v120 = 0u;
      long long v121 = 0u;
    }
  }
  else
  {
    long long v120 = 0u;
    long long v121 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v121 + 1))
  {
    sub_100016E7C((uint64_t)&v120);
    goto LABEL_22;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_22:
    static Logger.oauth.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v68 = v109;
    uint64_t v69 = Logger.logObject.getter();
    os_log_type_t v70 = static os_log_type_t.error.getter();
    int v71 = v70;
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v72 = swift_slowAlloc();
      LODWORD(v115) = v71;
      uint64_t v73 = v72;
      uint64_t v74 = swift_slowAlloc();
      uint64_t v109 = v69;
      uint64_t v75 = (void *)v74;
      uint64_t v116 = swift_slowAlloc();
      *(void *)&long long v120 = v116;
      *(_DWORD *)uint64_t v73 = 138412803;
      uint64_t v118 = (uint64_t)v68;
      uint64_t v76 = v68;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v75 = v68;

      *(_WORD *)(v73 + 12) = 2085;
      swift_bridgeObjectRetain();
      uint64_t v118 = sub_1000143F4(v107, v28, (uint64_t *)&v120);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v73 + 22) = 2085;
      swift_bridgeObjectRetain();
      uint64_t v118 = sub_1000143F4(v108, (unint64_t)a4, (uint64_t *)&v120);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v77 = v109;
      _os_log_impl((void *)&_mh_execute_header, v109, (os_log_type_t)v115, "[%@] Error not able to read token data for account: %{sensitive}s@%{sensitive}s", (uint8_t *)v73, 0x20u);
      sub_1000172F8(&qword_10065DB10);
      uint64_t v49 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(os_log_t, uint64_t))(v111 + 8))(v104, v110);
      goto LABEL_27;
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    (*(void (**)(os_log_t, uint64_t))(v111 + 8))(v52, v110);
    goto LABEL_26;
  }
  uint64_t v65 = v118;
  uint64_t v66 = v119;
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_1003C5C80(&qword_100661FB0, (void (*)(uint64_t))type metadata accessor for OAuthCredential);
  uint64_t v67 = (uint64_t)v101;
  uint64_t v116 = v65;
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t v115 = v66;
  swift_release();
  uint64_t v81 = v51;
  static Logger.oauth.getter();
  uint64_t v82 = v50;
  sub_1002C67E8(v67, v50);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v83 = v109;
  os_log_type_t v84 = Logger.logObject.getter();
  os_log_type_t v85 = static os_log_type_t.debug.getter();
  LODWORD(v106) = v85;
  if (os_log_type_enabled(v84, v85))
  {
    uint64_t v87 = swift_slowAlloc();
    uint64_t v88 = swift_slowAlloc();
    os_log_t v104 = v84;
    uint64_t v89 = (void *)v88;
    int v100 = (char *)v88;
    v105 = (char *)swift_slowAlloc();
    *(void *)&long long v120 = v105;
    *(_DWORD *)uint64_t v87 = 138413059;
    uint64_t v109 = a4;
    unint64_t v90 = v28;
    uint64_t v118 = (uint64_t)v83;
    uint64_t v91 = v83;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v89 = v83;

    *(_WORD *)(v87 + 12) = 2085;
    uint64_t v92 = (uint64_t)v102;
    char v93 = (uint64_t *)&v102[*(int *)(v117 + 20)];
    uint64_t v94 = *v93;
    unint64_t v95 = v93[1];
    swift_bridgeObjectRetain();
    uint64_t v118 = sub_1000143F4(v94, v95, (uint64_t *)&v120);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1003C5B7C(v92);
    *(_WORD *)(v87 + 22) = 2085;
    swift_bridgeObjectRetain();
    uint64_t v118 = sub_1000143F4(v107, v90, (uint64_t *)&v120);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    unint64_t v96 = v109;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v87 + 32) = 2085;
    swift_bridgeObjectRetain();
    uint64_t v118 = sub_1000143F4(v108, (unint64_t)v96, (uint64_t *)&v120);
    uint64_t v97 = (uint64_t)v101;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    os_log_t v98 = v104;
    _os_log_impl((void *)&_mh_execute_header, v104, (os_log_type_t)v106, "[%@] Fetched token '%{sensitive}s' for account: %{sensitive}s@%{sensitive}s", (uint8_t *)v87, 0x2Au);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    sub_100013510(v116, (unint64_t)v115);

    (*(void (**)(char *, uint64_t))(v111 + 8))(v103, v110);
  }
  else
  {
    uint64_t v97 = v67;

    sub_1003C5B7C(v82);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_100013510(v116, (unint64_t)v115);

    (*(void (**)(char *, uint64_t))(v111 + 8))(v81, v110);
  }
  uint64_t v79 = v112;
  uint64_t v78 = v113;
  sub_1002C6984(v97, v113);
  uint64_t v49 = 0;
LABEL_28:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56))(v78, v49, 1, v117);
  return swift_unknownObjectRelease();
}

uint64_t sub_1003C3E84(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1000172F8(&qword_100661FD0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10018AC60(a1, a1[3]);
  sub_1003C5BD8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v16) = 0;
  type metadata accessor for UUID();
  sub_1003C5C80(&qword_10065CF80, (void (*)(uint64_t))&type metadata accessor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v9 = (long long *)(v3 + *(int *)(type metadata accessor for OAuthCredential() + 20));
    uint64_t v10 = *((void *)v9 + 2);
    uint64_t v11 = *((void *)v9 + 3);
    uint64_t v12 = *((void *)v9 + 10);
    long long v16 = *v9;
    uint64_t v17 = v10;
    uint64_t v18 = v11;
    long long v13 = v9[3];
    long long v19 = v9[2];
    long long v20 = v13;
    long long v21 = v9[4];
    uint64_t v22 = v12;
    v15[7] = 1;
    sub_1003C5CC8();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1003C4078@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v30 = type metadata accessor for UUID();
  uint64_t v27 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000172F8(&qword_100661FB8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  uint64_t v29 = v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for OAuthCredential();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018AC60(a1, a1[3]);
  sub_1003C5BD8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_100014524((uint64_t)a1);
  }
  uint64_t v25 = v10;
  uint64_t v13 = (uint64_t)v12;
  uint64_t v14 = v27;
  LOBYTE(v31) = 0;
  sub_1003C5C80((unint64_t *)&unk_10065C920, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v15 = v30;
  uint64_t v16 = v28;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v13, v5, v15);
  char v38 = 1;
  sub_1003C5C2C();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v16);
  uint64_t v17 = v32;
  uint64_t v18 = v33;
  uint64_t v19 = v37;
  uint64_t v20 = v26;
  uint64_t v21 = v13 + *(int *)(v25 + 20);
  *(_OWORD *)uint64_t v21 = v31;
  *(void *)(v21 + 16) = v17;
  *(void *)(v21 + 24) = v18;
  long long v22 = v35;
  *(_OWORD *)(v21 + 32) = v34;
  *(_OWORD *)(v21 + 48) = v22;
  *(_OWORD *)(v21 + 64) = v36;
  *(void *)(v21 + 80) = v19;
  sub_1002C67E8(v13, v20);
  sub_100014524((uint64_t)a1);
  return sub_1003C5B7C(v13);
}

uint64_t sub_1003C43F4()
{
  if (*v0) {
    return 0x6E656B6F74;
  }
  else {
    return 0x4449746E65696C63;
  }
}

uint64_t sub_1003C442C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1003C6804(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003C4454(uint64_t a1)
{
  unint64_t v2 = sub_1003C5BD8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003C4490(uint64_t a1)
{
  unint64_t v2 = sub_1003C5BD8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003C44CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003C4078(a1, a2);
}

uint64_t sub_1003C44E4(void *a1)
{
  return sub_1003C3E84(a1);
}

uint64_t sub_1003C44FC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v33 = type metadata accessor for Logger();
  uint64_t v32 = *(void *)(v33 - 8);
  uint64_t v8 = __chkstk_darwin(v33);
  uint64_t v29 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - v10;
  sub_1000172F8(&qword_10065E908);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A6B00;
  *(void *)(inited + 32) = kSecClass;
  type metadata accessor for CFString(0);
  *(void *)(inited + 40) = kSecClassInternetPassword;
  *(void *)(inited + 64) = v13;
  *(void *)(inited + 72) = kSecAttrAccount;
  uint64_t v30 = a1;
  *(void *)(inited + 80) = a1;
  *(void *)(inited + 88) = a2;
  *(void *)(inited + 104) = &type metadata for String;
  *(void *)(inited + 112) = kSecAttrServer;
  *(void *)(inited + 144) = &type metadata for String;
  uint64_t v31 = a3;
  *(void *)(inited + 120) = a3;
  *(void *)(inited + 128) = a4;
  CFStringRef v14 = (id)kSecClass;
  CFStringRef v15 = (id)kSecClassInternetPassword;
  CFStringRef v16 = (id)kSecAttrAccount;
  swift_bridgeObjectRetain();
  CFStringRef v17 = (id)kSecAttrServer;
  swift_bridgeObjectRetain();
  sub_10044B684(inited);
  sub_1003C5C80(&qword_10065B450, type metadata accessor for CFString);
  CFDictionaryRef isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  OSStatus v19 = SecItemDelete(isa);

  if (v19 && v19 != -25300)
  {
    uint64_t v23 = v29;
    static Logger.oauth.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136643331;
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_1000143F4(v30, a2, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2085;
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_1000143F4(v31, a4, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 22) = 1024;
      LODWORD(v34) = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Error invalidating token for account: %{sensitive}s@%{sensitive}s status: %d", (uint8_t *)v26, 0x1Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v23, v33);
  }
  else
  {
    static Logger.oauth.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136643075;
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_1000143F4(v30, a2, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2085;
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_1000143F4(v31, a4, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Invalidated token for account: %{sensitive}s@%{sensitive}s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v11, v33);
  }
}

uint64_t sub_1003C4AD4(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, void *a6)
{
  uint64_t v108 = a2;
  uint64_t v110 = type metadata accessor for OAuthCredential();
  uint64_t v11 = __chkstk_darwin(v110);
  os_log_t v98 = &v92[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  CFStringRef v14 = &v92[-v13];
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v107 = &v92[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v101 = &v92[-v20];
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v99 = &v92[-v22];
  __chkstk_darwin(v21);
  uint64_t v24 = &v92[-v23];
  static Logger.oauth.getter();
  v105 = a1;
  sub_1002C67E8((uint64_t)a1, (uint64_t)v14);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v25 = a6;
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.debug.getter();
  LODWORD(v102) = v27;
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v106 = v15;
  unint64_t v104 = a5;
  uint64_t v109 = a4;
  if (v28)
  {
    uint64_t v29 = swift_slowAlloc();
    id v111 = v25;
    uint64_t v30 = v29;
    unint64_t v31 = a3;
    uint64_t v32 = (void *)swift_slowAlloc();
    unint64_t v95 = v32;
    uint64_t v33 = (__CFString *)swift_slowAlloc();
    uint64_t v97 = v33;
    *(_DWORD *)uint64_t v30 = 138413059;
    unint64_t v96 = v26;
    unint64_t v103 = v31;
    uint64_t v34 = v16;
    uint64_t v112 = (uint64_t)v111;
    v113[0] = (uint64_t)v33;
    id v35 = v111;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v32 = v111;

    *(_WORD *)(v30 + 12) = 2085;
    long long v36 = (uint64_t *)&v14[*(int *)(v110 + 20)];
    uint64_t v37 = *v36;
    unint64_t v38 = v36[1];
    swift_bridgeObjectRetain();
    uint64_t v39 = v37;
    uint64_t v16 = v34;
    a3 = v103;
    uint64_t v112 = sub_1000143F4(v39, v38, v113);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a5 = v104;
    swift_bridgeObjectRelease();
    sub_1003C5B7C((uint64_t)v14);
    *(_WORD *)(v30 + 22) = 2085;
    swift_bridgeObjectRetain();
    uint64_t v112 = sub_1000143F4(v108, a3, v113);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v30 + 32) = 2085;
    swift_bridgeObjectRetain();
    uint64_t v112 = sub_1000143F4(v109, a5, v113);
    uint64_t v15 = v106;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    os_log_type_t v40 = v96;
    _os_log_impl((void *)&_mh_execute_header, v96, (os_log_type_t)v102, "[%@] Storing token '%{sensitive}s' for user: %{sensitive}s@%{sensitive}s", (uint8_t *)v30, 0x2Au);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    id v25 = v111;
    swift_slowDealloc();
  }
  else
  {

    sub_1003C5B7C((uint64_t)v14);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v102 = *(NSObject **)(v16 + 8);
  ((void (*)(unsigned char *, uint64_t))v102)(v24, v15);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  sub_1003C5C80(&qword_100661FA0, (void (*)(uint64_t))type metadata accessor for OAuthCredential);
  uint64_t v41 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  id v111 = v25;
  uint64_t v100 = v16;
  uint64_t v42 = v41;
  unint64_t v44 = v43;
  swift_release();
  sub_1000172F8(&qword_10065E908);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A9D80;
  uint64_t v107 = kSecClass;
  *(void *)(inited + 32) = kSecClass;
  unint64_t v96 = kSecClassInternetPassword;
  type metadata accessor for CFString(0);
  uint64_t v47 = v46;
  *(void *)(inited + 40) = kSecClassInternetPassword;
  *(void *)(inited + 64) = v46;
  *(void *)(inited + 72) = kSecAttrAccessible;
  uint64_t v97 = (__CFString *)kSecAttrAccessibleAfterFirstUnlock;
  *(void *)(inited + 80) = kSecAttrAccessibleAfterFirstUnlock;
  *(void *)(inited + 104) = v46;
  *(void *)(inited + 112) = kSecAttrAccount;
  *(void *)(inited + 120) = v108;
  *(void *)(inited + 128) = a3;
  *(void *)(inited + 144) = &type metadata for String;
  *(void *)(inited + 152) = kSecAttrServer;
  *(void *)(inited + 160) = v109;
  *(void *)(inited + 168) = a5;
  *(void *)(inited + 184) = &type metadata for String;
  *(void *)(inited + 192) = kSecValueData;
  *(void *)(inited + 224) = &type metadata for Data;
  *(void *)(inited + 200) = v42;
  *(void *)(inited + 208) = v44;
  unint64_t v103 = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v94 = v42;
  unint64_t v95 = (void *)v44;
  sub_100012670(v42, v44);
  BOOL v48 = v107;
  uint64_t v49 = v96;
  CFStringRef v50 = (id)kSecAttrAccessible;
  uint64_t v51 = v97;
  CFStringRef v52 = (id)kSecAttrAccount;
  CFStringRef v53 = (id)kSecAttrServer;
  CFStringRef v54 = (id)kSecValueData;
  unint64_t v55 = (__CFString *)sub_10044B684(inited);
  char v56 = sub_1003C5C80(&qword_10065B450, type metadata accessor for CFString);
  CFDictionaryRef isa = Dictionary._bridgeToObjectiveC()().super.isa;
  OSStatus v58 = SecItemAdd(isa, 0);

  if (v58 == -25299)
  {
    unint64_t v96 = v56;
    uint64_t v97 = v55;
    uint64_t v107 = v47;
    os_log_type_t v59 = v99;
    static Logger.oauth.getter();
    int v60 = v98;
    sub_1002C67E8((uint64_t)v105, (uint64_t)v98);
    unint64_t v61 = v103;
    swift_bridgeObjectRetain_n();
    unint64_t v62 = v104;
    swift_bridgeObjectRetain_n();
    id v63 = v111;
    uint64_t v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.debug.getter();
    int v66 = v65;
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v67 = swift_slowAlloc();
      uint64_t v102 = v64;
      uint64_t v68 = (uint64_t)v60;
      uint64_t v69 = v67;
      os_log_type_t v70 = (void *)swift_slowAlloc();
      v105 = (void *)swift_slowAlloc();
      uint64_t v112 = (uint64_t)v63;
      v113[0] = (uint64_t)v105;
      *(_DWORD *)uint64_t v69 = 138413059;
      int v93 = v66;
      unint64_t v71 = v62;
      id v72 = v63;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v70 = v63;

      *(_WORD *)(v69 + 12) = 2085;
      uint64_t v73 = (uint64_t *)(v68 + *(int *)(v110 + 20));
      uint64_t v74 = *v73;
      unint64_t v75 = v73[1];
      swift_bridgeObjectRetain();
      uint64_t v76 = v74;
      unint64_t v62 = v71;
      uint64_t v112 = sub_1000143F4(v76, v75, v113);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      unint64_t v61 = v103;
      swift_bridgeObjectRelease();
      sub_1003C5B7C(v68);
      *(_WORD *)(v69 + 22) = 2085;
      swift_bridgeObjectRetain();
      uint64_t v77 = v108;
      uint64_t v112 = sub_1000143F4(v108, v61, v113);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v69 + 32) = 2085;
      swift_bridgeObjectRetain();
      uint64_t v78 = v109;
      uint64_t v112 = sub_1000143F4(v109, v62, v113);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      os_log_t v79 = v102;
      _os_log_impl((void *)&_mh_execute_header, v102, (os_log_type_t)v93, "[%@] Item already exists, updating token '%{sensitive}s' for user: %{sensitive}s@%{sensitive}s", (uint8_t *)v69, 0x2Au);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v102 = *(NSObject **)(v100 + 8);
      ((void (*)(unsigned char *, uint64_t))v102)(v99, v106);
    }
    else
    {

      sub_1003C5B7C((uint64_t)v60);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      ((void (*)(unsigned char *, uint64_t))v102)(v59, v106);
      uint64_t v77 = v108;
      uint64_t v78 = v109;
    }
    uint64_t v80 = v101;
    sub_1003C44FC(v77, v61, v78, v62);
    CFDictionaryRef v91 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    OSStatus v58 = SecItemAdd(v91, 0);

    if (!v58) {
      return sub_100013510(v94, (unint64_t)v95);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v80 = v101;
    unint64_t v61 = v103;
    unint64_t v62 = v104;
    if (!v58) {
      return sub_100013510(v94, (unint64_t)v95);
    }
  }
  static Logger.oauth.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v81 = v111;
  uint64_t v82 = Logger.logObject.getter();
  os_log_type_t v83 = static os_log_type_t.fault.getter();
  LODWORD(v111) = v83;
  if (os_log_type_enabled(v82, v83))
  {
    uint64_t v84 = swift_slowAlloc();
    v105 = (void *)swift_slowAlloc();
    uint64_t v110 = swift_slowAlloc();
    uint64_t v112 = (uint64_t)v81;
    v113[0] = v110;
    *(_DWORD *)uint64_t v84 = 138413059;
    id v85 = v81;
    uint64_t v107 = v82;
    unint64_t v86 = v61;
    id v87 = v85;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v105 = v81;

    *(_WORD *)(v84 + 12) = 2085;
    swift_bridgeObjectRetain();
    uint64_t v112 = sub_1000143F4(v108, v86, v113);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v84 + 22) = 2085;
    swift_bridgeObjectRetain();
    uint64_t v112 = sub_1000143F4(v109, v62, v113);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v84 + 32) = 1024;
    LODWORD(v112) = v58;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v88 = v107;
    _os_log_impl((void *)&_mh_execute_header, v107, (os_log_type_t)v111, "[%@] Error storing token for account: %{sensitive}s@%{sensitive}s status: %d", (uint8_t *)v84, 0x26u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    sub_100013510(v94, (unint64_t)v95);

    uint64_t v89 = v101;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    sub_100013510(v94, (unint64_t)v95);
    uint64_t v89 = v80;
  }
  return ((uint64_t (*)(unsigned char *, uint64_t))v102)(v89, v106);
}

uint64_t sub_1003C5B7C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OAuthCredential();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1003C5BD8()
{
  unint64_t result = qword_100661FC0;
  if (!qword_100661FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100661FC0);
  }
  return result;
}

unint64_t sub_1003C5C2C()
{
  unint64_t result = qword_100661FC8;
  if (!qword_100661FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100661FC8);
  }
  return result;
}

uint64_t sub_1003C5C80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1003C5CC8()
{
  unint64_t result = qword_100661FD8;
  if (!qword_100661FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100661FD8);
  }
  return result;
}

uint64_t sub_1003C5D1C()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v62 = v0;
  uint64_t v63 = v1;
  __chkstk_darwin(v0);
  unint64_t v61 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v60 = (void (**)(char *, uint64_t))type metadata accessor for OAuthCredential();
  __chkstk_darwin(v60);
  uint64_t v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000172F8(&qword_10065E908);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A3FC0;
  *(void *)(inited + 32) = kSecClass;
  type metadata accessor for CFString(0);
  *(void *)(inited + 40) = kSecClassInternetPassword;
  *(void *)(inited + 64) = v6;
  *(void *)(inited + 72) = kSecMatchLimit;
  *(void *)(inited + 80) = kSecMatchLimitAll;
  *(void *)(inited + 104) = v6;
  *(void *)(inited + 112) = kSecReturnAttributes;
  *(unsigned char *)(inited + 120) = 1;
  *(void *)(inited + 144) = &type metadata for Bool;
  *(void *)(inited + 152) = kSecReturnData;
  *(void *)(inited + 184) = &type metadata for Bool;
  *(unsigned char *)(inited + 160) = 1;
  CFStringRef v7 = (id)kSecClass;
  CFStringRef v8 = (id)kSecClassInternetPassword;
  CFStringRef v9 = (id)kSecMatchLimit;
  CFStringRef v10 = (id)kSecMatchLimitAll;
  CFStringRef v11 = (id)kSecReturnAttributes;
  CFStringRef v12 = (id)kSecReturnData;
  sub_10044B684(inited);
  CFTypeRef v68 = 0;
  sub_1003C5C80(&qword_10065B450, type metadata accessor for CFString);
  CFDictionaryRef isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  LODWORD(inited) = SecItemCopyMatching(isa, &v68);

  if (!inited)
  {
    *(void *)&long long v59 = v4;
    if (v68)
    {
      *(void *)&long long v66 = v68;
      swift_unknownObjectRetain();
      sub_1000172F8(&qword_100661FE0);
      if (swift_dynamicCast())
      {
        uint64_t v14 = *(void *)(v64 + 16);
        uint64_t v56 = v64;
        if (v14)
        {
          uint64_t v15 = v64 + 32;
          CFStringRef v54 = (__CFString *)kSecAttrServer;
          unint64_t v55 = (__CFString *)kSecAttrAccount;
          uint64_t v16 = v63;
          uint64_t v57 = _swiftEmptyArrayStorage;
          OSStatus v58 = (char *)&type metadata for Any + 8;
          while (1)
          {
            uint64_t v17 = *(void *)v15;
            if (!*(void *)(*(void *)v15 + 16)) {
              break;
            }
            swift_bridgeObjectRetain();
            uint64_t v18 = (id)kSecValueData;
            unint64_t v19 = sub_100451D14((uint64_t)v18);
            if (v20)
            {
              sub_1000144C8(*(void *)(v17 + 56) + 32 * v19, (uint64_t)&v66);
            }
            else
            {
              long long v66 = 0u;
              long long v67 = 0u;
            }

            if (!*((void *)&v67 + 1))
            {
              swift_bridgeObjectRelease();
              goto LABEL_7;
            }
            if (swift_dynamicCast())
            {
              uint64_t v21 = v64;
              unint64_t v22 = v65;
              type metadata accessor for JSONDecoder();
              swift_allocObject();
              JSONDecoder.init()();
              sub_1003C5C80(&qword_100661FB0, (void (*)(uint64_t))type metadata accessor for OAuthCredential);
              uint64_t v23 = v59;
              dispatch thunk of JSONDecoder.decode<A>(_:from:)();
              sub_1003C5B7C(v23);
              swift_release();
              if (*(void *)(v17 + 16))
              {
                uint64_t v24 = v55;
                unint64_t v25 = sub_100451D14((uint64_t)v24);
                if (v26)
                {
                  sub_1000144C8(*(void *)(v17 + 56) + 32 * v25, (uint64_t)&v66);
                }
                else
                {
                  long long v66 = 0u;
                  long long v67 = 0u;
                }

                if (*((void *)&v67 + 1))
                {
                  if ((swift_dynamicCast() & 1) == 0)
                  {
                    swift_bridgeObjectRelease();
                    goto LABEL_41;
                  }
                  unint64_t v27 = v65;
                  uint64_t v53 = v64;
                  if (*(void *)(v17 + 16))
                  {
                    unint64_t v52 = v65;
                    BOOL v28 = v54;
                    unint64_t v29 = sub_100451D14((uint64_t)v28);
                    if (v30)
                    {
                      sub_1000144C8(*(void *)(v17 + 56) + 32 * v29, (uint64_t)&v66);
                    }
                    else
                    {
                      long long v66 = 0u;
                      long long v67 = 0u;
                    }

                    unint64_t v27 = v52;
                  }
                  else
                  {
                    long long v66 = 0u;
                    long long v67 = 0u;
                  }
                  swift_bridgeObjectRelease();
                  if (*((void *)&v67 + 1))
                  {
                    if (swift_dynamicCast())
                    {
                      uint64_t v31 = v64;
                      unint64_t v51 = v65;
                      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                      unint64_t v52 = v31;
                      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                        uint64_t v57 = sub_10028FC28(0, v57[2] + 1, 1, v57);
                      }
                      unint64_t v34 = v57[2];
                      unint64_t v33 = v57[3];
                      if (v34 >= v33 >> 1) {
                        uint64_t v57 = sub_10028FC28((void *)(v33 > 1), v34 + 1, 1, v57);
                      }
                      id v35 = v57;
                      v57[2] = v34 + 1;
                      long long v36 = &v35[4 * v34];
                      v36[4] = v53;
                      v36[5] = v27;
                      unint64_t v37 = v51;
                      v36[6] = v52;
                      v36[7] = v37;
LABEL_41:
                      sub_100013510(v21, v22);
                    }
                    else
                    {
                      sub_100013510(v21, v22);
                      swift_bridgeObjectRelease();
                    }
LABEL_42:
                    uint64_t v16 = v63;
                    goto LABEL_8;
                  }
                  sub_100013510(v21, v22);
                  swift_bridgeObjectRelease();
LABEL_29:
                  sub_100016E7C((uint64_t)&v66);
                  goto LABEL_42;
                }
              }
              else
              {
                long long v66 = 0u;
                long long v67 = 0u;
              }
              swift_bridgeObjectRelease();
              sub_100013510(v21, v22);
              goto LABEL_29;
            }
            swift_bridgeObjectRelease();
LABEL_8:
            v15 += 8;
            if (!--v14) {
              goto LABEL_46;
            }
          }
          long long v66 = 0u;
          long long v67 = 0u;
LABEL_7:
          sub_100016E7C((uint64_t)&v66);
          goto LABEL_8;
        }
        uint64_t v57 = _swiftEmptyArrayStorage;
        uint64_t v16 = v63;
LABEL_46:
        swift_bridgeObjectRelease();
        if (v57[2])
        {
          unint64_t v38 = sub_1004FEA64((uint64_t)v57);
          swift_bridgeObjectRelease();
          uint64_t v40 = v38[2];
          if (v40)
          {
            int v60 = (void (**)(char *, uint64_t))(v16 + 8);
            uint64_t v57 = v38;
            uint64_t v41 = v38 + 7;
            *(void *)&long long v39 = 136643075;
            long long v59 = v39;
            OSStatus v58 = (char *)&type metadata for Any + 8;
            unint64_t v43 = v61;
            uint64_t v42 = v62;
            do
            {
              unint64_t v44 = *(v41 - 2);
              uint64_t v63 = *(v41 - 3);
              uint64_t v45 = *(v41 - 1);
              unint64_t v46 = *v41;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              static Logger.oauth.getter();
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              uint64_t v47 = Logger.logObject.getter();
              os_log_type_t v48 = static os_log_type_t.debug.getter();
              if (os_log_type_enabled(v47, v48))
              {
                uint64_t v49 = swift_slowAlloc();
                *(void *)&long long v66 = swift_slowAlloc();
                *(_DWORD *)uint64_t v49 = v59;
                swift_bridgeObjectRetain();
                *(void *)(v49 + 4) = sub_1000143F4(v63, v44, (uint64_t *)&v66);
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease_n();
                *(_WORD *)(v49 + 12) = 2085;
                swift_bridgeObjectRetain();
                *(void *)(v49 + 14) = sub_1000143F4(v45, v46, (uint64_t *)&v66);
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease_n();
                _os_log_impl((void *)&_mh_execute_header, v47, v48, "Invalidating stale token for account: %{sensitive}s@%{sensitive}s", (uint8_t *)v49, 0x16u);
                swift_arrayDestroy();
                swift_slowDealloc();
                unint64_t v43 = v61;
                uint64_t v42 = v62;
                swift_slowDealloc();
              }
              else
              {

                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease_n();
              }
              (*v60)(v43, v42);
              v41 += 4;
              sub_1003C44FC(v63, v44, v45, v46);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              --v40;
            }
            while (v40);
          }
        }
        swift_bridgeObjectRelease();
      }
    }
  }
  return swift_unknownObjectRelease();
}

unsigned char *storeEnumTagSinglePayload for OAuthCredential.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003C66C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OAuthCredential.CodingKeys()
{
  return &type metadata for OAuthCredential.CodingKeys;
}

unint64_t sub_1003C6700()
{
  unint64_t result = qword_100661FE8;
  if (!qword_100661FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100661FE8);
  }
  return result;
}

unint64_t sub_1003C6758()
{
  unint64_t result = qword_100661FF0;
  if (!qword_100661FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100661FF0);
  }
  return result;
}

unint64_t sub_1003C67B0()
{
  unint64_t result = qword_100661FF8;
  if (!qword_100661FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100661FF8);
  }
  return result;
}

uint64_t sub_1003C6804(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449746E65696C63 && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656B6F74 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1003C68F0()
{
  container_get_error_description();

  return String.init(cString:)();
}

uint64_t sub_1003C691C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v105 = type metadata accessor for Logger();
  uint64_t v102 = *(void *)(v105 - 8);
  uint64_t v4 = __chkstk_darwin(v105);
  unint64_t v95 = (char *)v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v112 = (char *)v90 - v6;
  uint64_t v7 = sub_1000172F8(&qword_10065C3C0);
  __chkstk_darwin(v7 - 8);
  CFStringRef v9 = (char *)v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v97 = (char *)v90 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v117 = (char *)v90 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)v90 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)v90 - v22;
  uint64_t v118 = 1;
  uint64_t v24 = container_system_path_for_identifier();
  if (!v24)
  {
    swift_bridgeObjectRelease();
    uint64_t v84 = v118;
    sub_1003C7B38();
    swift_allocError();
    *id v85 = v84;
    return swift_willThrow();
  }
  uint64_t v25 = v24;
  uint64_t v115 = v21;
  uint64_t v116 = a1;
  uint64_t v113 = v10;
  int v93 = v14;
  unint64_t v114 = v23;
  String.init(cString:)();
  id v26 = objc_allocWithZone((Class)NSURL);
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v28 = [v26 initFileURLWithPath:v27];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v119 = 0;
  LOBYTE(v26) = [v28 setResourceValue:v29 forKey:NSURLFileProtectionKey error:&v119];

  id v30 = v119;
  if ((v26 & 1) == 0)
  {
    id v87 = v119;
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    swift_willThrow();
    return swift_slowDealloc();
  }
  uint64_t v109 = v9;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v113;
  uint64_t v32 = v114;
  uint64_t v110 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v111 = v11 + 16;
  v110(v114, a2, v113);
  id v33 = v30;
  sub_1004D0820(0);
  id v34 = [self defaultManager];
  URL._bridgeToObjectiveC()(v35);
  unint64_t v37 = v36;
  id v119 = 0;
  id v38 = [v34 contentsOfDirectoryAtURL:v36 includingPropertiesForKeys:0 options:0 error:&v119];

  id v39 = v119;
  if (!v38)
  {
    id v88 = v119;
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v89 = *(void (**)(char *, uint64_t))(v11 + 8);
    v89(v32, v31);
    swift_slowDealloc();
    return ((uint64_t (*)(uint64_t, uint64_t))v89)(a2, v31);
  }
  id v108 = v28;
  v90[3] = v25;
  uint64_t v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v41 = v39;

  uint64_t v43 = *(void *)(v40 + 16);
  unint64_t v44 = v109;
  uint64_t v45 = v31;
  uint64_t v107 = v40;
  uint64_t v104 = v43;
  if (!v43)
  {
    os_log_type_t v48 = v114;
    uint64_t v49 = v108;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v109, 1, 1, v31);
    goto LABEL_44;
  }
  unint64_t v46 = 0;
  unint64_t v103 = v40 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v100 = (void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v101 = v11 + 48;
  uint64_t v106 = (void (**)(char *, uint64_t))(v11 + 8);
  unint64_t v96 = (void (**)(char *, uint64_t))(v102 + 8);
  v90[0] = v116 + 9;
  uint64_t v102 = v11 + 56;
  v90[1] = (v11 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  uint64_t v94 = " directories within container: ";
  unint64_t v92 = 0x80000001005BEBF0;
  *(void *)&long long v42 = 136315138;
  long long v91 = v42;
  v90[2] = (char *)&type metadata for Any + 8;
  os_log_type_t v48 = v114;
  uint64_t v47 = v115;
  uint64_t v49 = v108;
  uint64_t v99 = v11;
  do
  {
    if (v46 >= *(void *)(v40 + 16))
    {
      __break(1u);
      goto LABEL_46;
    }
    unint64_t v51 = (void (*)(char *, char *, uint64_t))v110;
    v110(v44, v103 + *(void *)(v11 + 72) * v46, v45);
    os_log_t v98 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v98(v44, 0, 1, v45);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v44, 1, v45) == 1) {
      goto LABEL_44;
    }
    (*v100)(v47, v44, v45);
    uint64_t v52 = URL.lastPathComponent.getter();
    uint64_t v54 = v53;
    v51(v117, v47, v45);
    uint64_t v55 = v116[2];
    if (v55)
    {
      uint64_t v56 = v51;
      if (v116[4] == v52 && v116[5] == v54 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
LABEL_14:
        swift_bridgeObjectRelease();
        uint64_t v57 = v117;
        sub_1004D0820(0);
        OSStatus v58 = v112;
        static Logger.general.getter();
        long long v59 = v97;
        int v60 = v115;
        uint64_t v45 = v113;
        v56(v97, v115, v113);
        unint64_t v61 = Logger.logObject.getter();
        os_log_type_t v62 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v61, v62))
        {
          uint64_t v63 = swift_slowAlloc();
          uint64_t v64 = v59;
          id v119 = (id)swift_slowAlloc();
          *(_DWORD *)uint64_t v63 = v91;
          sub_1002F9C14();
          uint64_t v65 = dispatch thunk of CustomStringConvertible.description.getter();
          *(void *)(v63 + 4) = sub_1000143F4(v65, v66, (uint64_t *)&v119);
          swift_bridgeObjectRelease();
          long long v67 = *v106;
          (*v106)(v64, v45);
          _os_log_impl((void *)&_mh_execute_header, v61, v62, "Update backup to allow of url: %s", (uint8_t *)v63, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*v96)(v112, v105);
          v67(v117, v45);
          CFTypeRef v68 = v115;
          v67(v115, v45);
          uint64_t v11 = v99;
          os_log_type_t v48 = v114;
          uint64_t v40 = v107;
          uint64_t v49 = v108;
          uint64_t v47 = v68;
        }
        else
        {

          CFStringRef v50 = *v106;
          (*v106)(v59, v45);
          (*v96)(v58, v105);
          v50(v57, v45);
          v50(v60, v45);
          uint64_t v11 = v99;
          uint64_t v47 = v60;
          os_log_type_t v48 = v114;
          uint64_t v40 = v107;
          uint64_t v49 = v108;
        }
        goto LABEL_7;
      }
      if (v55 != 1)
      {
        if (v116[6] == v52 && v116[7] == v54 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_14;
        }
        if (v55 != 2)
        {
          os_log_t v79 = (void *)v90[0];
          uint64_t v80 = 2;
          while (1)
          {
            uint64_t v81 = v80 + 1;
            if (__OFADD__(v80, 1)) {
              break;
            }
            BOOL v82 = *(v79 - 1) == v52 && *v79 == v54;
            if (v82 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
              goto LABEL_14;
            }
            v79 += 2;
            ++v80;
            if (v81 == v55) {
              goto LABEL_17;
            }
          }
LABEL_46:
          __break(1u);
        }
      }
    }
LABEL_17:
    if (v52 == 0xD000000000000032 && v54 == v92)
    {
      swift_bridgeObjectRelease();
      uint64_t v47 = v115;
      uint64_t v45 = v113;
      uint64_t v40 = v107;
      uint64_t v69 = v117;
    }
    else
    {
      char v70 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t v47 = v115;
      uint64_t v45 = v113;
      uint64_t v40 = v107;
      uint64_t v69 = v117;
      if ((v70 & 1) == 0)
      {
        unint64_t v71 = v95;
        static Logger.general.getter();
        id v72 = v93;
        v110(v93, (uint64_t)v47, v45);
        uint64_t v73 = Logger.logObject.getter();
        uint64_t v74 = v45;
        os_log_type_t v75 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v73, v75))
        {
          uint64_t v76 = swift_slowAlloc();
          id v119 = (id)swift_slowAlloc();
          *(_DWORD *)uint64_t v76 = v91;
          sub_1002F9C14();
          uint64_t v77 = dispatch thunk of CustomStringConvertible.description.getter();
          *(void *)(v76 + 4) = sub_1000143F4(v77, v78, (uint64_t *)&v119);
          swift_bridgeObjectRelease();
          (*v106)(v72, v74);
          _os_log_impl((void *)&_mh_execute_header, v73, v75, "Update backup to exclude of url: %s", (uint8_t *)v76, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v69 = v117;
          swift_slowDealloc();

          (*v96)(v95, v105);
        }
        else
        {
          (*v106)(v72, v74);

          (*v96)(v71, v105);
        }
        uint64_t v45 = v74;
        sub_1004D0820(1);
        uint64_t v47 = v115;
      }
    }
    os_log_type_t v83 = *v106;
    (*v106)(v69, v45);
    v83(v47, v45);
    uint64_t v11 = v99;
    os_log_type_t v48 = v114;
    uint64_t v49 = v108;
LABEL_7:
    ++v46;
    unint64_t v44 = v109;
  }
  while (v46 != v104);
  v98(v109, 1, 1, v45);
LABEL_44:

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v45);
  return swift_slowDealloc();
}

uint64_t sub_1003C75D8()
{
  uint64_t v14 = 1;
  String.utf8CString.getter();
  swift_bridgeObjectRelease();
  uint64_t v0 = container_system_group_path_for_identifier();
  swift_release();
  if (v0)
  {
    String.init(cString:)();
    id v1 = objc_allocWithZone((Class)NSURL);
    NSString v2 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v3 = [v1 initFileURLWithPath:v2];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v13 = 0;
    LOBYTE(v2) = [v3 setResourceValue:v4 forKey:NSURLFileProtectionKey error:&v13];

    id v5 = v13;
    if ((v2 & 1) != 0
      && (id v6 = v13,
          Class isa = Bool._bridgeToObjectiveC()().super.super.isa,
          id v13 = 0,
          v8 = [v3 setResourceValue:isa forKey:NSURLIsExcludedFromBackupKey error:&v13], isa, id v5 = v13, (v8 & 1) != 0))
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)();
      id v9 = v5;
    }
    else
    {
      id v10 = v5;
      _convertNSErrorToError(_:)();

      swift_willThrow();
    }

    return swift_slowDealloc();
  }
  else
  {
    sub_1003C7B38();
    swift_allocError();
    *uint64_t v12 = v14;
    return swift_willThrow();
  }
}

uint64_t sub_1003C77F8@<X0>(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL.DirectoryHint();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v25 = a1;
  unint64_t v26 = a2;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for URL.DirectoryHint.inferFromPath(_:), v10);
  sub_100017B14();
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (URL.hasDirectoryPath.getter()) {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  }
  else {
    URL.deletingLastPathComponent()();
  }
  id v14 = [self defaultManager];
  URL._bridgeToObjectiveC()(v15);
  uint64_t v17 = v16;
  id v25 = 0;
  unsigned int v18 = [v14 createDirectoryAtURL:v16 withIntermediateDirectories:1 attributes:0 error:&v25];

  if (v18)
  {
    uint64_t v19 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    id v20 = v25;
    return v19(v9, v6);
  }
  else
  {
    id v22 = v25;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    id v25 = 0;
    unint64_t v26 = 0xE000000000000000;
    _StringGuts.grow(_:)(49);
    v23._object = (void *)0x80000001005BEBC0;
    v23._countAndFlagsBits = 0xD00000000000002FLL;
    String.append(_:)(v23);
    swift_getErrorValue();
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

unint64_t sub_1003C7B38()
{
  unint64_t result = qword_100662000;
  if (!qword_100662000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662000);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContainerError()
{
  return &type metadata for ContainerError;
}

uint64_t sub_1003C7B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  id v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_1003C7C08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1003C7C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1003C7CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1003C7D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1003C7D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003C7DAC);
}

uint64_t sub_1003C7DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1003C7E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003C7E2C);
}

uint64_t sub_1003C7E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for Container()
{
  uint64_t result = qword_100662060;
  if (!qword_100662060) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003C7EE8()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1003C7F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[27] = a4;
  v5[28] = a5;
  v5[25] = a2;
  v5[26] = a3;
  v5[24] = a1;
  uint64_t v6 = type metadata accessor for JSONDecoder.KeyDecodingStrategy();
  v5[29] = v6;
  v5[30] = *(void *)(v6 - 8);
  v5[31] = swift_task_alloc();
  return _swift_task_switch(sub_1003C803C, 0, 0);
}

uint64_t sub_1003C803C()
{
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 208);
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  *(void *)(v0 + 256) = JSONDecoder.init()();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase(_:), v3);
  dispatch thunk of JSONDecoder.keyDecodingStrategy.setter();
  *(void *)(v0 + 104) = v4;
  *(unsigned char *)(v0 + 144) = 1;
  swift_bridgeObjectRetain();
  id v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v5;
  *id v5 = v0;
  v5[1] = sub_1003C8164;
  uint64_t v7 = *(void *)(v0 + 216);
  uint64_t v6 = *(void *)(v0 + 224);
  return sub_10044F228(v7, v0 + 104, 0, v6);
}

uint64_t sub_1003C8164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = (void *)*v4;
  v5[34] = a1;
  v5[35] = a2;
  uint64_t v6 = (uint64_t)(v5 + 13);
  v5[36] = a3;
  v5[37] = v3;
  swift_task_dealloc();
  sub_1002C672C(v6);
  if (v3) {
    uint64_t v7 = sub_1003C84D8;
  }
  else {
    uint64_t v7 = sub_1003C8288;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1003C8288()
{
  id v1 = [*(id *)(v0 + 288) statusCode];
  uint64_t v2 = *(void *)(v0 + 296);
  if (v1 == (id)200)
  {
    sub_1003C5C2C();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    uint64_t v3 = v2;
    unint64_t v5 = *(void *)(v0 + 280);
    uint64_t v4 = *(void **)(v0 + 288);
    uint64_t v6 = *(void *)(v0 + 272);
    if (!v3)
    {
      uint64_t v14 = *(void *)(v0 + 192);

      sub_100013510(v6, v5);
      swift_release();
      long long v25 = *(_OWORD *)(v0 + 32);
      long long v26 = *(_OWORD *)(v0 + 16);
      long long v23 = *(_OWORD *)(v0 + 64);
      long long v24 = *(_OWORD *)(v0 + 48);
      long long v22 = *(_OWORD *)(v0 + 80);
      uint64_t v15 = *(void *)(v0 + 96);
      swift_task_dealloc();
      *(_OWORD *)uint64_t v14 = v26;
      *(_OWORD *)(v14 + 16) = v25;
      *(_OWORD *)(v14 + 32) = v24;
      *(_OWORD *)(v14 + 48) = v23;
      *(_OWORD *)(v14 + 64) = v22;
      *(void *)(v14 + 80) = v15;
      uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_10;
    }

    uint64_t v7 = v6;
    unint64_t v8 = v5;
  }
  else
  {
    sub_1003C8544();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    unint64_t v9 = *(void *)(v0 + 280);
    uint64_t v10 = *(void **)(v0 + 288);
    uint64_t v11 = *(void *)(v0 + 272);
    if (v2)
    {
      swift_errorRelease();
      id v12 = [v10 statusCode];
      sub_10029D4AC();
      swift_allocError();
      *(void *)uint64_t v13 = v12;
      *(unsigned char *)(v13 + 8) = 0;
    }
    else
    {
      long long v27 = *(_OWORD *)(v0 + 152);
      uint64_t v17 = *(void *)(v0 + 168);
      uint64_t v18 = *(void *)(v0 + 176);
      char v19 = *(unsigned char *)(v0 + 184);
      sub_1003C8598();
      swift_allocError();
      *(_OWORD *)uint64_t v20 = v27;
      *(void *)(v20 + 16) = v17;
      *(void *)(v20 + 24) = v18;
      *(unsigned char *)(v20 + 32) = v19;
    }
    swift_willThrow();

    uint64_t v7 = v11;
    unint64_t v8 = v9;
  }
  sub_100013510(v7, v8);
  swift_release();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
LABEL_10:
  return v16();
}

uint64_t sub_1003C84D8()
{
  swift_release();
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1003C8544()
{
  unint64_t result = qword_1006620A0;
  if (!qword_1006620A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006620A0);
  }
  return result;
}

unint64_t sub_1003C8598()
{
  unint64_t result = qword_1006620A8;
  if (!qword_1006620A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006620A8);
  }
  return result;
}

void sub_1003C85EC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_1003C8658(char *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_extractor;
  uint64_t v10 = *(void **)&a1[OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_extractor];
  if (v10)
  {
LABEL_2:
    id v11 = v10;
    dispatch_semaphore_t v12 = dispatch_semaphore_create(0);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = v12;
    v59[3] = sub_1003CA2B8;
    v59[4] = v13;
    aBlock = _NSConcreteStackBlock;
    v59[0] = 1107296256;
    v59[1] = sub_1003C8BD4;
    v59[2] = &unk_100644B38;
    uint64_t v14 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v15 = v12;
    swift_release();
    [v11 prepareForExtraction:v14];
    _Block_release(v14);
    OS_dispatch_semaphore.wait()();

    return;
  }
  uint64_t v16 = sub_1004E6034(&a1[OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_coordinatorID]);
  if (!v16) {
    goto LABEL_14;
  }
  uint64_t v17 = v16;
  uint64_t v57 = v6;
  v59[6] = &OBJC_PROTOCOL___IXCoordinatorWithAppAssetPromise;
  uint64_t v18 = swift_dynamicCastObjCProtocolConditional();
  if (!v18) {
    goto LABEL_13;
  }
  char v19 = (void *)v18;
  uint64_t v56 = v2;
  v59[5] = &OBJC_PROTOCOL___IXCoordinatorWithAppAssetPromise;
  uint64_t v20 = swift_dynamicCastObjCProtocolConditional();
  if (v20)
  {
    uint64_t v21 = (void *)v20;
    id v22 = v17;
    id v23 = v19;
    if (![v21 hasAppAssetPromise])
    {

      uint64_t v17 = v22;
LABEL_12:

LABEL_13:
LABEL_14:
      type metadata accessor for InternalError();
      sub_100013C6C((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return;
    }
    id v55 = v22;
    aBlock = 0;
    id v24 = [v21 appAssetPromiseWithError:&aBlock];
    if (v24)
    {
      uint64_t v17 = v24;
      long long v25 = aBlock;
      id v22 = v55;

      self;
      uint64_t v26 = swift_dynamicCastObjCClass();

      if (v26)
      {
        uint64_t v54 = (void **)v26;
        static Logger.download.getter();
        long long v27 = a1;
        id v28 = v17;
        NSString v29 = v27;
        id v30 = v28;
        uint64_t v31 = Logger.logObject.getter();
        os_log_type_t v32 = static os_log_type_t.default.getter();
        int v33 = v32;
        uint64_t v53 = v31;
        if (os_log_type_enabled(v31, v32))
        {
          uint64_t v34 = swift_slowAlloc();
          int v51 = v33;
          uint64_t v35 = v34;
          uint64_t v52 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v35 = 138412546;
          id v50 = v30;
          long long v36 = *(void ***)&v29[OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_logKey];
          uint64_t v47 = v35 + 12;
          uint64_t v48 = v35 + 4;
          aBlock = v36;
          uint64_t v49 = v59;
          unint64_t v37 = v36;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v52 = v36;

          *(_WORD *)(v35 + 12) = 2114;
          uint64_t v48 = v35 + 14;
          id v38 = v54;
          aBlock = v54;
          id v39 = v50;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          v52[1] = v38;

          uint64_t v40 = v53;
          _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v51, "[%@] Preparing for download using: %{public}@", (uint8_t *)v35, 0x16u);
          sub_1000172F8(&qword_10065DB10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          id v41 = v55;

          uint64_t v42 = v57;
        }
        else
        {

          id v45 = v55;
          uint64_t v42 = v57;
          id v38 = v54;
        }
        (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v5);
        unint64_t v46 = *(void **)&a1[v9];
        *(void *)&a1[v9] = v38;

        uint64_t v10 = *(void **)&a1[v9];
        if (v10) {
          goto LABEL_2;
        }
        goto LABEL_14;
      }
      goto LABEL_12;
    }
    uint64_t v43 = aBlock;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    id v44 = v55;
  }
  else
  {
    __break(1u);
  }
}

void sub_1003C8BD4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1003C8C4C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(unsigned char *)(v5 + 24) = 0;
  queue = *(NSObject **)&v2[OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_extractorQueue];
  id v6 = (void *)swift_allocObject();
  v6[2] = v2;
  v6[3] = a1;
  v6[4] = a2;
  v6[5] = v5;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003CA25C;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_1003CA278;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003C90D4;
  aBlock[3] = &unk_100644A98;
  unint64_t v8 = _Block_copy(aBlock);
  uint64_t v9 = v2;
  swift_retain();
  swift_retain();
  sub_100012670(a1, a2);
  swift_release();
  dispatch_sync(queue, v8);
  _Block_release(v8);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v8)
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    uint64_t v11 = *(void *)(v5 + 16);
    if (*(unsigned char *)(v5 + 24))
    {
      aBlock[7] = *(void *)(v5 + 16);
      swift_errorRetain();
      sub_1000172F8(&qword_10065B260);
      swift_willThrowTypedImpl();
      swift_release();
      swift_release();
    }
    else
    {
      swift_release();
      swift_release();
      char v12 = v11 & 1;
    }
    return v12 & 1;
  }
  return result;
}

void sub_1003C8E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  dispatch_semaphore_t v6 = dispatch_semaphore_create(0);
  uint64_t v7 = *(void **)(a1 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_extractor);
  if (v7)
  {
    id v8 = v7;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a4;
    *(void *)(v10 + 24) = v6;
    v13[4] = sub_1003CA2AC;
    v13[5] = v10;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_1003C905C;
    v13[3] = &unk_100644AE8;
    uint64_t v11 = _Block_copy(v13);
    swift_retain();
    char v12 = v6;
    swift_release();
    [v8 supplyBytes:isa withCompletionBlock:v11];
    _Block_release(v11);
  }
  OS_dispatch_semaphore.wait()();
}

Swift::Int sub_1003C8FB0(uint64_t a1, char a2, uint64_t a3)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t v5 = *(void *)(a3 + 16);
    char v6 = *(unsigned char *)(a3 + 24);
    *(void *)(a3 + 16) = a1;
    *(unsigned char *)(a3 + 24) = 1;
    swift_errorRetain();
    uint64_t v7 = v5;
    char v8 = v6;
  }
  else
  {
    uint64_t v9 = a2 & 1;
    swift_beginAccess();
    uint64_t v7 = *(void *)(a3 + 16);
    char v8 = *(unsigned char *)(a3 + 24);
    *(void *)(a3 + 16) = v9;
    *(unsigned char *)(a3 + 24) = 0;
  }
  sub_1002548E8(v7, v8);
  return OS_dispatch_semaphore.signal()();
}

void sub_1003C905C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(void *, uint64_t))(a1 + 32);
  swift_retain();
  id v6 = a2;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1003C90D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1003C90FC()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  uint64_t v2 = *(NSObject **)&v0[OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_extractorQueue];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1003CA3AC;
  *(void *)(v4 + 24) = v3;
  void v9[4] = sub_1003CA834;
  v9[5] = v4;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1003C90D4;
  v9[3] = &unk_100644CC8;
  uint64_t v5 = _Block_copy(v9);
  id v6 = v0;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v2, v5);
  _Block_release(v5);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    if (*(unsigned char *)(v1 + 24))
    {
      v9[7] = *(void *)(v1 + 16);
      swift_errorRetain();
      sub_1000172F8(&qword_10065B260);
      swift_willThrowTypedImpl();
    }
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1003C92E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_extractor);
  if (v2)
  {
    id v4 = v2;
    id v5 = [v4 error];
    if (v5)
    {
      id v10 = v5;
    }
    else
    {
      dispatch_semaphore_t v6 = dispatch_semaphore_create(0);
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = a2;
      *(void *)(v7 + 24) = v6;
      aBlock[4] = sub_1003CA878;
      aBlock[5] = v7;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1003C8BD4;
      aBlock[3] = &unk_100644D18;
      char v8 = _Block_copy(aBlock);
      swift_retain();
      uint64_t v9 = v6;
      swift_release();
      [v4 suspendStreamWithCompletionBlock:v8];
      _Block_release(v8);
      OS_dispatch_semaphore.wait()();
    }
  }
}

Swift::Int sub_1003C944C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    swift_beginAccess();
    uint64_t v6 = *(void *)(a3 + 16);
    char v7 = *(unsigned char *)(a3 + 24);
    *(void *)(a3 + 16) = a2;
    *(unsigned char *)(a3 + 24) = 1;
    swift_errorRetain();
    uint64_t v8 = v6;
    char v9 = v7;
  }
  else
  {
    swift_beginAccess();
    uint64_t v8 = *(void *)(a3 + 16);
    char v9 = *(unsigned char *)(a3 + 24);
    *(void *)(a3 + 16) = a1;
    *(unsigned char *)(a3 + 24) = 0;
  }
  sub_1002548E8(v8, v9);
  return OS_dispatch_semaphore.signal()();
}

void sub_1003C94F8(char *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void **)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v35 - v7;
  uint64_t v9 = OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_extractor;
  id v10 = *(void **)&a1[OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_extractor];
  *(void *)&a1[OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_extractor] = 0;

  uint64_t v11 = sub_1004E6034(&a1[OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_coordinatorID]);
  if (v11)
  {
    char v12 = v11;
    v39[1] = &OBJC_PROTOCOL___IXCoordinatorWithAppAssetPromise;
    uint64_t v13 = swift_dynamicCastObjCProtocolConditional();
    if (v13)
    {
      uint64_t v14 = (void *)v13;
      id v15 = v12;
      uint64_t v16 = v15;
      if ([v14 hasAppAssetPromise])
      {
        v39[0] = 0;
        id v17 = [v14 appAssetPromiseWithError:v39];
        if (!v17)
        {
          id v34 = v39[0];
          _convertNSErrorToError(_:)();

          swift_willThrow();
LABEL_16:

          return;
        }
        uint64_t v16 = v17;
        id v18 = v39[0];

        self;
        uint64_t v19 = swift_dynamicCastObjCClass();
        if (v19)
        {
          uint64_t v20 = v19;

          uint64_t v21 = *(void **)&a1[v9];
          *(void *)&a1[v9] = v20;

          return;
        }
      }

      static Logger.download.getter();
      id v22 = a1;
      id v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v23, v24))
      {
        long long v25 = (uint8_t *)swift_slowAlloc();
        long long v36 = (void *)swift_slowAlloc();
        unint64_t v37 = v3;
        uint64_t v38 = v2;
        *(_DWORD *)long long v25 = 138412290;
        v35[1] = v25 + 4;
        uint64_t v26 = *(Class *)((char *)&v22->isa + OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_logKey);
        v39[0] = v26;
        id v27 = v26;
        uint64_t v3 = v37;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v36 = v26;
        uint64_t v2 = v38;

        _os_log_impl((void *)&_mh_execute_header, v23, v24, "[%@] Can't reset consumer, promise not found", v25, 0xCu);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        id v23 = v22;
      }

      ((void (*)(char *, uint64_t))v3[1])(v6, v2);
      type metadata accessor for InternalError();
      sub_100013C6C((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
    static Logger.download.getter();
    id v28 = a1;
    NSString v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v38 = v2;
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      unint64_t v37 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 138412290;
      long long v36 = v31 + 4;
      os_log_type_t v32 = *(Class *)((char *)&v28->isa + OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_logKey);
      v39[0] = v32;
      id v33 = v32;
      uint64_t v2 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v37 = v32;

      _os_log_impl((void *)&_mh_execute_header, v29, v30, "[%@] Can't reset consumer, coordinator not found", v31, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      NSString v29 = v28;
    }

    ((void (*)(char *, uint64_t))v3[1])(v8, v2);
    type metadata accessor for InternalError();
    sub_100013C6C((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
}

uint64_t sub_1003C9A9C()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  uint64_t v2 = *(NSObject **)&v0[OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_extractorQueue];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1003CA2F0;
  *(void *)(v4 + 24) = v3;
  void v9[4] = sub_1003CA834;
  v9[5] = v4;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1003C90D4;
  v9[3] = &unk_100644BD8;
  uint64_t v5 = _Block_copy(v9);
  uint64_t v6 = v0;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v2, v5);
  _Block_release(v5);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    if (*(unsigned char *)(v1 + 24))
    {
      v9[7] = *(void *)(v1 + 16);
      swift_errorRetain();
      sub_1000172F8(&qword_10065B260);
      swift_willThrowTypedImpl();
    }
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1003C9C88()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  uint64_t v2 = *(NSObject **)&v0[OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_extractorQueue];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1003CA40C;
  *(void *)(v4 + 24) = v3;
  void v9[4] = sub_1003CA834;
  v9[5] = v4;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1003C90D4;
  v9[3] = &unk_100644D90;
  uint64_t v5 = _Block_copy(v9);
  uint64_t v6 = v0;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v2, v5);
  _Block_release(v5);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    if (*(unsigned char *)(v1 + 24))
    {
      v9[7] = *(void *)(v1 + 16);
      swift_errorRetain();
      sub_1000172F8(&qword_10065B260);
      swift_willThrowTypedImpl();
    }
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1003C9E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  dispatch_semaphore_t v11 = dispatch_semaphore_create(0);
  char v12 = *(void **)(a1 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_extractor);
  if (v12)
  {
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = v11;
    v17[4] = a4;
    v17[5] = v13;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 1107296256;
    v17[2] = sub_1003C85EC;
    v17[3] = a5;
    uint64_t v14 = _Block_copy(v17);
    id v15 = v12;
    swift_retain();
    uint64_t v16 = v11;
    swift_release();
    objc_msgSend(v15, *a6, v14);
    _Block_release(v14);
  }
  OS_dispatch_semaphore.wait()();
}

Swift::Int sub_1003C9F88(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t v4 = *(void *)(a2 + 16);
    char v5 = *(unsigned char *)(a2 + 24);
    *(void *)(a2 + 16) = a1;
    *(unsigned char *)(a2 + 24) = 1;
    swift_errorRetain();
    uint64_t v6 = v4;
    char v7 = v5;
  }
  else
  {
    swift_beginAccess();
    uint64_t v6 = *(void *)(a2 + 16);
    char v7 = *(unsigned char *)(a2 + 24);
    *(void *)(a2 + 16) = 0;
    *(unsigned char *)(a2 + 24) = 0;
  }
  sub_1002548E8(v6, v7);
  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_1003CA100()
{
  return type metadata accessor for StreamingExtractor();
}

uint64_t type metadata accessor for StreamingExtractor()
{
  uint64_t result = qword_1006620F8;
  if (!qword_1006620F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003CA154()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1003CA1FC()
{
  return sub_1003CA364((void (*)(void, void))sub_1002548E8);
}

uint64_t sub_1003CA214()
{
  sub_100013510(*(void *)(v0 + 24), *(void *)(v0 + 32));
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1003CA25C()
{
  sub_1003C8E74(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1003CA268()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003CA278()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1003CA2A0()
{
  return swift_release();
}

Swift::Int sub_1003CA2AC(uint64_t a1, char a2)
{
  return sub_1003C8FB0(a1, a2, *(void *)(v2 + 16));
}

Swift::Int sub_1003CA2B8(uint64_t a1, uint64_t a2)
{
  return sub_1003C944C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1003CA2D4()
{
  return sub_1003CA364((void (*)(void, void))sub_1003340F0);
}

void sub_1003CA2F0()
{
  sub_1003C9E74(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_100644C10, (uint64_t)sub_1003CA87C, (uint64_t)&unk_100644C28, (SEL *)&selRef_resetWithCompletion_);
}

uint64_t sub_1003CA338()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003CA34C()
{
  return sub_1003CA364((void (*)(void, void))sub_1002548E8);
}

uint64_t sub_1003CA364(void (*a1)(void, void))
{
  a1(*(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));

  return _swift_deallocObject(v1, 25, 7);
}

void sub_1003CA3AC()
{
  sub_1003C92E8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003CA3B4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003CA3CC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003CA40C()
{
  sub_1003C9E74(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_100644DC8, (uint64_t)sub_1003CA4A8, (uint64_t)&unk_100644DE0, (SEL *)&selRef_finishStreamWithCompletionBlock_);
}

uint64_t sub_1003CA454()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003CA468()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

Swift::Int sub_1003CA4A8(uint64_t a1)
{
  return sub_1003C9F88(a1, *(void *)(v1 + 16));
}

id sub_1003CA4C4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v26 = a3;
  uint64_t v22 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  __chkstk_darwin(v6);
  id v23 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue_serial.Attributes();
  __chkstk_darwin(v8);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_extractor;
  *(void *)&v3[OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_extractor] = 0;
  dispatch_semaphore_t v11 = &v3[OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_coordinatorID];
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
  uint64_t v14 = *(void **)&v3[v10];
  *(void *)&v3[v10] = a2;
  id v15 = v3;
  id v16 = a2;

  sub_1003CA7F4();
  static DispatchQoS.unspecified.getter();
  NSString v29 = _swiftEmptyArrayStorage;
  sub_100013C6C((unint64_t *)&qword_10065DAD0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue_serial.Attributes);
  sub_1000172F8(&qword_100662120);
  sub_10025CCB4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v23, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v25);
  *(void *)&v15[OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_extractorQueue] = OS_dispatch_queue_serial.init(label:qos:attributes:autoreleaseFrequency:target:)();
  id v17 = v26;
  *(void *)&v15[OBJC_IVAR____TtC28ManagedAppDistributionDaemon18StreamingExtractor_logKey] = v26;
  id v18 = v17;

  v28.receiver = v15;
  v28.super_class = ObjectType;
  id v19 = objc_msgSendSuper2(&v28, "init");
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v22, v12);
  return v19;
}

unint64_t sub_1003CA7F4()
{
  unint64_t result = qword_100662110;
  if (!qword_100662110)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100662110);
  }
  return result;
}

uint64_t sub_1003CA880()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000172F8(&qword_1006621E0);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 32) = 0;
  *(unsigned char *)(v6 + 16) = 0;
  *(_DWORD *)(v6 + 20) = -1;
  *(void *)(v6 + 24) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 16) = v6;
  out_token[0] = -1;
  sub_100176BD4();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchQoS.QoSClass.default(_:), v2);
  uint64_t v7 = static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  aBlock[4] = sub_1003CB628;
  aBlock[5] = v1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004D2B58;
  aBlock[3] = &unk_100644E08;
  uint64_t v8 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  notify_register_dispatch(kOSThermalNotificationPressureLevelName, out_token, v7, v8);
  _Block_release(v8);

  uint64_t v9 = *(os_unfair_lock_s **)(v1 + 16);
  out_token[5] = out_token[0];
  swift_retain();
  os_unfair_lock_lock(v9 + 8);
  sub_10035E08C((uint64_t)&v9[4]);
  os_unfair_lock_unlock(v9 + 8);
  swift_release();
  uint64_t v10 = *(os_unfair_lock_s **)(v1 + 16);
  dispatch_semaphore_t v11 = v10 + 4;
  uint64_t v12 = v10 + 8;
  os_unfair_lock_lock(v10 + 8);
  sub_1003CB728(v11, aBlock);
  os_unfair_lock_unlock(v12);
  sub_1003CAF2C(aBlock[0]);
  return v1;
}

uint64_t sub_1003CAB14()
{
  uint64_t v30 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v30 - 8);
  uint64_t v2 = __chkstk_darwin(v30);
  uint64_t v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = &v28[-v6];
  __chkstk_darwin(v5);
  uint64_t v9 = &v28[-v8];
  uint64_t v10 = *(os_unfair_lock_s **)(v0 + 16);
  dispatch_semaphore_t v11 = v10 + 4;
  uint64_t v12 = v10 + 8;
  os_unfair_lock_lock(v10 + 8);
  sub_10035D7F4((uint64_t)v11, state64);
  os_unfair_lock_unlock(v12);
  int v13 = state64[0];
  if (LODWORD(state64[0]) == -1)
  {
    static Logger.daemon.getter();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[Thermal] Unable to check thermal pressure state, token is invalid", v22, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 8))(v4, v30);
  }
  else
  {
    os_unfair_lock_lock(v12);
    sub_10035D0D8(v11, state64);
    os_unfair_lock_unlock(v12);
    int v14 = LOBYTE(state64[0]);
    state64[0] = 0;
    uint64_t result = notify_get_state(v13, state64);
    if (result)
    {
      int v16 = result;
      static Logger.daemon.getter();
      id v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v17, v18))
      {
        id v19 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)id v19 = 67240192;
        BOOL v31 = v16;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "[Thermal] Error getting thermal pressure state with status: %{public}u", v19, 8u);
        swift_slowDealloc();
      }

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 8))(v7, v30);
    }
    else
    {
      uint64_t v23 = state64[0];
      if (v14 != state64[0] > 0x13)
      {
        static Logger.daemon.getter();
        uint64_t v24 = Logger.logObject.getter();
        os_log_type_t v25 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v24, v25))
        {
          BOOL v29 = v23 > 0x13;
          uint64_t v26 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v26 = 67240192;
          BOOL v31 = v29;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v24, v25, "[Thermal] Thermal pressure state changed, is elevated: %{BOOL,public}d", v26, 8u);
          swift_slowDealloc();
        }

        uint64_t v27 = (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 8))(v9, v30);
        __chkstk_darwin(v27);
        v28[-16] = v23 > 0x13;
        os_unfair_lock_lock(v12);
        sub_10035E0A4(v11);
        os_unfair_lock_unlock(v12);
        return sub_1003CAF2C(v23 > 0x13);
      }
    }
  }
  return result;
}

uint64_t sub_1003CAF2C(char a1)
{
  uint64_t v3 = sub_1000172F8(&qword_10065E560);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v8 = (uint64_t)&v7[4];
  uint64_t v9 = v7 + 8;
  os_unfair_lock_lock(v7 + 8);
  sub_10035DB40(v8, &v20);
  os_unfair_lock_unlock(v9);
  uint64_t v10 = *(void *)(v20 + 16);
  if (v10)
  {
    int v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v11 = v4 + 16;
    uint64_t v12 = v13;
    unint64_t v14 = (*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64);
    v19[1] = v20;
    uint64_t v15 = v20 + v14;
    uint64_t v16 = *(void *)(v11 + 56);
    char v17 = a1 & 1;
    do
    {
      v12(v6, v15, v3);
      LOBYTE(v20) = v17;
      CheckedContinuation.resume(returning:)();
      (*(void (**)(char *, uint64_t))(v11 - 8))(v6, v3);
      v15 += v16;
      --v10;
    }
    while (v10);
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003CB0D8()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  os_unfair_lock_lock(v1 + 8);
  sub_10035E1D0((uint64_t)&v1[4], &token);
  os_unfair_lock_unlock(v1 + 8);
  if (token != -1)
  {
    notify_cancel(token);
    os_unfair_lock_lock(v1 + 8);
    sub_10035D800((uint64_t)&v1[4]);
    os_unfair_lock_unlock(v1 + 8);
  }
  swift_release();
  return v0;
}

uint64_t sub_1003CB178()
{
  sub_1003CB0D8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ThermalPressureMonitor()
{
  return self;
}

unint64_t sub_1003CB1D4()
{
  unint64_t result = qword_1006621C8[0];
  if (!qword_1006621C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1006621C8);
  }
  return result;
}

uint64_t sub_1003CB228(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000172F8(&qword_10065E560);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  unint64_t v8 = *(void *)(a1 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v8 = sub_1002907F0(0, *(void *)(v8 + 16) + 1, 1, v8);
  }
  unint64_t v10 = *(void *)(v8 + 16);
  unint64_t v9 = *(void *)(v8 + 24);
  if (v10 >= v9 >> 1) {
    unint64_t v8 = sub_1002907F0(v9 > 1, v10 + 1, 1, v8);
  }
  *(void *)(v8 + 16) = v10 + 1;
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v10, v7, v4);
  *(void *)(a1 + 8) = v8;
  return result;
}

void sub_1003CB3A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(a2 + 16);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 8;
  os_unfair_lock_lock(v2 + 8);
  sub_1003CB60C(v3);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_1003CB400(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = *v1;
  return _swift_task_switch(sub_1003CB428, 0, 0);
}

uint64_t sub_1003CB428()
{
  if (static Task<>.isCancelled.getter())
  {
    **(unsigned char **)(v0 + 16) = 2;
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 32) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_10035DCF8;
    uint64_t v4 = *(void *)(v0 + 24);
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 40, 0, 0, 0x29287478656ELL, 0xE600000000000000, sub_10035E034, v4, &type metadata for Bool);
  }
}

uint64_t sub_1003CB544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 24) = a1;
  unint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1006611F0 + dword_1006611F0);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 32) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_10035DEE0;
  return v8(a2, a3, v3 + 16);
}

uint64_t sub_1003CB60C(uint64_t a1)
{
  return sub_1003CB228(a1, *(void *)(v1 + 16));
}

uint64_t sub_1003CB62C()
{
  return swift_release();
}

uint64_t sub_1003CB638(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ThermalPressureMonitor.State(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ThermalPressureMonitor.State(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ThermalPressureMonitor.State()
{
  return &type metadata for ThermalPressureMonitor.State;
}

ValueMetadata *type metadata accessor for ThermalPressureMonitor.AsyncIterator()
{
  return &type metadata for ThermalPressureMonitor.AsyncIterator;
}

unsigned char *sub_1003CB728@<X0>(unsigned char *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_10035D0D8(a1, a2);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppStoreReceipt(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_100012670(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for AppStoreReceipt(uint64_t a1)
{
  return sub_100013510(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *assignWithCopy for AppStoreReceipt(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_100012670(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_100013510(v5, v6);
  return a1;
}

uint64_t *assignWithTake for AppStoreReceipt(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_100013510(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppStoreReceipt(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AppStoreReceipt(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)uint64_t result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreReceipt()
{
  return &type metadata for AppStoreReceipt;
}

void *sub_1003CB8C0(uint64_t a1)
{
  uint64_t v68 = type metadata accessor for URL.DirectoryHint();
  uint64_t v2 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  long long v67 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000172F8(&qword_10065C3C0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  unint64_t v10 = (char *)&v51 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v51 - v11;
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v55 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v54 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  int v51 = (char *)&v51 - v16;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_1003CE168();
    sub_1003CE1A8(&qword_100662208, (void (*)(uint64_t))sub_1003CE168);
    uint64_t result = (void *)Set.Iterator.init(_cocoa:)();
    a1 = v76;
    uint64_t v60 = v77;
    uint64_t v18 = v78;
    uint64_t v19 = v79;
    unint64_t v20 = v80;
  }
  else
  {
    uint64_t v21 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v22 = *(void *)(a1 + 56);
    uint64_t v60 = a1 + 56;
    uint64_t v18 = ~v21;
    uint64_t v23 = -v21;
    if (v23 < 64) {
      uint64_t v24 = ~(-1 << v23);
    }
    else {
      uint64_t v24 = -1;
    }
    unint64_t v20 = v24 & v22;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    uint64_t v19 = 0;
  }
  uint64_t v58 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v52 = v18;
  int64_t v59 = (unint64_t)(v18 + 64) >> 6;
  id v72 = (unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
  uint64_t v73 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56);
  unsigned int v65 = enum case for URL.DirectoryHint.inferFromPath(_:);
  uint64_t v63 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v64 = (void (**)(char *, void, uint64_t))(v2 + 104);
  os_log_type_t v62 = (void (**)(char *, uint64_t))(v55 + 8);
  uint64_t v53 = (void (**)(char *, char *, uint64_t))(v55 + 32);
  uint64_t v56 = _swiftEmptyArrayStorage;
  unint64_t v61 = 0x80000001005BED90;
  uint64_t v57 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v69 = a1;
  uint64_t v66 = v13;
LABEL_8:
  uint64_t v25 = v19;
  if (a1 < 0)
  {
    do
    {
      uint64_t v28 = __CocoaSet.Iterator.next()();
      if (!v28) {
        goto LABEL_45;
      }
      uint64_t v81 = v28;
      sub_1003CE168();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v29 = (id)v74;
      swift_unknownObjectRelease();
      uint64_t v27 = v25;
      uint64_t v71 = v20;
      a1 = v69;
      if (!v29) {
        goto LABEL_45;
      }
LABEL_31:
      id v33 = objc_msgSend(v29, "dataContainerURL", v51, v52);
      if (v33)
      {
        id v34 = v33;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v35 = *v73;
        (*v73)(v7, 0, 1, v13);
      }
      else
      {
        uint64_t v35 = *v73;
        (*v73)(v7, 1, 1, v13);
      }
      uint64_t v70 = v27;
      sub_10026400C((uint64_t)v7, (uint64_t)v10);
      long long v36 = *v72;
      if ((*v72)(v10, 1, v13) == 1)
      {
        uint64_t v37 = a1;
        sub_10001729C((uint64_t)v10, &qword_10065C3C0);
        uint64_t v38 = 1;
      }
      else
      {
        unint64_t v74 = 0xD000000000000010;
        unint64_t v75 = v61;
        id v39 = v12;
        uint64_t v40 = v67;
        id v41 = v10;
        uint64_t v42 = v7;
        uint64_t v43 = v68;
        (*v64)(v67, v65, v68);
        sub_100017B14();
        URL.appending<A>(path:directoryHint:)();
        uint64_t v37 = v69;
        id v44 = v40;
        uint64_t v12 = v39;
        uint64_t v13 = v66;
        uint64_t v45 = v43;
        uint64_t v7 = v42;
        unint64_t v10 = v41;
        (*v63)(v44, v45);
        swift_bridgeObjectRelease();
        (*v62)(v41, v13);
        uint64_t v38 = 0;
      }
      v35(v12, v38, 1, v13);

      if (v36(v12, 1, v13) != 1)
      {
        unint64_t v46 = *v53;
        uint64_t v47 = v51;
        (*v53)(v51, v12, v13);
        v46(v54, v47, v13);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v56 = (void *)sub_100290BD8(0, v56[2] + 1, 1, (unint64_t)v56);
        }
        uint64_t v19 = v70;
        unint64_t v49 = v56[2];
        unint64_t v48 = v56[3];
        if (v49 >= v48 >> 1) {
          uint64_t v56 = (void *)sub_100290BD8(v48 > 1, v49 + 1, 1, (unint64_t)v56);
        }
        id v50 = v56;
        v56[2] = v49 + 1;
        uint64_t result = (void *)((uint64_t (*)(char *, char *, uint64_t))v46)((char *)v50+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(void *)(v55 + 72) * v49, v54, v13);
        a1 = v69;
        unint64_t v20 = v71;
        goto LABEL_8;
      }
      uint64_t result = (void *)sub_10001729C((uint64_t)v12, &qword_10065C3C0);
      uint64_t v25 = v70;
      unint64_t v20 = v71;
      a1 = v37;
    }
    while (v37 < 0);
  }
  if (v20)
  {
    uint64_t v71 = (v20 - 1) & v20;
    unint64_t v26 = __clz(__rbit64(v20)) | (v25 << 6);
    uint64_t v27 = v25;
    goto LABEL_30;
  }
  int64_t v30 = v25 + 1;
  if (!__OFADD__(v25, 1))
  {
    if (v30 < v59)
    {
      unint64_t v31 = *(void *)(v60 + 8 * v30);
      uint64_t v27 = v25 + 1;
      if (v31) {
        goto LABEL_29;
      }
      uint64_t v27 = v25 + 2;
      if (v25 + 2 >= v59) {
        goto LABEL_45;
      }
      unint64_t v31 = *(void *)(v60 + 8 * v27);
      if (v31) {
        goto LABEL_29;
      }
      uint64_t v27 = v25 + 3;
      if (v25 + 3 >= v59) {
        goto LABEL_45;
      }
      unint64_t v31 = *(void *)(v60 + 8 * v27);
      if (v31) {
        goto LABEL_29;
      }
      uint64_t v27 = v25 + 4;
      if (v25 + 4 >= v59) {
        goto LABEL_45;
      }
      unint64_t v31 = *(void *)(v60 + 8 * v27);
      if (v31)
      {
LABEL_29:
        uint64_t v71 = (v31 - 1) & v31;
        unint64_t v26 = __clz(__rbit64(v31)) + (v27 << 6);
LABEL_30:
        id v29 = *(id *)(*(void *)(a1 + 48) + 8 * v26);
        if (v29) {
          goto LABEL_31;
        }
        goto LABEL_45;
      }
      uint64_t v27 = v25 + 5;
      if (v25 + 5 < v59)
      {
        unint64_t v31 = *(void *)(v60 + 8 * v27);
        if (!v31)
        {
          uint64_t v32 = v25 + 6;
          while (v59 != v32)
          {
            unint64_t v31 = *(void *)(v60 + 8 * v32++);
            if (v31)
            {
              uint64_t v27 = v32 - 1;
              goto LABEL_29;
            }
          }
          goto LABEL_45;
        }
        goto LABEL_29;
      }
    }
LABEL_45:
    sub_10024A370();
    return v56;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003CC100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[14] = a5;
  v6[15] = a6;
  v6[12] = a3;
  v6[13] = a4;
  v6[10] = a1;
  v6[11] = a2;
  uint64_t v7 = type metadata accessor for Logger();
  v6[16] = v7;
  v6[17] = *(void *)(v7 - 8);
  v6[18] = swift_task_alloc();
  v6[19] = swift_task_alloc();
  sub_1000172F8((uint64_t *)&unk_100661AB0);
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  return _swift_task_switch(sub_1003CC218, 0, 0);
}

uint64_t sub_1003CC218()
{
  uint64_t v38 = v0;
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  uint64_t v4 = v0[12];
  unint64_t v3 = v0[13];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[17] + 56))(v1, 1, 1, v0[16]);
  sub_1000114D4(v1, v2);
  swift_bridgeObjectRetain();
  sub_1001C5E20(v4, v3);
  swift_bridgeObjectRetain();
  sub_1001C5E20(v4, v3);
  uint64_t v5 = sub_100011088("LSApplicationRecord", 19, 2, 0, 1, 1, v2, (void *)&_mh_execute_header);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  if (qword_10065B150 != -1) {
    swift_once();
  }
  v0[2] = v5;
  v0[3] = v7;
  v0[4] = v9;
  v0[5] = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000172F8(&qword_10065F9C0);
  swift_task_localValuePush();
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 24));
  sub_100006238((void **)(v7 + 16), v37);
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 24));
  uint64_t v12 = v37[0];
  if (v37[0])
  {
    sub_10000E2EC();
  }
  uint64_t v14 = v0[12];
  unint64_t v13 = v0[13];
  sub_1004FD17C(v14, v13, 0, &v36);
  sub_1001C5E34(v14, v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = v0[21];
  uint64_t v17 = v0[12];
  unint64_t v16 = v0[13];
  uint64_t v18 = v36;
  v0[22] = v36;
  swift_task_localValuePop();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1001C5E34(v17, v16);
  swift_bridgeObjectRelease();
  sub_10001729C(v15, (uint64_t *)&unk_100661AB0);
  if (v18)
  {
    uint64_t v19 = (void *)swift_task_alloc();
    v0[23] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_1003CC750;
    uint64_t v20 = v0[14];
    uint64_t v21 = v0[15];
    return sub_1003CCB38(v18, v20, v21);
  }
  else
  {
    static Logger.install.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v26 = v0[19];
    uint64_t v27 = v0[16];
    uint64_t v28 = v0[17];
    unint64_t v29 = v0[11];
    if (v25)
    {
      uint64_t v34 = v0[10];
      uint64_t v30 = swift_slowAlloc();
      unint64_t v31 = (void *)swift_slowAlloc();
      v37[0] = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 138412546;
      uint64_t v35 = v26;
      uint64_t v32 = sub_1005163F0();
      v0[6] = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v31 = v32;
      *(_WORD *)(v30 + 12) = 2082;
      swift_bridgeObjectRetain();
      v0[7] = sub_1000143F4(v34, v29, (uint64_t *)v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "[%@] Expected record for %{public}s but none was found", (uint8_t *)v30, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v35, v27);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v33 = (uint64_t (*)(void))v0[1];
    return v33();
  }
}

uint64_t sub_1003CC750()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003CC8F0;
  }
  else {
    uint64_t v2 = sub_1003CC864;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003CC864()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003CC8F0()
{
  static Logger.install.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v9 = *(void **)(v0 + 176);
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412546;
    uint64_t v5 = sub_1005163F0();
    *(void *)(v0 + 64) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    *(_WORD *)(v3 + 12) = 2112;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 72) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v4[1] = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[%@] Writing receipt failed: %@", (uint8_t *)v3, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, void))(*(void *)(v0 + 136) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 128));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1003CCB38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[14] = a2;
  v3[15] = a3;
  v3[13] = a1;
  uint64_t v4 = type metadata accessor for LogKey.Prefix();
  v3[16] = v4;
  v3[17] = *(void *)(v4 - 8);
  v3[18] = swift_task_alloc();
  sub_1000172F8(&qword_10065C3C0);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v3[21] = v5;
  v3[22] = *(void *)(v5 - 8);
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Logger();
  v3[28] = v6;
  v3[29] = *(void *)(v6 - 8);
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  return _swift_task_switch(sub_1003CCD7C, 0, 0);
}

uint64_t sub_1003CCD7C()
{
  uint64_t v114 = v0;
  os_log_type_t v2 = (id *)(v0 + 104);
  uint64_t v1 = *(void **)(v0 + 104);
  static Logger.install.getter();
  id v3 = v1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 104);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412546;
    uint64_t v9 = sub_1005163F0();
    *(void *)(v0 + 88) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v8 = v9;
    *(_WORD *)(v7 + 12) = 2112;
    *(void *)(v0 + 96) = v6;
    id v10 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v8[1] = v6;

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[%@] Writing receipt for: %@", (uint8_t *)v7, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    os_log_type_t v2 = (id *)(v0 + 104);
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    id v11 = *v2;
  }
  uint64_t v12 = *(void *)(v0 + 168);
  uint64_t v13 = *(void *)(v0 + 176);
  uint64_t v14 = *(void *)(v0 + 160);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 232) + 8);
  v15(*(void *)(v0 + 264), *(void *)(v0 + 224));
  sub_1003CDC04(v14);
  unint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v16(v14, 1, v12) == 1)
  {
    sub_10001729C(*(void *)(v0 + 160), &qword_10065C3C0);
    static Logger.install.getter();
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 138412290;
      uint64_t v21 = sub_1005163F0();
      *(v2 - 5) = (id)v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v20 = v21;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "[%@] Failed to write receipt, data container URL was nil", v19, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v22 = *(void *)(v0 + 240);
    uint64_t v23 = *(void *)(v0 + 224);

    v15(v22, v23);
    sub_1003CE114();
    swift_allocError();
    swift_willThrow();
    goto LABEL_27;
  }
  uint64_t v104 = v16;
  uint64_t v25 = *(void *)(v0 + 208);
  uint64_t v24 = *(void *)(v0 + 216);
  uint64_t v26 = *(void *)(v0 + 168);
  uint64_t v27 = *(void *)(v0 + 176);
  uint64_t v102 = *(void (**)(uint64_t, void, uint64_t))(v27 + 32);
  v102(v24, *(void *)(v0 + 160), v26);
  static Logger.install.getter();
  unint64_t v103 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16);
  v103(v25, v24, v26);
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v107 = *(void *)(v0 + 256);
  uint64_t v105 = *(void *)(v0 + 224);
  uint64_t v31 = *(void *)(v0 + 208);
  uint64_t v32 = *(void *)(v0 + 168);
  uint64_t v33 = *(void *)(v0 + 176);
  uint64_t v110 = v15;
  if (v30)
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v100 = (void *)swift_slowAlloc();
    v113[0] = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 138412546;
    os_log_type_t typea = v29;
    uint64_t v35 = sub_1005163F0();
    *(void *)(v0 + 72) = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v100 = v35;
    *(_WORD *)(v34 + 12) = 2080;
    sub_1003CE1A8(&qword_10065C4D8, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 80) = sub_1000143F4(v36, v37, (uint64_t *)v113);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v38(v31, v32);
    _os_log_impl((void *)&_mh_execute_header, v28, typea, "[%@] Writing receipt to: %s", (uint8_t *)v34, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v110(v107, v105);
  }
  else
  {
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v39(v31, v32);
    uint64_t v40 = v15;
    uint64_t v38 = v39;

    v40(v107, v105);
  }
  uint64_t v41 = *(void *)(v0 + 200);
  uint64_t v42 = *(void *)(v0 + 168);
  uint64_t v43 = self;
  id v44 = [v43 defaultManager];
  URL.deletingLastPathComponent()();
  URL._bridgeToObjectiveC()(v45);
  uint64_t v47 = v46;
  id v108 = v38;
  v38(v41, v42);
  *(void *)(v0 + 48) = 0;
  LODWORD(v42) = [v44 createDirectoryAtURL:v47 withIntermediateDirectories:1 attributes:0 error:v2 - 7];

  id v48 = *(id *)(v0 + 48);
  if (!v42)
  {
    os_log_type_t v83 = v48;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    v38(*(void *)(v0 + 216), *(void *)(v0 + 168));
LABEL_27:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v84 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_28;
  }
  Data.write(to:options:)();
  id v49 = [*(id *)(v0 + 104) applicationExtensionRecords];
  sub_1003CE168();
  sub_1003CE1A8(&qword_100662208, (void (*)(uint64_t))sub_1003CE168);
  uint64_t v50 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  int v51 = sub_1003CB8C0(v50);
  swift_bridgeObjectRelease();
  uint64_t v52 = v51[2];
  uint64_t v53 = *(void *)(v0 + 176);
  if (v52)
  {
    uint64_t v54 = (char *)v51 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
    *(void *)os_log_type_t type = *(void *)(v53 + 72);
    unsigned int v93 = enum case for LogKey.Prefix.undefined(_:);
    unint64_t v92 = (void (**)(void, void, void))(*(void *)(v0 + 136) + 104);
    uint64_t v106 = (void *)(v53 + 56);
    id v101 = v43;
    while (1)
    {
      uint64_t v111 = v52;
      uint64_t v55 = *(void *)(v0 + 168);
      uint64_t v56 = *(void *)(v0 + 152);
      v103(v56, (uint64_t)v54, v55);
      uint64_t v57 = (void (*)(uint64_t, void, uint64_t, uint64_t))*v106;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))*v106)(v56, 0, 1, v55);
      if (v104(v56, 1, v55) == 1) {
        break;
      }
      uint64_t v109 = v54;
      uint64_t v59 = *(void *)(v0 + 184);
      uint64_t v58 = *(void *)(v0 + 192);
      uint64_t v60 = *(void *)(v0 + 168);
      v102(v58, *(void *)(v0 + 152), v60);
      static Logger.install.getter();
      v103(v59, v58, v60);
      unint64_t v61 = Logger.logObject.getter();
      os_log_type_t v62 = static os_log_type_t.default.getter();
      uint64_t v97 = v57;
      if (os_log_type_enabled(v61, v62))
      {
        uint64_t v63 = swift_slowAlloc();
        unint64_t v96 = (void *)swift_slowAlloc();
        uint64_t v112 = swift_slowAlloc();
        *(_DWORD *)uint64_t v63 = 138412546;
        if (qword_10065B150 != -1) {
          swift_once();
        }
        TaskLocal.get()();
        uint64_t v64 = *(void *)(v0 + 24);
        if (!v64) {
          goto LABEL_20;
        }
        swift_release();
        swift_release();
        swift_release();
        os_unfair_lock_lock((os_unfair_lock_t)(v64 + 24));
        sub_100006250((void **)(v64 + 16), v113);
        os_unfair_lock_unlock((os_unfair_lock_t)(v64 + 24));
        unsigned int v65 = v113[0];
        swift_release();
        if (!v65)
        {
LABEL_20:
          (*v92)(*(void *)(v0 + 144), v93, *(void *)(v0 + 128));
          id v66 = objc_allocWithZone((Class)type metadata accessor for LogKey());
          unsigned int v65 = (void *)LogKey.init(prefix:)();
        }
        uint64_t v94 = *(void *)(v0 + 224);
        uint64_t v95 = *(void *)(v0 + 248);
        uint64_t v67 = *(void *)(v0 + 184);
        uint64_t v68 = *(void *)(v0 + 168);
        *(void *)(v63 + 4) = v65;
        void *v96 = v65;
        *(_WORD *)(v63 + 12) = 2080;
        sub_1003CE1A8(&qword_10065C4D8, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v69 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v63 + 14) = sub_1000143F4(v69, v70, &v112);
        swift_bridgeObjectRelease();
        v108(v67, v68);
        _os_log_impl((void *)&_mh_execute_header, v61, v62, "[%@] Writing receipt to: %s", (uint8_t *)v63, 0x16u);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v71 = v108;
        swift_slowDealloc();

        uint64_t v73 = v94;
        uint64_t v72 = v95;
      }
      else
      {
        uint64_t v74 = *(void *)(v0 + 248);
        uint64_t v75 = *(void *)(v0 + 224);
        uint64_t v71 = v108;
        v108(*(void *)(v0 + 184), *(void *)(v0 + 168));

        uint64_t v72 = v74;
        uint64_t v73 = v75;
      }
      v110(v72, v73);
      uint64_t v76 = *(void *)(v0 + 200);
      uint64_t v77 = *(void *)(v0 + 168);
      id v78 = [v101 defaultManager];
      URL.deletingLastPathComponent()();
      URL._bridgeToObjectiveC()(v79);
      uint64_t v81 = v80;
      v71(v76, v77);
      *(void *)(v0 + 56) = 0;
      LODWORD(v77) = [v78 createDirectoryAtURL:v81 withIntermediateDirectories:1 attributes:0 error:v0 + 56];

      id v82 = *(id *)(v0 + 56);
      if (!v77)
      {
        unint64_t v86 = v82;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        uint64_t v87 = *(void *)(v0 + 216);
        uint64_t v88 = *(void *)(v0 + 192);
        uint64_t v89 = *(void *)(v0 + 168);
        swift_bridgeObjectRelease();
        v71(v88, v89);
        v71(v87, v89);
        goto LABEL_27;
      }
      Data.write(to:options:)();
      v71(*(void *)(v0 + 192), *(void *)(v0 + 168));
      uint64_t v54 = &v109[*(void *)type];
      uint64_t v52 = v111 - 1;
      if (v111 == 1)
      {
        v97(*(void *)(v0 + 152), 1, 1, *(void *)(v0 + 168));
        break;
      }
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v53 + 56))(*(void *)(v0 + 152), 1, 1, *(void *)(v0 + 168));
  }
  uint64_t v90 = *(void *)(v0 + 216);
  uint64_t v91 = *(void *)(v0 + 168);
  swift_bridgeObjectRelease();
  v108(v90, v91);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v84 = *(uint64_t (**)(void))(v0 + 8);
LABEL_28:
  return v84();
}

uint64_t sub_1003CDC04@<X0>(uint64_t a1@<X8>)
{
  os_log_type_t v2 = v1;
  uint64_t v4 = type metadata accessor for URL.DirectoryHint();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000172F8(&qword_10065C3C0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  id v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v20 - v12;
  id v14 = [v2 dataContainerURL];
  if (v14)
  {
    uint64_t v15 = v14;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v16 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 0, 1, v16);
  }
  else
  {
    uint64_t v16 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 1, 1, v16);
  }
  sub_10026400C((uint64_t)v11, (uint64_t)v13);
  type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16) == 1)
  {
    sub_10001729C((uint64_t)v13, &qword_10065C3C0);
    uint64_t v18 = 1;
  }
  else
  {
    v20[0] = 0xD000000000000010;
    v20[1] = 0x80000001005BED90;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for URL.DirectoryHint.inferFromPath(_:), v4);
    sub_100017B14();
    URL.appending<A>(path:directoryHint:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v13, v16);
    uint64_t v18 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a1, v18, 1, v16);
}

uint64_t sub_1003CDF04(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000172F8(&qword_100662220);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018AC60(a1, a1[3]);
  sub_1003CE360();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v11[0] = a2;
  v11[1] = a3;
  sub_10024A9C8();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1003CE054(uint64_t a1)
{
  unint64_t v2 = sub_1003CE360();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003CE090(uint64_t a1)
{
  unint64_t v2 = sub_1003CE360();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_1003CE0CC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1003CE1F0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1003CE0F8(void *a1)
{
  return sub_1003CDF04(a1, *v1, v1[1]);
}

unint64_t sub_1003CE114()
{
  unint64_t result = qword_1006621F8;
  if (!qword_1006621F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006621F8);
  }
  return result;
}

unint64_t sub_1003CE168()
{
  unint64_t result = qword_100662200;
  if (!qword_100662200)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100662200);
  }
  return result;
}

uint64_t sub_1003CE1A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1003CE1F0(void *a1)
{
  uint64_t v3 = sub_1000172F8(&qword_100662210);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10018AC60(a1, a1[3]);
  sub_1003CE360();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_100014524((uint64_t)a1);
  }
  else
  {
    sub_10024A974();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = v9;
    sub_100014524((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1003CE360()
{
  unint64_t result = qword_100662218;
  if (!qword_100662218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662218);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreReceipt.CodingKeys()
{
  return &type metadata for AppStoreReceipt.CodingKeys;
}

unsigned char *_s28ManagedAppDistributionDaemon15AppStoreReceiptV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1003CE464);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreReceipt.Error()
{
  return &type metadata for AppStoreReceipt.Error;
}

unint64_t sub_1003CE4A0()
{
  unint64_t result = qword_100662228;
  if (!qword_100662228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662228);
  }
  return result;
}

unint64_t sub_1003CE4F8()
{
  unint64_t result = qword_100662230;
  if (!qword_100662230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662230);
  }
  return result;
}

unint64_t sub_1003CE550()
{
  unint64_t result = qword_100662238;
  if (!qword_100662238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662238);
  }
  return result;
}

unint64_t sub_1003CE5A8()
{
  unint64_t result = qword_100662240;
  if (!qword_100662240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662240);
  }
  return result;
}

void sub_1003CE600(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_1003CE168();
    sub_100013CB4(&qword_100662208, (void (*)(uint64_t))sub_1003CE168);
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v25;
    uint64_t v24 = v26;
    uint64_t v2 = v27;
    int64_t v3 = v28;
    unint64_t v4 = v29;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v24 = a1 + 56;
    uint64_t v6 = ~v5;
    uint64_t v7 = -v5;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v2 = v6;
    int64_t v3 = 0;
  }
  uint64_t v22 = v2;
  int64_t v23 = (unint64_t)(v2 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v4)
  {
    uint64_t v9 = (v4 - 1) & v4;
    unint64_t v10 = __clz(__rbit64(v4)) | (v3 << 6);
    goto LABEL_29;
  }
  int64_t v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 < v23)
    {
      int64_t v13 = v3;
      unint64_t v14 = *(void *)(v24 + 8 * v12);
      ++v3;
      if (v14) {
        goto LABEL_28;
      }
      int64_t v3 = v12 + 1;
      if (v12 + 1 >= v23) {
        goto LABEL_36;
      }
      unint64_t v14 = *(void *)(v24 + 8 * v3);
      if (v14) {
        goto LABEL_28;
      }
      int64_t v3 = v12 + 2;
      if (v12 + 2 >= v23) {
        goto LABEL_36;
      }
      unint64_t v14 = *(void *)(v24 + 8 * v3);
      if (v14) {
        goto LABEL_28;
      }
      int64_t v3 = v12 + 3;
      if (v12 + 3 >= v23) {
        goto LABEL_36;
      }
      unint64_t v14 = *(void *)(v24 + 8 * v3);
      if (v14)
      {
LABEL_28:
        uint64_t v9 = (v14 - 1) & v14;
        unint64_t v10 = __clz(__rbit64(v14)) + (v3 << 6);
LABEL_29:
        id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
        if (v11)
        {
          while (1)
          {
            id v16 = objc_msgSend(v11, "extensionPointRecord", v22);
            id v17 = [v16 identifier];

            uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v20 = v19;

            if (v18 == 0xD00000000000001FLL && v20 == 0x80000001005BE4C0) {
              break;
            }
            char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v21) {
              goto LABEL_36;
            }

            unint64_t v4 = v9;
            if ((v1 & 0x8000000000000000) == 0) {
              goto LABEL_8;
            }
LABEL_10:
            if (__CocoaSet.Iterator.next()())
            {
              sub_1003CE168();
              swift_unknownObjectRetain();
              swift_dynamicCast();
              id v11 = v30;
              swift_unknownObjectRelease();
              uint64_t v9 = v4;
              if (v30) {
                continue;
              }
            }
            goto LABEL_36;
          }
          swift_bridgeObjectRelease();
        }
        goto LABEL_36;
      }
      int64_t v3 = v12 + 4;
      if (v12 + 4 < v23)
      {
        unint64_t v14 = *(void *)(v24 + 8 * v3);
        if (!v14)
        {
          uint64_t v15 = v13 + 6;
          while (v23 != v15)
          {
            unint64_t v14 = *(void *)(v24 + 8 * v15++);
            if (v14)
            {
              int64_t v3 = v15 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_36;
        }
        goto LABEL_28;
      }
    }
LABEL_36:
    sub_10024A370();
    return;
  }
  __break(1u);
}

uint64_t sub_1003CE9B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  uint64_t v8 = type metadata accessor for AppVersion();
  v4[9] = v8;
  v4[10] = *(void *)(v8 - 8);
  v4[11] = swift_task_alloc();
  sub_1000172F8(&qword_100662318);
  uint64_t v9 = swift_task_alloc();
  v4[12] = v9;
  uint64_t v10 = type metadata accessor for _AppExtensionProcess();
  v4[13] = v10;
  v4[14] = *(void *)(v10 - 8);
  v4[15] = swift_task_alloc();
  id v11 = (void *)swift_task_alloc();
  v4[16] = v11;
  void *v11 = v4;
  v11[1] = sub_1003CEB60;
  return sub_1003D2E6C(v9, a2, a3, a4);
}

uint64_t sub_1003CEB60()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v1 = sub_1003CF318;
  }
  else
  {
    uint64_t v1 = sub_1003CEC78;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_1003CEC78()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10001729C(*(void *)(v0 + 96), &qword_100662318);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4(0);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 120);
    uint64_t v7 = *(void *)(v0 + 64);
    long long v13 = *(_OWORD *)(v0 + 48);
    uint64_t v8 = *(void *)(v0 + 40);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 112) + 32))(v6, *(void *)(v0 + 96), *(void *)(v0 + 104));
    type metadata accessor for ContinuationResumptionState();
    uint64_t v9 = swift_allocObject();
    *(void *)(v0 + 136) = v9;
    swift_defaultActor_initialize();
    *(unsigned char *)(v9 + 112) = 0;
    uint64_t v10 = swift_task_alloc();
    *(void *)(v0 + 144) = v10;
    *(void *)(v10 + 16) = v6;
    *(void *)(v10 + 24) = v7;
    *(void *)(v10 + 32) = v9;
    *(_OWORD *)(v10 + 40) = v13;
    *(void *)(v10 + 56) = v8;
    id v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v11;
    uint64_t v12 = sub_1000172F8(&qword_100662428);
    void *v11 = v0;
    v11[1] = sub_1003CEEA4;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000003BLL, 0x80000001005BEF30, sub_1003DC67C, v10, v12);
  }
}

uint64_t sub_1003CEEA4()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    swift_task_dealloc();
    uint64_t v1 = sub_1003CF3C0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v1 = sub_1003CEFEC;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_1003CEFEC()
{
  if (!os_variant_has_internal_content()) {
    goto LABEL_18;
  }
  uint64_t v1 = (__CFString *)String._bridgeToObjectiveC()();
  uint64_t v2 = (__CFString *)String._bridgeToObjectiveC()();
  CFPropertyListRef v3 = CFPreferencesCopyAppValue(v1, v2);

  if (!v3) {
    goto LABEL_18;
  }
  v0[3] = v3;
  sub_1000172F8(&qword_100662430);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_18;
  }
  unint64_t v4 = sub_100431AC4(v0[4]);
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_18;
  }
  uint64_t v5 = v4[2];
  if (v5)
  {
    uint64_t v6 = v0[10];
    uint64_t v7 = v4 + 4;
    uint64_t v8 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v9 = *v7;
      if (*(void *)(*v7 + 16))
      {
        swift_bridgeObjectRetain();
        sub_100016D20(0x44496D657469, 0xE600000000000000);
        if ((v10 & 1) != 0
          && *(void *)(v9 + 16)
          && (sub_100016D20(1684633189, 0xE400000000000000), (v11 & 1) != 0))
        {
          swift_bridgeObjectRelease();
          AppVersion.init(appleItemID:appleVersionID:)();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = (void *)sub_10028FC3C(0, v8[2] + 1, 1, (unint64_t)v8);
          }
          unint64_t v13 = v8[2];
          unint64_t v12 = v8[3];
          if (v13 >= v12 >> 1) {
            uint64_t v8 = (void *)sub_10028FC3C(v12 > 1, v13 + 1, 1, (unint64_t)v8);
          }
          uint64_t v14 = v0[11];
          uint64_t v15 = v0[9];
          v8[2] = v13 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))((unint64_t)v8+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v13, v14, v15);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      ++v7;
      --v5;
    }
    while (v5);
  }
  else
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  if (!v8[2])
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  if (v0[2])
  {
    sub_1005558E4((uint64_t)v8);
LABEL_18:
    swift_release();
    goto LABEL_19;
  }
  swift_release();
  v0[2] = v8;
LABEL_19:
  uint64_t v17 = v0[14];
  uint64_t v16 = v0[15];
  uint64_t v18 = v0[13];
  uint64_t v19 = v0[2];
  _AppExtensionProcess.invalidate()();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(uint64_t))v0[1];
  return v20(v19);
}

uint64_t sub_1003CF318()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[14] + 56))(v0[12], 1, 1, v0[13]);
  sub_10001729C(v0[12], &qword_100662318);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1(0);
}

uint64_t sub_1003CF3C0()
{
  v0[2] = 0;
  if (!os_variant_has_internal_content()) {
    goto LABEL_18;
  }
  uint64_t v1 = (__CFString *)String._bridgeToObjectiveC()();
  uint64_t v2 = (__CFString *)String._bridgeToObjectiveC()();
  CFPropertyListRef v3 = CFPreferencesCopyAppValue(v1, v2);

  if (!v3) {
    goto LABEL_18;
  }
  v0[3] = v3;
  sub_1000172F8(&qword_100662430);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_18;
  }
  unint64_t v4 = sub_100431AC4(v0[4]);
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_18;
  }
  uint64_t v5 = v4[2];
  if (v5)
  {
    uint64_t v6 = v0[10];
    uint64_t v7 = v4 + 4;
    uint64_t v8 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v9 = *v7;
      if (*(void *)(*v7 + 16))
      {
        swift_bridgeObjectRetain();
        sub_100016D20(0x44496D657469, 0xE600000000000000);
        if ((v10 & 1) != 0
          && *(void *)(v9 + 16)
          && (sub_100016D20(1684633189, 0xE400000000000000), (v11 & 1) != 0))
        {
          swift_bridgeObjectRelease();
          AppVersion.init(appleItemID:appleVersionID:)();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = (void *)sub_10028FC3C(0, v8[2] + 1, 1, (unint64_t)v8);
          }
          unint64_t v13 = v8[2];
          unint64_t v12 = v8[3];
          if (v13 >= v12 >> 1) {
            uint64_t v8 = (void *)sub_10028FC3C(v12 > 1, v13 + 1, 1, (unint64_t)v8);
          }
          uint64_t v14 = v0[11];
          uint64_t v15 = v0[9];
          v8[2] = v13 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))((unint64_t)v8+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v13, v14, v15);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      ++v7;
      --v5;
    }
    while (v5);
  }
  else
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  if (!v8[2])
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  if (v0[2])
  {
    sub_1005558E4((uint64_t)v8);
LABEL_18:
    swift_release();
    goto LABEL_19;
  }
  swift_release();
  v0[2] = v8;
LABEL_19:
  uint64_t v17 = v0[14];
  uint64_t v16 = v0[15];
  uint64_t v18 = v0[13];
  uint64_t v19 = v0[2];
  _AppExtensionProcess.invalidate()();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(uint64_t))v0[1];
  return v20(v19);
}

uint64_t sub_1003CF6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[26] = a4;
  v5[27] = a5;
  v5[24] = a2;
  v5[25] = a3;
  v5[23] = a1;
  uint64_t v6 = type metadata accessor for ContinuousClock();
  v5[28] = v6;
  v5[29] = *(void *)(v6 - 8);
  v5[30] = swift_task_alloc();
  sub_1000172F8(&qword_100662318);
  v5[31] = swift_task_alloc();
  v5[32] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for _AppExtensionProcess();
  v5[33] = v7;
  v5[34] = *(void *)(v7 - 8);
  v5[35] = swift_task_alloc();
  v5[36] = swift_task_alloc();
  v5[37] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  v5[38] = v8;
  v5[39] = *(void *)(v8 - 8);
  v5[40] = swift_task_alloc();
  v5[41] = swift_task_alloc();
  v5[42] = swift_task_alloc();
  v5[43] = swift_task_alloc();
  return _swift_task_switch(sub_1003CF8FC, 0, 0);
}

uint64_t sub_1003CF8FC()
{
  uint64_t v2 = (id *)(v0 + 184);
  uint64_t v1 = *(void **)(v0 + 184);
  static Logger.install.getter();
  id v3 = v1;
  unint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 184);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    id v48 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    *(void *)(v0 + 176) = v6;
    id v8 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v48 = v6;

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[%@] Granting run time for automatic updates for extensions", v7, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    id v9 = *v2;
  }
  uint64_t v10 = *(void *)(v0 + 344);
  uint64_t v11 = *(void *)(v0 + 304);
  uint64_t v12 = *(void *)(v0 + 312);
  unint64_t v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  *(void *)(v0 + 352) = v13;
  *(void *)(v0 + 360) = (v12 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v10, v11);
  id v14 = objc_allocWithZone((Class)LSExtensionPointRecord);
  id v15 = sub_1003DB31C();
  *(void *)(v0 + 368) = v15;
  id v16 = [self enumeratorWithExtensionPointRecord:v15 options:0];
  *(void *)(v0 + 376) = v16;
  id v17 = [v16 nextObject];
  uint64_t v18 = _swiftEmptyArrayStorage;
  if (!v17)
  {
LABEL_15:
    *(void *)(v0 + 440) = v18;
    if (v18[2])
    {
      ContinuousClock.init()();
      id v49 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1006650B0 + dword_1006650B0);
      unint64_t v29 = (void *)swift_task_alloc();
      *(void *)(v0 + 448) = v29;
      *unint64_t v29 = v0;
      v29[1] = sub_1003D11D8;
      return v49(0xA055690D9DB80000, 1, 0, 0, 1);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void **)(v0 + 184);
      static Logger.install.getter();
      id v32 = v31;
      uint64_t v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = *(void **)(v0 + 184);
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        unint64_t v37 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 138412290;
        *(void *)(v0 + 104) = v35;
        id v38 = v35;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v37 = v35;

        _os_log_impl((void *)&_mh_execute_header, v33, v34, "[%@] Automatic updates for extensions is complete", v36, 0xCu);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        uint64_t v39 = *(void **)(v0 + 368);
        uint64_t v40 = *(void **)(v0 + 376);
      }
      else
      {
        uint64_t v41 = *(void **)(v0 + 368);

        uint64_t v39 = *(void **)(v0 + 184);
        uint64_t v40 = v39;
      }
      uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v0 + 352);
      uint64_t v43 = *(void *)(v0 + 328);
      uint64_t v44 = *(void *)(v0 + 304);

      v42(v43, v44);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
      return v45();
    }
  }
  *(void *)(v0 + 384) = _swiftEmptyArrayStorage;
  while (1)
  {
    *(void *)(v0 + 392) = v17;
    id v20 = [v17 containingBundleRecord];
    *(void *)(v0 + 400) = v20;
    if (!v20) {
      goto LABEL_8;
    }
    id v21 = v20;
    self;
    uint64_t v22 = (void *)swift_dynamicCastObjCClass();
    *(void *)(v0 + 408) = v22;
    if (v22)
    {
      id v23 = [v22 bundleIdentifier];
      if (v23) {
        break;
      }
    }
    uint64_t v19 = v17;
    id v17 = v21;
LABEL_7:

LABEL_8:
    id v17 = [*(id *)(v0 + 376) nextObject];
    if (!v17)
    {
      uint64_t v18 = *(void **)(v0 + 384);
      goto LABEL_15;
    }
  }
  uint64_t v24 = v23;
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v27 = v26;

  int64_t v28 = sub_10050654C(v25, v27);
  *(void *)(v0 + 416) = v28;
  swift_bridgeObjectRelease();
  if (!v28[2])
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = v21;
    goto LABEL_7;
  }
  unint64_t v46 = (void *)swift_task_alloc();
  *(void *)(v0 + 424) = v46;
  *unint64_t v46 = v0;
  v46[1] = sub_1003D01E0;
  uint64_t v47 = *(void *)(v0 + 256);
  return sub_1003D7134(v47, (uint64_t)v17);
}

uint64_t sub_1003D01E0()
{
  *(void *)(*(void *)v1 + 432) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v2 = sub_1003D1A58;
  }
  else
  {
    uint64_t v2 = sub_1003D02FC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003D02FC()
{
  uint64_t v112 = v0;
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 256);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  uint64_t v5 = *(void *)(v0 + 256);
  if (v4 == 1)
  {
    uint64_t v6 = *(void **)(v0 + 400);

    swift_bridgeObjectRelease();
    sub_10001729C(v5, &qword_100662318);
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 432);
    uint64_t v8 = *(void *)(v0 + 296);
    id v9 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v0 + 272) + 32);
    v9(v8, v5, *(void *)(v0 + 264));
    sub_1003DB3E8(v8, (uint64_t)nullsub_1, 0);
    uint64_t v11 = *(void *)(v0 + 416);
    if (!v7)
    {
      id v108 = v10;
      uint64_t v40 = *(void **)(v0 + 392);
      uint64_t v93 = _AppExtensionProcess.auditToken.getter();
      uint64_t v94 = v41;
      uint64_t v95 = v42;
      uint64_t v96 = v43;
      id v44 = [v40 bundleIdentifier];
      uint64_t v97 = v9;
      if (v44)
      {
        uint64_t v45 = v44;
        uint64_t v99 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v47 = v46;
      }
      else
      {
        unint64_t v47 = 0xE700000000000000;
        uint64_t v99 = 0x6E776F6E6B6E75;
      }
      uint64_t v55 = *(void **)(v0 + 184);
      static Logger.install.getter();
      id v56 = v55;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      id v57 = v56;
      uint64_t v58 = Logger.logObject.getter();
      os_log_type_t v59 = static os_log_type_t.default.getter();
      BOOL v60 = os_log_type_enabled(v58, v59);
      uint64_t v102 = *(void *)(v0 + 336);
      os_log_t v104 = *(os_log_t *)(v0 + 352);
      uint64_t v100 = *(void *)(v0 + 304);
      unint64_t v61 = *(void **)(v0 + 184);
      unint64_t v109 = v47;
      if (v60)
      {
        uint64_t v62 = swift_slowAlloc();
        uint64_t v91 = (void *)swift_slowAlloc();
        v111[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v62 = 138412802;
        *(void *)(v0 + 152) = v61;
        log = v58;
        id v63 = v61;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v91 = v61;

        *(_WORD *)(v62 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 160) = sub_1000143F4(v99, v47, v111);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v62 + 22) = 2050;
        uint64_t v64 = *(void *)(v11 + 16);
        swift_bridgeObjectRelease();
        *(void *)(v0 + 168) = v64;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, log, v59, "[%@] Granting automatic update run time to: %{public}s with %{public}ld installed apps", (uint8_t *)v62, 0x20u);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        ((void (*)(uint64_t, uint64_t))v104)(v102, v100);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        swift_bridgeObjectRelease_n();
        ((void (*)(uint64_t, uint64_t))v104)(v102, v100);
      }
      uint64_t v65 = *(void *)(v0 + 416);
      *(void *)(v0 + 112) = v0 + 120;
      *(void *)(v0 + 120) = v65;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 128) = sub_1000172F8(&qword_1006623E0);
      *(void *)(v0 + 136) = sub_1003DCCEC(&qword_1006623E8, &qword_1006623F0);
      uint64_t v66 = encodeXPCValues<each A>(_:)();
      uint64_t v67 = *(void *)(v0 + 416);
      uint64_t v68 = v66;
      unint64_t v70 = v69;
      uint64_t v88 = *(void *)(v0 + 408);
      unint64_t v92 = *(void **)(v0 + 400);
      os_log_t v105 = *(os_log_t *)(v0 + 288);
      uint64_t v106 = *(void *)(v0 + 296);
      uint64_t v101 = *(void *)(v0 + 272);
      uint64_t v103 = *(void *)(v0 + 264);
      uint64_t v71 = *(void *)(v0 + 192);
      uint64_t v89 = *(void *)(v0 + 200);
      uint64_t v72 = *(void **)(v0 + 184);
      long long v107 = *(_OWORD *)(v0 + 208);
      swift_bridgeObjectRelease();
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_100013510(v68, v70);
      uint64_t v73 = swift_allocObject();
      *(void *)(v73 + 16) = v72;
      *(void *)(v73 + 24) = v99;
      *(void *)(v73 + 32) = v109;
      *(void *)(v73 + 40) = v88;
      *(void *)(v73 + 48) = v67;
      *(void *)(v73 + 56) = v93;
      *(void *)(v73 + 64) = v94;
      *(void *)(v73 + 72) = v95;
      *(void *)(v73 + 80) = v96;
      *(void *)(v73 + 88) = v71;
      *(void *)(v73 + 96) = v89;
      *(_OWORD *)(v73 + 104) = v107;
      *(void *)(v0 + 48) = sub_1003DC3D4;
      *(void *)(v0 + 56) = v73;
      *(void *)(v0 + 16) = _NSConcreteStackBlock;
      *(void *)(v0 + 24) = 1107296256;
      *(void *)(v0 + 32) = sub_1003D7058;
      *(void *)(v0 + 40) = &unk_100645300;
      uint64_t v74 = _Block_copy((const void *)(v0 + 16));
      id v75 = v72;
      id v76 = v92;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_release();
      [v108 automaticUpdatesFor:isa reply:v74];
      _Block_release(v74);

      (*(void (**)(os_log_t, uint64_t, uint64_t))(v101 + 16))(v105, v106, v103);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v27 = *(void *)(v0 + 384);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        unint64_t v27 = sub_10028FF6C(0, *(void *)(v27 + 16) + 1, 1, *(void *)(v0 + 384));
      }
      unint64_t v79 = *(void *)(v27 + 16);
      unint64_t v78 = *(void *)(v27 + 24);
      if (v79 >= v78 >> 1) {
        unint64_t v27 = sub_10028FF6C(v78 > 1, v79 + 1, 1, v27);
      }
      uint64_t v81 = *(void **)(v0 + 392);
      unint64_t v80 = *(void **)(v0 + 400);
      id v82 = *(void **)(v0 + 376);
      uint64_t v83 = *(void *)(v0 + 288);
      uint64_t v84 = *(void *)(v0 + 296);
      uint64_t v85 = *(void *)(v0 + 264);
      uint64_t v86 = *(void *)(v0 + 272);
      *(void *)(v27 + 16) = v79 + 1;
      v97(v27+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(void *)(v86 + 72) * v79, v83, v85);
      swift_unknownObjectRelease();

      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v84, v85);
      id v87 = [v82 nextObject];
      if (v87)
      {
        id v16 = v87;
        *(void *)(v0 + 384) = v27;
        goto LABEL_10;
      }
      goto LABEL_16;
    }
    uint64_t v12 = *(void **)(v0 + 400);
    uint64_t v13 = *(void *)(v0 + 296);
    uint64_t v14 = *(void *)(v0 + 264);
    uint64_t v15 = *(void *)(v0 + 272);

    swift_bridgeObjectRelease();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  id v16 = [*(id *)(v0 + 376) nextObject];
  if (!v16)
  {
LABEL_15:
    unint64_t v27 = *(void *)(v0 + 384);
LABEL_16:
    *(void *)(v0 + 440) = v27;
    if (*(void *)(v27 + 16))
    {
      ContinuousClock.init()();
      uint64_t v110 = (char *)&dword_1006650B0 + dword_1006650B0;
      int64_t v28 = (void *)swift_task_alloc();
      *(void *)(v0 + 448) = v28;
      void *v28 = v0;
      v28[1] = sub_1003D11D8;
      return ((uint64_t (*)(unint64_t, uint64_t, void, void, uint64_t))v110)(0xA055690D9DB80000, 1, 0, 0, 1);
    }
    else
    {
      swift_bridgeObjectRelease();
      BOOL v30 = *(void **)(v0 + 184);
      static Logger.install.getter();
      id v31 = v30;
      id v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v32, v33))
      {
        os_log_type_t v34 = *(void **)(v0 + 184);
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        uint64_t v36 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v35 = 138412290;
        *(void *)(v0 + 104) = v34;
        id v37 = v34;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v36 = v34;

        _os_log_impl((void *)&_mh_execute_header, v32, v33, "[%@] Automatic updates for extensions is complete", v35, 0xCu);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        id v38 = *(void **)(v0 + 368);
        uint64_t v39 = *(void **)(v0 + 376);
      }
      else
      {
        id v48 = *(void **)(v0 + 368);

        id v38 = *(void **)(v0 + 184);
        uint64_t v39 = v38;
      }
      id v49 = *(void (**)(uint64_t, uint64_t))(v0 + 352);
      uint64_t v50 = *(void *)(v0 + 328);
      uint64_t v51 = *(void *)(v0 + 304);

      v49(v50, v51);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v52 = *(uint64_t (**)(void))(v0 + 8);
      return v52();
    }
  }
  while (1)
  {
LABEL_10:
    *(void *)(v0 + 392) = v16;
    id v18 = objc_msgSend(v16, "containingBundleRecord", v88, v89);
    *(void *)(v0 + 400) = v18;
    if (!v18) {
      goto LABEL_9;
    }
    id v19 = v18;
    self;
    id v20 = (void *)swift_dynamicCastObjCClass();
    *(void *)(v0 + 408) = v20;
    if (v20)
    {
      id v21 = [v20 bundleIdentifier];
      if (v21) {
        break;
      }
    }
    id v17 = v16;
    id v16 = v19;
LABEL_8:

LABEL_9:
    id v16 = [*(id *)(v0 + 376) nextObject];
    if (!v16) {
      goto LABEL_15;
    }
  }
  uint64_t v22 = v21;
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v25 = v24;

  unint64_t v26 = sub_10050654C(v23, v25);
  *(void *)(v0 + 416) = v26;
  swift_bridgeObjectRelease();
  if (!v26[2])
  {
    swift_bridgeObjectRelease();
    id v17 = v19;
    goto LABEL_8;
  }
  uint64_t v53 = (void *)swift_task_alloc();
  *(void *)(v0 + 424) = v53;
  void *v53 = v0;
  v53[1] = sub_1003D01E0;
  uint64_t v54 = *(void *)(v0 + 256);
  return sub_1003D7134(v54, (uint64_t)v16);
}

uint64_t sub_1003D11D8()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[29] + 8))(v2[30], v2[28]);
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_1003D16A0;
  }
  else
  {
    uint64_t v3 = sub_1003D1328;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003D1328()
{
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v0 + 272);
  if (v2)
  {
    id v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v30 = *(void *)(v3 + 72);
    uint64_t v5 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
    uint64_t v6 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    uint64_t v7 = (void (**)(uint64_t, void, uint64_t))(v3 + 32);
    uint64_t v8 = (void (**)(uint64_t, uint64_t))(v3 + 8);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v9 = *(void *)(v0 + 264);
      uint64_t v10 = *(void *)(v0 + 248);
      v31(v10, v4, v9);
      uint64_t v11 = *v5;
      (*v5)(v10, 0, 1, v9);
      if ((*v6)(v10, 1, v9) == 1) {
        break;
      }
      uint64_t v12 = *(void *)(v0 + 280);
      uint64_t v13 = *(void *)(v0 + 264);
      (*v7)(v12, *(void *)(v0 + 248), v13);
      _AppExtensionProcess.invalidate()();
      (*v8)(v12, v13);
      v4 += v30;
      if (!--v2) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
    swift_bridgeObjectRetain();
LABEL_7:
    v11(*(void *)(v0 + 248), 1, 1, *(void *)(v0 + 264));
  }
  swift_bridgeObjectRelease_n();
  uint64_t v14 = *(void **)(v0 + 184);
  static Logger.install.getter();
  id v15 = v14;
  id v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    id v18 = *(void **)(v0 + 184);
    id v19 = (uint8_t *)swift_slowAlloc();
    id v20 = (void *)swift_slowAlloc();
    *(_DWORD *)id v19 = 138412290;
    *(void *)(v0 + 104) = v18;
    id v21 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v20 = v18;

    _os_log_impl((void *)&_mh_execute_header, v16, v17, "[%@] Automatic updates for extensions is complete", v19, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    uint64_t v22 = *(void **)(v0 + 368);
    uint64_t v23 = *(void **)(v0 + 376);
  }
  else
  {
    unint64_t v24 = *(void **)(v0 + 368);

    uint64_t v22 = *(void **)(v0 + 184);
    uint64_t v23 = v22;
  }
  unint64_t v25 = *(void (**)(uint64_t, uint64_t))(v0 + 352);
  uint64_t v26 = *(void *)(v0 + 328);
  uint64_t v27 = *(void *)(v0 + 304);

  v25(v26, v27);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_1003D16A0()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void **)(v0 + 368);

  uint64_t v2 = *(void **)(v0 + 184);
  static Logger.install.getter();
  id v3 = v2;
  swift_errorRetain();
  id v4 = v3;
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    unint64_t v25 = *(void (**)(uint64_t, uint64_t))(v0 + 352);
    uint64_t v23 = *(void *)(v0 + 304);
    uint64_t v24 = *(void *)(v0 + 320);
    os_log_type_t type = v6;
    uint64_t v7 = *(void **)(v0 + 184);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412546;
    *(void *)(v0 + 144) = v7;
    log = v5;
    id v10 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v9 = v7;

    *(_WORD *)(v8 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v11 = *(void *)(*(void *)(v0 + 72) - 8);
    swift_task_alloc();
    (*(void (**)(void))(v11 + 16))();
    uint64_t v12 = String.init<A>(describing:)();
    unint64_t v14 = v13;
    swift_task_dealloc();
    *(void *)(v0 + 96) = sub_1000143F4(v12, v14, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, type, "[%@] Error granting automatic update runtime: %{public}s", (uint8_t *)v8, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v25(v24, v23);
  }
  else
  {
    id v15 = *(void (**)(uint64_t, uint64_t))(v0 + 352);
    uint64_t v16 = *(void *)(v0 + 320);
    uint64_t v17 = *(void *)(v0 + 304);
    id v18 = *(void **)(v0 + 184);
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();

    v15(v16, v17);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_1003D1A58()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 272) + 56))(*(void *)(v0 + 256), 1, 1, *(void *)(v0 + 264));
  uint64_t v1 = *(void **)(v0 + 400);
  uint64_t v2 = *(void *)(v0 + 256);

  swift_bridgeObjectRelease();
  sub_10001729C(v2, &qword_100662318);
  id v3 = [*(id *)(v0 + 376) nextObject];
  if (!v3)
  {
LABEL_11:
    uint64_t v15 = *(void *)(v0 + 384);
    *(void *)(v0 + 440) = v15;
    if (*(void *)(v15 + 16))
    {
      ContinuousClock.init()();
      uint64_t v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1006650B0 + dword_1006650B0);
      uint64_t v16 = (void *)swift_task_alloc();
      *(void *)(v0 + 448) = v16;
      void *v16 = v0;
      v16[1] = sub_1003D11D8;
      return v35(0xA055690D9DB80000, 1, 0, 0, 1);
    }
    else
    {
      swift_bridgeObjectRelease();
      id v18 = *(void **)(v0 + 184);
      static Logger.install.getter();
      id v19 = v18;
      id v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = *(void **)(v0 + 184);
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        uint64_t v24 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 138412290;
        *(void *)(v0 + 104) = v22;
        id v25 = v22;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v24 = v22;

        _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%@] Automatic updates for extensions is complete", v23, 0xCu);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        uint64_t v26 = *(void **)(v0 + 368);
        uint64_t v27 = *(void **)(v0 + 376);
      }
      else
      {
        uint64_t v28 = *(void **)(v0 + 368);

        uint64_t v26 = *(void **)(v0 + 184);
        uint64_t v27 = v26;
      }
      unint64_t v29 = *(void (**)(uint64_t, uint64_t))(v0 + 352);
      uint64_t v30 = *(void *)(v0 + 328);
      uint64_t v31 = *(void *)(v0 + 304);

      v29(v30, v31);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
      return v32();
    }
  }
  id v4 = v3;
  while (1)
  {
    *(void *)(v0 + 392) = v4;
    id v6 = [v4 containingBundleRecord];
    *(void *)(v0 + 400) = v6;
    if (!v6) {
      goto LABEL_5;
    }
    id v7 = v6;
    self;
    uint64_t v8 = (void *)swift_dynamicCastObjCClass();
    *(void *)(v0 + 408) = v8;
    if (v8)
    {
      id v9 = [v8 bundleIdentifier];
      if (v9) {
        break;
      }
    }
    uint64_t v5 = v4;
    id v4 = v7;
LABEL_4:

LABEL_5:
    id v4 = [*(id *)(v0 + 376) nextObject];
    if (!v4) {
      goto LABEL_11;
    }
  }
  id v10 = v9;
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v13 = v12;

  unint64_t v14 = sub_10050654C(v11, v13);
  *(void *)(v0 + 416) = v14;
  swift_bridgeObjectRelease();
  if (!v14[2])
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = v7;
    goto LABEL_4;
  }
  os_log_type_t v33 = (void *)swift_task_alloc();
  *(void *)(v0 + 424) = v33;
  void *v33 = v0;
  v33[1] = sub_1003D01E0;
  uint64_t v34 = *(void *)(v0 + 256);
  return sub_1003D7134(v34, (uint64_t)v4);
}

uint64_t sub_1003D1F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  sub_1000172F8(&qword_100662318);
  uint64_t v10 = swift_task_alloc();
  v6[9] = v10;
  uint64_t v11 = type metadata accessor for _AppExtensionProcess();
  v6[10] = v11;
  v6[11] = *(void *)(v11 - 8);
  v6[12] = swift_task_alloc();
  unint64_t v12 = (void *)swift_task_alloc();
  v6[13] = v12;
  *unint64_t v12 = v6;
  v12[1] = sub_1003D205C;
  return sub_1003D2E6C(v10, a2, a3, a6);
}

uint64_t sub_1003D205C()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v1 = sub_1003D259C;
  }
  else
  {
    uint64_t v1 = sub_1003D2174;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_1003D2174()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 72);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10001729C(*(void *)(v0 + 72), &qword_100662318);
    swift_task_dealloc();
    swift_task_dealloc();
    id v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4(0);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 56);
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v9 = *(void *)(v0 + 48);
    long long v15 = *(_OWORD *)(v0 + 32);
    uint64_t v10 = *(void *)(v0 + 24);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 88) + 32))(v6, *(void *)(v0 + 72), *(void *)(v0 + 80));
    type metadata accessor for ContinuationResumptionState();
    uint64_t v11 = swift_allocObject();
    *(void *)(v0 + 112) = v11;
    swift_defaultActor_initialize();
    *(unsigned char *)(v11 + 112) = 0;
    uint64_t v12 = swift_task_alloc();
    *(void *)(v0 + 120) = v12;
    *(void *)(v12 + 16) = v6;
    *(void *)(v12 + 24) = v7;
    *(void *)(v12 + 32) = v11;
    *(_OWORD *)(v12 + 40) = v15;
    *(void *)(v12 + 56) = v10;
    *(void *)(v12 + 64) = v9;
    *(void *)(v12 + 72) = v8;
    unint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v13;
    uint64_t v14 = sub_1000172F8(&qword_100662388);
    *unint64_t v13 = v0;
    v13[1] = sub_1003D23AC;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000034, 0x80000001005BEE70, sub_1003DBCFC, v12, v14);
  }
}

uint64_t sub_1003D23AC()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    swift_task_dealloc();
    uint64_t v1 = sub_1003D263C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v1 = sub_1003D24F4;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_1003D24F4()
{
  swift_release();
  uint64_t v1 = v0[2];
  uint64_t v3 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v4 = v0[10];
  _AppExtensionProcess.invalidate()();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v1);
}

uint64_t sub_1003D259C()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[11] + 56))(v0[9], 1, 1, v0[10]);
  sub_10001729C(v0[9], &qword_100662318);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1(0);
}

uint64_t sub_1003D263C()
{
  swift_release();
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  _AppExtensionProcess.invalidate()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4(0);
}

uint64_t sub_1003D26E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  sub_1000172F8(&qword_100662318);
  uint64_t v8 = swift_task_alloc();
  v4[4] = v8;
  uint64_t v9 = type metadata accessor for _AppExtensionProcess();
  v4[5] = v9;
  v4[6] = *(void *)(v9 - 8);
  v4[7] = swift_task_alloc();
  uint64_t v10 = (void *)swift_task_alloc();
  v4[8] = v10;
  void *v10 = v4;
  v10[1] = sub_1003D2828;
  return sub_1003D2E6C(v8, a2, a3, a4);
}

uint64_t sub_1003D2828()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v1 = sub_1003D2D28;
  }
  else
  {
    uint64_t v1 = sub_1003D2940;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_1003D2940()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[4];
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10001729C(v0[4], &qword_100662318);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4(0);
  }
  else
  {
    uint64_t v6 = v0[7];
    uint64_t v8 = v0[2];
    uint64_t v7 = v0[3];
    (*(void (**)(uint64_t, void, void))(v0[6] + 32))(v6, v0[4], v0[5]);
    type metadata accessor for ContinuationResumptionState();
    uint64_t v9 = swift_allocObject();
    v0[9] = v9;
    swift_defaultActor_initialize();
    *(unsigned char *)(v9 + 112) = 0;
    uint64_t v10 = (void *)swift_task_alloc();
    v0[10] = v10;
    _OWORD v10[2] = v6;
    v10[3] = v7;
    v10[4] = v9;
    v10[5] = v8;
    uint64_t v11 = (void *)swift_task_alloc();
    v0[11] = v11;
    void *v11 = v0;
    v11[1] = sub_1003D2B38;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 12, 0, 0, 0xD000000000000026, 0x80000001005BEE40, sub_1003DB200, v10, &type metadata for Bool);
  }
}

uint64_t sub_1003D2B38()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    swift_task_dealloc();
    uint64_t v1 = sub_1003D2DC8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v1 = sub_1003D2C80;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_1003D2C80()
{
  swift_release();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 40);
  _AppExtensionProcess.invalidate()();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v5(v1);
}

uint64_t sub_1003D2D28()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[6] + 56))(v0[4], 1, 1, v0[5]);
  sub_10001729C(v0[4], &qword_100662318);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1(0);
}

uint64_t sub_1003D2DC8()
{
  swift_release();
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  _AppExtensionProcess.invalidate()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4(0);
}

uint64_t sub_1003D2E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  uint64_t v5 = type metadata accessor for Logger();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  return _swift_task_switch(sub_1003D2F30, 0, 0);
}

uint64_t sub_1003D2F30()
{
  uint64_t v30 = v0;
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  id v3 = objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain();
  id v4 = sub_1003DB240(v1, v2, 0);
  v0[11] = v4;
  uint64_t v7 = v4;
  id v8 = [v4 applicationExtensionRecords];
  sub_1003CE168();
  sub_100013CB4(&qword_100662208, (void (*)(uint64_t))sub_1003CE168);
  uint64_t v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_1003CE600(v9);
  uint64_t v11 = v10;
  v0[12] = v10;
  swift_bridgeObjectRelease();
  if (v11)
  {
    uint64_t v12 = (void *)swift_task_alloc();
    v0[13] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1003D3384;
    uint64_t v13 = v0[4];
    return sub_1003D7134(v13, v11);
  }
  else
  {
    uint64_t v14 = (void *)v0[7];
    static Logger.install.getter();
    swift_bridgeObjectRetain_n();
    id v15 = v14;
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = v0[9];
    uint64_t v20 = v0[10];
    uint64_t v22 = (void *)v0[7];
    uint64_t v21 = v0[8];
    unint64_t v23 = v0[6];
    if (v18)
    {
      uint64_t v27 = v0[5];
      uint64_t v28 = v0[8];
      uint64_t v24 = swift_slowAlloc();
      uint64_t v26 = (void *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 138412546;
      v0[2] = v22;
      id v25 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v26 = v22;

      *(_WORD *)(v24 + 12) = 2082;
      swift_bridgeObjectRetain();
      v0[3] = sub_1000143F4(v27, v23, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "[%@] No extension found for %{public}s", (uint8_t *)v24, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v28);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v21);
    }
    type metadata accessor for InternalError();
    sub_100013CB4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_1003D3384()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003D350C;
  }
  else {
    uint64_t v2 = sub_1003D3498;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003D3498()
{
  uint64_t v1 = *(void **)(v0 + 96);

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1003D350C()
{
  uint64_t v1 = *(void **)(v0 + 96);

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_1003D357C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v43 = a7;
  uint64_t v44 = a8;
  uint64_t v45 = a6;
  uint64_t v46 = a5;
  uint64_t v42 = a3;
  id v47 = a2;
  uint64_t v11 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v11 - 8);
  Class isa = (Class)((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_1000172F8(&qword_100662390);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = __chkstk_darwin(v13);
  __chkstk_darwin(v16);
  BOOL v18 = (char *)&v41 - v17;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v54 = a1;
  id v49 = v19;
  uint64_t v50 = v14 + 16;
  v19((char *)&v41 - v17, a1, v13);
  uint64_t v20 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v48 = ~v20;
  uint64_t v51 = v20 | 7;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a4;
  uint64_t v22 = v18;
  uint64_t v23 = a4;
  uint64_t v24 = v13;
  uint64_t v52 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
  v52(v21 + ((v20 + 24) & ~v20), v22, v13);
  swift_retain();
  sub_1003DB3E8((uint64_t)v47, (uint64_t)sub_1003DBD3C, v21);
  uint64_t v41 = a9;
  id v47 = v25;
  swift_release();
  uint64_t v26 = type metadata accessor for TaskPriority();
  (*(void (**)(Class, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(isa, 1, 1, v26);
  uint64_t v27 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v24;
  v49(v27, v54, v24);
  uint64_t v29 = (v20 + 64) & v48;
  uint64_t v30 = (void *)swift_allocObject();
  v30[2] = 0;
  v30[3] = 0;
  uint64_t v31 = v42;
  v30[4] = a4;
  v30[5] = v31;
  uint64_t v32 = v45;
  v30[6] = v46;
  v30[7] = v32;
  v52((uint64_t)v30 + v29, v27, v28);
  swift_retain();
  id v33 = v31;
  swift_bridgeObjectRetain();
  sub_1000163AC((uint64_t)isa, (uint64_t)&unk_1006623B0, (uint64_t)v30);
  swift_release();
  Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
  NSString v34 = String._bridgeToObjectiveC()();
  v49(v27, v54, v28);
  uint64_t v35 = (v20 + 48) & v48;
  uint64_t v36 = (void *)swift_allocObject();
  uint64_t v37 = v46;
  v36[2] = v33;
  v36[3] = v37;
  v36[4] = v32;
  v36[5] = v23;
  v52((uint64_t)v36 + v35, v27, v28);
  aBlock[4] = sub_1003DC068;
  aBlock[5] = v36;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003D4C84;
  aBlock[3] = &unk_100645260;
  id v38 = _Block_copy(aBlock);
  swift_retain();
  id v39 = v33;
  swift_bridgeObjectRetain();
  swift_release();
  Class v40 = isa;
  [v47 additionalHeadersFor:isa accountID:v34 reply:v38];
  _Block_release(v38);
  swift_unknownObjectRelease();
}

uint64_t sub_1003D3AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return _swift_task_switch(sub_1003D3AD8, a4, 0);
}

uint64_t sub_1003D3AD8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  *(unsigned char *)(v0 + 48) = *(unsigned char *)(v1 + 112);
  *(unsigned char *)(v1 + 112) = 1;
  return _swift_task_switch(sub_1003D3B08, 0, 0);
}

uint64_t sub_1003D3B08()
{
  if ((*(unsigned char *)(v0 + 48) & 1) == 0)
  {
    *(void *)(v0 + 16) = *(void *)(v0 + 40);
    swift_errorRetain();
    sub_1000172F8(&qword_100662390);
    CheckedContinuation.resume(throwing:)();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003D3B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[5] = a4;
  uint64_t v9 = type metadata accessor for Logger();
  v8[10] = v9;
  v8[11] = *(void *)(v9 - 8);
  v8[12] = swift_task_alloc();
  uint64_t v10 = (void *)swift_task_alloc();
  v8[13] = v10;
  void *v10 = v8;
  v10[1] = sub_1003D3C98;
  return static Task<>.sleep(nanoseconds:)(60000000000);
}

uint64_t sub_1003D3C98()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 40);
    return _swift_task_switch(sub_1003D3DE4, v6, 0);
  }
}

uint64_t sub_1003D3DE4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  *(unsigned char *)(v0 + 112) = *(unsigned char *)(v1 + 112);
  *(unsigned char *)(v1 + 112) = 1;
  return _swift_task_switch(sub_1003D3E14, 0, 0);
}

uint64_t sub_1003D3E14()
{
  uint64_t v24 = v0;
  if ((*(unsigned char *)(v0 + 112) & 1) == 0)
  {
    uint64_t v1 = *(void **)(v0 + 48);
    static Logger.install.getter();
    id v2 = v1;
    swift_bridgeObjectRetain_n();
    id v3 = v2;
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v8 = *(void *)(v0 + 88);
    uint64_t v7 = *(void *)(v0 + 96);
    uint64_t v9 = *(void *)(v0 + 80);
    unint64_t v10 = *(void *)(v0 + 64);
    if (v6)
    {
      uint64_t v20 = *(void *)(v0 + 56);
      os_log_type_t type = v5;
      uint64_t v11 = *(void **)(v0 + 48);
      uint64_t v22 = *(void *)(v0 + 80);
      uint64_t v12 = swift_slowAlloc();
      BOOL v18 = (void *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412546;
      *(void *)(v0 + 24) = v11;
      log = v4;
      id v13 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *BOOL v18 = v11;

      *(_WORD *)(v12 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 32) = sub_1000143F4(v20, v10, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, log, type, "[%@] Timed out waiting to received additional headers from %{public}s", (uint8_t *)v12, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v22);
    }
    else
    {
      uint64_t v14 = *(void **)(v0 + 48);

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    }
    type metadata accessor for InternalError();
    sub_100013CB4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    uint64_t v15 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    *(void *)(v0 + 16) = v15;
    sub_1000172F8(&qword_100662390);
    CheckedContinuation.resume(throwing:)();
  }
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_1003D4144(unint64_t a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v81 = a3;
  uint64_t v87 = sub_1000172F8(&qword_100662390);
  uint64_t v11 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v85 = v12;
  id v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v14 - 8);
  uint64_t v86 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v83 = v16;
  uint64_t v84 = v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v74 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v74 - v24;
  if (!os_variant_has_internal_content())
  {
    id v82 = v13;
    uint64_t v80 = v11;
    static Logger.install.getter();
    swift_bridgeObjectRetain_n();
    id v43 = a2;
    swift_bridgeObjectRetain_n();
    id v44 = v43;
    uint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v45, v46))
    {
      os_log_t v74 = v45;
      unint64_t v77 = a4;
      uint64_t v78 = a5;
      uint64_t v79 = a6;
      uint64_t v47 = swift_slowAlloc();
      uint64_t v48 = (void *)swift_slowAlloc();
      os_log_t v76 = (os_log_t)swift_slowAlloc();
      uint64_t v88 = (uint64_t)v44;
      os_log_t v89 = v76;
      *(_DWORD *)uint64_t v47 = 138412802;
      id v49 = v44;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v75 = v48;
      *uint64_t v48 = v44;

      *(_WORD *)(v47 + 12) = 2048;
      if (a1)
      {
        uint64_t v50 = *(void *)(a1 + 16);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v50 = 0;
      }
      id v13 = v82;
      uint64_t v63 = (uint64_t)v86;
      uint64_t v88 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 22) = 2082;
      unint64_t v65 = v77;
      swift_bridgeObjectRetain();
      uint64_t v88 = sub_1000143F4(v81, v65, (uint64_t *)&v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      os_log_type_t v66 = v46;
      os_log_t v67 = v74;
      _os_log_impl((void *)&_mh_execute_header, v74, v66, "[%@] Received %ld additional headers from %{public}s", (uint8_t *)v47, 0x20u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v84 + 8))(v20, v83);
      a5 = v78;
      a6 = v79;
      uint64_t v11 = v80;
      goto LABEL_16;
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v20, v83);
    uint64_t v11 = v80;
    goto LABEL_11;
  }
  if (!a1)
  {
    uint64_t v51 = a6;
    id v82 = v13;
    static Logger.install.getter();
    id v52 = a2;
    unint64_t v53 = a4;
    swift_bridgeObjectRetain_n();
    id v54 = v52;
    uint64_t v55 = Logger.logObject.getter();
    os_log_type_t v56 = static os_log_type_t.default.getter();
    int v57 = v56;
    if (!os_log_type_enabled(v55, v56))
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v25, v83);
      id v13 = v82;
      uint64_t v64 = v85;
      uint64_t v63 = (uint64_t)v86;
      a6 = v51;
      goto LABEL_17;
    }
    uint64_t v58 = swift_slowAlloc();
    id v75 = (void *)swift_slowAlloc();
    uint64_t v80 = swift_slowAlloc();
    uint64_t v88 = (uint64_t)v54;
    os_log_t v89 = (os_log_t)v80;
    *(_DWORD *)uint64_t v58 = 138412546;
    uint64_t v79 = v51;
    LODWORD(v78) = v57;
    unint64_t v77 = 0;
    id v59 = v54;
    os_log_t v76 = v55;
    id v60 = v59;
    uint64_t v61 = v79;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v75 = v54;

    *(_WORD *)(v58 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v88 = sub_1000143F4(v81, v53, (uint64_t *)&v89);
    a1 = v77;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a6 = v61;
    swift_bridgeObjectRelease_n();
    os_log_t v62 = v76;
    _os_log_impl((void *)&_mh_execute_header, v76, (os_log_type_t)v78, "[%@] Received no additional headers from %{public}s", (uint8_t *)v58, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v84 + 8))(v25, v83);
LABEL_11:
    id v13 = v82;
    goto LABEL_12;
  }
  uint64_t v79 = a6;
  swift_bridgeObjectRetain();
  static Logger.install.getter();
  id v26 = a2;
  unint64_t v27 = a4;
  swift_bridgeObjectRetain_n();
  id v28 = v26;
  swift_bridgeObjectRetain();
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  int v31 = v30;
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v32 = swift_slowAlloc();
    LODWORD(v75) = v31;
    uint64_t v33 = v32;
    NSString v34 = swift_slowAlloc();
    os_log_t v74 = v34;
    os_log_t v76 = (os_log_t)swift_slowAlloc();
    uint64_t v88 = (uint64_t)v28;
    os_log_t v89 = v76;
    *(_DWORD *)uint64_t v33 = 138412802;
    id v82 = v13;
    uint64_t v78 = a5;
    uint64_t v80 = v11;
    id v35 = v28;
    unint64_t v77 = a1;
    id v36 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v34->Class isa = (Class)v28;

    a1 = v77;
    uint64_t v37 = v29;
    uint64_t v38 = v79;
    *(_WORD *)(v33 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v88 = sub_1000143F4(v81, v27, (uint64_t *)&v89);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a6 = v38;
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v33 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v39 = Dictionary.description.getter();
    unint64_t v41 = v40;
    swift_bridgeObjectRelease();
    uint64_t v42 = v39;
    id v13 = v82;
    uint64_t v88 = sub_1000143F4(v42, v41, (uint64_t *)&v89);
    uint64_t v11 = v80;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    a5 = v78;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v37, (os_log_type_t)v75, "[%@] Received additional headers from %{public}s: %s", (uint8_t *)v33, 0x20u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v84 + 8))(v23, v83);
LABEL_12:
    uint64_t v63 = (uint64_t)v86;
LABEL_16:
    uint64_t v64 = v85;
    goto LABEL_17;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();

  (*(void (**)(char *, uint64_t))(v84 + 8))(v23, v83);
  uint64_t v64 = v85;
  uint64_t v63 = (uint64_t)v86;
  a6 = v79;
LABEL_17:
  uint64_t v68 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v63, 1, 1, v68);
  uint64_t v69 = v87;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a6, v87);
  unint64_t v70 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v71 = (v64 + v70 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v72 = (char *)swift_allocObject();
  *((void *)v72 + 2) = 0;
  *((void *)v72 + 3) = 0;
  *((void *)v72 + 4) = a5;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v72[v70], v13, v69);
  *(void *)&v72[v71] = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100017544(v63, (uint64_t)&unk_1006623C0, (uint64_t)v72);
  return swift_release();
}

uint64_t sub_1003D4BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return _swift_task_switch(sub_1003D4BC8, a4, 0);
}

uint64_t sub_1003D4BC8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  *(unsigned char *)(v0 + 48) = *(unsigned char *)(v1 + 112);
  *(unsigned char *)(v1 + 112) = 1;
  return _swift_task_switch(sub_1003D4BF8, 0, 0);
}

uint64_t sub_1003D4BF8()
{
  if ((*(unsigned char *)(v0 + 48) & 1) == 0)
  {
    *(void *)(v0 + 16) = *(void *)(v0 + 40);
    swift_bridgeObjectRetain();
    sub_1000172F8(&qword_100662390);
    CheckedContinuation.resume(returning:)();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003D4C84(uint64_t a1, uint64_t a2)
{
  id v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2) {
    uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v3 = 0;
  }
  swift_retain();
  v2(v3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003D4D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return _swift_task_switch(sub_1003D4D2C, a4, 0);
}

uint64_t sub_1003D4D2C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  *(unsigned char *)(v0 + 48) = *(unsigned char *)(v1 + 112);
  *(unsigned char *)(v1 + 112) = 1;
  return _swift_task_switch(sub_1003DD0FC, 0, 0);
}

uint64_t sub_1003D4D5C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v31 = a5;
  id v32 = a2;
  uint64_t v7 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v7 - 8);
  id v36 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000172F8(&qword_100662328);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin(v9);
  id v13 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v30 - v14;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v39 = a1;
  v38((char *)v30 - v14, a1, v9);
  uint64_t v16 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v33 = ~v16;
  uint64_t v17 = (v16 + 24) & ~v16;
  v30[1] = v17 + v11;
  uint64_t v34 = v16 | 7;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a4;
  id v35 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v35(v18 + v17, v15, v9);
  uint64_t v37 = a4;
  swift_retain();
  sub_1003DB3E8((uint64_t)v32, (uint64_t)sub_1003DB218, v18);
  id v32 = v19;
  swift_release();
  uint64_t v20 = type metadata accessor for TaskPriority();
  uint64_t v21 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v36, 1, 1, v20);
  v38(v13, v39, v9);
  uint64_t v22 = (v16 + 40) & v33;
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = 0;
  v23[3] = 0;
  uint64_t v24 = v37;
  v23[4] = v37;
  uint64_t v25 = (char *)v23 + v22;
  id v26 = v35;
  v35((uint64_t)v25, v13, v9);
  swift_retain();
  sub_1000163AC(v21, (uint64_t)&unk_100662348, (uint64_t)v23);
  swift_release();
  v38(v13, v39, v9);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v24;
  v26(v27 + v17, v13, v9);
  aBlock[4] = sub_1003DB940;
  aBlock[5] = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003D58B4;
  aBlock[3] = &unk_100645120;
  id v28 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v32 requestFailed:v31 reply:v28];
  _Block_release(v28);
  return swift_unknownObjectRelease();
}

uint64_t sub_1003D5200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return _swift_task_switch(sub_1003D5224, a4, 0);
}

uint64_t sub_1003D5224()
{
  uint64_t v1 = *(void *)(v0 + 24);
  *(unsigned char *)(v0 + 48) = *(unsigned char *)(v1 + 112);
  *(unsigned char *)(v1 + 112) = 1;
  return _swift_task_switch(sub_1003D5254, 0, 0);
}

uint64_t sub_1003D5254()
{
  if ((*(unsigned char *)(v0 + 48) & 1) == 0)
  {
    *(void *)(v0 + 16) = *(void *)(v0 + 40);
    swift_errorRetain();
    sub_1000172F8(&qword_100662328);
    CheckedContinuation.resume(throwing:)();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003D52E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  BOOL v6 = (void *)swift_task_alloc();
  v5[5] = v6;
  *BOOL v6 = v5;
  v6[1] = sub_1003D5380;
  return static Task<>.sleep(nanoseconds:)(60000000000);
}

uint64_t sub_1003D5380()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 24);
    return _swift_task_switch(sub_1003D54C4, v6, 0);
  }
}

uint64_t sub_1003D54C4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  *(unsigned char *)(v0 + 48) = *(unsigned char *)(v1 + 112);
  *(unsigned char *)(v1 + 112) = 1;
  return _swift_task_switch(sub_1003D54F4, 0, 0);
}

uint64_t sub_1003D54F4()
{
  if ((*(unsigned char *)(v0 + 48) & 1) == 0)
  {
    type metadata accessor for InternalError();
    sub_100013CB4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    uint64_t v1 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    *(void *)(v0 + 16) = v1;
    sub_1000172F8(&qword_100662328);
    CheckedContinuation.resume(throwing:)();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1003D55EC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000172F8(&qword_100662328);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = 0;
  *((void *)v14 + 3) = 0;
  *((void *)v14 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v14[v13], (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v14[v13 + v8] = a1;
  swift_retain();
  sub_100017544((uint64_t)v11, (uint64_t)&unk_100662358, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_1003D57D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 33) = a6;
  *(void *)(v6 + 16) = a4;
  *(void *)(v6 + 24) = a5;
  return _swift_task_switch(sub_1003D57FC, a4, 0);
}

uint64_t sub_1003D57FC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(unsigned char *)(v0 + 34) = *(unsigned char *)(v1 + 112);
  *(unsigned char *)(v1 + 112) = 1;
  return _swift_task_switch(sub_1003D582C, 0, 0);
}

uint64_t sub_1003D582C()
{
  if ((*(unsigned char *)(v0 + 34) & 1) == 0)
  {
    *(unsigned char *)(v0 + 32) = *(unsigned char *)(v0 + 33);
    sub_1000172F8(&qword_100662328);
    CheckedContinuation.resume(returning:)();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003D58B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_1003D5908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return _swift_task_switch(sub_1003D592C, a4, 0);
}

uint64_t sub_1003D592C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  *(unsigned char *)(v0 + 48) = *(unsigned char *)(v1 + 112);
  *(unsigned char *)(v1 + 112) = 1;
  return _swift_task_switch(sub_1003DD100, 0, 0);
}

void sub_1003D595C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v41 = a7;
  uint64_t v42 = a6;
  uint64_t v43 = a5;
  id v44 = a2;
  unint64_t v40 = a3;
  uint64_t v9 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v9 - 8);
  uint64_t v50 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000172F8(&qword_100662438);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v38 - v16;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v51 = a1;
  os_log_type_t v46 = v18;
  v18((char *)&v38 - v16, a1, v11);
  uint64_t v19 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v45 = ~v19;
  uint64_t v47 = v19 | 7;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a4;
  uint64_t v48 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v48(v20 + ((v19 + 24) & ~v19), v17, v11);
  uint64_t v49 = a4;
  swift_retain();
  sub_1003DB3E8((uint64_t)v44, (uint64_t)sub_1003DC760, v20);
  id v44 = v21;
  swift_release();
  uint64_t v22 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v50, 1, 1, v22);
  v46(v15, v51, v11);
  uint64_t v23 = (v19 + 64) & v45;
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = 0;
  v24[3] = 0;
  uint64_t v39 = v15;
  uint64_t v25 = v40;
  void v24[4] = v49;
  v24[5] = v25;
  id v26 = (char *)v24 + v23;
  uint64_t v27 = v42;
  v24[6] = v43;
  v24[7] = v27;
  v48((uint64_t)v26, v15, v11);
  swift_retain();
  id v28 = v25;
  swift_bridgeObjectRetain();
  sub_1000163AC(v50, (uint64_t)&unk_100662458, (uint64_t)v24);
  swift_release();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  os_log_type_t v30 = v39;
  v46(v39, v51, v11);
  uint64_t v31 = (v19 + 48) & v45;
  id v32 = (char *)swift_allocObject();
  uint64_t v33 = v43;
  *((void *)v32 + 2) = v28;
  *((void *)v32 + 3) = v33;
  uint64_t v34 = (void (*)(char *, char *, uint64_t))v48;
  uint64_t v35 = v49;
  *((void *)v32 + 4) = v27;
  *((void *)v32 + 5) = v35;
  v34(&v32[v31], v30, v11);
  aBlock[4] = sub_1003DCBB4;
  aBlock[5] = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003D7058;
  aBlock[3] = &unk_1006453F0;
  id v36 = _Block_copy(aBlock);
  swift_retain();
  id v37 = v28;
  swift_bridgeObjectRetain();
  swift_release();
  [v44 availableAppsForAppleItemIDs:isa reply:v36];
  _Block_release(v36);
  swift_unknownObjectRelease();
}

uint64_t sub_1003D5E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_1000172F8(a4);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v10);
  unint64_t v17 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = 0;
  *((void *)v18 + 3) = 0;
  *((void *)v18 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v18[v17], (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  *(void *)&v18[(v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8] = a1;
  swift_retain();
  swift_errorRetain();
  sub_100017544((uint64_t)v15, a6, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_1003D6060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return _swift_task_switch(sub_1003D6084, a4, 0);
}

uint64_t sub_1003D6084()
{
  uint64_t v1 = *(void *)(v0 + 24);
  *(unsigned char *)(v0 + 48) = *(unsigned char *)(v1 + 112);
  *(unsigned char *)(v1 + 112) = 1;
  return _swift_task_switch(sub_1003D60B4, 0, 0);
}

uint64_t sub_1003D60B4()
{
  if ((*(unsigned char *)(v0 + 48) & 1) == 0)
  {
    *(void *)(v0 + 16) = *(void *)(v0 + 40);
    swift_errorRetain();
    sub_1000172F8(&qword_100662438);
    CheckedContinuation.resume(throwing:)();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003D6140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[5] = a4;
  uint64_t v9 = type metadata accessor for Logger();
  v8[10] = v9;
  v8[11] = *(void *)(v9 - 8);
  v8[12] = swift_task_alloc();
  uint64_t v10 = (void *)swift_task_alloc();
  v8[13] = v10;
  void *v10 = v8;
  v10[1] = sub_1003D6244;
  return static Task<>.sleep(nanoseconds:)(60000000000);
}

uint64_t sub_1003D6244()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 40);
    return _swift_task_switch(sub_1003D6390, v6, 0);
  }
}

uint64_t sub_1003D6390()
{
  uint64_t v1 = *(void *)(v0 + 40);
  *(unsigned char *)(v0 + 112) = *(unsigned char *)(v1 + 112);
  *(unsigned char *)(v1 + 112) = 1;
  return _swift_task_switch(sub_1003D63C0, 0, 0);
}

uint64_t sub_1003D63C0()
{
  uint64_t v24 = v0;
  if ((*(unsigned char *)(v0 + 112) & 1) == 0)
  {
    uint64_t v1 = *(void **)(v0 + 48);
    static Logger.install.getter();
    id v2 = v1;
    swift_bridgeObjectRetain_n();
    id v3 = v2;
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v8 = *(void *)(v0 + 88);
    uint64_t v7 = *(void *)(v0 + 96);
    uint64_t v9 = *(void *)(v0 + 80);
    unint64_t v10 = *(void *)(v0 + 64);
    if (v6)
    {
      uint64_t v20 = *(void *)(v0 + 56);
      os_log_type_t type = v5;
      uint64_t v11 = *(void **)(v0 + 48);
      uint64_t v22 = *(void *)(v0 + 80);
      uint64_t v12 = swift_slowAlloc();
      uint64_t v18 = (void *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412546;
      *(void *)(v0 + 24) = v11;
      log = v4;
      id v13 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v18 = v11;

      *(_WORD *)(v12 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 32) = sub_1000143F4(v20, v10, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, log, type, "[%@] Timed out waiting to receive available apps from %{public}s", (uint8_t *)v12, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v22);
    }
    else
    {
      uint64_t v14 = *(void **)(v0 + 48);

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    }
    type metadata accessor for InternalError();
    sub_100013CB4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    uint64_t v15 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    *(void *)(v0 + 16) = v15;
    sub_1000172F8(&qword_100662438);
    CheckedContinuation.resume(throwing:)();
  }
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_1003D66F0(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v74 = a7;
  uint64_t v69 = a4;
  uint64_t v75 = sub_1000172F8(&qword_100662438);
  uint64_t v12 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v72 = v13;
  uint64_t v14 = ((char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v15 - 8);
  unint64_t v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v70 = *(void *)(v18 - 8);
  uint64_t v71 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v61 - v22;
  v81[1] = v81;
  uint64_t v78 = a1;
  unint64_t v79 = a2;
  uint64_t v80 = &v78;
  sub_100012670(a1, a2);
  v77[4] = (uint64_t)&type metadata for Data;
  v77[3] = sub_1000172F8(&qword_100662428);
  v77[2] = sub_1000175C4();
  v77[1] = sub_1003DCC40();
  decodeXPCValues<each A, B>(from:)();
  sub_100013510(v78, v79);
  uint64_t v73 = v17;
  os_log_t v24 = (os_log_t)v81[0];
  if (v81[0])
  {
    swift_bridgeObjectRetain();
    static Logger.install.getter();
    swift_bridgeObjectRetain_n();
    id v25 = a3;
    swift_bridgeObjectRetain_n();
    id v26 = v25;
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    int v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v30 = swift_slowAlloc();
      os_log_t v67 = v21;
      os_log_t v64 = v27;
      uint64_t v31 = v30;
      uint64_t v32 = swift_slowAlloc();
      os_log_t v65 = v24;
      uint64_t v33 = (void *)v32;
      uint64_t v63 = (void *)v32;
      uint64_t v66 = swift_slowAlloc();
      uint64_t v76 = (uint64_t)v26;
      v77[0] = v66;
      *(_DWORD *)uint64_t v31 = 138413058;
      uint64_t v68 = a6;
      id v34 = v26;
      LODWORD(v62) = v29;
      id v35 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v33 = v26;
      os_log_t v24 = v65;

      *(_WORD *)(v31 + 12) = 2050;
      Class isa = v24[2].isa;
      swift_bridgeObjectRelease();
      uint64_t v76 = (uint64_t)isa;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 22) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v76 = sub_1000143F4(v69, a5, v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 32) = 2080;
      type metadata accessor for AppVersion();
      swift_bridgeObjectRetain();
      uint64_t v37 = Array.description.getter();
      unint64_t v39 = v38;
      swift_bridgeObjectRelease();
      uint64_t v40 = v37;
      a6 = v68;
      uint64_t v76 = sub_1000143F4(v40, v39, v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v41 = v64;
      _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v62, "[%@] Received %{public}ld available apps from %{public}s: %s, privacy: .public)", (uint8_t *)v31, 0x2Au);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v70 + 8))(v67, v71);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v21, v71);
    }
  }
  else
  {
    static Logger.install.getter();
    id v42 = a3;
    swift_bridgeObjectRetain_n();
    id v43 = v42;
    id v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.default.getter();
    int v46 = v45;
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v66 = a5;
      uint64_t v48 = v47;
      uint64_t v63 = (void *)swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      uint64_t v76 = (uint64_t)v43;
      v77[0] = v68;
      *(_DWORD *)uint64_t v48 = 138412546;
      os_log_t v64 = v14;
      LODWORD(v67) = v46;
      os_log_t v62 = v77;
      id v49 = v43;
      os_log_t v65 = v44;
      id v50 = v49;
      uint64_t v14 = v64;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v63 = v43;

      *(_WORD *)(v48 + 12) = 2082;
      unint64_t v51 = v66;
      swift_bridgeObjectRetain();
      uint64_t v76 = sub_1000143F4(v69, v51, v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      os_log_t v52 = v65;
      _os_log_impl((void *)&_mh_execute_header, v65, (os_log_type_t)v67, "[%@] Received no available apps from %{public}s", (uint8_t *)v48, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v70 + 8))(v23, v71);
  }
  uint64_t v53 = v72;
  uint64_t v54 = type metadata accessor for TaskPriority();
  uint64_t v55 = (uint64_t)v73;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v73, 1, 1, v54);
  uint64_t v56 = v75;
  (*(void (**)(NSObject *, uint64_t, uint64_t))(v12 + 16))(v14, v74, v75);
  unint64_t v57 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v58 = (v53 + v57 + 7) & 0xFFFFFFFFFFFFFFF8;
  id v59 = (char *)swift_allocObject();
  *((void *)v59 + 2) = 0;
  *((void *)v59 + 3) = 0;
  *((void *)v59 + 4) = a6;
  (*(void (**)(char *, NSObject *, uint64_t))(v12 + 32))(&v59[v57], v14, v56);
  *(void *)&v59[v58] = v24;
  swift_retain();
  sub_100017544(v55, (uint64_t)&unk_100662480, (uint64_t)v59);
  return swift_release();
}

uint64_t sub_1003D6F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return _swift_task_switch(sub_1003D6F9C, a4, 0);
}

uint64_t sub_1003D6F9C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  *(unsigned char *)(v0 + 48) = *(unsigned char *)(v1 + 112);
  *(unsigned char *)(v1 + 112) = 1;
  return _swift_task_switch(sub_1003D6FCC, 0, 0);
}

uint64_t sub_1003D6FCC()
{
  if ((*(unsigned char *)(v0 + 48) & 1) == 0)
  {
    *(void *)(v0 + 16) = *(void *)(v0 + 40);
    swift_bridgeObjectRetain();
    sub_1000172F8(&qword_100662438);
    CheckedContinuation.resume(returning:)();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003D7058(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(uint64_t, unint64_t))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v7 = v6;

  v3(v5, v7);
  sub_100013510(v5, v7);

  return swift_release();
}

uint64_t sub_1003D70E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return _swift_task_switch(sub_1003D7104, a4, 0);
}

uint64_t sub_1003D7104()
{
  uint64_t v1 = *(void *)(v0 + 24);
  *(unsigned char *)(v0 + 48) = *(unsigned char *)(v1 + 112);
  *(unsigned char *)(v1 + 112) = 1;
  return _swift_task_switch(sub_1003DD104, 0, 0);
}

uint64_t sub_1003D7134(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for _AppExtensionIdentity();
  v2[4] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for _AppExtensionProcess.Configuration();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  return _swift_task_switch(sub_1003D7230, 0, 0);
}

uint64_t sub_1003D7230()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  id v5 = [objc_allocWithZone((Class)_EXExtensionIdentity) initWithApplicationExtensionRecord:v0[3]];
  v0[9] = v5;
  id v6 = v5;
  _AppExtensionIdentity.init(_:)();
  _AppExtensionProcess.Configuration.init(appExtension:onInterruption:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  unint64_t v7 = (void *)swift_task_alloc();
  v0[10] = v7;
  *unint64_t v7 = v0;
  v7[1] = sub_1003D7354;
  uint64_t v8 = v0[7];
  uint64_t v9 = v0[2];
  return _AppExtensionProcess.init(configuration:)(v9, v8);
}

uint64_t sub_1003D7354()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003D7514;
  }
  else {
    uint64_t v2 = sub_1003D7468;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003D7468()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 40);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1003D7514()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 40);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1003D75C0(uint64_t a1, unint64_t a2, void *a3, void (*a4)(char *, uint64_t), unint64_t a5, void *a6, uint64_t a7, unint64_t a8, int a9, int a10, int a11, int a12, int a13, int a14, char *a15, char *a16, uint64_t a17, uint64_t a18)
{
  unint64_t v131 = a8;
  uint64_t v125 = a7;
  int v124 = a6;
  unint64_t v134 = a4;
  uint64_t v135 = (char *)a1;
  uint64_t v133 = type metadata accessor for MarketplaceKitError();
  uint64_t v122 = *(void *)(v133 - 8);
  uint64_t v21 = __chkstk_darwin(v133);
  long long v121 = (char *)&v111 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v130 = (char *)&v111 - v23;
  uint64_t v24 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v24 - 8);
  uint64_t v123 = (char *)&v111 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000172F8(&qword_1006623F8);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v128 = (uint64_t *)((char *)&v111 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v111 - v30;
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v111 - v32;
  uint64_t v34 = type metadata accessor for Logger();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v127 = (char *)&v111 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v36);
  v129 = (char *)&v111 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  id v126 = (char *)&v111 - v41;
  __chkstk_darwin(v40);
  id v43 = (char *)&v111 - v42;
  static Logger.install.getter();
  id v44 = a3;
  swift_bridgeObjectRetain_n();
  id v45 = v44;
  int v46 = Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.debug.getter();
  int v48 = v47;
  BOOL v49 = os_log_type_enabled(v46, v47);
  uint64_t v136 = v35;
  id v120 = v45;
  unint64_t v119 = a5;
  if (v49)
  {
    uint64_t v50 = swift_slowAlloc();
    os_log_t v116 = v46;
    uint64_t v51 = v50;
    uint64_t v114 = (void *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    v132 = v31;
    uint64_t v117 = v52;
    v139 = (char *)v52;
    *(_DWORD *)uint64_t v51 = 138412546;
    int v115 = v48;
    uint64_t v142 = (uint64_t)v45;
    unint64_t v118 = a2;
    uint64_t v53 = v33;
    id v54 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v114 = v45;

    uint64_t v33 = v53;
    *(_WORD *)(v51 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v142 = sub_1000143F4((uint64_t)v134, a5, (uint64_t *)&v139);
    a2 = v118;
    uint64_t v35 = v136;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    os_log_t v55 = v116;
    _os_log_impl((void *)&_mh_execute_header, v116, (os_log_type_t)v115, "[%@] Reply received from: %{public}s", (uint8_t *)v51, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    uint64_t v31 = v132;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v56 = *(void (**)(char *, uint64_t))(v35 + 8);
  v56(v43, v34);
  v139 = v135;
  unint64_t v140 = a2;
  uint64_t v141 = (uint64_t *)&v139;
  uint64_t v142 = (uint64_t)v33;
  sub_100012670((uint64_t)v135, a2);
  v138[4] = (uint64_t)&type metadata for Data;
  uint64_t v57 = sub_1000172F8(&qword_100662400);
  v138[3] = v57;
  v138[2] = sub_1000175C4();
  v138[1] = sub_1003DC418();
  decodeXPCValues<each A, B>(from:)();
  sub_100013510((uint64_t)v139, v140);
  uint64_t v58 = *(void *)(v57 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v33, 0, 1, v57);
  sub_1003DC474((uint64_t)v33, (uint64_t)v31);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v31, 1, v57) == 1)
  {
    id v59 = v127;
    static Logger.install.getter();
    id v60 = Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v60, v61))
    {
      os_log_t v62 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_t v62 = 0;
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "Failed to decode response", v62, 2u);
      swift_slowDealloc();
    }

    v56(v59, v34);
LABEL_18:
    sub_10001729C((uint64_t)v31, &qword_1006623F8);
    return sub_10001729C((uint64_t)v33, &qword_1006623F8);
  }
  uint64_t v63 = v128;
  sub_1003DC474((uint64_t)v31, (uint64_t)v128);
  int v64 = (*(uint64_t (**)(void *, uint64_t))(v58 + 88))(v63, v57);
  if (v64 == enum case for MarketplaceKitServiceResult.success<A>(_:))
  {
    uint64_t v135 = v33;
    long long v121 = (char *)HIDWORD(v131);
    uint64_t v122 = a18;
    uint64_t v133 = a17;
    v129 = a15;
    uint64_t v130 = a16;
    LODWORD(v118) = a9;
    LODWORD(v117) = a10;
    LODWORD(v116) = a11;
    int v115 = a12;
    LODWORD(v114) = a13;
    int v113 = a14;
    (*(void (**)(void *, uint64_t))(v58 + 96))(v63, v57);
    uint64_t v65 = *v63;
    uint64_t v66 = v126;
    static Logger.install.getter();
    id v67 = v120;
    unint64_t v68 = v119;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v69 = v67;
    uint64_t v70 = Logger.logObject.getter();
    os_log_type_t v71 = static os_log_type_t.default.getter();
    int v72 = v71;
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v73 = swift_slowAlloc();
      uint64_t v127 = (char *)v34;
      uint64_t v74 = v73;
      uint64_t v75 = swift_slowAlloc();
      LODWORD(v120) = v72;
      uint64_t v76 = (void *)v75;
      uint64_t v128 = (void *)swift_slowAlloc();
      uint64_t v137 = (uint64_t)v69;
      v138[0] = (uint64_t)v128;
      *(_DWORD *)uint64_t v74 = 138412802;
      uint64_t v77 = v65;
      v132 = v31;
      id v78 = v69;
      os_log_t v112 = v70;
      id v79 = v78;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v76 = v69;

      *(_WORD *)(v74 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v80 = v134;
      uint64_t v137 = sub_1000143F4((uint64_t)v134, v68, v138);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v74 + 22) = 2050;
      uint64_t v81 = *(void *)(v65 + 16);
      swift_bridgeObjectRelease();
      uint64_t v137 = v81;
      uint64_t v65 = v77;
      uint64_t v31 = v132;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      os_log_t v82 = v112;
      _os_log_impl((void *)&_mh_execute_header, v112, (os_log_type_t)v120, "[%@] %{public}s returned with %{public}ld available updates", (uint8_t *)v74, 0x20u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v56(v126, (uint64_t)v127);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v56(v66, v34);
      uint64_t v80 = v134;
    }
    uint64_t v98 = type metadata accessor for TaskPriority();
    uint64_t v99 = (uint64_t)v123;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v123, 1, 1, v98);
    uint64_t v100 = swift_allocObject();
    *(void *)(v100 + 16) = 0;
    *(void *)(v100 + 24) = 0;
    uint64_t v101 = v124;
    *(void *)(v100 + 32) = v65;
    *(void *)(v100 + 40) = v101;
    *(void *)(v100 + 48) = v125;
    *(void *)(v100 + 56) = v69;
    *(void *)(v100 + 64) = v80;
    *(void *)(v100 + 72) = v68;
    int v102 = (int)v121;
    *(_DWORD *)(v100 + 80) = v131;
    *(_DWORD *)(v100 + 84) = v102;
    int v103 = v117;
    *(_DWORD *)(v100 + 88) = v118;
    *(_DWORD *)(v100 + 92) = v103;
    int v104 = v115;
    *(_DWORD *)(v100 + 96) = v116;
    *(_DWORD *)(v100 + 100) = v104;
    int v105 = v113;
    *(_DWORD *)(v100 + 104) = v114;
    *(_DWORD *)(v100 + 108) = v105;
    uint64_t v106 = v130;
    *(void *)(v100 + 112) = v129;
    *(void *)(v100 + 120) = v106;
    uint64_t v107 = v122;
    *(void *)(v100 + 128) = v133;
    *(void *)(v100 + 136) = v107;
    id v108 = v69;
    swift_bridgeObjectRetain();
    id v109 = v101;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_100017544(v99, (uint64_t)&unk_100662418, v100);
    swift_release();
    uint64_t v33 = v135;
    goto LABEL_18;
  }
  unint64_t v134 = v56;
  uint64_t v127 = (char *)v34;
  if (v64 == enum case for MarketplaceKitServiceResult.failure<A>(_:))
  {
    (*(void (**)(void *, uint64_t))(v58 + 96))(v63, v57);
    uint64_t v83 = v122;
    uint64_t v84 = v130;
    uint64_t v85 = v63;
    uint64_t v86 = v133;
    (*(void (**)(char *, void *, uint64_t))(v122 + 32))(v130, v85, v133);
    static Logger.install.getter();
    uint64_t v87 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
    uint64_t v88 = v121;
    v87(v121, v84, v86);
    os_log_t v89 = Logger.logObject.getter();
    os_log_type_t v90 = static os_log_type_t.default.getter();
    int v91 = v90;
    if (os_log_type_enabled(v89, v90))
    {
      unint64_t v92 = (uint8_t *)swift_slowAlloc();
      uint64_t v93 = swift_slowAlloc();
      v132 = v31;
      uint64_t v94 = (void *)v93;
      LODWORD(v131) = v91;
      *(_DWORD *)unint64_t v92 = 138543362;
      uint64_t v135 = v33;
      sub_100013CB4((unint64_t *)&qword_10065B538, (void (*)(uint64_t))&type metadata accessor for MarketplaceKitError);
      swift_allocError();
      v87(v95, v88, v133);
      uint64_t v96 = _swift_stdlib_bridgeErrorToNSError();
      v138[0] = v96;
      uint64_t v33 = v135;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v94 = v96;
      uint64_t v97 = *(void (**)(char *, uint64_t))(v83 + 8);
      v97(v88, v133);
      _os_log_impl((void *)&_mh_execute_header, v89, (os_log_type_t)v131, "Client failed to determine available automatic updates: %{public}@", v92, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      uint64_t v31 = v132;
      swift_slowDealloc();
      uint64_t v86 = v133;
      swift_slowDealloc();
    }
    else
    {

      uint64_t v97 = *(void (**)(char *, uint64_t))(v83 + 8);
      v97(v88, v86);
    }
    v134(v129, (uint64_t)v127);
    v97(v130, v86);
    goto LABEL_18;
  }
  (*(void (**)(void *, uint64_t))(v58 + 8))(v63, v57);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003D8438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 240) = v20;
  *(_OWORD *)(v8 + 208) = v18;
  *(_OWORD *)(v8 + 224) = v19;
  *(_OWORD *)(v8 + 176) = v16;
  *(_OWORD *)(v8 + 192) = v17;
  *(void *)(v8 + 160) = a7;
  *(void *)(v8 + 168) = a8;
  *(void *)(v8 + 144) = a5;
  *(void *)(v8 + 152) = a6;
  *(void *)(v8 + 136) = a4;
  uint64_t v9 = type metadata accessor for Logger();
  *(void *)(v8 + 248) = v9;
  *(void *)(v8 + 256) = *(void *)(v9 - 8);
  *(void *)(v8 + 264) = swift_task_alloc();
  *(void *)(v8 + 272) = swift_task_alloc();
  type metadata accessor for UUID();
  *(void *)(v8 + 280) = swift_task_alloc();
  sub_1000172F8(&qword_10065C3C0);
  *(void *)(v8 + 288) = swift_task_alloc();
  *(void *)(v8 + 296) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for AppInstallRequestType();
  *(void *)(v8 + 304) = v10;
  *(void *)(v8 + 312) = *(void *)(v10 - 8);
  *(void *)(v8 + 320) = swift_task_alloc();
  type metadata accessor for URL();
  *(void *)(v8 + 328) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for AppInstallRequest();
  *(void *)(v8 + 336) = v11;
  *(void *)(v8 + 344) = *(void *)(v11 - 8);
  *(void *)(v8 + 352) = swift_task_alloc();
  uint64_t v12 = type metadata accessor for AppVersion();
  *(void *)(v8 + 360) = v12;
  *(void *)(v8 + 368) = *(void *)(v12 - 8);
  *(void *)(v8 + 376) = swift_task_alloc();
  uint64_t v13 = type metadata accessor for AutomaticUpdate();
  *(void *)(v8 + 384) = v13;
  *(void *)(v8 + 392) = *(void *)(v13 - 8);
  *(void *)(v8 + 400) = swift_task_alloc();
  *(void *)(v8 + 408) = swift_task_alloc();
  *(void *)(v8 + 416) = swift_task_alloc();
  return _swift_task_switch(sub_1003D8750, 0, 0);
}

uint64_t sub_1003D8750()
{
  uint64_t v75 = v0;
  uint64_t v1 = *(void *)(v0[17] + 16);
  v0[53] = v1;
  if (v1)
  {
    uint64_t v2 = v0[49];
    *((_DWORD *)v0 + 33) = *(_DWORD *)(v2 + 80);
    v0[54] = *(void *)(v2 + 72);
    v0[55] = *(void *)(v2 + 16);
    *((_DWORD *)v0 + 136) = enum case for AppInstallRequestType.automaticUpdate(_:);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    p_base_prots = &XPCClientRegistry.base_prots;
    id v5 = &XPCClientRegistry.base_prots;
    uint64_t v73 = v0;
    while (1)
    {
      v0[56] = v3;
      uint64_t v6 = (void *)v0[18];
      ((void (*)(void, unint64_t, void))v0[55])(v0[52], v0[17]+ ((*((unsigned __int8 *)v0 + 132) + 32) & ~(unint64_t)*((unsigned __int8 *)v0 + 132))+ v0[54] * v3, v0[48]);
      uint64_t v7 = AutomaticUpdate.appleItemID.getter();
      id v8 = objc_msgSend(v6, (SEL)p_base_prots[376]);
      id v9 = [v8 (SEL)v5[413]];

      uint64_t v10 = (void (*)(uint64_t, uint64_t, uint64_t))v0[55];
      uint64_t v12 = v0[51];
      uint64_t v11 = v0[52];
      uint64_t v13 = v0[48];
      if (v9)
      {
        id v14 = objc_msgSend((id)v0[18], (SEL)p_base_prots[376]);
        id v15 = [v14 (SEL)v5[413]];

        v10(v12, v11, v13);
        uint64_t v0 = v73;
        if ((id)v7 == v15) {
          goto LABEL_21;
        }
      }
      else
      {
        v10(v0[51], v0[52], v0[48]);
      }
      uint64_t v16 = v0[19];
      uint64_t v17 = *(void *)(v16 + 16);
      if (v17) {
        break;
      }
LABEL_12:
      uint64_t v26 = (void (*)(uint64_t, uint64_t, uint64_t))v0[55];
      uint64_t v27 = v0[52];
      uint64_t v28 = v0[50];
      uint64_t v29 = v0[48];
      uint64_t v30 = (void *)v73[20];
      int v72 = *(void (**)(uint64_t, uint64_t))(v0[49] + 8);
      v72(v0[51], v29);
      static Logger.install.getter();
      v26(v28, v27, v29);
      uint64_t v0 = v73;
      id v31 = v30;
      swift_bridgeObjectRetain_n();
      id v32 = v31;
      uint64_t v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.error.getter();
      BOOL v35 = os_log_type_enabled(v33, v34);
      uint64_t v36 = v73[52];
      uint64_t v37 = v73[50];
      uint64_t v38 = v73[48];
      uint64_t v39 = v73[32];
      unint64_t v40 = v73[22];
      uint64_t v70 = v73[31];
      if (v35)
      {
        uint64_t v41 = (void *)v73[20];
        uint64_t v67 = v73[21];
        uint64_t v69 = v73[34];
        uint64_t v42 = swift_slowAlloc();
        log = v33;
        id v43 = (void *)swift_slowAlloc();
        uint64_t v74 = swift_slowAlloc();
        *(_DWORD *)uint64_t v42 = 138412802;
        *(void *)(v42 + 4) = v41;
        *id v43 = v41;

        *(_WORD *)(v42 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)(v42 + 14) = sub_1000143F4(v67, v40, &v74);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v42 + 22) = 2050;
        uint64_t v44 = AutomaticUpdate.appleItemID.getter();
        uint64_t v45 = v37;
        int v46 = v72;
        v72(v45, v38);
        *(void *)(v42 + 24) = v44;
        _os_log_impl((void *)&_mh_execute_header, log, v34, "[%@] %{public}s asked us to update %{public}llu but they don't have it installed.", (uint8_t *)v42, 0x20u);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        uint64_t v0 = v73;
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v69, v70);
        uint64_t v48 = v38;
        uint64_t v47 = v36;
      }
      else
      {
        BOOL v49 = (void *)v73[20];
        int v46 = v72;
        uint64_t v50 = v73[34];
        v72(v73[50], v38);

        swift_bridgeObjectRelease_n();
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v50, v70);
        uint64_t v47 = v36;
        uint64_t v48 = v38;
      }
      v46(v47, v48);
      p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
      id v5 = (__objc2_prot_list **)(&XPCClientRegistry + 40);
      uint64_t v3 = v0[56] + 1;
      if (v3 == v0[53])
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    uint64_t v18 = v0[46];
    uint64_t v19 = v16 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    swift_bridgeObjectRetain();
    uint64_t v71 = *(void *)(v18 + 72);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    while (1)
    {
      uint64_t v22 = v0[46];
      uint64_t v21 = v0[47];
      uint64_t v23 = v0[45];
      v20(v21, v19, v23);
      uint64_t v24 = AppVersion.appleItemID.getter();
      uint64_t v25 = AutomaticUpdate.appleItemID.getter();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      if (v24 == v25) {
        break;
      }
      v19 += v71;
      --v17;
      uint64_t v0 = v73;
      if (!v17)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    uint64_t v0 = v73;
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v53 = *((unsigned int *)v0 + 136);
    uint64_t v54 = v0[51];
    uint64_t v55 = v0[48];
    uint64_t v56 = v0[49];
    uint64_t v57 = v0[40];
    uint64_t v59 = v0[38];
    uint64_t v58 = v0[39];
    id v60 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
    v0[57] = v60;
    v0[58] = (v56 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v60(v54, v55);
    AutomaticUpdate.alternativeDistributionPackage.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 104))(v57, v53, v59);
    AutomaticUpdate.installVerificationToken.getter();
    AutomaticUpdate.account.getter();
    AutomaticUpdate.appShareURL.getter();
    AppInstallRequest.init(adp:type:oAuthToken:installVerificationToken:accountID:appShareURL:)();
    os_log_type_t v61 = (void *)swift_task_alloc();
    v0[59] = v61;
    void *v61 = v0;
    v61[1] = sub_1003D8E38;
    uint64_t v62 = v0[25];
    uint64_t v63 = v0[26];
    uint64_t v64 = v0[23];
    uint64_t v65 = v0[24];
    uint64_t v66 = v0[20];
    return sub_10035E1E8((uint64_t)(v0 + 2), v64, v65, v62, v63, v66);
  }
  else
  {
LABEL_17:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v51 = (uint64_t (*)(void))v0[1];
    return v51();
  }
}

uint64_t sub_1003D8E38()
{
  *(void *)(*(void *)v1 + 480) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003DA8F0;
  }
  else {
    uint64_t v2 = sub_1003D8F4C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003D8F4C()
{
  uint64_t v21 = *(void *)(v0 + 328);
  uint64_t v31 = *(void *)(v0 + 320);
  uint64_t v20 = *(void *)(v0 + 296);
  uint64_t v22 = *(void *)(v0 + 288);
  uint64_t v32 = *(void *)(v0 + 280);
  uint64_t v33 = *(void *)(v0 + 240);
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v18 = *(void *)(v0 + 224);
  uint64_t v19 = *(void *)(v0 + 232);
  uint64_t v35 = *(void *)(v0 + 200);
  uint64_t v36 = *(void *)(v0 + 208);
  long long v34 = *(_OWORD *)(v0 + 184);
  uint64_t v2 = *(void **)(v0 + 160);
  uint64_t v29 = type metadata accessor for ADPInstallConfiguration(0);
  AppInstallRequest.id.getter();
  sub_10019B17C(v0 + 16, v0 + 56);
  id v30 = v2;
  AppInstallRequest.type.getter();
  uint64_t v3 = AppInstallRequest.oAuthToken.getter();
  uint64_t v27 = v4;
  uint64_t v28 = v3;
  uint64_t v5 = AppInstallRequest.installVerificationToken.getter();
  uint64_t v25 = v6;
  uint64_t v26 = v5;
  uint64_t v7 = AppInstallRequest.accountID.getter();
  uint64_t v23 = v8;
  uint64_t v24 = v7;
  AppInstallRequest.adp.getter();
  AppInstallRequest.referrer.getter();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  AppInstallRequest.appShareURL.getter();
  uint64_t v9 = *(void *)(v0 + 80);
  uint64_t v10 = *(void *)(v0 + 88);
  uint64_t v11 = sub_100239C90(v0 + 56, v9);
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t v13 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v13, v11, v9);
  *((void *)&v17 + 1) = v23;
  *(void *)&long long v17 = v24;
  *(void *)(v0 + 488) = sub_1002BF414(v32, v30, v13, v31, v28, v27, v26, v25, v17, 0, 0, v21, v20, v1, v18, v19, v33, 0, 0xF000000000000000,
                            1u,
                            0,
                            1,
                            v22,
                            v29,
                            v9,
                            v10);
  swift_release();

  sub_100014524(v0 + 56);
  swift_task_dealloc();
  *(_OWORD *)(v0 + 96) = v34;
  *(void *)(v0 + 112) = v35;
  *(void *)(v0 + 120) = v36;
  *(unsigned char *)(v0 + 128) = 0;
  type metadata accessor for ADPInstallTask();
  swift_allocObject();
  uint64_t v14 = swift_retain();
  uint64_t v15 = sub_100346FA4(v14, v0 + 96);
  *(void *)(v0 + 496) = v15;
  return _swift_task_switch(sub_1003D920C, v15, 0);
}

uint64_t sub_1003D920C()
{
  *(unsigned char *)(*(void *)(v0 + 496)
           + OBJC_IVAR____TtC28ManagedAppDistributionDaemon14ADPInstallTask_shouldCacheInstallAsPending) = 0;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 504) = v1;
  void *v1 = v0;
  v1[1] = sub_1003D92AC;
  return sub_10034213C();
}

uint64_t sub_1003D92AC()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[66] = v0;
    uint64_t v4 = (void *)swift_task_alloc();
    v2[67] = v4;
    *uint64_t v4 = v3;
    v4[1] = sub_1003D9ED4;
    return sub_10034A584(v0);
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v2[64] = v6;
    *uint64_t v6 = v3;
    v6[1] = sub_1003D945C;
    return sub_1003580F4();
  }
}

uint64_t sub_1003D945C()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[66] = v0;
    uint64_t v4 = (void *)swift_task_alloc();
    v2[67] = v4;
    *uint64_t v4 = v3;
    v4[1] = sub_1003D9ED4;
    return sub_10034A584(v0);
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v2[65] = v6;
    *uint64_t v6 = v3;
    v6[1] = sub_1003D960C;
    return sub_100348D6C();
  }
}

uint64_t sub_1003D960C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(void *)(v2 + 528) = v0;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 536) = v4;
    *uint64_t v4 = v3;
    v4[1] = sub_1003D9ED4;
    return sub_10034A584(v0);
  }
  else
  {
    return _swift_task_switch(sub_1003D9790, 0, 0);
  }
}

uint64_t sub_1003D9790()
{
  id v79 = v0;
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[57];
  uint64_t v2 = v0[52];
  uint64_t v3 = v0[48];
  uint64_t v5 = v0[43];
  uint64_t v4 = v0[44];
  uint64_t v6 = v0[42];
  swift_release();
  swift_release();
  uint64_t v76 = (uint64_t)(v0 + 2);
  sub_100014524((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v1(v2, v3);
  uint64_t v7 = v0[56] + 1;
  if (v7 == v0[53])
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    p_base_prots = &XPCClientRegistry.base_prots;
    uint64_t v11 = &XPCClientRegistry.base_prots;
    uint64_t v77 = v0;
    while (1)
    {
      v0[56] = v7;
      uint64_t v12 = (void *)v0[18];
      ((void (*)(void, unint64_t, void))v0[55])(v0[52], v0[17]+ ((*((unsigned __int8 *)v0 + 132) + 32) & ~(unint64_t)*((unsigned __int8 *)v0 + 132))+ v0[54] * v7, v0[48]);
      uint64_t v13 = AutomaticUpdate.appleItemID.getter();
      id v14 = objc_msgSend(v12, (SEL)p_base_prots[376]);
      id v15 = [v14 (SEL)v11[413]];

      uint64_t v16 = (void (*)(uint64_t, uint64_t, uint64_t))v0[55];
      uint64_t v18 = v0[51];
      uint64_t v17 = v0[52];
      uint64_t v19 = v0[48];
      if (v15)
      {
        id v20 = objc_msgSend((id)v0[18], (SEL)p_base_prots[376]);
        id v21 = [v20 (SEL)v11[413]];

        v16(v18, v17, v19);
        if ((id)v13 == v21) {
          goto LABEL_21;
        }
      }
      else
      {
        v16(v0[51], v0[52], v0[48]);
      }
      uint64_t v22 = v0[19];
      uint64_t v23 = *(void *)(v22 + 16);
      if (v23) {
        break;
      }
LABEL_15:
      uint64_t v33 = (void (*)(uint64_t, uint64_t, uint64_t))v77[55];
      uint64_t v34 = v77[52];
      uint64_t v35 = v77[50];
      uint64_t v36 = v77[48];
      uint64_t v37 = (void *)v77[20];
      uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v77[49] + 8);
      v38(v77[51], v36);
      static Logger.install.getter();
      v33(v35, v34, v36);
      id v39 = v37;
      swift_bridgeObjectRetain_n();
      id v40 = v39;
      uint64_t v41 = Logger.logObject.getter();
      os_log_type_t v42 = static os_log_type_t.error.getter();
      BOOL v43 = os_log_type_enabled(v41, v42);
      uint64_t v44 = v77[52];
      uint64_t v45 = v77[50];
      uint64_t v46 = v77[48];
      uint64_t v47 = v77[32];
      unint64_t v48 = v77[22];
      if (v43)
      {
        uint64_t v75 = v77[52];
        uint64_t v49 = v77[21];
        uint64_t v74 = v77[34];
        uint64_t v50 = (void *)v77[20];
        uint64_t v73 = v77[31];
        uint64_t v72 = v77[48];
        uint64_t v51 = swift_slowAlloc();
        uint64_t v71 = v38;
        uint64_t v52 = (void *)swift_slowAlloc();
        uint64_t v78 = swift_slowAlloc();
        *(_DWORD *)uint64_t v51 = 138412802;
        *(void *)(v51 + 4) = v50;
        *uint64_t v52 = v50;

        uint64_t v0 = v77;
        *(_WORD *)(v51 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)(v51 + 14) = sub_1000143F4(v49, v48, &v78);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v51 + 22) = 2050;
        uint64_t v53 = AutomaticUpdate.appleItemID.getter();
        v71(v45, v72);
        *(void *)(v51 + 24) = v53;
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "[%@] %{public}s asked us to update %{public}llu but they don't have it installed.", (uint8_t *)v51, 0x20u);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v74, v73);
        v71(v75, v72);
      }
      else
      {
        uint64_t v54 = v77[34];
        uint64_t v55 = (void *)v77[20];
        uint64_t v56 = v77[31];
        v38(v77[50], v46);

        swift_bridgeObjectRelease_n();
        uint64_t v0 = v77;
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v54, v56);
        v38(v44, v46);
      }
      p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
      uint64_t v11 = (__objc2_prot_list **)(&XPCClientRegistry + 40);
      uint64_t v7 = v0[56] + 1;
      if (v7 == v0[53]) {
        goto LABEL_2;
      }
    }
    uint64_t v24 = v0[46];
    uint64_t v25 = v22 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
    swift_bridgeObjectRetain();
    uint64_t v26 = *(void *)(v24 + 72);
    uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
    while (1)
    {
      uint64_t v29 = v77[46];
      uint64_t v28 = v77[47];
      uint64_t v30 = v77[45];
      v27(v28, v25, v30);
      uint64_t v31 = AppVersion.appleItemID.getter();
      uint64_t v32 = AutomaticUpdate.appleItemID.getter();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
      if (v31 == v32) {
        break;
      }
      v25 += v26;
      if (!--v23)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    uint64_t v0 = v77;
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v57 = *((unsigned int *)v0 + 136);
    uint64_t v58 = v0[51];
    uint64_t v59 = v0[48];
    uint64_t v60 = v0[49];
    uint64_t v61 = v0[40];
    uint64_t v62 = v0[38];
    uint64_t v63 = v0[39];
    uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
    v0[57] = v64;
    v0[58] = (v60 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v64(v58, v59);
    AutomaticUpdate.alternativeDistributionPackage.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 104))(v61, v57, v62);
    AutomaticUpdate.installVerificationToken.getter();
    AutomaticUpdate.account.getter();
    AutomaticUpdate.appShareURL.getter();
    AppInstallRequest.init(adp:type:oAuthToken:installVerificationToken:accountID:appShareURL:)();
    uint64_t v65 = (void *)swift_task_alloc();
    v0[59] = v65;
    *uint64_t v65 = v0;
    v65[1] = sub_1003D8E38;
    uint64_t v66 = v0[25];
    uint64_t v67 = v0[26];
    uint64_t v68 = v0[23];
    uint64_t v69 = v0[24];
    uint64_t v70 = v0[20];
    return sub_10035E1E8(v76, v68, v69, v66, v67, v70);
  }
}

uint64_t sub_1003D9ED4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 496);
  swift_task_dealloc();
  return _swift_task_switch(sub_1003D9FE4, v1, 0);
}

uint64_t sub_1003D9FE4()
{
  swift_willThrow();
  return _swift_task_switch(sub_1003DA054, 0, 0);
}

uint64_t sub_1003DA054()
{
  uint64_t v84 = v0;
  swift_release();
  swift_release();
  uint64_t v81 = (uint64_t)(v0 + 2);
  sub_100014524((uint64_t)(v0 + 2));
  (*(void (**)(void, void))(v0[43] + 8))(v0[44], v0[42]);
  static Logger.install.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v3 + 4) = v5;
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed while enqueuing automatic updates: %{public}@", (uint8_t *)v3, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  os_log_t v82 = v0;
  uint64_t v6 = (void (*)(uint64_t, uint64_t))v0[57];
  uint64_t v7 = v0[52];
  uint64_t v8 = v0[48];
  uint64_t v9 = v0[33];
  uint64_t v10 = v0[32];
  uint64_t v11 = v0[31];
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  v6(v7, v8);
  uint64_t v12 = v0[56] + 1;
  if (v12 == v0[53])
  {
LABEL_5:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
  else
  {
    p_base_prots = &XPCClientRegistry.base_prots;
    uint64_t v16 = &XPCClientRegistry.base_prots;
    while (1)
    {
      v0[56] = v12;
      uint64_t v17 = (void *)v0[18];
      ((void (*)(void, unint64_t, void))v0[55])(v0[52], v0[17]+ ((*((unsigned __int8 *)v0 + 132) + 32) & ~(unint64_t)*((unsigned __int8 *)v0 + 132))+ v0[54] * v12, v0[48]);
      uint64_t v18 = AutomaticUpdate.appleItemID.getter();
      id v19 = objc_msgSend(v17, (SEL)p_base_prots[376]);
      id v20 = [v19 (SEL)v16[413]];

      id v21 = (void (*)(uint64_t, uint64_t, uint64_t))v0[55];
      uint64_t v23 = v0[51];
      uint64_t v22 = v0[52];
      uint64_t v24 = v0[48];
      if (v20)
      {
        id v25 = objc_msgSend((id)v0[18], (SEL)p_base_prots[376]);
        id v26 = [v25 (SEL)v16[413]];

        v21(v23, v22, v24);
        if ((id)v18 == v26) {
          goto LABEL_24;
        }
      }
      else
      {
        v21(v0[51], v0[52], v0[48]);
      }
      uint64_t v27 = v0[19];
      uint64_t v28 = *(void *)(v27 + 16);
      if (v28) {
        break;
      }
LABEL_18:
      uint64_t v38 = (void (*)(uint64_t, uint64_t, uint64_t))v82[55];
      uint64_t v39 = v82[52];
      uint64_t v40 = v82[50];
      uint64_t v41 = v82[48];
      os_log_type_t v42 = (void *)v82[20];
      BOOL v43 = *(void (**)(uint64_t, uint64_t))(v82[49] + 8);
      v43(v82[51], v41);
      static Logger.install.getter();
      v38(v40, v39, v41);
      id v44 = v42;
      swift_bridgeObjectRetain_n();
      id v45 = v44;
      uint64_t v46 = Logger.logObject.getter();
      os_log_type_t v47 = static os_log_type_t.error.getter();
      BOOL v48 = os_log_type_enabled(v46, v47);
      uint64_t v49 = v82[52];
      uint64_t v50 = v82[50];
      uint64_t v51 = v82[48];
      uint64_t v52 = v82[32];
      unint64_t v53 = v82[22];
      if (v48)
      {
        uint64_t v80 = v82[52];
        uint64_t v54 = v82[21];
        uint64_t v79 = v82[34];
        uint64_t v55 = (void *)v82[20];
        uint64_t v78 = v82[31];
        uint64_t v77 = v82[48];
        uint64_t v56 = swift_slowAlloc();
        uint64_t v76 = v43;
        uint64_t v57 = (void *)swift_slowAlloc();
        uint64_t v83 = swift_slowAlloc();
        *(_DWORD *)uint64_t v56 = 138412802;
        *(void *)(v56 + 4) = v55;
        void *v57 = v55;

        uint64_t v0 = v82;
        *(_WORD *)(v56 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)(v56 + 14) = sub_1000143F4(v54, v53, &v83);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v56 + 22) = 2050;
        uint64_t v58 = AutomaticUpdate.appleItemID.getter();
        v76(v50, v77);
        *(void *)(v56 + 24) = v58;
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "[%@] %{public}s asked us to update %{public}llu but they don't have it installed.", (uint8_t *)v56, 0x20u);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v79, v78);
        v76(v80, v77);
      }
      else
      {
        uint64_t v59 = v82[34];
        uint64_t v60 = (void *)v82[20];
        uint64_t v61 = v82[31];
        v43(v82[50], v51);

        swift_bridgeObjectRelease_n();
        uint64_t v0 = v82;
        (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v59, v61);
        v43(v49, v51);
      }
      p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
      uint64_t v16 = (__objc2_prot_list **)(&XPCClientRegistry + 40);
      uint64_t v12 = v0[56] + 1;
      if (v12 == v0[53]) {
        goto LABEL_5;
      }
    }
    uint64_t v29 = v0[46];
    uint64_t v30 = v27 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    swift_bridgeObjectRetain();
    uint64_t v31 = *(void *)(v29 + 72);
    uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
    while (1)
    {
      uint64_t v34 = v82[46];
      uint64_t v33 = v82[47];
      uint64_t v35 = v82[45];
      v32(v33, v30, v35);
      uint64_t v36 = AppVersion.appleItemID.getter();
      uint64_t v37 = AutomaticUpdate.appleItemID.getter();
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
      if (v36 == v37) {
        break;
      }
      v30 += v31;
      if (!--v28)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    uint64_t v0 = v82;
    swift_bridgeObjectRelease();
LABEL_24:
    uint64_t v62 = *((unsigned int *)v0 + 136);
    uint64_t v63 = v0[51];
    uint64_t v64 = v0[48];
    uint64_t v65 = v0[49];
    uint64_t v66 = v0[40];
    uint64_t v67 = v0[38];
    uint64_t v68 = v0[39];
    uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
    v0[57] = v69;
    v0[58] = (v65 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v69(v63, v64);
    AutomaticUpdate.alternativeDistributionPackage.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 104))(v66, v62, v67);
    AutomaticUpdate.installVerificationToken.getter();
    AutomaticUpdate.account.getter();
    AutomaticUpdate.appShareURL.getter();
    AppInstallRequest.init(adp:type:oAuthToken:installVerificationToken:accountID:appShareURL:)();
    uint64_t v70 = (void *)swift_task_alloc();
    v0[59] = v70;
    void *v70 = v0;
    v70[1] = sub_1003D8E38;
    uint64_t v71 = v0[25];
    uint64_t v72 = v0[26];
    uint64_t v73 = v0[23];
    uint64_t v74 = v0[24];
    uint64_t v75 = v0[20];
    return sub_10035E1E8(v81, v73, v74, v71, v72, v75);
  }
}

uint64_t sub_1003DA8F0()
{
  uint64_t v84 = v0;
  (*(void (**)(void, void))(v0[43] + 8))(v0[44], v0[42]);
  static Logger.install.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v3 + 4) = v5;
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed while enqueuing automatic updates: %{public}@", (uint8_t *)v3, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  os_log_t v82 = v0;
  uint64_t v6 = (void (*)(uint64_t, uint64_t))v0[57];
  uint64_t v7 = v0[52];
  uint64_t v8 = v0[48];
  uint64_t v9 = v0[33];
  uint64_t v10 = v0[32];
  uint64_t v11 = v0[31];
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  v6(v7, v8);
  uint64_t v12 = v0[56] + 1;
  if (v12 == v0[53])
  {
LABEL_5:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
  else
  {
    uint64_t v80 = (uint64_t)(v0 + 2);
    p_base_prots = &XPCClientRegistry.base_prots;
    uint64_t v16 = &XPCClientRegistry.base_prots;
    while (1)
    {
      v0[56] = v12;
      uint64_t v17 = (void *)v0[18];
      ((void (*)(void, unint64_t, void))v0[55])(v0[52], v0[17]+ ((*((unsigned __int8 *)v0 + 132) + 32) & ~(unint64_t)*((unsigned __int8 *)v0 + 132))+ v0[54] * v12, v0[48]);
      uint64_t v18 = AutomaticUpdate.appleItemID.getter();
      id v19 = objc_msgSend(v17, (SEL)p_base_prots[376]);
      id v20 = [v19 (SEL)v16[413]];

      id v21 = (void (*)(uint64_t, uint64_t, uint64_t))v0[55];
      uint64_t v23 = v0[51];
      uint64_t v22 = v0[52];
      uint64_t v24 = v0[48];
      if (v20)
      {
        id v25 = objc_msgSend((id)v0[18], (SEL)p_base_prots[376]);
        id v26 = [v25 (SEL)v16[413]];

        v21(v23, v22, v24);
        if ((id)v18 == v26) {
          goto LABEL_24;
        }
      }
      else
      {
        v21(v0[51], v0[52], v0[48]);
      }
      uint64_t v27 = v0[19];
      uint64_t v28 = *(void *)(v27 + 16);
      if (v28) {
        break;
      }
LABEL_18:
      uint64_t v38 = (void (*)(uint64_t, uint64_t, uint64_t))v82[55];
      uint64_t v39 = v82[52];
      uint64_t v40 = v82[50];
      uint64_t v41 = v82[48];
      os_log_type_t v42 = (void *)v82[20];
      BOOL v43 = *(void (**)(uint64_t, uint64_t))(v82[49] + 8);
      v43(v82[51], v41);
      static Logger.install.getter();
      v38(v40, v39, v41);
      id v44 = v42;
      swift_bridgeObjectRetain_n();
      id v45 = v44;
      uint64_t v46 = Logger.logObject.getter();
      os_log_type_t v47 = static os_log_type_t.error.getter();
      BOOL v48 = os_log_type_enabled(v46, v47);
      uint64_t v49 = v82[52];
      uint64_t v50 = v82[50];
      uint64_t v51 = v82[48];
      uint64_t v52 = v82[32];
      unint64_t v53 = v82[22];
      if (v48)
      {
        uint64_t v81 = v82[52];
        uint64_t v54 = v82[21];
        uint64_t v79 = v82[34];
        uint64_t v55 = (void *)v82[20];
        uint64_t v78 = v82[31];
        uint64_t v77 = v82[48];
        uint64_t v56 = swift_slowAlloc();
        uint64_t v76 = v43;
        uint64_t v57 = (void *)swift_slowAlloc();
        uint64_t v83 = swift_slowAlloc();
        *(_DWORD *)uint64_t v56 = 138412802;
        *(void *)(v56 + 4) = v55;
        void *v57 = v55;

        uint64_t v0 = v82;
        *(_WORD *)(v56 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)(v56 + 14) = sub_1000143F4(v54, v53, &v83);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v56 + 22) = 2050;
        uint64_t v58 = AutomaticUpdate.appleItemID.getter();
        v76(v50, v77);
        *(void *)(v56 + 24) = v58;
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "[%@] %{public}s asked us to update %{public}llu but they don't have it installed.", (uint8_t *)v56, 0x20u);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v79, v78);
        v76(v81, v77);
      }
      else
      {
        uint64_t v59 = v82[34];
        uint64_t v60 = (void *)v82[20];
        uint64_t v61 = v82[31];
        v43(v82[50], v51);

        swift_bridgeObjectRelease_n();
        uint64_t v0 = v82;
        (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v59, v61);
        v43(v49, v51);
      }
      p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
      uint64_t v16 = (__objc2_prot_list **)(&XPCClientRegistry + 40);
      uint64_t v12 = v0[56] + 1;
      if (v12 == v0[53]) {
        goto LABEL_5;
      }
    }
    uint64_t v29 = v0[46];
    uint64_t v30 = v27 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    swift_bridgeObjectRetain();
    uint64_t v31 = *(void *)(v29 + 72);
    uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
    while (1)
    {
      uint64_t v34 = v82[46];
      uint64_t v33 = v82[47];
      uint64_t v35 = v82[45];
      v32(v33, v30, v35);
      uint64_t v36 = AppVersion.appleItemID.getter();
      uint64_t v37 = AutomaticUpdate.appleItemID.getter();
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
      if (v36 == v37) {
        break;
      }
      v30 += v31;
      if (!--v28)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    uint64_t v0 = v82;
    swift_bridgeObjectRelease();
LABEL_24:
    uint64_t v62 = *((unsigned int *)v0 + 136);
    uint64_t v63 = v0[51];
    uint64_t v64 = v0[48];
    uint64_t v65 = v0[49];
    uint64_t v66 = v0[40];
    uint64_t v67 = v0[38];
    uint64_t v68 = v0[39];
    uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
    v0[57] = v69;
    v0[58] = (v65 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v69(v63, v64);
    AutomaticUpdate.alternativeDistributionPackage.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 104))(v66, v62, v67);
    AutomaticUpdate.installVerificationToken.getter();
    AutomaticUpdate.account.getter();
    AutomaticUpdate.appShareURL.getter();
    AppInstallRequest.init(adp:type:oAuthToken:installVerificationToken:accountID:appShareURL:)();
    uint64_t v70 = (void *)swift_task_alloc();
    v0[59] = v70;
    void *v70 = v0;
    v70[1] = sub_1003D8E38;
    uint64_t v71 = v0[25];
    uint64_t v72 = v0[26];
    uint64_t v73 = v0[23];
    uint64_t v74 = v0[24];
    uint64_t v75 = v0[20];
    return sub_10035E1E8(v80, v73, v74, v71, v72, v75);
  }
}

void sub_1003DB174(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t type metadata accessor for ContinuationResumptionState()
{
  return self;
}

uint64_t sub_1003DB200(uint64_t a1)
{
  return sub_1003D4D5C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1003DB20C()
{
  return sub_1003DC698(&qword_100662328);
}

uint64_t sub_1003DB218(uint64_t a1)
{
  return sub_1003DBD64(a1, &qword_100662328, (uint64_t)&unk_1006451A8, (uint64_t)&unk_100662370);
}

id sub_1003DB240(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

id sub_1003DB31C()
{
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = 0;
  id v2 = [v0 initWithIdentifier:v1 error:&v6];

  if (v2)
  {
    id v3 = v6;
  }
  else
  {
    id v4 = v6;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v2;
}

void sub_1003DB3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5.super.Class isa = _AppExtensionProcess.makeXPCConnection()().super.isa;
  if (!v6)
  {
    Class isa = v5.super.isa;
    id v8 = [self interfaceWithProtocol:&OBJC_PROTOCOL____TtP14MarketplaceKit31MarketplaceExtensionXPCProtocol_];
    [(objc_class *)isa setRemoteObjectInterface:v8];

    [(objc_class *)isa resume];
    v11[4] = a2;
    v11[5] = a3;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    void v11[2] = sub_1003DB174;
    v11[3] = &unk_100645170;
    uint64_t v9 = _Block_copy(v11);
    swift_retain();
    swift_release();
    id v10 = [(objc_class *)isa remoteObjectProxyWithErrorHandler:v9];
    _Block_release(v9);
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_1000172F8(&qword_100662360);
    if ((swift_dynamicCast() & 1) == 0)
    {
      type metadata accessor for InternalError();
      sub_100013CB4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
}

uint64_t sub_1003DB5E8()
{
  return sub_1003DCEE4(&qword_100662328, (void (*)(void))&_swift_errorRelease);
}

uint64_t sub_1003DB608()
{
  uint64_t v2 = *(void *)(sub_1000172F8(&qword_100662328) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  id v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *id v7 = v1;
  v7[1] = sub_1000176B4;
  _OWORD v7[4] = v5;
  v7[5] = v6;
  v7[3] = v4;
  return _swift_task_switch(sub_1003D592C, v4, 0);
}

uint64_t sub_1003DB72C()
{
  uint64_t v1 = sub_1000172F8(&qword_100662328);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003DB804()
{
  uint64_t v2 = *(void *)(sub_1000172F8(&qword_100662328) - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1000176B4;
  v5[3] = v3;
  v5[4] = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  v5[5] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1003D5380;
  return static Task<>.sleep(nanoseconds:)(60000000000);
}

uint64_t sub_1003DB934()
{
  return sub_1003DC698(&qword_100662328);
}

uint64_t sub_1003DB940(char a1)
{
  uint64_t v3 = *(void *)(sub_1000172F8(&qword_100662328) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1003D55EC(a1, v4, v5);
}

uint64_t sub_1003DB9B8()
{
  return swift_release();
}

uint64_t sub_1003DB9C0()
{
  uint64_t v1 = sub_1000172F8(&qword_100662328);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1003DBA9C()
{
  uint64_t v2 = *(void *)(sub_1000172F8(&qword_100662328) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = v0 + v3;
  char v6 = *(unsigned char *)(v0 + v3 + *(void *)(v2 + 64));
  uint64_t v7 = swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *(void *)uint64_t v7 = v1;
  *(unsigned char *)(v7 + 33) = v6;
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v5;
  *(void *)(v7 + 8) = sub_1000176B4;
  return _swift_task_switch(sub_1003D57FC, v4, 0);
}

uint64_t sub_1003DBBB8()
{
  return sub_1003DCEE4(&qword_100662328, (void (*)(void))&_swift_errorRelease);
}

uint64_t sub_1003DBBD8()
{
  uint64_t v2 = *(void *)(sub_1000172F8(&qword_100662328) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1000176B4;
  _OWORD v7[4] = v5;
  v7[5] = v6;
  v7[3] = v4;
  return _swift_task_switch(sub_1003D5224, v4, 0);
}

void sub_1003DBCFC(uint64_t a1)
{
  sub_1003D357C(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72));
}

uint64_t sub_1003DBD30()
{
  return sub_1003DC698(&qword_100662390);
}

uint64_t sub_1003DBD3C(uint64_t a1)
{
  return sub_1003DBD64(a1, &qword_100662390, (uint64_t)&unk_1006452C0, (uint64_t)&unk_1006623D0);
}

uint64_t sub_1003DBD64(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(sub_1000172F8(a2) - 8);
  return sub_1003D5E74(a1, *(void *)(v4 + 16), v4 + ((*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), a2, a3, a4);
}

uint64_t sub_1003DBDF4()
{
  return sub_1003DCEE4(&qword_100662390, (void (*)(void))&_swift_errorRelease);
}

uint64_t sub_1003DBE14()
{
  uint64_t v2 = *(void *)(sub_1000172F8(&qword_100662390) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1000176B4;
  _OWORD v7[4] = v5;
  v7[5] = v6;
  v7[3] = v4;
  return _swift_task_switch(sub_1003D4D2C, v4, 0);
}

uint64_t sub_1003DBF38()
{
  return sub_1003DC8D8(&qword_100662390);
}

uint64_t sub_1003DBF44(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1000172F8(&qword_100662390) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = v1[7];
  uint64_t v11 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_1000176B4;
  return sub_1003D3B94(a1, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1003DC05C()
{
  return sub_1003DCADC(&qword_100662390);
}

uint64_t sub_1003DC068(unint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000172F8(&qword_100662390) - 8);
  uint64_t v4 = (void *)v1[2];
  uint64_t v5 = v1[3];
  unint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1003D4144(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1003DC0E4()
{
  return sub_1003DCEE4(&qword_100662390, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003DC104()
{
  uint64_t v2 = *(void *)(sub_1000172F8(&qword_100662390) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1000176B4;
  _OWORD v7[4] = v5;
  v7[5] = v6;
  v7[3] = v4;
  return _swift_task_switch(sub_1003D4BC8, v4, 0);
}

uint64_t sub_1003DC228()
{
  return sub_1003DCEE4(&qword_100662390, (void (*)(void))&_swift_errorRelease);
}

uint64_t sub_1003DC248()
{
  uint64_t v2 = *(void *)(sub_1000172F8(&qword_100662390) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1000176B4;
  _OWORD v7[4] = v5;
  v7[5] = v6;
  v7[3] = v4;
  return _swift_task_switch(sub_1003D3AD8, v4, 0);
}

uint64_t sub_1003DC36C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_1003DC3D4(uint64_t a1, unint64_t a2)
{
  return sub_1003D75C0(a1, a2, *(void **)(v2 + 16), *(void (**)(char *, uint64_t))(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(_OWORD *)(v2 + 64), HIDWORD(*(void *)(v2 + 64)), *(void *)(v2 + 72), HIDWORD(*(_OWORD *)(v2 + 64)), *(_OWORD *)(v2 + 80), HIDWORD(*(void *)(v2 + 80)), *(char **)(v2 + 88), *(char **)(v2 + 96), *(void *)(v2 + 104), *(void *)(v2 + 112));
}

unint64_t sub_1003DC418()
{
  unint64_t result = qword_100662408;
  if (!qword_100662408)
  {
    sub_10017B924(&qword_100662400);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100662408);
  }
  return result;
}

uint64_t sub_1003DC474(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000172F8(&qword_1006623F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003DC4DC()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_1003DC554(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_1000176B4;
  return sub_1003D8438(a1, v4, v5, v6, v7, v8, v9, v10);
}

void sub_1003DC67C(uint64_t a1)
{
  sub_1003D595C(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1003DC68C()
{
  return sub_1003DC698(&qword_100662438);
}

uint64_t sub_1003DC698(uint64_t *a1)
{
  uint64_t v2 = sub_1000172F8(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

uint64_t sub_1003DC760(uint64_t a1)
{
  return sub_1003DBD64(a1, &qword_100662438, (uint64_t)&unk_100645450, (uint64_t)&unk_100662490);
}

uint64_t sub_1003DC788()
{
  return sub_1003DCEE4(&qword_100662438, (void (*)(void))&_swift_errorRelease);
}

uint64_t sub_1003DC7A8()
{
  uint64_t v2 = *(void *)(sub_1000172F8(&qword_100662438) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1000176B4;
  _OWORD v7[4] = v5;
  v7[5] = v6;
  v7[3] = v4;
  return _swift_task_switch(sub_1003D7104, v4, 0);
}

uint64_t sub_1003DC8CC()
{
  return sub_1003DC8D8(&qword_100662438);
}

uint64_t sub_1003DC8D8(uint64_t *a1)
{
  uint64_t v2 = sub_1000172F8(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 64) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_unknownObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

uint64_t sub_1003DC9B8(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1000172F8(&qword_100662438) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = v1[7];
  uint64_t v11 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_10000B238;
  return sub_1003D6140(a1, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1003DCAD0()
{
  return sub_1003DCADC(&qword_100662438);
}

uint64_t sub_1003DCADC(uint64_t *a1)
{
  uint64_t v2 = sub_1000172F8(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 48) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;

  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

uint64_t sub_1003DCBB4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1000172F8(&qword_100662438) - 8);
  uint64_t v6 = (void *)v2[2];
  uint64_t v7 = v2[3];
  unint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = (uint64_t)v2 + ((*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1003D66F0(a1, a2, v6, v7, v8, v9, v10);
}

unint64_t sub_1003DCC40()
{
  unint64_t result = qword_100662460;
  if (!qword_100662460)
  {
    sub_10017B924(&qword_100662428);
    sub_1003DCCEC(&qword_100662468, &qword_100662470);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662460);
  }
  return result;
}

uint64_t sub_1003DCCEC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10017B924(&qword_1006623E0);
    sub_100013CB4(a2, (void (*)(uint64_t))&type metadata accessor for AppVersion);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003DCD80()
{
  return sub_1003DCEE4(&qword_100662438, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003DCDA0()
{
  uint64_t v2 = *(void *)(sub_1000172F8(&qword_100662438) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_10000B238;
  _OWORD v7[4] = v5;
  v7[5] = v6;
  v7[3] = v4;
  return _swift_task_switch(sub_1003D6F9C, v4, 0);
}

uint64_t sub_1003DCEC4()
{
  return sub_1003DCEE4(&qword_100662438, (void (*)(void))&_swift_errorRelease);
}

uint64_t sub_1003DCEE4(uint64_t *a1, void (*a2)(void))
{
  uint64_t v4 = sub_1000172F8(a1);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v6 + 40) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = (*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2 + v7, v4);
  a2(*(void *)(v2 + v9));

  return _swift_deallocObject(v2, v9 + 8, v8);
}

uint64_t sub_1003DCFD8()
{
  uint64_t v2 = *(void *)(sub_1000172F8(&qword_100662438) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1000176B4;
  _OWORD v7[4] = v5;
  v7[5] = v6;
  v7[3] = v4;
  return _swift_task_switch(sub_1003D6084, v4, 0);
}

ValueMetadata *type metadata accessor for LicenseRenewalResponse()
{
  return &type metadata for LicenseRenewalResponse;
}

uint64_t initializeWithCopy for LicenseRenewalRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LicenseRenewalRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  return a1;
}

uint64_t assignWithTake for LicenseRenewalRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for LicenseRenewalRequest()
{
  return &type metadata for LicenseRenewalRequest;
}

uint64_t sub_1003DD270(void *a1)
{
  uint64_t v3 = sub_1000172F8(&qword_100662498);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10018AC60(a1, a1[3]);
  sub_1003DD634();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1003DD3FC()
{
  unint64_t v1 = 0x4B65736E6563696CLL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000017;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x526C6177656E6572;
  }
}

uint64_t sub_1003DD46C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1003DD688(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003DD494(uint64_t a1)
{
  unint64_t v2 = sub_1003DD634();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003DD4D0(uint64_t a1)
{
  unint64_t v2 = sub_1003DD634();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003DD50C(void *a1)
{
  return sub_1003DD270(a1);
}

uint64_t sub_1003DD524()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 0x65736E6563696CLL;
  }
}

uint64_t sub_1003DD564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1003DD80C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003DD58C(uint64_t a1)
{
  unint64_t v2 = sub_1003DDB20();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003DD5C8(uint64_t a1)
{
  unint64_t v2 = sub_1003DDB20();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003DD604@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1003DD8FC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

unint64_t sub_1003DD634()
{
  unint64_t result = qword_1006624A0;
  if (!qword_1006624A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006624A0);
  }
  return result;
}

uint64_t sub_1003DD688(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x526C6177656E6572 && a2 == 0xEE00747365757165;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4B65736E6563696CLL && a2 == 0xEA00000000007965 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001005BD0C0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1003DD80C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65736E6563696CLL && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001005BEF90)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1003DD8FC(void *a1)
{
  uint64_t v3 = sub_1000172F8(&qword_1006624A8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[4];
  sub_10018AC60(a1, a1[3]);
  sub_1003DDB20();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_100014524((uint64_t)a1);
  }
  else
  {
    v9[31] = 0;
    uint64_t v7 = KeyedDecodingContainer.decode(_:forKey:)();
    sub_1000172F8((uint64_t *)&unk_10065C5D0);
    v9[15] = 1;
    sub_100288278();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_100014524((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1003DDB20()
{
  unint64_t result = qword_1006624B0;
  if (!qword_1006624B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006624B0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LicenseRenewalResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003DDC40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LicenseRenewalResponse.CodingKeys()
{
  return &type metadata for LicenseRenewalResponse.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LicenseRenewalRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003DDD44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LicenseRenewalRequest.CodingKeys()
{
  return &type metadata for LicenseRenewalRequest.CodingKeys;
}

unint64_t sub_1003DDD80()
{
  unint64_t result = qword_1006624B8;
  if (!qword_1006624B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006624B8);
  }
  return result;
}

unint64_t sub_1003DDDD8()
{
  unint64_t result = qword_1006624C0;
  if (!qword_1006624C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006624C0);
  }
  return result;
}

unint64_t sub_1003DDE30()
{
  unint64_t result = qword_1006624C8;
  if (!qword_1006624C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006624C8);
  }
  return result;
}

unint64_t sub_1003DDE88()
{
  unint64_t result = qword_1006624D0;
  if (!qword_1006624D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006624D0);
  }
  return result;
}

unint64_t sub_1003DDEE0()
{
  unint64_t result = qword_1006624D8;
  if (!qword_1006624D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006624D8);
  }
  return result;
}

unint64_t sub_1003DDF38()
{
  unint64_t result = qword_1006624E0;
  if (!qword_1006624E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006624E0);
  }
  return result;
}

uint64_t sub_1003DDF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[71] = a6;
  v6[70] = a5;
  v6[69] = a4;
  v6[68] = a3;
  v6[67] = a2;
  v6[66] = a1;
  type metadata accessor for MediaAPIMetadata();
  v6[72] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for AppInstallRequestType();
  v6[73] = v7;
  v6[74] = *(void *)(v7 - 8);
  v6[75] = swift_task_alloc();
  v6[76] = swift_task_alloc();
  return _swift_task_switch(sub_1003DE09C, 0, 0);
}

uint64_t sub_1003DE09C()
{
  uint64_t v1 = *(void *)(v0 + 608);
  uint64_t v2 = *(void *)(*(void *)(v0 + 552)
                 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23ADPInstallConfiguration_lockedStorage);
  uint64_t v3 = v2 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v2 + 16);
  unsigned int v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_1002BDDD0(v3, v1);
  os_unfair_lock_unlock(v4);
  os_unfair_lock_lock(v4);
  sub_1002BDC4C(v3, v0 + 376);
  os_unfair_lock_unlock(v4);
  uint64_t v5 = *(void *)(v0 + 568);
  uint64_t v6 = *(void *)(v0 + 560);
  uint64_t v7 = *(void **)(*(void *)(v0 + 552) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23ADPInstallConfiguration_logKey);
  sub_10019B17C(v0 + 376, v0 + 48);
  *(void *)(v0 + 16) = v6;
  *(void *)(v0 + 24) = v5;
  *(unsigned char *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = v7;
  id v8 = v7;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 616) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1003DE24C;
  uint64_t v10 = *(void *)(v0 + 576);
  return sub_100273008(v10);
}

uint64_t sub_1003DE24C()
{
  *(void *)(*(void *)v1 + 624) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003DF21C;
  }
  else {
    uint64_t v2 = sub_1003DE360;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003DE360()
{
  uint64_t v1 = *(void *)(v0 + 608);
  uint64_t v2 = *(void *)(v0 + 600);
  uint64_t v3 = *(void *)(v0 + 592);
  uint64_t v4 = *(void *)(v0 + 584);
  uint64_t v5 = *(void **)(v0 + 576);
  *(void *)(v0 + 632) = *v5;
  *(void *)(v0 + 640) = v5[1];
  swift_bridgeObjectRetain();
  sub_1003DF2E0((uint64_t)v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v2, v4);
  if (v6 == enum case for AppInstallRequestType.automaticInstall(_:))
  {
LABEL_2:
    uint64_t v7 = *(void *)(v0 + 608);
    uint64_t v8 = *(void *)(v0 + 592);
    uint64_t v9 = *(void *)(v0 + 584);
    swift_bridgeObjectRelease();
    sub_10019CB0C(v0 + 16);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    sub_100014524(v0 + 376);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10(0);
  }
  if (v6 != enum case for AppInstallRequestType.install(_:))
  {
    if (v6 == enum case for AppInstallRequestType.automaticUpdate(_:)) {
      goto LABEL_2;
    }
    if (v6 != enum case for AppInstallRequestType.update(_:))
    {
      if (v6 != enum case for AppInstallRequestType.promotion(_:)
        && v6 != enum case for AppInstallRequestType.restore(_:)
        && v6 != enum case for AppInstallRequestType.deviceVPP(_:)
        && v6 != enum case for AppInstallRequestType.userVPP(_:)
        && v6 != enum case for AppInstallRequestType.upp(_:)
        && v6 != enum case for AppInstallRequestType.restoreUpdate(_:))
      {
        return _assertionFailure(_:_:file:line:flags:)();
      }
      goto LABEL_2;
    }
  }
  sub_100017238(*(void *)(v0 + 528), v0 + 416, &qword_10065D3A0);
  if (!*(void *)(v0 + 440))
  {
    sub_10001729C(v0 + 416, &qword_10065D3A0);
    goto LABEL_22;
  }
  sub_1000172F8(&qword_10065C450);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_22:
    sub_100017238(*(void *)(v0 + 528), v0 + 456, &qword_10065D3A0);
    if (*(void *)(v0 + 480))
    {
      sub_1000172F8(&qword_10065C450);
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = 0;
        uint64_t v13 = 0xE000000000000000;
        int v16 = 1;
        goto LABEL_29;
      }
    }
    else
    {
      sub_10001729C(v0 + 456, &qword_10065D3A0);
    }
    uint64_t v17 = *(void *)(v0 + 624);
    uint64_t v18 = *(void *)(v0 + 544);
    uint64_t v19 = *(void *)(v0 + 536);
    objc_allocWithZone((Class)LSApplicationRecord);
    swift_bridgeObjectRetain();
    id v20 = sub_1003DB240(v19, v18, 0);
    if (v17)
    {
      swift_errorRelease();
    }
    else
    {
      uint64_t v31 = v20;
      if (v20)
      {
        id v32 = [v20 iTunesMetadata];
        id v33 = [v32 distributorInfo];

        id v34 = [v33 distributorNameForCurrentLocale];
        if (v34)
        {
          uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v13 = v35;

          int v16 = 0;
          goto LABEL_29;
        }
      }
    }
    int v16 = 0;
    uint64_t v13 = 0xE100000000000000;
    uint64_t v12 = 63;
LABEL_29:
    uint64_t v21 = *(void *)(v0 + 400);
    uint64_t v22 = *(void *)(v0 + 408);
    sub_10018AC60((void *)(v0 + 376), v21);
    uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 56))(v21, v22);
    if (v24) {
      uint64_t v25 = v23;
    }
    else {
      uint64_t v25 = 63;
    }
    if (v24) {
      unint64_t v26 = v24;
    }
    else {
      unint64_t v26 = 0xE100000000000000;
    }
    if (v16)
    {
      swift_bridgeObjectRelease();
      char v27 = 4;
      uint64_t v12 = v25;
      uint64_t v13 = v26;
      uint64_t v25 = 0;
      unint64_t v26 = 0;
    }
    else
    {
      char v27 = 3;
    }
    *(unsigned char *)(v0 + 153) = v27;
    *(void *)(v0 + 696) = v26;
    *(void *)(v0 + 688) = v25;
    *(void *)(v0 + 680) = v13;
    *(void *)(v0 + 672) = v12;
    uint64_t v28 = *(void *)(v0 + 640);
    uint64_t v29 = *(void *)(v0 + 552);
    *(void *)(v0 + 88) = *(void *)(v0 + 632);
    *(void *)(v0 + 96) = v28;
    *(void *)(v0 + 104) = v12;
    *(void *)(v0 + 112) = v13;
    *(void *)(v0 + 120) = v25;
    *(void *)(v0 + 128) = v26;
    *(void *)(v0 + 136) = 0;
    *(void *)(v0 + 144) = 0;
    *(unsigned char *)(v0 + 152) = v27;
    *(void *)(v0 + 704) = *(void *)(v29
                                      + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23ADPInstallConfiguration_localizer);
    uint64_t v30 = (void *)swift_task_alloc();
    *(void *)(v0 + 712) = v30;
    *uint64_t v30 = v0;
    v30[1] = sub_1003DEC88;
    uint64_t v15 = v0 + 88;
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)(v0 + 512);
  uint64_t v13 = *(void *)(v0 + 520);
  if ((v12 != 0xD000000000000012 || v13 != 0x80000001005B75E0)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v36 = *(void *)(v0 + 624);
    id v37 = objc_allocWithZone((Class)LSApplicationRecord);
    swift_bridgeObjectRetain();
    id v38 = sub_1003DB240(v12, v13, 0);
    if (v36)
    {
      swift_errorRelease();
      int v16 = 0;
    }
    else
    {
      uint64_t v39 = v38;
      if (v38)
      {
        id v40 = [v38 localizedName];

        uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v42 = v41;

        swift_bridgeObjectRelease();
        int v16 = 0;
        uint64_t v13 = v42;
      }
      else
      {
        int v16 = 0;
      }
    }
    goto LABEL_29;
  }
  swift_bridgeObjectRelease();
  *(void *)(v0 + 304) = 14;
  *(_OWORD *)(v0 + 312) = 0u;
  *(_OWORD *)(v0 + 328) = 0u;
  *(_OWORD *)(v0 + 344) = 0u;
  *(void *)(v0 + 360) = 0;
  *(unsigned char *)(v0 + 368) = 26;
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 648) = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1003DEA48;
  uint64_t v15 = v0 + 304;
LABEL_39:
  return sub_100560FFC(v15);
}

uint64_t sub_1003DEA48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 656) = a1;
  *(void *)(v3 + 664) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_1003DEB4C, 0, 0);
}

uint64_t sub_1003DEB4C()
{
  uint64_t v1 = *(void *)(v0 + 664);
  uint64_t v2 = *(void *)(v0 + 656);
  uint64_t v3 = *(void *)(v0 + 400);
  uint64_t v4 = *(void *)(v0 + 408);
  sub_10018AC60((void *)(v0 + 376), v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 56))(v3, v4);
  uint64_t v7 = 63;
  if (v6) {
    uint64_t v7 = v5;
  }
  unint64_t v8 = 0xE100000000000000;
  if (v6) {
    unint64_t v8 = v6;
  }
  *(void *)(v0 + 696) = v8;
  *(void *)(v0 + 688) = v7;
  *(void *)(v0 + 680) = v1;
  *(void *)(v0 + 672) = v2;
  uint64_t v9 = *(void *)(v0 + 640);
  *(void *)(v0 + 88) = *(void *)(v0 + 632);
  uint64_t v10 = *(void *)(v0 + 552);
  *(void *)(v0 + 96) = v9;
  *(void *)(v0 + 104) = v2;
  *(void *)(v0 + 112) = v1;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 136) = 0;
  *(void *)(v0 + 144) = 0;
  *(void *)(v0 + 128) = v8;
  *(_WORD *)(v0 + 152) = 771;
  *(void *)(v0 + 704) = *(void *)(v10
                                    + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23ADPInstallConfiguration_localizer);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 712) = v11;
  void *v11 = v0;
  v11[1] = sub_1003DEC88;
  return sub_100560FFC(v0 + 88);
}

uint64_t sub_1003DEC88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  char v4 = *(unsigned char *)(*v2 + 153);
  uint64_t v5 = *(void *)(*v2 + 696);
  uint64_t v6 = *(void *)(*v2 + 688);
  uint64_t v7 = *(void *)(*v2 + 680);
  uint64_t v8 = *(void *)(*v2 + 672);
  uint64_t v9 = *(void *)(*v2 + 640);
  uint64_t v10 = *(void *)(*v2 + 632);
  uint64_t v14 = *v2;
  v3[90] = a1;
  v3[91] = a2;
  swift_task_dealloc();
  sub_10019C9FC(v10, v9, v8, v7, v6, v5, 0, 0, v4);
  v3[20] = 13;
  uint64_t v11 = (uint64_t)(v3 + 20);
  *(_OWORD *)(v11 + 8) = 0u;
  *(_OWORD *)(v11 + 24) = 0u;
  *(_OWORD *)(v11 + 40) = 0u;
  *(void *)(v11 + 56) = 0;
  *(unsigned char *)(v11 + 64) = 26;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v11 + 576) = v12;
  *uint64_t v12 = v14;
  v12[1] = sub_1003DEEAC;
  return sub_100560FFC(v11);
}

uint64_t sub_1003DEEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v7 = *v2;
  *(void *)(v3 + 744) = a1;
  *(void *)(v3 + 752) = a2;
  swift_task_dealloc();
  *(_OWORD *)(v3 + 232) = 0u;
  uint64_t v4 = v3 + 232;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 16) = 0u;
  *(unsigned char *)(v4 + 64) = 26;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 528) = v5;
  *uint64_t v5 = v7;
  v5[1] = sub_1003DEFFC;
  return sub_100560FFC(v4);
}

uint64_t sub_1003DEFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 768) = a1;
  *(void *)(v3 + 776) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_1003DF100, 0, 0);
}

uint64_t sub_1003DF100()
{
  uint64_t v1 = *(void *)(v0 + 776);
  uint64_t v2 = *(void *)(v0 + 768);
  long long v9 = *(_OWORD *)(v0 + 720);
  long long v10 = *(_OWORD *)(v0 + 744);
  uint64_t v3 = *(void *)(v0 + 608);
  uint64_t v4 = *(void *)(v0 + 592);
  uint64_t v5 = *(void *)(v0 + 584);
  sub_10019CB0C(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  type metadata accessor for SystemAlert();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = v10;
  *(_OWORD *)(v6 + 32) = v9;
  *(void *)(v6 + 48) = v2;
  *(void *)(v6 + 56) = v1;
  *(void *)(v6 + 64) = 0;
  *(void *)(v6 + 72) = 0;
  *(_WORD *)(v6 + 80) = 0;
  sub_100014524(v0 + 376);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v7(v6);
}

uint64_t sub_1003DF21C()
{
  uint64_t v1 = v0[76];
  uint64_t v2 = v0[74];
  uint64_t v3 = v0[73];
  sub_10019CB0C((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_100014524((uint64_t)(v0 + 47));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1003DF2E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MediaAPIMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003DF33C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[75] = a3;
  v3[74] = a2;
  v3[73] = a1;
  sub_1000172F8(&qword_10065C3C0);
  v3[76] = swift_task_alloc();
  v3[77] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for AppInstallRequestType();
  v3[78] = v4;
  v3[79] = *(void *)(v4 - 8);
  v3[80] = swift_task_alloc();
  v3[81] = swift_task_alloc();
  return _swift_task_switch(sub_1003DF454, 0, 0);
}

uint64_t sub_1003DF454()
{
  uint64_t v1 = *(void *)(v0 + 648);
  uint64_t v2 = *(void *)(*(void *)(v0 + 584)
                 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23ADPInstallConfiguration_lockedStorage);
  uint64_t v3 = v2 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v2 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_1002BDDD0(v3, v1);
  os_unfair_lock_unlock(v4);
  os_unfair_lock_lock(v4);
  sub_1002BDC4C(v3, v0 + 448);
  uint64_t v5 = *(void *)(v0 + 616);
  uint64_t v6 = *(void *)(v0 + 584) + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23ADPInstallConfiguration_referrer;
  os_unfair_lock_unlock(v4);
  uint64_t v7 = *(void *)(v0 + 472);
  uint64_t v8 = *(void *)(v0 + 480);
  sub_10018AC60((void *)(v0 + 448), v7);
  uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 56))(v7, v8);
  object = v10;
  sub_100017238(v6, v5, &qword_10065C3C0);
  uint64_t v12 = *(void *)(v0 + 616);
  if (object) {
    goto LABEL_2;
  }
  uint64_t v13 = *(void *)(v0 + 608);
  sub_100017238(v12, v13, &qword_10065C3C0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  uint64_t v17 = *(void *)(v0 + 608);
  if (v16 == 1)
  {
    sub_10001729C(*(void *)(v0 + 608), &qword_10065C3C0);
  }
  else
  {
    Swift::String_optional v18 = URL.host(percentEncoded:)(1);
    uint64_t countAndFlagsBits = v18.value._countAndFlagsBits;
    object = v18.value._object;
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v14);
    if (v18.value._object)
    {
      uint64_t v12 = *(void *)(v0 + 616);
LABEL_2:
      sub_10001729C(v12, &qword_10065C3C0);
      goto LABEL_8;
    }
  }
  sub_10001729C(*(void *)(v0 + 616), &qword_10065C3C0);
  swift_bridgeObjectRelease();
  uint64_t countAndFlagsBits = 0;
  object = (void *)0xE000000000000000;
LABEL_8:
  *(void *)(v0 + 664) = object;
  *(void *)(v0 + 656) = countAndFlagsBits;
  uint64_t v19 = *(void *)(v0 + 640);
  uint64_t v20 = *(void *)(v0 + 632);
  uint64_t v21 = *(void *)(v0 + 624);
  (*(void (**)(uint64_t, void, uint64_t))(v20 + 16))(v19, *(void *)(v0 + 648), v21);
  int v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 88))(v19, v21);
  if (v22 != enum case for AppInstallRequestType.automaticInstall(_:))
  {
    if (v22 == enum case for AppInstallRequestType.install(_:))
    {
      uint64_t v23 = v0 + 160;
      uint64_t v24 = *(void *)(v0 + 600);
      uint64_t v25 = *(void *)(v0 + 592);
      *(void *)(v0 + 672) = *(void *)(*(void *)(v0 + 584)
                                        + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23ADPInstallConfiguration_localizer);
      *(void *)(v0 + 160) = v25;
      *(void *)(v0 + 168) = v24;
      *(_OWORD *)(v0 + 176) = 0u;
      *(_OWORD *)(v0 + 192) = 0u;
      *(_OWORD *)(v0 + 208) = 0u;
      *(unsigned char *)(v0 + 224) = 5;
      unint64_t v26 = (void *)swift_task_alloc();
      *(void *)(v0 + 680) = v26;
      *unint64_t v26 = v0;
      char v27 = sub_1003DFA0C;
LABEL_17:
      v26[1] = v27;
      return sub_100560FFC(v23);
    }
    if (v22 != enum case for AppInstallRequestType.automaticUpdate(_:))
    {
      if (v22 == enum case for AppInstallRequestType.update(_:))
      {
        uint64_t v23 = v0 + 16;
        uint64_t v30 = *(void *)(v0 + 600);
        uint64_t v31 = *(void *)(v0 + 592);
        *(void *)(v0 + 696) = *(void *)(*(void *)(v0 + 584)
                                          + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23ADPInstallConfiguration_localizer);
        *(void *)(v0 + 16) = v31;
        *(void *)(v0 + 24) = v30;
        *(_OWORD *)(v0 + 32) = 0u;
        *(_OWORD *)(v0 + 48) = 0u;
        *(_OWORD *)(v0 + 64) = 0u;
        *(unsigned char *)(v0 + 80) = 8;
        unint64_t v26 = (void *)swift_task_alloc();
        *(void *)(v0 + 704) = v26;
        *unint64_t v26 = v0;
        char v27 = sub_1003DFD80;
        goto LABEL_17;
      }
      if (v22 != enum case for AppInstallRequestType.promotion(_:)
        && v22 != enum case for AppInstallRequestType.restore(_:)
        && v22 != enum case for AppInstallRequestType.deviceVPP(_:)
        && v22 != enum case for AppInstallRequestType.userVPP(_:)
        && v22 != enum case for AppInstallRequestType.upp(_:)
        && v22 != enum case for AppInstallRequestType.restoreUpdate(_:))
      {
        return _assertionFailure(_:_:file:line:flags:)();
      }
    }
  }
  (*(void (**)(void, void))(*(void *)(v0 + 632) + 8))(*(void *)(v0 + 648), *(void *)(v0 + 624));
  swift_bridgeObjectRelease();
  sub_100014524(v0 + 448);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28(0);
}

uint64_t sub_1003DFA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[61] = v2;
  v4[62] = a1;
  v4[63] = a2;
  uint64_t v5 = v3[83];
  uint64_t v6 = v3[82];
  long long v10 = (void *)*v2;
  swift_task_dealloc();
  v4[29] = v6;
  v4[30] = v5;
  uint64_t v7 = (uint64_t)(v4 + 29);
  *(_OWORD *)(v7 + 16) = 0u;
  *(_OWORD *)(v7 + 32) = 0u;
  *(_OWORD *)(v7 + 48) = 0u;
  *(unsigned char *)(v7 + 64) = 6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v7 + 456) = v8;
  *uint64_t v8 = v10;
  v8[1] = sub_1003DFB90;
  return sub_100560FFC(v7);
}

uint64_t sub_1003DFB90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[64] = v2;
  v3[65] = a1;
  v3[66] = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1003DFCB4, 0, 0);
}

uint64_t sub_1003DFCB4()
{
  uint64_t v1 = *(void *)(v0 + 520);
  uint64_t v2 = *(void *)(v0 + 528);
  uint64_t v3 = *(void *)(v0 + 496);
  uint64_t v4 = *(void *)(v0 + 504);
  *(void *)(v0 + 720) = *(void *)(v0 + 672);
  *(void *)(v0 + 728) = v4;
  *(void *)(v0 + 736) = v3;
  *(void *)(v0 + 744) = v2;
  *(void *)(v0 + 752) = v1;
  *(_OWORD *)(v0 + 304) = 0u;
  *(_OWORD *)(v0 + 320) = 0u;
  *(_OWORD *)(v0 + 336) = 0u;
  *(_OWORD *)(v0 + 352) = 0u;
  *(unsigned char *)(v0 + 368) = 26;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 760) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1003E00F8;
  return sub_100560FFC(v0 + 304);
}

uint64_t sub_1003DFD80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[67] = v2;
  v4[68] = a1;
  v4[69] = a2;
  uint64_t v5 = v3[83];
  uint64_t v6 = v3[82];
  long long v10 = (void *)*v2;
  swift_task_dealloc();
  v4[11] = v6;
  v4[12] = v5;
  uint64_t v7 = (uint64_t)(v4 + 11);
  *(_OWORD *)(v7 + 16) = 0u;
  *(_OWORD *)(v7 + 32) = 0u;
  *(_OWORD *)(v7 + 48) = 0u;
  *(unsigned char *)(v7 + 64) = 9;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v7 + 624) = v8;
  *uint64_t v8 = v10;
  v8[1] = sub_1003DFF04;
  return sub_100560FFC(v7);
}

uint64_t sub_1003DFF04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[70] = v2;
  v3[71] = a1;
  v3[72] = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1003E0028, 0, 0);
}

uint64_t sub_1003E0028()
{
  uint64_t v1 = *(void *)(v0 + 568);
  uint64_t v2 = *(void *)(v0 + 576);
  uint64_t v3 = *(void *)(v0 + 544);
  uint64_t v4 = *(void *)(v0 + 552);
  *(void *)(v0 + 720) = *(void *)(v0 + 696);
  *(void *)(v0 + 728) = v4;
  *(void *)(v0 + 736) = v3;
  *(void *)(v0 + 744) = v2;
  *(void *)(v0 + 752) = v1;
  *(_OWORD *)(v0 + 304) = 0u;
  *(_OWORD *)(v0 + 320) = 0u;
  *(_OWORD *)(v0 + 336) = 0u;
  *(_OWORD *)(v0 + 352) = 0u;
  *(unsigned char *)(v0 + 368) = 26;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 760) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1003E00F8;
  return sub_100560FFC(v0 + 304);
}

uint64_t sub_1003E00F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v6 = *v2;
  *(void *)(v3 + 768) = a1;
  *(void *)(v3 + 776) = a2;
  swift_task_dealloc();
  *(void *)(v3 + 376) = 2;
  *(_OWORD *)(v3 + 384) = 0u;
  *(_OWORD *)(v3 + 400) = 0u;
  *(_OWORD *)(v3 + 416) = 0u;
  *(void *)(v3 + 432) = 0;
  *(unsigned char *)(v3 + 440) = 26;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 784) = v4;
  *uint64_t v4 = v6;
  v4[1] = sub_1003E0270;
  return sub_100560FFC(v3 + 376);
}

uint64_t sub_1003E0270(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 792) = a1;
  *(void *)(v3 + 800) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_1003E0374, 0, 0);
}

uint64_t sub_1003E0374()
{
  uint64_t v1 = v0[100];
  uint64_t v2 = v0[99];
  uint64_t v3 = v0[97];
  uint64_t v4 = v0[96];
  uint64_t v5 = v0[94];
  uint64_t v6 = v0[93];
  uint64_t v7 = v0[92];
  uint64_t v8 = v0[91];
  (*(void (**)(void, void))(v0[79] + 8))(v0[81], v0[78]);
  type metadata accessor for SystemAlert();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  *(void *)(v9 + 24) = v8;
  *(void *)(v9 + 32) = v5;
  *(void *)(v9 + 40) = v6;
  *(void *)(v9 + 48) = v4;
  *(void *)(v9 + 56) = v3;
  *(void *)(v9 + 64) = v2;
  *(void *)(v9 + 72) = v1;
  *(_WORD *)(v9 + 80) = 0;
  sub_100014524((uint64_t)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v10 = (uint64_t (*)(uint64_t))v0[1];
  return v10(v9);
}

uint64_t sub_1003E0498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000173A0(a1, a2, a3);
}

uint64_t sub_1003E04C0(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

void main()()
{
  uint64_t v0 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)(v4 + 24) = 0;
  sub_1000173A0((uint64_t)v2, (uint64_t)&unk_100662500, v4);
  swift_release();
  dispatch_main();
}

uint64_t sub_1003E0620()
{
  sub_1000172F8((uint64_t *)&unk_100661AB0);
  v0[2] = swift_task_alloc();
  uint64_t v1 = type metadata accessor for Logger();
  v0[3] = v1;
  v0[4] = *(void *)(v1 - 8);
  v0[5] = swift_task_alloc();
  return _swift_task_switch(sub_1003E070C, 0, 0);
}

uint64_t sub_1003E070C()
{
  _set_user_dir_suffix();
  if (!isManagedAppDistributionEnabled()())
  {
    static Logger.daemon.getter();
    uint64_t v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "Feature flag should have prevented daemon launch!", v3, 2u);
      swift_slowDealloc();
    }
    uint64_t v5 = v0[4];
    uint64_t v4 = v0[5];
    uint64_t v6 = v0[3];

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  uint64_t v7 = (void *)swift_task_alloc();
  v0[6] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1003E084C;
  return sub_1003E0CFC();
}

uint64_t sub_1003E084C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1003E0948, 0, 0);
}

uint64_t sub_1003E0948()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  static Logger.daemon.getter();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  v0[7] = sub_100515F00("Starting managedappdistributiond", 32, 2, 0, 1, 1, v3, (void *)&_mh_execute_header);
  v0[8] = v4;
  sub_10001729C(v3, (uint64_t *)&unk_100661AB0);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[9] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1003E0A98;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000010, 0x80000001005BF020, sub_1003E8138, 0, (char *)&type metadata for () + 8);
}

uint64_t sub_1003E0A98()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1003E0B94, 0, 0);
}

uint64_t sub_1003E0B94()
{
  uint64_t v1 = *(void **)(v0 + 64);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1003E0C18()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003E0C50()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1000176B4;
  return sub_1003E0620();
}

uint64_t sub_1003E0CFC()
{
  uint64_t v1 = type metadata accessor for Logger();
  v0[2] = v1;
  v0[3] = *(void *)(v1 - 8);
  v0[4] = swift_task_alloc();
  return _swift_task_switch(sub_1003E0DB8, 0, 0);
}

uint64_t sub_1003E0DB8()
{
  if (MKBGetDeviceLockState() == 3)
  {
    static Logger.daemon.getter();
    uint64_t v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "Key bag disabled, proceeding as if the device was unlocked since boot", v3, 2u);
      swift_slowDealloc();
    }
    uint64_t v5 = v0[3];
    uint64_t v4 = v0[4];
    uint64_t v6 = v0[2];

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    goto LABEL_6;
  }
  if (MKBDeviceUnlockedSinceBoot() == 1)
  {
LABEL_6:
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
  uint64_t v9 = (void *)swift_task_alloc();
  v0[5] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1003E0F88;
  return withCheckedContinuation<A>(isolation:function:_:)(v9, 0, 0, 0xD00000000000001ALL, 0x80000001005BF180, sub_1003E8680, 0, (char *)&type metadata for () + 8);
}

uint64_t sub_1003E0F88()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1003E1084, 0, 0);
}

uint64_t sub_1003E1084()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003E10E4@<X0>(void *a1@<X8>)
{
  uint64_t v73 = a1;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v71 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v70 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000172F8(&qword_10065B220);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Container();
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v66 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  int v16 = (char *)&v66 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v66 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v75 = (uint64_t)&v66 - v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v66 - v22;
  sub_1003C691C(&off_100639380, (uint64_t)v19);
  if (v1)
  {
    *(void *)&v87[0] = 0;
    *((void *)&v87[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(41);
    v65._uint64_t countAndFlagsBits = 0xD000000000000027;
    v65._object = (void *)0x80000001005BF070;
    String.append(_:)(v65);
    swift_getErrorValue();
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    goto LABEL_7;
  }
  sub_1003E92B4((uint64_t)v19, (uint64_t)v23);
  sub_1003C75D8();
  uint64_t v74 = v23;
  uint64_t v69 = 0;
  uint64_t v72 = v2;
  uint64_t v24 = v75;
  sub_1003E92B4((uint64_t)v16, v75);
  sub_1004323C4((uint64_t)v84);
  sub_10001733C((uint64_t)v84, (uint64_t)v85, &qword_10065C558);
  if (!*((void *)&v85[0] + 1))
  {
LABEL_7:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v87[4] = v85[4];
  v88[0] = v86[0];
  *(_OWORD *)((char *)v88 + 15) = *(_OWORD *)((char *)v86 + 15);
  v87[0] = v85[0];
  v87[1] = v85[1];
  v87[2] = v85[2];
  v87[3] = v85[3];
  type metadata accessor for XPCClient();
  static XPCClient.daemonLaunchNotificationName.getter();
  uint64_t v25 = String.utf8CString.getter();
  swift_bridgeObjectRelease();
  notify_post((const char *)(v25 + 32));
  swift_release();
  unint64_t v26 = self;
  NSString v27 = String._bridgeToObjectiveC()();
  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = [v26 bagForProfile:v27 profileVersion:v28];

  sub_1000172F8(&qword_100662528);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v29;
  *(void *)(v30 + 24) = &off_10063CFB8;
  sub_100334908((uint64_t)v74, (uint64_t)v13);
  sub_100334908(v24, (uint64_t)v10);
  type metadata accessor for Dependencies();
  swift_allocObject();
  uint64_t v31 = swift_retain();
  uint64_t v32 = sub_10056AF90(v31, (uint64_t)v13, (uint64_t)v10, v87);
  static TaskPriority.high.getter();
  uint64_t v33 = type metadata accessor for TaskPriority();
  id v34 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
  v34(v6, 0, 1, v33);
  uint64_t v35 = (void *)swift_allocObject();
  void v35[2] = 0;
  v35[3] = 0;
  v35[4] = v32;
  swift_retain();
  sub_100532E84((uint64_t)v6, (uint64_t)&unk_100662538, (uint64_t)v35);
  swift_release();
  sub_10001729C((uint64_t)v6, &qword_10065B220);
  TaskPriority.init(rawValue:)();
  v34(v6, 0, 1, v33);
  uint64_t v36 = (void *)swift_allocObject();
  v36[2] = 0;
  v36[3] = 0;
  v36[4] = v32;
  swift_retain();
  sub_100532E84((uint64_t)v6, (uint64_t)&unk_100662548, (uint64_t)v36);
  swift_release();
  sub_10001729C((uint64_t)v6, &qword_10065B220);
  static TaskPriority.background.getter();
  v34(v6, 0, 1, v33);
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = 0;
  *(void *)(v37 + 24) = 0;
  sub_100532E84((uint64_t)v6, (uint64_t)&unk_100662558, v37);
  swift_release();
  sub_10001729C((uint64_t)v6, &qword_10065B220);
  id v38 = (objc_class *)type metadata accessor for Service();
  uint64_t v39 = (char *)objc_allocWithZone(v38);
  uint64_t v40 = OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_daemonInstanceIdentifier;
  uint64_t v76 = 0;
  swift_retain();
  swift_retain();
  uint64_t v41 = v39;
  swift_stdlib_random();
  uint64_t v42 = v76;
  *(void *)&v39[v40] = (unint64_t)v42 | getpid();
  *(void *)&v41[OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_bag] = v30;
  *(void *)&v41[OBJC_IVAR____TtC28ManagedAppDistributionDaemon7Service_dependencies] = v32;
  swift_retain();
  swift_retain();

  v83.receiver = v41;
  v83.super_class = v38;
  id v43 = objc_msgSendSuper2(&v83, "init");
  swift_release();
  swift_release();
  id v44 = (objc_class *)type metadata accessor for ServiceListenerDelegate();
  id v45 = (char *)objc_allocWithZone(v44);
  *(void *)&v45[OBJC_IVAR____TtC28ManagedAppDistributionDaemon23ServiceListenerDelegate_service] = v43;
  v82.receiver = v45;
  v82.super_class = v44;
  id v67 = v43;
  id v46 = objc_msgSendSuper2(&v82, "init");
  ServiceMachName.getter();
  id v47 = objc_allocWithZone((Class)NSXPCListener);
  NSString v48 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v49 = [v47 initWithMachServiceName:v48];

  id v68 = v46;
  [v49 setDelegate:v46];
  id v66 = v49;
  [v49 activate];
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = v30;
  *(void *)(v50 + 24) = v32;
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = &unk_100662568;
  *(void *)(v51 + 24) = v50;
  uint64_t v80 = sub_1003E95FC;
  uint64_t v81 = v51;
  uint64_t v76 = _NSConcreteStackBlock;
  uint64_t v77 = 1107296256;
  uint64_t v78 = sub_1003E04C0;
  uint64_t v79 = &unk_100645820;
  uint64_t v52 = _Block_copy(&v76);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain_n();
  swift_retain();
  swift_release();
  uint64_t v53 = String.utf8CString.getter();
  xpc_activity_register((const char *)(v53 + 32), XPC_ACTIVITY_CHECK_IN, v52);
  swift_release();
  _Block_release(v52);
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease_n();
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = v32;
  *(void *)(v54 + 24) = v30;
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = &unk_100662578;
  *(void *)(v55 + 24) = v54;
  uint64_t v80 = sub_1003E9A64;
  uint64_t v81 = v55;
  uint64_t v76 = _NSConcreteStackBlock;
  uint64_t v77 = 1107296256;
  uint64_t v78 = sub_1003E04C0;
  uint64_t v79 = &unk_100645898;
  uint64_t v56 = _Block_copy(&v76);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain_n();
  swift_retain();
  swift_release();
  uint64_t v57 = String.utf8CString.getter();
  xpc_activity_register((const char *)(v57 + 32), XPC_ACTIVITY_CHECK_IN, v56);
  swift_release();
  _Block_release(v56);
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease_n();
  uint64_t v58 = v70;
  static Logger.daemon.getter();
  uint64_t v59 = Logger.logObject.getter();
  os_log_type_t v60 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v59, v60))
  {
    uint64_t v61 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v61 = 0;
    _os_log_impl((void *)&_mh_execute_header, v59, v60, "Launch completed", v61, 2u);
    swift_slowDealloc();
  }

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v58, v72);
  sub_1001A1588(v75);
  uint64_t result = sub_1001A1588((uint64_t)v74);
  uint64_t v63 = v73;
  id v64 = v68;
  *uint64_t v73 = v66;
  v63[1] = v64;
  return result;
}

uint64_t sub_1003E1BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, char))((char *)&dword_1006666E8 + dword_1006666E8);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1000176B4;
  return v8(a4, 0);
}

uint64_t sub_1003E1C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_1003E1C98, 0, 0);
}

uint64_t sub_1003E1C98()
{
  uint64_t v1 = *(void *)(*(void *)(*(void *)(v0 + 16) + 192) + 32);
  *(void *)(v0 + 24) = v1;
  swift_retain();
  return _swift_task_switch(sub_1003E1D14, v1, 0);
}

uint64_t sub_1003E1D14()
{
  sub_10045ED78(*(void *)(v0 + 16));
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003E1D7C()
{
  return _swift_task_switch(sub_1003E1D98, 0, 0);
}

uint64_t sub_1003E1D98()
{
  sub_1003C5D1C();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003E1DF4(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  sub_1000172F8((uint64_t *)&unk_100661AB0);
  v2[4] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for LogKey.Prefix();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_1003E1EE4, 0, 0);
}

void sub_1003E1EE4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  long long v6 = *(_OWORD *)(v0 + 16);
  (*(void (**)(void, void, void))(*(void *)(v0 + 48) + 104))(*(void *)(v0 + 56), enum case for LogKey.Prefix.update(_:), *(void *)(v0 + 40));
  id v2 = objc_allocWithZone((Class)type metadata accessor for LogKey());
  *(void *)(v0 + 64) = LogKey.init(prefix:)();
  uint64_t v3 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *(_OWORD *)(v4 + 16) = v6;
  uint64_t v7 = (char *)&dword_10065C340 + dword_10065C340;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1003E207C;
  __asm { BR              X0; sub_100008B8C }
}

uint64_t sub_1003E207C()
{
  id v2 = *(void **)(*(void *)v1 + 64);
  uint64_t v3 = *(void *)(*(void *)v1 + 32);
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  sub_10001729C(v3, (uint64_t *)&unk_100661AB0);

  swift_task_dealloc();
  if (v0) {
    uint64_t v4 = sub_1003E2260;
  }
  else {
    uint64_t v4 = sub_1003E21F0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1003E21F0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003E2260()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003E22D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  sub_1000172F8(&qword_10065B220);
  v3[9] = swift_task_alloc();
  sub_1000172F8((uint64_t *)&unk_100661AB0);
  v3[10] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v3[11] = v4;
  v3[12] = *(void *)(v4 - 8);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  return _swift_task_switch(sub_1003E2438, 0, 0);
}

uint64_t sub_1003E2438()
{
  static Logger.daemon.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Waking for scheduled automatic update activity", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[11];
  uint64_t v6 = v0[12];

  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v0[16] = v7;
  v0[17] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v4, v5);
  swift_retain();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[18] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1003E25BC;
  uint64_t v9 = v0[7];
  return sub_100238024(v9);
}

uint64_t sub_1003E25BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)*v4;
  v6[19] = a1;
  v6[20] = a2;
  v6[21] = a3;
  swift_task_dealloc();
  if (v3)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v6[1];
    return v7();
  }
  else
  {
    uint64_t v9 = dword_1006638A8;
    uint64_t v10 = (void *)swift_task_alloc();
    v6[22] = v10;
    void *v10 = v6;
    v10[1] = sub_1003E27C8;
    uint64_t v11 = v6[8];
    return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006638A8 + v9))(v11, a1);
  }
}

uint64_t sub_1003E27C8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1003E28F0, 0, 0);
}

void sub_1003E28F0()
{
  *(unsigned char *)(v0 + 49) = 0;
  uint64_t v1 = (__CFString *)String._bridgeToObjectiveC()();
  os_log_type_t v2 = (__CFString *)String._bridgeToObjectiveC()();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v1, v2, (Boolean *)(v0 + 49));
  *(unsigned char *)(v0 + 50) = AppBooleanValue;

  int v4 = *(unsigned __int8 *)(v0 + 49);
  *(unsigned char *)(v0 + 51) = v4;
  if (v4) {
    BOOL v5 = AppBooleanValue == 0;
  }
  else {
    BOOL v5 = 0;
  }
  int v6 = !v5;
  static Logger.daemon.getter();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 67240192;
    *(_DWORD *)(v0 + 52) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Starting update discovery, automatic updates enabled: %{BOOL,public}d", v9, 8u);
    swift_slowDealloc();
  }
  uint64_t v20 = *(void *)(v0 + 168);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 128);
  uint64_t v11 = *(void *)(v0 + 112);
  uint64_t v12 = *(void *)(v0 + 88);
  uint64_t v13 = *(void *)(v0 + 96);
  uint64_t v14 = *(void *)(v0 + 80);
  uint64_t v15 = *(void *)(v0 + 64);
  long long v19 = *(_OWORD *)(v0 + 152);

  v10(v11, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v14, 1, 1, v12);
  uint64_t v16 = swift_task_alloc();
  *(void *)(v0 + 184) = v16;
  *(_OWORD *)(v16 + 16) = v19;
  *(void *)(v16 + 32) = v20;
  *(void *)(v16 + 40) = v15;
  *(unsigned char *)(v16 + 48) = v6;
  uint64_t v17 = dword_10065C340;
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_1003E2BAC;
  __asm { BR              X8; sub_100008B8C }
}

uint64_t sub_1003E2BAC()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  sub_10001729C(v2, (uint64_t *)&unk_100661AB0);
  swift_task_dealloc();
  if (v0) {
    uint64_t v3 = sub_1003E3260;
  }
  else {
    uint64_t v3 = sub_1003E2D34;
  }
  return _swift_task_switch(v3, 0, 0);
}

void sub_1003E2D34()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);

  static TaskPriority.background.getter();
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  int v4 = (void *)swift_allocObject();
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = v1;
  swift_retain();
  sub_100532E84(v2, (uint64_t)&unk_100662598, (uint64_t)v4);
  swift_release();
  sub_10001729C(v2, &qword_10065B220);
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(unsigned char *)(v0 + 48) = 1;
  uint64_t v5 = dword_100660370;
  int v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v6;
  *int v6 = v0;
  v6[1] = sub_1003E2F10;
  __asm { BR              X9; sub_1002F4FE8 }
}

uint64_t sub_1003E2F10()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1003E3038, 0, 0);
}

uint64_t sub_1003E3038()
{
  if (*(unsigned char *)(v0 + 51)) {
    BOOL v1 = *(unsigned char *)(v0 + 50) == 0;
  }
  else {
    BOOL v1 = 0;
  }
  if (v1)
  {
    static Logger.daemon.getter();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Not performing automatic updates, setting is disabled", v11, 2u);
      swift_slowDealloc();
    }
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v0 + 128);
    uint64_t v13 = *(void *)(v0 + 104);
    uint64_t v14 = *(void *)(v0 + 88);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    v12(v13, v14);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
  else
  {
    uint64_t v2 = sub_1005163F0();
    *(void *)(v0 + 216) = v2;
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1003E3338;
    uint64_t v4 = *(void *)(v0 + 160);
    uint64_t v5 = *(void *)(v0 + 168);
    uint64_t v6 = *(void *)(v0 + 152);
    uint64_t v7 = *(void *)(v0 + 64);
    return sub_1003CF6F8(v2, v7, v6, v4, v5);
  }
}

uint64_t sub_1003E3260()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003E3338()
{
  BOOL v1 = *(void **)(*(void *)v0 + 216);
  swift_task_dealloc();

  return _swift_task_switch(sub_1003E3478, 0, 0);
}

uint64_t sub_1003E3478()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003E3550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  uint64_t v5 = type metadata accessor for Logger();
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  v4[6] = swift_task_alloc();
  return _swift_task_switch(sub_1003E3610, 0, 0);
}

uint64_t sub_1003E3610()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v1 + 192);
  uint64_t v3 = v2 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon19InstallDependencies_licenseStorage;
  uint64_t v4 = *(void *)(v2 + 160);
  v0[7] = v4;
  uint64_t v5 = *(void *)(v1 + 216);
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1003E36E0;
  return sub_100486578(v3, v4, v5);
}

uint64_t sub_1003E36E0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    return _swift_task_switch(sub_1003E3844, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1003E3844()
{
  static Logger.daemon.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to renew expiring licenses: %{public}@", v3, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1003E3A24(uint64_t a1, uint64_t a2)
{
  v2[85] = a2;
  v2[84] = a1;
  sub_1000172F8(&qword_10065BD08);
  v2[86] = swift_task_alloc();
  v2[87] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for ManagedAppStatus.State();
  v2[88] = v3;
  v2[89] = *(void *)(v3 - 8);
  v2[90] = swift_task_alloc();
  v2[91] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v2[92] = v4;
  v2[93] = *(void *)(v4 - 8);
  v2[94] = swift_task_alloc();
  v2[95] = swift_task_alloc();
  return _swift_task_switch(sub_1003E3BA4, 0, 0);
}

uint64_t sub_1003E3BA4()
{
  static Logger.daemon.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Waking for scheduled DDM repair activity", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[95];
  uint64_t v5 = v0[93];
  uint64_t v6 = v0[92];
  uint64_t v7 = v0[84];

  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v0[96] = v8;
  v0[97] = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v8(v4, v6);
  v0[98] = *(void *)(*(void *)(v7 + 192) + 152);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100660828 + dword_100660828);
  swift_retain();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[99] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1003E3D3C;
  return v11((uint64_t)sub_1001BD46C, 0);
}

uint64_t sub_1003E3D3C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[100] = a1;
  v3[101] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1003E4008;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = v3[98];
    uint64_t v4 = sub_1003E3E5C;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_1003E3E5C()
{
  swift_release();
  return _swift_task_switch(sub_1003E3EC4, 0, 0);
}

uint64_t sub_1003E3EC4()
{
  uint64_t v1 = *(void *)(v0[100] + 16);
  v0[102] = v1;
  if (v1)
  {
    swift_retain();
    os_log_type_t v2 = (void *)swift_task_alloc();
    v0[103] = v2;
    *os_log_type_t v2 = v0;
    v2[1] = sub_1003E40C0;
    uint64_t v3 = v0[85];
    return sub_100238024(v3);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_1003E4008()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003E40C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[104] = a1;
  v5[105] = a2;
  v5[106] = a3;
  v5[107] = v3;
  swift_task_dealloc();
  if (v3) {
    uint64_t v6 = sub_1003E4C7C;
  }
  else {
    uint64_t v6 = sub_1003E41E0;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_1003E41E0()
{
  uint64_t v1 = 0;
  os_log_type_t v2 = (void *)(v0 + 16);
  uint64_t v3 = v0 + 48;
  uint64_t v66 = v0 + 80;
  uint64_t v4 = v0 + 112;
  uint64_t v61 = v0 + 208;
  uint64_t v62 = (void *)(v0 + 144);
  uint64_t v63 = (void *)(v0 + 240);
  uint64_t v60 = v0 + 176;
  *(_DWORD *)(v0 + 1016) = enum case for ManagedAppStatus.State.failed(_:);
  uint64_t v64 = *(void *)(v0 + 856);
  while (1)
  {
    *(void *)(v0 + 864) = v1;
    uint64_t v5 = *(void *)(*(void *)(v0 + 800) + 16 * v1 + 40);
    *(void *)(v0 + 872) = v5;
    swift_retain_n();
    os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
    uint64_t v6 = *(void *)(v5 + 16);
    if (*(void *)(v6 + 16) && (unint64_t v7 = sub_100016D20(0x6574617473, 0xE500000000000000), (v8 & 1) != 0))
    {
      sub_100017238(*(void *)(v6 + 56) + 32 * v7, (uint64_t)v2, (uint64_t *)&unk_10065C9C0);
    }
    else
    {
      *os_log_type_t v2 = 0;
      v2[1] = 0;
      v2[2] = 0;
      *(void *)(v0 + 40) = 1;
    }
    os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
    sub_100017238((uint64_t)v2, v3, &qword_10065BC40);
    Swift::String v65 = (os_unfair_lock_s *)(v5 + 24);
    if (*(void *)(v0 + 72) == 1)
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 712) + 56))(*(void *)(v0 + 696), 1, 1, *(void *)(v0 + 704));
    }
    else
    {
      sub_10001733C(v3, v66, (uint64_t *)&unk_10065C9C0);
      *(void *)(v0 + 136) = sub_1000172F8((uint64_t *)&unk_10065C9C0);
      uint64_t v9 = swift_allocObject();
      *(void *)(v0 + 112) = v9;
      sub_100017238(v66, v9 + 16, (uint64_t *)&unk_10065C9C0);
      type metadata accessor for JSONDecoder();
      swift_allocObject();
      JSONDecoder.init()();
      sub_1000144C8(v0 + 112, v0 + 272);
      if (swift_dynamicCast())
      {
        uint64_t v10 = *(void *)(v0 + 528);
        unint64_t v11 = *(void *)(v0 + 536);
        sub_1003E9720(&qword_10065CF50, (void (*)(uint64_t))&type metadata accessor for ManagedAppStatus.State);
        dispatch thunk of JSONDecoder.decode<A>(_:from:)();
        sub_100013510(v10, v11);
        if (v64) {
          goto LABEL_42;
        }
        swift_release();
        uint64_t v64 = 0;
        os_log_type_t v2 = (void *)(v0 + 16);
      }
      else
      {
        sub_1000144C8(v0 + 112, v0 + 432);
        char v12 = swift_dynamicCast();
        uint64_t v13 = *(void *)(v0 + 688);
        uint64_t v14 = *(void *)(v0 + 712);
        uint64_t v15 = *(void *)(v0 + 704);
        if ((v12 & 1) == 0)
        {
          (*(void (**)(void, uint64_t, uint64_t, void))(v14 + 56))(*(void *)(v0 + 688), 1, 1, *(void *)(v0 + 704));
          sub_10001729C(v13, &qword_10065BD08);
          *(void *)(v0 + 656) = v15;
          sub_1000172F8(&qword_10065D058);
          uint64_t v49 = String.init<A>(describing:)();
          uint64_t v51 = v55;
          sub_10018AC60((void *)(v0 + 112), *(void *)(v0 + 136));
          *(void *)(v0 + 664) = swift_getDynamicType();
          sub_1000172F8(&qword_10065BC70);
          goto LABEL_41;
        }
        uint64_t v16 = *(void *)(v0 + 696);
        (*(void (**)(void, void, uint64_t, void))(v14 + 56))(*(void *)(v0 + 688), 0, 1, *(void *)(v0 + 704));
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v16, v13, v15);
        swift_release();
      }
      uint64_t v17 = *(void *)(v0 + 712);
      uint64_t v18 = *(void *)(v0 + 704);
      uint64_t v19 = *(void *)(v0 + 696);
      sub_100014524(v0 + 112);
      sub_10001729C(v66, (uint64_t *)&unk_10065C9C0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v18);
    }
    uint64_t v20 = *(void *)(v0 + 712);
    uint64_t v21 = *(void *)(v0 + 704);
    uint64_t v22 = *(void *)(v0 + 696);
    sub_10001729C((uint64_t)v2, &qword_10065BC40);
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v22, 1, v21) == 1)
    {
      __break(1u);
LABEL_46:
      sub_10001729C((uint64_t)v62, &qword_10065BC40);
      uint64_t v52 = swift_release();
      __break(1u);
      return _swift_task_switch(v52, v53, v54);
    }
    uint64_t v23 = *(unsigned int *)(v0 + 1016);
    uint64_t v24 = *(void *)(v0 + 720);
    uint64_t v25 = *(void *)(v0 + 712);
    uint64_t v26 = *(void *)(v0 + 704);
    (*(void (**)(void, void, uint64_t))(v25 + 32))(*(void *)(v0 + 728), *(void *)(v0 + 696), v26);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 104))(v24, v23, v26);
    sub_1003E9720(&qword_10065CF30, (void (*)(uint64_t))&type metadata accessor for ManagedAppStatus.State);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v27 = *(void *)(v0 + 728);
    uint64_t v28 = *(void *)(v0 + 720);
    uint64_t v29 = *(void *)(v0 + 712);
    uint64_t v30 = *(void *)(v0 + 704);
    if (*(void *)(v0 + 608) == *(void *)(v0 + 592) && *(void *)(v0 + 616) == *(void *)(v0 + 600)) {
      break;
    }
    char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v32(v28, v30);
    v32(v27, v30);
    if (v31) {
      goto LABEL_23;
    }
    swift_release();
    uint64_t v1 = *(void *)(v0 + 864) + 1;
    os_log_type_t v2 = (void *)(v0 + 16);
    uint64_t v3 = v0 + 48;
    if (v1 == *(void *)(v0 + 816))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
      return v33();
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v35(v28, v30);
  v35(v27, v30);
LABEL_23:
  uint64_t v36 = *(void *)(*(void *)(v0 + 672) + 240);
  *(void *)(v0 + 880) = v36;
  uint64_t v37 = *(void *)(v36 + 16);
  *(void *)(v0 + 888) = v37;
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v65);
  uint64_t v38 = *(void *)(v5 + 16);
  if (*(void *)(v38 + 16) && (unint64_t v39 = sub_100016D20(0x746172616C636564, 0xEE0064695F6E6F69), (v40 & 1) != 0))
  {
    uint64_t v41 = *(void *)(v38 + 56) + 32 * v39;
    uint64_t v42 = v0 + 144;
    sub_100017238(v41, (uint64_t)v62, (uint64_t *)&unk_10065C9C0);
  }
  else
  {
    uint64_t v42 = v0 + 144;
    *uint64_t v62 = 0;
    *(void *)(v0 + 152) = 0;
    *(void *)(v0 + 160) = 0;
    *(void *)(v0 + 168) = 1;
  }
  os_unfair_lock_unlock(v65);
  sub_100017238(v42, v60, &qword_10065BC40);
  if (*(void *)(v0 + 200) == 1) {
    goto LABEL_46;
  }
  sub_10001733C(v60, v61, (uint64_t *)&unk_10065C9C0);
  uint64_t v43 = sub_1000172F8((uint64_t *)&unk_10065C9C0);
  *(void *)(v0 + 896) = v43;
  *(void *)(v0 + 264) = v43;
  uint64_t v44 = swift_allocObject();
  *(void *)(v0 + 240) = v44;
  sub_100017238(v61, v44 + 16, (uint64_t *)&unk_10065C9C0);
  *(void *)(v0 + 904) = type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_1000144C8((uint64_t)v63, v0 + 304);
  if (!swift_dynamicCast())
  {
    sub_1000144C8((uint64_t)v63, v0 + 368);
    if (swift_dynamicCast())
    {
      uint64_t v47 = *(void *)(v0 + 552);
      if (v47)
      {
        uint64_t v48 = *(void *)(v0 + 544);
        swift_release();
        goto LABEL_36;
      }
    }
    *(void *)(v0 + 648) = &type metadata for String;
    sub_1000172F8(&qword_10065BC68);
    uint64_t v49 = String.init<A>(describing:)();
    uint64_t v51 = v50;
    uint64_t v4 = v0 + 240;
    sub_10018AC60(v63, *(void *)(v0 + 264));
    *(void *)(v0 + 640) = swift_getDynamicType();
    sub_1000172F8(&qword_10065BC70);
LABEL_41:
    uint64_t v56 = String.init<A>(describing:)();
    uint64_t v58 = v57;
    sub_1001C3A08();
    swift_allocError();
    *(void *)uint64_t v59 = v49;
    *(void *)(v59 + 8) = v51;
    *(void *)(v59 + 16) = v56;
    *(void *)(v59 + 24) = v58;
    *(unsigned char *)(v59 + 32) = 0;
    swift_willThrow();
    goto LABEL_42;
  }
  uint64_t v45 = *(void *)(v0 + 560);
  unint64_t v46 = *(void *)(v0 + 568);
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  if (!v64)
  {
    sub_100013510(v45, v46);
    swift_release();
    uint64_t v48 = *(void *)(v0 + 576);
    uint64_t v47 = *(void *)(v0 + 584);
LABEL_36:
    *(void *)(v0 + 920) = v48;
    *(void *)(v0 + 912) = v47;
    sub_100014524((uint64_t)v63);
    sub_10001729C(v61, (uint64_t *)&unk_10065C9C0);
    sub_10001729C((uint64_t)v62, &qword_10065BC40);
    swift_release();
    uint64_t v52 = (uint64_t)sub_1003E4D34;
    uint64_t v53 = v37;
    uint64_t v54 = 0;
    return _swift_task_switch(v52, v53, v54);
  }
  sub_100013510(v45, v46);
  uint64_t v4 = v0 + 240;
LABEL_42:
  swift_release();
  sub_100014524(v4);
  return swift_unexpectedError();
}

uint64_t sub_1003E4C7C()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003E4D34()
{
  uint64_t v1 = v0[115];
  uint64_t v2 = v0[114];
  uint64_t v3 = *(void *)(v0[111] + 112);
  v0[116] = v3;
  uint64_t v4 = swift_task_alloc();
  v0[117] = v4;
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = swift_task_alloc();
  v0[118] = v5;
  *(void *)(v5 + 16) = sub_10023CA38;
  *(void *)(v5 + 24) = v4;
  char v8 = (char *)&dword_100660660 + dword_100660660;
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[119] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1003E4E54;
  return ((uint64_t (*)(uint64_t (*)@<X0>(void *@<X0>, uint64_t *@<X8>), uint64_t, uint64_t))v8)(sub_1001C3EFC, v5, v3);
}

uint64_t sub_1003E4E54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[120] = a1;
  v5[121] = a2;
  v5[122] = v2;
  swift_task_dealloc();
  uint64_t v6 = v4[111];
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  if (v2) {
    unint64_t v7 = sub_1003E5FAC;
  }
  else {
    unint64_t v7 = sub_1003E4FEC;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1003E4FEC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_task_switch(sub_1003E5060, 0, 0);
}

uint64_t sub_1003E5060()
{
  uint64_t v1 = *(void *)(v0 + 968);
  uint64_t v2 = (os_unfair_lock_s *)(v1 + 24);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  uint64_t v3 = *(void *)(v1 + 16);
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_100016D20(0x5F6C6C6174736E69, 0xEE00676E696D6974), (v5 & 1) != 0))
  {
    sub_100017238(*(void *)(v3 + 56) + 32 * v4, v0 + 496, (uint64_t *)&unk_10065C9C0);
  }
  else
  {
    *(void *)(v0 + 496) = 0;
    *(void *)(v0 + 504) = 0;
    *(void *)(v0 + 512) = 0;
    *(void *)(v0 + 520) = 1;
  }
  os_unfair_lock_unlock(v2);
  sub_100017238(v0 + 496, v0 + 464, &qword_10065BC40);
  if (*(void *)(v0 + 488) == 1)
  {
    sub_10001729C(v0 + 496, &qword_10065BC40);
    swift_release_n();
    swift_release();
    uint64_t v100 = *(void *)(v0 + 976);
LABEL_7:
    uint64_t v6 = *(void *)(v0 + 864) + 1;
    if (v6 == *(void *)(v0 + 816))
    {
LABEL_26:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
      return v38();
    }
    uint64_t v7 = v0 + 48;
    uint64_t v104 = v0 + 80;
    uint64_t v8 = v0 + 112;
    uint64_t v99 = (void *)(v0 + 240);
    uint64_t v97 = v0 + 208;
    uint64_t v9 = (void *)(v0 + 16);
    uint64_t v98 = (void *)(v0 + 144);
    while (1)
    {
      *(void *)(v0 + 864) = v6;
      uint64_t v10 = *(void *)(*(void *)(v0 + 800) + 16 * v6 + 40);
      *(void *)(v0 + 872) = v10;
      swift_retain_n();
      os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
      uint64_t v11 = *(void *)(v10 + 16);
      if (*(void *)(v11 + 16) && (unint64_t v12 = sub_100016D20(0x6574617473, 0xE500000000000000), (v13 & 1) != 0))
      {
        sub_100017238(*(void *)(v11 + 56) + 32 * v12, (uint64_t)v9, (uint64_t *)&unk_10065C9C0);
      }
      else
      {
        *uint64_t v9 = 0;
        v9[1] = 0;
        v9[2] = 0;
        *(void *)(v0 + 40) = 1;
      }
      uint64_t v101 = (os_unfair_lock_s *)(v10 + 24);
      os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 24));
      sub_100017238((uint64_t)v9, v7, &qword_10065BC40);
      if (*(void *)(v0 + 72) == 1)
      {
        (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 712) + 56))(*(void *)(v0 + 696), 1, 1, *(void *)(v0 + 704));
      }
      else
      {
        sub_10001733C(v7, v104, (uint64_t *)&unk_10065C9C0);
        *(void *)(v0 + 136) = sub_1000172F8((uint64_t *)&unk_10065C9C0);
        uint64_t v14 = swift_allocObject();
        *(void *)(v0 + 112) = v14;
        sub_100017238(v104, v14 + 16, (uint64_t *)&unk_10065C9C0);
        type metadata accessor for JSONDecoder();
        swift_allocObject();
        JSONDecoder.init()();
        sub_1000144C8(v8, v0 + 272);
        if (swift_dynamicCast())
        {
          uint64_t v15 = *(void *)(v0 + 528);
          unint64_t v16 = *(void *)(v0 + 536);
          sub_1003E9720(&qword_10065CF50, (void (*)(uint64_t))&type metadata accessor for ManagedAppStatus.State);
          dispatch thunk of JSONDecoder.decode<A>(_:from:)();
          sub_100013510(v15, v16);
          if (v100) {
            goto LABEL_60;
          }
          swift_release();
          uint64_t v100 = 0;
          uint64_t v9 = (void *)(v0 + 16);
        }
        else
        {
          sub_1000144C8(v8, v0 + 432);
          char v17 = swift_dynamicCast();
          uint64_t v18 = *(void *)(v0 + 688);
          uint64_t v19 = *(void *)(v0 + 712);
          uint64_t v20 = *(void *)(v0 + 704);
          if ((v17 & 1) == 0)
          {
            (*(void (**)(void, uint64_t, uint64_t, void))(v19 + 56))(*(void *)(v0 + 688), 1, 1, *(void *)(v0 + 704));
            sub_10001729C(v18, &qword_10065BD08);
            *(void *)(v0 + 656) = v20;
            sub_1000172F8(&qword_10065D058);
            uint64_t v90 = String.init<A>(describing:)();
            uint64_t v92 = v91;
            uint64_t v8 = v0 + 112;
            sub_10018AC60((void *)(v0 + 112), *(void *)(v0 + 136));
            *(void *)(v0 + 664) = swift_getDynamicType();
            sub_1000172F8(&qword_10065BC70);
            uint64_t v93 = String.init<A>(describing:)();
            uint64_t v95 = v94;
            sub_1001C3A08();
            swift_allocError();
            *(void *)uint64_t v96 = v90;
            *(void *)(v96 + 8) = v92;
            *(void *)(v96 + 16) = v93;
            *(void *)(v96 + 24) = v95;
            *(unsigned char *)(v96 + 32) = 0;
            swift_willThrow();
LABEL_60:
            swift_release();
            sub_100014524(v8);
            goto LABEL_61;
          }
          uint64_t v21 = *(void *)(v0 + 696);
          (*(void (**)(void, void, uint64_t, void))(v19 + 56))(*(void *)(v0 + 688), 0, 1, *(void *)(v0 + 704));
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v21, v18, v20);
          swift_release();
          uint64_t v8 = v0 + 112;
        }
        uint64_t v22 = *(void *)(v0 + 712);
        uint64_t v23 = *(void *)(v0 + 704);
        uint64_t v24 = *(void *)(v0 + 696);
        sub_100014524(v8);
        sub_10001729C(v104, (uint64_t *)&unk_10065C9C0);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(v24, 0, 1, v23);
      }
      uint64_t v25 = *(void *)(v0 + 712);
      uint64_t v26 = *(void *)(v0 + 704);
      uint64_t v27 = *(void *)(v0 + 696);
      sub_10001729C((uint64_t)v9, &qword_10065BC40);
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v27, 1, v26) == 1)
      {
        __break(1u);
        goto LABEL_65;
      }
      uint64_t v28 = *(unsigned int *)(v0 + 1016);
      uint64_t v29 = *(void *)(v0 + 720);
      uint64_t v30 = *(void *)(v0 + 712);
      uint64_t v31 = *(void *)(v0 + 704);
      (*(void (**)(void, void, uint64_t))(v30 + 32))(*(void *)(v0 + 728), *(void *)(v0 + 696), v31);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 104))(v29, v28, v31);
      sub_1003E9720(&qword_10065CF30, (void (*)(uint64_t))&type metadata accessor for ManagedAppStatus.State);
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      uint64_t v32 = *(void *)(v0 + 728);
      uint64_t v33 = *(void *)(v0 + 720);
      uint64_t v34 = *(void *)(v0 + 712);
      uint64_t v35 = *(void *)(v0 + 704);
      if (*(void *)(v0 + 608) == *(void *)(v0 + 592) && *(void *)(v0 + 616) == *(void *)(v0 + 600))
      {
        swift_bridgeObjectRelease_n();
        uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
        v54(v33, v35);
        v54(v32, v35);
LABEL_37:
        uint64_t v55 = *(void *)(*(void *)(v0 + 672) + 240);
        *(void *)(v0 + 880) = v55;
        uint64_t v56 = *(void *)(v55 + 16);
        *(void *)(v0 + 888) = v56;
        swift_retain();
        swift_retain();
        os_unfair_lock_lock(v101);
        uint64_t v57 = *(void *)(v10 + 16);
        if (*(void *)(v57 + 16) && (unint64_t v58 = sub_100016D20(0x746172616C636564, 0xEE0064695F6E6F69), (v59 & 1) != 0))
        {
          uint64_t v60 = *(void *)(v57 + 56) + 32 * v58;
          uint64_t v61 = v0 + 144;
          sub_100017238(v60, (uint64_t)v98, (uint64_t *)&unk_10065C9C0);
        }
        else
        {
          uint64_t v61 = v0 + 144;
          void *v98 = 0;
          *(void *)(v0 + 152) = 0;
          *(void *)(v0 + 160) = 0;
          *(void *)(v0 + 168) = 1;
        }
        os_unfair_lock_unlock(v101);
        sub_100017238(v61, v0 + 176, &qword_10065BC40);
        if (*(void *)(v0 + 200) != 1)
        {
          sub_10001733C(v0 + 176, v97, (uint64_t *)&unk_10065C9C0);
          uint64_t v62 = sub_1000172F8((uint64_t *)&unk_10065C9C0);
          *(void *)(v0 + 896) = v62;
          *(void *)(v0 + 264) = v62;
          uint64_t v63 = swift_allocObject();
          *(void *)(v0 + 240) = v63;
          sub_100017238(v97, v63 + 16, (uint64_t *)&unk_10065C9C0);
          *(void *)(v0 + 904) = type metadata accessor for JSONDecoder();
          swift_allocObject();
          JSONDecoder.init()();
          sub_1000144C8((uint64_t)v99, v0 + 304);
          if (swift_dynamicCast())
          {
            uint64_t v64 = *(void *)(v0 + 560);
            unint64_t v65 = *(void *)(v0 + 568);
            dispatch thunk of JSONDecoder.decode<A>(_:from:)();
            if (v100)
            {
              sub_100013510(v64, v65);
              uint64_t v66 = v0 + 240;
LABEL_49:
              swift_release();
              sub_100014524(v66);
              goto LABEL_61;
            }
            sub_100013510(v64, v65);
            swift_release();
            uint64_t v68 = *(void *)(v0 + 576);
            uint64_t v67 = *(void *)(v0 + 584);
          }
          else
          {
            sub_1000144C8((uint64_t)v99, v0 + 368);
            if (!swift_dynamicCast() || (uint64_t v67 = *(void *)(v0 + 552)) == 0)
            {
              *(void *)(v0 + 648) = &type metadata for String;
              sub_1000172F8(&qword_10065BC68);
              uint64_t v69 = String.init<A>(describing:)();
              uint64_t v71 = v70;
              uint64_t v66 = v0 + 240;
              sub_10018AC60(v99, *(void *)(v0 + 264));
              *(void *)(v0 + 640) = swift_getDynamicType();
              sub_1000172F8(&qword_10065BC70);
              uint64_t v72 = String.init<A>(describing:)();
              uint64_t v74 = v73;
              sub_1001C3A08();
              swift_allocError();
              *(void *)uint64_t v75 = v69;
              *(void *)(v75 + 8) = v71;
              *(void *)(v75 + 16) = v72;
              *(void *)(v75 + 24) = v74;
              *(unsigned char *)(v75 + 32) = 0;
              swift_willThrow();
              goto LABEL_49;
            }
            uint64_t v68 = *(void *)(v0 + 544);
            swift_release();
          }
          *(void *)(v0 + 920) = v68;
          *(void *)(v0 + 912) = v67;
          sub_100014524((uint64_t)v99);
          sub_10001729C(v97, (uint64_t *)&unk_10065C9C0);
          sub_10001729C((uint64_t)v98, &qword_10065BC40);
          swift_release();
          uint64_t v87 = sub_1003E4D34;
          uint64_t v88 = v56;
          uint64_t v89 = 0;
          return _swift_task_switch(v87, v88, v89);
        }
LABEL_65:
        sub_10001729C((uint64_t)v98, &qword_10065BC40);
        swift_release();
        __break(1u);
        goto LABEL_66;
      }
      char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
      v37(v33, v35);
      v37(v32, v35);
      if (v36) {
        goto LABEL_37;
      }
      swift_release();
      uint64_t v6 = *(void *)(v0 + 864) + 1;
      uint64_t v9 = (void *)(v0 + 16);
      uint64_t v8 = v0 + 112;
      uint64_t v7 = v0 + 48;
      if (v6 == *(void *)(v0 + 816)) {
        goto LABEL_26;
      }
    }
  }
  uint64_t v40 = *(void *)(v0 + 976);
  uint64_t v41 = *(void *)(v0 + 896);
  sub_10001733C(v0 + 464, v0 + 400, (uint64_t *)&unk_10065C9C0);
  *(void *)(v0 + 360) = v41;
  uint64_t v42 = swift_allocObject();
  *(void *)(v0 + 336) = v42;
  sub_100017238(v0 + 400, v42 + 16, (uint64_t *)&unk_10065C9C0);
  swift_allocObject();
  uint64_t v43 = JSONDecoder.init()();
  char v44 = sub_100242240(v0 + 336, v43);
  if (v40)
  {
    swift_release();
    sub_100014524(v0 + 336);
LABEL_61:
    return swift_unexpectedError();
  }
  char v45 = v44;
  swift_release();
  sub_100014524(v0 + 336);
  sub_10001729C(v0 + 400, (uint64_t *)&unk_10065C9C0);
  sub_10001729C(v0 + 496, &qword_10065BC40);
  swift_release();
  if (v45)
  {
    swift_release();
    swift_release();
    uint64_t v100 = 0;
    goto LABEL_7;
  }
  static Logger.daemon.getter();
  swift_retain_n();
  unint64_t v46 = Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.default.getter();
  BOOL v48 = os_log_type_enabled(v46, v47);
  uint64_t v49 = *(os_unfair_lock_s **)(v0 + 872);
  if (v48)
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    *(void *)(v0 + 632) = swift_slowAlloc();
    *(_DWORD *)uint64_t v50 = 136446210;
    swift_retain();
    uint64_t v51 = sub_100311E5C(0, v49);
    unint64_t v53 = v52;
    swift_release();
    if (!v53)
    {
LABEL_66:
      uint64_t v87 = (uint64_t (*)())swift_release();
      __break(1u);
      return _swift_task_switch(v87, v88, v89);
    }
    int v105 = *(void (**)(uint64_t, uint64_t))(v0 + 768);
    uint64_t v102 = *(void *)(v0 + 736);
    uint64_t v103 = *(void *)(v0 + 752);
    *(void *)(v0 + 624) = sub_1000143F4(v51, v53, (uint64_t *)(v0 + 632));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "Attempting re-installation of required app %{public}s", v50, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v105(v103, v102);
  }
  else
  {
    uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v0 + 768);
    uint64_t v77 = *(void *)(v0 + 752);
    uint64_t v78 = *(void *)(v0 + 736);
    swift_release_n();

    v76(v77, v78);
  }
  uint64_t v79 = *(void *)(v0 + 672);
  *(void *)(v0 + 984) = *(void *)(*(void *)(v0 + 880) + 32);
  uint64_t v80 = *(void *)(*(void *)(*(void *)(v79 + 232) + 16) + 152);
  *(void *)(v0 + 992) = v80;
  swift_retain();
  swift_retain();
  uint64_t v81 = (void *)swift_task_alloc();
  *(void *)(v0 + 1000) = v81;
  void *v81 = v0;
  v81[1] = sub_1003E6AA8;
  uint64_t v82 = *(void *)(v0 + 968);
  uint64_t v83 = *(void *)(v0 + 960);
  uint64_t v84 = *(void *)(v0 + 848);
  uint64_t v85 = *(void *)(v0 + 840);
  uint64_t v86 = *(void *)(v0 + 832);
  return sub_1001A47FC(v83, v82, v80, v86, v85, v84);
}

uint64_t sub_1003E5FAC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_errorRelease();
  return _swift_task_switch(sub_1003E602C, 0, 0);
}

uint64_t sub_1003E602C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 864) + 1;
  if (v1 == *(void *)(v0 + 816))
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
    return v32();
  }
  uint64_t v2 = (void *)(v0 + 16);
  uint64_t v3 = v0 + 48;
  uint64_t v63 = v0 + 80;
  uint64_t v4 = v0 + 112;
  uint64_t v61 = v0 + 208;
  uint64_t v62 = (void *)(v0 + 144);
  uint64_t v59 = v0 + 176;
  uint64_t v60 = (void *)(v0 + 240);
  while (1)
  {
    *(void *)(v0 + 864) = v1;
    uint64_t v5 = *(void *)(*(void *)(v0 + 800) + 16 * v1 + 40);
    *(void *)(v0 + 872) = v5;
    swift_retain_n();
    os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
    uint64_t v6 = *(void *)(v5 + 16);
    if (*(void *)(v6 + 16) && (unint64_t v7 = sub_100016D20(0x6574617473, 0xE500000000000000), (v8 & 1) != 0))
    {
      sub_100017238(*(void *)(v6 + 56) + 32 * v7, (uint64_t)v2, (uint64_t *)&unk_10065C9C0);
    }
    else
    {
      *uint64_t v2 = 0;
      v2[1] = 0;
      v2[2] = 0;
      *(void *)(v0 + 40) = 1;
    }
    os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
    sub_100017238((uint64_t)v2, v3, &qword_10065BC40);
    if (*(void *)(v0 + 72) == 1)
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 712) + 56))(*(void *)(v0 + 696), 1, 1, *(void *)(v0 + 704));
    }
    else
    {
      sub_10001733C(v3, v63, (uint64_t *)&unk_10065C9C0);
      *(void *)(v0 + 136) = sub_1000172F8((uint64_t *)&unk_10065C9C0);
      uint64_t v9 = swift_allocObject();
      *(void *)(v0 + 112) = v9;
      sub_100017238(v63, v9 + 16, (uint64_t *)&unk_10065C9C0);
      type metadata accessor for JSONDecoder();
      swift_allocObject();
      JSONDecoder.init()();
      sub_1000144C8(v0 + 112, v0 + 272);
      if (swift_dynamicCast())
      {
        uint64_t v10 = *(void *)(v0 + 528);
        unint64_t v11 = *(void *)(v0 + 536);
        sub_1003E9720(&qword_10065CF50, (void (*)(uint64_t))&type metadata accessor for ManagedAppStatus.State);
        dispatch thunk of JSONDecoder.decode<A>(_:from:)();
        sub_100013510(v10, v11);
        swift_release();
      }
      else
      {
        sub_1000144C8(v0 + 112, v0 + 432);
        char v12 = swift_dynamicCast();
        uint64_t v13 = *(void *)(v0 + 688);
        uint64_t v14 = *(void *)(v0 + 712);
        uint64_t v15 = *(void *)(v0 + 704);
        if ((v12 & 1) == 0)
        {
          (*(void (**)(void, uint64_t, uint64_t, void))(v14 + 56))(*(void *)(v0 + 688), 1, 1, *(void *)(v0 + 704));
          sub_10001729C(v13, &qword_10065BD08);
          *(void *)(v0 + 656) = v15;
          sub_1000172F8(&qword_10065D058);
          uint64_t v46 = String.init<A>(describing:)();
          uint64_t v48 = v54;
          sub_10018AC60((void *)(v0 + 112), *(void *)(v0 + 136));
          *(void *)(v0 + 664) = swift_getDynamicType();
          sub_1000172F8(&qword_10065BC70);
          goto LABEL_38;
        }
        uint64_t v16 = *(void *)(v0 + 696);
        (*(void (**)(void, void, uint64_t, void))(v14 + 56))(*(void *)(v0 + 688), 0, 1, *(void *)(v0 + 704));
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v16, v13, v15);
        swift_release();
        uint64_t v2 = (void *)(v0 + 16);
      }
      uint64_t v17 = *(void *)(v0 + 712);
      uint64_t v18 = *(void *)(v0 + 704);
      uint64_t v19 = *(void *)(v0 + 696);
      sub_100014524(v0 + 112);
      sub_10001729C(v63, (uint64_t *)&unk_10065C9C0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v18);
    }
    uint64_t v20 = *(void *)(v0 + 712);
    uint64_t v21 = *(void *)(v0 + 704);
    uint64_t v22 = *(void *)(v0 + 696);
    sub_10001729C((uint64_t)v2, &qword_10065BC40);
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v22, 1, v21) == 1)
    {
      __break(1u);
LABEL_42:
      sub_10001729C((uint64_t)v62, &qword_10065BC40);
      uint64_t v51 = (uint64_t (*)())swift_release();
      __break(1u);
      return _swift_task_switch(v51, v52, v53);
    }
    uint64_t v23 = *(unsigned int *)(v0 + 1016);
    uint64_t v24 = *(void *)(v0 + 720);
    uint64_t v25 = *(void *)(v0 + 712);
    uint64_t v26 = *(void *)(v0 + 704);
    (*(void (**)(void, void, uint64_t))(v25 + 32))(*(void *)(v0 + 728), *(void *)(v0 + 696), v26);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 104))(v24, v23, v26);
    sub_1003E9720(&qword_10065CF30, (void (*)(uint64_t))&type metadata accessor for ManagedAppStatus.State);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v27 = *(void *)(v0 + 728);
    uint64_t v28 = *(void *)(v0 + 720);
    uint64_t v29 = *(void *)(v0 + 712);
    uint64_t v30 = *(void *)(v0 + 704);
    if (*(void *)(v0 + 608) == *(void *)(v0 + 592) && *(void *)(v0 + 616) == *(void *)(v0 + 600)) {
      break;
    }
    char v64 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v31(v28, v30);
    v31(v27, v30);
    if (v64) {
      goto LABEL_23;
    }
    swift_release();
    uint64_t v1 = *(void *)(v0 + 864) + 1;
    uint64_t v2 = (void *)(v0 + 16);
    uint64_t v3 = v0 + 48;
    if (v1 == *(void *)(v0 + 816)) {
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v34(v28, v30);
  v34(v27, v30);
LABEL_23:
  uint64_t v35 = *(void *)(*(void *)(v0 + 672) + 240);
  *(void *)(v0 + 880) = v35;
  uint64_t v36 = *(void *)(v35 + 16);
  *(void *)(v0 + 888) = v36;
  swift_retain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  uint64_t v37 = *(void *)(v5 + 16);
  uint64_t v4 = v0 + 240;
  if (*(void *)(v37 + 16) && (unint64_t v38 = sub_100016D20(0x746172616C636564, 0xEE0064695F6E6F69), (v39 & 1) != 0))
  {
    uint64_t v40 = *(void *)(v37 + 56) + 32 * v38;
    uint64_t v41 = v0 + 144;
    sub_100017238(v40, (uint64_t)v62, (uint64_t *)&unk_10065C9C0);
  }
  else
  {
    uint64_t v41 = v0 + 144;
    *uint64_t v62 = 0;
    *(void *)(v0 + 152) = 0;
    *(void *)(v0 + 160) = 0;
    *(void *)(v0 + 168) = 1;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  sub_100017238(v41, v59, &qword_10065BC40);
  if (*(void *)(v0 + 200) == 1) {
    goto LABEL_42;
  }
  sub_10001733C(v59, v61, (uint64_t *)&unk_10065C9C0);
  uint64_t v42 = sub_1000172F8((uint64_t *)&unk_10065C9C0);
  *(void *)(v0 + 896) = v42;
  *(void *)(v0 + 264) = v42;
  uint64_t v43 = swift_allocObject();
  *(void *)(v0 + 240) = v43;
  sub_100017238(v61, v43 + 16, (uint64_t *)&unk_10065C9C0);
  *(void *)(v0 + 904) = type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_1000144C8((uint64_t)v60, v0 + 304);
  if (swift_dynamicCast())
  {
    uint64_t v44 = *(void *)(v0 + 560);
    unint64_t v45 = *(void *)(v0 + 568);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    sub_100013510(v44, v45);
    swift_release();
    uint64_t v49 = *(void *)(v0 + 576);
    uint64_t v50 = *(void *)(v0 + 584);
LABEL_34:
    *(void *)(v0 + 920) = v49;
    *(void *)(v0 + 912) = v50;
    sub_100014524((uint64_t)v60);
    sub_10001729C(v61, (uint64_t *)&unk_10065C9C0);
    sub_10001729C((uint64_t)v62, &qword_10065BC40);
    swift_release();
    uint64_t v51 = sub_1003E4D34;
    uint64_t v52 = v36;
    uint64_t v53 = 0;
    return _swift_task_switch(v51, v52, v53);
  }
  sub_1000144C8((uint64_t)v60, v0 + 368);
  if (swift_dynamicCast())
  {
    uint64_t v50 = *(void *)(v0 + 552);
    if (v50)
    {
      uint64_t v49 = *(void *)(v0 + 544);
      swift_release();
      goto LABEL_34;
    }
  }
  *(void *)(v0 + 648) = &type metadata for String;
  sub_1000172F8(&qword_10065BC68);
  uint64_t v46 = String.init<A>(describing:)();
  uint64_t v48 = v47;
  sub_10018AC60(v60, *(void *)(v0 + 264));
  *(void *)(v0 + 640) = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
LABEL_38:
  uint64_t v55 = String.init<A>(describing:)();
  uint64_t v57 = v56;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v58 = v46;
  *(void *)(v58 + 8) = v48;
  *(void *)(v58 + 16) = v55;
  *(void *)(v58 + 24) = v57;
  *(unsigned char *)(v58 + 32) = 0;
  swift_willThrow();
  swift_release();
  sub_100014524(v4);
  return swift_unexpectedError();
}

uint64_t sub_1003E6AA8()
{
  *(void *)(*(void *)v1 + 1008) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v2 = sub_1003E76B0;
  }
  else
  {
    uint64_t v2 = sub_1003E6C00;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003E6C00()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 864) + 1;
  if (v1 == *(void *)(v0 + 816))
  {
LABEL_20:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
    return v33();
  }
  uint64_t v2 = (void *)(v0 + 16);
  uint64_t v3 = v0 + 48;
  uint64_t v66 = v0 + 80;
  uint64_t v4 = v0 + 112;
  uint64_t v61 = v0 + 208;
  uint64_t v62 = (void *)(v0 + 144);
  uint64_t v63 = (void *)(v0 + 240);
  uint64_t v60 = v0 + 176;
  uint64_t v64 = *(void *)(v0 + 1008);
  while (1)
  {
    *(void *)(v0 + 864) = v1;
    uint64_t v5 = *(void *)(*(void *)(v0 + 800) + 16 * v1 + 40);
    *(void *)(v0 + 872) = v5;
    swift_retain_n();
    os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
    uint64_t v6 = *(void *)(v5 + 16);
    if (*(void *)(v6 + 16) && (unint64_t v7 = sub_100016D20(0x6574617473, 0xE500000000000000), (v8 & 1) != 0))
    {
      sub_100017238(*(void *)(v6 + 56) + 32 * v7, (uint64_t)v2, (uint64_t *)&unk_10065C9C0);
    }
    else
    {
      *uint64_t v2 = 0;
      v2[1] = 0;
      v2[2] = 0;
      *(void *)(v0 + 40) = 1;
    }
    os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
    sub_100017238((uint64_t)v2, v3, &qword_10065BC40);
    uint64_t v65 = (os_unfair_lock_s *)(v5 + 24);
    if (*(void *)(v0 + 72) == 1)
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 712) + 56))(*(void *)(v0 + 696), 1, 1, *(void *)(v0 + 704));
    }
    else
    {
      sub_10001733C(v3, v66, (uint64_t *)&unk_10065C9C0);
      *(void *)(v0 + 136) = sub_1000172F8((uint64_t *)&unk_10065C9C0);
      uint64_t v9 = swift_allocObject();
      *(void *)(v0 + 112) = v9;
      sub_100017238(v66, v9 + 16, (uint64_t *)&unk_10065C9C0);
      type metadata accessor for JSONDecoder();
      swift_allocObject();
      JSONDecoder.init()();
      sub_1000144C8(v0 + 112, v0 + 272);
      if (swift_dynamicCast())
      {
        uint64_t v10 = *(void *)(v0 + 528);
        unint64_t v11 = *(void *)(v0 + 536);
        sub_1003E9720(&qword_10065CF50, (void (*)(uint64_t))&type metadata accessor for ManagedAppStatus.State);
        dispatch thunk of JSONDecoder.decode<A>(_:from:)();
        sub_100013510(v10, v11);
        if (v64) {
          goto LABEL_43;
        }
        swift_release();
        uint64_t v64 = 0;
        uint64_t v2 = (void *)(v0 + 16);
      }
      else
      {
        sub_1000144C8(v0 + 112, v0 + 432);
        char v12 = swift_dynamicCast();
        uint64_t v13 = *(void *)(v0 + 688);
        uint64_t v14 = *(void *)(v0 + 712);
        uint64_t v15 = *(void *)(v0 + 704);
        if ((v12 & 1) == 0)
        {
          (*(void (**)(void, uint64_t, uint64_t, void))(v14 + 56))(*(void *)(v0 + 688), 1, 1, *(void *)(v0 + 704));
          sub_10001729C(v13, &qword_10065BD08);
          *(void *)(v0 + 656) = v15;
          sub_1000172F8(&qword_10065D058);
          uint64_t v49 = String.init<A>(describing:)();
          uint64_t v51 = v55;
          sub_10018AC60((void *)(v0 + 112), *(void *)(v0 + 136));
          *(void *)(v0 + 664) = swift_getDynamicType();
          sub_1000172F8(&qword_10065BC70);
          goto LABEL_42;
        }
        uint64_t v16 = *(void *)(v0 + 696);
        (*(void (**)(void, void, uint64_t, void))(v14 + 56))(*(void *)(v0 + 688), 0, 1, *(void *)(v0 + 704));
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v16, v13, v15);
        swift_release();
      }
      uint64_t v17 = *(void *)(v0 + 712);
      uint64_t v18 = *(void *)(v0 + 704);
      uint64_t v19 = *(void *)(v0 + 696);
      sub_100014524(v0 + 112);
      sub_10001729C(v66, (uint64_t *)&unk_10065C9C0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v18);
    }
    uint64_t v20 = *(void *)(v0 + 712);
    uint64_t v21 = *(void *)(v0 + 704);
    uint64_t v22 = *(void *)(v0 + 696);
    sub_10001729C((uint64_t)v2, &qword_10065BC40);
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v22, 1, v21) == 1)
    {
      __break(1u);
LABEL_47:
      sub_10001729C((uint64_t)v62, &qword_10065BC40);
      uint64_t v52 = (uint64_t (*)())swift_release();
      __break(1u);
      return _swift_task_switch(v52, v53, v54);
    }
    uint64_t v23 = *(unsigned int *)(v0 + 1016);
    uint64_t v24 = *(void *)(v0 + 720);
    uint64_t v25 = *(void *)(v0 + 712);
    uint64_t v26 = *(void *)(v0 + 704);
    (*(void (**)(void, void, uint64_t))(v25 + 32))(*(void *)(v0 + 728), *(void *)(v0 + 696), v26);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 104))(v24, v23, v26);
    sub_1003E9720(&qword_10065CF30, (void (*)(uint64_t))&type metadata accessor for ManagedAppStatus.State);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v27 = *(void *)(v0 + 728);
    uint64_t v28 = *(void *)(v0 + 720);
    uint64_t v29 = *(void *)(v0 + 712);
    uint64_t v30 = *(void *)(v0 + 704);
    if (*(void *)(v0 + 608) == *(void *)(v0 + 592) && *(void *)(v0 + 616) == *(void *)(v0 + 600)) {
      break;
    }
    char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v32(v28, v30);
    v32(v27, v30);
    if (v31) {
      goto LABEL_24;
    }
    swift_release();
    uint64_t v1 = *(void *)(v0 + 864) + 1;
    uint64_t v2 = (void *)(v0 + 16);
    uint64_t v3 = v0 + 48;
    if (v1 == *(void *)(v0 + 816)) {
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v35(v28, v30);
  v35(v27, v30);
LABEL_24:
  uint64_t v36 = *(void *)(*(void *)(v0 + 672) + 240);
  *(void *)(v0 + 880) = v36;
  uint64_t v37 = *(void *)(v36 + 16);
  *(void *)(v0 + 888) = v37;
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v65);
  uint64_t v38 = *(void *)(v5 + 16);
  if (*(void *)(v38 + 16) && (unint64_t v39 = sub_100016D20(0x746172616C636564, 0xEE0064695F6E6F69), (v40 & 1) != 0))
  {
    uint64_t v41 = *(void *)(v38 + 56) + 32 * v39;
    uint64_t v42 = v0 + 144;
    sub_100017238(v41, (uint64_t)v62, (uint64_t *)&unk_10065C9C0);
  }
  else
  {
    uint64_t v42 = v0 + 144;
    *uint64_t v62 = 0;
    *(void *)(v0 + 152) = 0;
    *(void *)(v0 + 160) = 0;
    *(void *)(v0 + 168) = 1;
  }
  os_unfair_lock_unlock(v65);
  sub_100017238(v42, v60, &qword_10065BC40);
  if (*(void *)(v0 + 200) == 1) {
    goto LABEL_47;
  }
  sub_10001733C(v60, v61, (uint64_t *)&unk_10065C9C0);
  uint64_t v43 = sub_1000172F8((uint64_t *)&unk_10065C9C0);
  *(void *)(v0 + 896) = v43;
  *(void *)(v0 + 264) = v43;
  uint64_t v44 = swift_allocObject();
  *(void *)(v0 + 240) = v44;
  sub_100017238(v61, v44 + 16, (uint64_t *)&unk_10065C9C0);
  *(void *)(v0 + 904) = type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_1000144C8((uint64_t)v63, v0 + 304);
  if (swift_dynamicCast())
  {
    uint64_t v45 = *(void *)(v0 + 560);
    unint64_t v46 = *(void *)(v0 + 568);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    if (v64)
    {
      sub_100013510(v45, v46);
      uint64_t v4 = v0 + 240;
      goto LABEL_43;
    }
    sub_100013510(v45, v46);
    swift_release();
    uint64_t v48 = *(void *)(v0 + 576);
    uint64_t v47 = *(void *)(v0 + 584);
LABEL_37:
    *(void *)(v0 + 920) = v48;
    *(void *)(v0 + 912) = v47;
    sub_100014524((uint64_t)v63);
    sub_10001729C(v61, (uint64_t *)&unk_10065C9C0);
    sub_10001729C((uint64_t)v62, &qword_10065BC40);
    swift_release();
    uint64_t v52 = sub_1003E4D34;
    uint64_t v53 = v37;
    uint64_t v54 = 0;
    return _swift_task_switch(v52, v53, v54);
  }
  sub_1000144C8((uint64_t)v63, v0 + 368);
  if (swift_dynamicCast())
  {
    uint64_t v47 = *(void *)(v0 + 552);
    if (v47)
    {
      uint64_t v48 = *(void *)(v0 + 544);
      swift_release();
      goto LABEL_37;
    }
  }
  *(void *)(v0 + 648) = &type metadata for String;
  sub_1000172F8(&qword_10065BC68);
  uint64_t v49 = String.init<A>(describing:)();
  uint64_t v51 = v50;
  uint64_t v4 = v0 + 240;
  sub_10018AC60(v63, *(void *)(v0 + 264));
  *(void *)(v0 + 640) = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
LABEL_42:
  uint64_t v56 = String.init<A>(describing:)();
  uint64_t v58 = v57;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v59 = v49;
  *(void *)(v59 + 8) = v51;
  *(void *)(v59 + 16) = v56;
  *(void *)(v59 + 24) = v58;
  *(unsigned char *)(v59 + 32) = 0;
  swift_willThrow();
LABEL_43:
  swift_release();
  sub_100014524(v4);
  return swift_unexpectedError();
}

uint64_t sub_1003E76B0()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 864) + 1;
  if (v1 == *(void *)(v0 + 816))
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
    return v32();
  }
  uint64_t v2 = (void *)(v0 + 16);
  uint64_t v3 = v0 + 48;
  uint64_t v63 = v0 + 80;
  uint64_t v4 = v0 + 112;
  uint64_t v61 = v0 + 208;
  uint64_t v62 = (void *)(v0 + 144);
  uint64_t v59 = v0 + 176;
  uint64_t v60 = (void *)(v0 + 240);
  while (1)
  {
    *(void *)(v0 + 864) = v1;
    uint64_t v5 = *(void *)(*(void *)(v0 + 800) + 16 * v1 + 40);
    *(void *)(v0 + 872) = v5;
    swift_retain_n();
    os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
    uint64_t v6 = *(void *)(v5 + 16);
    if (*(void *)(v6 + 16) && (unint64_t v7 = sub_100016D20(0x6574617473, 0xE500000000000000), (v8 & 1) != 0))
    {
      sub_100017238(*(void *)(v6 + 56) + 32 * v7, (uint64_t)v2, (uint64_t *)&unk_10065C9C0);
    }
    else
    {
      *uint64_t v2 = 0;
      v2[1] = 0;
      v2[2] = 0;
      *(void *)(v0 + 40) = 1;
    }
    os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
    sub_100017238((uint64_t)v2, v3, &qword_10065BC40);
    if (*(void *)(v0 + 72) == 1)
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 712) + 56))(*(void *)(v0 + 696), 1, 1, *(void *)(v0 + 704));
    }
    else
    {
      sub_10001733C(v3, v63, (uint64_t *)&unk_10065C9C0);
      *(void *)(v0 + 136) = sub_1000172F8((uint64_t *)&unk_10065C9C0);
      uint64_t v9 = swift_allocObject();
      *(void *)(v0 + 112) = v9;
      sub_100017238(v63, v9 + 16, (uint64_t *)&unk_10065C9C0);
      type metadata accessor for JSONDecoder();
      swift_allocObject();
      JSONDecoder.init()();
      sub_1000144C8(v0 + 112, v0 + 272);
      if (swift_dynamicCast())
      {
        uint64_t v10 = *(void *)(v0 + 528);
        unint64_t v11 = *(void *)(v0 + 536);
        sub_1003E9720(&qword_10065CF50, (void (*)(uint64_t))&type metadata accessor for ManagedAppStatus.State);
        dispatch thunk of JSONDecoder.decode<A>(_:from:)();
        sub_100013510(v10, v11);
        swift_release();
      }
      else
      {
        sub_1000144C8(v0 + 112, v0 + 432);
        char v12 = swift_dynamicCast();
        uint64_t v13 = *(void *)(v0 + 688);
        uint64_t v14 = *(void *)(v0 + 712);
        uint64_t v15 = *(void *)(v0 + 704);
        if ((v12 & 1) == 0)
        {
          (*(void (**)(void, uint64_t, uint64_t, void))(v14 + 56))(*(void *)(v0 + 688), 1, 1, *(void *)(v0 + 704));
          sub_10001729C(v13, &qword_10065BD08);
          *(void *)(v0 + 656) = v15;
          sub_1000172F8(&qword_10065D058);
          uint64_t v46 = String.init<A>(describing:)();
          uint64_t v48 = v54;
          sub_10018AC60((void *)(v0 + 112), *(void *)(v0 + 136));
          *(void *)(v0 + 664) = swift_getDynamicType();
          sub_1000172F8(&qword_10065BC70);
          goto LABEL_38;
        }
        uint64_t v16 = *(void *)(v0 + 696);
        (*(void (**)(void, void, uint64_t, void))(v14 + 56))(*(void *)(v0 + 688), 0, 1, *(void *)(v0 + 704));
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v16, v13, v15);
        swift_release();
        uint64_t v2 = (void *)(v0 + 16);
      }
      uint64_t v17 = *(void *)(v0 + 712);
      uint64_t v18 = *(void *)(v0 + 704);
      uint64_t v19 = *(void *)(v0 + 696);
      sub_100014524(v0 + 112);
      sub_10001729C(v63, (uint64_t *)&unk_10065C9C0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v18);
    }
    uint64_t v20 = *(void *)(v0 + 712);
    uint64_t v21 = *(void *)(v0 + 704);
    uint64_t v22 = *(void *)(v0 + 696);
    sub_10001729C((uint64_t)v2, &qword_10065BC40);
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v22, 1, v21) == 1)
    {
      __break(1u);
LABEL_42:
      sub_10001729C((uint64_t)v62, &qword_10065BC40);
      uint64_t v51 = (uint64_t (*)())swift_release();
      __break(1u);
      return _swift_task_switch(v51, v52, v53);
    }
    uint64_t v23 = *(unsigned int *)(v0 + 1016);
    uint64_t v24 = *(void *)(v0 + 720);
    uint64_t v25 = *(void *)(v0 + 712);
    uint64_t v26 = *(void *)(v0 + 704);
    (*(void (**)(void, void, uint64_t))(v25 + 32))(*(void *)(v0 + 728), *(void *)(v0 + 696), v26);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 104))(v24, v23, v26);
    sub_1003E9720(&qword_10065CF30, (void (*)(uint64_t))&type metadata accessor for ManagedAppStatus.State);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v27 = *(void *)(v0 + 728);
    uint64_t v28 = *(void *)(v0 + 720);
    uint64_t v29 = *(void *)(v0 + 712);
    uint64_t v30 = *(void *)(v0 + 704);
    if (*(void *)(v0 + 608) == *(void *)(v0 + 592) && *(void *)(v0 + 616) == *(void *)(v0 + 600)) {
      break;
    }
    char v64 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v31 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v31(v28, v30);
    v31(v27, v30);
    if (v64) {
      goto LABEL_23;
    }
    swift_release();
    uint64_t v1 = *(void *)(v0 + 864) + 1;
    uint64_t v2 = (void *)(v0 + 16);
    uint64_t v3 = v0 + 48;
    if (v1 == *(void *)(v0 + 816)) {
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v34(v28, v30);
  v34(v27, v30);
LABEL_23:
  uint64_t v35 = *(void *)(*(void *)(v0 + 672) + 240);
  *(void *)(v0 + 880) = v35;
  uint64_t v36 = *(void *)(v35 + 16);
  *(void *)(v0 + 888) = v36;
  swift_retain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  uint64_t v37 = *(void *)(v5 + 16);
  uint64_t v4 = v0 + 240;
  if (*(void *)(v37 + 16) && (unint64_t v38 = sub_100016D20(0x746172616C636564, 0xEE0064695F6E6F69), (v39 & 1) != 0))
  {
    uint64_t v40 = *(void *)(v37 + 56) + 32 * v38;
    uint64_t v41 = v0 + 144;
    sub_100017238(v40, (uint64_t)v62, (uint64_t *)&unk_10065C9C0);
  }
  else
  {
    uint64_t v41 = v0 + 144;
    *uint64_t v62 = 0;
    *(void *)(v0 + 152) = 0;
    *(void *)(v0 + 160) = 0;
    *(void *)(v0 + 168) = 1;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  sub_100017238(v41, v59, &qword_10065BC40);
  if (*(void *)(v0 + 200) == 1) {
    goto LABEL_42;
  }
  sub_10001733C(v59, v61, (uint64_t *)&unk_10065C9C0);
  uint64_t v42 = sub_1000172F8((uint64_t *)&unk_10065C9C0);
  *(void *)(v0 + 896) = v42;
  *(void *)(v0 + 264) = v42;
  uint64_t v43 = swift_allocObject();
  *(void *)(v0 + 240) = v43;
  sub_100017238(v61, v43 + 16, (uint64_t *)&unk_10065C9C0);
  *(void *)(v0 + 904) = type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_1000144C8((uint64_t)v60, v0 + 304);
  if (swift_dynamicCast())
  {
    uint64_t v44 = *(void *)(v0 + 560);
    unint64_t v45 = *(void *)(v0 + 568);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    sub_100013510(v44, v45);
    swift_release();
    uint64_t v49 = *(void *)(v0 + 576);
    uint64_t v50 = *(void *)(v0 + 584);
LABEL_34:
    *(void *)(v0 + 920) = v49;
    *(void *)(v0 + 912) = v50;
    sub_100014524((uint64_t)v60);
    sub_10001729C(v61, (uint64_t *)&unk_10065C9C0);
    sub_10001729C((uint64_t)v62, &qword_10065BC40);
    swift_release();
    uint64_t v51 = sub_1003E4D34;
    uint64_t v52 = v36;
    uint64_t v53 = 0;
    return _swift_task_switch(v51, v52, v53);
  }
  sub_1000144C8((uint64_t)v60, v0 + 368);
  if (swift_dynamicCast())
  {
    uint64_t v50 = *(void *)(v0 + 552);
    if (v50)
    {
      uint64_t v49 = *(void *)(v0 + 544);
      swift_release();
      goto LABEL_34;
    }
  }
  *(void *)(v0 + 648) = &type metadata for String;
  sub_1000172F8(&qword_10065BC68);
  uint64_t v46 = String.init<A>(describing:)();
  uint64_t v48 = v47;
  sub_10018AC60(v60, *(void *)(v0 + 264));
  *(void *)(v0 + 640) = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
LABEL_38:
  uint64_t v55 = String.init<A>(describing:)();
  uint64_t v57 = v56;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v58 = v46;
  *(void *)(v58 + 8) = v48;
  *(void *)(v58 + 16) = v55;
  *(void *)(v58 + 24) = v57;
  *(unsigned char *)(v58 + 32) = 0;
  swift_willThrow();
  swift_release();
  sub_100014524(v4);
  return swift_unexpectedError();
}

uint64_t sub_1003E8138(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v19 = *(void *)(v2 - 8);
  uint64_t v20 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v17 = *(void *)(v5 - 8);
  uint64_t v18 = v5;
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000172F8(&qword_100662518);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  unint64_t v11 = (void (__cdecl *)(int))SIG_IGN.getter();
  signal(15, v11);
  sub_10018B1DC(0, &qword_100662520);
  uint64_t v12 = static OS_dispatch_source.makeSignalSource(signal:queue:)();
  swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v13, (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(void *)(v14 + ((v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v12;
  aBlock[4] = sub_1003E91C0;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002557B0;
  aBlock[3] = &unk_100645730;
  uint64_t v15 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  static DispatchQoS.unspecified.getter();
  sub_1003E85D0();
  OS_dispatch_source.setEventHandler(qos:flags:handler:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v20);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v18);
  swift_release();
  OS_dispatch_source.activate()();
  return swift_unknownObjectRelease();
}

void sub_1003E847C()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000172F8(&qword_100662518);
  CheckedContinuation.resume(returning:)();
  swift_getObjectType();
  OS_dispatch_source.cancel()();
  static Logger.daemon.getter();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Received SIGTERM; shutting down", v6, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  exit(0);
}

uint64_t sub_1003E85D0()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_1003E8680(uint64_t a1)
{
  uint64_t v38 = a1;
  uint64_t v1 = sub_1000172F8(&qword_100662518);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = __chkstk_darwin(v1);
  char v39 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v33 - v5;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v35 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  os_log_t v34 = (os_log_t)((char *)&v33 - v12);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v33 - v13;
  static Logger.daemon.getter();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Device wasn't unlocked since boot, waiting for first unlock notification", v17, 2u);
    swift_slowDealloc();
  }

  uint64_t v36 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v37 = v7;
  v36(v14, v7);
  sub_1000172F8(&qword_1006625A0);
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + 20) = 0;
  uint64_t v19 = (os_unfair_lock_s *)(v18 + 20);
  *(unsigned char *)(v18 + 16) = 0;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v20(v6, v38, v1);
  v20(v39, (uint64_t)v6, v1);
  unint64_t v21 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v18;
  uint64_t v23 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(v22 + v21, v6, v1);
  __chkstk_darwin(v23);
  *(&v33 - 2) = (uint64_t)sub_1003E999C;
  *(&v33 - 1) = v22;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v18 + 20));
  sub_1003E9A14((uint64_t)&v41);
  os_unfair_lock_unlock((os_unfair_lock_t)(v18 + 20));
  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v39, v1);
    os_log_t v24 = v34;
    static Logger.daemon.getter();
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Failed to register for first unlock notification", v27, 2u);
      swift_slowDealloc();
    }

    v36((char *)v24, v37);
    CheckedContinuation.resume(returning:)();
    goto LABEL_14;
  }
  int v28 = v41;
  if (MKBDeviceUnlockedSinceBoot() != 1)
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v39, v1);
LABEL_14:
    swift_release();
    return swift_release();
  }
  LODWORD(v38) = v28;
  static Logger.daemon.getter();
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    char v31 = (uint8_t *)swift_slowAlloc();
    os_log_t v34 = v29;
    *(_WORD *)char v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v30, "Device was just unlocked, resuming startup", v31, 2u);
    uint64_t v29 = v34;
    swift_slowDealloc();
  }

  v36(v35, v37);
  os_unfair_lock_lock(v19);
  sub_1003E8C7C((unsigned char *)(v18 + 16), v40);
  os_unfair_lock_unlock(v19);
  if ((v40[0] & 1) == 0)
  {
    notify_cancel(v38);
    CheckedContinuation.resume(returning:)();
  }
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v39, v1);
}

void sub_1003E8BEC(int a1, os_unfair_lock_s *a2)
{
  uint64_t v3 = a2 + 4;
  uint64_t v4 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_1003E8C7C(v3, &v5);
  os_unfair_lock_unlock(v4);
  if ((v5 & 1) == 0)
  {
    notify_cancel(a1);
    sub_1000172F8(&qword_100662518);
    CheckedContinuation.resume(returning:)();
  }
}

unsigned char *sub_1003E8C7C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  *uint64_t result = 1;
  return result;
}

void sub_1003E8C90(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  out_int token = -1;
  sub_10018B1DC(0, (unint64_t *)&qword_10065B270);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchQoS.QoSClass.utility(_:), v6);
  uint64_t v10 = static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  aBlock[4] = sub_1003E9A30;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004D2B58;
  aBlock[3] = &unk_100645960;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  LODWORD(a2) = notify_register_dispatch("com.apple.mobile.keybagd.first_unlock", &out_token, v10, v12);
  _Block_release(v12);

  int v13 = out_token;
  if (a2) {
    BOOL v14 = 1;
  }
  else {
    BOOL v14 = out_token == -1;
  }
  char v15 = v14;
  if (v14) {
    int v13 = 0;
  }
  *(_DWORD *)a3 = v13;
  *(unsigned char *)(a3 + 4) = v15;
}

uint64_t sub_1003E8EC8(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.daemon.getter();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Received first unlock notification, resuming startup", v10, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return a2(a1);
}

uint64_t sub_1003E9028()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003E9060(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000176B4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100666C70 + dword_100666C70);
  return v6(a1, v4);
}

uint64_t sub_1003E9118()
{
  uint64_t v1 = sub_1000172F8(&qword_100662518);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

void sub_1003E91C0()
{
  sub_1000172F8(&qword_100662518);

  sub_1003E847C();
}

uint64_t sub_1003E9250()
{
  return swift_release();
}

unint64_t sub_1003E9258()
{
  unint64_t result = qword_10065D3F0;
  if (!qword_10065D3F0)
  {
    sub_10017B924(&qword_10065D3E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065D3F0);
  }
  return result;
}

uint64_t sub_1003E92B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Container();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003E931C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000176B4;
  unint64_t v6 = (char *)&dword_1006666E8 + dword_1006666E8;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1000176B4;
  return ((uint64_t (*)(uint64_t, void))v6)(v2, 0);
}

uint64_t sub_1003E9414()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000176B4;
  v3[2] = v2;
  return _swift_task_switch(sub_1003E1C98, 0, 0);
}

uint64_t sub_1003E94BC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1000176B4;
  return _swift_task_switch(sub_1003E1D98, 0, 0);
}

uint64_t sub_1003E9564()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1000176B4;
  return sub_1003E1DF4(v2, v3);
}

uint64_t sub_1003E95FC(_xpc_activity_s *a1)
{
  return sub_10025A58C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1003E9608()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003E9648()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1000176B4;
  return sub_1003E3A24(v2, v3);
}

uint64_t sub_1003E96E0()
{
  if (*(void *)(v0 + 40)) {
    sub_100014524(v0 + 16);
  }

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003E9720(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003E9768(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1000176B4;
  return sub_1003E22D0(a1, v5, v4);
}

uint64_t sub_1003E9818(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000B238;
  return sub_1003E3550(a1, v4, v5, v6);
}

uint64_t sub_1003E98CC()
{
  uint64_t v1 = sub_1000172F8(&qword_100662518);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1003E999C(int a1)
{
  sub_1000172F8(&qword_100662518);
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 16);

  sub_1003E8BEC(a1, v3);
}

void sub_1003E9A14(uint64_t a1@<X8>)
{
  sub_1003E8C90(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1003E9A30(uint64_t a1)
{
  return sub_1003E8EC8(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

uint64_t sub_1003E9A68()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_1003E9A88, v0, 0);
}

uint64_t sub_1003E9A88()
{
  unint64_t v1 = *(void *)(v0[2] + 112);
  v0[3] = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v0[4] = v2;
  uint64_t v3 = v0[3];
  if (v2)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v4 = *(void *)(v3 + 32);
      swift_retain();
    }
    v0[5] = v4;
    v0[6] = 1;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[7] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1003E9C5C;
    return sub_10034213C();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_10065B108 != -1) {
      swift_once();
    }
    uint64_t v5 = (void *)(qword_1006625A8 + 16);
    uint64_t v6 = (os_unfair_lock_s *)(qword_1006625A8 + 24);
    os_unfair_lock_lock((os_unfair_lock_t)(qword_1006625A8 + 24));
    sub_10035B54C(v5);
    os_unfair_lock_unlock(v6);
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_1003E9C5C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1003E9F30;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 16);
    uint64_t v4 = sub_1003E9D80;
  }
  return _swift_task_switch(v4, v5, 0);
}

void sub_1003E9D80()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[4];
  swift_release();
  if (v1 == v2)
  {
    uint64_t v3 = v0[8];
    swift_bridgeObjectRelease();
    if (qword_10065B108 != -1) {
      swift_once();
    }
    uint64_t v4 = (void *)(qword_1006625A8 + 16);
    uint64_t v5 = (os_unfair_lock_s *)(qword_1006625A8 + 24);
    os_unfair_lock_lock((os_unfair_lock_t)(qword_1006625A8 + 24));
    sub_10035B54C(v4);
    os_unfair_lock_unlock(v5);
    if (!v3)
    {
      uint64_t v9 = (void (*)(void))v0[1];
      v9();
    }
  }
  else
  {
    uint64_t v6 = v0[6];
    uint64_t v7 = v0[3];
    if ((v7 & 0xC000000000000001) != 0)
    {
      uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v8 = *(void *)(v7 + 8 * v6 + 32);
      swift_retain();
    }
    v0[5] = v8;
    v0[6] = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v10 = (void *)swift_task_alloc();
      v0[7] = v10;
      void *v10 = v0;
      v10[1] = sub_1003E9C5C;
      sub_10034213C();
    }
  }
}

uint64_t sub_1003E9F30()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003E9F94()
{
  sub_1000172F8(&qword_100662678);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = _swiftEmptyArrayStorage;
  qword_1006625A8 = result;
  return result;
}

uint64_t sub_1003E9FD8(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  if (!(a1 >> 62))
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    os_log_t v34 = _swiftEmptyArrayStorage;
LABEL_13:
    *(void *)(v3 + 112) = v34;
    UUID.init()();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v3 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon19ADPBatchInstallTask_id, v9, v6);
    return v3;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_12;
  }
LABEL_3:
  uint64_t v40 = _swiftEmptyArrayStorage;
  uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
  if ((v10 & 0x8000000000000000) == 0)
  {
    uint64_t v36 = v9;
    uint64_t v37 = v7;
    uint64_t v38 = v2;
    unint64_t v39 = a1;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v12 = 0;
      int v13 = (void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      do
      {
        uint64_t v14 = v12 + 1;
        uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        type metadata accessor for ADPInstallTask();
        uint64_t v16 = swift_allocObject();
        swift_defaultActor_initialize();
        uint64_t v17 = v16 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon14ADPInstallTask_adp;
        uint64_t v18 = type metadata accessor for ADP();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
        uint64_t v19 = v16 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon14ADPInstallTask_preflightMetadata;
        uint64_t v20 = type metadata accessor for ADPPreflightResultingMetadata(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
        *(unsigned char *)(v16 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon14ADPInstallTask_shouldCacheInstallAsPending) = 1;
        *(unsigned char *)(v16 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon14ADPInstallTask_shouldShowAlertOnInstallFailure) = 1;
        *(void *)(v16 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon14ADPInstallTask_installConfirmationTask) = 0;
        unint64_t v21 = (void *)(v16 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon14ADPInstallTask_developerID);
        *unint64_t v21 = 0;
        v21[1] = 0;
        *(unsigned char *)(v16 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon14ADPInstallTask_hasConditionalDeveloperApproval) = 0;
        *(void *)(v16 + 112) = v15;
        (*v13)(v16 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon14ADPInstallTask_id, v15 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23ADPInstallConfiguration_id, v6);
        sub_1001D1528(a2, v16 + 120);
        uint64_t v22 = *(void **)(v15 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23ADPInstallConfiguration_logKey);
        *(void *)(v16 + 160) = v22;
        id v23 = v22;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        uint64_t v12 = v14;
      }
      while (v10 != v14);
    }
    else
    {
      os_log_t v24 = (uint64_t *)(a1 + 32);
      type metadata accessor for ADPInstallTask();
      do
      {
        uint64_t v25 = *v24++;
        uint64_t v26 = swift_allocObject();
        swift_retain();
        swift_defaultActor_initialize();
        uint64_t v27 = v26 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon14ADPInstallTask_adp;
        uint64_t v28 = type metadata accessor for ADP();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
        uint64_t v29 = v26 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon14ADPInstallTask_preflightMetadata;
        uint64_t v30 = type metadata accessor for ADPPreflightResultingMetadata(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
        *(unsigned char *)(v26 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon14ADPInstallTask_shouldCacheInstallAsPending) = 1;
        *(unsigned char *)(v26 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon14ADPInstallTask_shouldShowAlertOnInstallFailure) = 1;
        *(void *)(v26 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon14ADPInstallTask_installConfirmationTask) = 0;
        char v31 = (void *)(v26 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon14ADPInstallTask_developerID);
        void *v31 = 0;
        v31[1] = 0;
        *(unsigned char *)(v26 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon14ADPInstallTask_hasConditionalDeveloperApproval) = 0;
        *(void *)(v26 + 112) = v25;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v26 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon14ADPInstallTask_id, v25 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23ADPInstallConfiguration_id, v6);
        sub_1001D1528(a2, v26 + 120);
        uint64_t v32 = *(void **)(v25 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23ADPInstallConfiguration_logKey);
        *(void *)(v26 + 160) = v32;
        id v33 = v32;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v10;
      }
      while (v10);
    }
    os_log_t v34 = v40;
    swift_bridgeObjectRelease();
    uint64_t v7 = v37;
    uint64_t v3 = v38;
    uint64_t v9 = v36;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003EA4B8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v4 = *a1;
  _OWORD v7[2] = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_100341D50((uint64_t (*)(uint64_t *))sub_1003EBF38, (uint64_t)v7, v4);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v5;
  return result;
}

uint64_t sub_1003EA530(void *a1, uint64_t a2)
{
  v6[2] = a2;
  uint64_t result = sub_100470E34((uint64_t (*)(uint64_t *))sub_1003EBF78, (uint64_t)v6);
  uint64_t v4 = result;
  if (*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v5 >= v4) {
      return sub_1005541A4(v4, v5);
    }
  }
  else
  {
    uint64_t v5 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5 >= result) {
      return sub_1005541A4(v4, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1003EA5F0()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon19ADPBatchInstallTask_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_1003EA674()
{
  return type metadata accessor for ADPBatchInstallTask();
}

uint64_t type metadata accessor for ADPBatchInstallTask()
{
  uint64_t result = qword_1006625D8;
  if (!qword_1006625D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003EA6C8()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1003EA770(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 160) = a6;
  *(void *)(v7 + 168) = a7;
  *(unsigned char *)(v7 + 376) = a4;
  *(void *)(v7 + 144) = a3;
  *(void *)(v7 + 152) = a5;
  *(void *)(v7 + 128) = a1;
  *(void *)(v7 + 136) = a2;
  uint64_t v8 = type metadata accessor for UUID();
  *(void *)(v7 + 176) = v8;
  *(void *)(v7 + 184) = *(void *)(v8 - 8);
  *(void *)(v7 + 192) = swift_task_alloc();
  *(void *)(v7 + 200) = swift_task_alloc();
  *(void *)(v7 + 208) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Logger();
  *(void *)(v7 + 216) = v9;
  *(void *)(v7 + 224) = *(void *)(v9 - 8);
  *(void *)(v7 + 232) = swift_task_alloc();
  *(void *)(v7 + 240) = swift_task_alloc();
  *(void *)(v7 + 248) = swift_task_alloc();
  *(void *)(v7 + 256) = swift_task_alloc();
  return _swift_task_switch(sub_1003EA8DC, 0, 0);
}

uint64_t sub_1003EA8DC()
{
  uint64_t v68 = v0;
  if (!v0[18])
  {
    uint64_t v4 = v0[23];
    uint64_t v3 = v0[24];
    uint64_t v5 = v0[22];
    uint64_t v6 = v0[16];
    static Logger.install.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v11 = v0[28];
    uint64_t v10 = v0[29];
    uint64_t v12 = v0[27];
    uint64_t v14 = v0[23];
    uint64_t v13 = v0[24];
    uint64_t v15 = v0[22];
    if (v9)
    {
      uint64_t v66 = v0[29];
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      v67[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136446210;
      sub_100013CFC((unint64_t *)&qword_100665D30, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[12] = sub_1000143F4(v17, v18, v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "No calling bundle ID found when confirming %{public}s", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v66, v12);
    }
    else
    {
      (*(void (**)(void, void))(v14 + 8))(v0[24], v0[22]);

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    }
    goto LABEL_18;
  }
  if (qword_10065B108 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[16];
  uint64_t v2 = qword_1006625A8;
  *(void *)(swift_task_alloc() + 16) = v1;
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 24));
  sub_1003EBF00((unint64_t *)(v2 + 16), v67);
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 24));
  uint64_t v19 = v67[0];
  v0[33] = v67[0];
  swift_task_dealloc();
  if (!v19)
  {
    uint64_t v31 = v0[25];
    uint64_t v32 = v0[22];
    uint64_t v33 = v0[23];
    uint64_t v34 = v0[16];
    static Logger.install.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v31, v34, v32);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    BOOL v37 = os_log_type_enabled(v35, v36);
    uint64_t v38 = v0[30];
    uint64_t v40 = v0[27];
    uint64_t v39 = v0[28];
    uint64_t v41 = v0[25];
    uint64_t v42 = v0[22];
    uint64_t v43 = v0[23];
    if (v37)
    {
      *(void *)os_log_type_t typea = v0[30];
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      v67[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 136446210;
      sub_100013CFC((unint64_t *)&qword_100665D30, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[14] = sub_1000143F4(v45, v46, v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "No pending batch install with ID: %{public}s found", v44, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(os_log_type_t *, uint64_t))(v39 + 8))(*(os_log_type_t **)typea, v40);
    }
    else
    {
      (*(void (**)(void, void))(v43 + 8))(v0[25], v0[22]);

      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    }
LABEL_18:
    type metadata accessor for InternalError();
    sub_100013CFC((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_19;
  }
  unint64_t v20 = *(void *)(v19 + 112);
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    if (v22)
    {
LABEL_10:
      if ((v20 & 0xC000000000000001) != 0)
      {
        uint64_t v25 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return _swift_task_switch(v22, v23, v24);
        }
        uint64_t v25 = *(void *)(v20 + 32);
        swift_retain();
      }
      v0[34] = v25;
      swift_bridgeObjectRelease();
      uint64_t v26 = *(void *)(*(void *)(v25 + 112)
                      + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23ADPInstallConfiguration_lockedStorage);
      uint64_t v27 = v26 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v26 + 16);
      uint64_t v28 = (os_unfair_lock_s *)(v26 + ((*(unsigned int *)(*(void *)v26 + 48) + 3) & 0x1FFFFFFFCLL));
      swift_retain();
      os_unfair_lock_lock(v28);
      sub_1002BDC4C(v27, (uint64_t)(v0 + 2));
      v0[35] = 0;
      os_unfair_lock_unlock(v28);
      swift_release();
      sub_1000172F8(&qword_10065C450);
      if (swift_dynamicCast())
      {
        if (v0[10] == v0[17] && v0[18] == v0[11])
        {
          swift_bridgeObjectRelease();
LABEL_26:
          uint64_t v22 = (uint64_t)sub_1003EB2D4;
          uint64_t v23 = v19;
          goto LABEL_28;
        }
        char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v47) {
          goto LABEL_26;
        }
      }
      uint64_t v22 = (uint64_t)sub_1003EBBF8;
      uint64_t v23 = v25;
LABEL_28:
      uint64_t v24 = 0;
      return _swift_task_switch(v22, v23, v24);
    }
  }
  else
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v22 = swift_bridgeObjectRetain();
    if (v21) {
      goto LABEL_10;
    }
  }
  uint64_t v48 = v0[26];
  uint64_t v49 = v0[22];
  uint64_t v50 = v0[23];
  uint64_t v51 = v0[16];
  swift_bridgeObjectRelease();
  static Logger.install.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v48, v51, v49);
  uint64_t v52 = Logger.logObject.getter();
  os_log_type_t type = static os_log_type_t.default.getter();
  BOOL v53 = os_log_type_enabled(v52, type);
  uint64_t v54 = v0[31];
  uint64_t v56 = v0[27];
  uint64_t v55 = v0[28];
  uint64_t v57 = v0[26];
  uint64_t v59 = v0[22];
  uint64_t v58 = v0[23];
  if (v53)
  {
    uint64_t v63 = v0[31];
    uint64_t v60 = (uint8_t *)swift_slowAlloc();
    v67[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v60 = 136446210;
    sub_100013CFC((unint64_t *)&qword_100665D30, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v61 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[15] = sub_1000143F4(v61, v62, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v59);
    _os_log_impl((void *)&_mh_execute_header, v52, type, "Can't resume an empty batch: %{public}s", v60, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v63, v56);
  }
  else
  {
    (*(void (**)(void, void))(v58 + 8))(v0[26], v0[22]);

    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
  }
  type metadata accessor for InternalError();
  sub_100013CFC((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = (uint64_t (*)(void))v0[1];
  return v29();
}

uint64_t sub_1003EB2D4()
{
  unint64_t v1 = *(void *)(v0[33] + 112);
  v0[36] = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    v0[37] = v7;
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v0[37] = v2;
    if (v2)
    {
LABEL_3:
      uint64_t v3 = v0[36];
      if ((v3 & 0xC000000000000001) != 0)
      {
        uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v4 = *(void *)(v3 + 32);
        swift_retain();
      }
      v0[39] = v4;
      v0[40] = 1;
      uint64_t v5 = sub_1003EB530;
      uint64_t v6 = v4;
      goto LABEL_9;
    }
  }
  v0[38] = v0[35];
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1003EB3D4;
  uint64_t v6 = 0;
LABEL_9:
  return _swift_task_switch(v5, v6, 0);
}

void sub_1003EB3D4()
{
  uint64_t v1 = v0[38];
  uint64_t v2 = v0[16];
  uint64_t v3 = qword_1006625A8;
  *(void *)(swift_task_alloc() + 16) = v2;
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_1003EBF1C((void *)(v3 + 16));
  if (v1)
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  }
  else
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (void (*)(void))v0[1];
    v4();
  }
}

uint64_t sub_1003EB530()
{
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v2 = *(void *)(v1 + 112)
     + OBJC_IVAR____TtC28ManagedAppDistributionDaemon23ADPInstallConfiguration_itemIDFromButtonConfiguration;
  if (*(unsigned char *)(v2 + 8))
  {
    uint64_t v3 = v1 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon14ADPInstallTask_adp;
    swift_beginAccess();
    uint64_t v4 = type metadata accessor for ADP();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
    {
      *(void *)(v0 + 336) = 0;
      uint64_t v5 = (void *)swift_task_alloc();
      *(void *)(v0 + 344) = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_1003EB7B0;
      uint64_t v6 = *(void *)(v0 + 160);
      uint64_t v7 = *(void *)(v0 + 168);
      char v8 = *(unsigned char *)(v0 + 376);
      return sub_100350D24(v8, 0, 0, v6, v7);
    }
    *(void *)(v0 + 360) = *(void *)(v3 + *(int *)(v4 + 24) + 16);
    uint64_t v10 = *(void *)(v0 + 264);
    uint64_t v11 = sub_1003EBB08;
  }
  else
  {
    *(void *)(v0 + 328) = *(void *)v2;
    uint64_t v10 = *(void *)(v0 + 264);
    uint64_t v11 = sub_1003EB6C0;
  }
  return _swift_task_switch(v11, v10, 0);
}

uint64_t sub_1003EB6C0()
{
  uint64_t v1 = *(void *)(v0 + 152);
  if (v1 && *(void *)(v1 + 16) && (unint64_t v2 = sub_100459300(*(void *)(v0 + 328)), (v3 & 1) != 0))
  {
    uint64_t v4 = (uint64_t *)(*(void *)(*(void *)(v0 + 152) + 56) + 16 * v2);
    uint64_t v6 = *v4;
    uint64_t v5 = v4[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *(void *)(v0 + 336) = v5;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1003EB7B0;
  uint64_t v8 = *(void *)(v0 + 160);
  uint64_t v9 = *(void *)(v0 + 168);
  char v10 = *(unsigned char *)(v0 + 376);
  return sub_100350D24(v10, v6, v5, v8, v9);
}

uint64_t sub_1003EB7B0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 352) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 264);
    uint64_t v4 = sub_1003EB9D8;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 264);
    uint64_t v4 = sub_1003EB8FC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1003EB8FC()
{
  uint64_t v1 = v0[40];
  uint64_t v2 = v0[37];
  swift_release();
  if (v1 == v2)
  {
    v0[38] = v0[44];
    swift_bridgeObjectRelease();
    uint64_t v3 = (uint64_t (*)())sub_1003EB3D4;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = v0[40];
    uint64_t v6 = v0[36];
    if ((v6 & 0xC000000000000001) != 0)
    {
      uint64_t v3 = (uint64_t (*)())specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v8 = v3;
    }
    else
    {
      uint64_t v8 = *(uint64_t (**)())(v6 + 8 * v5 + 32);
      uint64_t v3 = (uint64_t (*)())swift_retain();
    }
    v0[39] = v8;
    v0[40] = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      return _swift_task_switch(v3, v4, v7);
    }
    uint64_t v3 = sub_1003EB530;
    uint64_t v4 = v8;
  }
  uint64_t v7 = 0;
  return _swift_task_switch(v3, v4, v7);
}

uint64_t sub_1003EB9D8()
{
  swift_release();
  return _swift_task_switch(sub_1003EBA40, 0, 0);
}

uint64_t sub_1003EBA40()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003EBB08()
{
  uint64_t v1 = *(void *)(v0 + 152);
  if (v1 && *(void *)(v1 + 16) && (unint64_t v2 = sub_100459300(*(void *)(v0 + 360)), (v3 & 1) != 0))
  {
    uint64_t v4 = (uint64_t *)(*(void *)(*(void *)(v0 + 152) + 56) + 16 * v2);
    uint64_t v6 = *v4;
    uint64_t v5 = v4[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *(void *)(v0 + 336) = v5;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1003EB7B0;
  uint64_t v8 = *(void *)(v0 + 160);
  uint64_t v9 = *(void *)(v0 + 168);
  char v10 = *(unsigned char *)(v0 + 376);
  return sub_100350D24(v10, v6, v5, v8, v9);
}

uint64_t sub_1003EBBF8()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 272) + 160);
  *(void *)(v0 + 368) = v1;
  id v2 = v1;
  return _swift_task_switch(sub_1003EBC6C, 0, 0);
}

uint64_t sub_1003EBC6C()
{
  uint64_t v1 = *(void **)(v0 + 368);
  static Logger.install.getter();
  id v2 = v1;
  char v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void **)(v0 + 368);
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    *(void *)(v0 + 104) = v5;
    id v7 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v14 = v5;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%@] Blocking attempt to confirm install started by another distributor.", v6, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    uint64_t v8 = *(NSObject **)(v0 + 368);
  }
  else
  {

    uint64_t v8 = *(NSObject **)(v0 + 368);
    char v3 = v8;
  }
  uint64_t v9 = *(void *)(v0 + 256);
  uint64_t v10 = *(void *)(v0 + 216);
  uint64_t v11 = *(void *)(v0 + 224);

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  type metadata accessor for InternalError();
  sub_100013CFC((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1003EBF00@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1003EA4B8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1003EBF1C(void *a1)
{
  return sub_1003EA530(a1, *(void *)(v1 + 16));
}

uint64_t sub_1003EBF38()
{
  return static UUID.== infix(_:_:)() & 1;
}

uint64_t sub_1003EBF78()
{
  return sub_1003EBF38() & 1;
}

uint64_t sub_1003EBF94()
{
  uint64_t v0 = String.count.getter();
  if (v0)
  {
    uint64_t v1 = v0;
    uint64_t result = sub_100455C3C(0, v0 & ~(v0 >> 63), 0);
    if ((v1 & 0x8000000000000000) == 0)
    {
      while (1)
      {
        uint64_t v4 = String.subscript.getter();
        unint64_t v5 = v3;
        if (v4 == 45 && v3 == 0xE100000000000000)
        {
          unint64_t v5 = 0xE100000000000000;
          swift_bridgeObjectRelease();
          uint64_t v4 = 43;
        }
        else if (_stringCompareWithSmolCheck(_:_:expecting:)())
        {
          swift_bridgeObjectRelease();
          unint64_t v5 = 0xE100000000000000;
          uint64_t v4 = 43;
        }
        else
        {
          if (v4 == 95 && v5 == 0xE100000000000000)
          {
            unint64_t v5 = 0xE100000000000000;
            swift_bridgeObjectRelease();
LABEL_13:
            uint64_t v4 = 47;
            goto LABEL_14;
          }
          if (_stringCompareWithSmolCheck(_:_:expecting:)())
          {
            swift_bridgeObjectRelease();
            unint64_t v5 = 0xE100000000000000;
            goto LABEL_13;
          }
        }
LABEL_14:
        unint64_t v7 = _swiftEmptyArrayStorage[2];
        unint64_t v6 = _swiftEmptyArrayStorage[3];
        if (v7 >= v6 >> 1) {
          sub_100455C3C(v6 > 1, v7 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v7 + 1;
        uint64_t v8 = &_swiftEmptyArrayStorage[2 * v7];
        _OWORD v8[4] = v4;
        v8[5] = v5;
        String.index(after:)();
        if (!--v1) {
          goto LABEL_17;
        }
      }
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1000172F8(&qword_100662688);
    sub_1003EC4D8();
    String.init<A>(_:)();
    swift_bridgeObjectRetain();
    uint64_t v9 = String.count.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v9 & 3;
    if (v9 <= 0) {
      uint64_t v10 = -(-v9 & 3);
    }
    if (v10)
    {
      v11._uint64_t countAndFlagsBits = 61;
      v11._object = (void *)0xE100000000000000;
      Swift::String v12 = String.init(repeating:count:)(v11, 4 - v10);
      String.append(_:)(v12);
      swift_bridgeObjectRelease();
    }
    uint64_t v13 = Data.init(base64Encoded:options:)();
    unint64_t v15 = v14;
    sub_10018B2A8(v13, v14);
    swift_bridgeObjectRelease();
    if (v15 >> 60 != 15) {
      sub_10018AE44(v13, v15);
    }
    return v13;
  }
  return result;
}

uint64_t sub_1003EC228()
{
  Data.base64EncodedString(options:)(0);
  uint64_t v0 = String.count.getter();
  if (v0)
  {
    uint64_t v1 = v0;
    uint64_t result = sub_100455C3C(0, v0 & ~(v0 >> 63), 0);
    if ((v1 & 0x8000000000000000) == 0)
    {
      while (1)
      {
        uint64_t v4 = String.subscript.getter();
        unint64_t v5 = v3;
        if (v4 == 43 && v3 == 0xE100000000000000)
        {
          unint64_t v5 = 0xE100000000000000;
          swift_bridgeObjectRelease();
          uint64_t v4 = 45;
        }
        else if (_stringCompareWithSmolCheck(_:_:expecting:)())
        {
          swift_bridgeObjectRelease();
          unint64_t v5 = 0xE100000000000000;
          uint64_t v4 = 45;
        }
        else
        {
          if (v4 == 47 && v5 == 0xE100000000000000)
          {
            unint64_t v5 = 0xE100000000000000;
            swift_bridgeObjectRelease();
LABEL_13:
            uint64_t v4 = 95;
            goto LABEL_14;
          }
          if (_stringCompareWithSmolCheck(_:_:expecting:)())
          {
            swift_bridgeObjectRelease();
            unint64_t v5 = 0xE100000000000000;
            goto LABEL_13;
          }
        }
LABEL_14:
        unint64_t v7 = _swiftEmptyArrayStorage[2];
        unint64_t v6 = _swiftEmptyArrayStorage[3];
        if (v7 >= v6 >> 1) {
          sub_100455C3C(v6 > 1, v7 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v7 + 1;
        uint64_t v8 = &_swiftEmptyArrayStorage[2 * v7];
        _OWORD v8[4] = v4;
        v8[5] = v5;
        String.index(after:)();
        if (!--v1) {
          goto LABEL_17;
        }
      }
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1000172F8(&qword_100662688);
    sub_1003EC4D8();
    String.init<A>(_:)();
    swift_bridgeObjectRetain();
    Swift::String_optional v9 = String.Iterator.next()();
    if (v9.value._object)
    {
      uint64_t countAndFlagsBits = v9.value._countAndFlagsBits;
      object = v9.value._object;
      do
      {
        if ((countAndFlagsBits != 61 || object != (void *)0xE100000000000000)
          && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          v13._uint64_t countAndFlagsBits = countAndFlagsBits;
          v13._object = object;
          String.append(_:)(v13);
        }
        swift_bridgeObjectRelease();
        Swift::String_optional v12 = String.Iterator.next()();
        uint64_t countAndFlagsBits = v12.value._countAndFlagsBits;
        object = v12.value._object;
      }
      while (v12.value._object);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

unint64_t sub_1003EC4D8()
{
  unint64_t result = qword_100662690;
  if (!qword_100662690)
  {
    sub_10017B924(&qword_100662688);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662690);
  }
  return result;
}

void sub_1003EC548(CGContext *a1, double a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for SecureButtonTag.ButtonImagePlacement();
  uint64_t v121 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v114 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v118 = (char *)&v105 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v119 = (char *)&v105 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v105 - v15;
  CGContextSaveGState(a1);
  uint64_t v17 = *(void **)(v3 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12SecureButton_borderDrawing);
  double v120 = a2;
  objc_msgSend(v17, "drawInContext:atPoint:", a1, a2, a3);
  CGContextRestoreGState(a1);
  CGContextSaveGState(a1);
  unint64_t v18 = *(void **)(v3 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12SecureButton_backgroundDrawing);
  SecureButtonTag.borderWidth.getter();
  double v20 = v19;
  SecureButtonTag.borderWidth.getter();
  objc_msgSend(v18, "drawInContext:atPoint:", a1, v20, v21);
  CGContextRestoreGState(a1);
  uint64_t v22 = (uint64_t *)(v3 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12SecureButton_drawingPlan);
  double v23 = *(double *)(v3 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12SecureButton_drawingPlan + 32);
  double v116 = *(double *)(v3 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12SecureButton_drawingPlan + 40);
  double v24 = *(double *)(v3 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12SecureButton_drawingPlan + 56);
  uint64_t v25 = *(void *)(v3 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12SecureButton_drawingPlan + 24);
  uint64_t v26 = (void *)SecureButtonTag.foregroundColor.getter();
  uint64_t v27 = v26;
  if (v25)
  {
    id v28 = [objc_allocWithZone((Class)UISVectorGlyphDrawing) initWithVectorGlyph:v25 tintColor:v26];
  }
  else
  {

    id v28 = 0;
  }
  uint64_t v29 = *v22;
  unint64_t v30 = v22[1];
  uint64_t v31 = (void *)v22[2];
  uint64_t v32 = (void *)SecureButtonTag.foregroundColor.getter();
  id v33 = sub_10029A48C(v29, v30, v31, v32, v24);

  double v34 = 0.0;
  double v35 = 0.0;
  double v36 = 0.0;
  double v37 = 0.0;
  double v38 = 0.0;
  if (v28)
  {
    objc_msgSend(v28, "alignmentRect", 0.0, 0.0);
    double v35 = v39;
  }
  double v111 = v37;
  double v112 = v38;
  double v113 = v36;
  double v40 = 0.0;
  double v41 = 0.0;
  double v42 = 0.0;
  if (v33)
  {
    [v33 alignmentRect];
    double v41 = v43;
    double v42 = v44;
    double v34 = v45;
    double v40 = v46;
  }
  id v110 = [*(id *)(v4 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12SecureButton_style) layoutDirection];
  id v117 = v28;
  if (!v28) {
    goto LABEL_28;
  }
  id v106 = v28;
  CGContextSaveGState(a1);
  SecureButtonTag.imagePlacement.getter();
  uint64_t v47 = (*(uint64_t (**)(char *, uint64_t))(v121 + 88))(v16, v8);
  uint64_t v48 = enum case for SecureButtonTag.ButtonImagePlacement.top(_:);
  uint64_t v115 = v4;
  double v109 = v23;
  double v108 = v41;
  double v107 = v34;
  if (v47 == enum case for SecureButtonTag.ButtonImagePlacement.top(_:)) {
    goto LABEL_10;
  }
  uint64_t v67 = v47;
  if (v47 == enum case for SecureButtonTag.ButtonImagePlacement.leading(_:))
  {
    id v68 = v33;
    uint64_t v67 = enum case for SecureButtonTag.ButtonImagePlacement.trailing(_:);
  }
  else
  {
    if (v47 == enum case for SecureButtonTag.ButtonImagePlacement.bottom(_:))
    {
LABEL_10:
      double v49 = v42;
      double v50 = a3;
      double v51 = v35;
      double v52 = v116;
      double v53 = v116 * 0.5;
      uint64_t v54 = v121;
      uint64_t v55 = v119;
      SecureButtonTag.imagePlacement.getter();
      uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 104);
      id v105 = v33;
      uint64_t v57 = v118;
      v56(v118, v48, v8);
      sub_1003ED340();
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      uint64_t v59 = v122;
      uint64_t v58 = v123;
      uint64_t v60 = *(void (**)(char *, uint64_t))(v54 + 8);
      uint64_t v61 = v57;
      id v33 = v105;
      v60(v61, v8);
      unint64_t v62 = v55;
      uint64_t v4 = v115;
      v60(v62, v8);
      BOOL v63 = v40 == 0.0 || v58 == v59;
      id v28 = v117;
      double v64 = -(v52 * 0.5);
      double v35 = v51;
      if (v63) {
        double v65 = v64;
      }
      else {
        double v65 = v40 - v53;
      }
      double v66 = v51 * -0.5;
      goto LABEL_27;
    }
    id v68 = v33;
    if (v47 != enum case for SecureButtonTag.ButtonImagePlacement.trailing(_:)) {
      goto LABEL_49;
    }
  }
  double v69 = v23 * 0.5;
  uint64_t v70 = v119;
  SecureButtonTag.imagePlacement.getter();
  uint64_t v71 = v121;
  uint64_t v72 = v118;
  (*(void (**)(char *, uint64_t, uint64_t))(v121 + 104))(v118, v67, v8);
  sub_1003ED340();
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v74 = v122;
  uint64_t v73 = v123;
  uint64_t v75 = *(void (**)(char *, uint64_t))(v71 + 8);
  v75(v72, v8);
  v75(v70, v8);
  double v49 = v42;
  if (v73 != v74)
  {
    uint64_t v4 = v115;
    double v76 = v113;
    if ((v34 != 0.0) == (v110 == 0)) {
      goto LABEL_23;
    }
LABEL_25:
    double v50 = a3;
    double v66 = v34 - v69;
    goto LABEL_26;
  }
  uint64_t v4 = v115;
  double v76 = v113;
  if (!v110) {
    goto LABEL_25;
  }
LABEL_23:
  double v50 = a3;
  double v66 = -v69;
LABEL_26:
  id v28 = v117;
  id v33 = v68;
  double v65 = v76 * -0.5;
LABEL_27:
  uint64_t v77 = v4 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12SecureButton_drawingSize;
  double v78 = sub_1003ED398(v24* (v66 + *(double *)(v4 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12SecureButton_drawingSize) * 0.5 - v111));
  double v79 = v78 / v24 + v120;
  double v80 = sub_1003ED398(v24 * (v65 + *(double *)(v77 + 8) * 0.5 - v112));
  a3 = v50;
  id v81 = v106;
  objc_msgSend(v106, "drawInContext:atPoint:", a1, v79, v80 / v24 + v50);
  CGContextRestoreGState(a1);

  double v23 = v109;
  double v42 = v49;
  double v41 = v108;
  double v34 = v107;
LABEL_28:
  if (!v33)
  {
LABEL_48:

    return;
  }
  id v82 = v33;
  CGContextSaveGState(a1);
  uint64_t v83 = v114;
  SecureButtonTag.imagePlacement.getter();
  uint64_t v84 = (*(uint64_t (**)(char *, uint64_t))(v121 + 88))(v83, v8);
  uint64_t v85 = enum case for SecureButtonTag.ButtonImagePlacement.top(_:);
  if (v84 == enum case for SecureButtonTag.ButtonImagePlacement.top(_:)) {
    goto LABEL_30;
  }
  uint64_t v96 = v84;
  if (v84 == enum case for SecureButtonTag.ButtonImagePlacement.leading(_:))
  {
    uint64_t v115 = v4;
    uint64_t v96 = enum case for SecureButtonTag.ButtonImagePlacement.trailing(_:);
    goto LABEL_41;
  }
  if (v84 == enum case for SecureButtonTag.ButtonImagePlacement.bottom(_:))
  {
LABEL_30:
    uint64_t v86 = v121;
    uint64_t v87 = v4;
    uint64_t v88 = v119;
    SecureButtonTag.imagePlacement.getter();
    uint64_t v89 = v118;
    (*(void (**)(char *, uint64_t, uint64_t))(v86 + 104))(v118, v85, v8);
    sub_1003ED340();
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v91 = v122;
    uint64_t v90 = v123;
    uint64_t v92 = *(void (**)(char *, uint64_t))(v86 + 8);
    v92(v89, v8);
    v92(v88, v8);
    BOOL v93 = v113 != 0.0 && v90 == v91;
    id v28 = v117;
    if (v93) {
      double v94 = v113 + v116 * -0.5;
    }
    else {
      double v94 = v116 * -0.5;
    }
    double v95 = v34 * -0.5;
    goto LABEL_47;
  }
  uint64_t v115 = v4;
  if (v84 == enum case for SecureButtonTag.ButtonImagePlacement.trailing(_:))
  {
LABEL_41:
    uint64_t v97 = v119;
    SecureButtonTag.imagePlacement.getter();
    uint64_t v98 = v121;
    uint64_t v99 = v118;
    (*(void (**)(char *, uint64_t, uint64_t))(v121 + 104))(v118, v96, v8);
    sub_1003ED340();
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v101 = v122;
    uint64_t v100 = v123;
    uint64_t v102 = *(void (**)(char *, uint64_t))(v98 + 8);
    v102(v99, v8);
    v102(v97, v8);
    if (v100 == v101)
    {
      uint64_t v87 = v115;
      if ((v35 == 0.0) == (v110 == 0))
      {
LABEL_43:
        double v95 = v35 + v23 * -0.5;
LABEL_46:
        id v28 = v117;
        double v94 = v40 * -0.5;
LABEL_47:
        uint64_t v103 = v87 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12SecureButton_drawingSize;
        double v104 = sub_1003ED398(v24* (v95+ *(double *)(v87 + OBJC_IVAR____TtC28ManagedAppDistributionDaemon12SecureButton_drawingSize) * 0.5- v41));
        objc_msgSend(v82, "drawInContext:atPoint:", a1, v104 / v24 + v120, sub_1003ED398(v24 * (v94 + *(double *)(v103 + 8) * 0.5 - v42)) / v24 + a3);
        CGContextRestoreGState(a1);

        goto LABEL_48;
      }
    }
    else
    {
      uint64_t v87 = v115;
      if (!v110) {
        goto LABEL_43;
      }
    }
    double v95 = v23 * -0.5;
    goto LABEL_46;
  }
LABEL_49:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_1003ECFB4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SecureButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SecureButton()
{
  return self;
}

id sub_1003ED0AC(void *a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  *(void *)&v4[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12SecureButton_style] = a1;
  *(void *)&v4[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12SecureButton_tag] = a2;
  v4[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12SecureButton_isRemote] = a3;
  id v6 = a1;
  id v7 = a2;
  id v8 = v6;
  id v9 = v7;
  uint64_t v10 = v4;
  sub_10029A620(v8, v9, (uint64_t)v50);
  uint64_t v11 = &v10[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12SecureButton_drawingPlan];
  double v13 = *((double *)&v51 + 1);
  double v12 = *(double *)&v51;
  long long v14 = v50[3];
  *((_OWORD *)v11 + 2) = v50[2];
  *((_OWORD *)v11 + 3) = v14;
  long long v15 = v51;
  *((_OWORD *)v11 + 4) = v50[4];
  *((_OWORD *)v11 + 5) = v15;
  long long v16 = v50[1];
  *(_OWORD *)uint64_t v11 = v50[0];
  *((_OWORD *)v11 + 1) = v16;
  SecureButtonTag.size.getter();
  if (v12 <= v17)
  {
    SecureButtonTag.size.getter();
    if (v13 <= v18)
    {
      SecureButtonTag.size.getter();
      double v12 = v19;
      double v13 = v20;
    }
  }
  sub_1000172F8(&qword_100662760);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A3FC0;
  SecureButtonTag.cornerRadius.getter();
  *(void *)(inited + 32) = v22;
  SecureButtonTag.cornerRadius.getter();
  *(void *)(inited + 40) = v23;
  SecureButtonTag.cornerRadius.getter();
  *(void *)(inited + 48) = v24;
  SecureButtonTag.cornerRadius.getter();
  *(void *)(inited + 56) = v25;
  uint64_t v26 = (void *)SecureButtonTag.borderColor.getter();
  id v27 = objc_msgSend(objc_allocWithZone((Class)UISPathDrawing), "initWithRoundedRectSize:cornerRadii:fillColor:", inited + 32, v26, v12, v13);
  swift_bridgeObjectRelease();

  *(void *)&v10[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12SecureButton_borderDrawing] = v27;
  uint64_t v28 = swift_initStackObject();
  *(_OWORD *)(v28 + 16) = xmmword_1005A3FC0;
  SecureButtonTag.cornerRadius.getter();
  double v30 = v29;
  SecureButtonTag.borderWidth.getter();
  *(double *)(v28 + 32) = v30 - v31;
  SecureButtonTag.cornerRadius.getter();
  double v33 = v32;
  SecureButtonTag.borderWidth.getter();
  *(double *)(v28 + 40) = v33 - v34;
  SecureButtonTag.cornerRadius.getter();
  double v36 = v35;
  SecureButtonTag.borderWidth.getter();
  *(double *)(v28 + 48) = v36 - v37;
  SecureButtonTag.cornerRadius.getter();
  double v39 = v38;
  SecureButtonTag.borderWidth.getter();
  *(double *)(v28 + 56) = v39 - v40;
  SecureButtonTag.borderWidth.getter();
  double v42 = v12 - (v41 + v41);
  SecureButtonTag.borderWidth.getter();
  double v44 = v13 - (v43 + v43);
  double v45 = (void *)SecureButtonTag.backgroundColor.getter();
  id v46 = objc_msgSend(objc_allocWithZone((Class)UISPathDrawing), "initWithRoundedRectSize:cornerRadii:fillColor:", v28 + 32, v45, v42, v44);
  swift_bridgeObjectRelease();

  *(void *)&v10[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12SecureButton_backgroundDrawing] = v46;
  uint64_t v47 = (double *)&v10[OBJC_IVAR____TtC28ManagedAppDistributionDaemon12SecureButton_drawingSize];
  *uint64_t v47 = v12;
  v47[1] = v13;

  v49.receiver = v10;
  v49.super_class = (Class)type metadata accessor for SecureButton();
  return objc_msgSendSuper2(&v49, "init");
}

unint64_t sub_1003ED340()
{
  unint64_t result = qword_10065E900;
  if (!qword_10065E900)
  {
    type metadata accessor for SecureButtonTag.ButtonImagePlacement();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065E900);
  }
  return result;
}

double sub_1003ED398(double a1)
{
  return floor(a1);
}

uint64_t sub_1003ED3A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v38[1] = a2;
  uint64_t v43 = a3;
  uint64_t v42 = type metadata accessor for InternalError();
  uint64_t v4 = __chkstk_darwin(v42);
  uint64_t v39 = (uint64_t)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v40 = (uint64_t)v38 - v7;
  __chkstk_darwin(v6);
  double v41 = (char *)v38 - v8;
  uint64_t v9 = type metadata accessor for MarketplaceKitError();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  double v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ManagedAppDistributionError();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  double v17 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a1 - 8);
  uint64_t v19 = __chkstk_darwin(v15);
  v38[0] = (char *)v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v44 = v18;
  double v21 = *(void (**)(void))(v18 + 16);
  uint64_t v23 = (char *)v38 - v22;
  v21();
  double v45 = v23;
  if (!swift_dynamicCast())
  {
    uint64_t v25 = v43;
    if (swift_dynamicCast())
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v25, v12, v9);
      uint64_t v24 = v44;
      return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v45, a1);
    }
    uint64_t v26 = (uint64_t)v41;
    if (swift_dynamicCast())
    {
      uint64_t v27 = v40;
      sub_1003EDAFC(v26, v40);
      uint64_t v28 = v39;
      sub_1003EDB60(v27, v39);
      int v29 = swift_getEnumCaseMultiPayload() - 1;
      uint64_t v24 = v44;
      switch(v29)
      {
        case 0:
          sub_1003EDBC4(v27);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v25, v28, v9);
          return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v45, a1);
        case 1:
          id v35 = [self bytes];
          sub_10017ADE0();
          Measurement.init(value:unit:)();
          sub_1003EDBC4(v27);
          double v36 = (unsigned int *)&enum case for MarketplaceKitError.insufficientStorageSpace(_:);
          goto LABEL_31;
        case 6:
          sub_1003EDBC4(v27);
          swift_bridgeObjectRelease();
          double v36 = (unsigned int *)&enum case for MarketplaceKitError.missingInstallVerificationToken(_:);
          goto LABEL_31;
        case 11:
          sub_1003EDBC4(v27);
          double v36 = (unsigned int *)&enum case for MarketplaceKitError.installationRestricted(_:);
          goto LABEL_31;
        case 12:
          sub_1003EDBC4(v27);
          double v36 = (unsigned int *)&enum case for MarketplaceKitError.ratingRestricted(_:);
          goto LABEL_31;
        case 13:
          sub_1003EDBC4(v27);
          goto LABEL_26;
        case 14:
          goto LABEL_20;
        case 16:
          sub_1003EDBC4(v27);
          double v36 = (unsigned int *)&enum case for MarketplaceKitError.noSupportedVariant(_:);
          goto LABEL_31;
        case 18:
          sub_1003EDBC4(v27);
          double v36 = (unsigned int *)&enum case for MarketplaceKitError.invalidManifest(_:);
          goto LABEL_31;
        case 20:
          sub_1003EDBC4(v27);
          double v36 = (unsigned int *)&enum case for MarketplaceKitError.featureUnavailable(_:);
          goto LABEL_31;
        case 25:
          sub_1003EDBC4(v27);
          double v36 = (unsigned int *)&enum case for MarketplaceKitError.networkError(_:);
          goto LABEL_31;
        default:
          sub_1003EDBC4(v27);
          uint64_t v27 = v28;
LABEL_20:
          sub_1003EDBC4(v27);
          break;
      }
    }
    else
    {
      int v30 = swift_dynamicCast();
      uint64_t v24 = v44;
      if (v30)
      {
        if (!(_BYTE)v46)
        {
LABEL_26:
          double v36 = (unsigned int *)&enum case for MarketplaceKitError.appNotInstalled(_:);
          goto LABEL_31;
        }
      }
      else
      {
        uint64_t v46 = 203;
        uint64_t v31 = v38[0];
        ((void (*)(void, char *, uint64_t))v21)(v38[0], v45, a1);
        if (_getErrorEmbeddedNSError<A>(_:)())
        {
          uint64_t v32 = a1;
          (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v31, a1);
        }
        else
        {
          swift_allocError();
          uint64_t v32 = a1;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v33, v31, a1);
        }
        type metadata accessor for Code(0);
        sub_1003EDAA4();
        char v34 = static _ErrorCodeProtocol.~= infix(_:_:)();
        swift_errorRelease();
        if (v34)
        {
          (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v25, enum case for MarketplaceKitError.networkError(_:), v9);
          a1 = v32;
          return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v45, a1);
        }
        type metadata accessor for AMSError(0);
        a1 = v32;
        if (swift_dynamicCast()) {
      }
        }
    }
    double v36 = (unsigned int *)&enum case for MarketplaceKitError.unknown(_:);
LABEL_31:
    (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v25, *v36, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v45, a1);
  }
  (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v43, enum case for MarketplaceKitError.unknown(_:), v9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  uint64_t v24 = v44;
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v45, a1);
}

unint64_t sub_1003EDAA4()
{
  unint64_t result = qword_10065B420;
  if (!qword_10065B420)
  {
    type metadata accessor for Code(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065B420);
  }
  return result;
}

uint64_t sub_1003EDAFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InternalError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003EDB60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InternalError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003EDBC4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InternalError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1003EDC20(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100455C1C(0, v1, 0);
  unint64_t result = (void *)sub_100458280(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v4;
  uint64_t v23 = a1 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_24;
    }
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v5);
    uint64_t v12 = v11[1];
    uint64_t v24 = *v11;
    unint64_t v14 = _swiftEmptyArrayStorage[2];
    unint64_t v13 = _swiftEmptyArrayStorage[3];
    unint64_t result = (void *)swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1) {
      unint64_t result = (void *)sub_100455C1C(v13 > 1, v14 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v14 + 1;
    uint64_t v15 = &_swiftEmptyArrayStorage[2 * v14];
    v15[4] = v24;
    v15[5] = v12;
    int64_t v8 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 >= v8) {
      goto LABEL_25;
    }
    uint64_t v7 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v10);
    if ((v16 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    int v4 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v5 & 0x3F));
    if (v17)
    {
      int64_t v8 = __clz(__rbit64(v17)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v21;
    }
    else
    {
      unint64_t v18 = v10 + 1;
      unint64_t v19 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v21;
      if (v10 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v8 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v10)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v10++);
            if (v20)
            {
              unint64_t v18 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v6;
    uint64_t v5 = v8;
    if (v6 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1003EDE2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[36] = a3;
  v4[37] = v3;
  v4[34] = a1;
  v4[35] = a2;
  uint64_t v5 = type metadata accessor for ManagedAppStatus.State();
  v4[38] = v5;
  v4[39] = *(void *)(v5 - 8);
  v4[40] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for ManagedAppDistributionError();
  v4[41] = v6;
  v4[42] = *(void *)(v6 - 8);
  v4[43] = swift_task_alloc();
  v4[44] = swift_task_alloc();
  sub_1000172F8(&qword_10065C3C0);
  v4[45] = swift_task_alloc();
  sub_1000172F8(&qword_10065BE00);
  v4[46] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for InternalError();
  v4[47] = v7;
  v4[48] = *(void *)(v7 - 8);
  v4[49] = swift_task_alloc();
  v4[50] = swift_task_alloc();
  sub_1000172F8(&qword_10065E4D0);
  v4[51] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  v4[52] = v8;
  v4[53] = *(void *)(v8 - 8);
  v4[54] = swift_task_alloc();
  v4[55] = swift_task_alloc();
  sub_1000172F8((uint64_t *)&unk_10065CA40);
  v4[56] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DDMPurchaseMethod();
  v4[57] = v9;
  v4[58] = *(void *)(v9 - 8);
  v4[59] = swift_task_alloc();
  return _swift_task_switch(sub_1003EE150, 0, 0);
}

uint64_t sub_1003EE150()
{
  uint64_t v52 = v0;
  uint64_t v1 = *(void *)(v0 + 456);
  uint64_t v2 = *(void *)(v0 + 464);
  uint64_t v3 = *(void *)(v0 + 448);
  int v4 = *(uint64_t **)(v0 + 296);
  uint64_t v6 = *v4;
  uint64_t v5 = (os_unfair_lock_s *)v4[1];
  *(void *)(v0 + 480) = v5;
  swift_retain();
  sub_1003119B0(14, v5, v3);
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    __break(1u);
LABEL_17:
    uint64_t result = sub_1003F6B6C(*(void *)(v0 + 296));
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  uint64_t v8 = *(void *)(v0 + 464);
  uint64_t v7 = *(void *)(v0 + 472);
  uint64_t v9 = *(void *)(v0 + 456);
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 32))(v7, *(void *)(v0 + 448), v9);
  int v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88))(v7, v9);
  if (v10 == enum case for DDMPurchaseMethod.volumePurchaseProgram(_:))
  {
    uint64_t v11 = *(void *)(v0 + 296);
    static Logger.vpp.getter();
    sub_1003F6B1C(v11);
    sub_1003F6B1C(v11);
    sub_1003F6B1C(v11);
    sub_1003F6B1C(v11);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v12, v13))
    {
      uint64_t v32 = *(void *)(v0 + 440);
      uint64_t v33 = *(void *)(v0 + 416);
      uint64_t v34 = *(void *)(v0 + 424);
      uint64_t v35 = *(void *)(v0 + 296);
      sub_1003F6B6C(v35);
      sub_1003F6B6C(v35);
      sub_1003F6B6C(v35);
      sub_1003F6B6C(v35);

      uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
      v24(v32, v33);
      goto LABEL_12;
    }
    uint64_t v48 = v6;
    uint64_t v14 = *(void *)(v0 + 296);
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = (void *)swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 138412546;
    unint64_t v17 = *(void **)(v14 + 40);
    *(void *)(v0 + 256) = v17;
    id v18 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v16 = v17;
    sub_1003F6B6C(v14);
    sub_1003F6B6C(v14);
    *(_WORD *)(v15 + 12) = 2082;
    swift_retain();
    uint64_t v19 = sub_100311910(4, v5);
    unint64_t v21 = v20;
    swift_release();
    if (v21)
    {
      uint64_t v22 = *(void *)(v0 + 424);
      uint64_t v46 = *(void *)(v0 + 416);
      uint64_t v47 = *(void *)(v0 + 440);
      uint64_t v23 = *(void *)(v0 + 296);
      *(void *)(v0 + 264) = sub_1000143F4(v19, v21, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1003F6B6C(v23);
      sub_1003F6B6C(v23);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "[%@] Requesting metadata for installation of %{public}s", (uint8_t *)v15, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v24(v47, v46);
      uint64_t v6 = v48;
LABEL_12:
      *(void *)(v0 + 488) = v24;
      uint64_t v36 = *(void *)(*(void *)(v0 + 296) + 16);
      *(void *)(v0 + 496) = v36;
      long long v37 = *(_OWORD *)(v36 + 72);
      long long v38 = *(_OWORD *)(v36 + 88);
      long long v39 = *(_OWORD *)(v36 + 104);
      *(_OWORD *)(v0 + 111) = *(_OWORD *)(v36 + 119);
      *(_OWORD *)(v0 + 80) = v38;
      *(_OWORD *)(v0 + 96) = v39;
      *(_OWORD *)(v0 + 64) = v37;
      long long v40 = *(_OWORD *)(v36 + 24);
      long long v41 = *(_OWORD *)(v36 + 56);
      double v50 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10065E068
                                                                                                  + dword_10065E068);
      *(_OWORD *)(v0 + 32) = *(_OWORD *)(v36 + 40);
      *(_OWORD *)(v0 + 48) = v41;
      *(_OWORD *)(v0 + 16) = v40;
      uint64_t v42 = (void *)swift_task_alloc();
      *(void *)(v0 + 504) = v42;
      *uint64_t v42 = v0;
      v42[1] = sub_1003EE728;
      uint64_t v43 = *(void *)(v0 + 280);
      uint64_t v44 = *(void *)(v0 + 288);
      uint64_t v45 = *(void *)(v0 + 272);
      return v50(v0 + 128, v6, (uint64_t)v5, v0 + 16, v45, v43, v44);
    }
    goto LABEL_17;
  }
  if (v10 != enum case for DDMPurchaseMethod.manifest(_:)) {
    return _assertionFailure(_:_:file:line:flags:)();
  }
  uint64_t v25 = *(void *)(v0 + 360);
  swift_retain();
  sub_1003119F0(10, v5, v25);
  swift_release();
  uint64_t v26 = type metadata accessor for URL();
  *(void *)(v0 + 536) = v26;
  uint64_t v27 = *(void *)(v26 - 8);
  *(void *)(v0 + 544) = v27;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26);
  if (result == 1) {
    goto LABEL_18;
  }
  uint64_t v29 = *(void *)(*(void *)(v0 + 296) + 40);
  objc_super v49 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100662770 + dword_100662770);
  int v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 552) = v30;
  *int v30 = v0;
  v30[1] = sub_1003EF4A4;
  uint64_t v31 = *(void *)(v0 + 360);
  return v49(v31, v29);
}

uint64_t sub_1003EE728()
{
  *(void *)(*(void *)v1 + 512) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003EED38;
  }
  else {
    uint64_t v2 = sub_1003EE83C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003EE83C()
{
  uint64_t v35 = v0;
  sub_10001733C((uint64_t)(v0 + 18), (uint64_t)(v0 + 26), &qword_10065C4D0);
  sub_10001733C((uint64_t)(v0 + 26), (uint64_t)(v0 + 24), &qword_10065C4D0);
  uint64_t v1 = v0[25];
  if (v1)
  {
    uint64_t v2 = v0[24];
    sub_10018B0F0((uint64_t)(v0 + 26));
    uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_100662778 + dword_100662778);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[65] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1003EEE3C;
    uint64_t v4 = v0[34];
    return v33(v2, v1, v4);
  }
  else
  {
    uint64_t v6 = v0[37];
    sub_1001C5E48((uint64_t)(v0 + 16));
    static Logger.vpp.getter();
    sub_1003F6B1C(v6);
    sub_1003F6B1C(v6);
    sub_1003F6B1C(v6);
    sub_1003F6B1C(v6);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      log = v7;
      uint64_t v9 = (os_unfair_lock_s *)v0[60];
      uint64_t v10 = v0[37];
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 138412546;
      os_log_type_t v13 = *(void **)(v10 + 40);
      v0[28] = v13;
      id v14 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v12 = v13;
      sub_1003F6B6C(v10);
      sub_1003F6B6C(v10);
      *(_WORD *)(v11 + 12) = 2082;
      swift_retain();
      uint64_t v15 = sub_100311A30(0, v9);
      char v17 = v16;
      swift_release();
      if (v17)
      {
        uint64_t result = sub_1003F6B6C(v0[37]);
        __break(1u);
        return result;
      }
      uint64_t v30 = v0[54];
      uint64_t v31 = (void (*)(uint64_t, uint64_t))v0[61];
      uint64_t v29 = v0[52];
      uint64_t v18 = v0[37];
      v0[29] = v15;
      uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[30] = sub_1000143F4(v19, v20, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1003F6B6C(v18);
      sub_1003F6B6C(v18);
      _os_log_impl((void *)&_mh_execute_header, log, v8, "[%@] Unable to purchase '%{public}s' with missing metadata", (uint8_t *)v11, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v31(v30, v29);
    }
    else
    {
      unint64_t v21 = (void (*)(uint64_t, uint64_t))v0[61];
      uint64_t v22 = v0[54];
      uint64_t v23 = v0[52];
      uint64_t v24 = v0[37];
      sub_1003F6B6C(v24);
      sub_1003F6B6C(v24);
      sub_1003F6B6C(v24);
      sub_1003F6B6C(v24);

      v21(v22, v23);
    }
    uint64_t v25 = v0[41];
    uint64_t v26 = v0[42];
    sub_1003F6DB4((unint64_t *)&qword_10065B910, (void (*)(uint64_t))&type metadata accessor for ManagedAppDistributionError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(v26 + 104))(v27, enum case for ManagedAppDistributionError.unrecoverableError(_:), v25);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = (uint64_t (*)(void))v0[1];
    return v28();
  }
}

uint64_t sub_1003EED38()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003EEE3C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1 + 208;
  *(void *)(*v1 + 528) = v0;
  swift_task_dealloc();
  sub_10018AFE0(v3);
  if (v0)
  {
    uint64_t v4 = sub_1003EF074;
  }
  else
  {
    sub_1001C5E48(v2 + 128);
    uint64_t v4 = sub_1003EEF78;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1003EEF78()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003EF074()
{
  uint64_t v1 = v0[66];
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[48];
  sub_1001C5E48((uint64_t)(v0 + 16));
  uint64_t v4 = type metadata accessor for ManagedAppStatus.Reason();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v6(v2, 1, 1, v4);
  v0[31] = v1;
  swift_errorRetain();
  sub_1000172F8(&qword_10065B260);
  char v7 = swift_dynamicCast();
  os_log_type_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v3 + 56);
  if (v7)
  {
    uint64_t v10 = v0[49];
    uint64_t v9 = v0[50];
    uint64_t v11 = v0[46];
    v8(v11, 0, 1, v0[47]);
    sub_1003F6BC0(v11, v9, (uint64_t (*)(void))type metadata accessor for InternalError);
    sub_1003F6D4C(v9, v10, (uint64_t (*)(void))type metadata accessor for InternalError);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v14 = v0[49];
    uint64_t v13 = v0[50];
    if (EnumCaseMultiPayload)
    {
      sub_1003F6C28(v0[50], (uint64_t (*)(void))type metadata accessor for InternalError);
      sub_1003F6C28(v14, (uint64_t (*)(void))type metadata accessor for InternalError);
    }
    else
    {
      long long v38 = v6;
      uint64_t v33 = v0[43];
      uint64_t v32 = v0[44];
      uint64_t v34 = v0[41];
      uint64_t v35 = v0[42];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v32, v14, v34);
      (*(void (**)(uint64_t, void, uint64_t))(v35 + 104))(v33, enum case for ManagedAppDistributionError.licenseNotFound(_:), v34);
      char v39 = static ManagedAppDistributionError.== infix(_:_:)();
      uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
      v36(v33, v34);
      v36(v32, v34);
      sub_1003F6C28(v13, (uint64_t (*)(void))type metadata accessor for InternalError);
      if (v39)
      {
        uint64_t v37 = v0[51];
        sub_10001729C(v37, &qword_10065E4D0);
        (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v37, enum case for ManagedAppStatus.Reason.licenseNotFound(_:), v4);
        v38(v37, 0, 1, v4);
      }
    }
  }
  else
  {
    uint64_t v15 = v0[46];
    v8(v15, 1, 1, v0[47]);
    sub_10001729C(v15, &qword_10065BE00);
  }
  char v16 = (os_unfair_lock_s *)v0[60];
  uint64_t v18 = v0[39];
  uint64_t v17 = v0[40];
  uint64_t v19 = v0[38];
  v0[71] = *(void *)(*(void *)(v0[62] + 16) + 152);
  (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, enum case for ManagedAppStatus.State.failed(_:), v19);
  swift_retain();
  swift_retain();
  uint64_t v20 = sub_100311910(4, v16);
  uint64_t v22 = v21;
  uint64_t result = swift_release();
  v0[72] = v22;
  if (v22)
  {
    uint64_t v24 = (os_unfair_lock_s *)v0[60];
    swift_retain();
    char v25 = sub_100311928(9, v24);
    swift_release();
    uint64_t v26 = (void *)swift_task_alloc();
    v0[73] = v26;
    *uint64_t v26 = v0;
    if (v25 == 2)
    {
      v26[1] = sub_1003F6DFC;
      uint64_t v27 = v0[51];
      uint64_t v28 = v0[40];
      uint64_t v29 = v20;
      uint64_t v30 = v22;
      char v31 = 0;
    }
    else
    {
      v26[1] = sub_1003EF6F4;
      uint64_t v27 = v0[51];
      uint64_t v28 = v0[40];
      uint64_t v29 = v20;
      uint64_t v30 = v22;
      char v31 = v25;
    }
    return sub_10023FB0C(v28, v27, v29, v30, v31);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003EF4A4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 560) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1003EF5D4;
  }
  else
  {
    (*(void (**)(void, void))(v2[68] + 8))(v2[45], v2[67]);
    uint64_t v3 = sub_1003F6E00;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003EF5D4()
{
  (*(void (**)(void, void))(v0[68] + 8))(v0[45], v0[67]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1003EF6F4()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[74] = v0;
    (*(void (**)(void, void))(v2[39] + 8))(v2[40], v2[38]);
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_1003EF97C;
  }
  else
  {
    (*(void (**)(void, void))(v2[39] + 8))(v2[40], v2[38]);
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_1003EF850;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003EF850()
{
  uint64_t v1 = *(void *)(v0 + 408);
  swift_willThrow();
  swift_release();
  sub_10001729C(v1, &qword_10065E4D0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1003EF97C()
{
  uint64_t v1 = *(void *)(v0 + 408);
  swift_release();
  swift_errorRelease();
  sub_10001729C(v1, &qword_10065E4D0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1003EFAA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, os_unfair_lock_s *a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, uint64_t a7@<X8>)
{
  LODWORD(v191) = a6;
  uint64_t v186 = a4;
  uint64_t v195 = a1;
  uint64_t v11 = type metadata accessor for Platform();
  uint64_t v148 = *(void *)(v11 - 8);
  uint64_t v149 = v11;
  __chkstk_darwin(v11);
  v147 = (char *)&v145 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000172F8(&qword_10065C3C0);
  __chkstk_darwin(v13 - 8);
  uint64_t v192 = (uint64_t)&v145 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  v193 = (char *)&v145 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for AppPackageTemplate();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v181 = (int *)v18;
  uint64_t v182 = v19;
  __chkstk_darwin(v18);
  uint64_t v190 = (uint64_t)&v145 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018AB94(a5);
  uint64_t v21 = (int *)type metadata accessor for AppInstallTemplate();
  uint64_t v22 = a7 + v21[7];
  uint64_t v194 = v16;
  uint64_t v23 = *(void (**)(void))(v16 + 56);
  uint64_t v183 = v22;
  uint64_t v196 = v23;
  uint64_t v197 = v16 + 56;
  v23();
  uint64_t v24 = (void *)(a7 + v21[10]);
  *uint64_t v24 = 0;
  v24[1] = 0;
  char v25 = (void *)(a7 + v21[14]);
  *char v25 = 0;
  v25[1] = 0;
  uint64_t v26 = a7 + v21[16];
  uint64_t v27 = type metadata accessor for UUID();
  uint64_t v28 = *(void *)(v27 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v26, 1, 1, v27);
  *(unsigned char *)(a7 + v21[17]) = 2;
  uint64_t v29 = (uint64_t *)(a7 + v21[19]);
  long long v189 = xmmword_1005A5CE0;
  *(_OWORD *)uint64_t v29 = xmmword_1005A5CE0;
  uint64_t v30 = v21[20];
  uint64_t v184 = v29;
  uint64_t v185 = v30;
  *(void *)(a7 + v30) = 0;
  uint64_t v31 = a7 + v21[21];
  *(void *)uint64_t v31 = 0;
  *(unsigned char *)(v31 + 8) = 1;
  uint64_t v32 = v21[22];
  uint64_t v146 = a7 + v21[30];
  static Platform.current.getter();
  *(unsigned char *)(a7 + v21[31]) = 0;
  uint64_t v33 = (void *)(a7 + v21[32]);
  void *v33 = 0;
  v33[1] = 0;
  *(_OWORD *)(a7 + v21[33]) = v189;
  uint64_t v34 = (void *)(a7 + v21[34]);
  *uint64_t v34 = 0;
  v34[1] = 0;
  uint64_t v35 = a7 + v21[35];
  *(void *)uint64_t v35 = 0;
  *(void *)(v35 + 8) = 0;
  *(unsigned char *)(v35 + 16) = -1;
  uint64_t v36 = (void *)(a7 + v21[36]);
  void *v36 = 0;
  v36[1] = 0;
  *(unsigned char *)(a7 + v21[37]) = 0;
  uint64_t v178 = v28;
  uint64_t v179 = v27;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(a7, v195, v27);
  uint64_t v37 = a7 + v21[13];
  uint64_t v38 = type metadata accessor for AppInstallRequestType();
  uint64_t v176 = *(void *)(v38 - 8);
  uint64_t v177 = v38;
  char v39 = *(void (**)(uint64_t, uint64_t))(v176 + 16);
  uint64_t v180 = a2;
  v39(v37, a2);
  *(_DWORD *)(a7 + v32) = v191 & 0x1010101;
  uint64_t result = type metadata accessor for AppStoreItem(0);
  uint64_t v41 = *(int *)(result + 28);
  uint64_t v191 = a3;
  uint64_t v42 = *(void *)(a3 + v41);
  if (!*(void *)(v42 + 16))
  {
    __break(1u);
    goto LABEL_23;
  }
  *(void *)&long long v189 = result;
  uint64_t v43 = (int *)type metadata accessor for AppStorePackage(0);
  uint64_t v44 = v42
      + ((*(unsigned __int8 *)(*((void *)v43 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v43 - 1) + 80));
  uint64_t v45 = v194 + 16;
  uint64_t v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v194 + 16);
  uint64_t result = v46(v193, v44, v15);
  if (!*(void *)(v42 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v174 = (void (*)(uint64_t, uint64_t, uint64_t))v46;
  uint64_t v175 = v45;
  uint64_t v47 = *(void *)(v44 + v43[5]);
  uint64_t v48 = (uint64_t *)(v44 + v43[6]);
  uint64_t v172 = *v48;
  uint64_t v173 = v47;
  int v171 = *((unsigned __int8 *)v48 + 8);
  objc_super v49 = (uint64_t *)(v44 + v43[12]);
  uint64_t v50 = v49[1];
  uint64_t v187 = v15;
  if (v50)
  {
    uint64_t v51 = v49[6];
    uint64_t v188 = v49[5];
    uint64_t v52 = v49[4];
    uint64_t v168 = v49[3];
    uint64_t v169 = v52;
    uint64_t v167 = v49[2];
    uint64_t v200 = *v49;
    uint64_t v53 = v200;
    uint64_t v201 = v50;
    uint64_t v202 = v167;
    uint64_t v203 = v168;
    uint64_t v204 = v52;
    uint64_t v205 = v188;
    uint64_t v206 = v51;
    swift_bridgeObjectRetain();
    uint64_t v54 = swift_bridgeObjectRetain();
    uint64_t v170 = sub_10018A9D8(v54, v55, v56, v57, v58, v59, v60);
    uint64_t v62 = v61;
    uint64_t result = sub_10018B054(v53, v50);
    if (*(void *)(v42 + 16))
    {
      uint64_t v15 = v187;
      goto LABEL_7;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v62 = 0;
  uint64_t v170 = 0;
LABEL_7:
  BOOL v63 = (uint64_t *)(v44 + v43[9]);
  uint64_t v65 = *v63;
  uint64_t v64 = v63[1];
  uint64_t v168 = v63[2];
  uint64_t v169 = v64;
  uint64_t v66 = v63[3];
  uint64_t v68 = v63[4];
  uint64_t v67 = v63[5];
  uint64_t v166 = v68;
  uint64_t v167 = v66;
  uint64_t v165 = v67;
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v196)(v192, 1, 1, v15);
  if (!*(void *)(v42 + 16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int v161 = v21;
  uint64_t v162 = v65;
  uint64_t v163 = v62;
  uint64_t v164 = a7;
  double v69 = (uint64_t *)(v44 + v43[8]);
  unint64_t v160 = v69[1];
  if (v160 >> 60 == 15)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v70 = v15;
  uint64_t v71 = (uint64_t *)(v44 + v43[7]);
  uint64_t v188 = v71[7];
  uint64_t v72 = v71[6];
  uint64_t v157 = v71[5];
  uint64_t v158 = v72;
  uint64_t v73 = v71[4];
  uint64_t v155 = v71[3];
  uint64_t v156 = v73;
  unint64_t v75 = v71[1];
  uint64_t v74 = v71[2];
  int v159 = *(unsigned __int8 *)(v44 + v43[13]);
  uint64_t v150 = *v71;
  uint64_t v76 = v150;
  unint64_t v151 = v75;
  uint64_t v77 = v181;
  uint64_t v78 = v190;
  uint64_t v79 = v190 + v181[6];
  double v80 = (uint64_t *)(v190 + v181[7]);
  id v81 = (uint64_t *)(v190 + v181[9]);
  id v82 = (void *)(v190 + v181[10]);
  uint64_t v153 = v190 + v181[11];
  uint64_t v154 = v74;
  uint64_t v152 = *v69;
  v196();
  uint64_t v83 = v78 + v77[14];
  *(void *)uint64_t v83 = 0;
  *(void *)(v83 + 8) = 0;
  *(unsigned char *)(v83 + 16) = -1;
  uint64_t v84 = (void *)(v78 + v77[15]);
  *uint64_t v84 = 0;
  v84[1] = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v194 + 32))(v78, v193, v70);
  *(void *)(v78 + v77[5]) = v173;
  *(void *)uint64_t v79 = v172;
  *(unsigned char *)(v79 + 8) = v171;
  uint64_t v85 = v169;
  uint64_t v86 = v162;
  uint64_t v87 = v163;
  uint64_t *v80 = v170;
  v80[1] = v87;
  *(unsigned char *)(v78 + v77[8]) = 0;
  uint64_t *v81 = v86;
  v81[1] = v85;
  uint64_t v89 = v167;
  uint64_t v88 = v168;
  v81[2] = v168;
  void v81[3] = v89;
  uint64_t v90 = v165;
  v81[4] = v166;
  v81[5] = v90;
  void *v82 = 0;
  v82[1] = 0;
  v82[4] = 0;
  v82[5] = 0;
  v82[2] = 1;
  v82[3] = 0;
  sub_100254E0C(v86, v85, v88);
  unint64_t v91 = v75;
  uint64_t v92 = v154;
  uint64_t v93 = v155;
  uint64_t v95 = v156;
  uint64_t v94 = v157;
  uint64_t v96 = v158;
  sub_1003B5A3C(v76, v91, v154, v155, v156);
  uint64_t v97 = v152;
  unint64_t v98 = v160;
  sub_10018B2A8(v152, v160);
  sub_10027ED88(v192, v153);
  *(unsigned char *)(v78 + v77[12]) = v159;
  uint64_t v99 = v78 + v77[13];
  unint64_t v100 = v151;
  *(void *)uint64_t v99 = v150;
  *(void *)(v99 + 8) = v100;
  *(void *)(v99 + 16) = v92;
  *(void *)(v99 + 24) = v93;
  *(void *)(v99 + 32) = v95;
  *(void *)(v99 + 40) = v94;
  uint64_t v101 = v188;
  *(void *)(v99 + 48) = v96;
  *(void *)(v99 + 56) = v101;
  *(void *)(v99 + 64) = v97;
  *(void *)(v99 + 72) = v98;
  *(_OWORD *)(v99 + 80) = 0u;
  *(_OWORD *)(v99 + 96) = 0u;
  uint64_t v102 = v191 + *(int *)(v189 + 24);
  uint64_t v103 = *(void *)(v102 + 24);
  double v104 = v161;
  uint64_t v105 = v164;
  id v106 = (void *)(v164 + v161[8]);
  *id v106 = *(void *)(v102 + 16);
  v106[1] = v103;
  uint64_t v107 = *(void *)(v102 + 40);
  double v108 = (void *)(v105 + v104[9]);
  *double v108 = *(void *)(v102 + 32);
  v108[1] = v107;
  uint64_t v109 = *(void *)(v102 + 72);
  id v110 = (void *)(v105 + v104[29]);
  void *v110 = *(void *)(v102 + 64);
  v110[1] = v109;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  double v111 = v186;
  swift_retain();
  uint64_t v112 = sub_100311954(12, v111);
  uint64_t v114 = v113;
  swift_release();
  if (v114 == 2) {
    uint64_t v115 = 0;
  }
  else {
    uint64_t v115 = v112;
  }
  if (v114 == 2) {
    uint64_t v116 = 0;
  }
  else {
    uint64_t v116 = v114;
  }
  uint64_t v117 = v105 + v104[23];
  uint64_t v118 = v105 + v104[24];
  unint64_t v119 = (uint64_t *)(v105 + v104[15]);
  uint64_t *v119 = v115;
  v119[1] = v116;
  sub_1000172F8(&qword_10065E0A0);
  unint64_t v120 = (*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80);
  uint64_t v121 = swift_allocObject();
  *(_OWORD *)(v121 + 16) = xmmword_1005A3EC0;
  uint64_t v122 = v121 + v120;
  uint64_t v123 = v189;
  uint64_t v124 = v78;
  uint64_t v125 = v191;
  sub_1003F6D4C(v124, v122, (uint64_t (*)(void))type metadata accessor for AppPackageTemplate);
  *(void *)(v105 + v104[18]) = v121;
  *(void *)(v105 + v104[5]) = sub_1005163F0();
  uint64_t v126 = v105 + v104[6];
  *(void *)uint64_t v126 = *(void *)(v102 + 272);
  *(unsigned char *)(v126 + 8) = 0;
  *(unsigned char *)(v105 + v104[27]) = *(unsigned char *)(v102 + 204);
  *(void *)uint64_t v117 = *(void *)(v102 + 208);
  *(unsigned char *)(v117 + 8) = 0;
  *(void *)uint64_t v118 = *(void *)(v102 + 96);
  *(unsigned char *)(v118 + 8) = 0;
  uint64_t v127 = v183;
  sub_10001729C(v183, &qword_10065C3C0);
  uint64_t v128 = v187;
  v174(v127, v125 + *(int *)(v123 + 20), v187);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v196)(v127, 0, 1, v128);
  int v129 = *(unsigned __int8 *)(v102 + 320);
  uint64_t v130 = v195;
  if (v129 != 2)
  {
    unint64_t v131 = v147;
    if (v129) {
      static Platform.macOS.getter();
    }
    else {
      static Platform.iOS.getter();
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v148 + 40))(v146, v131, v149);
  }
  v132 = (uint64_t *)(v125 + *(int *)(v123 + 32));
  uint64_t v133 = *v132;
  unint64_t v134 = v132[1];
  uint64_t v135 = v184;
  uint64_t v136 = *v184;
  unint64_t v137 = v184[1];
  *uint64_t v184 = v133;
  v135[1] = v134;
  sub_10018B2A8(v133, v134);
  sub_10018AE44(v136, v137);
  sub_1003B4730();
  memcpy(v199, (const void *)v102, sizeof(v199));
  sub_1001C65EC((uint64_t)v199);
  id v138 = sub_10050BEA8((uint64_t)v199);
  [v138 copy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();

  swift_dynamicCast();
  uint64_t v139 = v198;
  uint64_t v140 = v185;

  *(void *)(v105 + v140) = v139;
  swift_retain();
  uint64_t v141 = sub_100311910(4, v111);
  uint64_t v143 = v142;
  uint64_t result = swift_release();
  if (v143)
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v180, v177);
    (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v130, v179);
    sub_1003F6C28(v190, (uint64_t (*)(void))type metadata accessor for AppPackageTemplate);
    uint64_t v144 = (uint64_t *)(v105 + v104[11]);
    *uint64_t v144 = v141;
    v144[1] = v143;
    *(unsigned char *)(v105 + v104[25]) = 1;
    *(unsigned char *)(v105 + v104[28]) = 1;
    *(unsigned char *)(v105 + v104[26]) = 2;
    uint64_t result = sub_1003F6C28(v125, type metadata accessor for AppStoreItem);
    *(unsigned char *)(v105 + v104[12]) = 0;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1003F05B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[21] = a4;
  v5[22] = a5;
  v5[19] = a2;
  v5[20] = a3;
  v5[18] = a1;
  type metadata accessor for EnterpriseApp();
  v5[23] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for AppInstallRequestType();
  v5[24] = v6;
  v5[25] = *(void *)(v6 - 8);
  v5[26] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  v5[27] = v7;
  v5[28] = *(void *)(v7 - 8);
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  v5[31] = v8;
  v5[32] = *(void *)(v8 - 8);
  v5[33] = swift_task_alloc();
  return _swift_task_switch(sub_1003F0770, 0, 0);
}

uint64_t sub_1003F0770()
{
  uint64_t v50 = v0;
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v5 = *(void **)(v0 + 160);
  static Logger.vpp.getter();
  uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v48(v1, v4, v2);
  id v6 = v5;
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v45 = *(void *)(v0 + 256);
    uint64_t v46 = *(void *)(v0 + 248);
    uint64_t v47 = *(void *)(v0 + 264);
    uint64_t v42 = *(void *)(v0 + 240);
    uint64_t v43 = *(void *)(v0 + 224);
    uint64_t v41 = *(void *)(v0 + 216);
    uint64_t v9 = *(void **)(v0 + 160);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(void *)(v0 + 128) = v9;
    uint64_t v49 = v44;
    *(_DWORD *)uint64_t v10 = 138412546;
    log = v7;
    id v12 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v11 = v9;

    *(_WORD *)(v10 + 12) = 2082;
    sub_1003F6DB4((unint64_t *)&qword_100665D30, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 136) = sub_1000143F4(v13, v14, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v41);
    _os_log_impl((void *)&_mh_execute_header, log, v8, "[%@] Enqueuing enterprise manifest install '%{public}s", (uint8_t *)v10, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v47, v46);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 256);
    uint64_t v15 = *(void *)(v0 + 264);
    uint64_t v18 = *(void *)(v0 + 240);
    uint64_t v17 = *(void *)(v0 + 248);
    uint64_t v19 = *(void *)(v0 + 216);
    uint64_t v20 = *(void *)(v0 + 224);
    uint64_t v21 = *(void **)(v0 + 160);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  uint64_t v22 = *(void *)(v0 + 232);
  uint64_t v23 = *(void *)(v0 + 208);
  uint64_t v24 = *(void *)(v0 + 192);
  uint64_t v25 = *(void *)(v0 + 200);
  uint64_t v27 = *(void *)(v0 + 176);
  uint64_t v26 = *(void *)(v0 + 184);
  uint64_t v28 = *(void *)(v0 + 168);
  uint64_t v29 = *(void *)(v0 + 144);
  v48(v22, *(void *)(v0 + 152), *(void *)(v0 + 216));
  (*(void (**)(uint64_t, void, uint64_t))(v25 + 104))(v23, enum case for AppInstallRequestType.upp(_:), v24);
  sub_1003F6D4C(v28, v26, (uint64_t (*)(void))type metadata accessor for EnterpriseApp);
  uint64_t v30 = *(os_unfair_lock_s **)(v27 + 8);
  uint64_t v31 = *(void *)(v27 + 16);
  long long v32 = *(_OWORD *)(v31 + 88);
  long long v33 = *(_OWORD *)(v31 + 104);
  long long v34 = *(_OWORD *)(v31 + 72);
  *(_OWORD *)(v0 + 111) = *(_OWORD *)(v31 + 119);
  *(_OWORD *)(v0 + 80) = v32;
  *(_OWORD *)(v0 + 96) = v33;
  *(_OWORD *)(v0 + 64) = v34;
  long long v35 = *(_OWORD *)(v31 + 56);
  long long v36 = *(_OWORD *)(v31 + 40);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v31 + 24);
  *(_OWORD *)(v0 + 32) = v36;
  *(_OWORD *)(v0 + 48) = v35;
  swift_retain();
  sub_10018AB28(v0 + 16);
  sub_1003F0C04(v22, v23, v26, v30, v0 + 16, v29);
  uint64_t v37 = *(void *)(v0 + 144);
  *(unsigned char *)(v37 + *(int *)(type metadata accessor for AppInstallTemplate() + 68)) = 3;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
  return v38();
}

uint64_t sub_1003F0C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, os_unfair_lock_s *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  v208 = a4;
  uint64_t v209 = a2;
  uint64_t v210 = a1;
  uint64_t v178 = type metadata accessor for LogKey.Prefix();
  uint64_t v176 = *(void *)(v178 - 8);
  __chkstk_darwin(v178);
  uint64_t v177 = (char *)&v150 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AppPackageTemplate();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v174 = (int *)v10;
  uint64_t v175 = v11;
  __chkstk_darwin(v10);
  uint64_t v191 = (uint64_t)&v150 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v185 = (char *)&v150 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v180 = (char *)&v150 - v17;
  uint64_t v18 = sub_1000172F8(&qword_10065BCD0);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v188 = (char *)&v150 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v187 = (char *)&v150 - v21;
  uint64_t v211 = type metadata accessor for Platform();
  uint64_t v206 = *(void *)(v211 - 8);
  uint64_t v22 = __chkstk_darwin(v211);
  uint64_t v179 = (char *)&v150 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  long long v189 = (char *)&v150 - v24;
  uint64_t v25 = sub_1000172F8(&qword_10065C3C0);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v184 = (uint64_t)&v150 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v181 = (char *)&v150 - v29;
  __chkstk_darwin(v28);
  uint64_t v186 = (char *)&v150 - v30;
  uint64_t v31 = (int *)type metadata accessor for AppInstallTemplate();
  long long v32 = (void (*)(uint64_t, char *, uint64_t))(a6 + v31[7]);
  uint64_t v190 = v14;
  long long v33 = *(void (**)(void))(v14 + 56);
  v207 = v32;
  uint64_t v203 = v13;
  uint64_t v182 = v33;
  uint64_t v183 = v14 + 56;
  v33();
  long long v34 = (void *)(a6 + v31[10]);
  *long long v34 = 0;
  v34[1] = 0;
  uint64_t v197 = v34;
  long long v35 = (void *)(a6 + v31[14]);
  void *v35 = 0;
  v35[1] = 0;
  uint64_t v201 = v35;
  uint64_t v36 = a6 + v31[16];
  uint64_t v37 = type metadata accessor for UUID();
  uint64_t v38 = *(void *)(v37 - 8);
  char v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56);
  uint64_t v202 = (void *)v36;
  v39(v36, 1, 1, v37);
  *(unsigned char *)(a6 + v31[17]) = 2;
  uint64_t v40 = (_OWORD *)(a6 + v31[19]);
  long long v205 = xmmword_1005A5CE0;
  uint64_t v200 = v40;
  *uint64_t v40 = xmmword_1005A5CE0;
  uint64_t v204 = v31[20];
  *(void *)(a6 + v204) = 0;
  uint64_t v41 = a6 + v31[21];
  *(void *)uint64_t v41 = 0;
  *(unsigned char *)(v41 + 8) = 1;
  *(_DWORD *)(a6 + v31[22]) = 2;
  uint64_t v42 = a6 + v31[23];
  *(void *)uint64_t v42 = 0;
  *(unsigned char *)(v42 + 8) = 1;
  uint64_t v43 = a6 + v31[24];
  *(void *)uint64_t v43 = 0;
  *(unsigned char *)(v43 + 8) = 1;
  uint64_t v196 = a6 + v31[30];
  static Platform.current.getter();
  *(unsigned char *)(a6 + v31[31]) = 0;
  uint64_t v44 = (void *)(a6 + v31[32]);
  void *v44 = 0;
  v44[1] = 0;
  v193 = v44;
  uint64_t v194 = a6 + v31[33];
  *(_OWORD *)uint64_t v194 = v205;
  uint64_t v45 = (void *)(a6 + v31[34]);
  void *v45 = 0;
  v45[1] = 0;
  uint64_t v195 = v45;
  uint64_t v46 = a6 + v31[35];
  *(void *)uint64_t v46 = 0;
  *(void *)(v46 + 8) = 0;
  *(unsigned char *)(v46 + 16) = -1;
  uint64_t v47 = (void *)(a6 + v31[36]);
  *uint64_t v47 = 0;
  v47[1] = 0;
  uint64_t v198 = v46;
  uint64_t v199 = v47;
  *(unsigned char *)(a6 + v31[37]) = 0;
  sub_100280F38(a5, 3uLL, (uint64_t)v213);
  sub_10001733C((uint64_t)v213, (uint64_t)v216, &qword_10065BCD8);
  int v192 = sub_1001C3CF0((uint64_t)v216);
  if (v192 == 1)
  {
    sub_10018AB94(a5);
    type metadata accessor for EnterpriseIngestTask.Error(0);
    sub_1003F6DB4(&qword_10065E098, (void (*)(uint64_t))type metadata accessor for EnterpriseIngestTask.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    uint64_t v48 = type metadata accessor for AppInstallRequestType();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v209, v48);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v210, v37);
    sub_1003F6C28(a3, (uint64_t (*)(void))type metadata accessor for EnterpriseApp);
    uint64_t v49 = v206;
LABEL_22:
    sub_10001729C((uint64_t)v207, &qword_10065C3C0);
    swift_bridgeObjectRelease();
    if (v192 != 1)
    {
      uint64_t v96 = a6 + v31[13];
      uint64_t v97 = type metadata accessor for AppInstallRequestType();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v97 - 8) + 8))(v96, v97);
    }
    swift_bridgeObjectRelease();
    sub_10001729C((uint64_t)v202, &qword_10065C9B0);
    sub_10018AE44(*(void *)v200, *((void *)v200 + 1));

    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v196, v211);
    swift_bridgeObjectRelease();
    sub_10018AE44(*(void *)v194, *(void *)(v194 + 8));
    swift_bridgeObjectRelease();
    sub_10018ACA4(*(void *)v198, *(void *)(v198 + 8), *(unsigned char *)(v198 + 16));
    return swift_bridgeObjectRelease();
  }
  *(void *)&long long v205 = a3;
  uint64_t v161 = v216[1];
  uint64_t v151 = v216[0];
  uint64_t v152 = v216[2];
  uint64_t v153 = v216[3];
  uint64_t v154 = v216[4];
  uint64_t v155 = v216[5];
  uint64_t v172 = v216[6];
  uint64_t v163 = v216[8];
  uint64_t v164 = v216[10];
  uint64_t v165 = v216[11];
  uint64_t v166 = v216[12];
  uint64_t v167 = v216[13];
  uint64_t v168 = v216[14];
  uint64_t v169 = v216[15];
  uint64_t v150 = v216[16];
  uint64_t v173 = v216[17];
  uint64_t v50 = v216[18];
  uint64_t v158 = v38;
  uint64_t v159 = v37;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(a6, v210, v37);
  unint64_t v160 = v31;
  uint64_t v51 = v31[13];
  uint64_t v171 = a6;
  uint64_t v52 = a6 + v51;
  uint64_t v53 = type metadata accessor for AppInstallRequestType();
  uint64_t v156 = *(void *)(v53 - 8);
  uint64_t v157 = v53;
  (*(void (**)(uint64_t, uint64_t))(v156 + 16))(v52, v209);
  uint64_t v170 = v50;
  uint64_t v162 = a5;
  if (v50)
  {
    swift_bridgeObjectRetain();
    sub_10018A1C0(v212, a5, v50);
    swift_bridgeObjectRelease();
    uint64_t v54 = v212[0];
    uint64_t v55 = v212[1];
    uint64_t v56 = v212[2];
    uint64_t v57 = v212[3];
    uint64_t v50 = v212[4];
    uint64_t v58 = v212[5];
    uint64_t v59 = v212[6];
  }
  else
  {
    uint64_t v54 = 0;
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    uint64_t v57 = 0;
    uint64_t v58 = 0;
    uint64_t v59 = 0;
  }
  v217[0] = v54;
  v217[1] = v55;
  v217[2] = v56;
  v217[3] = v57;
  v217[4] = v50;
  v217[5] = v58;
  v217[6] = v59;
  sub_100283FF8(0, (uint64_t)v217, (uint64_t)v214);
  sub_10018B054(v54, v55);
  sub_10001733C((uint64_t)v214, (uint64_t)v215, &qword_10065BCE0);
  uint64_t v60 = (uint64_t)v186;
  if (v215[10])
  {
    URL.init(string:)();
    sub_1001C3D78(v214);
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v182)(v186, 1, 1, v203);
  }
  uint64_t v61 = v211;
  uint64_t v49 = v206;
  uint64_t v62 = (uint64_t)v187;
  uint64_t v63 = (uint64_t)v188;
  uint64_t v31 = v160;
  sub_10018AB94(v162);
  sub_10027ED88(v60, (uint64_t)v207);
  uint64_t v64 = type metadata accessor for EnterpriseApp();
  sub_100017238(v205 + *(int *)(v64 + 20), v62, &qword_10065BCD0);
  uint64_t v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
  if (v65(v62, 1, v61) == 1)
  {
    sub_10001729C(v62, &qword_10065BCD0);
  }
  else
  {
    uint64_t v66 = v62;
    uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 32);
    v67(v189, v66, v61);
    uint64_t v68 = v208;
    swift_retain();
    sub_100311A5C(13, v68, v63);
    uint64_t v69 = v211;
    swift_release();
    if (v65(v63, 1, v69) == 1)
    {
      uint64_t v70 = v179;
      static Platform.current.getter();
      sub_10001729C(v63, &qword_10065BCD0);
    }
    else
    {
      uint64_t v70 = v179;
      v67(v179, v63, v69);
    }
    sub_1003F6DB4((unint64_t *)&qword_10065E048, (void (*)(uint64_t))&type metadata accessor for Platform);
    uint64_t v71 = v189;
    uint64_t v72 = v70;
    char v73 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v74 = *(void (**)(char *, uint64_t))(v49 + 8);
    v74(v72, v69);
    if ((v73 & 1) == 0)
    {
      sub_10018B054(v151, v161);
      swift_bridgeObjectRelease();
      sub_1001C3D08(v164, v165, v166);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for EnterpriseIngestTask.Error(0);
      sub_1003F6DB4(&qword_10065E098, (void (*)(uint64_t))type metadata accessor for EnterpriseIngestTask.Error);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v209, v157);
      uint64_t v82 = v159;
      uint64_t v83 = *(void (**)(uint64_t, uint64_t))(v158 + 8);
      v83(v210, v159);
      uint64_t v49 = v206;
      v74(v71, v211);
      goto LABEL_21;
    }
    v74(v71, v69);
  }
  uint64_t v75 = v161;
  uint64_t v76 = (uint64_t)v181;
  uint64_t v77 = v150;
  uint64_t v78 = v173;
  URL.init(string:)();
  uint64_t v79 = v190;
  uint64_t v80 = v203;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v190 + 48))(v76, 1, v203) == 1)
  {
    sub_10018B054(v151, v75);
    sub_10001729C(v76, &qword_10065C3C0);
    type metadata accessor for EnterpriseIngestTask.Error(0);
    sub_1003F6DB4(&qword_10065E098, (void (*)(uint64_t))type metadata accessor for EnterpriseIngestTask.Error);
    swift_allocError();
    void *v81 = v77;
    v81[1] = v78;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1001C3D08(v164, v165, v166);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v209, v157);
    uint64_t v82 = v159;
    uint64_t v83 = *(void (**)(uint64_t, uint64_t))(v158 + 8);
    v83(v210, v159);
LABEL_21:
    a6 = v171;
    sub_1003F6C28(v205, (uint64_t (*)(void))type metadata accessor for EnterpriseApp);
    v83(a6, v82);
    goto LABEL_22;
  }
  uint64_t v84 = *(void (**)(uint64_t, char *, uint64_t))(v79 + 32);
  uint64_t v85 = v180;
  uint64_t v211 = v79 + 32;
  v207 = v84;
  v84((uint64_t)v180, (char *)v76, v80);
  uint64_t v86 = (*(uint64_t (**)(char *, char *, uint64_t))(v79 + 16))(v185, v85, v80);
  if (v75)
  {
    uint64_t v93 = v151;
    v216[19] = v151;
    v216[20] = v75;
    v216[21] = v152;
    v216[22] = v153;
    v216[23] = v154;
    v216[24] = v155;
    v216[25] = v172;
    uint64_t v94 = sub_10018A9D8(v86, v87, v88, v89, v90, v91, v92);
    uint64_t v80 = v203;
    uint64_t v199 = v95;
    uint64_t v200 = (_OWORD *)v94;
    sub_10018B054(v93, v75);
  }
  else
  {
    uint64_t v199 = 0;
    uint64_t v200 = 0;
  }
  uint64_t v99 = v191;
  unint64_t v100 = v182;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v182)(v184, 1, 1, v80);
  uint64_t v101 = v174;
  uint64_t v102 = v174[7];
  uint64_t v201 = (void *)(v99 + v174[6]);
  uint64_t v202 = (void *)(v99 + v102);
  uint64_t v103 = v80;
  double v104 = (void *)(v99 + v174[9]);
  uint64_t v105 = (void *)(v99 + v174[10]);
  uint64_t v206 = v99 + v174[11];
  v100();
  uint64_t v106 = v99 + v101[14];
  *(void *)uint64_t v106 = 0;
  *(void *)(v106 + 8) = 0;
  *(unsigned char *)(v106 + 16) = -1;
  uint64_t v107 = (void *)(v99 + v101[15]);
  void *v107 = 0;
  v107[1] = 0;
  v207(v99, v185, v103);
  *(void *)(v99 + v101[5]) = 0;
  double v108 = v201;
  uint64_t v109 = v202;
  *uint64_t v201 = 0;
  *((unsigned char *)v108 + 8) = 0;
  id v110 = v199;
  *uint64_t v109 = v200;
  v109[1] = v110;
  *(unsigned char *)(v99 + v101[8]) = 0;
  uint64_t v111 = v164;
  void *v104 = v164;
  uint64_t v112 = v111;
  uint64_t v113 = v165;
  uint64_t v114 = v166;
  v104[1] = v165;
  v104[2] = v114;
  uint64_t v115 = v168;
  v104[3] = v167;
  v104[4] = v115;
  v104[5] = v169;
  void *v105 = 0;
  v105[1] = 0;
  v105[4] = 0;
  v105[5] = 0;
  v105[2] = 1;
  v105[3] = 0;
  uint64_t v116 = v112;
  uint64_t v117 = v113;
  sub_100254E0C(v112, v113, v114);
  sub_10027ED88(v184, v206);
  swift_bridgeObjectRelease();
  sub_1001C3D08(v116, v117, v114);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v118 = v191;
  *(unsigned char *)(v191 + v101[12]) = 0;
  uint64_t v119 = v118 + v101[13];
  *(_OWORD *)(v119 + 48) = 0u;
  *(_OWORD *)(v119 + 64) = 0u;
  *(_OWORD *)(v119 + 16) = 0u;
  *(_OWORD *)(v119 + 32) = 0u;
  *(_OWORD *)uint64_t v119 = 0u;
  *(void *)(v119 + 80) = 0;
  *(void *)(v119 + 88) = 0x8000000000000000;
  *(void *)(v119 + 96) = 0;
  *(void *)(v119 + 104) = 0;
  unint64_t v120 = (void *)v205;
  uint64_t v121 = *(void (**)(uint64_t, char *, uint64_t))(v205 + 8);
  v207 = *(void (**)(uint64_t, char *, uint64_t))v205;
  uint64_t v122 = v171;
  uint64_t v123 = (void (**)(uint64_t, char *, uint64_t))(v171 + v31[8]);
  *uint64_t v123 = v207;
  v123[1] = v121;
  uint64_t v124 = v120[5];
  uint64_t v125 = (void *)(v122 + v31[9]);
  void *v125 = v120[4];
  v125[1] = v124;
  uint64_t v126 = v120[3];
  uint64_t v211 = v120[2];
  uint64_t v127 = (uint64_t *)(v122 + v31[29]);
  *uint64_t v127 = v211;
  v127[1] = v126;
  uint64_t v206 = v126;
  uint64_t v128 = v208;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v129 = sub_100311954(12, v128);
  uint64_t v131 = v130;
  swift_release();
  if (v131 == 2) {
    uint64_t v132 = 0;
  }
  else {
    uint64_t v132 = v129;
  }
  if (v131 == 2) {
    uint64_t v133 = 0;
  }
  else {
    uint64_t v133 = v131;
  }
  unint64_t v134 = (uint64_t *)(v122 + v31[15]);
  uint64_t *v134 = v132;
  v134[1] = v133;
  sub_1000172F8(&qword_10065E0A0);
  unint64_t v135 = (*(unsigned __int8 *)(v175 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v175 + 80);
  uint64_t v136 = swift_allocObject();
  *(_OWORD *)(v136 + 16) = xmmword_1005A3EC0;
  sub_1003F6D4C(v118, v136 + v135, (uint64_t (*)(void))type metadata accessor for AppPackageTemplate);
  *(void *)(v122 + v31[18]) = v136;
  (*(void (**)(char *, void, uint64_t))(v176 + 104))(v177, enum case for LogKey.Prefix.manifest(_:), v178);
  id v137 = objc_allocWithZone((Class)type metadata accessor for LogKey());
  *(void *)(v122 + v31[5]) = LogKey.init(prefix:)();
  uint64_t v138 = v122 + v31[6];
  *(void *)uint64_t v138 = 0;
  *(unsigned char *)(v138 + 8) = 1;
  *(unsigned char *)(v122 + v31[27]) = 0;
  id v139 = [objc_allocWithZone((Class)MIStoreMetadata) init];
  NSString v140 = String._bridgeToObjectiveC()();
  [v139 setSoftwareVersionBundleID:v140];

  NSString v141 = String._bridgeToObjectiveC()();
  [v139 setBundleVersion:v141];

  id v142 = v139;
  [v142 copy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();

  sub_1003B4730();
  swift_dynamicCast();
  uint64_t v143 = v217[9];
  uint64_t v144 = v204;

  *(void *)(v122 + v144) = v143;
  uint64_t v145 = v208;
  swift_retain();
  uint64_t v146 = sub_100311910(4, v145);
  uint64_t v148 = v147;
  uint64_t result = swift_release();
  if (v148)
  {

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v209, v157);
    (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v210, v159);
    sub_1003F6C28(v191, (uint64_t (*)(void))type metadata accessor for AppPackageTemplate);
    (*(void (**)(char *, uint64_t))(v190 + 8))(v180, v203);
    uint64_t v149 = (uint64_t *)(v122 + v31[11]);
    *uint64_t v149 = v146;
    v149[1] = v148;
    *(unsigned char *)(v122 + v31[25]) = 1;
    *(unsigned char *)(v122 + v31[28]) = 1;
    *(unsigned char *)(v122 + v31[26]) = 0;
    uint64_t result = sub_1003F6C28((uint64_t)v120, (uint64_t (*)(void))type metadata accessor for EnterpriseApp);
    *(unsigned char *)(v122 + v31[12]) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003F1F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[46] = a3;
  v4[47] = v3;
  v4[44] = a1;
  v4[45] = a2;
  type metadata accessor for AppInstallTemplate();
  v4[48] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for CellularIdentity();
  v4[49] = v5;
  v4[50] = *(void *)(v5 - 8);
  v4[51] = swift_task_alloc();
  v4[52] = type metadata accessor for EvaluatorDownload();
  v4[53] = swift_task_alloc();
  sub_1000172F8((uint64_t *)&unk_10065CA40);
  v4[54] = swift_task_alloc();
  v4[55] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DDMPurchaseMethod();
  v4[56] = v6;
  v4[57] = *(void *)(v6 - 8);
  v4[58] = swift_task_alloc();
  v4[59] = swift_task_alloc();
  sub_1000172F8(&qword_10065CBD0);
  v4[60] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for AppStoreItem(0);
  v4[61] = v7;
  v4[62] = *(void *)(v7 - 8);
  v4[63] = swift_task_alloc();
  v4[64] = swift_task_alloc();
  sub_1000172F8((uint64_t *)&unk_100661AB0);
  v4[65] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  v4[66] = v8;
  v4[67] = *(void *)(v8 - 8);
  v4[68] = swift_task_alloc();
  v4[69] = swift_task_alloc();
  v4[70] = swift_task_alloc();
  v4[71] = swift_task_alloc();
  v4[72] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Logger();
  v4[73] = v9;
  v4[74] = *(void *)(v9 - 8);
  v4[75] = swift_task_alloc();
  v4[76] = swift_task_alloc();
  v4[77] = swift_task_alloc();
  v4[78] = swift_task_alloc();
  v4[79] = swift_task_alloc();
  v4[80] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum();
  v4[81] = v10;
  v4[82] = *(void *)(v10 - 8);
  v4[83] = swift_task_alloc();
  v4[84] = sub_1000172F8(&qword_100662780);
  v4[85] = swift_task_alloc();
  sub_1000172F8(&qword_10065BE10);
  v4[86] = swift_task_alloc();
  v4[87] = swift_task_alloc();
  v4[88] = swift_task_alloc();
  v4[89] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for AppInstallRequestType();
  v4[90] = v11;
  v4[91] = *(void *)(v11 - 8);
  v4[92] = swift_task_alloc();
  v4[93] = swift_task_alloc();
  return _swift_task_switch(sub_1003F2458, 0, 0);
}

uint64_t sub_1003F2458()
{
  uint64_t v1 = *(void *)(v0 + 712);
  uint64_t v2 = *(void *)(v0 + 704);
  uint64_t v3 = *(void *)(v0 + 680);
  uint64_t v4 = *(void *)(v0 + 672);
  uint64_t v5 = *(void *)(v0 + 656);
  uint64_t v6 = *(void *)(v0 + 648);
  uint64_t v7 = *(uint64_t **)(v0 + 376);
  uint64_t v53 = *v7;
  *(void *)(v0 + 752) = *v7;
  uint64_t v8 = (os_unfair_lock_s *)v7[1];
  *(void *)(v0 + 760) = v8;
  swift_retain();
  uint64_t v9 = sub_100311954(12, v8);
  uint64_t v11 = v10;
  swift_release();
  *(void *)(v0 + 768) = v9;
  *(void *)(v0 + 776) = v11;
  swift_retain();
  sub_100311A9C(8, v8, v1);
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v2, enum case for ManagedAppDeclaration.InstallBehavior.LicenseEnum.user(_:), v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v2, 0, 1, v6);
  uint64_t v12 = v3 + *(int *)(v4 + 48);
  sub_100017238(v1, v3, &qword_10065BE10);
  sub_100017238(v2, v12, &qword_10065BE10);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  *(void *)(v0 + 784) = v13;
  *(void *)(v0 + 792) = (v5 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v13(v3, 1, v6) != 1)
  {
    uint64_t v16 = *(void *)(v0 + 648);
    sub_100017238(*(void *)(v0 + 680), *(void *)(v0 + 696), &qword_10065BE10);
    int v17 = v13(v12, 1, v16);
    uint64_t v18 = *(void *)(v0 + 712);
    uint64_t v19 = *(void *)(v0 + 704);
    uint64_t v20 = *(void *)(v0 + 696);
    if (v17 != 1)
    {
      uint64_t v51 = *(void *)(v0 + 680);
      uint64_t v23 = *(void *)(v0 + 664);
      uint64_t v24 = *(void *)(v0 + 656);
      uint64_t v25 = *(void *)(v0 + 648);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v23, v12, v25);
      sub_1003F6DB4(&qword_100662788, (void (*)(uint64_t))&type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum);
      char v26 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v27(v23, v25);
      sub_10001729C(v19, &qword_10065BE10);
      sub_10001729C(v18, &qword_10065BE10);
      v27(v20, v25);
      sub_10001729C(v51, &qword_10065BE10);
      if (v26) {
        goto LABEL_8;
      }
LABEL_9:
      uint64_t v28 = (unsigned int *)&enum case for AppInstallRequestType.deviceVPP(_:);
      goto LABEL_10;
    }
    uint64_t v21 = *(void *)(v0 + 656);
    uint64_t v22 = *(void *)(v0 + 648);
    sub_10001729C(*(void *)(v0 + 704), &qword_10065BE10);
    sub_10001729C(v18, &qword_10065BE10);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
LABEL_6:
    sub_10001729C(*(void *)(v0 + 680), &qword_100662780);
    goto LABEL_9;
  }
  uint64_t v14 = *(void *)(v0 + 712);
  uint64_t v15 = *(void *)(v0 + 648);
  sub_10001729C(*(void *)(v0 + 704), &qword_10065BE10);
  sub_10001729C(v14, &qword_10065BE10);
  if (v13(v12, 1, v15) != 1) {
    goto LABEL_6;
  }
  sub_10001729C(*(void *)(v0 + 680), &qword_10065BE10);
LABEL_8:
  uint64_t v28 = (unsigned int *)&enum case for AppInstallRequestType.userVPP(_:);
LABEL_10:
  uint64_t v29 = *(void *)(v0 + 376);
  (*(void (**)(void, void, void))(*(void *)(v0 + 728) + 104))(*(void *)(v0 + 744), *v28, *(void *)(v0 + 720));
  char v30 = *(unsigned char *)(v29 + 32);
  *(unsigned char *)(v0 + 127) = v30;
  uint64_t v31 = *(void *)(v0 + 376);
  if (v30 & 1) != 0 || (*(unsigned char *)(v31 + 48))
  {
    uint64_t v39 = *(void *)(v31 + 16);
    *(void *)(v0 + 848) = v39;
    uint64_t v40 = *(void *)(*(void *)(v39 + 16) + 32);
    *(void *)(v0 + 856) = v40;
    swift_retain();
    UUID.init()();
    return _swift_task_switch(sub_1003F3040, v40, 0);
  }
  else
  {
    static Logger.vpp.getter();
    sub_1003F6B1C(v31);
    sub_1003F6B1C(v31);
    long long v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    BOOL v34 = os_log_type_enabled(v32, v33);
    uint64_t v35 = *(void *)(v0 + 376);
    if (v34)
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 138412290;
      uint64_t v37 = *(void **)(v35 + 40);
      *(void *)(v0 + 344) = v37;
      id v38 = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v50 = v37;
      sub_1003F6B6C(v35);
      sub_1003F6B6C(v35);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "[%@] User did not initiate installation, asking for consent before continuing", v36, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1003F6B6C(*(void *)(v0 + 376));
      sub_1003F6B6C(v35);
    }

    uint64_t v41 = *(void *)(v0 + 640);
    uint64_t v42 = *(void *)(v0 + 592);
    uint64_t v43 = *(void *)(v0 + 584);
    uint64_t v44 = *(void *)(v0 + 376);
    uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
    *(void *)(v0 + 800) = v45;
    *(void *)(v0 + 808) = (v42 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v45(v41, v43);
    uint64_t v46 = *(void *)(*(void *)(*(void *)(v44 + 16) + 16) + 152);
    *(void *)(v0 + 816) = v46;
    uint64_t v47 = *(void *)(v44 + 40);
    *(void *)(v0 + 824) = v47;
    uint64_t v52 = (char *)&dword_100666708 + dword_100666708;
    swift_retain();
    uint64_t v48 = (void *)swift_task_alloc();
    *(void *)(v0 + 832) = v48;
    *uint64_t v48 = v0;
    v48[1] = sub_1003F2A74;
    return ((uint64_t (*)(uint64_t, os_unfair_lock_s *, void, void, uint64_t, uint64_t))v52)(v53, v8, 0, 0, v46, v47);
  }
}

uint64_t sub_1003F2A74()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 840) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1001C6440(*(void *)(v2 + 768), *(void *)(v2 + 776));
    uint64_t v3 = sub_1003F2C28;
  }
  else
  {
    uint64_t v3 = sub_1003F2B94;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003F2B94()
{
  swift_release();
  uint64_t v1 = *(void *)(v0[47] + 16);
  v0[106] = v1;
  uint64_t v2 = *(void *)(*(void *)(v1 + 16) + 32);
  v0[107] = v2;
  swift_retain();
  UUID.init()();
  return _swift_task_switch(sub_1003F3040, v2, 0);
}

uint64_t sub_1003F2C28()
{
  uint64_t v1 = v0[47];
  swift_release();
  static Logger.vpp.getter();
  sub_1003F6B1C(v1);
  swift_errorRetain();
  sub_1003F6B1C(v1);
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (void *)v0[103];
    uint64_t v5 = v0[47];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412546;
    v0[39] = v4;
    id v8 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v7 = v4;
    sub_1003F6B6C(v5);
    sub_1003F6B6C(v5);
    *(_WORD *)(v6 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[30] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v7[1] = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%@]Consent was not successfully granted: %{public}@", (uint8_t *)v6, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v10 = v0[47];
    sub_1003F6B6C(v10);
    sub_1003F6B6C(v10);
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v11 = (void (*)(uint64_t, uint64_t))v0[100];
  uint64_t v12 = v0[79];
  uint64_t v13 = v0[73];

  v11(v12, v13);
  swift_willThrow();
  (*(void (**)(void, void))(v0[91] + 8))(v0[93], v0[90]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1003F3040()
{
  uint64_t v1 = v0[107];
  uint64_t v2 = v0[71];
  uint64_t v3 = v0[70];
  uint64_t v4 = v0[69];
  uint64_t v5 = (void *)v0[67];
  uint64_t v6 = v0[66];
  uint64_t v7 = (void (*)(uint64_t, uint64_t, uint64_t))v5[2];
  v0[108] = v7;
  v0[109] = (unint64_t)(v5 + 2) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v4, v3, v6);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *(void *)(v1 + 160);
  *(void *)(v1 + 160) = 0x8000000000000000;
  sub_100529CC0(0xD000000000000016, 0x80000001005BF3C0, v4, isUniquelyReferenced_nonNull_native);
  *(void *)(v1 + 160) = v12;
  swift_bridgeObjectRelease();
  uint64_t v9 = (void (*)(uint64_t, uint64_t))v5[1];
  v0[110] = v9;
  v0[111] = (unint64_t)(v5 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v4, v6);
  swift_endAccess();
  uint64_t v10 = (void (*)(uint64_t, uint64_t, uint64_t))v5[4];
  v0[112] = v10;
  v0[113] = (unint64_t)(v5 + 4) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v10(v2, v3, v6);
  return _swift_task_switch(sub_1003F31D0, 0, 0);
}

uint64_t sub_1003F31D0()
{
  uint64_t v72 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 864);
  uint64_t v2 = *(void *)(v0 + 576);
  uint64_t v3 = *(void *)(v0 + 544);
  uint64_t v4 = *(void *)(v0 + 528);
  uint64_t v5 = *(void *)(v0 + 376);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 896))(v2, *(void *)(v0 + 568), v4);
  static Logger.vpp.getter();
  v1(v3, v2, v4);
  sub_1003F6B1C(v5);
  sub_1003F6B1C(v5);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v0 + 880);
    uint64_t v65 = *(void *)(v0 + 592);
    uint64_t v67 = *(void *)(v0 + 584);
    uint64_t v69 = *(void *)(v0 + 624);
    uint64_t v63 = *(void *)(v0 + 544);
    uint64_t v62 = *(void *)(v0 + 528);
    uint64_t v8 = *(void *)(v0 + 376);
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v71 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412546;
    uint64_t v11 = *(void **)(v8 + 40);
    *(void *)(v0 + 328) = v11;
    id v12 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v10 = v11;
    sub_1003F6B6C(v8);
    sub_1003F6B6C(v8);
    *(_WORD *)(v9 + 12) = 2082;
    sub_1003F6DB4((unint64_t *)&qword_100665D30, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 336) = sub_1000143F4(v13, v14, &v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v64(v63, v62);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%@] Assigning installation identifier: %{public}s", (uint8_t *)v9, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
    v15(v69, v67);
  }
  else
  {
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v0 + 880);
    uint64_t v17 = *(void *)(v0 + 624);
    uint64_t v18 = *(void *)(v0 + 592);
    uint64_t v19 = *(void *)(v0 + 584);
    uint64_t v20 = *(void *)(v0 + 544);
    uint64_t v21 = *(void *)(v0 + 528);
    uint64_t v22 = *(void *)(v0 + 376);
    sub_1003F6B6C(v22);
    sub_1003F6B6C(v22);
    v16(v20, v21);

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v15(v17, v19);
  }
  *(void *)(v0 + 912) = v15;
  uint64_t v23 = *(os_unfair_lock_s **)(v0 + 760);
  id v24 = objc_allocWithZone((Class)AMSBuyParams);
  swift_bridgeObjectRetain();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v26 = [v24 initWithString:v25];
  *(void *)(v0 + 920) = v26;

  swift_retain();
  uint64_t v27 = sub_100311910(16, v23);
  uint64_t v29 = v28;
  swift_release();
  *(void *)(v0 + 928) = v29;
  if (v29)
  {
    char v30 = *(os_unfair_lock_s **)(v0 + 760);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_100311910(3, v30);
    uint64_t v33 = v32;
    uint64_t result = swift_release();
    if (!v33) {
      goto LABEL_22;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v31 = 0;
    uint64_t v33 = 0;
  }
  *(void *)(v0 + 952) = v33;
  *(void *)(v0 + 944) = v31;
  *(void *)(v0 + 936) = v27;
  sub_10001733C(*(void *)(v0 + 376) + 56, v0 + 224, &qword_10065B528);
  sub_10001733C(v0 + 224, v0 + 208, &qword_10065B528);
  uint64_t v66 = v33;
  uint64_t v68 = v31;
  if (*(unsigned char *)(v0 + 216))
  {
    unint64_t v35 = 0;
  }
  else
  {
    uint64_t v36 = *(void *)(v0 + 208);
    sub_1000172F8(&qword_10065CC00);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
    id v38 = (void *)AMSBuyParamPropertyExternalVersionId;
    *(void *)(inited + 32) = AMSBuyParamPropertyExternalVersionId;
    *(void *)(v0 + 320) = v36;
    id v39 = v38;
    *(void *)(inited + 40) = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(inited + 48) = v40;
    unint64_t v35 = sub_10044C09C(inited);
  }
  uint64_t v41 = v27;
  *(void *)(v0 + 960) = v35;
  uint64_t v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 784);
  uint64_t v43 = *(os_unfair_lock_s **)(v0 + 760);
  uint64_t v44 = *(void *)(v0 + 688);
  uint64_t v45 = *(void *)(v0 + 648);
  swift_retain();
  sub_100311A9C(8, v43, v44);
  swift_release();
  if (v42(v44, 1, v45) != 1)
  {
    uint64_t v46 = *(void *)(v0 + 848);
    char v47 = *(unsigned char *)(v0 + 127);
    uint64_t v48 = *(void *)(v0 + 776);
    uint64_t v49 = *(void *)(v0 + 688);
    uint64_t v50 = *(void *)(v0 + 592);
    uint64_t v51 = *(void *)(v0 + 584);
    uint64_t v52 = *(void *)(v0 + 520);
    if (v48 == 2) {
      uint64_t v53 = 0;
    }
    else {
      uint64_t v53 = *(void *)(v0 + 776);
    }
    if (v48 == 2) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(v0 + 768);
    }
    long long v55 = *(_OWORD *)(v46 + 56);
    long long v56 = *(_OWORD *)(v46 + 40);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v46 + 24);
    *(_OWORD *)(v0 + 32) = v56;
    *(_OWORD *)(v0 + 48) = v55;
    long long v57 = *(_OWORD *)(v46 + 88);
    long long v58 = *(_OWORD *)(v46 + 104);
    long long v59 = *(_OWORD *)(v46 + 72);
    *(_OWORD *)(v0 + 111) = *(_OWORD *)(v46 + 119);
    *(_OWORD *)(v0 + 80) = v57;
    *(_OWORD *)(v0 + 96) = v58;
    *(_OWORD *)(v0 + 64) = v59;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v52, 1, 1, v51);
    uint64_t v60 = swift_task_alloc();
    *(void *)(v0 + 968) = v60;
    *(void *)(v60 + 16) = v41;
    *(void *)(v60 + 24) = v29;
    *(void *)(v60 + 32) = v68;
    *(void *)(v60 + 40) = v66;
    *(void *)(v60 + 48) = v54;
    *(void *)(v60 + 56) = v53;
    *(void *)(v60 + 64) = v26;
    *(void *)(v60 + 72) = v49;
    *(void *)(v60 + 80) = v35;
    *(unsigned char *)(v60 + 88) = v47;
    *(void *)(v60 + 96) = v0 + 16;
    uint64_t v70 = (char *)&dword_10065C960 + dword_10065C960;
    *(unsigned char *)(v60 + 104) = 0;
    uint64_t v61 = (void *)swift_task_alloc();
    *(void *)(v0 + 976) = v61;
    void *v61 = v0;
    v61[1] = sub_1003F3850;
    uint64_t v74 = v60;
    uint64_t v75 = &_mh_execute_header;
    __asm { BR              X8; sub_1001D17CC }
  }
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1003F3850(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 984) = a1;
  *(void *)(v4 + 992) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 520);
  if (v1)
  {
    sub_10001729C(v5, (uint64_t *)&unk_100661AB0);
    swift_task_dealloc();
    uint64_t v6 = sub_1003F4AA4;
  }
  else
  {
    swift_task_dealloc();
    sub_10001729C(v5, (uint64_t *)&unk_100661AB0);
    uint64_t v6 = sub_1003F39D0;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_1003F39D0()
{
  uint64_t v152 = v0;
  uint64_t v1 = v0[117];
  uint64_t v2 = v0[116];
  uint64_t v3 = (void *)v0[95];
  uint64_t v141 = v0[86];
  uint64_t v4 = v0[82];
  uint64_t v5 = v0[81];
  uint64_t v6 = v0[57];
  uint64_t v147 = v0[56];
  uint64_t v7 = v0[55];
  sub_1001C6440(v0[96], v0[97]);
  sub_1001C6450(v1, v2);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v141, v5);
  swift_retain();
  sub_1003119B0(14, (os_unfair_lock_s *)v3, v7);
  swift_release();
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v8(v7, 1, v147) == 1) {
    goto LABEL_44;
  }
  uint64_t v9 = v0[59];
  uint64_t v10 = v0[56];
  uint64_t v11 = v0[57];
  id v12 = *(void (**)(uint64_t, void, uint64_t))(v11 + 32);
  v12(v9, v0[55], v10);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 88);
  int v14 = v13(v9, v10);
  int v15 = v14;
  int v16 = enum case for DDMPurchaseMethod.volumePurchaseProgram(_:);
  uint64_t v3 = v0;
  if (v14 == enum case for DDMPurchaseMethod.volumePurchaseProgram(_:))
  {
    uint64_t v138 = v13;
    id v142 = (unsigned int (*)(uint64_t, uint64_t, os_log_t))v8;
    uint64_t v21 = (os_unfair_lock_s *)v0[95];
    swift_retain();
    uint64_t v18 = sub_100311A30(0, v21);
    char v23 = v22;
    swift_release();
    if (v23)
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    unint64_t v135 = v12;
    uint64_t v20 = 0;
  }
  else
  {
    if (v14 != enum case for DDMPurchaseMethod.manifest(_:)) {
      return _assertionFailure(_:_:file:line:flags:)();
    }
    uint64_t v138 = v13;
    id v142 = (unsigned int (*)(uint64_t, uint64_t, os_log_t))v8;
    uint64_t v17 = (os_unfair_lock_s *)v0[95];
    swift_retain();
    uint64_t v18 = sub_100311910(3, v17);
    uint64_t v20 = v19;
    swift_release();
    if (!v20)
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    unint64_t v135 = v12;
  }
  int v136 = v16;
  char v24 = v15 != v16;
  uint64_t v25 = v0[61];
  uint64_t v26 = v0[62];
  uint64_t v27 = v3[60];
  sub_1002D6838(v18, v20, v24, v3[123], v27);
  swift_bridgeObjectRelease();
  sub_1001C3EC0(v18, v20, v24);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v27, 1, v25) != 1) {
    goto LABEL_15;
  }
  uint64_t v28 = v3[47];
  sub_10001729C(v3[60], &qword_10065CBD0);
  static Logger.vpp.getter();
  sub_1003F6B1C(v28);
  sub_1003F6B1C(v28);
  sub_1003F6B1C(v28);
  sub_1003F6B1C(v28);
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v29, v30))
  {
    uint64_t v61 = (void (*)(uint64_t, uint64_t))v3[114];
    uint64_t v62 = v3[75];
    uint64_t v63 = v3[73];
    uint64_t v64 = v3[47];
    sub_1003F6B6C(v64);
    sub_1003F6B6C(v64);
    sub_1003F6B6C(v64);
    sub_1003F6B6C(v64);

    v61(v62, v63);
LABEL_26:
    unint64_t v98 = (void *)v3[115];
    uint64_t v99 = v3;
    unint64_t v100 = (void (*)(uint64_t, uint64_t))v3[110];
    uint64_t v101 = v99[72];
    uint64_t v102 = v99[66];
    type metadata accessor for InternalError();
    sub_1003F6DB4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    *uint64_t v103 = 0;
    v103[1] = 0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    swift_release();
    v100(v101, v102);
LABEL_36:
    (*(void (**)(void, void))(v99[91] + 8))(v99[93], v99[90]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v128 = (uint64_t (*)(void))v99[1];
    return v128();
  }
  os_log_type_t v129 = v30;
  uint64_t v130 = v29;
  uint64_t v31 = (os_unfair_lock_s *)v3[95];
  os_log_t log = (os_log_t)v3[56];
  uint64_t v131 = v3[54];
  uint64_t v32 = v3[47];
  uint64_t v33 = swift_slowAlloc();
  BOOL v34 = (void *)swift_slowAlloc();
  uint64_t v150 = swift_slowAlloc();
  *(_DWORD *)uint64_t v33 = 138412546;
  unint64_t v35 = *(void **)(v32 + 40);
  v3[31] = v35;
  id v36 = v35;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *BOOL v34 = v35;
  sub_1003F6B6C(v32);
  sub_1003F6B6C(v32);
  *(_WORD *)(v33 + 12) = 2082;
  swift_retain();
  sub_1003119B0(14, v31, v131);
  swift_release();
  if (v142(v131, 1, log) == 1)
  {
LABEL_47:
    sub_1003F6B6C(v3[47]);
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v37 = v3[58];
  uint64_t v38 = v3[56];
  v135(v37, v3[54], v38);
  int v39 = v138(v37, v38);
  int v40 = v39;
  if (v39 == v136)
  {
    uint64_t v88 = (os_unfair_lock_s *)v3[95];
    swift_retain();
    uint64_t v42 = sub_100311A30(0, v88);
    char v90 = v89;
    swift_release();
    if (v90)
    {
LABEL_48:
      uint64_t result = sub_1003F6B6C(v3[47]);
      __break(1u);
      return result;
    }
    uint64_t v44 = 0;
    goto LABEL_25;
  }
  if (v39 != enum case for DDMPurchaseMethod.manifest(_:))
  {
    sub_1003F6B6C(v3[47]);
    return _assertionFailure(_:_:file:line:flags:)();
  }
  uint64_t v41 = (os_unfair_lock_s *)v3[95];
  swift_retain();
  uint64_t v42 = sub_100311910(3, v41);
  uint64_t v44 = v43;
  swift_release();
  if (v44)
  {
LABEL_25:
    char v91 = v40 != v136;
    uint64_t v145 = v3[75];
    uint64_t v146 = (void (*)(uint64_t, uint64_t))v3[114];
    uint64_t v140 = v3[73];
    uint64_t v92 = v3[47];
    uint64_t v93 = v3;
    uint64_t v94 = StoreAppIdentifier.description.getter();
    unint64_t v96 = v95;
    sub_1001C3EC0(v42, v44, v91);
    uint64_t v97 = v94;
    uint64_t v3 = v93;
    v93[32] = sub_1000143F4(v97, v96, &v150);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1003F6B6C(v92);
    sub_1003F6B6C(v92);
    _os_log_impl((void *)&_mh_execute_header, v130, v129, "[%@] Missing expected metadata for %{public}s", (uint8_t *)v33, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v146(v145, v140);
    goto LABEL_26;
  }
  sub_1003F6B6C(v3[47]);
  __break(1u);
LABEL_15:
  uint64_t v45 = (void *)v3[64];
  uint64_t v46 = v3[61];
  uint64_t v47 = v3[47];
  sub_1003F6BC0(v3[60], (uint64_t)v45, type metadata accessor for AppStoreItem);
  uint64_t v48 = (void *)((char *)v45 + *(int *)(v46 + 24));
  unint64_t v49 = v48[3];
  uint64_t v150 = v48[2];
  unint64_t v151 = v49;
  swift_bridgeObjectRetain();
  v50._uint64_t countAndFlagsBits = 58;
  v50._object = (void *)0xE100000000000000;
  String.append(_:)(v50);
  v3[33] = *v45;
  v51._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  v52._uint64_t countAndFlagsBits = 58;
  v52._object = (void *)0xE100000000000000;
  String.append(_:)(v52);
  v3[34] = v48[12];
  v53._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v53);
  swift_bridgeObjectRelease();
  sub_100515B6C(v150, v151);
  swift_bridgeObjectRelease();
  static Logger.vpp.getter();
  sub_1003F6B1C(v47);
  sub_1003F6B1C(v47);
  uint64_t v54 = Logger.logObject.getter();
  os_log_type_t v55 = static os_log_type_t.default.getter();
  BOOL v56 = os_log_type_enabled(v54, v55);
  uint64_t v57 = v3[47];
  if (v56)
  {
    long long v58 = (uint8_t *)swift_slowAlloc();
    uint64_t v143 = (void *)swift_slowAlloc();
    *(_DWORD *)long long v58 = 138412290;
    long long v59 = *(void **)(v57 + 40);
    v3[38] = v59;
    id v60 = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v143 = v59;
    sub_1003F6B6C(v57);
    sub_1003F6B6C(v57);
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "[%@] Purchase completed, performing compatiblity checks", v58, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1003F6B6C(v57);
    sub_1003F6B6C(v57);
  }
  uint64_t v65 = (void (*)(uint64_t, uint64_t))v3[114];
  uint64_t v66 = v3[77];
  uint64_t v67 = v3[73];

  v65(v66, v67);
  if (v48[39])
  {
    uint64_t v68 = swift_bridgeObjectRetain();
    uint64_t v69 = sub_1003EDC20(v68);
    swift_bridgeObjectRelease();
    uint64_t v70 = sub_100431CDC((uint64_t)v69);
    swift_bridgeObjectRelease();
    if (v70[2])
    {
      uint64_t v71 = v3[47];
      static Logger.vpp.getter();
      sub_1003F6B1C(v71);
      sub_1003F6B1C(v71);
      swift_bridgeObjectRetain();
      uint64_t v72 = Logger.logObject.getter();
      os_log_type_t v73 = static os_log_type_t.error.getter();
      BOOL v74 = os_log_type_enabled(v72, v73);
      uint64_t v75 = (void (*)(uint64_t, uint64_t))v3[114];
      uint64_t v76 = v3[76];
      uint64_t v77 = v3[73];
      uint64_t v78 = v3[47];
      if (v74)
      {
        uint64_t v139 = v3[76];
        uint64_t v144 = (void (*)(uint64_t, uint64_t))v3[114];
        uint64_t v79 = v3 + 36;
        uint64_t v80 = v3 + 37;
        uint64_t v148 = v3;
        uint64_t v81 = swift_slowAlloc();
        os_log_type_t type = v73;
        uint64_t v82 = (void *)swift_slowAlloc();
        uint64_t v150 = swift_slowAlloc();
        *(_DWORD *)uint64_t v81 = 138412546;
        uint64_t v137 = v77;
        loga = v72;
        uint64_t v83 = *(void **)(v78 + 40);
        void *v79 = v83;
        id v84 = v83;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v82 = v83;
        sub_1003F6B6C(v78);
        sub_1003F6B6C(v78);
        *(_WORD *)(v81 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v85 = Array.description.getter();
        unint64_t v87 = v86;
        swift_bridgeObjectRelease();
        uint64_t *v80 = sub_1000143F4(v85, v87, &v150);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, loga, type, "[%@] Failed to import purchase, there are missing capabilities: %s", (uint8_t *)v81, 0x16u);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v3 = v148;
        swift_slowDealloc();

        v144(v139, v137);
      }
      else
      {
        sub_1003F6B6C(v3[47]);
        sub_1003F6B6C(v78);
        swift_bridgeObjectRelease_n();

        v75(v76, v77);
      }
      uint64_t v123 = (void *)v3[115];
      uint64_t v99 = v3;
      uint64_t v124 = (void (*)(uint64_t, uint64_t))v3[110];
      uint64_t v125 = v3[72];
      uint64_t v126 = v3[66];
      uint64_t v127 = v3[64];
      type metadata accessor for InternalError();
      sub_1003F6DB4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();

      swift_release();
      sub_1003F6C28(v127, type metadata accessor for AppStoreItem);
      v124(v125, v126);
      goto LABEL_36;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v104 = *(void *)(v3[64] + *(int *)(v3[61] + 28));
  if (!*(void *)(v104 + 16))
  {
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v105 = v3[53];
  uint64_t v106 = type metadata accessor for AppStorePackage(0);
  uint64_t v107 = v104
       + ((*(unsigned __int8 *)(*(void *)(v106 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v106 - 8) + 80));
  uint64_t v108 = type metadata accessor for URL();
  uint64_t v109 = *(void *)(v108 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 16))(v105, v107, v108);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v109 + 56))(v105, 0, 1, v108);
  if (!*(void *)(v104 + 16))
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v110 = *(void *)(v107 + *(int *)(v106 + 20));
  if (v110 < 0)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v111 = v48[28];
  uint64_t v113 = (int *)v3[52];
  uint64_t v112 = v3[53];
  uint64_t v114 = *(void **)(v3[47] + 40);
  uint64_t v115 = (void *)(v112 + v113[5]);
  *uint64_t v115 = v48[27];
  v115[1] = v111;
  *(void *)(v112 + v113[6]) = v110;
  *(_DWORD *)(v112 + v113[7]) = 2;
  *(unsigned char *)(v112 + v113[9]) = 0;
  *(void *)(v112 + v113[8]) = v114;
  swift_bridgeObjectRetain();
  id v116 = v114;
  static CellularIdentity.current()();
  uint64_t v149 = (char *)&dword_1006650C8 + dword_1006650C8;
  uint64_t v117 = (void *)swift_task_alloc();
  v3[125] = v117;
  *uint64_t v117 = v3;
  v117[1] = sub_1003F4D7C;
  uint64_t v118 = *((unsigned __int8 *)v3 + 127);
  uint64_t v119 = v3[51];
  uint64_t v120 = v3[46];
  uint64_t v121 = v3[53];
  return ((uint64_t (*)(uint64_t, void, void, uint64_t, uint64_t, uint64_t))v149)(v121, 0, 0, v119, v118, v120);
}

uint64_t sub_1003F4AA4()
{
  uint64_t v1 = v0[117];
  uint64_t v2 = v0[116];
  uint64_t v3 = (void *)v0[115];
  uint64_t v10 = (void (*)(uint64_t, uint64_t))v0[110];
  uint64_t v11 = v0[93];
  uint64_t v4 = v0[91];
  uint64_t v9 = v0[90];
  uint64_t v5 = v0[72];
  uint64_t v6 = v0[66];
  sub_1001C6440(v0[96], v0[97]);
  sub_1001C6450(v1, v2);

  swift_release();
  swift_bridgeObjectRelease();
  v10(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v11, v9);
  (*(void (**)(void, void))(v0[82] + 8))(v0[86], v0[81]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1003F4D7C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 408);
  uint64_t v3 = *(void *)(*(void *)v1 + 400);
  uint64_t v4 = *(void *)(*(void *)v1 + 392);
  *(void *)(*(void *)v1 + 1008) = a1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_1003F4EDC, 0, 0);
}

uint64_t sub_1003F4EDC()
{
  uint64_t v1 = *(void *)(v0 + 1008);
  if ((v1 & 0x1010000) == 0x1000000)
  {
    uint64_t v2 = *(void **)(v0 + 920);
    uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0 + 880);
    uint64_t v4 = *(void *)(v0 + 576);
    uint64_t v5 = *(void *)(v0 + 528);
    uint64_t v6 = *(void *)(v0 + 512);
    uint64_t v7 = *(void *)(v0 + 424);
    type metadata accessor for InternalError();
    sub_1003F6DB4((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    swift_release();
    sub_1003F6C28(v7, (uint64_t (*)(void))type metadata accessor for EvaluatorDownload);
    sub_1003F6C28(v6, type metadata accessor for AppStoreItem);
    v3(v4, v5);
    (*(void (**)(void, void))(*(void *)(v0 + 728) + 8))(*(void *)(v0 + 744), *(void *)(v0 + 720));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  else
  {
    uint64_t v10 = *(os_unfair_lock_s **)(v0 + 760);
    uint64_t v11 = *(void *)(v0 + 744);
    uint64_t v12 = *(void *)(v0 + 736);
    uint64_t v13 = *(void *)(v0 + 728);
    uint64_t v14 = *(void *)(v0 + 720);
    uint64_t v15 = *(void *)(v0 + 568);
    uint64_t v17 = *(void *)(v0 + 504);
    uint64_t v16 = *(void *)(v0 + 512);
    uint64_t v20 = *(void *)(v0 + 384);
    (*(void (**)(uint64_t, void, void))(v0 + 864))(v15, *(void *)(v0 + 576), *(void *)(v0 + 528));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v11, v14);
    sub_1003F6D4C(v16, v17, type metadata accessor for AppStoreItem);
    swift_retain();
    sub_10018AB28(v0 + 16);
    sub_1003EFAA8(v15, v12, v17, v10, v0 + 16, v1 & 0x1010101, v20);
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 1016) = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1003F5344;
    uint64_t v19 = *(void *)(v0 + 384);
    return sub_10045E0BC(v19);
  }
}

uint64_t sub_1003F5344()
{
  *(void *)(*(void *)v1 + 1024) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003F5710;
  }
  else {
    uint64_t v2 = sub_1003F5458;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003F5458()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 880);
  uint64_t v2 = *(void *)(v0 + 744);
  uint64_t v3 = *(void *)(v0 + 728);
  uint64_t v11 = *(void *)(v0 + 720);
  uint64_t v4 = *(void *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 528);
  uint64_t v6 = *(void *)(v0 + 512);
  uint64_t v7 = *(void *)(v0 + 424);
  uint64_t v8 = *(void *)(v0 + 384);

  swift_release();
  sub_1003F6C28(v8, (uint64_t (*)(void))type metadata accessor for AppInstallTemplate);
  sub_1003F6C28(v7, (uint64_t (*)(void))type metadata accessor for EvaluatorDownload);
  sub_1003F6C28(v6, type metadata accessor for AppStoreItem);
  v1(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1003F5710()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 880);
  uint64_t v2 = *(void *)(v0 + 576);
  uint64_t v3 = *(void *)(v0 + 528);
  uint64_t v4 = *(void *)(v0 + 512);
  uint64_t v5 = *(void *)(v0 + 424);
  uint64_t v6 = *(void *)(v0 + 384);

  swift_release();
  sub_1003F6C28(v6, (uint64_t (*)(void))type metadata accessor for AppInstallTemplate);
  sub_1003F6C28(v5, (uint64_t (*)(void))type metadata accessor for EvaluatorDownload);
  sub_1003F6C28(v4, type metadata accessor for AppStoreItem);
  v1(v2, v3);
  (*(void (**)(void, void))(*(void *)(v0 + 728) + 8))(*(void *)(v0 + 744), *(void *)(v0 + 720));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1003F59D4(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[10] = v4;
  v3[11] = *(void *)(v4 - 8);
  v3[12] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Logger();
  v3[13] = v5;
  v3[14] = *(void *)(v5 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URL();
  v3[18] = v6;
  v3[19] = *(void *)(v6 - 8);
  v3[20] = swift_task_alloc();
  type metadata accessor for EnterpriseApp();
  v3[21] = swift_task_alloc();
  return _swift_task_switch(sub_1003F5B98, 0, 0);
}

uint64_t sub_1003F5B98()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v5 = (void *)v0[8];
  uint64_t v4 = v0[9];
  uint64_t v6 = v0[7];
  uint64_t v7 = *(void *)(*(void *)(v4 + 16) + 16);
  v0[22] = *(void *)(v7 + 152);
  v0[23] = *(void *)(v7 + 32);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v6, v3);
  uint64_t v8 = *(void *)(v4 + 24);
  swift_retain();
  swift_retain();
  swift_retain();
  id v9 = v5;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[24] = v10;
  void *v10 = v0;
  v10[1] = sub_1003F5CA0;
  uint64_t v12 = v0[20];
  uint64_t v11 = v0[21];
  uint64_t v13 = v0[8];
  return sub_100280844(v11, v12, v8, v13);
}

uint64_t sub_1003F5CA0()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003F67A4;
  }
  else {
    uint64_t v2 = sub_1003F5DB4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003F5DB4()
{
  uint64_t v1 = *(void *)(v0 + 72);
  char v2 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(v0 + 264) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 168);
    uint64_t v4 = *(void *)(v0 + 64);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v5;
    _OWORD v5[2] = v4;
    v5[3] = v3;
    v5[4] = v1;
    UUID.init()();
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1003F6574;
    char v7 = *(unsigned char *)(v0 + 264);
    uint64_t v8 = *(void *)(v0 + 96);
    return sub_100459F58(0, 0, v8, v7, (uint64_t)&unk_100662798, (uint64_t)v5);
  }
  else
  {
    uint64_t v10 = *(void **)(v0 + 64);
    static Logger.vpp.getter();
    id v11 = v10;
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    BOOL v14 = os_log_type_enabled(v12, v13);
    uint64_t v15 = *(void **)(v0 + 64);
    if (v14)
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 138412290;
      *(void *)(v0 + 48) = v15;
      id v18 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v17 = v15;

      _os_log_impl((void *)&_mh_execute_header, v12, v13, "[%@] User did not initiate installation, asking for consent before continuing", v16, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v19 = *(void *)(v0 + 136);
    uint64_t v20 = *(void *)(v0 + 104);
    uint64_t v21 = *(void *)(v0 + 112);
    char v22 = *(uint64_t **)(v0 + 72);
    char v23 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    *(void *)(v0 + 208) = v23;
    *(void *)(v0 + 216) = (v21 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v23(v19, v20);
    uint64_t v25 = *v22;
    uint64_t v24 = v22[1];
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100666708
                                                                                       + dword_100666708);
    uint64_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_1003F60B4;
    uint64_t v27 = *(void *)(v0 + 176);
    uint64_t v28 = *(void *)(v0 + 64);
    return v29(v25, v24, 0, 0, v27, v28);
  }
}

uint64_t sub_1003F60B4()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_1003F62BC;
  }
  else {
    char v2 = sub_1003F61C8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003F61C8()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v4;
  v4[2] = v3;
  v4[3] = v1;
  v4[4] = v2;
  UUID.init()();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1003F6574;
  char v6 = *(unsigned char *)(v0 + 264);
  uint64_t v7 = *(void *)(v0 + 96);
  return sub_100459F58(0, 0, v7, v6, (uint64_t)&unk_100662798, (uint64_t)v4);
}

uint64_t sub_1003F62BC()
{
  uint64_t v1 = (void *)v0[8];
  static Logger.vpp.getter();
  id v2 = v1;
  swift_errorRetain();
  id v3 = v2;
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    char v6 = (void *)v0[8];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v17 = (void *)swift_slowAlloc();
    v0[2] = v6;
    *(_DWORD *)uint64_t v7 = 138412546;
    os_log_type_t type = v5;
    id v8 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v17 = v6;

    *(_WORD *)(v7 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v17[1] = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, type, "[%@] Consent was not successfully granted: %{public}@", (uint8_t *)v7, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v10 = (void *)v0[8];

    swift_errorRelease();
    swift_errorRelease();
  }
  id v11 = (void (*)(uint64_t, uint64_t))v0[26];
  uint64_t v12 = v0[21];
  uint64_t v13 = v0[16];
  uint64_t v14 = v0[13];

  v11(v13, v14);
  swift_willThrow();
  swift_release();
  swift_release();
  sub_1003F6C28(v12, (uint64_t (*)(void))type metadata accessor for EnterpriseApp);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1003F6574()
{
  id v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[11] + 8))(v2[12], v2[10]);
  if (v0)
  {
    id v3 = sub_1003F685C;
  }
  else
  {
    swift_task_dealloc();
    id v3 = sub_1003F66C4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003F66C4()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_release();
  swift_release();
  sub_1003F6C28(v1, (uint64_t (*)(void))type metadata accessor for EnterpriseApp);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1003F67A4()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003F685C()
{
  uint64_t v1 = (void *)v0[8];
  swift_task_dealloc();
  static Logger.vpp.getter();
  id v2 = v1;
  swift_errorRetain();
  id v3 = v2;
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    char v6 = (void *)v0[8];
    uint64_t v7 = swift_slowAlloc();
    id v8 = (void *)swift_slowAlloc();
    v0[4] = v6;
    *(_DWORD *)uint64_t v7 = 138412546;
    uint64_t v19 = v4;
    os_log_type_t type = v5;
    id v9 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v8 = v6;

    *(_WORD *)(v7 + 12) = 2114;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[5] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v8[1] = v10;
    uint64_t v4 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, type, "[%@] Failed to enqueue enterprise manifest install: %{public}@", (uint8_t *)v7, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    id v11 = (void *)v0[8];

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v12 = v0[21];
  uint64_t v14 = v0[14];
  uint64_t v13 = v0[15];
  uint64_t v15 = v0[13];

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_willThrow();
  swift_release();
  swift_release();
  sub_1003F6C28(v12, (uint64_t (*)(void))type metadata accessor for EnterpriseApp);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1003F6B1C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  id v3 = v2;
  return a1;
}

uint64_t sub_1003F6B6C(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1003F6BC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003F6C28(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003F6C88(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  id v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *id v9 = v3;
  v9[1] = sub_1000176B4;
  return sub_1003F05B4(a1, a2, v6, v7, v8);
}

uint64_t sub_1003F6D4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003F6DB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1003F6E04(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_100455C1C(0, v2, 0);
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    uint64_t result = _swiftEmptyArrayStorage;
    unint64_t v5 = (unint64_t)"platformAttributes";
    unint64_t v6 = (unint64_t)"";
    unint64_t v7 = (unint64_t)"requirementsByDeviceFamily";
    unint64_t v8 = (unint64_t)"System";
    do
    {
      int v9 = *v4++;
      unint64_t v10 = 0xD000000000000012;
      unint64_t v11 = 0x80000001005B7A30;
      switch(v9)
      {
        case 1:
          unint64_t v11 = v5 | 0x8000000000000000;
          goto LABEL_13;
        case 2:
          unint64_t v11 = 0xE400000000000000;
          unint64_t v10 = 1701667182;
          break;
        case 3:
          unint64_t v11 = 0xE800000000000000;
          unint64_t v10 = 0x656C746974627573;
          break;
        case 4:
          unint64_t v10 = 0x614E747369747261;
          unint64_t v11 = 0xEA0000000000656DLL;
          break;
        case 5:
          unint64_t v10 = 0xD00000000000001ALL;
          unint64_t v11 = v6 | 0x8000000000000000;
          break;
        case 6:
          unint64_t v10 = 0xD000000000000016;
          unint64_t v11 = v7 | 0x8000000000000000;
          break;
        case 7:
          unint64_t v11 = 0xE900000000000074;
          unint64_t v10 = 0x6867697279706F63;
          break;
        case 8:
          unint64_t v11 = 0xE700000000000000;
          unint64_t v10 = 0x616C7545736168;
          break;
        case 9:
          unint64_t v11 = v8 | 0x8000000000000000;
LABEL_13:
          unint64_t v10 = 0xD000000000000010;
          break;
        case 10:
          unint64_t v11 = 0xEA00000000006C72;
          unint64_t v10 = 0x5565746973626577;
          break;
        default:
          break;
      }
      uint64_t v19 = result;
      unint64_t v13 = result[2];
      unint64_t v12 = result[3];
      if (v13 >= v12 >> 1)
      {
        uint64_t v17 = (char *)v6;
        id v18 = (const char *)v5;
        uint64_t v15 = (char *)v8;
        uint64_t v16 = (const char *)v7;
        sub_100455C1C(v12 > 1, v13 + 1, 1);
        unint64_t v8 = (unint64_t)v15;
        unint64_t v7 = (unint64_t)v16;
        unint64_t v6 = (unint64_t)v17;
        unint64_t v5 = (unint64_t)v18;
        uint64_t result = v19;
      }
      result[2] = v13 + 1;
      uint64_t v14 = &result[2 * v13];
      void v14[4] = v10;
      v14[5] = v11;
      --v2;
    }
    while (v2);
  }
  return result;
}

void *sub_1003F7048(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_100455C1C(0, v2, 0);
    uint64_t result = _swiftEmptyArrayStorage;
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    unint64_t v5 = (unint64_t)"1";
    unint64_t v6 = (unint64_t)"externalVersionId";
    unint64_t v7 = 0xD000000000000010;
    do
    {
      int v8 = *v4++;
      unint64_t v9 = 0xE800000000000000;
      unint64_t v10 = 0x6449656C646E7562;
      switch(v8)
      {
        case 1:
          unint64_t v9 = v5 | 0x8000000000000000;
          goto LABEL_11;
        case 2:
          unint64_t v9 = v6 | 0x8000000000000000;
          goto LABEL_11;
        case 3:
          unint64_t v9 = 0x80000001005B79E0;
          unint64_t v10 = v7;
          break;
        case 4:
          unint64_t v9 = 0xEB000000006E6F69;
          unint64_t v10 = 0x7470697263736564;
          break;
        case 5:
          unint64_t v9 = 0xE600000000000000;
          unint64_t v10 = 0x73726566666FLL;
          break;
        case 6:
          unint64_t v9 = 0xE700000000000000;
          unint64_t v10 = 0x6B726F77747261;
          break;
        case 7:
          unint64_t v9 = 0x80000001005B7A10;
LABEL_11:
          unint64_t v10 = 0xD000000000000011;
          break;
        default:
          break;
      }
      uint64_t v17 = result;
      unint64_t v12 = result[2];
      unint64_t v11 = result[3];
      if (v12 >= v11 >> 1)
      {
        uint64_t v15 = (const char *)v6;
        uint64_t v16 = (char *)v5;
        unint64_t v14 = v7;
        sub_100455C1C(v11 > 1, v12 + 1, 1);
        unint64_t v7 = v14;
        unint64_t v6 = (unint64_t)v15;
        unint64_t v5 = (unint64_t)v16;
        uint64_t result = v17;
      }
      result[2] = v12 + 1;
      unint64_t v13 = &result[2 * v12];
      v13[4] = v10;
      v13[5] = v9;
      --v2;
    }
    while (v2);
  }
  return result;
}

void sub_1003F722C(uint64_t a1, void *a2, void *a3)
{
}

uint64_t sub_1003F7238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 72) = a6;
  *(void *)(v6 + 32) = a4;
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  return _swift_task_switch(sub_1003F7260, 0, 0);
}

uint64_t sub_1003F7260()
{
  id v1 = objc_msgSend(self, "ams_sharedAccountStore");
  *(void *)(v0 + 48) = v1;
  int64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *int64_t v2 = v0;
  v2[1] = sub_1003F7328;
  char v3 = *(unsigned char *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  return sub_1003F74C8(v7, v6, v4, (uint64_t)v1, v5, v3);
}

uint64_t sub_1003F7328()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1003F7464, 0, 0);
  }
  else
  {

    char v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1003F7464()
{
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003F74C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 593) = a6;
  *(void *)(v6 + 680) = a5;
  *(void *)(v6 + 672) = a4;
  *(void *)(v6 + 664) = a3;
  *(void *)(v6 + 656) = a2;
  *(void *)(v6 + 648) = a1;
  uint64_t v7 = sub_1000172F8(&qword_10065BDA8);
  *(void *)(v6 + 688) = v7;
  *(void *)(v6 + 696) = *(void *)(v7 - 8);
  *(void *)(v6 + 704) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for AppState();
  *(void *)(v6 + 712) = v8;
  *(void *)(v6 + 720) = *(void *)(v8 - 8);
  *(void *)(v6 + 728) = swift_task_alloc();
  uint64_t updated = type metadata accessor for AppStateUpdateIdentifier();
  *(void *)(v6 + 736) = updated;
  *(void *)(v6 + 744) = *(void *)(updated - 8);
  *(void *)(v6 + 752) = swift_task_alloc();
  sub_1000172F8(&qword_10065BCD0);
  *(void *)(v6 + 760) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Platform();
  *(void *)(v6 + 768) = v10;
  *(void *)(v6 + 776) = *(void *)(v10 - 8);
  *(void *)(v6 + 784) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for MediaAPIApp(0);
  *(void *)(v6 + 792) = v11;
  *(void *)(v6 + 800) = *(void *)(v11 - 8);
  *(void *)(v6 + 808) = swift_task_alloc();
  *(void *)(v6 + 816) = swift_task_alloc();
  sub_1000172F8(&qword_10065C3C0);
  *(void *)(v6 + 824) = swift_task_alloc();
  *(void *)(v6 + 832) = swift_task_alloc();
  uint64_t v12 = type metadata accessor for URL();
  *(void *)(v6 + 840) = v12;
  *(void *)(v6 + 848) = *(void *)(v12 - 8);
  *(void *)(v6 + 856) = swift_task_alloc();
  *(void *)(v6 + 864) = swift_task_alloc();
  uint64_t v13 = type metadata accessor for MediaAPIUpdates.App(0);
  *(void *)(v6 + 872) = v13;
  *(void *)(v6 + 880) = *(void *)(v13 - 8);
  *(void *)(v6 + 888) = swift_task_alloc();
  *(void *)(v6 + 896) = swift_task_alloc();
  *(void *)(v6 + 904) = swift_task_alloc();
  *(void *)(v6 + 912) = swift_task_alloc();
  *(void *)(v6 + 920) = swift_task_alloc();
  *(void *)(v6 + 928) = swift_task_alloc();
  *(void *)(v6 + 936) = swift_task_alloc();
  uint64_t v14 = type metadata accessor for Logger();
  *(void *)(v6 + 944) = v14;
  *(void *)(v6 + 952) = *(void *)(v14 - 8);
  *(void *)(v6 + 960) = swift_task_alloc();
  *(void *)(v6 + 968) = swift_task_alloc();
  *(void *)(v6 + 976) = swift_task_alloc();
  *(void *)(v6 + 984) = swift_task_alloc();
  *(void *)(v6 + 992) = swift_task_alloc();
  *(void *)(v6 + 1000) = swift_task_alloc();
  *(void *)(v6 + 1008) = swift_task_alloc();
  uint64_t v15 = type metadata accessor for NSFastEnumerationIterator();
  *(void *)(v6 + 1016) = v15;
  *(void *)(v6 + 1024) = *(void *)(v15 - 8);
  *(void *)(v6 + 1032) = swift_task_alloc();
  uint64_t v16 = sub_1000172F8(&qword_100662860);
  *(void *)(v6 + 1040) = v16;
  *(void *)(v6 + 1048) = *(void *)(v16 - 8);
  *(void *)(v6 + 1056) = swift_task_alloc();
  return _swift_task_switch(sub_1003F7A08, 0, 0);
}

uint64_t sub_1003F7A08()
{
  id v1 = sub_10040872C();
  *(void *)(v0 + 1064) = v1;
  uint64_t v2 = v1[2];
  *(void *)(v0 + 1072) = v2;
  if (v2)
  {
    if (qword_10065B148 != -1) {
      swift_once();
    }
    uint64_t v3 = *(void *)(v0 + 1056);
    uint64_t v4 = *(void *)(v0 + 1048);
    uint64_t v5 = *(void *)(v0 + 1040);
    id v6 = objc_msgSend(*(id *)(v0 + 672), "ams_iTunesAccountsForMediaType:", qword_10068DAB8);
    *(void *)(v0 + 1080) = v6;
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 624;
    *(void *)(v0 + 24) = sub_1003F7E60;
    swift_continuation_init();
    *(void *)(v0 + 296) = v5;
    uint64_t v7 = sub_10019CE94((uint64_t *)(v0 + 272));
    sub_10018B1DC(0, &qword_100662868);
    sub_1000172F8(&qword_10065B260);
    CheckedContinuation.init(continuation:function:)();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 32))(v7, v3, v5);
    *(void *)(v0 + 240) = _NSConcreteStackBlock;
    *(void *)(v0 + 248) = 1107296256;
    *(void *)(v0 + 256) = sub_1005136C8;
    *(void *)(v0 + 264) = &unk_100645988;
    [v6 resultWithCompletion:v0 + 240];
    return _swift_continuation_await(v0 + 16);
  }
  else
  {
    swift_bridgeObjectRelease();
    static Logger.updates.getter();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "No applicable apps installed, update check completed", v10, 2u);
      swift_slowDealloc();
    }
    uint64_t v11 = *(void *)(v0 + 968);
    uint64_t v12 = *(void *)(v0 + 952);
    uint64_t v13 = *(void *)(v0 + 944);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
}

uint64_t sub_1003F7E60()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 1088) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_100403DB8;
  }
  else
  {
    uint64_t v2 = sub_1003F7F78;
  }
  return _swift_task_switch(v2, 0, 0);
}

void *sub_1003F7F78()
{
  uint64_t v196 = v0;
  uint64_t v1 = (void *)v0[78];
  uint64_t v2 = _swiftEmptyArrayStorage;
  v195[0] = (unint64_t)_swiftEmptyArrayStorage;
  id v3 = v1;
  NSArray.makeIterator()();

  sub_10040C260(&qword_100662870, (void (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
  dispatch thunk of IteratorProtocol.next()();
  uint64_t v194 = v0;
  if (v0[45])
  {
    id v191 = v3;
    uint64_t v4 = v0 + 46;
    uint64_t v5 = v0 + 79;
    do
    {
      sub_1001C5DD4((_OWORD *)v0 + 21, v4);
      sub_1000144C8((uint64_t)v4, (uint64_t)(v0 + 38));
      sub_10018B1DC(0, (unint64_t *)&qword_10065E848);
      if ((swift_dynamicCast() & 1) == 0) {
        *uint64_t v5 = 0;
      }
      sub_100014524((uint64_t)v4);
      if (*v5)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v195[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v195[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      dispatch thunk of IteratorProtocol.next()();
    }
    while (v0[45]);
    uint64_t v2 = (void *)v195[0];
    id v3 = v191;
  }
  id v6 = (void *)v0[135];
  uint64_t v7 = v0[81];
  (*(void (**)(uint64_t, uint64_t))(v0[128] + 8))(v0[129], v0[127]);

  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_100016D20(0xD00000000000001CLL, 0x80000001005BA6B0), (v9 & 1) != 0))
  {
    sub_1000144C8(*(void *)(v0[81] + 56) + 32 * v8, (uint64_t)(v0 + 50));
  }
  else
  {
    *((_OWORD *)v0 + 25) = 0u;
    *((_OWORD *)v0 + 26) = 0u;
  }
  uint64_t v10 = v0[126];
  v0[137] = sub_1000172F8((uint64_t *)&unk_10065C9C0);
  *((unsigned char *)v0 + 594) = swift_dynamicCast();
  v0[138] = v0[73];
  static Logger.updates.getter();
  swift_bridgeObjectRetain();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  uint64_t v190 = v2;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v10 = (uint64_t)(v0 + 78);
    uint64_t v13 = v0[134];
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 134217984;
    v0[77] = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Polling available updates for %ld app(s)", v14, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v15 = v0[133];
  uint64_t v16 = v0[126];
  uint64_t v17 = v0[119];
  uint64_t v18 = v0[118];
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v0[139] = (uint64_t)v19;
  v0[140] = (v17 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v173 = v19;
  v19(v16, v18);
  uint64_t v20 = &_swiftEmptyDictionarySingleton;
  uint64_t v21 = *(void *)(v15 + 16);
  if (v21)
  {
    uint64_t v22 = v0[110];
    char v23 = (int *)v0[109];
    uint64_t v24 = v0[106];
    uint64_t v25 = v0[133] + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    int v192 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
    uint64_t v182 = *(void *)(v22 + 72);
    uint64_t v178 = (void (**)(uint64_t, uint64_t))(v24 + 8);
    uint64_t v180 = (void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32);
    unint64_t v187 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    swift_bridgeObjectRetain();
    uint64_t v184 = v23;
    while (1)
    {
      uint64_t v27 = v20;
      uint64_t v28 = v0[117];
      uint64_t v10 = v0[105];
      uint64_t v29 = v0[104];
      sub_100409D98(v25, v28, type metadata accessor for MediaAPIUpdates.App);
      uint64_t v30 = *(void *)(v28 + v23[13]);
      sub_100017238(v28 + v23[5], v29, &qword_10065C3C0);
      if ((*v192)(v29, 1, v10) == 1) {
        break;
      }
      uint64_t v31 = v0[108];
      (*v180)(v31, v0[104], v0[105]);
      uint64_t v32 = *(void *)(v30 + 16);
      uint64_t v33 = v32 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v32 + 16);
      BOOL v34 = (os_unfair_lock_s *)(v32 + ((*(unsigned int *)(*(void *)v32 + 48) + 3) & 0x1FFFFFFFCLL));
      os_unfair_lock_lock(v34);
      sub_100407430(v33, v31, v195);
      uint64_t v10 = v0[108];
      uint64_t v35 = v0[105];
      os_unfair_lock_unlock(v34);
      id v36 = (void *)v195[0];
      (*v178)(v10, v35);
      if (!v36) {
        goto LABEL_27;
      }
      uint64_t v10 = v0[117];
      uint64_t v37 = v0[116];
      unsigned __int8 v38 = [v36 isB2BCustomApp];

      sub_100409D98(v10, v37, type metadata accessor for MediaAPIUpdates.App);
      if (v38)
      {
        sub_100409E00(v0[116], type metadata accessor for MediaAPIUpdates.App);
        uint64_t v20 = v27;
        goto LABEL_29;
      }
LABEL_28:
      uint64_t v20 = v27;
      uint64_t v39 = v0[116];
      int v40 = *(unsigned __int8 *)(v39 + v23[9]);
      sub_100409E00(v39, type metadata accessor for MediaAPIUpdates.App);
      if (v40 != 1)
      {
        uint64_t v43 = v0[117];
        uint64_t v44 = v43 + v23[6];
        if (*(unsigned char *)(v44 + 8))
        {
          uint64_t v45 = v43 + v23[7];
          Swift::UInt64 v46 = *(void *)v45;
          int v47 = *(unsigned __int8 *)(v45 + 8);
          if (v47) {
            Swift::UInt64 v41 = 0;
          }
          else {
            Swift::UInt64 v41 = v46;
          }
          if (v47) {
            char v42 = 2;
          }
          else {
            char v42 = 0;
          }
        }
        else
        {
          char v42 = 0;
          Swift::UInt64 v41 = *(void *)v44;
        }
        goto LABEL_38;
      }
LABEL_29:
      Swift::UInt64 v41 = *(void *)(v0[117] + v23[12]);
      char v42 = 1;
LABEL_38:
      unint64_t v49 = sub_100452B44(v41, v42);
      uint64_t v50 = v20[2];
      BOOL v51 = (v48 & 1) == 0;
      uint64_t v52 = v50 + v51;
      if (__OFADD__(v50, v51)) {
        goto LABEL_183;
      }
      char v53 = v48;
      if (v20[3] < v52)
      {
        sub_100528028(v52, 1);
        uint64_t v20 = &_swiftEmptyDictionarySingleton;
        unint64_t v54 = sub_100452B44(v41, v42);
        if ((v53 & 1) != (v55 & 1))
        {
LABEL_176:
          return (void *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        }
        unint64_t v49 = v54;
      }
      uint64_t v0 = v194;
      uint64_t v10 = v194[117];
      if (v53)
      {
        uint64_t v56 = v20[7];
        sub_10040C2A8(v194[117], v194[115], type metadata accessor for MediaAPIUpdates.App);
        unint64_t v57 = *(void *)(v56 + 8 * v49);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v56 + 8 * v49) = v57;
        long long v59 = v20;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v57 = sub_100290C0C(0, *(void *)(v57 + 16) + 1, 1, v57);
          *(void *)(v56 + 8 * v49) = v57;
        }
        uint64_t v60 = v182;
        unint64_t v62 = *(void *)(v57 + 16);
        unint64_t v61 = *(void *)(v57 + 24);
        uint64_t v10 = v62 + 1;
        if (v62 >= v61 >> 1)
        {
          unint64_t v57 = sub_100290C0C(v61 > 1, v62 + 1, 1, v57);
          *(void *)(v56 + 8 * v49) = v57;
        }
        uint64_t v26 = v194[115];
        *(void *)(v57 + 16) = v10;
        sub_10040C2A8(v26, v57 + v187 + v62 * v182, type metadata accessor for MediaAPIUpdates.App);
        uint64_t v20 = v59;
      }
      else
      {
        sub_1000172F8(&qword_100663DC0);
        uint64_t v63 = swift_allocObject();
        *(_OWORD *)(v63 + 16) = xmmword_1005A3EC0;
        sub_10040C2A8(v10, v63 + v187, type metadata accessor for MediaAPIUpdates.App);
        v20[(v49 >> 6) + 8] |= 1 << v49;
        uint64_t v64 = v20[6] + 16 * v49;
        *(void *)uint64_t v64 = v41;
        *(unsigned char *)(v64 + 8) = v42;
        *(void *)(v20[7] + 8 * v49) = v63;
        uint64_t v65 = v20[2];
        BOOL v66 = __OFADD__(v65, 1);
        uint64_t v67 = v65 + 1;
        if (v66) {
          goto LABEL_184;
        }
        void v20[2] = v67;
        uint64_t v0 = v194;
        uint64_t v60 = v182;
      }
      v25 += v60;
      --v21;
      char v23 = v184;
      if (!v21)
      {
        swift_bridgeObjectRelease();
        goto LABEL_51;
      }
    }
    sub_10001729C(v0[104], &qword_10065C3C0);
LABEL_27:
    sub_100409D98(v0[117], v0[116], type metadata accessor for MediaAPIUpdates.App);
    goto LABEL_28;
  }
LABEL_51:
  unint64_t v68 = sub_100452B44(0, 2);
  uint64_t v21 = (uint64_t)v190;
  if (v69)
  {
    uint64_t v10 = v68;
    char v70 = swift_isUniquelyReferenced_nonNull_native();
    v195[0] = (unint64_t)v20;
    if ((v70 & 1) == 0) {
      goto LABEL_188;
    }
    goto LABEL_53;
  }
  while (2)
  {
    uint64_t v76 = (char *)(v20 + 8);
    uint64_t v77 = -1;
    uint64_t v78 = -1 << *((unsigned char *)v20 + 32);
    if (-v78 < 64) {
      uint64_t v77 = ~(-1 << -(char)v78);
    }
    unint64_t v181 = v77 & v20[8];
    unint64_t v177 = (unint64_t)(63 - v78) >> 6;
    uint64_t v79 = v21 & 0xFFFFFFFFFFFFFF8;
    uint64_t v175 = v21 & 0xFFFFFFFFFFFFFF8;
    if (v21 < 0) {
      uint64_t v79 = v21;
    }
    uint64_t v173 = (void (*)(uint64_t, uint64_t))v79;
    unint64_t v193 = v21 & 0xC000000000000001;
    swift_bridgeObjectRetain();
    int64_t v80 = 0;
    uint64_t v81 = (uint64_t)v20;
    uint64_t v174 = (char *)(v20 + 8);
LABEL_62:
    uint64_t v179 = v81;
    v0[141] = v81;
    int64_t v82 = v177;
LABEL_64:
    unint64_t v83 = v181;
    while (v83)
    {
      unint64_t v84 = __clz(__rbit64(v83));
      v83 &= v83 - 1;
      unint64_t v85 = v84 | (v80 << 6);
LABEL_66:
      uint64_t v86 = v20[6] + 16 * v85;
      if (*(unsigned char *)(v86 + 8) == 1)
      {
        unint64_t v181 = v83;
        int64_t v176 = v80;
        Swift::UInt64 v183 = *(void *)v86;
        if ((unint64_t)v21 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v89 = _CocoaArrayWrapper.endIndex.getter();
          if (v89) {
            goto LABEL_89;
          }
        }
        else
        {
          uint64_t v89 = *(void *)(v175 + 16);
          swift_bridgeObjectRetain();
          if (v89)
          {
LABEL_89:
            uint64_t v90 = 0;
            uint64_t v185 = v89;
            uint64_t v188 = v20;
            do
            {
              if (v193) {
                id v91 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v91 = *(id *)(v21 + 8 * v90 + 32);
              }
              uint64_t v92 = v91;
              uint64_t v0 = (uint64_t *)(v90 + 1);
              if (__OFADD__(v90, 1))
              {
                __break(1u);
                goto LABEL_182;
              }
              id v93 = objc_msgSend(v91, "ams_storefront");
              if (v93)
              {
                uint64_t v94 = v93;
                uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                unint64_t v97 = v96;

                sub_10054F088(45, 0xE100000000000000, v95, v97);
                uint64_t v98 = String.subscript.getter();
                unint64_t v100 = v99;
                uint64_t v10 = v101;
                unint64_t v103 = v102;
                swift_bridgeObjectRelease();
                if (!((v98 ^ v100) >> 14))
                {
                  swift_bridgeObjectRelease();
                  uint64_t v20 = v188;
                  goto LABEL_109;
                }
                uint64_t v104 = sub_1004081A0(v98, v100, v10, v103, 10);
                if ((v105 & 0x100) != 0)
                {
                  uint64_t v106 = sub_100446850(v98, v100, v10, v103, 10);
                  uint64_t v10 = v108;
                  swift_bridgeObjectRelease();
                  uint64_t v20 = v188;
                  if (v10)
                  {
                    uint64_t v21 = (uint64_t)v190;
LABEL_109:
                    uint64_t v89 = v185;
                    goto LABEL_91;
                  }
                  uint64_t v89 = v185;
                }
                else
                {
                  uint64_t v106 = v104;
                  char v107 = v105;
                  swift_bridgeObjectRelease();
                  uint64_t v89 = v185;
                  if (v107)
                  {
                    uint64_t v20 = v188;
                    uint64_t v21 = (uint64_t)v190;
                    goto LABEL_91;
                  }
                  uint64_t v20 = v188;
                }
                if (v106 == v183)
                {
                  id v109 = objc_msgSend(v92, "ams_DSID");
                  uint64_t v21 = (uint64_t)v190;
                  if (v109)
                  {
                    uint64_t v110 = v109;
                    uint64_t v10 = (uint64_t)[v109 unsignedLongLongValue];

                    if (*(void *)(v179 + 16))
                    {
                      sub_100452B44(v10, 0);
                      if (v111)
                      {
                        swift_bridgeObjectRelease();
                        id v112 = v92;
                        uint64_t result = objc_msgSend(v112, "ams_DSID");
                        if (!result) {
                          goto LABEL_192;
                        }
                        uint64_t v114 = result;
                        id v115 = [result unsignedLongLongValue];

                        swift_bridgeObjectRetain();
                        uint64_t v10 = swift_isUniquelyReferenced_nonNull_native();
                        unint64_t v117 = sub_100452B44((Swift::UInt64)v115, 0);
                        uint64_t v118 = *(void *)(v179 + 16);
                        BOOL v119 = (v116 & 1) == 0;
                        uint64_t result = (void *)(v118 + v119);
                        if (__OFADD__(v118, v119))
                        {
                          __break(1u);
                          goto LABEL_190;
                        }
                        char v120 = v116;
                        if (*(void *)(v179 + 24) >= (uint64_t)result)
                        {
                          uint64_t v21 = (uint64_t)v190;
                          if (v10)
                          {
                            if ((v116 & 1) == 0) {
                              goto LABEL_190;
                            }
                          }
                          else
                          {
                            uint64_t result = sub_10052E39C();
                            if ((v120 & 1) == 0) {
                              goto LABEL_190;
                            }
                          }
                        }
                        else
                        {
                          sub_100528028((uint64_t)result, v10);
                          uint64_t result = (void *)sub_100452B44((Swift::UInt64)v115, 0);
                          if ((v120 & 1) != (v121 & 1)) {
                            goto LABEL_176;
                          }
                          unint64_t v117 = (unint64_t)result;
                          uint64_t v21 = (uint64_t)v190;
                          if ((v120 & 1) == 0)
                          {
LABEL_190:
                            __break(1u);
                            goto LABEL_191;
                          }
                        }
                        uint64_t v0 = v194;
                        uint64_t v81 = v179;
                        uint64_t v122 = v194[133];
                        v195[0] = *(void *)(*(void *)(v179 + 56) + 8 * v117);
                        sub_100555FAC(v122);
                        if (v195[0]) {
                          *(void *)(*(void *)(v179 + 56) + 8 * v117) = v195[0];
                        }
                        else {
                          sub_1004301D4(v117, v179);
                        }
                        uint64_t v76 = v174;
                        unint64_t v123 = sub_100452B44(v183, 1);
                        if (v124)
                        {
                          uint64_t v10 = v123;
                          char v125 = swift_isUniquelyReferenced_nonNull_native();
                          v195[0] = v179;
                          if ((v125 & 1) == 0)
                          {
                            sub_10052E39C();
                            uint64_t v81 = v195[0];
                          }
                          sub_1004301D4(v10, v81);
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                        }

                        int64_t v80 = v176;
                        goto LABEL_62;
                      }
                    }
                  }
                }
                else
                {
                  uint64_t v21 = (uint64_t)v190;
                }
              }
LABEL_91:

              ++v90;
            }
            while (v0 != (uint64_t *)v89);
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v0 = v194;
        uint64_t v76 = v174;
        int64_t v80 = v176;
        int64_t v82 = v177;
        goto LABEL_64;
      }
    }
    BOOL v66 = __OFADD__(v80++, 1);
    if (v66)
    {
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
      goto LABEL_187;
    }
    if (v80 >= v82) {
      break;
    }
    unint64_t v87 = *(void *)&v76[8 * v80];
    if (v87)
    {
LABEL_82:
      unint64_t v83 = (v87 - 1) & v87;
      unint64_t v85 = __clz(__rbit64(v87)) + (v80 << 6);
      goto LABEL_66;
    }
    int64_t v88 = v80 + 1;
    if (v80 + 1 >= v82) {
      break;
    }
    unint64_t v87 = *(void *)&v76[8 * v88];
    if (v87) {
      goto LABEL_81;
    }
    int64_t v88 = v80 + 2;
    if (v80 + 2 >= v82) {
      break;
    }
    unint64_t v87 = *(void *)&v76[8 * v88];
    if (v87) {
      goto LABEL_81;
    }
    int64_t v88 = v80 + 3;
    if (v80 + 3 >= v82) {
      break;
    }
    unint64_t v87 = *(void *)&v76[8 * v88];
    if (v87) {
      goto LABEL_81;
    }
    int64_t v88 = v80 + 4;
    if (v80 + 4 >= v82) {
      break;
    }
    unint64_t v87 = *(void *)&v76[8 * v88];
    if (v87)
    {
LABEL_81:
      int64_t v80 = v88;
      goto LABEL_82;
    }
    int64_t v88 = v80 + 5;
    if (v80 + 5 < v82)
    {
      unint64_t v87 = *(void *)&v76[8 * v88];
      if (!v87)
      {
        while (1)
        {
          int64_t v80 = v88 + 1;
          if (__OFADD__(v88, 1)) {
            break;
          }
          if (v80 >= v82) {
            goto LABEL_132;
          }
          unint64_t v87 = *(void *)&v76[8 * v80];
          ++v88;
          if (v87) {
            goto LABEL_82;
          }
        }
LABEL_187:
        __break(1u);
LABEL_188:
        sub_10052E39C();
        uint64_t v20 = (void *)v195[0];
LABEL_53:
        uint64_t v71 = *(void *)(v20[7] + 8 * v10);
        sub_1004301D4(v10, (uint64_t)v20);
        swift_bridgeObjectRelease();
        static Logger.updates.getter();
        swift_bridgeObjectRetain();
        uint64_t v72 = Logger.logObject.getter();
        os_log_type_t v73 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v72, v73))
        {
          uint64_t v10 = (uint64_t)(v0 + 76);
          BOOL v74 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)BOOL v74 = 134217984;
          uint64_t v75 = *(void *)(v71 + 16);
          swift_bridgeObjectRelease();
          *(void *)uint64_t v10 = v75;
          uint64_t v0 = v194;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v72, v73, "Ignoring %ld apps without an account that are not B2B", v74, 0xCu);
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        v173(v0[125], v0[118]);
        continue;
      }
      goto LABEL_81;
    }
    break;
  }
LABEL_132:
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v126 = *(unsigned char *)(v179 + 32);
  *((unsigned char *)v0 + 595) = v126;
  uint64_t v127 = 1 << v126;
  if (v127 < 64) {
    uint64_t v128 = ~(-1 << v127);
  }
  else {
    uint64_t v128 = -1;
  }
  unint64_t v129 = v128 & *(void *)(v179 + 64);
  swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
  while (2)
  {
    if (v129)
    {
      unint64_t v131 = __clz(__rbit64(v129));
      v129 &= v129 - 1;
      unint64_t v132 = v131 | (v21 << 6);
      uint64_t result = (void *)v0[141];
    }
    else
    {
      BOOL v66 = __OFADD__(v21++, 1);
      if (v66) {
        goto LABEL_185;
      }
      int64_t v133 = (unint64_t)((1 << *((unsigned char *)v0 + 595)) + 63) >> 6;
      uint64_t result = (void *)v0[141];
      if (v21 >= v133)
      {
LABEL_173:
        swift_release();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v172 = (uint64_t (*)(void))v0[1];
        return (void *)v172();
      }
      unint64_t v134 = result + 8;
      unint64_t v135 = result[v21 + 8];
      if (!v135)
      {
        uint64_t v136 = v21 + 1;
        if (v21 + 1 >= v133) {
          goto LABEL_173;
        }
        unint64_t v135 = v134[v136];
        if (!v135)
        {
          uint64_t v136 = v21 + 2;
          if (v21 + 2 >= v133) {
            goto LABEL_173;
          }
          unint64_t v135 = v134[v136];
          if (!v135)
          {
            uint64_t v136 = v21 + 3;
            if (v21 + 3 >= v133) {
              goto LABEL_173;
            }
            unint64_t v135 = v134[v136];
            if (!v135)
            {
              while (1)
              {
                uint64_t v21 = v136 + 1;
                if (__OFADD__(v136, 1)) {
                  goto LABEL_186;
                }
                if (v21 >= v133) {
                  goto LABEL_173;
                }
                unint64_t v135 = v134[v21];
                ++v136;
                if (v135) {
                  goto LABEL_150;
                }
              }
            }
          }
        }
        uint64_t v21 = v136;
      }
LABEL_150:
      unint64_t v129 = (v135 - 1) & v135;
      unint64_t v132 = __clz(__rbit64(v135)) + (v21 << 6);
    }
    v0[143] = v129;
    v0[142] = v21;
    uint64_t v137 = result[6] + 16 * v132;
    uint64_t v138 = *(void *)v137;
    int v139 = *(unsigned __int8 *)(v137 + 8);
    uint64_t v140 = *(void *)(result[7] + 8 * v132);
    v0[144] = v140;
    if (!v139)
    {
      uint64_t v141 = (void *)v0[84];
      swift_bridgeObjectRetain();
      Class isa = UInt64._bridgeToObjectiveC()().super.super.isa;
      id v143 = objc_msgSend(v141, (SEL)p_base_prots[465], isa);

      if (v143)
      {
        id v144 = v143;
        id v145 = objc_msgSend(v144, "ams_storefront");
        if (v145)
        {
          uint64_t v146 = v145;
          unint64_t v189 = v129;
          uint64_t v190 = v144;
          uint64_t v186 = v21;
          uint64_t v147 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v149 = v148;

          sub_10054F088(45, 0xE100000000000000, v147, v149);
          uint64_t v150 = String.subscript.getter();
          unint64_t v152 = v151;
          unint64_t v154 = v153;
          unint64_t v156 = v155;
          swift_bridgeObjectRelease();
          if ((v150 ^ v152) >> 14)
          {
            uint64_t v157 = sub_1004081A0(v150, v152, v154, v156, 10);
            if ((v158 & 0x100) != 0)
            {
              uint64_t v162 = sub_100446850(v150, v152, v154, v156, 10);
              char v164 = v163;
              swift_bridgeObjectRelease();

              uint64_t v0 = v194;
              if ((v164 & 1) == 0)
              {
                uint64_t v138 = v162;
                uint64_t v161 = (uint64_t)v190;
                goto LABEL_170;
              }
              p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
              uint64_t v21 = v186;
              unint64_t v129 = v189;
            }
            else
            {
              uint64_t v159 = v157;
              char v160 = v158;
              swift_bridgeObjectRelease();
              uint64_t v161 = (uint64_t)v190;

              uint64_t v0 = v194;
              unint64_t v129 = v189;
              if ((v160 & 1) == 0)
              {
                uint64_t v138 = v159;
                goto LABEL_170;
              }
              p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
              uint64_t v21 = v186;
            }
            goto LABEL_166;
          }
          swift_bridgeObjectRelease();
          uint64_t v0 = v194;
          p_base_prots = &XPCClientRegistry.base_prots;
          uint64_t v21 = v186;
          unint64_t v129 = v189;
          id v144 = v190;
        }
      }
LABEL_166:
      static Logger.updates.getter();
      swift_bridgeObjectRetain();
      uint64_t v165 = Logger.logObject.getter();
      os_log_type_t v166 = static os_log_type_t.error.getter();
      uint64_t v10 = v166;
      if (os_log_type_enabled(v165, v166))
      {
        uint64_t v167 = p_base_prots;
        unint64_t v168 = v129;
        uint64_t v169 = swift_slowAlloc();
        *(_DWORD *)uint64_t v169 = 134218241;
        uint64_t v170 = *(void *)(v140 + 16);
        swift_bridgeObjectRelease();
        *(void *)(v169 + 4) = v170;
        swift_bridgeObjectRelease();
        *(_WORD *)(v169 + 12) = 2053;
        *(void *)(v169 + 14) = v138;
        _os_log_impl((void *)&_mh_execute_header, v165, (os_log_type_t)v10, "Skipping %ld app(s), associated account %{sensitive}llu was not found or has no storefront", (uint8_t *)v169, 0x16u);
        unint64_t v129 = v168;
        p_base_prots = v167;
        uint64_t v0 = v194;
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      ((void (*)(uint64_t, uint64_t))v0[139])(v0[124], v0[118]);
      continue;
    }
    break;
  }
  if (v139 == 1)
  {
    swift_bridgeObjectRetain();
    uint64_t v161 = 0;
LABEL_170:
    v0[147] = v161;
    v0[146] = v138;
    v0[145] = 0;
    uint64_t v171 = (void *)swift_task_alloc();
    v0[148] = (uint64_t)v171;
    *uint64_t v171 = v0;
    v171[1] = sub_1003F9574;
    return (void *)sub_100408DC4(v138);
  }
LABEL_191:
  __break(1u);
LABEL_192:
  __break(1u);
  return result;
}

uint64_t sub_1003F9574(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1192) = a1;
  *(void *)(v3 + 1200) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_1003F9678, 0, 0);
}

uint64_t sub_1003F9678()
{
  uint64_t v3 = *(void *)(v1 + 1152);
  if (*(void *)(v1 + 1200))
  {
    uint64_t v4 = *(void *)(v1 + 1104);
    if (!*(unsigned char *)(v1 + 594)) {
      uint64_t v4 = 100;
    }
    int64_t v5 = *(void *)(v3 + 16);
    *(void *)(v1 + 1208) = v5;
    if (!v4)
    {
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    if (v4 >= 1 && v5 != 0)
    {
      *(void *)(v1 + 1216) = v4;
      if (v4 >= v5) {
        unint64_t v2 = v5;
      }
      else {
        unint64_t v2 = v4;
      }
      if (*(void *)(v3 + 16) >= v2)
      {
        type metadata accessor for __ContiguousArrayStorageBase();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain_n();
        uint64_t v13 = (void *)swift_dynamicCastClass();
        if (!v13)
        {
          swift_bridgeObjectRelease();
          uint64_t v13 = _swiftEmptyArrayStorage;
        }
        uint64_t v14 = v13[2];
        swift_release();
        uint64_t v0 = *(char **)(v1 + 1152);
        if (v14 == v2)
        {
          uint64_t v15 = (void *)swift_dynamicCastClass();
          if (!v15)
          {
            swift_bridgeObjectRelease();
            uint64_t v15 = _swiftEmptyArrayStorage;
          }
          goto LABEL_22;
        }
LABEL_75:
        uint64_t v72 = *(void *)(v1 + 880);
        swift_bridgeObjectRelease();
        uint64_t v15 = sub_1004FDAD0((uint64_t)v0, (uint64_t)&v0[(*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80)], 0, (2 * v2) | 1);
LABEL_22:
        *(void *)(v1 + 1224) = v15;
        uint64_t v16 = *(void *)(v1 + 1200);
        uint64_t v17 = *(void **)(v1 + 1176);
        swift_bridgeObjectRelease();
        id v18 = v17;
        uint64_t v19 = (void *)swift_task_alloc();
        *(void *)(v1 + 1232) = v19;
        *uint64_t v19 = v1;
        v19[1] = sub_1003F9F78;
        uint64_t v20 = *(void *)(v1 + 1192);
        uint64_t v21 = *(void *)(v1 + 1176);
        uint64_t v22 = *(void *)(v1 + 664);
        uint64_t v23 = *(void *)(v1 + 656);
        uint64_t v24 = *(void *)(v1 + 648);
        return sub_1004047E8((uint64_t)v15, v21, v20, v16, v24, v23, v22);
      }
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    uint64_t v7 = *(void **)(v1 + 1176);
    uint64_t v78 = *(void *)(v1 + 1160);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {
    static Logger.updates.getter();
    swift_bridgeObjectRetain();
    unint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = *(void *)(v1 + 1168);
      uint64_t v11 = *(void *)(v1 + 1152);
      uint64_t v0 = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v0 = 134218240;
      uint64_t v12 = *(void *)(v11 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 4) = v12;
      swift_bridgeObjectRelease();
      *((_WORD *)v0 + 6) = 2048;
      *(void *)(v0 + 14) = v10;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Skipping %ld app(s), country code could not be resolved for storefront %llu", (uint8_t *)v0, 0x16u);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v26 = *(void **)(v1 + 1176);
    (*(void (**)(void, void))(v1 + 1112))(*(void *)(v1 + 976), *(void *)(v1 + 944));

    uint64_t v78 = *(void *)(v1 + 1160);
  }
  unint64_t v2 = *(void *)(v1 + 1144);
  int64_t v27 = *(void *)(v1 + 1136);
  p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
  uint64_t v73 = v1;
  while (1)
  {
    if (v2)
    {
      unint64_t v29 = __clz(__rbit64(v2));
      v2 &= v2 - 1;
      unint64_t v30 = v29 | (v27 << 6);
      uint64_t result = *(void *)(v1 + 1128);
    }
    else
    {
      if (__OFADD__(v27++, 1))
      {
        __break(1u);
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
      int64_t v32 = (unint64_t)((1 << *(unsigned char *)(v1 + 595)) + 63) >> 6;
      uint64_t result = *(void *)(v1 + 1128);
      if (v27 >= v32) {
        goto LABEL_66;
      }
      uint64_t v33 = result + 64;
      unint64_t v34 = *(void *)(result + 64 + 8 * v27);
      if (!v34)
      {
        int64_t v35 = v27 + 1;
        if (v27 + 1 >= v32) {
          goto LABEL_66;
        }
        unint64_t v34 = *(void *)(v33 + 8 * v35);
        if (!v34)
        {
          int64_t v35 = v27 + 2;
          if (v27 + 2 >= v32) {
            goto LABEL_66;
          }
          unint64_t v34 = *(void *)(v33 + 8 * v35);
          if (!v34)
          {
            int64_t v35 = v27 + 3;
            if (v27 + 3 >= v32)
            {
LABEL_66:
              swift_release();
              swift_bridgeObjectRelease();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              uint64_t v71 = *(uint64_t (**)(void))(v1 + 8);
              return v71();
            }
            unint64_t v34 = *(void *)(v33 + 8 * v35);
            if (!v34)
            {
              while (1)
              {
                int64_t v27 = v35 + 1;
                if (__OFADD__(v35, 1)) {
                  goto LABEL_72;
                }
                if (v27 >= v32) {
                  goto LABEL_66;
                }
                unint64_t v34 = *(void *)(v33 + 8 * v27);
                ++v35;
                if (v34) {
                  goto LABEL_42;
                }
              }
            }
          }
        }
        int64_t v27 = v35;
      }
LABEL_42:
      unint64_t v2 = (v34 - 1) & v34;
      unint64_t v30 = __clz(__rbit64(v34)) + (v27 << 6);
    }
    *(void *)(v1 + 1144) = v2;
    *(void *)(v1 + 1136) = v27;
    uint64_t v36 = *(void *)(result + 48) + 16 * v30;
    uint64_t v37 = *(void *)v36;
    int v38 = *(unsigned __int8 *)(v36 + 8);
    uint64_t v39 = *(void *)(*(void *)(result + 56) + 8 * v30);
    *(void *)(v1 + 1152) = v39;
    if (v38)
    {
      if (v38 == 1)
      {
        swift_bridgeObjectRetain();
        uint64_t v60 = 0;
        uint64_t v55 = v78;
        goto LABEL_63;
      }
      __break(1u);
      return result;
    }
    int v40 = *(void **)(v1 + 672);
    swift_bridgeObjectRetain();
    Class isa = UInt64._bridgeToObjectiveC()().super.super.isa;
    uint64_t v0 = (char *)objc_msgSend(v40, (SEL)p_base_prots[465], isa);

    if (v0) {
      break;
    }
LABEL_59:
    static Logger.updates.getter();
    swift_bridgeObjectRetain();
    uint64_t v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v64, v65))
    {
      BOOL v66 = p_base_prots;
      unint64_t v67 = v2;
      uint64_t v68 = swift_slowAlloc();
      *(_DWORD *)uint64_t v68 = 134218241;
      uint64_t v69 = *(void *)(v39 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v68 + 4) = v69;
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 12) = 2053;
      *(void *)(v68 + 14) = v37;
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "Skipping %ld app(s), associated account %{sensitive}llu was not found or has no storefront", (uint8_t *)v68, 0x16u);
      unint64_t v2 = v67;
      p_base_prots = v66;
      uint64_t v1 = v73;
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(void, void))(v1 + 1112))(*(void *)(v1 + 992), *(void *)(v1 + 944));
  }
  char v42 = v0;
  id v43 = objc_msgSend(v42, "ams_storefront");
  if (!v43)
  {
LABEL_58:

    goto LABEL_59;
  }
  uint64_t v44 = v43;
  uint64_t v77 = v42;
  BOOL v74 = v0;
  unint64_t v75 = v2;
  int64_t v76 = v27;
  uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v47 = v46;

  sub_10054F088(45, 0xE100000000000000, v45, v47);
  uint64_t v48 = String.subscript.getter();
  unint64_t v50 = v49;
  unint64_t v52 = v51;
  unint64_t v54 = v53;
  swift_bridgeObjectRelease();
  if (!((v48 ^ v50) >> 14))
  {
    swift_bridgeObjectRelease();
    p_base_prots = &XPCClientRegistry.base_prots;
    unint64_t v2 = v75;
    int64_t v27 = v76;
    char v42 = v77;
    goto LABEL_58;
  }
  uint64_t v55 = v78;
  uint64_t v56 = sub_1004081A0(v48, v50, v52, v54, 10);
  if ((v57 & 0x100) == 0)
  {
    uint64_t v58 = v56;
    char v59 = v57;
    swift_bridgeObjectRelease();
    uint64_t v60 = v77;

    unint64_t v2 = v75;
    int64_t v27 = v76;
    if ((v59 & 1) == 0)
    {
      uint64_t v37 = v58;
      goto LABEL_63;
    }
    p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
    goto LABEL_52;
  }
  uint64_t v61 = sub_100446850(v48, v50, v52, v54, 10);
  char v63 = v62;
  swift_bridgeObjectRelease();

  if (v63)
  {
    p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
    unint64_t v2 = v75;
    int64_t v27 = v76;
LABEL_52:
    uint64_t v0 = v74;
    goto LABEL_59;
  }
  uint64_t v37 = v61;
  uint64_t v60 = v77;
LABEL_63:
  *(void *)(v1 + 1176) = v60;
  *(void *)(v1 + 1168) = v37;
  *(void *)(v1 + 1160) = v55;
  char v70 = (void *)swift_task_alloc();
  *(void *)(v1 + 1184) = v70;
  void *v70 = v1;
  v70[1] = sub_1003F9574;
  return sub_100408DC4(v37);
}

uint64_t sub_1003F9F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *v5;
  *(void *)(v6 + 1240) = a1;
  *(void *)(v6 + 1248) = a2;
  *(void *)(v6 + 1256) = a3;
  *(void *)(v6 + 1264) = a4;
  *(void *)(v6 + 1272) = v4;
  swift_task_dealloc();
  if (v4)
  {
    uint64_t v7 = *(void **)(v6 + 1176);
    swift_release();

    unint64_t v8 = sub_100403FB0;
  }
  else
  {

    unint64_t v8 = sub_1003FA0B4;
  }
  return _swift_task_switch(v8, 0, 0);
}

void sub_1003FA0B4()
{
  uint64_t v155 = v2;
  uint64_t v4 = *(void *)(*(void *)(v2 + 1240) + 16);
  *(void *)(v2 + 1280) = v4;
  if (!v4)
  {
    swift_release();
    uint64_t v150 = *(void *)(v2 + 1272);
    uint64_t v7 = _swiftEmptyArrayStorage;
    goto LABEL_28;
  }
  uint64_t v5 = *(void *)(v2 + 800);
  *(void *)(v2 + 1288) = *(void *)(*(void *)(v2 + 1224) + 16);
  *(_DWORD *)(v2 + 596) = *(_DWORD *)(v5 + 80);
  uint64_t v150 = *(void *)(v2 + 1272);
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
  uint64_t v7 = _swiftEmptyArrayStorage;
  while (1)
  {
    *(void *)(v2 + 1304) = v7;
    *(void *)(v2 + 1296) = v6;
    uint64_t v8 = *(void *)(v2 + 1240);
    if (v6 >= *(void *)(v8 + 16))
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
      goto LABEL_106;
    }
    uint64_t v9 = *(void *)(v2 + 1288);
    uint64_t v10 = *(uint64_t **)(v2 + 816);
    sub_100409D98(v8+ ((*(unsigned __int8 *)(v2 + 596) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 596))+ *(void *)(*(void *)(v2 + 800) + 72) * v6, (uint64_t)v10, type metadata accessor for MediaAPIApp);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1004BD574(v11, v12);
    if (v9) {
      break;
    }
    unint64_t v152 = v7;
LABEL_16:
    uint64_t v30 = *(void *)(v2 + 816);
    uint64_t v31 = *(void *)(v2 + 808);
    static Logger.updates.getter();
    sub_100409D98(v30, v31, type metadata accessor for MediaAPIApp);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.info.getter();
    BOOL v33 = os_log_type_enabled((os_log_t)v3, v32);
    id v1 = *(id *)(v2 + 1112);
    uint64_t v34 = *(void *)(v2 + 984);
    uint64_t v35 = *(void *)(v2 + 944);
    uint64_t v36 = *(void *)(v2 + 816);
    uint64_t v37 = *(id **)(v2 + 808);
    if (v33)
    {
      uint64_t v38 = swift_slowAlloc();
      v154[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 136446210;
      id v145 = (void (*)(uint64_t, uint64_t))v1;
      id v1 = *v37;
      unint64_t v39 = (unint64_t)v37[1];
      swift_bridgeObjectRetain();
      *(void *)(v38 + 4) = sub_1000143F4((uint64_t)v1, v39, v154);
      swift_bridgeObjectRelease();
      uint64_t v0 = (uint64_t)type metadata accessor for MediaAPIApp;
      sub_100409E00((uint64_t)v37, type metadata accessor for MediaAPIApp);
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v3, v32, "Ignoring unexpected update for %{public}s", (uint8_t *)v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v145(v34, v35);
    }
    else
    {

      uint64_t v0 = (uint64_t)type metadata accessor for MediaAPIApp;
      sub_100409E00((uint64_t)v37, type metadata accessor for MediaAPIApp);
      ((void (*)(uint64_t, uint64_t))v1)(v34, v35);
    }
    sub_100409E00(v36, type metadata accessor for MediaAPIApp);
    uint64_t v7 = v152;
LABEL_5:
    unint64_t v6 = *(void *)(v2 + 1296) + 1;
    if (v6 == *(void *)(v2 + 1280))
    {
      swift_bridgeObjectRelease();
      swift_release();
LABEL_28:
      uint64_t v3 = *(void *)(v2 + 1264);
      uint64_t v66 = *(void *)(v2 + 1256);
      if (v7[2])
      {
        sub_10056C034((uint64_t)v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10018AE44(v66, v3);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10018AE44(v66, v3);
      }
      uint64_t v0 = *(void *)(v2 + 1216);
      uint64_t v67 = *(void *)(v2 + 1208);
      if (v0 < v67)
      {
        uint64_t v68 = *(void *)(v2 + 1104);
        if (!*(unsigned char *)(v2 + 594)) {
          uint64_t v68 = 100;
        }
        unint64_t v69 = v0 + v68;
        if (__OFADD__(v0, v68)) {
          unint64_t v69 = ((v0 + v68) >> 63) ^ 0x8000000000000000;
        }
        *(void *)(v2 + 1216) = v69;
        BOOL v70 = __OFSUB__(v67, v0);
        uint64_t v71 = v67 - v0;
        if (!v70)
        {
          if (v68 >= v71) {
            uint64_t v3 = v71;
          }
          else {
            uint64_t v3 = v68;
          }
          if (v3 >= v0)
          {
            if ((v0 & 0x8000000000000000) == 0)
            {
              id v1 = *(id *)(v2 + 1152);
              uint64_t v72 = *((void *)v1 + 2);
              if (v72 >= (unint64_t)v0 && v72 >= v3)
              {
                type metadata accessor for __ContiguousArrayStorageBase();
                swift_bridgeObjectRetain();
                swift_unknownObjectRetain_n();
                uint64_t v73 = (void *)swift_dynamicCastClass();
                if (!v73)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v73 = _swiftEmptyArrayStorage;
                }
                uint64_t v74 = v73[2];
                swift_release();
                id v1 = *(id *)(v2 + 1152);
                if (v74 == v3 - v0)
                {
                  unint64_t v75 = (void *)swift_dynamicCastClass();
                  if (!v75)
                  {
                    swift_bridgeObjectRelease();
                    unint64_t v75 = _swiftEmptyArrayStorage;
                  }
                  goto LABEL_49;
                }
LABEL_110:
                unint64_t v143 = (2 * v3) | 1;
                uint64_t v144 = *(void *)(v2 + 880);
                swift_bridgeObjectRelease();
                unint64_t v75 = sub_1004FDAD0((uint64_t)v1, (uint64_t)v1+ ((*(unsigned __int8 *)(v144 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80)), v0, v143);
LABEL_49:
                *(void *)(v2 + 1224) = v75;
                uint64_t v76 = *(void *)(v2 + 1200);
                uint64_t v77 = *(void **)(v2 + 1176);
                swift_bridgeObjectRelease();
                id v78 = v77;
                uint64_t v79 = (void *)swift_task_alloc();
                *(void *)(v2 + 1232) = v79;
                void *v79 = v2;
                v79[1] = sub_1003F9F78;
                uint64_t v80 = *(void *)(v2 + 1192);
                uint64_t v81 = *(void *)(v2 + 1176);
                uint64_t v82 = *(void *)(v2 + 664);
                uint64_t v83 = *(void *)(v2 + 656);
                uint64_t v84 = *(void *)(v2 + 648);
                sub_1004047E8((uint64_t)v75, v81, v80, v76, v84, v83, v82);
                return;
              }
LABEL_109:
              __break(1u);
              goto LABEL_110;
            }
LABEL_108:
            __break(1u);
            goto LABEL_109;
          }
LABEL_107:
          __break(1u);
          goto LABEL_108;
        }
LABEL_106:
        __break(1u);
        goto LABEL_107;
      }
      uint64_t v0 = *(void *)(v2 + 1200);
      unint64_t v85 = *(void **)(v2 + 1176);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      unint64_t v88 = *(void *)(v2 + 1144);
      int64_t v89 = *(void *)(v2 + 1136);
      p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
      while (1)
      {
        if (v88)
        {
          unint64_t v91 = __clz(__rbit64(v88));
          v88 &= v88 - 1;
          unint64_t v92 = v91 | (v89 << 6);
          id v93 = *(uint64_t (**)())(v2 + 1128);
        }
        else
        {
          BOOL v70 = __OFADD__(v89++, 1);
          if (v70) {
            goto LABEL_104;
          }
          int64_t v94 = (unint64_t)((1 << *(unsigned char *)(v2 + 595)) + 63) >> 6;
          id v93 = *(uint64_t (**)())(v2 + 1128);
          if (v89 >= v94)
          {
LABEL_90:
            swift_release();
            swift_bridgeObjectRelease();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            uint64_t v128 = *(void (**)(void))(v2 + 8);
            v128();
            return;
          }
          uint64_t v95 = (char *)v93 + 64;
          unint64_t v96 = *((void *)v93 + v89 + 8);
          if (!v96)
          {
            int64_t v97 = v89 + 1;
            if (v89 + 1 >= v94) {
              goto LABEL_90;
            }
            unint64_t v96 = *(void *)&v95[8 * v97];
            if (!v96)
            {
              int64_t v97 = v89 + 2;
              if (v89 + 2 >= v94) {
                goto LABEL_90;
              }
              unint64_t v96 = *(void *)&v95[8 * v97];
              if (!v96)
              {
                int64_t v97 = v89 + 3;
                if (v89 + 3 >= v94) {
                  goto LABEL_90;
                }
                unint64_t v96 = *(void *)&v95[8 * v97];
                if (!v96)
                {
                  while (1)
                  {
                    int64_t v89 = v97 + 1;
                    if (__OFADD__(v97, 1)) {
                      goto LABEL_105;
                    }
                    if (v89 >= v94) {
                      goto LABEL_90;
                    }
                    unint64_t v96 = *(void *)&v95[8 * v89];
                    ++v97;
                    if (v96) {
                      goto LABEL_67;
                    }
                  }
                }
              }
            }
            int64_t v89 = v97;
          }
LABEL_67:
          unint64_t v88 = (v96 - 1) & v96;
          unint64_t v92 = __clz(__rbit64(v96)) + (v89 << 6);
        }
        *(void *)(v2 + 1144) = v88;
        *(void *)(v2 + 1136) = v89;
        uint64_t v98 = *((void *)v93 + 6) + 16 * v92;
        uint64_t v99 = *(void *)v98;
        int v100 = *(unsigned __int8 *)(v98 + 8);
        uint64_t v101 = *(void *)(*((void *)v93 + 7) + 8 * v92);
        *(void *)(v2 + 1152) = v101;
        if (v100)
        {
          if (v100 != 1)
          {
            __break(1u);
            goto _swift_task_switch;
          }
          swift_bridgeObjectRetain();
          uint64_t v118 = 0;
          goto LABEL_87;
        }
        unint64_t v102 = *(void **)(v2 + 672);
        swift_bridgeObjectRetain();
        Class isa = UInt64._bridgeToObjectiveC()().super.super.isa;
        id v1 = objc_msgSend(v102, (SEL)p_base_prots[465], isa);

        if (v1)
        {
          id v104 = v1;
          id v105 = objc_msgSend(v104, "ams_storefront");
          if (!v105) {
            goto LABEL_82;
          }
          uint64_t v106 = v105;
          unint64_t v153 = v104;
          unint64_t v148 = v88;
          int64_t v149 = v89;
          uint64_t v107 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v109 = v108;

          sub_10054F088(45, 0xE100000000000000, v107, v109);
          uint64_t v3 = String.subscript.getter();
          unint64_t v111 = v110;
          unint64_t v113 = v112;
          unint64_t v115 = v114;
          swift_bridgeObjectRelease();
          if (!((v3 ^ v111) >> 14))
          {
            swift_bridgeObjectRelease();
            p_base_prots = &XPCClientRegistry.base_prots;
            unint64_t v88 = v148;
            int64_t v89 = v149;
            id v104 = v153;
LABEL_82:

            goto LABEL_83;
          }
          id v146 = v1;
          uint64_t v116 = sub_1004081A0(v3, v111, v113, v115, 10);
          uint64_t v118 = v153;
          if ((v117 & 0x100) != 0)
          {
            uint64_t v121 = sub_100446850(v3, v111, v113, v115, 10);
            char v123 = v122;
            swift_bridgeObjectRelease();

            if ((v123 & 1) == 0)
            {
              uint64_t v99 = v121;
              goto LABEL_87;
            }
          }
          else
          {
            uint64_t v119 = v116;
            char v120 = v117;
            swift_bridgeObjectRelease();

            if ((v120 & 1) == 0)
            {
              uint64_t v99 = v119;
LABEL_87:
              *(void *)(v2 + 1176) = v118;
              *(void *)(v2 + 1168) = v99;
              *(void *)(v2 + 1160) = v150;
              uint64_t v127 = (void *)swift_task_alloc();
              *(void *)(v2 + 1184) = v127;
              *uint64_t v127 = v2;
              v127[1] = sub_1003F9574;
              sub_100408DC4(v99);
              return;
            }
          }
          p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
          unint64_t v88 = v148;
          int64_t v89 = v149;
          id v1 = v146;
        }
LABEL_83:
        static Logger.updates.getter();
        swift_bridgeObjectRetain();
        uint64_t v0 = Logger.logObject.getter();
        os_log_type_t v124 = static os_log_type_t.error.getter();
        if (os_log_type_enabled((os_log_t)v0, v124))
        {
          uint64_t v3 = swift_slowAlloc();
          *(_DWORD *)uint64_t v3 = 134218241;
          id v125 = v1;
          uint64_t v126 = *(void *)(v101 + 16);
          swift_bridgeObjectRelease();
          *(void *)(v3 + 4) = v126;
          id v1 = v125;
          swift_bridgeObjectRelease();
          *(_WORD *)(v3 + 12) = 2053;
          *(void *)(v3 + 14) = v99;
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v0, v124, "Skipping %ld app(s), associated account %{sensitive}llu was not found or has no storefront", (uint8_t *)v3, 0x16u);
          p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        (*(void (**)(void, void))(v2 + 1112))(*(void *)(v2 + 992), *(void *)(v2 + 944));
      }
    }
  }
  uint64_t v15 = v13;
  char v16 = v14;
  uint64_t v17 = *(void *)(v2 + 880);
  uint64_t v18 = *(void *)(v2 + 1224)
      + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  swift_bridgeObjectRetain();
  uint64_t v19 = 0;
  uint64_t v20 = *(void *)(v17 + 72);
  while (1)
  {
    sub_100409D98(v18, *(void *)(v2 + 896), type metadata accessor for MediaAPIUpdates.App);
    uint64_t v22 = *(void *)(v2 + 896);
    if ((v16 & 1) == 0)
    {
      uint64_t v23 = *(int **)(v2 + 872);
      if (*(void *)(v22 + v23[10]) == v15) {
        break;
      }
    }
    ++v19;
    uint64_t v21 = *(void *)(v2 + 1288);
    sub_100409E00(*(void *)(v2 + 896), type metadata accessor for MediaAPIUpdates.App);
    v18 += v20;
    if (v19 == v21)
    {
      unint64_t v152 = v7;
      swift_release();
      goto LABEL_16;
    }
  }
  uint64_t v24 = *(void *)(v2 + 912);
  uint64_t v25 = *(void *)(v2 + 904);
  uint64_t v26 = *(void *)(v2 + 848);
  uint64_t v27 = *(void *)(v2 + 840);
  uint64_t v28 = *(void *)(v2 + 824);
  swift_release();
  sub_10040C2A8(v22, v25, type metadata accessor for MediaAPIUpdates.App);
  sub_10040C2A8(v25, v24, type metadata accessor for MediaAPIUpdates.App);
  uint64_t v29 = *(void *)(v24 + v23[13]);
  sub_100017238(v24 + v23[5], v28, &qword_10065C3C0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v28, 1, v27) == 1)
  {
    sub_10001729C(*(void *)(v2 + 824), &qword_10065C3C0);
LABEL_21:
    sub_100409E60();
    id v1 = (id)swift_allocError();
    swift_willThrow();
    uint64_t v49 = *(void *)(v2 + 912);
    uint64_t v50 = *(void *)(v2 + 888);
    static Logger.updates.getter();
    sub_100409D98(v49, v50, type metadata accessor for MediaAPIUpdates.App);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.error.getter();
    uint64_t v3 = v52;
    BOOL v53 = os_log_type_enabled(v51, v52);
    unint64_t v54 = *(void (**)(uint64_t, uint64_t))(v2 + 1112);
    uint64_t v55 = *(void *)(v2 + 960);
    uint64_t v56 = *(void *)(v2 + 944);
    uint64_t v57 = *(void *)(v2 + 888);
    if (v53)
    {
      uint64_t v58 = *(void *)(v2 + 872);
      uint64_t v151 = *(void *)(v2 + 960);
      uint64_t v59 = swift_slowAlloc();
      v154[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v59 = 134218242;
      uint64_t v60 = *(void *)(v57 + *(int *)(v58 + 40));
      sub_100409E00(v57, type metadata accessor for MediaAPIUpdates.App);
      *(void *)(v59 + 4) = v60;
      *(_WORD *)(v59 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v147 = v56;
      uint64_t v61 = *(void *)(*(void *)(v2 + 568) - 8);
      swift_task_alloc();
      (*(void (**)(void))(v61 + 16))();
      id v1 = (id)String.init<A>(describing:)();
      unint64_t v63 = v62;
      swift_task_dealloc();
      *(void *)(v59 + 14) = sub_1000143F4((uint64_t)v1, v63, v154);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      v54(v151, v147);
    }
    else
    {
      sub_100409E00(v57, type metadata accessor for MediaAPIUpdates.App);
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();

      v54(v55, v56);
    }
    *(void *)(v2 + 1440) = 0;
    uint64_t v64 = *(uint64_t **)(v2 + 912);
    uint64_t v65 = v64[1];
    *(void *)(v2 + 1448) = v65;
    if (v65)
    {
      unint64_t v129 = *(void **)(v2 + 680);
      uint64_t v130 = *v64;
      uint64_t v132 = v129[23];
      uint64_t v131 = v129[24];
      uint64_t v133 = v129[25];
      uint64_t v134 = v129[28];
      swift_bridgeObjectRetain();
      unint64_t v135 = (void *)swift_task_alloc();
      *(void *)(v2 + 1456) = v135;
      *unint64_t v135 = v2;
      v135[1] = sub_100402944;
      uint64_t v136 = *(void *)(v2 + 752);
      uint64_t v137 = *(void *)(v2 + 728);
      __int16 v157 = 0;
      sub_1004FFCA8(v136, v137, v130, v65, v131, v132, v133, v134);
      return;
    }
    uint64_t v0 = *(void *)(v2 + 816);
    sub_100409E00((uint64_t)v64, type metadata accessor for MediaAPIUpdates.App);
    sub_100409E00(v0, type metadata accessor for MediaAPIApp);
    uint64_t v150 = 0;
    uint64_t v7 = *(void **)(v2 + 1304);
    goto LABEL_5;
  }
  uint64_t v40 = *(void *)(v2 + 856);
  (*(void (**)(uint64_t, void, void))(*(void *)(v2 + 848) + 32))(v40, *(void *)(v2 + 824), *(void *)(v2 + 840));
  uint64_t v41 = *(void *)(v29 + 16);
  uint64_t v42 = v41 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v41 + 16);
  id v43 = (os_unfair_lock_s *)(v41 + ((*(unsigned int *)(*(void *)v41 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v43);
  sub_100407430(v42, v40, (void *)(v2 + 640));
  if (v150)
  {
    os_unfair_lock_unlock(v43);
    return;
  }
  uint64_t v44 = *(void *)(v2 + 856);
  uint64_t v45 = *(void *)(v2 + 848);
  uint64_t v46 = *(void *)(v2 + 840);
  os_unfair_lock_unlock(v43);
  unint64_t v47 = *(void **)(v2 + 640);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
  if (!v47) {
    goto LABEL_21;
  }
  id v48 = [v47 managementDeclarationIdentifier];

  if (!v48) {
    goto LABEL_21;
  }
  uint64_t v138 = *(void *)(v2 + 680);
  uint64_t v139 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v141 = v140;

  *(void *)(v2 + 1312) = v139;
  *(void *)(v2 + 1320) = v141;
  uint64_t v142 = *(void *)(*(void *)(v138 + 240) + 16);
  *(void *)(v2 + 1328) = v142;
  swift_retain();
  id v93 = sub_1003FB2C0;
  uint64_t v86 = v142;
  uint64_t v87 = 0;
_swift_task_switch:
  _swift_task_switch(v93, v86, v87);
}

uint64_t sub_1003FB2C0()
{
  uint64_t v1 = v0[165];
  uint64_t v2 = v0[164];
  uint64_t v3 = *(void *)(v0[166] + 112);
  v0[167] = v3;
  uint64_t v4 = swift_task_alloc();
  v0[168] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = swift_task_alloc();
  v0[169] = v5;
  *(void *)(v5 + 16) = sub_10023CA38;
  *(void *)(v5 + 24) = v4;
  uint64_t v8 = (char *)&dword_100660660 + dword_100660660;
  swift_retain();
  unint64_t v6 = (void *)swift_task_alloc();
  v0[170] = v6;
  *unint64_t v6 = v0;
  v6[1] = sub_1003FB3E0;
  return ((uint64_t (*)(uint64_t (*)@<X0>(void *@<X0>, uint64_t *@<X8>), uint64_t, uint64_t))v8)(sub_1001C3EFC, v5, v3);
}

uint64_t sub_1003FB3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[171] = a1;
  v5[172] = a2;
  v5[173] = v2;
  swift_task_dealloc();
  uint64_t v6 = v4[166];
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  if (v2) {
    uint64_t v7 = sub_1003FCC3C;
  }
  else {
    uint64_t v7 = sub_1003FB578;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1003FB578()
{
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_task_switch(sub_1003FB5EC, 0, 0);
}

void sub_1003FB5EC()
{
  uint64_t v200 = v0;
  uint64_t v2 = *(uint64_t **)(v0 + 816);
  uint64_t v4 = *v2;
  uint64_t v3 = v2[1];
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1004BD574(v4, v3);
  uint64_t v6 = *(void *)(v0 + 1384);
  if ((v7 & 1) == 0)
  {
    uint64_t v1 = v5;
    uint64_t v8 = *(void *)(v0 + 1376);
    uint64_t v9 = *(void *)(*(void *)(v0 + 816) + *(int *)(*(void *)(v0 + 792) + 24));
    uint64_t v10 = (uint64_t *)(v8 + 16);
    uint64_t v11 = (os_unfair_lock_s *)(v8 + 24);
    swift_retain();
    os_unfair_lock_lock(v11);
    sub_100313D9C(v10, 13, (void *)(v0 + 528));
    if (v6) {
      goto LABEL_3;
    }
    os_unfair_lock_unlock(v11);
    sub_100017238(v0 + 528, v0 + 496, &qword_10065BC40);
    if (*(void *)(v0 + 520) == 1)
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 776) + 56))(*(void *)(v0 + 760), 1, 1, *(void *)(v0 + 768));
    }
    else
    {
      uint64_t v94 = *(void *)(v0 + 1096);
      uint64_t v95 = *(void *)(v0 + 760);
      sub_10001733C(v0 + 496, v0 + 464, (uint64_t *)&unk_10065C9C0);
      *(void *)(v0 + 456) = v94;
      uint64_t v96 = swift_allocObject();
      *(void *)(v0 + 432) = v96;
      sub_100017238(v0 + 464, v96 + 16, (uint64_t *)&unk_10065C9C0);
      type metadata accessor for JSONDecoder();
      swift_allocObject();
      JSONDecoder.init()();
      sub_1002429E4((void *)(v0 + 432), v95);
      uint64_t v98 = *(void *)(v0 + 776);
      uint64_t v99 = *(void *)(v0 + 768);
      uint64_t v100 = *(void *)(v0 + 760);
      swift_release();
      sub_100014524(v0 + 432);
      sub_10001729C(v0 + 464, (uint64_t *)&unk_10065C9C0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v98 + 56))(v100, 0, 1, v99);
    }
    uint64_t v101 = *(void *)(v0 + 776);
    uint64_t v102 = *(void *)(v0 + 768);
    uint64_t v103 = *(void *)(v0 + 760);
    sub_10001729C(v0 + 528, &qword_10065BC40);
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v103, 1, v102) == 1)
    {
      uint64_t v104 = *(void *)(v0 + 760);
      static Platform.current.getter();
      sub_10001729C(v104, &qword_10065BCD0);
    }
    else
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 776) + 32))(*(void *)(v0 + 784), *(void *)(v0 + 760), *(void *)(v0 + 768));
    }
    unsigned __int8 v105 = sub_1002ACA54(*(char **)(v0 + 784));
    if (*(void *)(v9 + 16))
    {
      unint64_t v106 = sub_1004524C0(v105);
      if (v107)
      {
        uint64_t v108 = *(void *)(v0 + 680);
        unint64_t v109 = (_OWORD *)(*(void *)(v9 + 56) + 160 * v106);
        long long v110 = v109[1];
        *(_OWORD *)(v0 + 80) = *v109;
        *(_OWORD *)(v0 + 96) = v110;
        long long v111 = v109[5];
        long long v113 = v109[2];
        long long v112 = v109[3];
        *(_OWORD *)(v0 + 144) = v109[4];
        *(_OWORD *)(v0 + 160) = v111;
        *(_OWORD *)(v0 + 112) = v113;
        *(_OWORD *)(v0 + 128) = v112;
        long long v114 = v109[9];
        long long v116 = v109[6];
        long long v115 = v109[7];
        *(_OWORD *)(v0 + 208) = v109[8];
        *(_OWORD *)(v0 + 224) = v114;
        *(_OWORD *)(v0 + 176) = v116;
        *(_OWORD *)(v0 + 192) = v115;
        *(void *)(v0 + 1392) = *(void *)(*(void *)(v108 + 200) + 16);
        uint64_t v117 = swift_task_alloc();
        *(void *)(v0 + 1400) = v117;
        *(void *)(v117 + 16) = v1;
        *(void *)(v117 + 24) = v0 + 80;
        sub_10027CC24((void *)(v0 + 80));
        uint64_t v197 = (void (*)(void))((char *)&dword_1006607E0 + dword_1006607E0);
        swift_retain();
        uint64_t v118 = (void *)swift_task_alloc();
        *(void *)(v0 + 1408) = v118;
        void *v118 = v0;
        v118[1] = sub_1003FDE90;
        v197();
        return;
      }
    }
    uint64_t v6 = 0;
  }
  if (*(unsigned char *)(v0 + 593))
  {
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 1424) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_100400468;
    uint64_t v13 = *(void *)(v0 + 1376);
    uint64_t v14 = *(void *)(v0 + 1368);
    uint64_t v15 = *(void *)(v0 + 912);
    uint64_t v16 = *(void *)(v0 + 816);
    uint64_t v17 = *(void *)(v0 + 680);
    uint64_t v18 = *(void *)(v0 + 664);
    uint64_t v19 = *(void *)(v0 + 656);
    uint64_t v20 = *(void *)(v0 + 648);
    sub_100409EB4(v16, v15, v20, v19, v18, v14, v13, v17);
    return;
  }
  swift_release();
  *(void *)(v0 + 1440) = v6;
  uint64_t v21 = *(uint64_t **)(v0 + 912);
  uint64_t v22 = v21[1];
  *(void *)(v0 + 1448) = v22;
  if (v22)
  {
LABEL_11:
    uint64_t v23 = *(void **)(v0 + 680);
    uint64_t v24 = *v21;
    uint64_t v26 = v23[23];
    uint64_t v25 = v23[24];
    uint64_t v27 = v23[25];
    uint64_t v28 = v23[28];
    swift_bridgeObjectRetain();
    uint64_t v29 = (void *)swift_task_alloc();
    *(void *)(v0 + 1456) = v29;
    *uint64_t v29 = v0;
    v29[1] = sub_100402944;
    uint64_t v30 = *(void *)(v0 + 752);
    uint64_t v31 = *(void *)(v0 + 728);
    __int16 v202 = 0;
    sub_1004FFCA8(v30, v31, v24, v22, v25, v26, v27, v28);
    return;
  }
  uint64_t v189 = v6;
  while (2)
  {
    uint64_t v39 = *(void *)(v0 + 816);
    sub_100409E00((uint64_t)v21, type metadata accessor for MediaAPIUpdates.App);
    sub_100409E00(v39, type metadata accessor for MediaAPIApp);
    uint64_t v40 = *(void **)(v0 + 1304);
    unint64_t v41 = *(void *)(v0 + 1296) + 1;
    uint64_t v196 = v40;
    if (v41 == *(void *)(v0 + 1280))
    {
LABEL_41:
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v1 = *(void *)(v0 + 1264);
      uint64_t v97 = *(void *)(v0 + 1256);
      if (v40[2])
      {
        sub_10056C034((uint64_t)v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10018AE44(v97, v1);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10018AE44(v97, v1);
      }
      uint64_t v39 = *(void *)(v0 + 1216);
      uint64_t v119 = *(void *)(v0 + 1208);
      if (v39 < v119)
      {
        uint64_t v120 = *(void *)(v0 + 1104);
        if (!*(unsigned char *)(v0 + 594)) {
          uint64_t v120 = 100;
        }
        unint64_t v121 = v39 + v120;
        if (__OFADD__(v39, v120)) {
          unint64_t v121 = ((v39 + v120) >> 63) ^ 0x8000000000000000;
        }
        *(void *)(v0 + 1216) = v121;
        BOOL v122 = __OFSUB__(v119, v39);
        uint64_t v123 = v119 - v39;
        if (!v122)
        {
          if (v120 >= v123) {
            uint64_t v1 = v123;
          }
          else {
            uint64_t v1 = v120;
          }
          if (v1 >= v39)
          {
            if ((v39 & 0x8000000000000000) == 0)
            {
              uint64_t v40 = *(void **)(v0 + 1152);
              uint64_t v124 = v40[2];
              if (v124 >= (unint64_t)v39 && v124 >= v1)
              {
                type metadata accessor for __ContiguousArrayStorageBase();
                swift_bridgeObjectRetain();
                swift_unknownObjectRetain_n();
                id v125 = (void *)swift_dynamicCastClass();
                if (!v125)
                {
                  swift_bridgeObjectRelease();
                  id v125 = _swiftEmptyArrayStorage;
                }
                uint64_t v126 = v125[2];
                swift_release();
                uint64_t v40 = *(void **)(v0 + 1152);
                if (v126 == v1 - v39)
                {
                  uint64_t v127 = (void *)swift_dynamicCastClass();
                  if (!v127)
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v127 = _swiftEmptyArrayStorage;
                  }
                  goto LABEL_71;
                }
LABEL_127:
                unint64_t v187 = (2 * v1) | 1;
                uint64_t v188 = *(void *)(v0 + 880);
                swift_bridgeObjectRelease();
                uint64_t v127 = sub_1004FDAD0((uint64_t)v40, (uint64_t)v40+ ((*(unsigned __int8 *)(v188 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80)), v39, v187);
LABEL_71:
                *(void *)(v0 + 1224) = v127;
                uint64_t v128 = *(void *)(v0 + 1200);
                unint64_t v129 = *(void **)(v0 + 1176);
                swift_bridgeObjectRelease();
                id v130 = v129;
                uint64_t v131 = (void *)swift_task_alloc();
                *(void *)(v0 + 1232) = v131;
                *uint64_t v131 = v0;
                v131[1] = sub_1003F9F78;
                uint64_t v132 = *(void *)(v0 + 1192);
                uint64_t v133 = *(void *)(v0 + 1176);
                uint64_t v134 = *(void *)(v0 + 664);
                uint64_t v135 = *(void *)(v0 + 656);
                uint64_t v136 = *(void *)(v0 + 648);
                sub_1004047E8((uint64_t)v127, v133, v132, v128, v136, v135, v134);
                return;
              }
LABEL_126:
              __break(1u);
              goto LABEL_127;
            }
LABEL_125:
            __break(1u);
            goto LABEL_126;
          }
LABEL_124:
          __break(1u);
          goto LABEL_125;
        }
LABEL_123:
        __break(1u);
        goto LABEL_124;
      }
      uint64_t v39 = *(void *)(v0 + 1200);
      uint64_t v137 = *(void **)(v0 + 1176);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      unint64_t v140 = *(void *)(v0 + 1144);
      int64_t v141 = *(void *)(v0 + 1136);
      p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
      while (1)
      {
        if (v140)
        {
          unint64_t v143 = __clz(__rbit64(v140));
          v140 &= v140 - 1;
          unint64_t v144 = v143 | (v141 << 6);
          id v145 = *(uint64_t (**)())(v0 + 1128);
        }
        else
        {
          BOOL v122 = __OFADD__(v141++, 1);
          if (v122) {
            goto LABEL_121;
          }
          int64_t v146 = (unint64_t)((1 << *(unsigned char *)(v0 + 595)) + 63) >> 6;
          id v145 = *(uint64_t (**)())(v0 + 1128);
          if (v141 >= v146)
          {
LABEL_109:
            swift_release();
            swift_bridgeObjectRelease();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            uint64_t v180 = *(void (**)(void))(v0 + 8);
            v180();
            return;
          }
          uint64_t v147 = (char *)v145 + 64;
          unint64_t v148 = *((void *)v145 + v141 + 8);
          if (!v148)
          {
            int64_t v149 = v141 + 1;
            if (v141 + 1 >= v146) {
              goto LABEL_109;
            }
            unint64_t v148 = *(void *)&v147[8 * v149];
            if (!v148)
            {
              int64_t v149 = v141 + 2;
              if (v141 + 2 >= v146) {
                goto LABEL_109;
              }
              unint64_t v148 = *(void *)&v147[8 * v149];
              if (!v148)
              {
                int64_t v149 = v141 + 3;
                if (v141 + 3 >= v146) {
                  goto LABEL_109;
                }
                unint64_t v148 = *(void *)&v147[8 * v149];
                if (!v148)
                {
                  while (1)
                  {
                    int64_t v141 = v149 + 1;
                    if (__OFADD__(v149, 1)) {
                      goto LABEL_122;
                    }
                    if (v141 >= v146) {
                      goto LABEL_109;
                    }
                    unint64_t v148 = *(void *)&v147[8 * v141];
                    ++v149;
                    if (v148) {
                      goto LABEL_89;
                    }
                  }
                }
              }
            }
            int64_t v141 = v149;
          }
LABEL_89:
          unint64_t v140 = (v148 - 1) & v148;
          unint64_t v144 = __clz(__rbit64(v148)) + (v141 << 6);
        }
        *(void *)(v0 + 1144) = v140;
        *(void *)(v0 + 1136) = v141;
        uint64_t v150 = *((void *)v145 + 6) + 16 * v144;
        uint64_t v151 = *(void *)v150;
        int v152 = *(unsigned __int8 *)(v150 + 8);
        uint64_t v153 = *(void *)(*((void *)v145 + 7) + 8 * v144);
        *(void *)(v0 + 1152) = v153;
        if (v152)
        {
          uint64_t v179 = v189;
          if (v152 != 1)
          {
            __break(1u);
            goto _swift_task_switch;
          }
          swift_bridgeObjectRetain();
          uint64_t v170 = 0;
          goto LABEL_117;
        }
        unint64_t v154 = *(void **)(v0 + 672);
        swift_bridgeObjectRetain();
        Class isa = UInt64._bridgeToObjectiveC()().super.super.isa;
        uint64_t v40 = objc_msgSend(v154, (SEL)p_base_prots[465], isa);

        if (v40)
        {
          uint64_t v156 = v40;
          id v157 = objc_msgSend(v156, "ams_storefront");
          if (!v157) {
            goto LABEL_104;
          }
          __int16 v158 = v157;
          int64_t v195 = v141;
          uint64_t v198 = v156;
          unint64_t v193 = v140;
          uint64_t v159 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v161 = v160;

          sub_10054F088(45, 0xE100000000000000, v159, v161);
          uint64_t v1 = String.subscript.getter();
          unint64_t v163 = v162;
          unint64_t v165 = v164;
          unint64_t v167 = v166;
          swift_bridgeObjectRelease();
          if (!((v1 ^ v163) >> 14))
          {
            swift_bridgeObjectRelease();
            p_base_prots = &XPCClientRegistry.base_prots;
            unint64_t v140 = v193;
            int64_t v141 = v195;
            uint64_t v156 = v198;
LABEL_104:

            goto LABEL_105;
          }
          int v192 = v40;
          uint64_t v168 = sub_1004081A0(v1, v163, v165, v167, 10);
          uint64_t v170 = v198;
          if ((v169 & 0x100) != 0)
          {
            uint64_t v173 = sub_100446850(v1, v163, v165, v167, 10);
            char v175 = v174;
            swift_bridgeObjectRelease();

            if ((v175 & 1) == 0)
            {
              uint64_t v151 = v173;
LABEL_116:
              uint64_t v179 = v189;
LABEL_117:
              *(void *)(v0 + 1176) = v170;
              *(void *)(v0 + 1168) = v151;
              *(void *)(v0 + 1160) = v179;
              uint64_t v186 = (void *)swift_task_alloc();
              *(void *)(v0 + 1184) = v186;
              *uint64_t v186 = v0;
              v186[1] = sub_1003F9574;
              sub_100408DC4(v151);
              return;
            }
          }
          else
          {
            uint64_t v171 = v168;
            char v172 = v169;
            swift_bridgeObjectRelease();

            if ((v172 & 1) == 0)
            {
              uint64_t v151 = v171;
              goto LABEL_116;
            }
          }
          p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
          unint64_t v140 = v193;
          int64_t v141 = v195;
          uint64_t v40 = v192;
        }
LABEL_105:
        static Logger.updates.getter();
        swift_bridgeObjectRetain();
        uint64_t v39 = Logger.logObject.getter();
        os_log_type_t v176 = static os_log_type_t.error.getter();
        if (os_log_type_enabled((os_log_t)v39, v176))
        {
          uint64_t v1 = swift_slowAlloc();
          *(_DWORD *)uint64_t v1 = 134218241;
          unint64_t v177 = v40;
          uint64_t v178 = *(void *)(v153 + 16);
          swift_bridgeObjectRelease();
          *(void *)(v1 + 4) = v178;
          uint64_t v40 = v177;
          swift_bridgeObjectRelease();
          *(_WORD *)(v1 + 12) = 2053;
          *(void *)(v1 + 14) = v151;
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v39, v176, "Skipping %ld app(s), associated account %{sensitive}llu was not found or has no storefront", (uint8_t *)v1, 0x16u);
          p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        (*(void (**)(void, void))(v0 + 1112))(*(void *)(v0 + 992), *(void *)(v0 + 944));
      }
    }
LABEL_23:
    *(void *)(v0 + 1304) = v40;
    *(void *)(v0 + 1296) = v41;
    uint64_t v45 = *(void *)(v0 + 1240);
    if (v41 >= *(void *)(v45 + 16))
    {
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
      goto LABEL_123;
    }
    uint64_t v46 = *(void *)(v0 + 1288);
    unint64_t v47 = *(uint64_t **)(v0 + 816);
    sub_100409D98(v45+ ((*(unsigned __int8 *)(v0 + 596) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 596))+ *(void *)(*(void *)(v0 + 800) + 72) * v41, (uint64_t)v47, type metadata accessor for MediaAPIApp);
    uint64_t v48 = *v47;
    uint64_t v49 = v47[1];
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_1004BD574(v48, v49);
    if (!v46) {
      goto LABEL_31;
    }
    uint64_t v52 = v50;
    char v53 = v51;
    uint64_t v54 = *(void *)(v0 + 880);
    uint64_t v55 = *(void *)(v0 + 1224)
        + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
    swift_bridgeObjectRetain();
    uint64_t v56 = 0;
    uint64_t v57 = *(void *)(v54 + 72);
    while (1)
    {
      sub_100409D98(v55, *(void *)(v0 + 896), type metadata accessor for MediaAPIUpdates.App);
      uint64_t v59 = *(void *)(v0 + 896);
      if ((v53 & 1) == 0)
      {
        uint64_t v60 = *(int **)(v0 + 872);
        if (*(void *)(v59 + v60[10]) == v52) {
          break;
        }
      }
      ++v56;
      uint64_t v58 = *(void *)(v0 + 1288);
      sub_100409E00(*(void *)(v0 + 896), type metadata accessor for MediaAPIUpdates.App);
      v55 += v57;
      if (v56 == v58)
      {
        swift_release();
LABEL_31:
        uint64_t v61 = *(void *)(v0 + 816);
        uint64_t v62 = *(void *)(v0 + 808);
        static Logger.updates.getter();
        sub_100409D98(v61, v62, type metadata accessor for MediaAPIApp);
        uint64_t v1 = Logger.logObject.getter();
        os_log_type_t v63 = static os_log_type_t.info.getter();
        BOOL v64 = os_log_type_enabled((os_log_t)v1, v63);
        uint64_t v65 = *(void (**)(uint64_t, uint64_t))(v0 + 1112);
        uint64_t v66 = *(void *)(v0 + 984);
        uint64_t v67 = *(void *)(v0 + 944);
        uint64_t v68 = *(void *)(v0 + 816);
        unint64_t v69 = *(uint64_t **)(v0 + 808);
        if (v64)
        {
          uint64_t v42 = swift_slowAlloc();
          v199[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v42 = 136446210;
          id v191 = v65;
          uint64_t v44 = *v69;
          unint64_t v43 = v69[1];
          swift_bridgeObjectRetain();
          *(void *)(v42 + 4) = sub_1000143F4(v44, v43, v199);
          swift_bridgeObjectRelease();
          uint64_t v39 = (uint64_t)type metadata accessor for MediaAPIApp;
          sub_100409E00((uint64_t)v69, type metadata accessor for MediaAPIApp);
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v1, v63, "Ignoring unexpected update for %{public}s", (uint8_t *)v42, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v191(v66, v67);
        }
        else
        {

          uint64_t v39 = (uint64_t)type metadata accessor for MediaAPIApp;
          sub_100409E00((uint64_t)v69, type metadata accessor for MediaAPIApp);
          v65(v66, v67);
        }
        sub_100409E00(v68, type metadata accessor for MediaAPIApp);
        unint64_t v41 = *(void *)(v0 + 1296) + 1;
        uint64_t v40 = v196;
        if (v41 == *(void *)(v0 + 1280)) {
          goto LABEL_41;
        }
        goto LABEL_23;
      }
    }
    uint64_t v70 = *(void *)(v0 + 912);
    uint64_t v71 = *(void *)(v0 + 904);
    uint64_t v72 = *(void *)(v0 + 848);
    uint64_t v73 = *(void *)(v0 + 840);
    uint64_t v74 = *(void *)(v0 + 824);
    swift_release();
    sub_10040C2A8(v59, v71, type metadata accessor for MediaAPIUpdates.App);
    sub_10040C2A8(v71, v70, type metadata accessor for MediaAPIUpdates.App);
    uint64_t v75 = *(void *)(v70 + v60[13]);
    sub_100017238(v70 + v60[5], v74, &qword_10065C3C0);
    int v76 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v74, 1, v73);
    if (v76 == 1)
    {
      sub_10001729C(*(void *)(v0 + 824), &qword_10065C3C0);
LABEL_38:
      sub_100409E60();
      swift_allocError();
      swift_willThrow();
      uint64_t v85 = *(void *)(v0 + 912);
      uint64_t v86 = *(void *)(v0 + 888);
      static Logger.updates.getter();
      sub_100409D98(v85, v86, type metadata accessor for MediaAPIUpdates.App);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v87 = Logger.logObject.getter();
      os_log_type_t v88 = static os_log_type_t.error.getter();
      uint64_t v1 = v88;
      BOOL v89 = os_log_type_enabled(v87, v88);
      uint64_t v90 = *(void (**)(uint64_t, uint64_t))(v0 + 1112);
      uint64_t v91 = *(void *)(v0 + 960);
      uint64_t v92 = *(void *)(v0 + 944);
      uint64_t v93 = *(void *)(v0 + 888);
      if (v89)
      {
        uint64_t v32 = *(void *)(v0 + 872);
        uint64_t v194 = *(void *)(v0 + 944);
        uint64_t v33 = swift_slowAlloc();
        v199[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 134218242;
        uint64_t v34 = *(void *)(v93 + *(int *)(v32 + 40));
        sub_100409E00(v93, type metadata accessor for MediaAPIUpdates.App);
        *(void *)(v33 + 4) = v34;
        *(_WORD *)(v33 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v190 = v90;
        uint64_t v35 = *(void *)(*(void *)(v0 + 568) - 8);
        swift_task_alloc();
        (*(void (**)(void))(v35 + 16))();
        uint64_t v36 = String.init<A>(describing:)();
        unint64_t v38 = v37;
        swift_task_dealloc();
        *(void *)(v33 + 14) = sub_1000143F4(v36, v38, v199);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        v190(v91, v194);
      }
      else
      {
        sub_100409E00(*(void *)(v0 + 888), type metadata accessor for MediaAPIUpdates.App);
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();

        v90(v91, v92);
      }
      uint64_t v189 = 0;
      *(void *)(v0 + 1440) = 0;
      uint64_t v21 = *(uint64_t **)(v0 + 912);
      uint64_t v22 = v21[1];
      *(void *)(v0 + 1448) = v22;
      if (v22) {
        goto LABEL_11;
      }
      continue;
    }
    break;
  }
  uint64_t v77 = *(void *)(v0 + 856);
  (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 848) + 32))(v77, *(void *)(v0 + 824), *(void *)(v0 + 840));
  uint64_t v78 = *(void *)(v75 + 16);
  uint64_t v79 = v78 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v78 + 16);
  uint64_t v11 = (os_unfair_lock_s *)(v78 + ((*(unsigned int *)(*(void *)v78 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v11);
  sub_100407430(v79, v77, (void *)(v0 + 640));
  if (v189)
  {
LABEL_3:
    os_unfair_lock_unlock(v11);
    return;
  }
  uint64_t v80 = *(void *)(v0 + 856);
  uint64_t v81 = *(void *)(v0 + 848);
  uint64_t v82 = *(void *)(v0 + 840);
  os_unfair_lock_unlock(v11);
  uint64_t v83 = *(void **)(v0 + 640);
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v82);
  if (!v83) {
    goto LABEL_38;
  }
  id v84 = [v83 managementDeclarationIdentifier];

  if (!v84) {
    goto LABEL_38;
  }
  uint64_t v181 = *(void *)(v0 + 680);
  uint64_t v182 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v184 = v183;

  *(void *)(v0 + 1312) = v182;
  *(void *)(v0 + 1320) = v184;
  uint64_t v185 = *(void *)(*(void *)(v181 + 240) + 16);
  *(void *)(v0 + 1328) = v185;
  swift_retain();
  id v145 = sub_1003FB2C0;
  uint64_t v138 = v185;
  uint64_t v139 = 0;
_swift_task_switch:
  _swift_task_switch(v145, v138, v139);
}

uint64_t sub_1003FCC3C()
{
  swift_errorRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1003FCCBC, 0, 0);
}

uint64_t sub_1003FCCBC()
{
  uint64_t v156 = v0;
  sub_100409E60();
  while (1)
  {
    while (1)
    {
      swift_allocError();
      swift_willThrow();
      uint64_t v1 = *(void *)(v0 + 912);
      uint64_t v2 = *(void *)(v0 + 888);
      static Logger.updates.getter();
      sub_100409D98(v1, v2, type metadata accessor for MediaAPIUpdates.App);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v3 = Logger.logObject.getter();
      os_log_type_t v4 = static os_log_type_t.error.getter();
      BOOL v5 = os_log_type_enabled(v3, v4);
      int64_t v6 = *(void *)(v0 + 1120);
      char v7 = *(void (**)(uint64_t, uint64_t))(v0 + 1112);
      uint64_t v8 = *(void *)(v0 + 960);
      uint64_t v9 = *(void *)(v0 + 944);
      uint64_t v10 = *(void **)(v0 + 888);
      if (v5)
      {
        uint64_t v11 = *(void *)(v0 + 872);
        uint64_t v151 = *(void *)(v0 + 960);
        uint64_t v12 = swift_slowAlloc();
        v155[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 134218242;
        uint64_t v13 = *(void *)((char *)v10 + *(int *)(v11 + 40));
        sub_100409E00((uint64_t)v10, type metadata accessor for MediaAPIUpdates.App);
        *(void *)(v12 + 4) = v13;
        *(_WORD *)(v12 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v14 = *(void *)(v0 + 560);
        uint64_t v147 = v7;
        uint64_t v15 = *(void *)(v0 + 568);
        uint64_t v16 = *(void *)(v15 - 8);
        int64_t v6 = swift_task_alloc();
        (*(void (**)(int64_t, uint64_t, uint64_t))(v16 + 16))(v6, v14, v15);
        uint64_t v10 = (void *)String.init<A>(describing:)();
        unint64_t v18 = v17;
        swift_task_dealloc();
        *(void *)(v12 + 14) = sub_1000143F4((uint64_t)v10, v18, v155);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        v147(v151, v9);
      }
      else
      {
        sub_100409E00(*(void *)(v0 + 888), type metadata accessor for MediaAPIUpdates.App);
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();

        v7(v8, v9);
      }
      *(void *)(v0 + 1440) = 0;
      uint64_t v19 = *(uint64_t **)(v0 + 912);
      uint64_t v20 = v19[1];
      *(void *)(v0 + 1448) = v20;
      if (v20)
      {
        uint64_t v134 = *(void **)(v0 + 680);
        uint64_t v135 = *v19;
        uint64_t v137 = v134[23];
        uint64_t v136 = v134[24];
        uint64_t v138 = v134[25];
        uint64_t v139 = v134[28];
        swift_bridgeObjectRetain();
        unint64_t v140 = (void *)swift_task_alloc();
        *(void *)(v0 + 1456) = v140;
        *unint64_t v140 = v0;
        v140[1] = sub_100402944;
        uint64_t v141 = *(void *)(v0 + 752);
        uint64_t v142 = *(void *)(v0 + 728);
        __int16 v158 = 0;
        return sub_1004FFCA8(v141, v142, v135, v20, v136, v137, v138, v139);
      }
      uint64_t v21 = *(void *)(v0 + 816);
      sub_100409E00((uint64_t)v19, type metadata accessor for MediaAPIUpdates.App);
      sub_100409E00(v21, type metadata accessor for MediaAPIApp);
      uint64_t v22 = *(void *)(v0 + 1304);
      unint64_t v23 = *(void *)(v0 + 1296) + 1;
      uint64_t v148 = v22;
      if (v23 == *(void *)(v0 + 1280))
      {
LABEL_27:
        swift_bridgeObjectRelease();
        swift_release();
        int64_t v6 = *(void *)(v0 + 1264);
        uint64_t v74 = *(void *)(v0 + 1256);
        uint64_t v10 = *(void **)(v0 + 1248);
        if (*(void *)(v22 + 16))
        {
          sub_10056C034(v22);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10018AE44(v74, v6);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10018AE44(v74, v6);
        }
        uint64_t v21 = *(void *)(v0 + 1216);
        uint64_t v75 = *(void *)(v0 + 1208);
        if (v21 < v75)
        {
          uint64_t v76 = *(void *)(v0 + 1104);
          if (!*(unsigned char *)(v0 + 594)) {
            uint64_t v76 = 100;
          }
          unint64_t v77 = v21 + v76;
          if (__OFADD__(v21, v76)) {
            unint64_t v77 = ((v21 + v76) >> 63) ^ 0x8000000000000000;
          }
          *(void *)(v0 + 1216) = v77;
          BOOL v78 = __OFSUB__(v75, v21);
          int64_t v79 = v75 - v21;
          if (!v78)
          {
            if (v76 >= v79) {
              int64_t v6 = v79;
            }
            else {
              int64_t v6 = v76;
            }
            if (v6 >= v21)
            {
              if ((v21 & 0x8000000000000000) == 0)
              {
                uint64_t v10 = *(void **)(v0 + 1152);
                int64_t v80 = v10[2];
                if (v80 >= (unint64_t)v21 && v80 >= v6)
                {
                  type metadata accessor for __ContiguousArrayStorageBase();
                  swift_bridgeObjectRetain();
                  swift_unknownObjectRetain_n();
                  uint64_t v81 = (void *)swift_dynamicCastClass();
                  if (!v81)
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v81 = _swiftEmptyArrayStorage;
                  }
                  uint64_t v82 = v81[2];
                  swift_release();
                  uint64_t v10 = *(void **)(v0 + 1152);
                  if (v82 == v6 - v21)
                  {
                    uint64_t v83 = (void *)swift_dynamicCastClass();
                    if (!v83)
                    {
                      swift_bridgeObjectRelease();
                      uint64_t v83 = _swiftEmptyArrayStorage;
                    }
                    goto LABEL_48;
                  }
LABEL_104:
                  unint64_t v145 = (2 * v6) | 1;
                  uint64_t v146 = *(void *)(v0 + 880);
                  swift_bridgeObjectRelease();
                  uint64_t v83 = sub_1004FDAD0((uint64_t)v10, (uint64_t)v10+ ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80)), v21, v145);
LABEL_48:
                  *(void *)(v0 + 1224) = v83;
                  uint64_t v84 = *(void *)(v0 + 1200);
                  uint64_t v85 = *(void **)(v0 + 1176);
                  swift_bridgeObjectRelease();
                  id v86 = v85;
                  uint64_t v87 = (void *)swift_task_alloc();
                  *(void *)(v0 + 1232) = v87;
                  *uint64_t v87 = v0;
                  v87[1] = sub_1003F9F78;
                  uint64_t v88 = *(void *)(v0 + 1192);
                  uint64_t v89 = *(void *)(v0 + 1176);
                  uint64_t v90 = *(void *)(v0 + 664);
                  uint64_t v91 = *(void *)(v0 + 656);
                  uint64_t v92 = *(void *)(v0 + 648);
                  return sub_1004047E8((uint64_t)v83, v89, v88, v84, v92, v91, v90);
                }
LABEL_103:
                __break(1u);
                goto LABEL_104;
              }
LABEL_102:
              __break(1u);
              goto LABEL_103;
            }
LABEL_101:
            __break(1u);
            goto LABEL_102;
          }
LABEL_100:
          __break(1u);
          goto LABEL_101;
        }
        uint64_t v21 = *(void *)(v0 + 1200);
        uint64_t v94 = *(void **)(v0 + 1176);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        int64_t v6 = *(void *)(v0 + 1144);
        int64_t v95 = *(void *)(v0 + 1136);
        p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
        while (1)
        {
          if (v6)
          {
            unint64_t v97 = __clz(__rbit64(v6));
            v6 &= v6 - 1;
            unint64_t v98 = v97 | (v95 << 6);
            uint64_t v71 = *(uint64_t (**)())(v0 + 1128);
          }
          else
          {
            BOOL v78 = __OFADD__(v95++, 1);
            if (v78) {
              goto LABEL_98;
            }
            int64_t v99 = (unint64_t)((1 << *(unsigned char *)(v0 + 595)) + 63) >> 6;
            uint64_t v71 = *(uint64_t (**)())(v0 + 1128);
            if (v95 >= v99)
            {
LABEL_92:
              swift_release();
              swift_bridgeObjectRelease();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              unint64_t v144 = *(uint64_t (**)(void))(v0 + 8);
              return v144();
            }
            uint64_t v100 = (char *)v71 + 64;
            unint64_t v101 = *((void *)v71 + v95 + 8);
            if (!v101)
            {
              int64_t v102 = v95 + 1;
              if (v95 + 1 >= v99) {
                goto LABEL_92;
              }
              unint64_t v101 = *(void *)&v100[8 * v102];
              if (!v101)
              {
                int64_t v102 = v95 + 2;
                if (v95 + 2 >= v99) {
                  goto LABEL_92;
                }
                unint64_t v101 = *(void *)&v100[8 * v102];
                if (!v101)
                {
                  int64_t v102 = v95 + 3;
                  if (v95 + 3 >= v99) {
                    goto LABEL_92;
                  }
                  unint64_t v101 = *(void *)&v100[8 * v102];
                  if (!v101)
                  {
                    while (1)
                    {
                      int64_t v95 = v102 + 1;
                      if (__OFADD__(v102, 1)) {
                        goto LABEL_99;
                      }
                      if (v95 >= v99) {
                        goto LABEL_92;
                      }
                      unint64_t v101 = *(void *)&v100[8 * v95];
                      ++v102;
                      if (v101) {
                        goto LABEL_66;
                      }
                    }
                  }
                }
              }
              int64_t v95 = v102;
            }
LABEL_66:
            int64_t v6 = (v101 - 1) & v101;
            unint64_t v98 = __clz(__rbit64(v101)) + (v95 << 6);
          }
          *(void *)(v0 + 1144) = v6;
          *(void *)(v0 + 1136) = v95;
          uint64_t v103 = *((void *)v71 + 6) + 16 * v98;
          uint64_t v104 = *(void *)v103;
          int v105 = *(unsigned __int8 *)(v103 + 8);
          uint64_t v106 = *(void *)(*((void *)v71 + 7) + 8 * v98);
          *(void *)(v0 + 1152) = v106;
          if (v105)
          {
            if (v105 != 1)
            {
              __break(1u);
              return _swift_task_switch(v71, v72, v73);
            }
            swift_bridgeObjectRetain();
            uint64_t v126 = 0;
            goto LABEL_89;
          }
          char v107 = *(void **)(v0 + 672);
          swift_bridgeObjectRetain();
          Class isa = UInt64._bridgeToObjectiveC()().super.super.isa;
          uint64_t v10 = objc_msgSend(v107, (SEL)p_base_prots[465], isa);

          if (v10)
          {
            unint64_t v109 = v10;
            id v110 = objc_msgSend(v109, "ams_storefront");
            if (!v110) {
              goto LABEL_81;
            }
            long long v111 = v110;
            uint64_t v153 = v109;
            int64_t v149 = v95;
            int64_t v150 = v6;
            uint64_t v112 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v114 = v113;

            sub_10054F088(45, 0xE100000000000000, v112, v114);
            uint64_t v115 = String.subscript.getter();
            unint64_t v117 = v116;
            unint64_t v119 = v118;
            unint64_t v121 = v120;
            swift_bridgeObjectRelease();
            if (!((v115 ^ v117) >> 14))
            {
              swift_bridgeObjectRelease();
              p_base_prots = &XPCClientRegistry.base_prots;
              int64_t v95 = v149;
              int64_t v6 = v150;
              unint64_t v109 = v153;
LABEL_81:

              goto LABEL_82;
            }
            uint64_t v122 = sub_1004081A0(v115, v117, v119, v121, 10);
            if ((v123 & 0x100) != 0)
            {
              uint64_t v127 = sub_100446850(v115, v117, v119, v121, 10);
              char v129 = v128;
              swift_bridgeObjectRelease();

              if ((v129 & 1) == 0)
              {
                uint64_t v104 = v127;
                uint64_t v126 = v153;
                goto LABEL_89;
              }
              p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
              int64_t v95 = v149;
              int64_t v6 = v150;
            }
            else
            {
              uint64_t v124 = v122;
              char v125 = v123;
              swift_bridgeObjectRelease();
              uint64_t v126 = v153;

              int64_t v6 = v150;
              if ((v125 & 1) == 0)
              {
                uint64_t v104 = v124;
LABEL_89:
                *(void *)(v0 + 1176) = v126;
                *(void *)(v0 + 1168) = v104;
                *(void *)(v0 + 1160) = 0;
                unint64_t v143 = (void *)swift_task_alloc();
                *(void *)(v0 + 1184) = v143;
                *unint64_t v143 = v0;
                v143[1] = sub_1003F9574;
                return sub_100408DC4(v104);
              }
              p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
              int64_t v95 = v149;
            }
          }
LABEL_82:
          static Logger.updates.getter();
          swift_bridgeObjectRetain();
          uint64_t v21 = Logger.logObject.getter();
          os_log_type_t v130 = static os_log_type_t.error.getter();
          if (os_log_type_enabled((os_log_t)v21, v130))
          {
            int64_t v131 = v6;
            uint64_t v132 = swift_slowAlloc();
            *(_DWORD *)uint64_t v132 = 134218241;
            uint64_t v133 = *(void *)(v106 + 16);
            swift_bridgeObjectRelease();
            *(void *)(v132 + 4) = v133;
            swift_bridgeObjectRelease();
            *(_WORD *)(v132 + 12) = 2053;
            *(void *)(v132 + 14) = v104;
            _os_log_impl((void *)&_mh_execute_header, (os_log_t)v21, v130, "Skipping %ld app(s), associated account %{sensitive}llu was not found or has no storefront", (uint8_t *)v132, 0x16u);
            int64_t v6 = v131;
            p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          (*(void (**)(void, void))(v0 + 1112))(*(void *)(v0 + 992), *(void *)(v0 + 944));
        }
      }
LABEL_11:
      *(void *)(v0 + 1304) = v22;
      *(void *)(v0 + 1296) = v23;
      uint64_t v27 = *(void *)(v0 + 1240);
      if (v23 >= *(void *)(v27 + 16))
      {
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
        goto LABEL_100;
      }
      uint64_t v28 = *(void *)(v0 + 1288);
      uint64_t v29 = *(uint64_t **)(v0 + 816);
      sub_100409D98(v27+ ((*(unsigned __int8 *)(v0 + 596) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 596))+ *(void *)(*(void *)(v0 + 800) + 72) * v23, (uint64_t)v29, type metadata accessor for MediaAPIApp);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_1004BD574(v31, v30);
      if (!v28) {
        goto LABEL_19;
      }
      uint64_t v34 = v32;
      char v35 = v33;
      uint64_t v36 = *(void *)(v0 + 880);
      uint64_t v37 = *(void *)(v0 + 1224)
          + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
      swift_bridgeObjectRetain();
      uint64_t v38 = 0;
      uint64_t v39 = *(void *)(v36 + 72);
      while (1)
      {
        sub_100409D98(v37, *(void *)(v0 + 896), type metadata accessor for MediaAPIUpdates.App);
        uint64_t v41 = *(void *)(v0 + 896);
        if ((v35 & 1) == 0)
        {
          uint64_t v42 = *(int **)(v0 + 872);
          if (*(void *)(v41 + v42[10]) == v34) {
            break;
          }
        }
        ++v38;
        uint64_t v40 = *(void *)(v0 + 1288);
        sub_100409E00(*(void *)(v0 + 896), type metadata accessor for MediaAPIUpdates.App);
        v37 += v39;
        if (v38 == v40)
        {
          swift_release();
LABEL_19:
          uint64_t v43 = *(void *)(v0 + 816);
          uint64_t v44 = *(void *)(v0 + 808);
          static Logger.updates.getter();
          sub_100409D98(v43, v44, type metadata accessor for MediaAPIApp);
          int64_t v6 = Logger.logObject.getter();
          os_log_type_t v45 = static os_log_type_t.info.getter();
          BOOL v46 = os_log_type_enabled((os_log_t)v6, v45);
          uint64_t v10 = *(void **)(v0 + 1112);
          uint64_t v47 = *(void *)(v0 + 984);
          uint64_t v48 = *(void *)(v0 + 944);
          uint64_t v154 = *(void *)(v0 + 816);
          uint64_t v49 = *(uint64_t **)(v0 + 808);
          if (v46)
          {
            uint64_t v24 = swift_slowAlloc();
            int v152 = (void (*)(uint64_t, uint64_t))v10;
            uint64_t v10 = (void *)swift_slowAlloc();
            v155[0] = (uint64_t)v10;
            *(_DWORD *)uint64_t v24 = 136446210;
            uint64_t v25 = *v49;
            unint64_t v26 = v49[1];
            swift_bridgeObjectRetain();
            *(void *)(v24 + 4) = sub_1000143F4(v25, v26, v155);
            swift_bridgeObjectRelease();
            uint64_t v21 = (uint64_t)type metadata accessor for MediaAPIApp;
            sub_100409E00((uint64_t)v49, type metadata accessor for MediaAPIApp);
            _os_log_impl((void *)&_mh_execute_header, (os_log_t)v6, v45, "Ignoring unexpected update for %{public}s", (uint8_t *)v24, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v22 = v148;
            swift_slowDealloc();

            v152(v47, v48);
          }
          else
          {

            uint64_t v21 = (uint64_t)type metadata accessor for MediaAPIApp;
            sub_100409E00((uint64_t)v49, type metadata accessor for MediaAPIApp);
            ((void (*)(uint64_t, uint64_t))v10)(v47, v48);
          }
          sub_100409E00(v154, type metadata accessor for MediaAPIApp);
          unint64_t v23 = *(void *)(v0 + 1296) + 1;
          if (v23 == *(void *)(v0 + 1280)) {
            goto LABEL_27;
          }
          goto LABEL_11;
        }
      }
      uint64_t v50 = *(void *)(v0 + 912);
      uint64_t v51 = *(void *)(v0 + 904);
      uint64_t v52 = *(void *)(v0 + 848);
      uint64_t v53 = *(void *)(v0 + 840);
      uint64_t v54 = *(void *)(v0 + 824);
      swift_release();
      sub_10040C2A8(v41, v51, type metadata accessor for MediaAPIUpdates.App);
      sub_10040C2A8(v51, v50, type metadata accessor for MediaAPIUpdates.App);
      uint64_t v55 = *(void *)(v50 + v42[13]);
      sub_100017238(v50 + v42[5], v54, &qword_10065C3C0);
      int v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v54, 1, v53);
      if (v56 != 1) {
        break;
      }
      sub_10001729C(*(void *)(v0 + 824), &qword_10065C3C0);
    }
    uint64_t v57 = *(void *)(v0 + 856);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 848) + 32))(v57, *(void *)(v0 + 824), *(void *)(v0 + 840));
    uint64_t v58 = *(void *)(v55 + 16);
    uint64_t v59 = v58 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v58 + 16);
    uint64_t v60 = (os_unfair_lock_s *)(v58 + ((*(unsigned int *)(*(void *)v58 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v60);
    sub_100407430(v59, v57, (void *)(v0 + 640));
    uint64_t v61 = *(void *)(v0 + 856);
    uint64_t v62 = *(void *)(v0 + 848);
    uint64_t v63 = *(void *)(v0 + 840);
    os_unfair_lock_unlock(v60);
    BOOL v64 = *(void **)(v0 + 640);
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
    if (v64)
    {
      id v65 = [v64 managementDeclarationIdentifier];

      if (v65) {
        break;
      }
    }
  }
  uint64_t v66 = *(void *)(v0 + 680);
  uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v69 = v68;

  *(void *)(v0 + 1312) = v67;
  *(void *)(v0 + 1320) = v69;
  uint64_t v70 = *(void *)(*(void *)(v66 + 240) + 16);
  *(void *)(v0 + 1328) = v70;
  swift_retain();
  uint64_t v71 = sub_1003FB2C0;
  uint64_t v72 = v70;
  uint64_t v73 = 0;
  return _swift_task_switch(v71, v72, v73);
}

uint64_t sub_1003FDE90()
{
  uint64_t v2 = (void *)(*(void *)v1 + 80);
  *(void *)(*(void *)v1 + 1416) = v0;
  swift_task_dealloc();
  swift_release();
  sub_10027CD2C(v2);
  swift_task_dealloc();
  if (v0) {
    uint64_t v3 = sub_1003FF290;
  }
  else {
    uint64_t v3 = sub_1003FDFF4;
  }
  return _swift_task_switch(v3, 0, 0);
}

void sub_1003FDFF4()
{
  uint64_t v166 = v1;
  if (*(unsigned char *)(v1 + 593))
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v1 + 1424) = v3;
    *uint64_t v3 = v1;
    v3[1] = sub_100400468;
    uint64_t v4 = *(void *)(v1 + 1376);
    uint64_t v5 = *(void *)(v1 + 1368);
    uint64_t v6 = *(void *)(v1 + 912);
    uint64_t v7 = *(void *)(v1 + 816);
    uint64_t v8 = *(void *)(v1 + 680);
    uint64_t v9 = *(void *)(v1 + 664);
    uint64_t v10 = *(void *)(v1 + 656);
    uint64_t v11 = *(void *)(v1 + 648);
    sub_100409EB4(v7, v6, v11, v10, v9, v5, v4, v8);
    return;
  }
  uint64_t v12 = *(void *)(v1 + 1416);
  swift_release();
  *(void *)(v1 + 1440) = v12;
  uint64_t v13 = *(uint64_t **)(v1 + 912);
  uint64_t v14 = v13[1];
  *(void *)(v1 + 1448) = v14;
  if (v14)
  {
LABEL_6:
    uint64_t v15 = *(void **)(v1 + 680);
    uint64_t v16 = *v13;
    uint64_t v18 = v15[23];
    uint64_t v17 = v15[24];
    uint64_t v19 = v15[25];
    uint64_t v20 = v15[28];
    swift_bridgeObjectRetain();
    uint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v1 + 1456) = v21;
    *uint64_t v21 = v1;
    v21[1] = sub_100402944;
    uint64_t v22 = *(void *)(v1 + 752);
    uint64_t v23 = *(void *)(v1 + 728);
    __int16 v168 = 0;
    sub_1004FFCA8(v22, v23, v16, v14, v17, v18, v19, v20);
    return;
  }
  uint64_t v158 = v12;
  while (2)
  {
    uint64_t v33 = *(void *)(v1 + 816);
    sub_100409E00((uint64_t)v13, type metadata accessor for MediaAPIUpdates.App);
    sub_100409E00(v33, type metadata accessor for MediaAPIApp);
    uint64_t v34 = *(void *)(v1 + 1304);
    unint64_t v35 = *(void *)(v1 + 1296) + 1;
    uint64_t v156 = v34;
    if (v35 == *(void *)(v1 + 1280))
    {
LABEL_33:
      swift_bridgeObjectRelease();
      swift_release();
      unint64_t v87 = *(void *)(v1 + 1264);
      uint64_t v2 = *(void *)(v1 + 1256);
      if (*(void *)(v34 + 16))
      {
        sub_10056C034(v34);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10018AE44(v2, v87);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10018AE44(v2, v87);
      }
      uint64_t v33 = *(void *)(v1 + 1216);
      uint64_t v88 = *(void *)(v1 + 1208);
      if (v33 < v88)
      {
        uint64_t v89 = *(void *)(v1 + 1104);
        if (!*(unsigned char *)(v1 + 594)) {
          uint64_t v89 = 100;
        }
        unint64_t v90 = v33 + v89;
        if (__OFADD__(v33, v89)) {
          unint64_t v90 = ((v33 + v89) >> 63) ^ 0x8000000000000000;
        }
        *(void *)(v1 + 1216) = v90;
        BOOL v91 = __OFSUB__(v88, v33);
        uint64_t v92 = v88 - v33;
        if (!v91)
        {
          if (v89 >= v92) {
            uint64_t v2 = v92;
          }
          else {
            uint64_t v2 = v89;
          }
          if (v2 >= v33)
          {
            if ((v33 & 0x8000000000000000) == 0)
            {
              uint64_t v0 = *(void **)(v1 + 1152);
              uint64_t v93 = v0[2];
              if (v93 >= (unint64_t)v33 && v93 >= v2)
              {
                type metadata accessor for __ContiguousArrayStorageBase();
                swift_bridgeObjectRetain();
                swift_unknownObjectRetain_n();
                uint64_t v94 = (void *)swift_dynamicCastClass();
                if (!v94)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v94 = _swiftEmptyArrayStorage;
                }
                uint64_t v95 = v94[2];
                swift_release();
                uint64_t v0 = *(void **)(v1 + 1152);
                if (v95 == v2 - v33)
                {
                  uint64_t v96 = (void *)swift_dynamicCastClass();
                  if (!v96)
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v96 = _swiftEmptyArrayStorage;
                  }
                  goto LABEL_54;
                }
LABEL_114:
                unint64_t v154 = (2 * v2) | 1;
                uint64_t v155 = *(void *)(v1 + 880);
                swift_bridgeObjectRelease();
                uint64_t v96 = sub_1004FDAD0((uint64_t)v0, (uint64_t)v0+ ((*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80)), v33, v154);
LABEL_54:
                *(void *)(v1 + 1224) = v96;
                uint64_t v97 = *(void *)(v1 + 1200);
                unint64_t v98 = *(void **)(v1 + 1176);
                swift_bridgeObjectRelease();
                id v99 = v98;
                uint64_t v100 = (void *)swift_task_alloc();
                *(void *)(v1 + 1232) = v100;
                *uint64_t v100 = v1;
                v100[1] = sub_1003F9F78;
                uint64_t v101 = *(void *)(v1 + 1192);
                uint64_t v102 = *(void *)(v1 + 1176);
                uint64_t v103 = *(void *)(v1 + 664);
                uint64_t v104 = *(void *)(v1 + 656);
                uint64_t v105 = *(void *)(v1 + 648);
                sub_1004047E8((uint64_t)v96, v102, v101, v97, v105, v104, v103);
                return;
              }
LABEL_113:
              __break(1u);
              goto LABEL_114;
            }
LABEL_112:
            __break(1u);
            goto LABEL_113;
          }
LABEL_111:
          __break(1u);
          goto LABEL_112;
        }
LABEL_110:
        __break(1u);
        goto LABEL_111;
      }
      uint64_t v33 = *(void *)(v1 + 1200);
      uint64_t v106 = *(void **)(v1 + 1176);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      unint64_t v109 = *(void *)(v1 + 1144);
      int64_t v110 = *(void *)(v1 + 1136);
      p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
      while (1)
      {
        if (v109)
        {
          unint64_t v112 = __clz(__rbit64(v109));
          v109 &= v109 - 1;
          unint64_t v113 = v112 | (v110 << 6);
          unint64_t v114 = *(uint64_t (**)())(v1 + 1128);
        }
        else
        {
          BOOL v91 = __OFADD__(v110++, 1);
          if (v91) {
            goto LABEL_108;
          }
          int64_t v115 = (unint64_t)((1 << *(unsigned char *)(v1 + 595)) + 63) >> 6;
          unint64_t v114 = *(uint64_t (**)())(v1 + 1128);
          if (v110 >= v115)
          {
LABEL_96:
            swift_release();
            swift_bridgeObjectRelease();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            uint64_t v148 = *(void (**)(void))(v1 + 8);
            v148();
            return;
          }
          unint64_t v116 = (char *)v114 + 64;
          unint64_t v117 = *((void *)v114 + v110 + 8);
          if (!v117)
          {
            int64_t v118 = v110 + 1;
            if (v110 + 1 >= v115) {
              goto LABEL_96;
            }
            unint64_t v117 = *(void *)&v116[8 * v118];
            if (!v117)
            {
              int64_t v118 = v110 + 2;
              if (v110 + 2 >= v115) {
                goto LABEL_96;
              }
              unint64_t v117 = *(void *)&v116[8 * v118];
              if (!v117)
              {
                int64_t v118 = v110 + 3;
                if (v110 + 3 >= v115) {
                  goto LABEL_96;
                }
                unint64_t v117 = *(void *)&v116[8 * v118];
                if (!v117)
                {
                  while (1)
                  {
                    int64_t v110 = v118 + 1;
                    if (__OFADD__(v118, 1)) {
                      goto LABEL_109;
                    }
                    if (v110 >= v115) {
                      goto LABEL_96;
                    }
                    unint64_t v117 = *(void *)&v116[8 * v110];
                    ++v118;
                    if (v117) {
                      goto LABEL_72;
                    }
                  }
                }
              }
            }
            int64_t v110 = v118;
          }
LABEL_72:
          unint64_t v109 = (v117 - 1) & v117;
          unint64_t v113 = __clz(__rbit64(v117)) + (v110 << 6);
        }
        *(void *)(v1 + 1144) = v109;
        *(void *)(v1 + 1136) = v110;
        uint64_t v119 = *((void *)v114 + 6) + 16 * v113;
        uint64_t v120 = *(void *)v119;
        int v121 = *(unsigned __int8 *)(v119 + 8);
        uint64_t v122 = *(void *)(*((void *)v114 + 7) + 8 * v113);
        *(void *)(v1 + 1152) = v122;
        if (v121)
        {
          if (v121 != 1)
          {
            __break(1u);
            goto _swift_task_switch;
          }
          swift_bridgeObjectRetain();
          uint64_t v141 = 0;
          goto LABEL_93;
        }
        __int16 v123 = *(void **)(v1 + 672);
        swift_bridgeObjectRetain();
        Class isa = UInt64._bridgeToObjectiveC()().super.super.isa;
        uint64_t v0 = objc_msgSend(v123, (SEL)p_base_prots[465], isa);

        if (v0)
        {
          char v125 = v0;
          id v126 = objc_msgSend(v125, "ams_storefront");
          if (!v126) {
            goto LABEL_88;
          }
          uint64_t v127 = v126;
          int64_t v162 = v110;
          unint64_t v164 = v125;
          unint64_t v161 = v109;
          uint64_t v128 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v130 = v129;

          sub_10054F088(45, 0xE100000000000000, v128, v130);
          uint64_t v131 = String.subscript.getter();
          uint64_t v2 = v132;
          unint64_t v134 = v133;
          unint64_t v136 = v135;
          swift_bridgeObjectRelease();
          if (!((v131 ^ (unint64_t)v2) >> 14))
          {
            swift_bridgeObjectRelease();
            p_base_prots = &XPCClientRegistry.base_prots;
            unint64_t v109 = v161;
            int64_t v110 = v162;
            char v125 = v164;
LABEL_88:

            goto LABEL_89;
          }
          uint64_t v157 = v0;
          uint64_t v137 = sub_1004081A0(v131, v2, v134, v136, 10);
          if ((v138 & 0x100) != 0)
          {
            uint64_t v142 = sub_100446850(v131, v2, v134, v136, 10);
            uint64_t v2 = v143;
            swift_bridgeObjectRelease();
            uint64_t v141 = v164;

            if ((v2 & 1) == 0)
            {
              uint64_t v120 = v142;
              goto LABEL_93;
            }
            p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
            unint64_t v109 = v161;
            int64_t v110 = v162;
          }
          else
          {
            char v139 = v138;
            uint64_t v140 = v137;
            swift_bridgeObjectRelease();
            uint64_t v141 = v164;

            p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
            unint64_t v109 = v161;
            int64_t v110 = v162;
            if ((v139 & 1) == 0)
            {
              uint64_t v120 = v140;
LABEL_93:
              *(void *)(v1 + 1176) = v141;
              *(void *)(v1 + 1168) = v120;
              *(void *)(v1 + 1160) = v158;
              uint64_t v147 = (void *)swift_task_alloc();
              *(void *)(v1 + 1184) = v147;
              void *v147 = v1;
              v147[1] = sub_1003F9574;
              sub_100408DC4(v120);
              return;
            }
          }
          uint64_t v0 = v157;
        }
LABEL_89:
        static Logger.updates.getter();
        swift_bridgeObjectRetain();
        uint64_t v33 = Logger.logObject.getter();
        os_log_type_t v144 = static os_log_type_t.error.getter();
        if (os_log_type_enabled((os_log_t)v33, v144))
        {
          uint64_t v2 = swift_slowAlloc();
          *(_DWORD *)uint64_t v2 = 134218241;
          unint64_t v145 = v0;
          uint64_t v146 = *(void *)(v122 + 16);
          swift_bridgeObjectRelease();
          *(void *)(v2 + 4) = v146;
          uint64_t v0 = v145;
          swift_bridgeObjectRelease();
          *(_WORD *)(v2 + 12) = 2053;
          *(void *)(v2 + 14) = v120;
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v33, v144, "Skipping %ld app(s), associated account %{sensitive}llu was not found or has no storefront", (uint8_t *)v2, 0x16u);
          p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        (*(void (**)(void, void))(v1 + 1112))(*(void *)(v1 + 992), *(void *)(v1 + 944));
      }
    }
LABEL_16:
    *(void *)(v1 + 1304) = v34;
    *(void *)(v1 + 1296) = v35;
    uint64_t v38 = *(void *)(v1 + 1240);
    if (v35 >= *(void *)(v38 + 16))
    {
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
      goto LABEL_110;
    }
    uint64_t v39 = *(void *)(v1 + 1288);
    uint64_t v40 = *(uint64_t **)(v1 + 816);
    sub_100409D98(v38+ ((*(unsigned __int8 *)(v1 + 596) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 596))+ *(void *)(*(void *)(v1 + 800) + 72) * v35, (uint64_t)v40, type metadata accessor for MediaAPIApp);
    uint64_t v41 = *v40;
    uint64_t v42 = v40[1];
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1004BD574(v41, v42);
    if (!v39) {
      goto LABEL_24;
    }
    uint64_t v45 = v43;
    char v46 = v44;
    uint64_t v47 = *(void *)(v1 + 880);
    uint64_t v48 = *(void *)(v1 + 1224)
        + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
    swift_bridgeObjectRetain();
    uint64_t v49 = 0;
    uint64_t v50 = *(void *)(v47 + 72);
    while (1)
    {
      sub_100409D98(v48, *(void *)(v1 + 896), type metadata accessor for MediaAPIUpdates.App);
      uint64_t v52 = *(void *)(v1 + 896);
      if ((v46 & 1) == 0)
      {
        uint64_t v53 = *(int **)(v1 + 872);
        if (*(void *)(v52 + v53[10]) == v45) {
          break;
        }
      }
      ++v49;
      uint64_t v51 = *(void *)(v1 + 1288);
      sub_100409E00(*(void *)(v1 + 896), type metadata accessor for MediaAPIUpdates.App);
      v48 += v50;
      if (v49 == v51)
      {
        swift_release();
LABEL_24:
        uint64_t v54 = *(void *)(v1 + 816);
        uint64_t v55 = *(void *)(v1 + 808);
        static Logger.updates.getter();
        sub_100409D98(v54, v55, type metadata accessor for MediaAPIApp);
        int v56 = Logger.logObject.getter();
        os_log_type_t v57 = static os_log_type_t.info.getter();
        BOOL v58 = os_log_type_enabled(v56, v57);
        uint64_t v0 = *(void **)(v1 + 1120);
        uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v1 + 1112);
        uint64_t v2 = *(void *)(v1 + 984);
        uint64_t v60 = *(void *)(v1 + 944);
        uint64_t v163 = *(void *)(v1 + 816);
        uint64_t v61 = *(void **)(v1 + 808);
        if (v58)
        {
          uint64_t v36 = swift_slowAlloc();
          v165[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v36 = 136446210;
          uint64_t v0 = (void *)*v61;
          unint64_t v37 = v61[1];
          swift_bridgeObjectRetain();
          *(void *)(v36 + 4) = sub_1000143F4((uint64_t)v0, v37, v165);
          swift_bridgeObjectRelease();
          uint64_t v33 = (uint64_t)type metadata accessor for MediaAPIApp;
          sub_100409E00((uint64_t)v61, type metadata accessor for MediaAPIApp);
          _os_log_impl((void *)&_mh_execute_header, v56, v57, "Ignoring unexpected update for %{public}s", (uint8_t *)v36, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v34 = v156;
          swift_slowDealloc();
        }
        else
        {

          uint64_t v33 = (uint64_t)type metadata accessor for MediaAPIApp;
          sub_100409E00((uint64_t)v61, type metadata accessor for MediaAPIApp);
        }
        v59(v2, v60);
        sub_100409E00(v163, type metadata accessor for MediaAPIApp);
        unint64_t v35 = *(void *)(v1 + 1296) + 1;
        if (v35 == *(void *)(v1 + 1280)) {
          goto LABEL_33;
        }
        goto LABEL_16;
      }
    }
    uint64_t v62 = *(void *)(v1 + 912);
    uint64_t v63 = *(void *)(v1 + 904);
    uint64_t v64 = *(void *)(v1 + 848);
    uint64_t v65 = *(void *)(v1 + 840);
    uint64_t v66 = *(void *)(v1 + 824);
    swift_release();
    sub_10040C2A8(v52, v63, type metadata accessor for MediaAPIUpdates.App);
    sub_10040C2A8(v63, v62, type metadata accessor for MediaAPIUpdates.App);
    uint64_t v67 = *(void *)(v62 + v53[13]);
    sub_100017238(v62 + v53[5], v66, &qword_10065C3C0);
    int v68 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v66, 1, v65);
    if (v68 == 1)
    {
      sub_10001729C(*(void *)(v1 + 824), &qword_10065C3C0);
LABEL_31:
      sub_100409E60();
      uint64_t v0 = (void *)swift_allocError();
      swift_willThrow();
      uint64_t v78 = *(void *)(v1 + 912);
      uint64_t v79 = *(void *)(v1 + 888);
      static Logger.updates.getter();
      sub_100409D98(v78, v79, type metadata accessor for MediaAPIUpdates.App);
      swift_errorRetain();
      swift_errorRetain();
      int64_t v80 = Logger.logObject.getter();
      os_log_type_t v81 = static os_log_type_t.error.getter();
      uint64_t v2 = v81;
      BOOL v82 = os_log_type_enabled(v80, v81);
      uint64_t v83 = *(void (**)(uint64_t, uint64_t))(v1 + 1112);
      uint64_t v84 = *(void *)(v1 + 960);
      uint64_t v85 = *(void *)(v1 + 944);
      uint64_t v86 = *(void *)(v1 + 888);
      if (v82)
      {
        uint64_t v24 = *(void *)(v1 + 872);
        uint64_t v25 = swift_slowAlloc();
        v165[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = 134218242;
        uint64_t v26 = *(void *)(v86 + *(int *)(v24 + 40));
        sub_100409E00(v86, type metadata accessor for MediaAPIUpdates.App);
        *(void *)(v25 + 4) = v26;
        *(_WORD *)(v25 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v27 = *(void *)(v1 + 560);
        uint64_t v159 = v83;
        uint64_t v160 = v85;
        uint64_t v28 = *(void *)(v1 + 568);
        uint64_t v29 = *(void *)(v28 - 8);
        uint64_t v0 = (void *)swift_task_alloc();
        (*(void (**)(void *, uint64_t, uint64_t))(v29 + 16))(v0, v27, v28);
        uint64_t v30 = String.init<A>(describing:)();
        unint64_t v32 = v31;
        swift_task_dealloc();
        *(void *)(v25 + 14) = sub_1000143F4(v30, v32, v165);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        v159(v84, v160);
      }
      else
      {
        sub_100409E00(v86, type metadata accessor for MediaAPIUpdates.App);
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();

        v83(v84, v85);
      }
      uint64_t v158 = 0;
      *(void *)(v1 + 1440) = 0;
      uint64_t v13 = *(uint64_t **)(v1 + 912);
      uint64_t v14 = v13[1];
      *(void *)(v1 + 1448) = v14;
      if (v14) {
        goto LABEL_6;
      }
      continue;
    }
    break;
  }
  uint64_t v69 = *(void *)(v1 + 856);
  (*(void (**)(uint64_t, void, void))(*(void *)(v1 + 848) + 32))(v69, *(void *)(v1 + 824), *(void *)(v1 + 840));
  uint64_t v70 = *(void *)(v67 + 16);
  uint64_t v71 = v70 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v70 + 16);
  uint64_t v72 = (os_unfair_lock_s *)(v70 + ((*(unsigned int *)(*(void *)v70 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v72);
  sub_100407430(v71, v69, (void *)(v1 + 640));
  if (v158)
  {
    os_unfair_lock_unlock(v72);
  }
  else
  {
    uint64_t v73 = *(void *)(v1 + 856);
    uint64_t v74 = *(void *)(v1 + 848);
    uint64_t v75 = *(void *)(v1 + 840);
    os_unfair_lock_unlock(v72);
    uint64_t v76 = *(void **)(v1 + 640);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v73, v75);
    if (!v76) {
      goto LABEL_31;
    }
    id v77 = [v76 managementDeclarationIdentifier];

    if (!v77) {
      goto LABEL_31;
    }
    uint64_t v149 = *(void *)(v1 + 680);
    uint64_t v150 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v152 = v151;

    *(void *)(v1 + 1312) = v150;
    *(void *)(v1 + 1320) = v152;
    uint64_t v153 = *(void *)(*(void *)(v149 + 240) + 16);
    *(void *)(v1 + 1328) = v153;
    swift_retain();
    unint64_t v114 = sub_1003FB2C0;
    uint64_t v107 = v153;
    uint64_t v108 = 0;
_swift_task_switch:
    _swift_task_switch(v114, v107, v108);
  }
}

uint64_t sub_1003FF290()
{
  uint64_t v156 = v0;
  swift_release();
  while (1)
  {
    uint64_t v1 = *(void *)(v0 + 912);
    uint64_t v2 = *(void *)(v0 + 888);
    static Logger.updates.getter();
    sub_100409D98(v1, v2, type metadata accessor for MediaAPIUpdates.App);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    BOOL v5 = os_log_type_enabled(v3, v4);
    uint64_t v6 = *(void *)(v0 + 1112);
    uint64_t v7 = *(void *)(v0 + 960);
    uint64_t v8 = *(void *)(v0 + 944);
    uint64_t v9 = *(void **)(v0 + 888);
    if (v5)
    {
      uint64_t v10 = *(void *)(v0 + 872);
      uint64_t v152 = *(void *)(v0 + 944);
      uint64_t v11 = swift_slowAlloc();
      v155[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 134218242;
      uint64_t v12 = *(void *)((char *)v9 + *(int *)(v10 + 40));
      sub_100409E00((uint64_t)v9, type metadata accessor for MediaAPIUpdates.App);
      *(void *)(v11 + 4) = v12;
      *(_WORD *)(v11 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v146 = (void (*)(uint64_t, uint64_t))v6;
      uint64_t v149 = v7;
      uint64_t v13 = *(void *)(*(void *)(v0 + 568) - 8);
      swift_task_alloc();
      uint64_t v14 = *(void (**)(void))(v13 + 16);
      uint64_t v6 = v13 + 16;
      v14();
      uint64_t v9 = (void *)String.init<A>(describing:)();
      unint64_t v16 = v15;
      swift_task_dealloc();
      *(void *)(v11 + 14) = sub_1000143F4((uint64_t)v9, v16, v155);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      v146(v149, v152);
    }
    else
    {
      sub_100409E00(*(void *)(v0 + 888), type metadata accessor for MediaAPIUpdates.App);
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();

      ((void (*)(uint64_t, uint64_t))v6)(v7, v8);
    }
    *(void *)(v0 + 1440) = 0;
    uint64_t v17 = *(uint64_t **)(v0 + 912);
    uint64_t v18 = v17[1];
    *(void *)(v0 + 1448) = v18;
    if (v18)
    {
      unint64_t v133 = *(void **)(v0 + 680);
      uint64_t v134 = *v17;
      uint64_t v136 = v133[23];
      uint64_t v135 = v133[24];
      uint64_t v137 = v133[25];
      uint64_t v138 = v133[28];
      swift_bridgeObjectRetain();
      char v139 = (void *)swift_task_alloc();
      *(void *)(v0 + 1456) = v139;
      void *v139 = v0;
      v139[1] = sub_100402944;
      uint64_t v140 = *(void *)(v0 + 752);
      uint64_t v141 = *(void *)(v0 + 728);
      __int16 v158 = 0;
      return sub_1004FFCA8(v140, v141, v134, v18, v135, v136, v137, v138);
    }
    uint64_t v19 = *(void *)(v0 + 816);
    sub_100409E00((uint64_t)v17, type metadata accessor for MediaAPIUpdates.App);
    sub_100409E00(v19, type metadata accessor for MediaAPIApp);
    uint64_t v20 = *(void *)(v0 + 1304);
    unint64_t v21 = *(void *)(v0 + 1296) + 1;
    uint64_t v147 = v20;
    if (v21 == *(void *)(v0 + 1280))
    {
LABEL_28:
      swift_bridgeObjectRelease();
      swift_release();
      unint64_t v73 = *(void *)(v0 + 1264);
      uint64_t v6 = *(void *)(v0 + 1256);
      uint64_t v9 = *(void **)(v0 + 1248);
      if (*(void *)(v20 + 16))
      {
        sub_10056C034(v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10018AE44(v6, v73);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10018AE44(v6, v73);
      }
      uint64_t v19 = *(void *)(v0 + 1216);
      uint64_t v74 = *(void *)(v0 + 1208);
      if (v19 < v74)
      {
        uint64_t v75 = *(void *)(v0 + 1104);
        if (!*(unsigned char *)(v0 + 594)) {
          uint64_t v75 = 100;
        }
        unint64_t v76 = v19 + v75;
        if (__OFADD__(v19, v75)) {
          unint64_t v76 = ((v19 + v75) >> 63) ^ 0x8000000000000000;
        }
        *(void *)(v0 + 1216) = v76;
        BOOL v77 = __OFSUB__(v74, v19);
        uint64_t v78 = v74 - v19;
        if (!v77)
        {
          if (v75 >= v78) {
            uint64_t v6 = v78;
          }
          else {
            uint64_t v6 = v75;
          }
          if (v6 >= v19)
          {
            if ((v19 & 0x8000000000000000) == 0)
            {
              uint64_t v9 = *(void **)(v0 + 1152);
              uint64_t v79 = v9[2];
              if (v79 >= (unint64_t)v19 && v79 >= v6)
              {
                type metadata accessor for __ContiguousArrayStorageBase();
                swift_bridgeObjectRetain();
                swift_unknownObjectRetain_n();
                int64_t v80 = (void *)swift_dynamicCastClass();
                if (!v80)
                {
                  swift_bridgeObjectRelease();
                  int64_t v80 = _swiftEmptyArrayStorage;
                }
                uint64_t v81 = v80[2];
                swift_release();
                uint64_t v9 = *(void **)(v0 + 1152);
                if (v81 == v6 - v19)
                {
                  BOOL v82 = (void *)swift_dynamicCastClass();
                  if (!v82)
                  {
                    swift_bridgeObjectRelease();
                    BOOL v82 = _swiftEmptyArrayStorage;
                  }
                  goto LABEL_49;
                }
LABEL_105:
                unint64_t v144 = (2 * v6) | 1;
                uint64_t v145 = *(void *)(v0 + 880);
                swift_bridgeObjectRelease();
                BOOL v82 = sub_1004FDAD0((uint64_t)v9, (uint64_t)v9+ ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80)), v19, v144);
LABEL_49:
                *(void *)(v0 + 1224) = v82;
                uint64_t v83 = *(void *)(v0 + 1200);
                uint64_t v84 = *(void **)(v0 + 1176);
                swift_bridgeObjectRelease();
                id v85 = v84;
                uint64_t v86 = (void *)swift_task_alloc();
                *(void *)(v0 + 1232) = v86;
                *uint64_t v86 = v0;
                v86[1] = sub_1003F9F78;
                uint64_t v87 = *(void *)(v0 + 1192);
                uint64_t v88 = *(void *)(v0 + 1176);
                uint64_t v89 = *(void *)(v0 + 664);
                uint64_t v90 = *(void *)(v0 + 656);
                uint64_t v91 = *(void *)(v0 + 648);
                return sub_1004047E8((uint64_t)v82, v88, v87, v83, v91, v90, v89);
              }
LABEL_104:
              __break(1u);
              goto LABEL_105;
            }
LABEL_103:
            __break(1u);
            goto LABEL_104;
          }
LABEL_102:
          __break(1u);
          goto LABEL_103;
        }
LABEL_101:
        __break(1u);
        goto LABEL_102;
      }
      uint64_t v19 = *(void *)(v0 + 1200);
      uint64_t v93 = *(void **)(v0 + 1176);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      uint64_t v6 = *(void *)(v0 + 1144);
      int64_t v94 = *(void *)(v0 + 1136);
      p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
      while (1)
      {
        if (v6)
        {
          unint64_t v96 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
          unint64_t v97 = v96 | (v94 << 6);
          uint64_t v70 = *(uint64_t (**)())(v0 + 1128);
        }
        else
        {
          BOOL v77 = __OFADD__(v94++, 1);
          if (v77) {
            goto LABEL_99;
          }
          int64_t v98 = (unint64_t)((1 << *(unsigned char *)(v0 + 595)) + 63) >> 6;
          uint64_t v70 = *(uint64_t (**)())(v0 + 1128);
          if (v94 >= v98)
          {
LABEL_93:
            swift_release();
            swift_bridgeObjectRelease();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            uint64_t v143 = *(uint64_t (**)(void))(v0 + 8);
            return v143();
          }
          id v99 = (char *)v70 + 64;
          unint64_t v100 = *((void *)v70 + v94 + 8);
          if (!v100)
          {
            int64_t v101 = v94 + 1;
            if (v94 + 1 >= v98) {
              goto LABEL_93;
            }
            unint64_t v100 = *(void *)&v99[8 * v101];
            if (!v100)
            {
              int64_t v101 = v94 + 2;
              if (v94 + 2 >= v98) {
                goto LABEL_93;
              }
              unint64_t v100 = *(void *)&v99[8 * v101];
              if (!v100)
              {
                int64_t v101 = v94 + 3;
                if (v94 + 3 >= v98) {
                  goto LABEL_93;
                }
                unint64_t v100 = *(void *)&v99[8 * v101];
                if (!v100)
                {
                  while (1)
                  {
                    int64_t v94 = v101 + 1;
                    if (__OFADD__(v101, 1)) {
                      goto LABEL_100;
                    }
                    if (v94 >= v98) {
                      goto LABEL_93;
                    }
                    unint64_t v100 = *(void *)&v99[8 * v94];
                    ++v101;
                    if (v100) {
                      goto LABEL_67;
                    }
                  }
                }
              }
            }
            int64_t v94 = v101;
          }
LABEL_67:
          uint64_t v6 = (v100 - 1) & v100;
          unint64_t v97 = __clz(__rbit64(v100)) + (v94 << 6);
        }
        *(void *)(v0 + 1144) = v6;
        *(void *)(v0 + 1136) = v94;
        uint64_t v102 = *((void *)v70 + 6) + 16 * v97;
        uint64_t v103 = *(void *)v102;
        int v104 = *(unsigned __int8 *)(v102 + 8);
        uint64_t v105 = *(void *)(*((void *)v70 + 7) + 8 * v97);
        *(void *)(v0 + 1152) = v105;
        if (v104)
        {
          if (v104 != 1)
          {
            __break(1u);
            return _swift_task_switch(v70, v71, v72);
          }
          swift_bridgeObjectRetain();
          char v125 = 0;
          goto LABEL_90;
        }
        uint64_t v106 = *(void **)(v0 + 672);
        swift_bridgeObjectRetain();
        Class isa = UInt64._bridgeToObjectiveC()().super.super.isa;
        uint64_t v9 = objc_msgSend(v106, (SEL)p_base_prots[465], isa);

        if (v9)
        {
          uint64_t v108 = v9;
          id v109 = objc_msgSend(v108, "ams_storefront");
          if (!v109) {
            goto LABEL_82;
          }
          int64_t v110 = v109;
          uint64_t v153 = v108;
          int64_t v148 = v94;
          uint64_t v151 = v6;
          uint64_t v111 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v113 = v112;

          sub_10054F088(45, 0xE100000000000000, v111, v113);
          uint64_t v114 = String.subscript.getter();
          unint64_t v116 = v115;
          unint64_t v118 = v117;
          unint64_t v120 = v119;
          swift_bridgeObjectRelease();
          if (!((v114 ^ v116) >> 14))
          {
            swift_bridgeObjectRelease();
            p_base_prots = &XPCClientRegistry.base_prots;
            int64_t v94 = v148;
            uint64_t v6 = v151;
            uint64_t v108 = v153;
LABEL_82:

            goto LABEL_83;
          }
          uint64_t v121 = sub_1004081A0(v114, v116, v118, v120, 10);
          if ((v122 & 0x100) != 0)
          {
            uint64_t v126 = sub_100446850(v114, v116, v118, v120, 10);
            char v128 = v127;
            swift_bridgeObjectRelease();

            if ((v128 & 1) == 0)
            {
              uint64_t v103 = v126;
              char v125 = v153;
              goto LABEL_90;
            }
            p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
            int64_t v94 = v148;
            uint64_t v6 = v151;
          }
          else
          {
            uint64_t v123 = v121;
            char v124 = v122;
            swift_bridgeObjectRelease();
            char v125 = v153;

            uint64_t v6 = v151;
            if ((v124 & 1) == 0)
            {
              uint64_t v103 = v123;
LABEL_90:
              *(void *)(v0 + 1176) = v125;
              *(void *)(v0 + 1168) = v103;
              *(void *)(v0 + 1160) = 0;
              uint64_t v142 = (void *)swift_task_alloc();
              *(void *)(v0 + 1184) = v142;
              void *v142 = v0;
              v142[1] = sub_1003F9574;
              return sub_100408DC4(v103);
            }
            p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
            int64_t v94 = v148;
          }
        }
LABEL_83:
        static Logger.updates.getter();
        swift_bridgeObjectRetain();
        uint64_t v19 = Logger.logObject.getter();
        os_log_type_t v129 = static os_log_type_t.error.getter();
        if (os_log_type_enabled((os_log_t)v19, v129))
        {
          uint64_t v130 = v6;
          uint64_t v131 = swift_slowAlloc();
          *(_DWORD *)uint64_t v131 = 134218241;
          uint64_t v132 = *(void *)(v105 + 16);
          swift_bridgeObjectRelease();
          *(void *)(v131 + 4) = v132;
          swift_bridgeObjectRelease();
          *(_WORD *)(v131 + 12) = 2053;
          *(void *)(v131 + 14) = v103;
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v19, v129, "Skipping %ld app(s), associated account %{sensitive}llu was not found or has no storefront", (uint8_t *)v131, 0x16u);
          uint64_t v6 = v130;
          p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        (*(void (**)(void, void))(v0 + 1112))(*(void *)(v0 + 992), *(void *)(v0 + 944));
      }
    }
LABEL_12:
    *(void *)(v0 + 1304) = v20;
    *(void *)(v0 + 1296) = v21;
    uint64_t v25 = *(void *)(v0 + 1240);
    if (v21 >= *(void *)(v25 + 16))
    {
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
      goto LABEL_101;
    }
    uint64_t v26 = *(void *)(v0 + 1288);
    uint64_t v27 = *(uint64_t **)(v0 + 816);
    sub_100409D98(v25+ ((*(unsigned __int8 *)(v0 + 596) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 596))+ *(void *)(*(void *)(v0 + 800) + 72) * v21, (uint64_t)v27, type metadata accessor for MediaAPIApp);
    uint64_t v28 = *v27;
    uint64_t v29 = v27[1];
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1004BD574(v28, v29);
    if (!v26) {
      goto LABEL_20;
    }
    uint64_t v32 = v30;
    char v33 = v31;
    uint64_t v34 = *(void *)(v0 + 880);
    uint64_t v35 = *(void *)(v0 + 1224)
        + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
    swift_bridgeObjectRetain();
    uint64_t v36 = 0;
    uint64_t v37 = *(void *)(v34 + 72);
    while (1)
    {
      sub_100409D98(v35, *(void *)(v0 + 896), type metadata accessor for MediaAPIUpdates.App);
      uint64_t v39 = *(void *)(v0 + 896);
      if ((v33 & 1) == 0)
      {
        uint64_t v40 = *(int **)(v0 + 872);
        if (*(void *)(v39 + v40[10]) == v32) {
          break;
        }
      }
      ++v36;
      uint64_t v38 = *(void *)(v0 + 1288);
      sub_100409E00(*(void *)(v0 + 896), type metadata accessor for MediaAPIUpdates.App);
      v35 += v37;
      if (v36 == v38)
      {
        swift_release();
LABEL_20:
        uint64_t v41 = *(void *)(v0 + 816);
        uint64_t v42 = *(void *)(v0 + 808);
        static Logger.updates.getter();
        sub_100409D98(v41, v42, type metadata accessor for MediaAPIApp);
        uint64_t v43 = Logger.logObject.getter();
        os_log_type_t v44 = static os_log_type_t.info.getter();
        BOOL v45 = os_log_type_enabled(v43, v44);
        uint64_t v9 = *(void **)(v0 + 1120);
        char v46 = *(void (**)(uint64_t, uint64_t))(v0 + 1112);
        uint64_t v6 = *(void *)(v0 + 984);
        uint64_t v47 = *(void *)(v0 + 944);
        uint64_t v154 = *(void *)(v0 + 816);
        uint64_t v48 = *(uint64_t **)(v0 + 808);
        if (v45)
        {
          uint64_t v22 = swift_slowAlloc();
          uint64_t v9 = (void *)swift_slowAlloc();
          v155[0] = (uint64_t)v9;
          *(_DWORD *)uint64_t v22 = 136446210;
          uint64_t v150 = v46;
          uint64_t v24 = *v48;
          unint64_t v23 = v48[1];
          swift_bridgeObjectRetain();
          *(void *)(v22 + 4) = sub_1000143F4(v24, v23, v155);
          swift_bridgeObjectRelease();
          uint64_t v19 = (uint64_t)type metadata accessor for MediaAPIApp;
          sub_100409E00((uint64_t)v48, type metadata accessor for MediaAPIApp);
          _os_log_impl((void *)&_mh_execute_header, v43, v44, "Ignoring unexpected update for %{public}s", (uint8_t *)v22, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v20 = v147;
          swift_slowDealloc();

          v150(v6, v47);
        }
        else
        {

          uint64_t v19 = (uint64_t)type metadata accessor for MediaAPIApp;
          sub_100409E00((uint64_t)v48, type metadata accessor for MediaAPIApp);
          v46(v6, v47);
        }
        sub_100409E00(v154, type metadata accessor for MediaAPIApp);
        unint64_t v21 = *(void *)(v0 + 1296) + 1;
        if (v21 == *(void *)(v0 + 1280)) {
          goto LABEL_28;
        }
        goto LABEL_12;
      }
    }
    uint64_t v49 = *(void *)(v0 + 912);
    uint64_t v50 = *(void *)(v0 + 904);
    uint64_t v51 = *(void *)(v0 + 848);
    uint64_t v52 = *(void *)(v0 + 840);
    uint64_t v53 = *(void *)(v0 + 824);
    swift_release();
    sub_10040C2A8(v39, v50, type metadata accessor for MediaAPIUpdates.App);
    sub_10040C2A8(v50, v49, type metadata accessor for MediaAPIUpdates.App);
    uint64_t v54 = *(void *)(v49 + v40[13]);
    sub_100017238(v49 + v40[5], v53, &qword_10065C3C0);
    int v55 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v53, 1, v52);
    if (v55 == 1)
    {
      sub_10001729C(*(void *)(v0 + 824), &qword_10065C3C0);
      goto LABEL_3;
    }
    uint64_t v56 = *(void *)(v0 + 856);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 848) + 32))(v56, *(void *)(v0 + 824), *(void *)(v0 + 840));
    uint64_t v57 = *(void *)(v54 + 16);
    uint64_t v58 = v57 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v57 + 16);
    uint64_t v59 = (os_unfair_lock_s *)(v57 + ((*(unsigned int *)(*(void *)v57 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v59);
    sub_100407430(v58, v56, (void *)(v0 + 640));
    uint64_t v60 = *(void *)(v0 + 856);
    uint64_t v61 = *(void *)(v0 + 848);
    uint64_t v62 = *(void *)(v0 + 840);
    os_unfair_lock_unlock(v59);
    uint64_t v63 = *(void **)(v0 + 640);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
    if (v63)
    {
      id v64 = [v63 managementDeclarationIdentifier];

      if (v64) {
        break;
      }
    }
LABEL_3:
    sub_100409E60();
    swift_allocError();
    swift_willThrow();
  }
  uint64_t v65 = *(void *)(v0 + 680);
  uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v68 = v67;

  *(void *)(v0 + 1312) = v66;
  *(void *)(v0 + 1320) = v68;
  uint64_t v69 = *(void *)(*(void *)(v65 + 240) + 16);
  *(void *)(v0 + 1328) = v69;
  swift_retain();
  uint64_t v70 = sub_1003FB2C0;
  uint64_t v71 = v69;
  uint64_t v72 = 0;
  return _swift_task_switch(v70, v71, v72);
}

uint64_t sub_100400468()
{
  *(void *)(*(void *)v1 + 1432) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10040176C;
  }
  else {
    uint64_t v2 = sub_10040057C;
  }
  return _swift_task_switch(v2, 0, 0);
}

void sub_10040057C()
{
  uint64_t v157 = v1;
  swift_release();
  uint64_t v3 = *(void *)(v1 + 1432);
  *(void *)(v1 + 1440) = v3;
  uint64_t v4 = *(uint64_t **)(v1 + 912);
  uint64_t v5 = v4[1];
  *(void *)(v1 + 1448) = v5;
  if (v5)
  {
LABEL_2:
    uint64_t v6 = *(void **)(v1 + 680);
    uint64_t v7 = *v4;
    uint64_t v9 = v6[23];
    uint64_t v8 = v6[24];
    uint64_t v10 = v6[25];
    uint64_t v11 = v6[28];
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v1 + 1456) = v12;
    *uint64_t v12 = v1;
    v12[1] = sub_100402944;
    uint64_t v13 = *(void *)(v1 + 752);
    uint64_t v14 = *(void *)(v1 + 728);
    __int16 v159 = 0;
    sub_1004FFCA8(v13, v14, v7, v5, v8, v9, v10, v11);
    return;
  }
  while (2)
  {
    uint64_t v147 = v3;
    uint64_t v24 = *(void *)(v1 + 816);
    sub_100409E00((uint64_t)v4, type metadata accessor for MediaAPIUpdates.App);
    sub_100409E00(v24, type metadata accessor for MediaAPIApp);
    uint64_t v25 = *(void *)(v1 + 1304);
    unint64_t v26 = *(void *)(v1 + 1296) + 1;
    uint64_t v149 = v25;
    if (v26 == *(void *)(v1 + 1280))
    {
LABEL_29:
      swift_bridgeObjectRelease();
      swift_release();
      unint64_t v78 = *(void *)(v1 + 1264);
      uint64_t v2 = *(void *)(v1 + 1256);
      if (*(void *)(v25 + 16))
      {
        sub_10056C034(v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10018AE44(v2, v78);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10018AE44(v2, v78);
      }
      uint64_t v24 = *(void *)(v1 + 1216);
      uint64_t v79 = *(void *)(v1 + 1208);
      if (v24 < v79)
      {
        uint64_t v80 = *(void *)(v1 + 1104);
        if (!*(unsigned char *)(v1 + 594)) {
          uint64_t v80 = 100;
        }
        unint64_t v81 = v24 + v80;
        if (__OFADD__(v24, v80)) {
          unint64_t v81 = ((v24 + v80) >> 63) ^ 0x8000000000000000;
        }
        *(void *)(v1 + 1216) = v81;
        BOOL v82 = __OFSUB__(v79, v24);
        uint64_t v83 = v79 - v24;
        if (!v82)
        {
          if (v80 >= v83) {
            uint64_t v2 = v83;
          }
          else {
            uint64_t v2 = v80;
          }
          if (v2 >= v24)
          {
            if ((v24 & 0x8000000000000000) == 0)
            {
              uint64_t v0 = *(void **)(v1 + 1152);
              uint64_t v84 = v0[2];
              if (v84 >= (unint64_t)v24 && v84 >= v2)
              {
                type metadata accessor for __ContiguousArrayStorageBase();
                swift_bridgeObjectRetain();
                swift_unknownObjectRetain_n();
                id v85 = (void *)swift_dynamicCastClass();
                if (!v85)
                {
                  swift_bridgeObjectRelease();
                  id v85 = _swiftEmptyArrayStorage;
                }
                uint64_t v86 = v85[2];
                swift_release();
                uint64_t v0 = *(void **)(v1 + 1152);
                if (v86 == v2 - v24)
                {
                  uint64_t v87 = (void *)swift_dynamicCastClass();
                  if (!v87)
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v87 = _swiftEmptyArrayStorage;
                  }
                  goto LABEL_50;
                }
LABEL_110:
                unint64_t v145 = (2 * v2) | 1;
                uint64_t v146 = *(void *)(v1 + 880);
                swift_bridgeObjectRelease();
                uint64_t v87 = sub_1004FDAD0((uint64_t)v0, (uint64_t)v0+ ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80)), v24, v145);
LABEL_50:
                *(void *)(v1 + 1224) = v87;
                uint64_t v88 = *(void *)(v1 + 1200);
                uint64_t v89 = *(void **)(v1 + 1176);
                swift_bridgeObjectRelease();
                id v90 = v89;
                uint64_t v91 = (void *)swift_task_alloc();
                *(void *)(v1 + 1232) = v91;
                void *v91 = v1;
                v91[1] = sub_1003F9F78;
                uint64_t v92 = *(void *)(v1 + 1192);
                uint64_t v93 = *(void *)(v1 + 1176);
                uint64_t v94 = *(void *)(v1 + 664);
                uint64_t v95 = *(void *)(v1 + 656);
                uint64_t v96 = *(void *)(v1 + 648);
                sub_1004047E8((uint64_t)v87, v93, v92, v88, v96, v95, v94);
                return;
              }
LABEL_109:
              __break(1u);
              goto LABEL_110;
            }
LABEL_108:
            __break(1u);
            goto LABEL_109;
          }
LABEL_107:
          __break(1u);
          goto LABEL_108;
        }
LABEL_106:
        __break(1u);
        goto LABEL_107;
      }
      uint64_t v24 = *(void *)(v1 + 1200);
      unint64_t v97 = *(void **)(v1 + 1176);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      unint64_t v100 = *(void *)(v1 + 1144);
      int64_t v101 = *(void *)(v1 + 1136);
      p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
      while (1)
      {
        if (v100)
        {
          unint64_t v103 = __clz(__rbit64(v100));
          v100 &= v100 - 1;
          unint64_t v104 = v103 | (v101 << 6);
          uint64_t v105 = *(uint64_t (**)())(v1 + 1128);
        }
        else
        {
          BOOL v82 = __OFADD__(v101++, 1);
          if (v82) {
            goto LABEL_104;
          }
          int64_t v106 = (unint64_t)((1 << *(unsigned char *)(v1 + 595)) + 63) >> 6;
          uint64_t v105 = *(uint64_t (**)())(v1 + 1128);
          if (v101 >= v106)
          {
LABEL_92:
            swift_release();
            swift_bridgeObjectRelease();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            char v139 = *(void (**)(void))(v1 + 8);
            v139();
            return;
          }
          uint64_t v107 = (char *)v105 + 64;
          unint64_t v108 = *((void *)v105 + v101 + 8);
          if (!v108)
          {
            int64_t v109 = v101 + 1;
            if (v101 + 1 >= v106) {
              goto LABEL_92;
            }
            unint64_t v108 = *(void *)&v107[8 * v109];
            if (!v108)
            {
              int64_t v109 = v101 + 2;
              if (v101 + 2 >= v106) {
                goto LABEL_92;
              }
              unint64_t v108 = *(void *)&v107[8 * v109];
              if (!v108)
              {
                int64_t v109 = v101 + 3;
                if (v101 + 3 >= v106) {
                  goto LABEL_92;
                }
                unint64_t v108 = *(void *)&v107[8 * v109];
                if (!v108)
                {
                  while (1)
                  {
                    int64_t v101 = v109 + 1;
                    if (__OFADD__(v109, 1)) {
                      goto LABEL_105;
                    }
                    if (v101 >= v106) {
                      goto LABEL_92;
                    }
                    unint64_t v108 = *(void *)&v107[8 * v101];
                    ++v109;
                    if (v108) {
                      goto LABEL_68;
                    }
                  }
                }
              }
            }
            int64_t v101 = v109;
          }
LABEL_68:
          unint64_t v100 = (v108 - 1) & v108;
          unint64_t v104 = __clz(__rbit64(v108)) + (v101 << 6);
        }
        *(void *)(v1 + 1144) = v100;
        *(void *)(v1 + 1136) = v101;
        uint64_t v110 = *((void *)v105 + 6) + 16 * v104;
        uint64_t v111 = *(void *)v110;
        int v112 = *(unsigned __int8 *)(v110 + 8);
        uint64_t v113 = *(void *)(*((void *)v105 + 7) + 8 * v104);
        *(void *)(v1 + 1152) = v113;
        if (v112)
        {
          if (v112 != 1)
          {
            __break(1u);
            goto _swift_task_switch;
          }
          swift_bridgeObjectRetain();
          uint64_t v132 = 0;
          goto LABEL_89;
        }
        uint64_t v114 = *(void **)(v1 + 672);
        swift_bridgeObjectRetain();
        Class isa = UInt64._bridgeToObjectiveC()().super.super.isa;
        uint64_t v0 = objc_msgSend(v114, (SEL)p_base_prots[465], isa);

        if (v0)
        {
          unint64_t v116 = v0;
          id v117 = objc_msgSend(v116, "ams_storefront");
          if (!v117) {
            goto LABEL_84;
          }
          unint64_t v118 = v117;
          int64_t v153 = v101;
          uint64_t v155 = v116;
          unint64_t v152 = v100;
          uint64_t v119 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v121 = v120;

          sub_10054F088(45, 0xE100000000000000, v119, v121);
          uint64_t v122 = String.subscript.getter();
          uint64_t v2 = v123;
          unint64_t v125 = v124;
          unint64_t v127 = v126;
          swift_bridgeObjectRelease();
          if (!((v122 ^ (unint64_t)v2) >> 14))
          {
            swift_bridgeObjectRelease();
            p_base_prots = &XPCClientRegistry.base_prots;
            unint64_t v100 = v152;
            int64_t v101 = v153;
            unint64_t v116 = v155;
LABEL_84:

            goto LABEL_85;
          }
          uint64_t v150 = v0;
          uint64_t v128 = sub_1004081A0(v122, v2, v125, v127, 10);
          if ((v129 & 0x100) != 0)
          {
            uint64_t v133 = sub_100446850(v122, v2, v125, v127, 10);
            uint64_t v2 = v134;
            swift_bridgeObjectRelease();
            uint64_t v132 = v155;

            if ((v2 & 1) == 0)
            {
              uint64_t v111 = v133;
              goto LABEL_89;
            }
            p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
            unint64_t v100 = v152;
            int64_t v101 = v153;
          }
          else
          {
            char v130 = v129;
            uint64_t v131 = v128;
            swift_bridgeObjectRelease();
            uint64_t v132 = v155;

            p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
            unint64_t v100 = v152;
            int64_t v101 = v153;
            if ((v130 & 1) == 0)
            {
              uint64_t v111 = v131;
LABEL_89:
              *(void *)(v1 + 1176) = v132;
              *(void *)(v1 + 1168) = v111;
              *(void *)(v1 + 1160) = v147;
              uint64_t v138 = (void *)swift_task_alloc();
              *(void *)(v1 + 1184) = v138;
              *uint64_t v138 = v1;
              v138[1] = sub_1003F9574;
              sub_100408DC4(v111);
              return;
            }
          }
          uint64_t v0 = v150;
        }
LABEL_85:
        static Logger.updates.getter();
        swift_bridgeObjectRetain();
        uint64_t v24 = Logger.logObject.getter();
        os_log_type_t v135 = static os_log_type_t.error.getter();
        if (os_log_type_enabled((os_log_t)v24, v135))
        {
          uint64_t v2 = swift_slowAlloc();
          *(_DWORD *)uint64_t v2 = 134218241;
          uint64_t v136 = v0;
          uint64_t v137 = *(void *)(v113 + 16);
          swift_bridgeObjectRelease();
          *(void *)(v2 + 4) = v137;
          uint64_t v0 = v136;
          swift_bridgeObjectRelease();
          *(_WORD *)(v2 + 12) = 2053;
          *(void *)(v2 + 14) = v111;
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v24, v135, "Skipping %ld app(s), associated account %{sensitive}llu was not found or has no storefront", (uint8_t *)v2, 0x16u);
          p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        (*(void (**)(void, void))(v1 + 1112))(*(void *)(v1 + 992), *(void *)(v1 + 944));
      }
    }
LABEL_12:
    *(void *)(v1 + 1304) = v25;
    *(void *)(v1 + 1296) = v26;
    uint64_t v29 = *(void *)(v1 + 1240);
    if (v26 >= *(void *)(v29 + 16))
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
      goto LABEL_106;
    }
    uint64_t v30 = *(void *)(v1 + 1288);
    char v31 = *(uint64_t **)(v1 + 816);
    sub_100409D98(v29+ ((*(unsigned __int8 *)(v1 + 596) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 596))+ *(void *)(*(void *)(v1 + 800) + 72) * v26, (uint64_t)v31, type metadata accessor for MediaAPIApp);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1004BD574(v32, v33);
    if (!v30) {
      goto LABEL_20;
    }
    uint64_t v36 = v34;
    char v37 = v35;
    uint64_t v38 = *(void *)(v1 + 880);
    uint64_t v39 = *(void *)(v1 + 1224)
        + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
    swift_bridgeObjectRetain();
    uint64_t v40 = 0;
    uint64_t v41 = *(void *)(v38 + 72);
    while (1)
    {
      sub_100409D98(v39, *(void *)(v1 + 896), type metadata accessor for MediaAPIUpdates.App);
      uint64_t v43 = *(void *)(v1 + 896);
      if ((v37 & 1) == 0)
      {
        os_log_type_t v44 = *(int **)(v1 + 872);
        if (*(void *)(v43 + v44[10]) == v36) {
          break;
        }
      }
      ++v40;
      uint64_t v42 = *(void *)(v1 + 1288);
      sub_100409E00(*(void *)(v1 + 896), type metadata accessor for MediaAPIUpdates.App);
      v39 += v41;
      if (v40 == v42)
      {
        swift_release();
LABEL_20:
        uint64_t v45 = *(void *)(v1 + 816);
        uint64_t v46 = *(void *)(v1 + 808);
        static Logger.updates.getter();
        sub_100409D98(v45, v46, type metadata accessor for MediaAPIApp);
        uint64_t v47 = Logger.logObject.getter();
        os_log_type_t v48 = static os_log_type_t.info.getter();
        BOOL v49 = os_log_type_enabled(v47, v48);
        uint64_t v0 = *(void **)(v1 + 1120);
        uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v1 + 1112);
        uint64_t v2 = *(void *)(v1 + 984);
        uint64_t v51 = *(void *)(v1 + 944);
        uint64_t v154 = *(void *)(v1 + 816);
        uint64_t v52 = *(void **)(v1 + 808);
        if (v49)
        {
          uint64_t v27 = swift_slowAlloc();
          v156[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v27 = 136446210;
          uint64_t v0 = (void *)*v52;
          unint64_t v28 = v52[1];
          swift_bridgeObjectRetain();
          *(void *)(v27 + 4) = sub_1000143F4((uint64_t)v0, v28, v156);
          swift_bridgeObjectRelease();
          uint64_t v24 = (uint64_t)type metadata accessor for MediaAPIApp;
          sub_100409E00((uint64_t)v52, type metadata accessor for MediaAPIApp);
          _os_log_impl((void *)&_mh_execute_header, v47, v48, "Ignoring unexpected update for %{public}s", (uint8_t *)v27, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v25 = v149;
          swift_slowDealloc();
        }
        else
        {

          uint64_t v24 = (uint64_t)type metadata accessor for MediaAPIApp;
          sub_100409E00((uint64_t)v52, type metadata accessor for MediaAPIApp);
        }
        v50(v2, v51);
        sub_100409E00(v154, type metadata accessor for MediaAPIApp);
        unint64_t v26 = *(void *)(v1 + 1296) + 1;
        if (v26 == *(void *)(v1 + 1280)) {
          goto LABEL_29;
        }
        goto LABEL_12;
      }
    }
    uint64_t v53 = *(void *)(v1 + 912);
    uint64_t v54 = *(void *)(v1 + 904);
    uint64_t v55 = *(void *)(v1 + 848);
    uint64_t v56 = *(void *)(v1 + 840);
    uint64_t v57 = *(void *)(v1 + 824);
    swift_release();
    sub_10040C2A8(v43, v54, type metadata accessor for MediaAPIUpdates.App);
    sub_10040C2A8(v54, v53, type metadata accessor for MediaAPIUpdates.App);
    uint64_t v58 = *(void *)(v53 + v44[13]);
    sub_100017238(v53 + v44[5], v57, &qword_10065C3C0);
    int v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v57, 1, v56);
    if (v59 == 1)
    {
      sub_10001729C(*(void *)(v1 + 824), &qword_10065C3C0);
LABEL_27:
      sub_100409E60();
      uint64_t v0 = (void *)swift_allocError();
      swift_willThrow();
      uint64_t v69 = *(void *)(v1 + 912);
      uint64_t v70 = *(void *)(v1 + 888);
      static Logger.updates.getter();
      sub_100409D98(v69, v70, type metadata accessor for MediaAPIUpdates.App);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v71 = Logger.logObject.getter();
      os_log_type_t v72 = static os_log_type_t.error.getter();
      uint64_t v2 = v72;
      BOOL v73 = os_log_type_enabled(v71, v72);
      uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v1 + 1112);
      uint64_t v75 = *(void *)(v1 + 960);
      uint64_t v76 = *(void *)(v1 + 944);
      uint64_t v77 = *(void *)(v1 + 888);
      if (v73)
      {
        uint64_t v15 = *(void *)(v1 + 872);
        uint64_t v16 = swift_slowAlloc();
        v156[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v16 = 134218242;
        uint64_t v17 = *(void *)(v77 + *(int *)(v15 + 40));
        sub_100409E00(v77, type metadata accessor for MediaAPIUpdates.App);
        *(void *)(v16 + 4) = v17;
        *(_WORD *)(v16 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v18 = *(void *)(v1 + 560);
        int64_t v148 = v74;
        uint64_t v151 = v76;
        uint64_t v19 = *(void *)(v1 + 568);
        uint64_t v20 = *(void *)(v19 - 8);
        uint64_t v0 = (void *)swift_task_alloc();
        (*(void (**)(void *, uint64_t, uint64_t))(v20 + 16))(v0, v18, v19);
        uint64_t v21 = String.init<A>(describing:)();
        unint64_t v23 = v22;
        swift_task_dealloc();
        *(void *)(v16 + 14) = sub_1000143F4(v21, v23, v156);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        v148(v75, v151);
      }
      else
      {
        sub_100409E00(v77, type metadata accessor for MediaAPIUpdates.App);
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();

        v74(v75, v76);
      }
      uint64_t v3 = 0;
      *(void *)(v1 + 1440) = 0;
      uint64_t v4 = *(uint64_t **)(v1 + 912);
      uint64_t v5 = v4[1];
      *(void *)(v1 + 1448) = v5;
      if (v5) {
        goto LABEL_2;
      }
      continue;
    }
    break;
  }
  uint64_t v60 = *(void *)(v1 + 856);
  (*(void (**)(uint64_t, void, void))(*(void *)(v1 + 848) + 32))(v60, *(void *)(v1 + 824), *(void *)(v1 + 840));
  uint64_t v61 = *(void *)(v58 + 16);
  uint64_t v62 = v61 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v61 + 16);
  uint64_t v63 = (os_unfair_lock_s *)(v61 + ((*(unsigned int *)(*(void *)v61 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v63);
  sub_100407430(v62, v60, (void *)(v1 + 640));
  if (v147)
  {
    os_unfair_lock_unlock(v63);
  }
  else
  {
    uint64_t v64 = *(void *)(v1 + 856);
    uint64_t v65 = *(void *)(v1 + 848);
    uint64_t v66 = *(void *)(v1 + 840);
    os_unfair_lock_unlock(v63);
    uint64_t v67 = *(void **)(v1 + 640);
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v64, v66);
    if (!v67) {
      goto LABEL_27;
    }
    id v68 = [v67 managementDeclarationIdentifier];

    if (!v68) {
      goto LABEL_27;
    }
    uint64_t v140 = *(void *)(v1 + 680);
    uint64_t v141 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v143 = v142;

    *(void *)(v1 + 1312) = v141;
    *(void *)(v1 + 1320) = v143;
    uint64_t v144 = *(void *)(*(void *)(v140 + 240) + 16);
    *(void *)(v1 + 1328) = v144;
    swift_retain();
    uint64_t v105 = sub_1003FB2C0;
    uint64_t v98 = v144;
    uint64_t v99 = 0;
_swift_task_switch:
    _swift_task_switch(v105, v98, v99);
  }
}

uint64_t sub_10040176C()
{
  uint64_t v156 = v0;
  swift_release();
  while (1)
  {
    uint64_t v1 = *(void *)(v0 + 912);
    uint64_t v2 = *(void *)(v0 + 888);
    static Logger.updates.getter();
    sub_100409D98(v1, v2, type metadata accessor for MediaAPIUpdates.App);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    BOOL v5 = os_log_type_enabled(v3, v4);
    uint64_t v6 = *(void *)(v0 + 1112);
    uint64_t v7 = *(void *)(v0 + 960);
    uint64_t v8 = *(void *)(v0 + 944);
    uint64_t v9 = *(void **)(v0 + 888);
    if (v5)
    {
      uint64_t v10 = *(void *)(v0 + 872);
      uint64_t v152 = *(void *)(v0 + 944);
      uint64_t v11 = swift_slowAlloc();
      v155[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 134218242;
      uint64_t v12 = *(void *)((char *)v9 + *(int *)(v10 + 40));
      sub_100409E00((uint64_t)v9, type metadata accessor for MediaAPIUpdates.App);
      *(void *)(v11 + 4) = v12;
      *(_WORD *)(v11 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v146 = (void (*)(uint64_t, uint64_t))v6;
      uint64_t v149 = v7;
      uint64_t v13 = *(void *)(*(void *)(v0 + 568) - 8);
      swift_task_alloc();
      uint64_t v14 = *(void (**)(void))(v13 + 16);
      uint64_t v6 = v13 + 16;
      v14();
      uint64_t v9 = (void *)String.init<A>(describing:)();
      unint64_t v16 = v15;
      swift_task_dealloc();
      *(void *)(v11 + 14) = sub_1000143F4((uint64_t)v9, v16, v155);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      v146(v149, v152);
    }
    else
    {
      sub_100409E00(*(void *)(v0 + 888), type metadata accessor for MediaAPIUpdates.App);
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();

      ((void (*)(uint64_t, uint64_t))v6)(v7, v8);
    }
    *(void *)(v0 + 1440) = 0;
    uint64_t v17 = *(uint64_t **)(v0 + 912);
    uint64_t v18 = v17[1];
    *(void *)(v0 + 1448) = v18;
    if (v18)
    {
      uint64_t v133 = *(void **)(v0 + 680);
      uint64_t v134 = *v17;
      uint64_t v136 = v133[23];
      uint64_t v135 = v133[24];
      uint64_t v137 = v133[25];
      uint64_t v138 = v133[28];
      swift_bridgeObjectRetain();
      char v139 = (void *)swift_task_alloc();
      *(void *)(v0 + 1456) = v139;
      void *v139 = v0;
      v139[1] = sub_100402944;
      uint64_t v140 = *(void *)(v0 + 752);
      uint64_t v141 = *(void *)(v0 + 728);
      __int16 v158 = 0;
      return sub_1004FFCA8(v140, v141, v134, v18, v135, v136, v137, v138);
    }
    uint64_t v19 = *(void *)(v0 + 816);
    sub_100409E00((uint64_t)v17, type metadata accessor for MediaAPIUpdates.App);
    sub_100409E00(v19, type metadata accessor for MediaAPIApp);
    uint64_t v20 = *(void *)(v0 + 1304);
    unint64_t v21 = *(void *)(v0 + 1296) + 1;
    uint64_t v147 = v20;
    if (v21 == *(void *)(v0 + 1280))
    {
LABEL_28:
      swift_bridgeObjectRelease();
      swift_release();
      unint64_t v73 = *(void *)(v0 + 1264);
      uint64_t v6 = *(void *)(v0 + 1256);
      uint64_t v9 = *(void **)(v0 + 1248);
      if (*(void *)(v20 + 16))
      {
        sub_10056C034(v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10018AE44(v6, v73);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10018AE44(v6, v73);
      }
      uint64_t v19 = *(void *)(v0 + 1216);
      uint64_t v74 = *(void *)(v0 + 1208);
      if (v19 < v74)
      {
        uint64_t v75 = *(void *)(v0 + 1104);
        if (!*(unsigned char *)(v0 + 594)) {
          uint64_t v75 = 100;
        }
        unint64_t v76 = v19 + v75;
        if (__OFADD__(v19, v75)) {
          unint64_t v76 = ((v19 + v75) >> 63) ^ 0x8000000000000000;
        }
        *(void *)(v0 + 1216) = v76;
        BOOL v77 = __OFSUB__(v74, v19);
        uint64_t v78 = v74 - v19;
        if (!v77)
        {
          if (v75 >= v78) {
            uint64_t v6 = v78;
          }
          else {
            uint64_t v6 = v75;
          }
          if (v6 >= v19)
          {
            if ((v19 & 0x8000000000000000) == 0)
            {
              uint64_t v9 = *(void **)(v0 + 1152);
              uint64_t v79 = v9[2];
              if (v79 >= (unint64_t)v19 && v79 >= v6)
              {
                type metadata accessor for __ContiguousArrayStorageBase();
                swift_bridgeObjectRetain();
                swift_unknownObjectRetain_n();
                uint64_t v80 = (void *)swift_dynamicCastClass();
                if (!v80)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v80 = _swiftEmptyArrayStorage;
                }
                uint64_t v81 = v80[2];
                swift_release();
                uint64_t v9 = *(void **)(v0 + 1152);
                if (v81 == v6 - v19)
                {
                  BOOL v82 = (void *)swift_dynamicCastClass();
                  if (!v82)
                  {
                    swift_bridgeObjectRelease();
                    BOOL v82 = _swiftEmptyArrayStorage;
                  }
                  goto LABEL_49;
                }
LABEL_105:
                unint64_t v144 = (2 * v6) | 1;
                uint64_t v145 = *(void *)(v0 + 880);
                swift_bridgeObjectRelease();
                BOOL v82 = sub_1004FDAD0((uint64_t)v9, (uint64_t)v9+ ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80)), v19, v144);
LABEL_49:
                *(void *)(v0 + 1224) = v82;
                uint64_t v83 = *(void *)(v0 + 1200);
                uint64_t v84 = *(void **)(v0 + 1176);
                swift_bridgeObjectRelease();
                id v85 = v84;
                uint64_t v86 = (void *)swift_task_alloc();
                *(void *)(v0 + 1232) = v86;
                *uint64_t v86 = v0;
                v86[1] = sub_1003F9F78;
                uint64_t v87 = *(void *)(v0 + 1192);
                uint64_t v88 = *(void *)(v0 + 1176);
                uint64_t v89 = *(void *)(v0 + 664);
                uint64_t v90 = *(void *)(v0 + 656);
                uint64_t v91 = *(void *)(v0 + 648);
                return sub_1004047E8((uint64_t)v82, v88, v87, v83, v91, v90, v89);
              }
LABEL_104:
              __break(1u);
              goto LABEL_105;
            }
LABEL_103:
            __break(1u);
            goto LABEL_104;
          }
LABEL_102:
          __break(1u);
          goto LABEL_103;
        }
LABEL_101:
        __break(1u);
        goto LABEL_102;
      }
      uint64_t v19 = *(void *)(v0 + 1200);
      uint64_t v93 = *(void **)(v0 + 1176);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      uint64_t v6 = *(void *)(v0 + 1144);
      int64_t v94 = *(void *)(v0 + 1136);
      p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
      while (1)
      {
        if (v6)
        {
          unint64_t v96 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
          unint64_t v97 = v96 | (v94 << 6);
          uint64_t v70 = *(uint64_t (**)())(v0 + 1128);
        }
        else
        {
          BOOL v77 = __OFADD__(v94++, 1);
          if (v77) {
            goto LABEL_99;
          }
          int64_t v98 = (unint64_t)((1 << *(unsigned char *)(v0 + 595)) + 63) >> 6;
          uint64_t v70 = *(uint64_t (**)())(v0 + 1128);
          if (v94 >= v98)
          {
LABEL_93:
            swift_release();
            swift_bridgeObjectRelease();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            uint64_t v143 = *(uint64_t (**)(void))(v0 + 8);
            return v143();
          }
          uint64_t v99 = (char *)v70 + 64;
          unint64_t v100 = *((void *)v70 + v94 + 8);
          if (!v100)
          {
            int64_t v101 = v94 + 1;
            if (v94 + 1 >= v98) {
              goto LABEL_93;
            }
            unint64_t v100 = *(void *)&v99[8 * v101];
            if (!v100)
            {
              int64_t v101 = v94 + 2;
              if (v94 + 2 >= v98) {
                goto LABEL_93;
              }
              unint64_t v100 = *(void *)&v99[8 * v101];
              if (!v100)
              {
                int64_t v101 = v94 + 3;
                if (v94 + 3 >= v98) {
                  goto LABEL_93;
                }
                unint64_t v100 = *(void *)&v99[8 * v101];
                if (!v100)
                {
                  while (1)
                  {
                    int64_t v94 = v101 + 1;
                    if (__OFADD__(v101, 1)) {
                      goto LABEL_100;
                    }
                    if (v94 >= v98) {
                      goto LABEL_93;
                    }
                    unint64_t v100 = *(void *)&v99[8 * v94];
                    ++v101;
                    if (v100) {
                      goto LABEL_67;
                    }
                  }
                }
              }
            }
            int64_t v94 = v101;
          }
LABEL_67:
          uint64_t v6 = (v100 - 1) & v100;
          unint64_t v97 = __clz(__rbit64(v100)) + (v94 << 6);
        }
        *(void *)(v0 + 1144) = v6;
        *(void *)(v0 + 1136) = v94;
        uint64_t v102 = *((void *)v70 + 6) + 16 * v97;
        uint64_t v103 = *(void *)v102;
        int v104 = *(unsigned __int8 *)(v102 + 8);
        uint64_t v105 = *(void *)(*((void *)v70 + 7) + 8 * v97);
        *(void *)(v0 + 1152) = v105;
        if (v104)
        {
          if (v104 != 1)
          {
            __break(1u);
            return _swift_task_switch(v70, v71, v72);
          }
          swift_bridgeObjectRetain();
          unint64_t v125 = 0;
          goto LABEL_90;
        }
        int64_t v106 = *(void **)(v0 + 672);
        swift_bridgeObjectRetain();
        Class isa = UInt64._bridgeToObjectiveC()().super.super.isa;
        uint64_t v9 = objc_msgSend(v106, (SEL)p_base_prots[465], isa);

        if (v9)
        {
          unint64_t v108 = v9;
          id v109 = objc_msgSend(v108, "ams_storefront");
          if (!v109) {
            goto LABEL_82;
          }
          uint64_t v110 = v109;
          int64_t v153 = v108;
          int64_t v148 = v94;
          uint64_t v151 = v6;
          uint64_t v111 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v113 = v112;

          sub_10054F088(45, 0xE100000000000000, v111, v113);
          uint64_t v114 = String.subscript.getter();
          unint64_t v116 = v115;
          unint64_t v118 = v117;
          unint64_t v120 = v119;
          swift_bridgeObjectRelease();
          if (!((v114 ^ v116) >> 14))
          {
            swift_bridgeObjectRelease();
            p_base_prots = &XPCClientRegistry.base_prots;
            int64_t v94 = v148;
            uint64_t v6 = v151;
            unint64_t v108 = v153;
LABEL_82:

            goto LABEL_83;
          }
          uint64_t v121 = sub_1004081A0(v114, v116, v118, v120, 10);
          if ((v122 & 0x100) != 0)
          {
            uint64_t v126 = sub_100446850(v114, v116, v118, v120, 10);
            char v128 = v127;
            swift_bridgeObjectRelease();

            if ((v128 & 1) == 0)
            {
              uint64_t v103 = v126;
              unint64_t v125 = v153;
              goto LABEL_90;
            }
            p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
            int64_t v94 = v148;
            uint64_t v6 = v151;
          }
          else
          {
            uint64_t v123 = v121;
            char v124 = v122;
            swift_bridgeObjectRelease();
            unint64_t v125 = v153;

            uint64_t v6 = v151;
            if ((v124 & 1) == 0)
            {
              uint64_t v103 = v123;
LABEL_90:
              *(void *)(v0 + 1176) = v125;
              *(void *)(v0 + 1168) = v103;
              *(void *)(v0 + 1160) = 0;
              uint64_t v142 = (void *)swift_task_alloc();
              *(void *)(v0 + 1184) = v142;
              void *v142 = v0;
              v142[1] = sub_1003F9574;
              return sub_100408DC4(v103);
            }
            p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
            int64_t v94 = v148;
          }
        }
LABEL_83:
        static Logger.updates.getter();
        swift_bridgeObjectRetain();
        uint64_t v19 = Logger.logObject.getter();
        os_log_type_t v129 = static os_log_type_t.error.getter();
        if (os_log_type_enabled((os_log_t)v19, v129))
        {
          uint64_t v130 = v6;
          uint64_t v131 = swift_slowAlloc();
          *(_DWORD *)uint64_t v131 = 134218241;
          uint64_t v132 = *(void *)(v105 + 16);
          swift_bridgeObjectRelease();
          *(void *)(v131 + 4) = v132;
          swift_bridgeObjectRelease();
          *(_WORD *)(v131 + 12) = 2053;
          *(void *)(v131 + 14) = v103;
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v19, v129, "Skipping %ld app(s), associated account %{sensitive}llu was not found or has no storefront", (uint8_t *)v131, 0x16u);
          uint64_t v6 = v130;
          p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        (*(void (**)(void, void))(v0 + 1112))(*(void *)(v0 + 992), *(void *)(v0 + 944));
      }
    }
LABEL_12:
    *(void *)(v0 + 1304) = v20;
    *(void *)(v0 + 1296) = v21;
    uint64_t v25 = *(void *)(v0 + 1240);
    if (v21 >= *(void *)(v25 + 16))
    {
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
      goto LABEL_101;
    }
    uint64_t v26 = *(void *)(v0 + 1288);
    uint64_t v27 = *(uint64_t **)(v0 + 816);
    sub_100409D98(v25+ ((*(unsigned __int8 *)(v0 + 596) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 596))+ *(void *)(*(void *)(v0 + 800) + 72) * v21, (uint64_t)v27, type metadata accessor for MediaAPIApp);
    uint64_t v28 = *v27;
    uint64_t v29 = v27[1];
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1004BD574(v28, v29);
    if (!v26) {
      goto LABEL_20;
    }
    uint64_t v32 = v30;
    char v33 = v31;
    uint64_t v34 = *(void *)(v0 + 880);
    uint64_t v35 = *(void *)(v0 + 1224)
        + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
    swift_bridgeObjectRetain();
    uint64_t v36 = 0;
    uint64_t v37 = *(void *)(v34 + 72);
    while (1)
    {
      sub_100409D98(v35, *(void *)(v0 + 896), type metadata accessor for MediaAPIUpdates.App);
      uint64_t v39 = *(void *)(v0 + 896);
      if ((v33 & 1) == 0)
      {
        uint64_t v40 = *(int **)(v0 + 872);
        if (*(void *)(v39 + v40[10]) == v32) {
          break;
        }
      }
      ++v36;
      uint64_t v38 = *(void *)(v0 + 1288);
      sub_100409E00(*(void *)(v0 + 896), type metadata accessor for MediaAPIUpdates.App);
      v35 += v37;
      if (v36 == v38)
      {
        swift_release();
LABEL_20:
        uint64_t v41 = *(void *)(v0 + 816);
        uint64_t v42 = *(void *)(v0 + 808);
        static Logger.updates.getter();
        sub_100409D98(v41, v42, type metadata accessor for MediaAPIApp);
        uint64_t v43 = Logger.logObject.getter();
        os_log_type_t v44 = static os_log_type_t.info.getter();
        BOOL v45 = os_log_type_enabled(v43, v44);
        uint64_t v9 = *(void **)(v0 + 1120);
        uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v0 + 1112);
        uint64_t v6 = *(void *)(v0 + 984);
        uint64_t v47 = *(void *)(v0 + 944);
        uint64_t v154 = *(void *)(v0 + 816);
        os_log_type_t v48 = *(uint64_t **)(v0 + 808);
        if (v45)
        {
          uint64_t v22 = swift_slowAlloc();
          uint64_t v9 = (void *)swift_slowAlloc();
          v155[0] = (uint64_t)v9;
          *(_DWORD *)uint64_t v22 = 136446210;
          uint64_t v150 = v46;
          uint64_t v24 = *v48;
          unint64_t v23 = v48[1];
          swift_bridgeObjectRetain();
          *(void *)(v22 + 4) = sub_1000143F4(v24, v23, v155);
          swift_bridgeObjectRelease();
          uint64_t v19 = (uint64_t)type metadata accessor for MediaAPIApp;
          sub_100409E00((uint64_t)v48, type metadata accessor for MediaAPIApp);
          _os_log_impl((void *)&_mh_execute_header, v43, v44, "Ignoring unexpected update for %{public}s", (uint8_t *)v22, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v20 = v147;
          swift_slowDealloc();

          v150(v6, v47);
        }
        else
        {

          uint64_t v19 = (uint64_t)type metadata accessor for MediaAPIApp;
          sub_100409E00((uint64_t)v48, type metadata accessor for MediaAPIApp);
          v46(v6, v47);
        }
        sub_100409E00(v154, type metadata accessor for MediaAPIApp);
        unint64_t v21 = *(void *)(v0 + 1296) + 1;
        if (v21 == *(void *)(v0 + 1280)) {
          goto LABEL_28;
        }
        goto LABEL_12;
      }
    }
    uint64_t v49 = *(void *)(v0 + 912);
    uint64_t v50 = *(void *)(v0 + 904);
    uint64_t v51 = *(void *)(v0 + 848);
    uint64_t v52 = *(void *)(v0 + 840);
    uint64_t v53 = *(void *)(v0 + 824);
    swift_release();
    sub_10040C2A8(v39, v50, type metadata accessor for MediaAPIUpdates.App);
    sub_10040C2A8(v50, v49, type metadata accessor for MediaAPIUpdates.App);
    uint64_t v54 = *(void *)(v49 + v40[13]);
    sub_100017238(v49 + v40[5], v53, &qword_10065C3C0);
    int v55 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v53, 1, v52);
    if (v55 == 1)
    {
      sub_10001729C(*(void *)(v0 + 824), &qword_10065C3C0);
      goto LABEL_3;
    }
    uint64_t v56 = *(void *)(v0 + 856);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 848) + 32))(v56, *(void *)(v0 + 824), *(void *)(v0 + 840));
    uint64_t v57 = *(void *)(v54 + 16);
    uint64_t v58 = v57 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v57 + 16);
    int v59 = (os_unfair_lock_s *)(v57 + ((*(unsigned int *)(*(void *)v57 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v59);
    sub_100407430(v58, v56, (void *)(v0 + 640));
    uint64_t v60 = *(void *)(v0 + 856);
    uint64_t v61 = *(void *)(v0 + 848);
    uint64_t v62 = *(void *)(v0 + 840);
    os_unfair_lock_unlock(v59);
    uint64_t v63 = *(void **)(v0 + 640);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
    if (v63)
    {
      id v64 = [v63 managementDeclarationIdentifier];

      if (v64) {
        break;
      }
    }
LABEL_3:
    sub_100409E60();
    swift_allocError();
    swift_willThrow();
  }
  uint64_t v65 = *(void *)(v0 + 680);
  uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v68 = v67;

  *(void *)(v0 + 1312) = v66;
  *(void *)(v0 + 1320) = v68;
  uint64_t v69 = *(void *)(*(void *)(v65 + 240) + 16);
  *(void *)(v0 + 1328) = v69;
  swift_retain();
  uint64_t v70 = sub_1003FB2C0;
  uint64_t v71 = v69;
  uint64_t v72 = 0;
  return _swift_task_switch(v70, v71, v72);
}

uint64_t sub_100402944(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 1464) = a1;
  *(void *)(v4 + 1472) = a2;
  *(unsigned char *)(v4 + 1480) = a3;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100402A6C, 0, 0);
}

void sub_100402A6C()
{
  uint64_t v177 = v0;
  char v1 = *(unsigned char *)(v0 + 1480);
  uint64_t v2 = *(void *)(v0 + 1472);
  uint64_t v3 = *(void *)(v0 + 1464);
  uint64_t v4 = *(void *)(v0 + 728);
  uint64_t v5 = *(void *)(v0 + 720);
  uint64_t v6 = *(void *)(v0 + 712);
  uint64_t v7 = *(void *)(v0 + 704);
  uint64_t v8 = *(void *)(v0 + 688);
  uint64_t v9 = v7 + *(int *)(v8 + 48);
  uint64_t v10 = v7 + *(int *)(v8 + 64);
  (*(void (**)(void))(*(void *)(v0 + 744) + 32))();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v9, v4, v6);
  *(void *)uint64_t v10 = v3;
  *(void *)(v10 + 8) = v2;
  *(unsigned char *)(v10 + 16) = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *(void *)(v0 + 1304);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
LABEL_111:
  }
    uint64_t v12 = sub_1002907DC(0, *(void *)(v12 + 16) + 1, 1, v12);
  uint64_t v14 = *(void *)(v12 + 16);
  unint64_t v13 = *(void *)(v12 + 24);
  if (v14 >= v13 >> 1) {
    uint64_t v12 = sub_1002907DC(v13 > 1, v14 + 1, 1, v12);
  }
  uint64_t v15 = *(void *)(v0 + 912);
  uint64_t v16 = *(void *)(v0 + 816);
  uint64_t v17 = *(void *)(v0 + 704);
  uint64_t v18 = *(void *)(v0 + 696);
  *(void *)(v12 + 16) = v14 + 1;
  sub_10001733C(v17, v12+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v14, &qword_10065BDA8);
  sub_100409E00(v15, type metadata accessor for MediaAPIUpdates.App);
  sub_100409E00(v16, type metadata accessor for MediaAPIApp);
  uint64_t v19 = *(void **)(v0 + 1440);
  unint64_t v20 = *(void *)(v0 + 1296) + 1;
  if (v20 == *(void *)(v0 + 1280))
  {
    unint64_t v21 = *(void **)(v0 + 1440);
  }
  else
  {
    do
    {
      uint64_t v166 = v19;
      uint64_t v171 = v12;
      while (1)
      {
        *(void *)(v0 + 1304) = v12;
        *(void *)(v0 + 1296) = v20;
        uint64_t v24 = *(void *)(v0 + 1240);
        if (v20 >= *(void *)(v24 + 16))
        {
          __break(1u);
LABEL_110:
          __break(1u);
          goto LABEL_111;
        }
        uint64_t v25 = *(void *)(v0 + 1288);
        uint64_t v26 = *(uint64_t **)(v0 + 816);
        sub_100409D98(v24+ ((*(unsigned __int8 *)(v0 + 596) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 596))+ *(void *)(*(void *)(v0 + 800) + 72) * v20, (uint64_t)v26, type metadata accessor for MediaAPIApp);
        uint64_t v27 = *v26;
        uint64_t v28 = v26[1];
        swift_bridgeObjectRetain();
        uint64_t v29 = sub_1004BD574(v27, v28);
        if (v25) {
          break;
        }
LABEL_17:
        uint64_t v40 = *(void *)(v0 + 816);
        uint64_t v41 = *(void *)(v0 + 808);
        static Logger.updates.getter();
        sub_100409D98(v40, v41, type metadata accessor for MediaAPIApp);
        uint64_t v42 = Logger.logObject.getter();
        os_log_type_t v43 = static os_log_type_t.info.getter();
        BOOL v44 = os_log_type_enabled(v42, v43);
        uint64_t v14 = *(void *)(v0 + 1120);
        BOOL v45 = *(void (**)(uint64_t, uint64_t))(v0 + 1112);
        uint64_t v46 = *(void *)(v0 + 984);
        uint64_t v47 = *(void *)(v0 + 944);
        uint64_t v173 = *(void *)(v0 + 816);
        os_log_type_t v48 = *(uint64_t **)(v0 + 808);
        if (v44)
        {
          uint64_t v22 = swift_slowAlloc();
          v176[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v22 = 136446210;
          uint64_t v14 = *v48;
          unint64_t v23 = v48[1];
          swift_bridgeObjectRetain();
          *(void *)(v22 + 4) = sub_1000143F4(v14, v23, v176);
          swift_bridgeObjectRelease();
          sub_100409E00((uint64_t)v48, type metadata accessor for MediaAPIApp);
          _os_log_impl((void *)&_mh_execute_header, v42, v43, "Ignoring unexpected update for %{public}s", (uint8_t *)v22, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v12 = v171;
          swift_slowDealloc();
        }
        else
        {

          sub_100409E00((uint64_t)v48, type metadata accessor for MediaAPIApp);
        }
        v45(v46, v47);
        sub_100409E00(v173, type metadata accessor for MediaAPIApp);
        unint64_t v20 = *(void *)(v0 + 1296) + 1;
        if (v20 == *(void *)(v0 + 1280))
        {
          unint64_t v21 = v166;
          goto LABEL_31;
        }
      }
      uint64_t v31 = v29;
      char v32 = v30;
      uint64_t v33 = *(void *)(v0 + 880);
      uint64_t v34 = *(void *)(v0 + 1224)
          + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
      swift_bridgeObjectRetain();
      uint64_t v35 = 0;
      uint64_t v36 = *(void *)(v33 + 72);
      while (1)
      {
        sub_100409D98(v34, *(void *)(v0 + 896), type metadata accessor for MediaAPIUpdates.App);
        uint64_t v38 = *(void *)(v0 + 896);
        if ((v32 & 1) == 0)
        {
          uint64_t v39 = *(int **)(v0 + 872);
          if (*(void *)(v38 + v39[10]) == v31) {
            break;
          }
        }
        ++v35;
        uint64_t v37 = *(void *)(v0 + 1288);
        sub_100409E00(*(void *)(v0 + 896), type metadata accessor for MediaAPIUpdates.App);
        v34 += v36;
        if (v35 == v37)
        {
          swift_release();
          uint64_t v12 = v171;
          goto LABEL_17;
        }
      }
      uint64_t v49 = *(void *)(v0 + 912);
      uint64_t v50 = *(void *)(v0 + 904);
      uint64_t v51 = *(void *)(v0 + 848);
      uint64_t v52 = *(void *)(v0 + 840);
      uint64_t v53 = *(void *)(v0 + 824);
      swift_release();
      sub_10040C2A8(v38, v50, type metadata accessor for MediaAPIUpdates.App);
      sub_10040C2A8(v50, v49, type metadata accessor for MediaAPIUpdates.App);
      uint64_t v54 = *(void *)(v49 + v39[13]);
      sub_100017238(v49 + v39[5], v53, &qword_10065C3C0);
      int v55 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v53, 1, v52);
      if (v55 == 1)
      {
        sub_10001729C(*(void *)(v0 + 824), &qword_10065C3C0);
      }
      else
      {
        uint64_t v56 = *(void *)(v0 + 856);
        (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 848) + 32))(v56, *(void *)(v0 + 824), *(void *)(v0 + 840));
        uint64_t v57 = *(void *)(v54 + 16);
        uint64_t v58 = v57 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v57 + 16);
        int v59 = (os_unfair_lock_s *)(v57 + ((*(unsigned int *)(*(void *)v57 + 48) + 3) & 0x1FFFFFFFCLL));
        os_unfair_lock_lock(v59);
        sub_100407430(v58, v56, (void *)(v0 + 640));
        if (v166)
        {
          os_unfair_lock_unlock(v59);
          return;
        }
        uint64_t v60 = *(void *)(v0 + 856);
        uint64_t v61 = *(void *)(v0 + 848);
        uint64_t v62 = *(void *)(v0 + 840);
        os_unfair_lock_unlock(v59);
        uint64_t v63 = *(void **)(v0 + 640);
        (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
        if (v63)
        {
          id v64 = [v63 managementDeclarationIdentifier];

          if (v64)
          {
            uint64_t v159 = *(void *)(v0 + 680);
            uint64_t v160 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v162 = v161;

            *(void *)(v0 + 1312) = v160;
            *(void *)(v0 + 1320) = v162;
            uint64_t v163 = *(void *)(*(void *)(v159 + 240) + 16);
            *(void *)(v0 + 1328) = v163;
            swift_retain();
            unint64_t v112 = sub_1003FB2C0;
            uint64_t v106 = v163;
            uint64_t v107 = 0;
_swift_task_switch:
            _swift_task_switch(v112, v106, v107);
            return;
          }
        }
      }
      sub_100409E60();
      uint64_t v14 = swift_allocError();
      swift_willThrow();
      uint64_t v65 = *(void *)(v0 + 912);
      uint64_t v66 = *(void *)(v0 + 888);
      static Logger.updates.getter();
      sub_100409D98(v65, v66, type metadata accessor for MediaAPIUpdates.App);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v67 = Logger.logObject.getter();
      os_log_type_t v68 = static os_log_type_t.error.getter();
      BOOL v69 = os_log_type_enabled(v67, v68);
      uint64_t v70 = *(void (**)(uint64_t, uint64_t))(v0 + 1112);
      uint64_t v71 = *(void *)(v0 + 960);
      uint64_t v72 = *(void *)(v0 + 944);
      uint64_t v73 = *(void *)(v0 + 888);
      if (v69)
      {
        uint64_t v74 = *(void *)(v0 + 872);
        uint64_t v174 = *(void *)(v0 + 960);
        uint64_t v75 = swift_slowAlloc();
        v176[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v75 = 134218242;
        uint64_t v76 = *(void *)(v73 + *(int *)(v74 + 40));
        sub_100409E00(v73, type metadata accessor for MediaAPIUpdates.App);
        *(void *)(v75 + 4) = v76;
        *(_WORD *)(v75 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v169 = v72;
        uint64_t v77 = *(void *)(*(void *)(v0 + 568) - 8);
        swift_task_alloc();
        (*(void (**)(void))(v77 + 16))();
        uint64_t v78 = String.init<A>(describing:)();
        unint64_t v80 = v79;
        swift_task_dealloc();
        *(void *)(v75 + 14) = sub_1000143F4(v78, v80, v176);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        v70(v174, v169);
      }
      else
      {
        sub_100409E00(v73, type metadata accessor for MediaAPIUpdates.App);
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();

        v70(v71, v72);
      }
      *(void *)(v0 + 1440) = 0;
      uint64_t v81 = *(uint64_t **)(v0 + 912);
      uint64_t v82 = v81[1];
      *(void *)(v0 + 1448) = v82;
      if (v82)
      {
        uint64_t v150 = *(void **)(v0 + 680);
        uint64_t v151 = *v81;
        uint64_t v153 = v150[23];
        uint64_t v152 = v150[24];
        uint64_t v154 = v150[25];
        uint64_t v155 = v150[28];
        swift_bridgeObjectRetain();
        uint64_t v156 = (void *)swift_task_alloc();
        *(void *)(v0 + 1456) = v156;
        *uint64_t v156 = v0;
        v156[1] = sub_100402944;
        uint64_t v157 = *(void *)(v0 + 752);
        uint64_t v158 = *(void *)(v0 + 728);
        __int16 v179 = 0;
        sub_1004FFCA8(v157, v158, v151, v82, v152, v153, v154, v155);
        return;
      }
      uint64_t v83 = *(void *)(v0 + 816);
      sub_100409E00((uint64_t)v81, type metadata accessor for MediaAPIUpdates.App);
      sub_100409E00(v83, type metadata accessor for MediaAPIApp);
      uint64_t v19 = 0;
      unint64_t v21 = 0;
      uint64_t v12 = *(void *)(v0 + 1304);
      unint64_t v20 = *(void *)(v0 + 1296) + 1;
    }
    while (v20 != *(void *)(v0 + 1280));
  }
LABEL_31:
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v84 = *(void *)(v0 + 1264);
  uint64_t v85 = *(void *)(v0 + 1256);
  if (*(void *)(v12 + 16))
  {
    sub_10056C034(v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10018AE44(v85, v84);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10018AE44(v85, v84);
  }
  uint64_t v86 = *(void *)(v0 + 1216);
  uint64_t v87 = *(void *)(v0 + 1208);
  if (v86 < v87)
  {
    uint64_t v88 = *(void *)(v0 + 1104);
    if (!*(unsigned char *)(v0 + 594)) {
      uint64_t v88 = 100;
    }
    unint64_t v89 = v86 + v88;
    if (__OFADD__(v86, v88)) {
      unint64_t v89 = ((v86 + v88) >> 63) ^ 0x8000000000000000;
    }
    *(void *)(v0 + 1216) = v89;
    BOOL v90 = __OFSUB__(v87, v86);
    uint64_t v91 = v87 - v86;
    if (v90) {
      goto LABEL_113;
    }
    if (v88 >= v91) {
      uint64_t v14 = v91;
    }
    else {
      uint64_t v14 = v88;
    }
    if (v14 < v86) {
      goto LABEL_114;
    }
    if (v86 < 0) {
      goto LABEL_115;
    }
    unint64_t v21 = *(void **)(v0 + 1152);
    uint64_t v92 = v21[2];
    if (v92 < (unint64_t)v86 || v92 < v14) {
      goto LABEL_116;
    }
    type metadata accessor for __ContiguousArrayStorageBase();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v93 = (void *)swift_dynamicCastClass();
    if (!v93)
    {
      swift_bridgeObjectRelease();
      uint64_t v93 = _swiftEmptyArrayStorage;
    }
    uint64_t v94 = v93[2];
    swift_release();
    unint64_t v21 = *(void **)(v0 + 1152);
    if (v94 != v14 - v86) {
      goto LABEL_117;
    }
    uint64_t v95 = (void *)swift_dynamicCastClass();
    if (!v95)
    {
      swift_bridgeObjectRelease();
      uint64_t v95 = _swiftEmptyArrayStorage;
    }
    goto LABEL_52;
  }
  char v175 = v21;
  uint64_t v86 = *(void *)(v0 + 1200);
  uint64_t v105 = *(void **)(v0 + 1176);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v0 + 1144);
  int64_t v108 = *(void *)(v0 + 1136);
  p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
  while (1)
  {
    if (v14)
    {
      unint64_t v110 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v111 = v110 | (v108 << 6);
      unint64_t v112 = *(uint64_t (**)())(v0 + 1128);
      goto LABEL_71;
    }
    BOOL v90 = __OFADD__(v108++, 1);
    if (v90) {
      goto LABEL_110;
    }
    int64_t v113 = (unint64_t)((1 << *(unsigned char *)(v0 + 595)) + 63) >> 6;
    unint64_t v112 = *(uint64_t (**)())(v0 + 1128);
    if (v108 >= v113)
    {
LABEL_95:
      swift_release();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v149 = *(void (**)(void))(v0 + 8);
      v149();
      return;
    }
    uint64_t v114 = (char *)v112 + 64;
    unint64_t v115 = *((void *)v112 + v108 + 8);
    if (!v115) {
      break;
    }
LABEL_70:
    uint64_t v14 = (v115 - 1) & v115;
    unint64_t v111 = __clz(__rbit64(v115)) + (v108 << 6);
LABEL_71:
    *(void *)(v0 + 1144) = v14;
    *(void *)(v0 + 1136) = v108;
    uint64_t v117 = *((void *)v112 + 6) + 16 * v111;
    uint64_t v118 = *(void *)v117;
    int v119 = *(unsigned __int8 *)(v117 + 8);
    uint64_t v12 = *(void *)(*((void *)v112 + 7) + 8 * v111);
    *(void *)(v0 + 1152) = v12;
    if (v119)
    {
      if (v119 != 1)
      {
        __break(1u);
        goto _swift_task_switch;
      }
      swift_bridgeObjectRetain();
      uint64_t v140 = 0;
      goto LABEL_91;
    }
    unint64_t v120 = *(void **)(v0 + 672);
    swift_bridgeObjectRetain();
    Class isa = UInt64._bridgeToObjectiveC()().super.super.isa;
    unint64_t v21 = objc_msgSend(v120, (SEL)p_base_prots[465], isa);

    if (!v21) {
      goto LABEL_87;
    }
    __int16 v122 = v21;
    id v123 = objc_msgSend(v122, "ams_storefront");
    if (v123)
    {
      char v124 = v123;
      char v172 = v122;
      uint64_t v167 = v21;
      uint64_t v168 = v14;
      int64_t v170 = v108;
      uint64_t v125 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v127 = v126;

      sub_10054F088(45, 0xE100000000000000, v125, v127);
      uint64_t v128 = String.subscript.getter();
      unint64_t v130 = v129;
      unint64_t v132 = v131;
      unint64_t v134 = v133;
      swift_bridgeObjectRelease();
      if ((v128 ^ v130) >> 14)
      {
        uint64_t v135 = v175;
        uint64_t v136 = sub_1004081A0(v128, v130, v132, v134, 10);
        if ((v137 & 0x100) != 0)
        {
          uint64_t v141 = sub_100446850(v128, v130, v132, v134, 10);
          char v143 = v142;
          swift_bridgeObjectRelease();
          uint64_t v140 = v172;

          if (v143)
          {
            p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
            uint64_t v14 = v168;
            int64_t v108 = v170;
LABEL_80:
            unint64_t v21 = v167;
            goto LABEL_87;
          }
          uint64_t v118 = v141;
LABEL_92:
          *(void *)(v0 + 1176) = v140;
          *(void *)(v0 + 1168) = v118;
          *(void *)(v0 + 1160) = v135;
          int64_t v148 = (void *)swift_task_alloc();
          *(void *)(v0 + 1184) = v148;
          *int64_t v148 = v0;
          v148[1] = sub_1003F9574;
          sub_100408DC4(v118);
          return;
        }
        char v138 = v137;
        uint64_t v139 = v136;
        swift_bridgeObjectRelease();
        uint64_t v140 = v172;

        p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
        uint64_t v14 = v168;
        int64_t v108 = v170;
        if (v138) {
          goto LABEL_80;
        }
        uint64_t v118 = v139;
LABEL_91:
        uint64_t v135 = v175;
        goto LABEL_92;
      }
      swift_bridgeObjectRelease();
      p_base_prots = &XPCClientRegistry.base_prots;
      uint64_t v14 = v168;
      int64_t v108 = v170;
      __int16 v122 = v172;
    }

LABEL_87:
    static Logger.updates.getter();
    swift_bridgeObjectRetain();
    uint64_t v86 = Logger.logObject.getter();
    os_log_type_t v144 = static os_log_type_t.error.getter();
    if (os_log_type_enabled((os_log_t)v86, v144))
    {
      uint64_t v145 = v14;
      uint64_t v146 = swift_slowAlloc();
      *(_DWORD *)uint64_t v146 = 134218241;
      uint64_t v147 = *(void *)(v12 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v146 + 4) = v147;
      swift_bridgeObjectRelease();
      *(_WORD *)(v146 + 12) = 2053;
      *(void *)(v146 + 14) = v118;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v86, v144, "Skipping %ld app(s), associated account %{sensitive}llu was not found or has no storefront", (uint8_t *)v146, 0x16u);
      uint64_t v14 = v145;
      p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(void, void))(v0 + 1112))(*(void *)(v0 + 992), *(void *)(v0 + 944));
  }
  int64_t v116 = v108 + 1;
  if (v108 + 1 >= v113) {
    goto LABEL_95;
  }
  unint64_t v115 = *(void *)&v114[8 * v116];
  if (v115) {
    goto LABEL_69;
  }
  int64_t v116 = v108 + 2;
  if (v108 + 2 >= v113) {
    goto LABEL_95;
  }
  unint64_t v115 = *(void *)&v114[8 * v116];
  if (v115) {
    goto LABEL_69;
  }
  int64_t v116 = v108 + 3;
  if (v108 + 3 >= v113) {
    goto LABEL_95;
  }
  unint64_t v115 = *(void *)&v114[8 * v116];
  if (v115)
  {
LABEL_69:
    int64_t v108 = v116;
    goto LABEL_70;
  }
  while (1)
  {
    int64_t v108 = v116 + 1;
    if (__OFADD__(v116, 1)) {
      break;
    }
    if (v108 >= v113) {
      goto LABEL_95;
    }
    unint64_t v115 = *(void *)&v114[8 * v108];
    ++v116;
    if (v115) {
      goto LABEL_70;
    }
  }
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
LABEL_115:
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  unint64_t v164 = (2 * v14) | 1;
  uint64_t v165 = *(void *)(v0 + 880);
  swift_bridgeObjectRelease();
  uint64_t v95 = sub_1004FDAD0((uint64_t)v21, (uint64_t)v21 + ((*(unsigned __int8 *)(v165 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v165 + 80)), v86, v164);
LABEL_52:
  *(void *)(v0 + 1224) = v95;
  uint64_t v96 = *(void *)(v0 + 1200);
  unint64_t v97 = *(void **)(v0 + 1176);
  swift_bridgeObjectRelease();
  id v98 = v97;
  uint64_t v99 = (void *)swift_task_alloc();
  *(void *)(v0 + 1232) = v99;
  void *v99 = v0;
  v99[1] = sub_1003F9F78;
  uint64_t v100 = *(void *)(v0 + 1192);
  uint64_t v101 = *(void *)(v0 + 1176);
  uint64_t v102 = *(void *)(v0 + 664);
  uint64_t v103 = *(void *)(v0 + 656);
  uint64_t v104 = *(void *)(v0 + 648);
  sub_1004047E8((uint64_t)v95, v101, v100, v96, v104, v103, v102);
}

uint64_t sub_100403DB8()
{
  char v1 = *(void **)(v0 + 1080);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100403FB0()
{
  swift_errorRelease();
  uint64_t v3 = *(void *)(v1 + 1216);
  uint64_t v4 = *(void *)(v1 + 1208);
  if (v3 < v4)
  {
    uint64_t v5 = *(void *)(v1 + 1104);
    if (!*(unsigned char *)(v1 + 594)) {
      uint64_t v5 = 100;
    }
    unint64_t v6 = v3 + v5;
    if (__OFADD__(v3, v5)) {
      unint64_t v6 = ((v3 + v5) >> 63) ^ 0x8000000000000000;
    }
    *(void *)(v1 + 1216) = v6;
    BOOL v7 = __OFSUB__(v4, v3);
    int64_t v8 = v4 - v3;
    if (v7)
    {
LABEL_69:
      __break(1u);
    }
    else
    {
      if (v5 >= v8) {
        int64_t v2 = v8;
      }
      else {
        int64_t v2 = v5;
      }
      if (v2 >= v3)
      {
        if ((v3 & 0x8000000000000000) == 0)
        {
          uint64_t v0 = *(void **)(v1 + 1152);
          int64_t v9 = v0[2];
          if (v9 >= (unint64_t)v3 && v9 >= v2)
          {
            type metadata accessor for __ContiguousArrayStorageBase();
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain_n();
            uint64_t v11 = (void *)swift_dynamicCastClass();
            if (!v11)
            {
              swift_bridgeObjectRelease();
              uint64_t v11 = _swiftEmptyArrayStorage;
            }
            uint64_t v12 = v11[2];
            swift_release();
            uint64_t v0 = *(void **)(v1 + 1152);
            if (v12 == v2 - v3)
            {
              unint64_t v13 = (void *)swift_dynamicCastClass();
              if (!v13)
              {
                swift_bridgeObjectRelease();
                unint64_t v13 = _swiftEmptyArrayStorage;
              }
              goto LABEL_21;
            }
LABEL_73:
            unint64_t v67 = (2 * v2) | 1;
            uint64_t v68 = *(void *)(v1 + 880);
            swift_bridgeObjectRelease();
            unint64_t v13 = sub_1004FDAD0((uint64_t)v0, (uint64_t)v0+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80)), v3, v67);
LABEL_21:
            *(void *)(v1 + 1224) = v13;
            uint64_t v14 = *(void *)(v1 + 1200);
            uint64_t v15 = *(void **)(v1 + 1176);
            swift_bridgeObjectRelease();
            id v16 = v15;
            uint64_t v17 = (void *)swift_task_alloc();
            *(void *)(v1 + 1232) = v17;
            *uint64_t v17 = v1;
            v17[1] = sub_1003F9F78;
            uint64_t v18 = *(void *)(v1 + 1192);
            uint64_t v19 = *(void *)(v1 + 1176);
            uint64_t v20 = *(void *)(v1 + 664);
            uint64_t v21 = *(void *)(v1 + 656);
            uint64_t v22 = *(void *)(v1 + 648);
            return sub_1004047E8((uint64_t)v13, v19, v18, v14, v22, v21, v20);
          }
LABEL_72:
          __break(1u);
          goto LABEL_73;
        }
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
    }
    __break(1u);
    goto LABEL_71;
  }
  uint64_t v3 = *(void *)(v1 + 1200);
  uint64_t v24 = *(void **)(v1 + 1176);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  int64_t v2 = *(void *)(v1 + 1144);
  int64_t v25 = *(void *)(v1 + 1136);
  p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
  uint64_t v69 = v1;
  while (1)
  {
    if (v2)
    {
      unint64_t v27 = __clz(__rbit64(v2));
      v2 &= v2 - 1;
      unint64_t v28 = v27 | (v25 << 6);
      uint64_t result = *(void *)(v1 + 1128);
    }
    else
    {
      BOOL v7 = __OFADD__(v25++, 1);
      if (v7)
      {
        __break(1u);
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      int64_t v29 = (unint64_t)((1 << *(unsigned char *)(v1 + 595)) + 63) >> 6;
      uint64_t result = *(void *)(v1 + 1128);
      if (v25 >= v29) {
        goto LABEL_62;
      }
      uint64_t v30 = result + 64;
      unint64_t v31 = *(void *)(result + 64 + 8 * v25);
      if (!v31)
      {
        int64_t v32 = v25 + 1;
        if (v25 + 1 >= v29) {
          goto LABEL_62;
        }
        unint64_t v31 = *(void *)(v30 + 8 * v32);
        if (!v31)
        {
          int64_t v32 = v25 + 2;
          if (v25 + 2 >= v29) {
            goto LABEL_62;
          }
          unint64_t v31 = *(void *)(v30 + 8 * v32);
          if (!v31)
          {
            int64_t v32 = v25 + 3;
            if (v25 + 3 >= v29)
            {
LABEL_62:
              swift_release();
              swift_bridgeObjectRelease();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              uint64_t v66 = *(uint64_t (**)(void))(v1 + 8);
              return v66();
            }
            unint64_t v31 = *(void *)(v30 + 8 * v32);
            if (!v31)
            {
              while (1)
              {
                int64_t v25 = v32 + 1;
                if (__OFADD__(v32, 1)) {
                  goto LABEL_68;
                }
                if (v25 >= v29) {
                  goto LABEL_62;
                }
                unint64_t v31 = *(void *)(v30 + 8 * v25);
                ++v32;
                if (v31) {
                  goto LABEL_39;
                }
              }
            }
          }
        }
        int64_t v25 = v32;
      }
LABEL_39:
      int64_t v2 = (v31 - 1) & v31;
      unint64_t v28 = __clz(__rbit64(v31)) + (v25 << 6);
    }
    *(void *)(v1 + 1144) = v2;
    *(void *)(v1 + 1136) = v25;
    uint64_t v33 = *(void *)(result + 48) + 16 * v28;
    uint64_t v34 = *(void *)v33;
    int v35 = *(unsigned __int8 *)(v33 + 8);
    uint64_t v36 = *(void *)(*(void *)(result + 56) + 8 * v28);
    *(void *)(v1 + 1152) = v36;
    if (v35)
    {
      if (v35 == 1)
      {
        swift_bridgeObjectRetain();
        uint64_t v56 = 0;
        goto LABEL_59;
      }
      __break(1u);
      return result;
    }
    uint64_t v37 = *(void **)(v1 + 672);
    swift_bridgeObjectRetain();
    Class isa = UInt64._bridgeToObjectiveC()().super.super.isa;
    uint64_t v0 = objc_msgSend(v37, (SEL)p_base_prots[465], isa);

    if (v0) {
      break;
    }
LABEL_55:
    static Logger.updates.getter();
    swift_bridgeObjectRetain();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v60 = static os_log_type_t.error.getter();
    if (os_log_type_enabled((os_log_t)v3, v60))
    {
      uint64_t v61 = p_base_prots;
      int64_t v62 = v2;
      uint64_t v63 = swift_slowAlloc();
      *(_DWORD *)uint64_t v63 = 134218241;
      uint64_t v64 = *(void *)(v36 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v63 + 4) = v64;
      swift_bridgeObjectRelease();
      *(_WORD *)(v63 + 12) = 2053;
      *(void *)(v63 + 14) = v34;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v3, v60, "Skipping %ld app(s), associated account %{sensitive}llu was not found or has no storefront", (uint8_t *)v63, 0x16u);
      int64_t v2 = v62;
      p_base_prots = v61;
      uint64_t v1 = v69;
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(void, void))(v1 + 1112))(*(void *)(v1 + 992), *(void *)(v1 + 944));
  }
  uint64_t v39 = v0;
  id v40 = objc_msgSend(v39, "ams_storefront");
  if (!v40) {
    goto LABEL_54;
  }
  uint64_t v41 = v40;
  uint64_t v72 = v39;
  int64_t v70 = v2;
  int64_t v71 = v25;
  uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v44 = v43;

  sub_10054F088(45, 0xE100000000000000, v42, v44);
  uint64_t v45 = String.subscript.getter();
  unint64_t v47 = v46;
  unint64_t v49 = v48;
  unint64_t v51 = v50;
  swift_bridgeObjectRelease();
  if (!((v45 ^ v47) >> 14))
  {
    swift_bridgeObjectRelease();
    p_base_prots = &XPCClientRegistry.base_prots;
    int64_t v2 = v70;
    int64_t v25 = v71;
    uint64_t v39 = v72;
LABEL_54:

    goto LABEL_55;
  }
  uint64_t v52 = sub_1004081A0(v45, v47, v49, v51, 10);
  if ((v53 & 0x100) == 0)
  {
    uint64_t v54 = v52;
    char v55 = v53;
    swift_bridgeObjectRelease();
    uint64_t v56 = v72;

    int64_t v2 = v70;
    int64_t v25 = v71;
    if ((v55 & 1) == 0)
    {
      uint64_t v34 = v54;
      goto LABEL_59;
    }
    p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
    goto LABEL_55;
  }
  uint64_t v57 = sub_100446850(v45, v47, v49, v51, 10);
  char v59 = v58;
  swift_bridgeObjectRelease();

  if (v59)
  {
    p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
    int64_t v2 = v70;
    int64_t v25 = v71;
    goto LABEL_55;
  }
  uint64_t v34 = v57;
  uint64_t v56 = v72;
LABEL_59:
  *(void *)(v1 + 1176) = v56;
  *(void *)(v1 + 1168) = v34;
  *(void *)(v1 + 1160) = 0;
  uint64_t v65 = (void *)swift_task_alloc();
  *(void *)(v1 + 1184) = v65;
  *uint64_t v65 = v1;
  v65[1] = sub_1003F9574;
  return sub_100408DC4(v34);
}

uint64_t sub_1004047E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[50] = a6;
  v7[51] = a7;
  v7[48] = a4;
  v7[49] = a5;
  v7[46] = a2;
  v7[47] = a3;
  v7[45] = a1;
  uint64_t v8 = sub_1000172F8(&qword_1006628A0);
  v7[52] = v8;
  v7[53] = *(void *)(v8 - 8);
  v7[54] = swift_task_alloc();
  uint64_t v9 = sub_1000172F8(&qword_1006628A8);
  v7[55] = v9;
  v7[56] = *(void *)(v9 - 8);
  v7[57] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for URLRequest();
  v7[58] = v10;
  v7[59] = *(void *)(v10 - 8);
  v7[60] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for URL();
  v7[61] = v11;
  v7[62] = *(void *)(v11 - 8);
  v7[63] = swift_task_alloc();
  return _swift_task_switch(sub_1004049D0, 0, 0);
}

uint64_t sub_1004049D0()
{
  uint64_t v1 = *(void *)(v0 + 400);
  int64_t v2 = *(void **)(v0 + 368);
  id v3 = [objc_allocWithZone((Class)AMSURLSession) init];
  *(void *)(v0 + 512) = v3;
  sub_10018B1DC(0, &qword_1006628B0);
  swift_getObjectType();
  swift_unknownObjectRetain();
  id v4 = sub_100408298(0xD000000000000013, 0x80000001005BF490, v1);
  *(void *)(v0 + 520) = v4;
  [v4 setAccount:v2];
  [v4 setSession:v3];
  id v5 = [objc_allocWithZone((Class)AMSMediaProtocolHandler) initWithTokenService:v4];
  [v3 setProtocolHandler:v5];

  id v6 = [objc_allocWithZone((Class)AMSMediaResponseDecoder) init];
  [v3 setResponseDecoder:v6];

  sub_10018B1DC(0, &qword_1006628B8);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  swift_unknownObjectRetain();
  id v8 = v4;
  id v9 = [objc_allocWithZone(ObjCClassFromMetadata) initWithTokenService:v8 bag:v1];
  *(void *)(v0 + 528) = v9;
  swift_unknownObjectRelease();

  if (!v2) {
    goto LABEL_4;
  }
  id v10 = v2;
  [v9 setAccount:v10];
  uint64_t v11 = sub_10050E988(v10, 11);
  if (v12 >> 60 == 15)
  {

LABEL_4:
    uint64_t countAndFlagsBits = 0;
    object = 0;
    goto LABEL_6;
  }
  uint64_t v15 = v11;
  unint64_t v16 = v12;
  Swift::String v17 = Data.base64EncodedString(options:)(0);
  uint64_t countAndFlagsBits = v17._countAndFlagsBits;
  object = v17._object;
  sub_10018AE44(v15, v16);

LABEL_6:
  *(void *)(v0 + 544) = object;
  *(void *)(v0 + 536) = countAndFlagsBits;
  uint64_t v19 = *(void *)(v0 + 448);
  uint64_t v18 = *(void *)(v0 + 456);
  uint64_t v20 = *(void *)(v0 + 440);
  sub_100405904(*(void *)(v0 + 376), *(void **)(v0 + 384), *(void *)(v0 + 392), *(void *)(v0 + 504));
  URL._bridgeToObjectiveC()(v21);
  unint64_t v23 = v22;
  id v24 = [v9 requestWithURL:v22];
  *(void *)(v0 + 552) = v24;

  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 344;
  *(void *)(v0 + 24) = sub_100404DC4;
  swift_continuation_init();
  *(void *)(v0 + 200) = v20;
  int64_t v25 = sub_10019CE94((uint64_t *)(v0 + 176));
  sub_10018B1DC(0, &qword_1006628C0);
  *(void *)(v0 + 560) = sub_1000172F8(&qword_10065B260);
  CheckedContinuation.init(continuation:function:)();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v19 + 32))(v25, v18, v20);
  *(void *)(v0 + 144) = _NSConcreteStackBlock;
  *(void *)(v0 + 152) = 1107296256;
  *(void *)(v0 + 160) = sub_100405C14;
  *(void *)(v0 + 168) = &unk_1006459D8;
  [v24 resultWithCompletion:v0 + 144];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_100404DC4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 568) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    int64_t v2 = sub_1004056E8;
  }
  else
  {
    int64_t v2 = sub_100404EDC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100404EDC()
{
  uint64_t v1 = (void *)v0[69];
  uint64_t v2 = v0[68];
  uint64_t v3 = v0[67];
  uint64_t v4 = v0[45];
  id v5 = (void *)v0[43];
  static URLRequest._unconditionallyBridgeFromObjectiveC(_:)();

  URLRequest.httpMethod.setter();
  v6.value._object = (void *)0x80000001005BE4E0;
  v6.value._uint64_t countAndFlagsBits = 0xD000000000000010;
  v7._uint64_t countAndFlagsBits = 0x2D746E65746E6F43;
  v7._object = (void *)0xEC00000065707954;
  URLRequest.setValue(_:forHTTPHeaderField:)(v6, v7);
  id v8 = self;
  swift_bridgeObjectRetain();
  id v9 = [v8 deviceGUID];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  v0[34] = v4;
  v0[35] = v10;
  v0[36] = v12;
  v0[37] = v3;
  v0[38] = v2;
  sub_10040C330();
  dispatch thunk of JSONEncoder.encode<A>(_:)();
  v0[72] = 0;
  uint64_t v13 = (void *)v0[64];
  uint64_t v14 = v0[53];
  uint64_t v19 = v0[52];
  uint64_t v20 = v0[54];
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  URLRequest.httpBody.setter();
  Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
  id v16 = [v13 dataTaskPromiseWithRequest:isa];
  v0[73] = v16;

  v0[10] = v0;
  v0[15] = v0 + 44;
  v0[11] = sub_10040530C;
  swift_continuation_init();
  v0[33] = v19;
  Swift::String v17 = sub_10019CE94(v0 + 30);
  sub_10018B1DC(0, &qword_1006628D0);
  CheckedContinuation.init(continuation:function:)();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 32))(v17, v20, v19);
  v0[26] = _NSConcreteStackBlock;
  v0[27] = 1107296256;
  v0[28] = sub_1003F722C;
  v0[29] = &unk_100645A00;
  objc_msgSend(v16, "resultWithCompletion:");
  return _swift_continuation_await(v0 + 10);
}

uint64_t sub_10040530C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 592) = v1;
  if (v1) {
    uint64_t v2 = sub_1004057E0;
  }
  else {
    uint64_t v2 = sub_10040541C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10040541C()
{
  uint64_t v1 = *(void *)(v0 + 576);
  uint64_t v2 = *(void **)(v0 + 352);

  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  id v3 = [v2 data];
  uint64_t v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  sub_10040C384();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  Swift::String v7 = *(void **)(v0 + 528);
  id v8 = *(void **)(v0 + 520);
  if (v1)
  {
    id v9 = v2;
    uint64_t v10 = *(void *)(v0 + 496);
    id v29 = *(id *)(v0 + 488);
    uint64_t v31 = *(void *)(v0 + 504);
    uint64_t v27 = *(void *)(v0 + 480);
    uint64_t v11 = *(void **)(v0 + 520);
    uint64_t v13 = *(void *)(v0 + 464);
    uint64_t v12 = *(void *)(v0 + 472);
    sub_100013510(v4, v6);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v27, v13);
    (*(void (**)(uint64_t, id))(v10 + 8))(v31, v29);
    uint64_t v14 = *(void **)(v0 + 512);
    [v14 finishTasksAndInvalidate];

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 496);
    uint64_t v28 = *(void *)(v0 + 504);
    id v30 = *(id *)(v0 + 512);
    uint64_t v18 = *(void *)(v0 + 472);
    uint64_t v25 = *(void *)(v0 + 480);
    uint64_t v26 = *(void *)(v0 + 488);
    uint64_t v19 = *(void *)(v0 + 464);
    sub_100013510(v4, v6);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v25, v19);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v28, v26);
    uint64_t v21 = *(void *)(v0 + 312);
    uint64_t v20 = *(void *)(v0 + 320);
    uint64_t v22 = *(void *)(v0 + 328);
    uint64_t v23 = *(void *)(v0 + 336);
    [v30 finishTasksAndInvalidate];

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8);
    return v24(v21, v20, v22, v23);
  }
}

uint64_t sub_1004056E8()
{
  uint64_t v1 = (void *)v0[69];
  uint64_t v2 = (void *)v0[66];
  id v3 = (void *)v0[65];
  uint64_t v5 = v0[62];
  uint64_t v4 = v0[63];
  uint64_t v6 = v0[61];
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  Swift::String v7 = (void *)v0[64];
  [v7 finishTasksAndInvalidate];

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1004057E0()
{
  uint64_t v12 = (void *)v0[73];
  uint64_t v1 = (void *)v0[66];
  uint64_t v2 = (void *)v0[65];
  uint64_t v4 = v0[62];
  uint64_t v3 = v0[63];
  uint64_t v6 = v0[60];
  uint64_t v5 = v0[61];
  uint64_t v7 = v0[58];
  uint64_t v8 = v0[59];
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);

  id v9 = (void *)v0[64];
  [v9 finishTasksAndInvalidate];

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100405904@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v28 = a4;
  uint64_t v7 = sub_1000172F8(&qword_10065C3C0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v27 - v11;
  if (*(void *)(a3 + 16) && (unint64_t v13 = sub_100016D20(0xD000000000000016, 0x80000001005BA6D0), (v14 & 1) != 0)) {
    sub_1000144C8(*(void *)(a3 + 56) + 32 * v13, (uint64_t)v29);
  }
  else {
    memset(v29, 0, sizeof(v29));
  }
  sub_1000172F8((uint64_t *)&unk_10065C9C0);
  int v15 = swift_dynamicCast();
  uint64_t v16 = v30;
  uint64_t v17 = v31;
  if (!v15)
  {
    uint64_t v17 = 0;
    uint64_t v16 = 0;
  }
  if (v17) {
    uint64_t v18 = v16;
  }
  else {
    uint64_t v18 = 0xD000000000000016;
  }
  if (v17) {
    uint64_t v19 = v17;
  }
  else {
    uint64_t v19 = 0x80000001005BA830;
  }
  *(void *)&v29[0] = 0;
  *((void *)&v29[0] + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  strcpy((char *)v29, "/v1/catalog/");
  BYTE13(v29[0]) = 0;
  HIWORD(v29[0]) = -5120;
  v20._uint64_t countAndFlagsBits = a1;
  v20._object = a2;
  String.append(_:)(v20);
  v21._uint64_t countAndFlagsBits = 0x736574616470752FLL;
  v21._object = (void *)0xE800000000000000;
  String.append(_:)(v21);
  sub_100405C20();
  sub_1004CFE38(v18, v19, (uint64_t)v10);
  uint64_t v22 = type metadata accessor for URL();
  uint64_t v23 = *(void *)(v22 - 8);
  id v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v24(v10, 1, v22))
  {
    sub_10001729C((uint64_t)v10, &qword_10065C3C0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v12, 1, 1, v22);
  }
  else
  {
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v25(v12, v10, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v12, 0, 1, v22);
    uint64_t result = v24(v12, 1, v22);
    if (result != 1) {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v25)(v28, v12, v22);
    }
  }
  __break(1u);
  return result;
}

void sub_100405C14(uint64_t a1, void *a2, void *a3)
{
}

uint64_t sub_100405C20()
{
  uint64_t v0 = type metadata accessor for URLQueryItem();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  id v24 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v23 = (char *)&v21 - v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v22 = (char *)&v21 - v9;
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  URLQueryItem.init(name:value:)();
  URLQueryItem.init(name:value:)();
  uint64_t v11 = sub_1003F6E04((uint64_t)&off_100638528);
  uint64_t v12 = sub_1003F7048((uint64_t)&off_100638558);
  uint64_t v25 = v11;
  sub_100555B18((uint64_t)v12);
  sub_1000172F8((uint64_t *)&unk_10065C5D0);
  sub_10017B8C8();
  BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  sub_1000172F8(&qword_100663AB0);
  uint64_t v13 = *(void *)(v1 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1005A3FC0;
  unint64_t v16 = v15 + v14;
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v1 + 16);
  v17(v16, v10, v0);
  uint64_t v18 = v23;
  v17(v16 + v13, v23, v0);
  v17(v16 + 2 * v13, v6, v0);
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v16 + 3 * v13, v24, v0);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v1 + 8);
  v19(v6, v0);
  v19(v18, v0);
  v19(v22, v0);
  return v15;
}

uint64_t sub_100405FA0(void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = dispatch thunk of CustomStringConvertible.description.getter();
  unint64_t v4 = v3;
  uint64_t v5 = dispatch thunk of CustomStringConvertible.description.getter();
  sub_1002E6DE4(0, v2, v4, v5, v6, v1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100406068@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1000144C8(a1, (uint64_t)&v4);
  sub_10018B1DC(0, &qword_100662928);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    *a2 = 0;
  }
  return result;
}

uint64_t sub_1004060D8(id *a1)
{
  id v1 = *a1;
  if ([*a1 isPlaceholder]) {
    return 0;
  }
  if ([v1 isBeta]) {
    return 0;
  }
  if ([v1 isProfileValidated]) {
    return 0;
  }
  if ([v1 applicationMissingRequiredSINF]) {
    return 0;
  }
  id v2 = [v1 iTunesMetadata];
  id v3 = [v2 storeItemIdentifier];

  if (!v3) {
    return 0;
  }
  uint64_t result = (uint64_t)sub_1004FBD68();
  if (!result) {
    return result;
  }
  uint64_t v5 = (void *)result;
  id v6 = [(id)result managementDeclarationIdentifier];

  if (!v6) {
    return 0;
  }

  return 1;
}

void sub_1004061C0(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1000172F8(&qword_10065C3C0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [a1 bundleIdentifier];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v13 = 0;
  }
  *a3 = v11;
  a3[1] = v13;
  id v14 = [a1 bundleContainerURL];
  if (v14)
  {
    uint64_t v15 = v14;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v16 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 0, 1, v16);
  }
  else
  {
    uint64_t v17 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
  }
  uint64_t v18 = (int *)type metadata accessor for MediaAPIUpdates.App(0);
  sub_10001733C((uint64_t)v8, (uint64_t)a3 + v18[5], &qword_10065C3C0);
  id v19 = [a1 applicationDSID];
  Swift::String v20 = (char *)a3 + v18[7];
  *(void *)Swift::String v20 = v19;
  v20[8] = v19 == 0;
  id v21 = [a1 applicationDownloaderDSID];
  uint64_t v22 = (char *)a3 + v18[6];
  *(void *)uint64_t v22 = v21;
  v22[8] = v21 == 0;
  id v23 = [a1 managedPersonas];
  if (!v23) {
    goto LABEL_11;
  }
  id v24 = v23;
  uint64_t v25 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!v25[2])
  {
    swift_bridgeObjectRelease();
LABEL_11:
    id v29 = (uint64_t *)((char *)a3 + v18[8]);
    *id v29 = 0;
    v29[1] = 0;
    goto LABEL_12;
  }
  uint64_t v27 = v25[4];
  uint64_t v26 = v25[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = (uint64_t *)((char *)a3 + v18[8]);
  void *v28 = v27;
  v28[1] = v26;
LABEL_12:
  *((unsigned char *)a3 + v18[9]) = [a1 applicationHasMIDBasedSINF];
  id v30 = [a1 iTunesMetadata];
  id v31 = [v30 storeItemIdentifier];

  *(uint64_t *)((char *)a3 + v18[10]) = (uint64_t)v31;
  id v32 = [a1 iTunesMetadata];
  id v33 = [v32 versionIdentifier];

  *(uint64_t *)((char *)a3 + v18[11]) = (uint64_t)v33;
  id v34 = [a1 iTunesMetadata];
  id v35 = [v34 storeFront];

  *(uint64_t *)((char *)a3 + v18[12]) = (uint64_t)v35;
  *(uint64_t *)((char *)a3 + v18[13]) = a2;
}

uint64_t sub_1004064D4(char *a1, char *a2)
{
  return sub_10051CC30(*a1, *a2);
}

Swift::Int sub_1004064E0()
{
  return Hasher._finalize()();
}

uint64_t sub_100406550()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1004065AC()
{
  return Hasher._finalize()();
}

uint64_t sub_100406618@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100639458, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100406678(uint64_t *a1@<X8>)
{
  uint64_t v2 = 25705;
  if (*v1) {
    uint64_t v2 = 1717924456;
  }
  unint64_t v3 = 0xE200000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1004066A4()
{
  if (*v0) {
    return 1717924456;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1004066CC@<X0>(Swift::String string@<0:X0, 8:X1>, char *a2@<X8>)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100639458, v3);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_100406730(uint64_t a1)
{
  unint64_t v2 = sub_10040EFF8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10040676C(uint64_t a1)
{
  unint64_t v2 = sub_10040EFF8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004067A8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10040E11C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

Swift::Int sub_1004067D8()
{
  return Hasher._finalize()();
}

uint64_t sub_10040682C()
{
  return String.hash(into:)();
}

Swift::Int sub_100406844()
{
  return Hasher._finalize()();
}

uint64_t sub_100406894@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100639510, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3 != 0;
  return result;
}

void sub_1004068E8(void *a1@<X8>)
{
  *a1 = 0x73746C75736572;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_100406904()
{
  return 0x73746C75736572;
}

uint64_t sub_10040691C@<X0>(Swift::String string@<0:X0, 8:X1>, BOOL *a2@<X8>)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100639548, v3);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

uint64_t sub_100406974(uint64_t a1)
{
  unint64_t v2 = sub_10040E9EC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004069B0(uint64_t a1)
{
  unint64_t v2 = sub_10040E9EC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004069EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10051CB30(*a1, *a2);
}

Swift::Int sub_1004069F8()
{
  return sub_10040F8E8();
}

uint64_t sub_100406A00()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100406A90()
{
  return sub_10044AE5C();
}

unint64_t sub_100406A98@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1006394A8;
  unint64_t result = sub_10040E8AC(*a1, v3);
  *a2 = result;
  return result;
}

void sub_100406AD0(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0xD00000000000001CLL;
  unint64_t v4 = 0x80000001005B7FD0;
  if (*v1 != 1)
  {
    unint64_t v3 = 0x67616279656BLL;
    unint64_t v4 = 0xE600000000000000;
  }
  if (*v1)
  {
    unint64_t v2 = v3;
    unint64_t v5 = v4;
  }
  else
  {
    unint64_t v5 = 0x80000001005B7FB0;
  }
  *a1 = v2;
  a1[1] = v5;
}

unint64_t sub_100406B30()
{
  unint64_t v1 = 0xD00000000000001CLL;
  if (*v0 != 1) {
    unint64_t v1 = 0x67616279656BLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000010;
  }
}

unint64_t sub_100406B8C@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1006394A8;
  unint64_t result = sub_10040E8AC(a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_100406BBC(uint64_t a1)
{
  unint64_t v2 = sub_10040EA40();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100406BF8(uint64_t a1)
{
  unint64_t v2 = sub_10040EA40();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100406C34(uint64_t a1)
{
  __chkstk_darwin(a1);
  uint64_t v2 = Array.init()();
  if ((dispatch thunk of UnkeyedDecodingContainer.isAtEnd.getter() & 1) == 0)
  {
    while (1)
    {
      dispatch thunk of UnkeyedDecodingContainer.decode<A>(_:)();
      if (v1) {
        break;
      }
      type metadata accessor for Array();
      Array.append(_:)();
      if (dispatch thunk of UnkeyedDecodingContainer.isAtEnd.getter()) {
        return v2;
      }
    }
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_100406D60(void *a1)
{
  Swift::OpaquePointer v3 = v1;
  uint64_t v5 = sub_1000172F8(&qword_100662A98);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10018AC60(a1, a1[3]);
  sub_10040E8F4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v11 = *v3;
  v10[7] = 0;
  sub_1000172F8(&qword_100662AA8);
  sub_10040E948();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    v10[6] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v10[5] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100406F0C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10040E324(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

Swift::Int sub_100406F3C()
{
  Swift::UInt64 v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  Hasher.init(_seed:)();
  if (v2)
  {
    if (v2 != 1)
    {
      Hasher._combine(_:)(2uLL);
      return Hasher._finalize()();
    }
    Swift::UInt v3 = 1;
  }
  else
  {
    Swift::UInt v3 = 0;
  }
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100406FBC()
{
  Swift::UInt64 v1 = *(void *)v0;
  if (!*(unsigned char *)(v0 + 8))
  {
    Swift::UInt v2 = 0;
    goto LABEL_5;
  }
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    Swift::UInt v2 = 1;
LABEL_5:
    Hasher._combine(_:)(v2);
    Hasher._combine(_:)(v1);
    return;
  }
  Hasher._combine(_:)(2uLL);
}

Swift::Int sub_100407018()
{
  Swift::UInt64 v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  Hasher.init(_seed:)();
  if (v2)
  {
    if (v2 != 1)
    {
      Hasher._combine(_:)(2uLL);
      return Hasher._finalize()();
    }
    Swift::UInt v3 = 1;
  }
  else
  {
    Swift::UInt v3 = 0;
  }
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_100407094(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  int v4 = *((unsigned __int8 *)a2 + 8);
  if (*((unsigned char *)a2 + 8)) {
    BOOL v5 = 0;
  }
  else {
    BOOL v5 = v2 == v3;
  }
  unsigned int v6 = v5;
  BOOL v8 = v4 == 1 && v2 == v3;
  BOOL v10 = v4 == 2 && v3 == 0;
  if (*((unsigned char *)a1 + 8) != 1) {
    BOOL v8 = v10;
  }
  if (*((unsigned char *)a1 + 8)) {
    return v8;
  }
  else {
    return v6;
  }
}

uint64_t sub_1004070DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10051CCC4(*a1, *a2);
}

Swift::Int sub_1004070E8()
{
  return Hasher._finalize()();
}

uint64_t sub_100407178()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1004071F4()
{
  return Hasher._finalize()();
}

unint64_t sub_100407280@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100639580;
  unint64_t result = sub_10040E8AC(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1004072B8(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1684632935;
  if (v2 != 1)
  {
    uint64_t v5 = 0x636E7973626BLL;
    unint64_t v4 = 0xE600000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1635017060;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_100407304()
{
  uint64_t v1 = 1684632935;
  if (*v0 != 1) {
    uint64_t v1 = 0x636E7973626BLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1635017060;
  }
}

unint64_t sub_10040734C@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100639580;
  unint64_t result = sub_10040E8AC(a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_10040737C(uint64_t a1)
{
  unint64_t v2 = sub_10040E8F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004073B8(uint64_t a1)
{
  unint64_t v2 = sub_10040E8F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004073F4(void *a1)
{
  return sub_100406D60(a1);
}

id sub_100407430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  char v55 = a3;
  uint64_t v5 = type metadata accessor for URL.DirectoryHint();
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  __chkstk_darwin(v5);
  unint64_t v51 = &v44[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v50 = &v44[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  unint64_t v48 = &v44[-v11];
  uint64_t v12 = sub_1000172F8(&qword_100662898);
  __chkstk_darwin(v12);
  id v14 = &v44[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_1000172F8(&qword_10065C3C0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = &v44[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __chkstk_darwin(v16);
  id v21 = &v44[-v20];
  __chkstk_darwin(v19);
  id v23 = &v44[-v22];
  uint64_t v49 = *(int *)(type metadata accessor for MediaAPIUpdates.MetadataLoader.Storage(0) + 20);
  id v58 = *(id *)(a1 + v49);
  if (v58)
  {
    uint64_t v47 = a1;
    sub_100017238(a1, (uint64_t)v23, &qword_10065C3C0);
    id v24 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v46 = a2;
    v24(v21, a2, v7);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
    uint64_t v25 = (uint64_t)&v14[*(int *)(v12 + 48)];
    sub_100017238((uint64_t)v23, (uint64_t)v14, &qword_10065C3C0);
    sub_100017238((uint64_t)v21, v25, &qword_10065C3C0);
    uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (v26((uint64_t)v14, 1, v7) == 1)
    {
      id v27 = v58;
      sub_10001729C((uint64_t)v21, &qword_10065C3C0);
      sub_10001729C((uint64_t)v23, &qword_10065C3C0);
      int v28 = v26(v25, 1, v7);
      id v29 = v55;
      if (v28 == 1)
      {
        id result = (id)sub_10001729C((uint64_t)v14, &qword_10065C3C0);
LABEL_9:
        *id v29 = v58;
        return result;
      }
    }
    else
    {
      sub_100017238((uint64_t)v14, (uint64_t)v18, &qword_10065C3C0);
      if (v26(v25, 1, v7) != 1)
      {
        id v32 = v48;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 32))(v48, v25, v7);
        sub_10040C260((unint64_t *)&unk_100663D20, (void (*)(uint64_t))&type metadata accessor for URL);
        id v33 = v58;
        int v45 = dispatch thunk of static Equatable.== infix(_:_:)();
        id v34 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
        v34(v32, v7);
        sub_10001729C((uint64_t)v21, &qword_10065C3C0);
        sub_10001729C((uint64_t)v23, &qword_10065C3C0);
        v34(v18, v7);
        id result = (id)sub_10001729C((uint64_t)v14, &qword_10065C3C0);
        id v29 = v55;
        if (v45) {
          goto LABEL_9;
        }
        goto LABEL_10;
      }
      id v31 = v58;
      sub_10001729C((uint64_t)v21, &qword_10065C3C0);
      sub_10001729C((uint64_t)v23, &qword_10065C3C0);
      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v18, v7);
    }
    sub_10001729C((uint64_t)v14, &qword_100662898);
LABEL_10:

    a2 = v46;
    a1 = v47;
  }
  sub_10001729C(a1, &qword_10065C3C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, a2, v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  sub_10018B1DC(0, (unint64_t *)&qword_10065DC30);
  unint64_t v56 = 0xD000000000000014;
  unint64_t v57 = 0x80000001005BDA90;
  uint64_t v36 = v51;
  uint64_t v35 = v52;
  uint64_t v37 = v53;
  (*(void (**)(unsigned char *, void, uint64_t))(v52 + 104))(v51, enum case for URL.DirectoryHint.inferFromPath(_:), v53);
  sub_100017B14();
  uint64_t v38 = (uint64_t)v50;
  URL.appending<A>(component:directoryHint:)();
  (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v36, v37);
  swift_bridgeObjectRelease();
  uint64_t v39 = v54;
  id v40 = sub_1004FD024(v38);
  if (v39)
  {
    swift_errorRelease();
    uint64_t v41 = 0;
  }
  else
  {
    uint64_t v41 = v40;
  }
  uint64_t v42 = v49;
  unint64_t v43 = v55;

  *(void *)(a1 + v42) = v41;
  *unint64_t v43 = v41;
  return v41;
}

uint64_t sub_100407A7C()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MediaAPIUpdates.MetadataLoader()
{
  return self;
}

uint64_t sub_100407AD8(char *a1, unsigned __int8 *a2)
{
  return sub_10051CDB8(*a1, *a2);
}

Swift::Int sub_100407AE4()
{
  return Hasher._finalize()();
}

uint64_t sub_100407B6C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100407BE0()
{
  return Hasher._finalize()();
}

unint64_t sub_100407C64@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1006395E8;
  unint64_t result = sub_10040E8AC(*a1, v3);
  *a2 = result;
  return result;
}

void sub_100407C9C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE200000000000000;
  uint64_t v4 = 1635018093;
  if (v2 != 1) {
    uint64_t v4 = 1701869940;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 25705;
  }
  if (!v5) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_100407CE0()
{
  uint64_t v1 = 1635018093;
  if (*v0 != 1) {
    uint64_t v1 = 1701869940;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

unint64_t sub_100407D20@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1006395E8;
  unint64_t result = sub_10040E8AC(a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_100407D50(uint64_t a1)
{
  unint64_t v2 = sub_100408080();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100407D8C(uint64_t a1)
{
  unint64_t v2 = sub_100408080();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100407DC8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1000172F8(&qword_100662840);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10018AC60(a1, a1[3]);
  sub_100408080();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v9 = type metadata accessor for MediaAPIUpdates.App(0);
  unint64_t v14 = *(void *)(v3 + *(int *)(v9 + 40));
  dispatch thunk of CustomStringConvertible.description.getter();
  LOBYTE(v14) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (v2)
  {
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    LOBYTE(v14) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    sub_1000172F8(&qword_10065B658);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
    *(void *)(inited + 32) = 0xD000000000000012;
    *(void *)(inited + 40) = 0x80000001005BF450;
    unint64_t v14 = *(void *)(v3 + *(int *)(v9 + 44));
    *(void *)(inited + 48) = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(inited + 56) = v12;
    unint64_t v14 = sub_10044B560(inited);
    v13[7] = 1;
    sub_1000172F8(&qword_10065D008);
    sub_10040C3D8((unint64_t *)&qword_10065D020, &qword_10065D008);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_100408068(void *a1)
{
  return sub_100407DC8(a1);
}

unint64_t sub_100408080()
{
  unint64_t result = qword_100662848;
  if (!qword_100662848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100662848);
  }
  return result;
}

uint64_t type metadata accessor for MediaAPIUpdates.App(uint64_t a1)
{
  return sub_10019B200(a1, qword_100662A18);
}

void sub_1004080F4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  sub_10018AC60((void *)(a1 + 32), *(void *)(a1 + 56));
  if (a4)
  {
    id v6 = a4;
    sub_1000172F8(&qword_1006628E0);
    CheckedContinuation.resume(throwing:)();
  }
  else if (a2)
  {
    id v7 = a2;
    sub_1000172F8(&qword_1006628E0);
    CheckedContinuation.resume(returning:)();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1004081A0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, int64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    uint64_t v11 = (void *)_StringObject.sharedUTF8.getter();
  }
  uint64_t result = sub_1004089A4((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

BOOL sub_100408274(void *a1)
{
  return *a1 != 0;
}

id sub_100408284@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = *a1;
  if (result)
  {
    *a2 = result;
    return result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100408298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithClientIdentifier:v5 bag:a3];

  swift_unknownObjectRelease();
  return v6;
}

void *sub_10040831C(uint64_t a1, uint64_t a2)
{
  void (*v31)(long long *__return_ptr, void *);
  long long i;
  void *v33;
  _OWORD v34[2];
  long long v35;
  uint64_t v36;
  void v37[4];
  void *v38;
  uint64_t v39;
  void *v40;

  uint64_t v28 = a2;
  uint64_t v3 = type metadata accessor for MediaAPIUpdates.App(0);
  uint64_t v27 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  id v29 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_1000172F8(&qword_100662908);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v40 = _swiftEmptyArrayStorage;
  sub_1004560F8(0, 0, 0);
  uint64_t v9 = *(void **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  id v30 = *(char **)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  id v31 = *(void (**)(long long *__return_ptr, void *))(a1 + 40);
  *(void *)&i = v13;
  uint64_t v15 = *(void *)(a1 + 64);
  id v16 = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  NSEnumerator.makeIterator()();

  uint64_t v17 = &v8[*(int *)(sub_1000172F8(&qword_100662910) + 44)];
  *(void *)uint64_t v17 = v10;
  *((void *)v17 + 1) = v11;
  uint64_t v18 = &v8[*(int *)(sub_1000172F8(&qword_100662918) + 36)];
  *(void *)uint64_t v18 = v30;
  *((void *)v18 + 1) = v12;
  uint64_t v19 = &v8[*(int *)(sub_1000172F8(&qword_100662920) + 44)];
  *(void *)uint64_t v19 = v31;
  *((void *)v19 + 1) = v14;
  uint64_t v20 = &v8[*(int *)(v6 + 44)];
  *(void *)uint64_t v20 = i;
  *((void *)v20 + 1) = v15;
  type metadata accessor for NSFastEnumerationIterator();
  sub_10040C260(&qword_100662870, (void (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
  id v31 = *(void (**)(long long *__return_ptr, void *))v19;
  id v30 = v19;
  dispatch thunk of IteratorProtocol.next()();
  for (i = *(_OWORD *)v17; ; i = *(_OWORD *)v17)
  {
    sub_10001733C((uint64_t)v37, (uint64_t)&v35, (uint64_t *)&unk_10065C9C0);
    if (!v36) {
      break;
    }
    sub_1001C5DD4(&v35, v34);
    ((void (*)(void **__return_ptr, _OWORD *))i)(&v33, v34);
    id v21 = v33;
    sub_100014524((uint64_t)v34);
    uint64_t v38 = v21;
    if (((*(uint64_t (**)(void **))v18)(&v38) & 1) != 0
      && (v37[0] = v21,
          v31(&v35, v37),
          v21,
          id v21 = (void *)v35,
          uint64_t v39 = v35,
          ((*(uint64_t (**)(uint64_t *))v20)(&v39) & 1) != 0))
    {
      uint64_t v22 = v28;
      swift_retain();
      sub_1004061C0(v21, v22, v29);
      id v23 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1004560F8(0, v23[2] + 1, 1);
        id v23 = v40;
      }
      unint64_t v25 = v23[2];
      unint64_t v24 = v23[3];
      if (v25 >= v24 >> 1)
      {
        sub_1004560F8(v24 > 1, v25 + 1, 1);
        id v23 = v40;
      }
      v23[2] = v25 + 1;
      sub_10040C2A8((uint64_t)v29, (uint64_t)v23+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v25, type metadata accessor for MediaAPIUpdates.App);
      id v31 = *(void (**)(long long *__return_ptr, void *))v30;
    }
    else
    {
    }
    dispatch thunk of IteratorProtocol.next()();
  }
  sub_10001729C((uint64_t)v8, &qword_100662908);
  return v40;
}

void *sub_10040872C()
{
  uint64_t v0 = type metadata accessor for MediaAPIUpdates.MetadataLoader.Storage(0);
  uint64_t v1 = v0 - 8;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  type metadata accessor for MediaAPIUpdates.MetadataLoader();
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
  *(void *)&v3[*(int *)(v1 + 28)] = 0;
  sub_1000172F8(&qword_100662900);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + ((*(unsigned int *)(*(void *)v6 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_100409D98((uint64_t)v3, v6 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v6 + 16), type metadata accessor for MediaAPIUpdates.MetadataLoader.Storage);
  sub_100409E00((uint64_t)v3, type metadata accessor for MediaAPIUpdates.MetadataLoader.Storage);
  *(void *)(v4 + 16) = v6;
  id v7 = [self enumeratorWithOptions:0];
  v11[0] = v7;
  v11[1] = sub_100406068;
  void v11[2] = 0;
  v11[3] = sub_100408274;
  v11[4] = 0;
  v11[5] = sub_100408284;
  void v11[6] = 0;
  v11[7] = sub_1004060D8;
  v11[8] = 0;
  swift_retain();
  uint64_t v8 = sub_10040831C((uint64_t)v11, v4);

  swift_release_n();
  return v8;
}

uint64_t sub_100408988(uint64_t a1)
{
  return sub_100014524(a1 + 32);
}

uint64_t sub_1004089A4(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, int64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    id result = sub_1004D1CFC(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_96;
  }
  id result = String.UTF8View._foreignDistance(from:to:)();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    id result = sub_1004D1CFC(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    id result = sub_1004D1CFC(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    id result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_92;
  }
  if (v17 < a3 >> 16)
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  id result = String.UTF8View._foreignDistance(from:to:)();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_91;
  }
  if (v18 < v15)
  {
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  uint64_t v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    uint64_t v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v33 = a6 + 48;
        unsigned __int8 v34 = a6 + 55;
        unsigned __int8 v35 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v33 = 58;
        }
        else
        {
          unsigned __int8 v35 = 97;
          unsigned __int8 v34 = 65;
        }
        if (v19)
        {
          unint64_t v24 = 0;
          uint64_t v36 = v19 + 1;
          uint64_t v37 = result - 1;
          do
          {
            unsigned int v38 = *v36;
            if (v38 < 0x30 || v38 >= v33)
            {
              if (v38 < 0x41 || v38 >= v34)
              {
                uint64_t v29 = 0;
                if (v38 < 0x61 || v38 >= v35) {
                  return v29;
                }
                char v39 = -87;
              }
              else
              {
                char v39 = -55;
              }
            }
            else
            {
              char v39 = -48;
            }
            if (!is_mul_ok(v24, a6)) {
              return 0;
            }
            unint64_t v40 = v24 * a6;
            unsigned __int8 v41 = v38 + v39;
            BOOL v32 = __CFADD__(v40, v41);
            unint64_t v24 = v40 + v41;
            if (v32) {
              return 0;
            }
            ++v36;
            --v37;
          }
          while (v37);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_95;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v42 = a6 + 48;
      unsigned __int8 v43 = a6 + 55;
      unsigned __int8 v44 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v42 = 58;
      }
      else
      {
        unsigned __int8 v44 = 97;
        unsigned __int8 v43 = 65;
      }
      if (v19)
      {
        unint64_t v24 = 0;
        while (1)
        {
          unsigned int v45 = *v19;
          if (v45 < 0x30 || v45 >= v42)
          {
            if (v45 < 0x41 || v45 >= v43)
            {
              uint64_t v29 = 0;
              if (v45 < 0x61 || v45 >= v44) {
                return v29;
              }
              char v46 = -87;
            }
            else
            {
              char v46 = -55;
            }
          }
          else
          {
            char v46 = -48;
          }
          if (!is_mul_ok(v24, a6)) {
            return 0;
          }
          unint64_t v47 = v24 * a6;
          unsigned __int8 v48 = v45 + v46;
          BOOL v32 = __CFADD__(v47, v48);
          unint64_t v24 = v47 + v48;
          if (v32) {
            return 0;
          }
          ++v19;
          if (!--result) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 48;
      unsigned __int8 v22 = a6 + 55;
      unsigned __int8 v23 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v21 = 58;
      }
      else
      {
        unsigned __int8 v23 = 97;
        unsigned __int8 v22 = 65;
      }
      if (v19)
      {
        unint64_t v24 = 0;
        unint64_t v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              uint64_t v29 = 0;
              if (v27 < 0x61 || v27 >= v23) {
                return v29;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          if (!is_mul_ok(v24, a6)) {
            return 0;
          }
          unint64_t v30 = v24 * a6;
          unsigned __int8 v31 = v27 + v28;
          BOOL v32 = v30 >= v31;
          unint64_t v24 = v30 - v31;
          if (!v32) {
            return 0;
          }
          ++v25;
          if (!--v26) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
  return result;
}

uint64_t sub_100408DC4(uint64_t a1)
{
  v1[32] = a1;
  uint64_t v2 = type metadata accessor for Logger();
  v1[33] = v2;
  v1[34] = *(void *)(v2 - 8);
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  uint64_t v3 = sub_1000172F8(&qword_1006628E0);
  v1[37] = v3;
  v1[38] = *(void *)(v3 - 8);
  v1[39] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL.DirectoryHint();
  v1[40] = v4;
  v1[41] = *(void *)(v4 - 8);
  v1[42] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v1[43] = v5;
  v1[44] = *(void *)(v5 - 8);
  v1[45] = swift_task_alloc();
  v1[46] = swift_task_alloc();
  return _swift_task_switch(sub_100408FBC, 0, 0);
}

uint64_t sub_100408FBC()
{
  uint64_t v1 = v0[45];
  uint64_t v2 = v0[43];
  uint64_t v3 = v0[44];
  uint64_t v5 = v0[41];
  uint64_t v4 = v0[42];
  uint64_t v6 = v0[40];
  sub_10047C460(0x736568636143, 0xE600000000000000);
  v0[21] = 0xD00000000000001FLL;
  v0[22] = 0x80000001005BF550;
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for URL.DirectoryHint.inferFromPath(_:), v6);
  sub_100017B14();
  URL.appending<A>(component:directoryHint:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[47] = v7;
  v0[48] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v1, v2);
  uint64_t v8 = Data.init(contentsOf:options:)();
  unint64_t v10 = v9;
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_1000172F8(&qword_1006628E8);
  sub_10040C444();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  sub_100013510(v8, v10);
  swift_release();
  uint64_t v46 = v0[31];
  swift_bridgeObjectRelease();
  v0[49] = 0;
  v0[50] = v46;
  if (*(void *)(v46 + 16))
  {
    unint64_t v11 = sub_100459300(v0[32]);
    if (v12)
    {
      uint64_t v13 = v0[46];
      uint64_t v14 = v0[43];
      int64_t v15 = (uint64_t *)(*(void *)(v46 + 56) + 16 * v11);
      uint64_t v17 = *v15;
      uint64_t v16 = v15[1];
      swift_bridgeObjectRetain();
      v7(v13, v14);
LABEL_11:
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      unsigned int v45 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
      return v45(v17, v16);
    }
  }
  id v18 = objc_allocWithZone((Class)ACAccountType);
  NSString v19 = String._bridgeToObjectiveC()();
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v18 initWithIdentifier:v19 description:v20];

  id v22 = [objc_allocWithZone((Class)ACAccount) initWithAccountType:v21];
  v0[51] = v22;

  if (!v22)
  {
    static Logger.updates.getter();
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = v0[32];
      char v39 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)char v39 = 134349056;
      v0[28] = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_slowDealloc();
    }
    uint64_t v40 = v0[46];
    uint64_t v41 = v0[43];
    uint64_t v42 = v0[36];
    uint64_t v43 = v0[33];
    uint64_t v44 = v0[34];

    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
    v7(v40, v41);
    uint64_t v17 = 0;
    uint64_t v16 = 0;
    goto LABEL_11;
  }
  uint64_t v23 = v0[38];
  uint64_t v24 = v0[39];
  uint64_t v25 = v0[37];
  v0[25] = v0[32];
  dispatch thunk of CustomStringConvertible.description.getter();
  v26._uint64_t countAndFlagsBits = 12589;
  v26._object = (void *)0xE200000000000000;
  String.append(_:)(v26);
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, "ams_setStorefront:", v27);

  char v28 = self;
  id v29 = v22;
  NSString v30 = String._bridgeToObjectiveC()();
  NSString v31 = String._bridgeToObjectiveC()();
  id v32 = [v28 bagForProfile:v30 profileVersion:v31 processInfo:0 account:v29];

  NSString v33 = String._bridgeToObjectiveC()();
  id v34 = [v32 stringForKey:v33];
  v0[52] = v34;

  v0[2] = v0;
  v0[7] = v0 + 23;
  v0[3] = sub_1004096A0;
  swift_continuation_init();
  v0[17] = v25;
  unsigned __int8 v35 = sub_10019CE94(v0 + 14);
  sub_1000172F8((uint64_t *)&unk_100666420);
  sub_1000172F8(&qword_10065B260);
  CheckedContinuation.init(continuation:function:)();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v23 + 32))(v35, v24, v25);
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 1107296256;
  v0[12] = sub_1004080F4;
  v0[13] = &unk_100645A28;
  objc_msgSend(v34, "valueWithCompletion:");
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1004096A0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 424) = v1;
  if (v1) {
    uint64_t v2 = sub_100409A0C;
  }
  else {
    uint64_t v2 = sub_1004097B0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1004097B0()
{
  uint64_t v2 = *(void *)(v0 + 392);
  uint64_t v1 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 256);
  uint64_t v4 = *(void **)(v0 + 184);

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v20 = v5;
  sub_10052A764(v5, v7, v3, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  *(void *)(v0 + 240) = v1;
  swift_bridgeObjectRetain();
  sub_1000172F8(&qword_1006628E8);
  sub_10040C3D8(&qword_1006628F0, &qword_1006628E8);
  uint64_t v9 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  if (v2)
  {
    unint64_t v11 = *(void **)(v0 + 408);
    char v12 = *(void (**)(uint64_t, uint64_t))(v0 + 376);
    uint64_t v13 = *(void *)(v0 + 368);
    uint64_t v14 = *(void *)(v0 + 344);
    swift_release();

    swift_errorRelease();
    swift_bridgeObjectRelease();
    v12(v13, v14);
  }
  else
  {
    uint64_t v15 = v9;
    unint64_t v16 = v10;
    swift_bridgeObjectRelease();
    swift_release();
    Data.write(to:options:)();
    uint64_t v17 = *(void **)(v0 + 408);
    (*(void (**)(void, void))(v0 + 376))(*(void *)(v0 + 368), *(void *)(v0 + 344));

    sub_100013510(v15, v16);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v18 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v18(v20, v7);
}

uint64_t sub_100409A0C()
{
  NSString v27 = v0;
  uint64_t v1 = (void *)v0[52];
  swift_willThrow();

  static Logger.updates.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v25 = (void (*)(uint64_t, uint64_t))v0[47];
    uint64_t v24 = v0[46];
    id v22 = (void *)v0[51];
    uint64_t v23 = v0[43];
    uint64_t v19 = v0[34];
    uint64_t v4 = v0[32];
    uint64_t v20 = v0[33];
    uint64_t v21 = v0[35];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134349314;
    v0[26] = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v6 = *(void *)(v0[19] - 8);
    swift_task_alloc();
    (*(void (**)(void))(v6 + 16))();
    uint64_t v7 = String.init<A>(describing:)();
    unint64_t v9 = v8;
    swift_task_dealloc();
    v0[29] = sub_1000143F4(v7, v9, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
    v25(v24, v23);
  }
  else
  {
    unint64_t v10 = (void *)v0[51];
    unint64_t v11 = (void (*)(uint64_t, uint64_t))v0[47];
    uint64_t v12 = v0[46];
    uint64_t v13 = v0[43];
    uint64_t v15 = v0[34];
    uint64_t v14 = v0[35];
    uint64_t v16 = v0[33];

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    v11(v12, v13);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void, void))v0[1];
  return v17(0, 0);
}

uint64_t sub_100409D98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100409E00(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100409E60()
{
  unint64_t result = qword_100662888;
  if (!qword_100662888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100662888);
  }
  return result;
}

uint64_t sub_100409EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[41] = a7;
  v8[42] = a8;
  v8[39] = a4;
  v8[40] = a5;
  v8[37] = a2;
  v8[38] = a3;
  v8[36] = a1;
  uint64_t v9 = type metadata accessor for AppInstallRequestType();
  v8[43] = v9;
  v8[44] = *(void *)(v9 - 8);
  v8[45] = swift_task_alloc();
  v8[46] = type metadata accessor for AppStorePreflightTask();
  v8[47] = swift_task_alloc();
  type metadata accessor for AppInstallTemplate();
  v8[48] = swift_task_alloc();
  sub_1000172F8(&qword_10065CBD0);
  v8[49] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for AppStoreItem(0);
  v8[50] = v10;
  v8[51] = *(void *)(v10 - 8);
  v8[52] = swift_task_alloc();
  v8[53] = swift_task_alloc();
  v8[54] = swift_task_alloc();
  sub_1000172F8((uint64_t *)&unk_100661AB0);
  v8[55] = swift_task_alloc();
  sub_1000172F8(&qword_10065BE10);
  v8[56] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for UUID();
  v8[57] = v11;
  v8[58] = *(void *)(v11 - 8);
  v8[59] = swift_task_alloc();
  v8[60] = swift_task_alloc();
  v8[61] = swift_task_alloc();
  sub_1000172F8(&qword_10065BCD0);
  v8[62] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for Platform();
  v8[63] = v12;
  v8[64] = *(void *)(v12 - 8);
  v8[65] = swift_task_alloc();
  sub_1000172F8((uint64_t *)&unk_10065CA40);
  v8[66] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for DDMPurchaseMethod();
  v8[67] = v13;
  v8[68] = *(void *)(v13 - 8);
  v8[69] = swift_task_alloc();
  v8[70] = swift_task_alloc();
  return _swift_task_switch(sub_10040A284, 0, 0);
}

uint64_t sub_10040A284()
{
  uint64_t v1 = *(void *)(v0 + 544);
  uint64_t v2 = *(void *)(v0 + 536);
  uint64_t v3 = *(void *)(v0 + 528);
  uint64_t v4 = *(os_unfair_lock_s **)(v0 + 328);
  swift_retain();
  sub_1003119B0(14, v4, v3);
  swift_release();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2);
  if (result == 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v6 = *(void *)(v0 + 560);
  uint64_t v7 = *(void *)(v0 + 552);
  uint64_t v8 = *(void *)(v0 + 544);
  uint64_t v9 = *(void *)(v0 + 536);
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 32))(v6, *(void *)(v0 + 528), v9);
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v7, enum case for DDMPurchaseMethod.volumePurchaseProgram(_:), v9);
  char v10 = static DDMPurchaseMethod.== infix(_:_:)();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v11(v7, v9);
  v11(v6, v9);
  if ((v10 & 1) == 0) {
    goto LABEL_23;
  }
  uint64_t v12 = *(os_unfair_lock_s **)(v0 + 328);
  swift_retain();
  unint64_t v13 = sub_100312C88(15, v12);
  char v15 = v14;
  swift_release();
  if ((v15 & 1) == 0)
  {
    uint64_t v16 = *(void *)(v0 + 296);
    if (*(void *)(v16 + *(int *)(type metadata accessor for MediaAPIUpdates.App(0) + 44)) >= v13) {
      goto LABEL_23;
    }
  }
  uint64_t v17 = *(uint64_t **)(v0 + 288);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  swift_bridgeObjectRetain();
  *(void *)(v0 + 568) = sub_1004BD574(v19, v18);
  if (v20)
  {
    type metadata accessor for InternalError();
    sub_10040C260((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    long long v29 = xmmword_1005A6FA0;
LABEL_10:
    long long *v28 = v29;
LABEL_22:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
LABEL_23:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v46 = *(uint64_t (**)(void))(v0 + 8);
    return v46();
  }
  uint64_t v21 = *(void *)(v0 + 504);
  uint64_t v22 = *(void *)(v0 + 512);
  uint64_t v23 = *(void *)(v0 + 496);
  uint64_t v24 = *(os_unfair_lock_s **)(v0 + 328);
  uint64_t v25 = *(void *)(v0 + 288);
  uint64_t v26 = *(void *)(v25 + *(int *)(type metadata accessor for MediaAPIApp(0) + 24));
  swift_retain();
  sub_100311A5C(13, v24, v23);
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v23, 1, v21) == 1)
  {
    uint64_t v27 = *(void *)(v0 + 496);
    static Platform.current.getter();
    sub_10001729C(v27, &qword_10065BCD0);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 512) + 32))(*(void *)(v0 + 520), *(void *)(v0 + 496), *(void *)(v0 + 504));
  }
  unsigned __int8 v30 = sub_1002ACA54(*(char **)(v0 + 520));
  if (!*(void *)(v26 + 16) || (unint64_t v31 = sub_1004524C0(v30), (v32 & 1) == 0))
  {
    type metadata accessor for InternalError();
    sub_10040C260((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    void *v45 = 0xD000000000000012;
    v45[1] = 0x80000001005B7A30;
    goto LABEL_22;
  }
  NSString v33 = (_OWORD *)(*(void *)(v26 + 56) + 160 * v31);
  long long v34 = v33[1];
  *(_OWORD *)(v0 + 16) = *v33;
  *(_OWORD *)(v0 + 32) = v34;
  long long v35 = v33[2];
  long long v36 = v33[3];
  long long v37 = v33[5];
  *(_OWORD *)(v0 + 80) = v33[4];
  *(_OWORD *)(v0 + 96) = v37;
  *(_OWORD *)(v0 + 48) = v35;
  *(_OWORD *)(v0 + 64) = v36;
  long long v38 = v33[6];
  long long v39 = v33[7];
  long long v40 = v33[9];
  *(_OWORD *)(v0 + 144) = v33[8];
  *(_OWORD *)(v0 + 160) = v40;
  *(_OWORD *)(v0 + 112) = v38;
  *(_OWORD *)(v0 + 128) = v39;
  uint64_t v41 = *(void *)(v0 + 128);
  uint64_t v42 = *(void *)(v41 + 16);
  if (!v42)
  {
LABEL_20:
    type metadata accessor for InternalError();
    sub_10040C260((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    long long v29 = xmmword_1005A6FB0;
    goto LABEL_10;
  }
  sub_10027CC24((void *)(v0 + 16));
  swift_bridgeObjectRetain();
  uint64_t v43 = (unsigned char *)(v41 + 48);
  while (*v43 != 1)
  {
    char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v44) {
      goto LABEL_27;
    }
    swift_bridgeObjectRelease();
    v43 += 24;
    if (!--v42)
    {
      swift_bridgeObjectRelease();
      sub_10027CD2C((void *)(v0 + 16));
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_27:
  swift_bridgeObjectRelease();
  id v47 = objc_allocWithZone((Class)AMSBuyParams);
  NSString v48 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v49 = [v47 initWithString:v48];
  *(void *)(v0 + 576) = v49;

  id v50 = [v49 dictionary];
  if (!v50
    || (unint64_t v51 = v50,
        uint64_t v52 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(),
        v51,
        uint64_t v53 = *(void *)(v52 + 16),
        swift_bridgeObjectRelease(),
        !v53))
  {
    sub_10027CD2C((void *)(v0 + 16));
    type metadata accessor for InternalError();
    sub_10040C260((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    *uint64_t v63 = xmmword_1005A6FB0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    goto LABEL_23;
  }
  uint64_t v54 = *(void *)(v0 + 296);
  *(void *)(v0 + 584) = *(void *)(*(void *)(*(void *)(v0 + 336) + 192) + 32);
  uint64_t v55 = *(void *)(v0 + 16);
  uint64_t v56 = *(void *)(v0 + 24);
  unint64_t v57 = (uint64_t *)(v54 + *(int *)(type metadata accessor for MediaAPIUpdates.App(0) + 32));
  uint64_t v58 = *v57;
  uint64_t v59 = v57[1];
  swift_retain();
  UUID.init()();
  os_log_type_t v60 = (void *)swift_task_alloc();
  *(void *)(v0 + 592) = v60;
  *os_log_type_t v60 = v0;
  v60[1] = sub_10040AB08;
  uint64_t v62 = *(void *)(v0 + 480);
  uint64_t v61 = *(void *)(v0 + 488);
  return sub_10045C3C8(v61, v55, v56, v58, v59, v62, 0);
}

uint64_t sub_10040AB08()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 464);
  *(void *)(*(void *)v1 + 600) = v0;
  swift_task_dealloc();
  uint64_t v4 = (void (**)(uint64_t, uint64_t))(v3 + 8);
  if (v0)
  {
    (*v4)(v2[60], v2[57]);
    uint64_t v5 = sub_10040BD40;
  }
  else
  {
    uint64_t v6 = v2[60];
    uint64_t v7 = v2[57];
    sub_10027CD2C(v2 + 2);
    uint64_t v8 = *v4;
    v2[76] = *v4;
    v2[77] = (unint64_t)v4 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v8(v6, v7);
    uint64_t v5 = sub_10040AC8C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10040AC8C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 328);
  swift_retain();
  uint64_t v2 = sub_100311910(16, v1);
  uint64_t v4 = v3;
  swift_release();
  *(void *)(v0 + 624) = v4;
  if (v4)
  {
    uint64_t v5 = *(os_unfair_lock_s **)(v0 + 328);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_100311910(3, v5);
    uint64_t v8 = v7;
    uint64_t result = swift_release();
    if (!v8) {
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = 0;
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v31 = v8;
  *(void *)(v0 + 648) = v8;
  *(void *)(v0 + 640) = v6;
  *(void *)(v0 + 632) = v2;
  uint64_t v10 = *(void *)(v0 + 448);
  uint64_t v11 = *(os_unfair_lock_s **)(v0 + 328);
  swift_retain();
  char v12 = sub_10031196C(7, v11);
  swift_release();
  swift_retain();
  uint64_t v13 = sub_100311954(12, v11);
  uint64_t v15 = v14;
  swift_release();
  *(void *)(v0 + 656) = v13;
  *(void *)(v0 + 664) = v15;
  swift_retain();
  sub_100311A9C(8, v11, v10);
  swift_release();
  uint64_t v16 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum();
  *(void *)(v0 + 672) = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  *(void *)(v0 + 680) = v17;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v10, 1, v16);
  if (result != 1)
  {
    uint64_t v18 = *(void *)(v0 + 440);
    uint64_t v29 = *(void *)(v0 + 448);
    uint64_t v30 = *(void *)(v0 + 576);
    uint64_t v19 = *(_OWORD **)(v0 + 336);
    if (v15 == 2)
    {
      uint64_t v15 = 0;
      uint64_t v13 = 0;
    }
    char v20 = v12 & 1;
    long long v22 = v19[3];
    long long v21 = v19[4];
    *(_OWORD *)(v0 + 176) = v19[2];
    *(_OWORD *)(v0 + 192) = v22;
    *(_OWORD *)(v0 + 208) = v21;
    long long v24 = v19[6];
    long long v23 = v19[7];
    long long v25 = v19[5];
    *(_OWORD *)(v0 + 271) = *(_OWORD *)((char *)v19 + 127);
    *(_OWORD *)(v0 + 240) = v24;
    *(_OWORD *)(v0 + 256) = v23;
    *(_OWORD *)(v0 + 224) = v25;
    uint64_t v26 = type metadata accessor for Logger();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v18, 1, 1, v26);
    uint64_t v27 = swift_task_alloc();
    *(void *)(v0 + 688) = v27;
    *(void *)(v27 + 16) = v2;
    *(void *)(v27 + 24) = v4;
    *(void *)(v27 + 32) = v6;
    *(void *)(v27 + 40) = v31;
    *(void *)(v27 + 48) = v13;
    *(void *)(v27 + 56) = v15;
    *(void *)(v27 + 64) = v30;
    *(void *)(v27 + 72) = v29;
    *(void *)(v27 + 80) = 0;
    *(unsigned char *)(v27 + 88) = v20;
    *(void *)(v27 + 96) = v0 + 176;
    char v32 = (char *)&dword_10065C960 + dword_10065C960;
    *(unsigned char *)(v27 + 104) = 0;
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 696) = v28;
    void *v28 = v0;
    v28[1] = sub_10040AFC4;
    __asm { BR              X8; sub_1001D17CC }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_10040AFC4(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 704) = a1;
  *(void *)(v4 + 712) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 440);
  if (v1)
  {
    sub_10001729C(v5, (uint64_t *)&unk_100661AB0);
    swift_task_dealloc();
    uint64_t v6 = sub_10040B6D8;
  }
  else
  {
    swift_task_dealloc();
    sub_10001729C(v5, (uint64_t *)&unk_100661AB0);
    uint64_t v6 = sub_10040B144;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_10040B144()
{
  uint64_t v1 = *(void *)(v0 + 704);
  uint64_t v2 = *(void *)(v0 + 680);
  uint64_t v3 = *(void *)(v0 + 672);
  uint64_t v4 = *(void *)(v0 + 632);
  uint64_t v5 = *(void *)(v0 + 624);
  uint64_t v6 = *(void *)(v0 + 448);
  sub_1001C6440(*(void *)(v0 + 656), *(void *)(v0 + 664));
  sub_1001C6450(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v3);
  uint64_t v7 = *(void *)(v1 + 16);
  if (v7)
  {
    uint64_t v8 = *(void *)(v0 + 408);
    uint64_t v9 = *(void *)(v0 + 704)
       + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v11 = *(void *)(v0 + 568);
      char v12 = *(void **)(v0 + 424);
      sub_100409D98(v9, (uint64_t)v12, type metadata accessor for AppStoreItem);
      if ((*v12 & 0x8000000000000000) == 0 && *v12 == v11)
      {
        uint64_t v13 = *(void *)(v0 + 424);
        uint64_t v14 = *(void *)(v0 + 392);
        swift_bridgeObjectRelease();
        sub_10040C2A8(v13, v14, type metadata accessor for AppStoreItem);
        uint64_t v15 = 0;
        goto LABEL_9;
      }
      sub_100409E00(*(void *)(v0 + 424), type metadata accessor for AppStoreItem);
      v9 += v10;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = 1;
LABEL_9:
  uint64_t v16 = *(void *)(v0 + 400);
  uint64_t v17 = *(void *)(v0 + 408);
  uint64_t v18 = *(void *)(v0 + 392);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v18, v15, 1, v16);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v18, 1, v16) == 1)
  {
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 608);
    char v20 = *(void **)(v0 + 576);
    uint64_t v21 = *(void *)(v0 + 488);
    uint64_t v22 = *(void *)(v0 + 456);
    sub_10001729C(*(void *)(v0 + 392), &qword_10065CBD0);
    type metadata accessor for InternalError();
    sub_10040C260((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    void *v23 = 0;
    v23[1] = 0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();

    v19(v21, v22);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
  else
  {
    uint64_t v26 = *(void *)(v0 + 464);
    uint64_t v27 = *(void *)(v0 + 472);
    uint64_t v28 = *(void *)(v0 + 456);
    uint64_t v29 = *(void *)(v0 + 432);
    uint64_t v30 = *(void *)(v0 + 416);
    uint64_t v31 = *(void *)(v0 + 360);
    uint64_t v51 = *(void *)(v0 + 376);
    uint64_t v52 = *(int **)(v0 + 368);
    uint64_t v50 = v27;
    uint64_t v32 = *(void *)(v0 + 352);
    uint64_t v48 = *(void *)(v0 + 488);
    uint64_t v49 = *(void *)(v0 + 344);
    uint64_t v33 = *(os_unfair_lock_s **)(v0 + 328);
    sub_10040C2A8(*(void *)(v0 + 392), v29, type metadata accessor for AppStoreItem);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v27, v48, v28);
    sub_100409D98(v29, v30, type metadata accessor for AppStoreItem);
    (*(void (**)(uint64_t, void, uint64_t))(v32 + 104))(v31, enum case for AppInstallRequestType.automaticUpdate(_:), v49);
    swift_retain();
    sub_10018AB28(v0 + 176);
    uint64_t v34 = sub_100311954(12, v33);
    uint64_t v36 = v35;
    swift_release();
    if (v36 == 2)
    {
      uint64_t v34 = 0;
      uint64_t v37 = 0;
    }
    else
    {
      uint64_t v37 = v36;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v51, v50, v28);
    sub_10040C2A8(v30, v51 + v52[5], type metadata accessor for AppStoreItem);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v51 + v52[6], v31, v49);
    long long v38 = (_OWORD *)(v51 + v52[7]);
    long long v40 = *(_OWORD *)(v0 + 192);
    long long v39 = *(_OWORD *)(v0 + 208);
    _OWORD *v38 = *(_OWORD *)(v0 + 176);
    v38[1] = v40;
    void v38[2] = v39;
    long long v41 = *(_OWORD *)(v0 + 224);
    long long v42 = *(_OWORD *)(v0 + 240);
    long long v43 = *(_OWORD *)(v0 + 256);
    *(_OWORD *)((char *)v38 + 95) = *(_OWORD *)(v0 + 271);
    v38[4] = v42;
    v38[5] = v43;
    v38[3] = v41;
    char v44 = (uint64_t *)(v51 + v52[8]);
    uint64_t *v44 = v34;
    v44[1] = v37;
    unsigned int v45 = (void *)swift_task_alloc();
    *(void *)(v0 + 720) = v45;
    void *v45 = v0;
    v45[1] = sub_10040B8B4;
    uint64_t v46 = *(void *)(v0 + 384);
    uint64_t v47 = *(void *)(v0 + 304);
    return sub_1003B2D3C(v46, v47);
  }
}

uint64_t sub_10040B6D8()
{
  uint64_t v1 = v0[85];
  uint64_t v2 = v0[79];
  uint64_t v3 = v0[78];
  uint64_t v11 = v0[84];
  uint64_t v4 = (void *)v0[72];
  uint64_t v5 = v0[61];
  uint64_t v6 = v0[57];
  uint64_t v9 = v0[56];
  uint64_t v10 = (void (*)(uint64_t, uint64_t))v0[76];
  sub_1001C6440(v0[82], v0[83]);
  sub_1001C6450(v2, v3);
  swift_release();

  v10(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v9, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10040B8B4()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v2[91] = v0;
  swift_task_dealloc();
  uint64_t v4 = v2[47];
  if (v0)
  {
    sub_100409E00(v4, (uint64_t (*)(void))type metadata accessor for AppStorePreflightTask);
    return _swift_task_switch(sub_10040BEAC, 0, 0);
  }
  else
  {
    sub_100409E00(v4, (uint64_t (*)(void))type metadata accessor for AppStorePreflightTask);
    uint64_t v5 = (void *)swift_task_alloc();
    v2[92] = v5;
    *uint64_t v5 = v3;
    v5[1] = sub_10040BA78;
    uint64_t v6 = v2[48];
    return sub_10045E0BC(v6);
  }
}

uint64_t sub_10040BA78()
{
  *(void *)(*(void *)v1 + 744) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10040C048;
  }
  else {
    uint64_t v2 = sub_10040BB8C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10040BB8C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[76];
  uint64_t v2 = (void *)v0[72];
  uint64_t v3 = v0[61];
  uint64_t v4 = v0[57];
  uint64_t v5 = v0[54];
  uint64_t v6 = v0[48];
  swift_release();

  sub_100409E00(v6, (uint64_t (*)(void))type metadata accessor for AppInstallTemplate);
  sub_100409E00(v5, type metadata accessor for AppStoreItem);
  v1(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10040BD40()
{
  uint64_t v1 = (void *)v0[72];
  swift_release();

  sub_10027CD2C(v0 + 2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_10040BEAC()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[76];
  uint64_t v2 = (void *)v0[72];
  uint64_t v3 = v0[61];
  uint64_t v4 = v0[57];
  uint64_t v5 = v0[54];
  swift_release();

  sub_100409E00(v5, type metadata accessor for AppStoreItem);
  v1(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_10040C048()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[76];
  uint64_t v2 = (void *)v0[72];
  uint64_t v3 = v0[61];
  uint64_t v4 = v0[57];
  uint64_t v5 = v0[54];
  uint64_t v6 = v0[48];
  swift_release();

  sub_100409E00(v6, (uint64_t (*)(void))type metadata accessor for AppInstallTemplate);
  sub_100409E00(v5, type metadata accessor for AppStoreItem);
  v1(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10040C204(void **a1)
{
  return sub_100405FA0(a1);
}

uint64_t sub_10040C220()
{
  if (*(void *)(v0 + 40)) {
    sub_100014524(v0 + 16);
  }

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10040C260(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10040C2A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for MediaAPIUpdates.MetadataLoader.Storage(uint64_t a1)
{
  return sub_10019B200(a1, qword_100662988);
}

unint64_t sub_10040C330()
{
  unint64_t result = qword_1006628C8;
  if (!qword_1006628C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006628C8);
  }
  return result;
}

unint64_t sub_10040C384()
{
  unint64_t result = qword_1006628D8;
  if (!qword_1006628D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006628D8);
  }
  return result;
}

uint64_t sub_10040C3D8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10017B924(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10040C444()
{
  unint64_t result = qword_1006628F8;
  if (!qword_1006628F8)
  {
    sub_10017B924(&qword_1006628E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006628F8);
  }
  return result;
}

uint64_t destroy for MediaAPIUpdates.Response(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    return sub_100013510(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for MediaAPIUpdates.Response(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2 + 2;
  unint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v4;
  }
  else
  {
    uint64_t v6 = *v4;
    sub_100012670(*v4, v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v5;
  }
  return a1;
}

void *assignWithCopy for MediaAPIUpdates.Response(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2 + 2;
  unint64_t v5 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_100012670(*v4, v5);
      uint64_t v8 = a1[2];
      unint64_t v9 = a1[3];
      a1[2] = v7;
      a1[3] = v5;
      sub_100013510(v8, v9);
      return a1;
    }
    sub_1002E9998((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  sub_100012670(*v4, v5);
  a1[2] = v6;
  a1[3] = v5;
  return a1;
}

void *assignWithTake for MediaAPIUpdates.Response(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v4 = a2 + 2;
  unint64_t v5 = a1[3];
  if (v5 >> 60 != 15)
  {
    unint64_t v6 = a2[3];
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = a1[2];
      a1[2] = *v4;
      a1[3] = v6;
      sub_100013510(v7, v5);
      return a1;
    }
    sub_1002E9998((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
  return a1;
}

ValueMetadata *type metadata accessor for MediaAPIUpdates.Response()
{
  return &type metadata for MediaAPIUpdates.Response;
}

ValueMetadata *type metadata accessor for MediaAPIUpdates.RequestBody()
{
  return &type metadata for MediaAPIUpdates.RequestBody;
}

uint64_t *sub_10040C728(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_1000172F8(&qword_10065C3C0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v12;
    id v13 = v12;
  }
  return a1;
}

void sub_10040C8A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  unint64_t v6 = *(void **)(a1 + *(int *)(a2 + 20));
}

char *sub_10040C970(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1000172F8(&qword_10065C3C0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = *(void **)&a2[v9];
  *(void *)&a1[v9] = v10;
  id v11 = v10;
  return a1;
}

char *sub_10040CA9C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_1000172F8(&qword_10065C3C0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  id v13 = *(void **)&a1[v12];
  uint64_t v14 = *(void **)&a2[v12];
  *(void *)&a1[v12] = v14;
  id v15 = v14;

  return a1;
}

char *sub_10040CC34(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1000172F8(&qword_10065C3C0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_10040CD5C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_1000172F8(&qword_10065C3C0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  id v13 = *(void **)&a1[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];

  return a1;
}

uint64_t sub_10040CEF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10040CF04);
}

uint64_t sub_10040CF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000172F8(&qword_10065C3C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_10040CFD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10040CFE8);
}

uint64_t sub_10040CFE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000172F8(&qword_10065C3C0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

void sub_10040D0A8()
{
  sub_10026B458();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for MediaAPIUpdateError()
{
  return &type metadata for MediaAPIUpdateError;
}

ValueMetadata *type metadata accessor for MediaAPIUpdates.LookupType()
{
  return &type metadata for MediaAPIUpdates.LookupType;
}

ValueMetadata *type metadata accessor for MediaAPIUpdates()
{
  return &type metadata for MediaAPIUpdates;
}

ValueMetadata *type metadata accessor for MediaAPIUpdates.App.CodingKeys()
{
  return &type metadata for MediaAPIUpdates.App.CodingKeys;
}

void *sub_10040D184(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(void *)(v11 - 8);
    id v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_1000172F8(&qword_10065C3C0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)v4 + v16;
    uint64_t v19 = (char *)a2 + v16;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    char v20 = (char *)v4 + v17;
    uint64_t v21 = (char *)a2 + v17;
    *(void *)char v20 = *(void *)v21;
    v20[8] = v21[8];
    uint64_t v22 = a3[8];
    long long v23 = (void *)((char *)v4 + v22);
    long long v24 = (void *)((char *)a2 + v22);
    unint64_t v25 = v24[1];
    if (v25 >= 2)
    {
      void *v23 = *v24;
      v23[1] = v25;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)long long v23 = *(_OWORD *)v24;
    }
    uint64_t v26 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *(void *)((char *)v4 + v26) = *(void *)((char *)a2 + v26);
    uint64_t v27 = a3[12];
    *(void *)((char *)v4 + a3[11]) = *(void *)((char *)a2 + a3[11]);
    *(void *)((char *)v4 + v27) = *(void *)((char *)a2 + v27);
    *(void *)((char *)v4 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  }
  swift_retain();
  return v4;
}

uint64_t sub_10040D3A0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  if (*(void *)(a1 + *(int *)(a2 + 32) + 8) >= 2uLL) {
    swift_bridgeObjectRelease();
  }

  return swift_release();
}

void *sub_10040D488(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v14;
  uint64_t v17 = (char *)a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  uint64_t v18 = (char *)a1 + v15;
  uint64_t v19 = (char *)a2 + v15;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  unint64_t v23 = v22[1];
  if (v23 >= 2)
  {
    *uint64_t v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  }
  uint64_t v24 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  uint64_t v25 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + v25) = *(void *)((char *)a2 + v25);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_retain();
  return a1;
}

void *sub_10040D658(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)uint64_t v16 = v18;
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)v21;
  v20[8] = v21[8];
  *(void *)uint64_t v20 = v22;
  uint64_t v23 = a3[8];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  unint64_t v26 = *(void *)((char *)a1 + v23 + 8);
  unint64_t v27 = *(void *)((char *)a2 + v23 + 8);
  if (v26 >= 2)
  {
    if (v27 >= 2)
    {
      *uint64_t v24 = *v25;
      v24[1] = v25[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    sub_10001729C((uint64_t)v24, &qword_100661C28);
    goto LABEL_12;
  }
  if (v27 < 2)
  {
LABEL_12:
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    goto LABEL_14;
  }
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
LABEL_14:
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_10040D8F8(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = (char *)a1 + v13;
  uint64_t v17 = (char *)a2 + v13;
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  uint64_t v18 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *((unsigned char *)a1 + v18) = *((unsigned char *)a2 + v18);
  uint64_t v19 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
  uint64_t v20 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
  return a1;
}

void *sub_10040DA8C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v16;
  uint64_t v19 = (char *)a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = (char *)a1 + v17;
  uint64_t v21 = (char *)a2 + v17;
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  if (*(void *)((char *)a1 + v22 + 8) >= 2uLL)
  {
    unint64_t v25 = v24[1];
    if (v25 >= 2)
    {
      void *v23 = *v24;
      v23[1] = v25;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_10001729C((uint64_t)v23, &qword_100661C28);
  }
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
LABEL_12:
  uint64_t v26 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *(void *)((char *)a1 + v26) = *(void *)((char *)a2 + v26);
  uint64_t v27 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + v27) = *(void *)((char *)a2 + v27);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_release();
  return a1;
}

uint64_t sub_10040DCD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10040DCEC);
}

uint64_t sub_10040DCEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000172F8(&qword_10065C3C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 52));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_10040DDB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10040DDC8);
}

uint64_t sub_10040DDC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000172F8(&qword_10065C3C0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 52)) = (a2 - 1);
  }
  return result;
}

void sub_10040DE8C()
{
  sub_10026B458();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_10040DF68()
{
  unint64_t result = qword_100662A70;
  if (!qword_100662A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662A70);
  }
  return result;
}

unint64_t sub_10040DFC0()
{
  unint64_t result = qword_100662A78;
  if (!qword_100662A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662A78);
  }
  return result;
}

unint64_t sub_10040E018()
{
  unint64_t result = qword_100662A80;
  if (!qword_100662A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662A80);
  }
  return result;
}

unint64_t sub_10040E070()
{
  unint64_t result = qword_100662A88;
  if (!qword_100662A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662A88);
  }
  return result;
}

unint64_t sub_10040E0C8()
{
  unint64_t result = qword_100662A90;
  if (!qword_100662A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662A90);
  }
  return result;
}

uint64_t sub_10040E11C(void *a1)
{
  uint64_t v3 = sub_1000172F8(&qword_100662B38);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  sub_10018AC60(a1, a1[3]);
  sub_10040EFF8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_100014524((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = KeyedDecodingContainer.decode(_:forKey:)();
    char v10 = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_100014524((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_10040E324(void *a1)
{
  uint64_t v3 = sub_1000172F8(&qword_100662AC0);
  uint64_t v22 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000172F8(&qword_100662AC8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  uint64_t v23 = a1;
  sub_10018AC60(a1, v10);
  sub_10040E9EC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_100014524((uint64_t)v23);
  }
  else
  {
    uint64_t v11 = v22;
    uint64_t v21 = v7;
    sub_10040EA40();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    unint64_t v12 = v5;
    int v13 = v9;
    v26[0] = 0;
    uint64_t v14 = v3;
    KeyedDecodingContainer.nestedUnkeyedContainer(forKey:)();
    uint64_t v16 = v12;
    uint64_t v17 = type metadata accessor for MediaAPIApp(0);
    uint64_t v20 = v31;
    sub_100239C90((uint64_t)v29, v30);
    sub_10040C260(&qword_100662AE0, (void (*)(uint64_t))type metadata accessor for MediaAPIApp);
    uint64_t v10 = sub_100406C34(v17);
    LOBYTE(v24) = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.nestedUnkeyedContainer(forKey:)();
    uint64_t v20 = v28;
    sub_100239C90((uint64_t)v26, v27);
    sub_10040EA94();
    sub_100406C34((uint64_t)&type metadata for MediaAPIUpdates.Response.DeferredUpdate);
    char v32 = 2;
    sub_10024A974();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v14);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v6);
    uint64_t v18 = v24;
    unint64_t v19 = v25;
    sub_10018B2A8(v24, v25);
    sub_100014524((uint64_t)v26);
    sub_100014524((uint64_t)v29);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10018B2A8(v18, v19);
    sub_10018AE44(v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100014524((uint64_t)v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10018AE44(v18, v19);
  }
  return v10;
}

unint64_t sub_10040E8AC(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  unint64_t v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease();
  if (v5 >= 3) {
    return 3;
  }
  else {
    return v5;
  }
}

unint64_t sub_10040E8F4()
{
  unint64_t result = qword_100662AA0;
  if (!qword_100662AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662AA0);
  }
  return result;
}

unint64_t sub_10040E948()
{
  unint64_t result = qword_100662AB0;
  if (!qword_100662AB0)
  {
    sub_10017B924(&qword_100662AA8);
    sub_10040C260(&qword_100662AB8, (void (*)(uint64_t))type metadata accessor for MediaAPIUpdates.App);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662AB0);
  }
  return result;
}

unint64_t sub_10040E9EC()
{
  unint64_t result = qword_100662AD0;
  if (!qword_100662AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662AD0);
  }
  return result;
}

unint64_t sub_10040EA40()
{
  unint64_t result = qword_100662AD8;
  if (!qword_100662AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662AD8);
  }
  return result;
}

unint64_t sub_10040EA94()
{
  unint64_t result = qword_100662AE8;
  if (!qword_100662AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662AE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaAPIUpdates.Response.DeferredUpdate()
{
  return &type metadata for MediaAPIUpdates.Response.DeferredUpdate;
}

unsigned char *_s28ManagedAppDistributionDaemon19MediaAPIUpdateErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10040EB94);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaAPIUpdates.Response.CodingKeys()
{
  return &type metadata for MediaAPIUpdates.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for MediaAPIUpdates.Response.ResultsCodingKeys()
{
  return &type metadata for MediaAPIUpdates.Response.ResultsCodingKeys;
}

unsigned char *_s28ManagedAppDistributionDaemon15MediaAPIUpdatesO3AppV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10040ECA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaAPIUpdates.RequestBody.CodingKeys()
{
  return &type metadata for MediaAPIUpdates.RequestBody.CodingKeys;
}

unint64_t sub_10040ECE4()
{
  unint64_t result = qword_100662AF0;
  if (!qword_100662AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662AF0);
  }
  return result;
}

unint64_t sub_10040ED3C()
{
  unint64_t result = qword_100662AF8;
  if (!qword_100662AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662AF8);
  }
  return result;
}

unint64_t sub_10040ED94()
{
  unint64_t result = qword_100662B00;
  if (!qword_100662B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662B00);
  }
  return result;
}

unint64_t sub_10040EDEC()
{
  unint64_t result = qword_100662B08;
  if (!qword_100662B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662B08);
  }
  return result;
}

unint64_t sub_10040EE44()
{
  unint64_t result = qword_100662B10;
  if (!qword_100662B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662B10);
  }
  return result;
}

unint64_t sub_10040EE9C()
{
  unint64_t result = qword_100662B18;
  if (!qword_100662B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662B18);
  }
  return result;
}

unint64_t sub_10040EEF4()
{
  unint64_t result = qword_100662B20;
  if (!qword_100662B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662B20);
  }
  return result;
}

unint64_t sub_10040EF4C()
{
  unint64_t result = qword_100662B28;
  if (!qword_100662B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662B28);
  }
  return result;
}

unint64_t sub_10040EFA4()
{
  unint64_t result = qword_100662B30;
  if (!qword_100662B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662B30);
  }
  return result;
}

unint64_t sub_10040EFF8()
{
  unint64_t result = qword_100662B40;
  if (!qword_100662B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662B40);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MediaAPIUpdates.Response.DeferredUpdate.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10040F118);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaAPIUpdates.Response.DeferredUpdate.CodingKeys()
{
  return &type metadata for MediaAPIUpdates.Response.DeferredUpdate.CodingKeys;
}

unint64_t sub_10040F154()
{
  unint64_t result = qword_100662B48;
  if (!qword_100662B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662B48);
  }
  return result;
}

unint64_t sub_10040F1AC()
{
  unint64_t result = qword_100662B50;
  if (!qword_100662B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662B50);
  }
  return result;
}

unint64_t sub_10040F204()
{
  unint64_t result = qword_100662B58;
  if (!qword_100662B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662B58);
  }
  return result;
}

Swift::Int sub_10040F270()
{
  return Hasher._finalize()();
}

Swift::Int sub_10040F38C()
{
  return Hasher._finalize()();
}

Swift::Int sub_10040F488()
{
  return Hasher._finalize()();
}

Swift::Int sub_10040F5AC()
{
  return Hasher._finalize()();
}

Swift::Int sub_10040F6CC()
{
  return Hasher._finalize()();
}

Swift::Int sub_10040F7C4()
{
  return Hasher._finalize()();
}

Swift::Int sub_10040F8E8()
{
  return Hasher._finalize()();
}

Swift::Int sub_10040F990()
{
  return Hasher._finalize()();
}

Swift::Int sub_10040FA90()
{
  return Hasher._finalize()();
}

Swift::Int sub_10040FBA4()
{
  return Hasher._finalize()();
}

unint64_t sub_10040FCA0(char a1)
{
  unint64_t result = 0xD000000000000019;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10040FD50(char *a1, char *a2)
{
  return sub_10051C25C(*a1, *a2);
}

Swift::Int sub_10040FD5C()
{
  return sub_10040F990();
}

uint64_t sub_10040FD64()
{
  return sub_100449A60();
}

Swift::Int sub_10040FD6C()
{
  return sub_10044B234();
}

unint64_t sub_10040FD74@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100410634(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_10040FDA4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10040FCA0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_10040FDD0(void *a1@<X8>)
{
  *a1 = &off_1006396E8;
}

id sub_10040FF88()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SecureStorageEntity.Entity();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SecureStorageEntity.Entity()
{
  return self;
}

unint64_t sub_10040FFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000172F8(&qword_100662B88);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A9D80;
  *(unsigned char *)(inited + 32) = 3;
  if (a3)
  {
    uint64_t v9 = sub_1000172F8((uint64_t *)&unk_10065C5D0);
    uint64_t v10 = sub_10027210C((unint64_t *)&qword_10065DEA8);
    uint64_t v11 = sub_10027210C(&qword_10065DEC0);
    uint64_t v12 = a3;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    *(void *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0;
  }
  *(void *)(inited + 40) = v12;
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = v11;
  *(unsigned char *)(inited + 88) = 2;
  if (a2)
  {
    uint64_t v13 = sub_1000172F8((uint64_t *)&unk_10065C5D0);
    uint64_t v14 = sub_10027210C((unint64_t *)&qword_10065DEA8);
    uint64_t v15 = sub_10027210C(&qword_10065DEC0);
    uint64_t v16 = a2;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    *(void *)(inited + 104) = 0;
    *(void *)(inited + 112) = 0;
  }
  *(void *)(inited + 96) = v16;
  *(void *)(inited + 120) = v13;
  *(void *)(inited + 128) = v14;
  *(void *)(inited + 136) = v15;
  *(unsigned char *)(inited + 144) = 0;
  *(void *)(inited + 176) = sub_1000172F8((uint64_t *)&unk_10065C5D0);
  *(void *)(inited + 184) = sub_10027210C((unint64_t *)&qword_10065DEA8);
  *(void *)(inited + 192) = sub_10027210C(&qword_10065DEC0);
  *(void *)(inited + 152) = a1;
  *(unsigned char *)(inited + 200) = 4;
  if (a4)
  {
    uint64_t v17 = sub_1000172F8(&qword_10065D008);
    uint64_t v18 = sub_10024AA1C(&qword_10065D010);
    uint64_t v19 = sub_10024AA1C((unint64_t *)&qword_10065D020);
    uint64_t v20 = a4;
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    *(void *)(inited + 216) = 0;
    *(void *)(inited + 224) = 0;
  }
  *(void *)(inited + 208) = v20;
  *(void *)(inited + 232) = v17;
  *(void *)(inited + 240) = v18;
  *(void *)(inited + 248) = v19;
  *(unsigned char *)(inited + 256) = 1;
  *(void *)(inited + 288) = &type metadata for Int;
  *(void *)(inited + 296) = &protocol witness table for Int;
  *(void *)(inited + 304) = &protocol witness table for Int;
  *(void *)(inited + 264) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_10044BD4C(inited);
}

unsigned char *storeEnumTagSinglePayload for SecureStorageEntity.Property(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004103A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureStorageEntity.Property()
{
  return &type metadata for SecureStorageEntity.Property;
}

ValueMetadata *type metadata accessor for SecureStorageEntity()
{
  return &type metadata for SecureStorageEntity;
}

unint64_t sub_1004103F4()
{
  unint64_t result = qword_100662B90;
  if (!qword_100662B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662B90);
  }
  return result;
}

unint64_t sub_10041044C()
{
  unint64_t result = qword_100662BC8;
  if (!qword_100662BC8)
  {
    sub_10017B924(&qword_100662BD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662BC8);
  }
  return result;
}

unint64_t sub_1004104AC()
{
  unint64_t result = qword_100662BD8;
  if (!qword_100662BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662BD8);
  }
  return result;
}

unint64_t sub_100410500(void *a1)
{
  a1[1] = sub_100410538();
  a1[2] = sub_10041058C();
  unint64_t result = sub_1004105E0();
  a1[3] = result;
  return result;
}

unint64_t sub_100410538()
{
  unint64_t result = qword_100662BE0;
  if (!qword_100662BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662BE0);
  }
  return result;
}

unint64_t sub_10041058C()
{
  unint64_t result = qword_100662BE8;
  if (!qword_100662BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662BE8);
  }
  return result;
}

unint64_t sub_1004105E0()
{
  unint64_t result = qword_100662BF0;
  if (!qword_100662BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662BF0);
  }
  return result;
}

unint64_t sub_100410634(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100639650, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

uint64_t sub_100410680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char a14, uint64_t a15)
{
  uint64_t v19 = (int *)type metadata accessor for AppInstallTemplate();
  uint64_t v20 = a9 + v19[7];
  uint64_t v21 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  uint64_t v22 = (void *)(a9 + v19[10]);
  *uint64_t v22 = 0;
  v22[1] = 0;
  uint64_t v23 = (void *)(a9 + v19[14]);
  void *v23 = 0;
  v23[1] = 0;
  uint64_t v24 = a9 + v19[16];
  uint64_t v25 = type metadata accessor for UUID();
  uint64_t v26 = *(void *)(v25 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v24, 1, 1, v25);
  *(unsigned char *)(a9 + v19[17]) = 2;
  *(_OWORD *)(a9 + v19[19]) = xmmword_1005A5CE0;
  *(void *)(a9 + v19[20]) = 0;
  uint64_t v27 = a9 + v19[21];
  *(void *)uint64_t v27 = 0;
  *(unsigned char *)(v27 + 8) = 1;
  *(_DWORD *)(a9 + v19[22]) = 2;
  uint64_t v28 = a9 + v19[23];
  *(void *)uint64_t v28 = 0;
  *(unsigned char *)(v28 + 8) = 1;
  uint64_t v29 = a9 + v19[24];
  *(void *)uint64_t v29 = 0;
  *(unsigned char *)(v29 + 8) = 1;
  static Platform.current.getter();
  *(unsigned char *)(a9 + v19[31]) = 0;
  uint64_t v30 = (void *)(a9 + v19[32]);
  *uint64_t v30 = 0;
  v30[1] = 0;
  *(_OWORD *)(a9 + v19[33]) = xmmword_1005A5CE0;
  uint64_t v31 = (void *)(a9 + v19[34]);
  void *v31 = 0;
  v31[1] = 0;
  uint64_t v32 = a9 + v19[35];
  *(void *)uint64_t v32 = 0;
  *(void *)(v32 + 8) = 0;
  *(unsigned char *)(v32 + 16) = -1;
  uint64_t v33 = (void *)(a9 + v19[36]);
  void *v33 = 0;
  v33[1] = 0;
  *(unsigned char *)(a9 + v19[37]) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(a9, a1, v25);
  uint64_t v34 = a9 + v19[13];
  uint64_t v35 = type metadata accessor for AppInstallRequestType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 32))(v34, a2, v35);
  *(void *)(a9 + v19[5]) = a15;
  uint64_t v37 = (void *)(a9 + v19[8]);
  void *v37 = a3;
  v37[1] = a4;
  long long v38 = (void *)(a9 + v19[9]);
  void *v38 = a5;
  v38[1] = a6;
  long long v39 = (void *)(a9 + v19[29]);
  *long long v39 = a7;
  v39[1] = a8;
  *(unsigned char *)(a9 + v19[25]) = a13;
  *(unsigned char *)(a9 + v19[26]) = a14;
  long long v40 = (void *)(a9 + v19[15]);
  *long long v40 = a10;
  v40[1] = a11;
  *(void *)(a9 + v19[18]) = a12;
  uint64_t v41 = a9 + v19[6];
  *(void *)uint64_t v41 = 0;
  *(unsigned char *)(v41 + 8) = 1;
  long long v42 = (void *)(a9 + v19[11]);
  *long long v42 = 0;
  v42[1] = 0;
  *(unsigned char *)(a9 + v19[27]) = 0;
  *(unsigned char *)(a9 + v19[28]) = 0;
  *(unsigned char *)(a9 + v19[12]) = 0;
  return result;
}

unint64_t sub_1004109AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000172F8(&qword_10065C9B0);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v148 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000172F8(&qword_10065C3C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000172F8(&qword_100662BF8);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1005AE030;
  *(unsigned char *)(v8 + 32) = 0;
  uint64_t v9 = (int *)type metadata accessor for AppInstallTemplate();
  uint64_t v10 = v9;
  uint64_t v11 = (uint64_t *)(v1 + v9[21]);
  if (v11[1])
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    *(void *)(v8 + 48) = 0;
    *(void *)(v8 + 56) = 0;
  }
  else
  {
    uint64_t v12 = *v11;
    uint64_t v15 = &protocol witness table for UInt64;
    uint64_t v14 = &protocol witness table for UInt64;
    uint64_t v13 = &type metadata for UInt64;
  }
  *(void *)(v8 + 40) = v12;
  *(void *)(v8 + 64) = v13;
  *(void *)(v8 + 72) = v14;
  *(void *)(v8 + 80) = v15;
  *(unsigned char *)(v8 + 88) = 1;
  uint64_t v16 = (uint64_t *)(v1 + v9[6]);
  if (v16[1])
  {
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    *(void *)(v8 + 104) = 0;
    *(void *)(v8 + 112) = 0;
  }
  else
  {
    uint64_t v17 = *v16;
    uint64_t v20 = &protocol witness table for Int;
    uint64_t v19 = &protocol witness table for Int;
    uint64_t v18 = &type metadata for Int;
  }
  *(void *)(v8 + 96) = v17;
  *(void *)(v8 + 120) = v18;
  *(void *)(v8 + 128) = v19;
  *(void *)(v8 + 136) = v20;
  *(unsigned char *)(v8 + 144) = 2;
  uint64_t v21 = (uint64_t *)(v1 + v9[23]);
  if (v21[1])
  {
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    unint64_t v24 = 0;
    unint64_t v25 = 0;
    *(void *)(v8 + 160) = 0;
    *(void *)(v8 + 168) = 0;
  }
  else
  {
    uint64_t v22 = *v21;
    unint64_t v24 = sub_10024A634();
    uint64_t v23 = &type metadata for AppleItemID;
    unint64_t v25 = sub_100411EB4();
  }
  *(void *)(v8 + 152) = v22;
  *(void *)(v8 + 176) = v23;
  *(void *)(v8 + 184) = v24;
  *(void *)(v8 + 192) = v25;
  *(unsigned char *)(v8 + 200) = 3;
  uint64_t v26 = (uint64_t *)(v1 + v10[24]);
  if (v26[1])
  {
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    unint64_t v29 = 0;
    unint64_t v30 = 0;
    *(void *)(v8 + 216) = 0;
    *(void *)(v8 + 224) = 0;
  }
  else
  {
    uint64_t v27 = *v26;
    unint64_t v29 = sub_10024A5E0();
    uint64_t v28 = &type metadata for AppleVersionID;
    unint64_t v30 = sub_100411E60();
  }
  *(void *)(v8 + 208) = v27;
  *(void *)(v8 + 232) = v28;
  *(void *)(v8 + 240) = v29;
  *(void *)(v8 + 248) = v30;
  *(unsigned char *)(v8 + 256) = 4;
  char v31 = *(unsigned char *)(v1 + v10[28]);
  *(void *)(v8 + 288) = &type metadata for Bool;
  *(void *)(v8 + 296) = &protocol witness table for Bool;
  *(void *)(v8 + 304) = &protocol witness table for Bool;
  *(unsigned char *)(v8 + 264) = v31;
  *(unsigned char *)(v8 + 312) = 5;
  sub_100017238(v1 + v10[7], (uint64_t)v7, &qword_10065C3C0);
  uint64_t v32 = type metadata accessor for URL();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v7, 1, v32) == 1)
  {
    sub_10001729C((uint64_t)v7, &qword_10065C3C0);
    *(_OWORD *)(v8 + 320) = 0u;
    *(_OWORD *)(v8 + 336) = 0u;
    *(_OWORD *)(v8 + 352) = 0u;
  }
  else
  {
    *(void *)(v8 + 344) = v32;
    *(void *)(v8 + 352) = sub_100411E18(&qword_10065CFD8, (void (*)(uint64_t))&type metadata accessor for URL);
    *(void *)(v8 + 360) = sub_100411E18(&qword_10065CFE0, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v34 = sub_10019CE94((uint64_t *)(v8 + 320));
    (*(void (**)(uint64_t *, char *, uint64_t))(v33 + 32))(v34, v7, v32);
  }
  uint64_t v35 = (uint64_t)v4;
  *(unsigned char *)(v8 + 368) = 6;
  uint64_t v36 = (uint64_t *)(v1 + v10[8]);
  uint64_t v37 = *v36;
  uint64_t v38 = v36[1];
  *(void *)(v8 + 400) = &type metadata for String;
  *(void *)(v8 + 408) = &protocol witness table for String;
  *(void *)(v8 + 416) = &protocol witness table for String;
  *(void *)(v8 + 376) = v37;
  *(void *)(v8 + 384) = v38;
  *(unsigned char *)(v8 + 424) = 7;
  long long v39 = (uint64_t *)(v1 + v10[9]);
  uint64_t v41 = *v39;
  uint64_t v40 = v39[1];
  *(void *)(v8 + 456) = &type metadata for String;
  *(void *)(v8 + 464) = &protocol witness table for String;
  *(void *)(v8 + 472) = &protocol witness table for String;
  *(void *)(v8 + 432) = v41;
  *(void *)(v8 + 440) = v40;
  uint64_t v152 = v40;
  *(unsigned char *)(v8 + 480) = 8;
  long long v42 = (uint64_t *)(v1 + v10[29]);
  uint64_t v43 = *v42;
  uint64_t v44 = v42[1];
  *(void *)(v8 + 512) = &type metadata for String;
  *(void *)(v8 + 520) = &protocol witness table for String;
  *(void *)(v8 + 528) = &protocol witness table for String;
  *(void *)(v8 + 488) = v43;
  *(void *)(v8 + 496) = v44;
  *(unsigned char *)(v8 + 536) = 9;
  unsigned int v45 = (uint64_t *)(v1 + v10[10]);
  uint64_t v46 = v45[1];
  if (v46)
  {
    uint64_t v47 = &protocol witness table for String;
    uint64_t v48 = *v45;
    uint64_t v49 = &protocol witness table for String;
    uint64_t v50 = v46;
    uint64_t v51 = &type metadata for String;
  }
  else
  {
    uint64_t v48 = 0;
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    uint64_t v49 = 0;
    uint64_t v47 = 0;
    *(void *)(v8 + 560) = 0;
  }
  *(void *)(v8 + 544) = v48;
  *(void *)(v8 + 552) = v50;
  *(void *)(v8 + 568) = v51;
  *(void *)(v8 + 576) = v49;
  *(void *)(v8 + 584) = v47;
  *(unsigned char *)(v8 + 592) = 10;
  sub_100017238(v1 + v10[16], v35, &qword_10065C9B0);
  uint64_t v52 = type metadata accessor for UUID();
  uint64_t v53 = *(void *)(v52 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v35, 1, v52) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10001729C(v35, &qword_10065C9B0);
    *(_OWORD *)(v8 + 600) = 0u;
    *(_OWORD *)(v8 + 616) = 0u;
    *(_OWORD *)(v8 + 632) = 0u;
  }
  else
  {
    *(void *)(v8 + 624) = v52;
    uint64_t v151 = v38;
    *(void *)(v8 + 632) = sub_100411E18((unint64_t *)&unk_10065C920, (void (*)(uint64_t))&type metadata accessor for UUID);
    *(void *)(v8 + 640) = sub_100411E18(&qword_10065CF80, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v54 = sub_10019CE94((uint64_t *)(v8 + 600));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v53 + 32))(v54, v35, v52);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(v8 + 648) = 11;
  uint64_t v55 = (uint64_t *)(v1 + v10[11]);
  uint64_t v56 = v55[1];
  uint64_t v152 = v56;
  if (v56)
  {
    unint64_t v57 = &protocol witness table for String;
    uint64_t v58 = *v55;
    uint64_t v59 = &protocol witness table for String;
    os_log_type_t v60 = &type metadata for String;
  }
  else
  {
    uint64_t v58 = 0;
    os_log_type_t v60 = 0;
    uint64_t v59 = 0;
    unint64_t v57 = 0;
    *(void *)(v8 + 672) = 0;
  }
  *(void *)(v8 + 656) = v58;
  *(void *)(v8 + 664) = v56;
  *(void *)(v8 + 680) = v60;
  *(void *)(v8 + 688) = v59;
  *(void *)(v8 + 696) = v57;
  *(unsigned char *)(v8 + 704) = 13;
  char v61 = *(unsigned char *)(v1 + v10[12]);
  *(void *)(v8 + 736) = &type metadata for Bool;
  *(void *)(v8 + 744) = &protocol witness table for Bool;
  *(void *)(v8 + 752) = &protocol witness table for Bool;
  *(unsigned char *)(v8 + 712) = v61;
  *(unsigned char *)(v8 + 760) = 15;
  *(void *)(v8 + 792) = v52;
  *(void *)(v8 + 800) = sub_100411E18((unint64_t *)&unk_10065C920, (void (*)(uint64_t))&type metadata accessor for UUID);
  *(void *)(v8 + 808) = sub_100411E18(&qword_10065CF80, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v62 = sub_10019CE94((uint64_t *)(v8 + 768));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v53 + 16))(v62, v1, v52);
  *(unsigned char *)(v8 + 816) = 17;
  uint64_t v63 = (uint64_t *)(v1 + v10[32]);
  uint64_t v64 = v63[1];
  if (v64)
  {
    uint64_t v65 = &protocol witness table for String;
    uint64_t v66 = *v63;
    unint64_t v67 = &protocol witness table for String;
    uint64_t v68 = v64;
    uint64_t v69 = &type metadata for String;
  }
  else
  {
    uint64_t v66 = 0;
    uint64_t v68 = 0;
    uint64_t v69 = 0;
    unint64_t v67 = 0;
    uint64_t v65 = 0;
    *(void *)(v8 + 840) = 0;
  }
  *(void *)(v8 + 824) = v66;
  *(void *)(v8 + 832) = v68;
  *(void *)(v8 + 848) = v69;
  *(void *)(v8 + 856) = v67;
  *(void *)(v8 + 864) = v65;
  *(unsigned char *)(v8 + 872) = 30;
  int64_t v70 = (uint64_t *)(v1 + v10[14]);
  uint64_t v71 = v70[1];
  uint64_t v150 = v71;
  uint64_t v151 = v64;
  if (v71)
  {
    uint64_t v72 = &protocol witness table for String;
    uint64_t v73 = *v70;
    uint64_t v74 = &protocol witness table for String;
    uint64_t v75 = &type metadata for String;
  }
  else
  {
    uint64_t v73 = 0;
    uint64_t v75 = 0;
    uint64_t v74 = 0;
    uint64_t v72 = 0;
    *(void *)(v8 + 896) = 0;
  }
  *(void *)(v8 + 880) = v73;
  *(void *)(v8 + 888) = v71;
  *(void *)(v8 + 904) = v75;
  *(void *)(v8 + 912) = v74;
  *(void *)(v8 + 920) = v72;
  *(unsigned char *)(v8 + 928) = 19;
  char v76 = *(unsigned char *)(v1 + v10[27]);
  *(void *)(v8 + 960) = &type metadata for Bool;
  *(void *)(v8 + 968) = &protocol witness table for Bool;
  *(void *)(v8 + 976) = &protocol witness table for Bool;
  *(unsigned char *)(v8 + 936) = v76;
  *(unsigned char *)(v8 + 984) = 16;
  uint64_t v77 = v1 + v10[13];
  uint64_t v78 = type metadata accessor for AppInstallRequestType();
  *(void *)(v8 + 1016) = v78;
  *(void *)(v8 + 1024) = sub_100411E18(&qword_10065D000, (void (*)(uint64_t))&type metadata accessor for AppInstallRequestType);
  *(void *)(v8 + 1032) = sub_100411E18(&qword_100662C00, (void (*)(uint64_t))&type metadata accessor for AppInstallRequestType);
  unint64_t v79 = sub_10019CE94((uint64_t *)(v8 + 992));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16))(v79, v77, v78);
  *(unsigned char *)(v8 + 1040) = 20;
  char v80 = *(unsigned char *)(v1 + v10[31]);
  *(void *)(v8 + 1072) = &type metadata for Bool;
  *(void *)(v8 + 1080) = &protocol witness table for Bool;
  *(void *)(v8 + 1088) = &protocol witness table for Bool;
  *(unsigned char *)(v8 + 1048) = v80;
  *(unsigned char *)(v8 + 1096) = 21;
  char v81 = *(unsigned char *)(v1 + v10[25]);
  *(void *)(v8 + 1128) = &type metadata for Bool;
  *(void *)(v8 + 1136) = &protocol witness table for Bool;
  *(void *)(v8 + 1144) = &protocol witness table for Bool;
  *(unsigned char *)(v8 + 1104) = v81;
  *(unsigned char *)(v8 + 1152) = 22;
  uint64_t v82 = *(void **)(v1 + v10[5]);
  *(void *)(v8 + 1184) = type metadata accessor for LogKey();
  *(void *)(v8 + 1192) = sub_100411E18(&qword_10065CF68, (void (*)(uint64_t))&type metadata accessor for LogKey);
  *(void *)(v8 + 1200) = sub_100411E18(&qword_100662C08, (void (*)(uint64_t))&type metadata accessor for LogKey);
  id v149 = v82;
  *(void *)(v8 + 1160) = v82;
  *(unsigned char *)(v8 + 1208) = 23;
  int v83 = *(_DWORD *)(v1 + v10[22]);
  if (v83 == 2)
  {
    unint64_t v84 = 0;
    unint64_t v85 = 0;
    unint64_t v86 = 0;
    *(void *)(v8 + 1216) = 0;
    *(void *)(v8 + 1224) = 0;
    *(void *)(v8 + 1232) = 0;
  }
  else
  {
    unint64_t v85 = sub_10024AAD4();
    unint64_t v86 = sub_100411DC4();
    *(unsigned char *)(v8 + 1216) = v83 & 1;
    *(unsigned char *)(v8 + 1217) = BYTE1(v83) & 1;
    *(unsigned char *)(v8 + 1218) = BYTE2(v83) & 1;
    *(unsigned char *)(v8 + 1219) = HIBYTE(v83) & 1;
    unint64_t v84 = &type metadata for NetworkPolicy.Decision;
  }
  *(void *)(v8 + 1240) = v84;
  *(void *)(v8 + 1248) = v85;
  *(void *)(v8 + 1256) = v86;
  *(unsigned char *)(v8 + 1264) = 24;
  uint64_t v87 = (uint64_t *)(v1 + v10[15]);
  uint64_t v88 = *v87;
  unint64_t v89 = v87[1];
  *(void *)(v8 + 1296) = &type metadata for Persona;
  *(void *)(v8 + 1304) = sub_10024AA80();
  *(void *)(v8 + 1312) = sub_100411B64();
  *(void *)(v8 + 1272) = v88;
  *(void *)(v8 + 1280) = v89;
  *(unsigned char *)(v8 + 1320) = 27;
  uint64_t v90 = v1 + v10[30];
  uint64_t v91 = type metadata accessor for Platform();
  *(void *)(v8 + 1352) = v91;
  *(void *)(v8 + 1360) = sub_100411E18(&qword_10065D030, (void (*)(uint64_t))&type metadata accessor for Platform);
  *(void *)(v8 + 1368) = sub_100411E18(&qword_100662C18, (void (*)(uint64_t))&type metadata accessor for Platform);
  uint64_t v92 = sub_10019CE94((uint64_t *)(v8 + 1328));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v91 - 8) + 16))(v92, v90, v91);
  *(unsigned char *)(v8 + 1376) = 29;
  char v93 = *(unsigned char *)(v1 + v10[17]);
  *(void *)(v8 + 1408) = &type metadata for AppInstallPriority;
  *(void *)(v8 + 1416) = sub_10024ABBC();
  *(void *)(v8 + 1424) = sub_100411BB8();
  *(unsigned char *)(v8 + 1384) = v93;
  *(unsigned char *)(v8 + 1432) = 31;
  uint64_t v94 = (uint64_t *)(v1 + v10[19]);
  uint64_t v95 = *v94;
  unint64_t v96 = v94[1];
  if (v96 >> 60 == 15)
  {
    uint64_t v97 = 0;
    unint64_t v98 = 0;
    uint64_t v99 = 0;
    unint64_t v100 = 0;
    unint64_t v101 = 0;
    *(void *)(v8 + 1456) = 0;
  }
  else
  {
    unint64_t v100 = sub_10024AD60();
    uint64_t v99 = &type metadata for AppStoreReceipt;
    unint64_t v101 = sub_100411D70();
    uint64_t v97 = v95;
    unint64_t v98 = v96;
  }
  *(void *)(v8 + 1440) = v97;
  *(void *)(v8 + 1448) = v98;
  *(void *)(v8 + 1464) = v99;
  *(void *)(v8 + 1472) = v100;
  *(void *)(v8 + 1480) = v101;
  *(unsigned char *)(v8 + 1488) = 32;
  char v102 = *(unsigned char *)(v1 + v10[26]);
  *(void *)(v8 + 1520) = &type metadata for AppInstallSource;
  *(void *)(v8 + 1528) = sub_10024ACB8();
  *(void *)(v8 + 1536) = sub_100411C0C();
  *(unsigned char *)(v8 + 1496) = v102;
  *(unsigned char *)(v8 + 1544) = 33;
  uint64_t v103 = *(void **)(v1 + v10[20]);
  if (v103)
  {
    unint64_t v104 = sub_10024A538();
    uint64_t v105 = &type metadata for StoreMetadata;
    unint64_t v106 = sub_100411D1C();
  }
  else
  {
    uint64_t v105 = 0;
    unint64_t v104 = 0;
    unint64_t v106 = 0;
    *(_OWORD *)(v8 + 1560) = 0u;
  }
  *(void *)(v8 + 1552) = v103;
  *(void *)(v8 + 1576) = v105;
  *(void *)(v8 + 1584) = v104;
  *(void *)(v8 + 1592) = v106;
  swift_bridgeObjectRetain();
  id v107 = v149;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001C5E20(v88, v89);
  sub_10018B2A8(v95, v96);
  id v108 = v103;
  unint64_t v109 = sub_10044BA14(v8);
  unint64_t v110 = (uint64_t *)(v1 + v10[33]);
  unint64_t v111 = v110[1];
  if (v111 >> 60 == 15)
  {
    swift_bridgeObjectRetain();
    unint64_t v112 = sub_100451F20(34);
    char v114 = v113;
    swift_bridgeObjectRelease();
    if (v114)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v154[0] = v109;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10052BBA8();
        unint64_t v109 = v154[0];
      }
      sub_100411C60(*(void *)(v109 + 56) + 48 * v112, (uint64_t)&v155);
      sub_10042F6F0(v112, v109);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v155 = 0;
      unint64_t v156 = 0;
      uint64_t v157 = 0;
      uint64_t v158 = 1;
      uint64_t v159 = 0;
      uint64_t v160 = 0;
    }
    sub_10001729C((uint64_t)&v155, &qword_100662C30);
  }
  else
  {
    uint64_t v116 = *v110;
    uint64_t v158 = (uint64_t)&type metadata for Data;
    uint64_t v159 = (void *)sub_10024A974();
    uint64_t v160 = (void *)sub_10024A9C8();
    uint64_t v155 = v116;
    unint64_t v156 = v111;
    sub_100411C60((uint64_t)&v155, (uint64_t)v154);
    sub_100012670(v116, v111);
    char v117 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v153 = v109;
    sub_100529B8C((uint64_t)v154, 34, v117);
    unint64_t v109 = v153;
    swift_bridgeObjectRelease();
  }
  uint64_t v118 = (uint64_t *)(v1 + v10[34]);
  unint64_t v119 = v118[1];
  if (v119)
  {
    uint64_t v120 = *v118;
    uint64_t v158 = (uint64_t)&type metadata for String;
    uint64_t v159 = &protocol witness table for String;
    uint64_t v160 = &protocol witness table for String;
    uint64_t v155 = v120;
    unint64_t v156 = v119;
    sub_100411C60((uint64_t)&v155, (uint64_t)v154);
    swift_bridgeObjectRetain();
    char v121 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v153 = v109;
    sub_100529B8C((uint64_t)v154, 35, v121);
    unint64_t v109 = v153;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v122 = sub_100451F20(35);
    char v124 = v123;
    swift_bridgeObjectRelease();
    if (v124)
    {
      char v125 = swift_isUniquelyReferenced_nonNull_native();
      v154[0] = v109;
      if ((v125 & 1) == 0)
      {
        sub_10052BBA8();
        unint64_t v109 = v154[0];
      }
      sub_100411C60(*(void *)(v109 + 56) + 48 * v122, (uint64_t)&v155);
      sub_10042F6F0(v122, v109);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v155 = 0;
      unint64_t v156 = 0;
      uint64_t v157 = 0;
      uint64_t v158 = 1;
      uint64_t v159 = 0;
      uint64_t v160 = 0;
    }
    sub_10001729C((uint64_t)&v155, &qword_100662C30);
  }
  uint64_t v126 = v1 + v10[35];
  int v127 = *(unsigned __int8 *)(v126 + 16);
  if (v127 == 255)
  {
    swift_bridgeObjectRetain();
    unint64_t v128 = sub_100451F20(36);
    char v130 = v129;
    swift_bridgeObjectRelease();
    if (v130)
    {
      char v131 = swift_isUniquelyReferenced_nonNull_native();
      v154[0] = v109;
      if ((v131 & 1) == 0)
      {
        sub_10052BBA8();
        unint64_t v109 = v154[0];
      }
      sub_100411C60(*(void *)(v109 + 56) + 48 * v128, (uint64_t)&v155);
      sub_10042F6F0(v128, v109);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v155 = 0;
      unint64_t v156 = 0;
      uint64_t v157 = 0;
      uint64_t v158 = 1;
      uint64_t v159 = 0;
      uint64_t v160 = 0;
    }
    sub_10001729C((uint64_t)&v155, &qword_100662C30);
  }
  else
  {
    uint64_t v133 = *(void *)v126;
    unint64_t v132 = *(void *)(v126 + 8);
    char v134 = v127 & 1;
    uint64_t v158 = (uint64_t)&type metadata for AnyDistributor;
    uint64_t v159 = (void *)sub_10024A688();
    uint64_t v160 = (void *)sub_100411CC8();
    uint64_t v155 = v133;
    unint64_t v156 = v132;
    LOBYTE(v157) = v134;
    sub_100411C60((uint64_t)&v155, (uint64_t)v154);
    sub_1001C617C();
    char v135 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v153 = v109;
    sub_100529B8C((uint64_t)v154, 36, v135);
    unint64_t v109 = v153;
    swift_bridgeObjectRelease();
  }
  uint64_t v136 = (uint64_t *)(v1 + v10[36]);
  unint64_t v137 = v136[1];
  if (v137)
  {
    uint64_t v138 = *v136;
    uint64_t v158 = (uint64_t)&type metadata for String;
    uint64_t v159 = &protocol witness table for String;
    uint64_t v160 = &protocol witness table for String;
    uint64_t v155 = v138;
    unint64_t v156 = v137;
    sub_100411C60((uint64_t)&v155, (uint64_t)v154);
    swift_bridgeObjectRetain();
    char v139 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v153 = v109;
    sub_100529B8C((uint64_t)v154, 37, v139);
    unint64_t v109 = v153;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v140 = sub_100451F20(37);
    char v142 = v141;
    swift_bridgeObjectRelease();
    if (v142)
    {
      char v143 = swift_isUniquelyReferenced_nonNull_native();
      v154[0] = v109;
      if ((v143 & 1) == 0)
      {
        sub_10052BBA8();
        unint64_t v109 = v154[0];
      }
      sub_100411C60(*(void *)(v109 + 56) + 48 * v140, (uint64_t)&v155);
      sub_10042F6F0(v140, v109);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v155 = 0;
      unint64_t v156 = 0;
      uint64_t v157 = 0;
      uint64_t v158 = 1;
      uint64_t v159 = 0;
      uint64_t v160 = 0;
    }
    sub_10001729C((uint64_t)&v155, &qword_100662C30);
  }
  char v144 = *(unsigned char *)(v1 + v10[37]);
  uint64_t v158 = (uint64_t)&type metadata for Bool;
  uint64_t v159 = &protocol witness table for Bool;
  uint64_t v160 = &protocol witness table for Bool;
  LOBYTE(v155) = v144;
  sub_100411C60((uint64_t)&v155, (uint64_t)v154);
  char v145 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v153 = v109;
  sub_100529B8C((uint64_t)v154, 38, v145);
  unint64_t v146 = v153;
  swift_bridgeObjectRelease();
  return v146;
}

uint64_t type metadata accessor for AppInstallTemplate()
{
  uint64_t result = qword_100662CC0;
  if (!qword_100662CC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_100411B64()
{
  unint64_t result = qword_100662C10;
  if (!qword_100662C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662C10);
  }
  return result;
}

unint64_t sub_100411BB8()
{
  unint64_t result = qword_100662C20;
  if (!qword_100662C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662C20);
  }
  return result;
}

unint64_t sub_100411C0C()
{
  unint64_t result = qword_100662C28;
  if (!qword_100662C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662C28);
  }
  return result;
}

uint64_t sub_100411C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000172F8(&qword_10065CE70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100411CC8()
{
  unint64_t result = qword_100662C38;
  if (!qword_100662C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662C38);
  }
  return result;
}

unint64_t sub_100411D1C()
{
  unint64_t result = qword_100662C40;
  if (!qword_100662C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662C40);
  }
  return result;
}

unint64_t sub_100411D70()
{
  unint64_t result = qword_100662C48;
  if (!qword_100662C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662C48);
  }
  return result;
}

unint64_t sub_100411DC4()
{
  unint64_t result = qword_100662C50;
  if (!qword_100662C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662C50);
  }
  return result;
}

uint64_t sub_100411E18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100411E60()
{
  unint64_t result = qword_100662C58;
  if (!qword_100662C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662C58);
  }
  return result;
}

unint64_t sub_100411EB4()
{
  unint64_t result = qword_100662C60;
  if (!qword_100662C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662C60);
  }
  return result;
}

void *sub_100411F08(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v108 = *(void *)(v7 - 8);
    uint64_t v109 = v7;
    id v107 = *(void (**)(char *, char *, uint64_t))(v108 + 16);
    ((void (*)(void *, void *))v107)(a1, a2);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(void *)((char *)a1 + v8) = v10;
    uint64_t v11 = (char *)a1 + v9;
    uint64_t v12 = (char *)a2 + v9;
    *(void *)uint64_t v11 = *(void *)v12;
    v11[8] = v12[8];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for URL();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    id v19 = v10;
    if (v18(v15, 1, v16))
    {
      uint64_t v20 = sub_1000172F8(&qword_10065C3C0);
      memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v22 = a3[8];
    uint64_t v23 = a3[9];
    unint64_t v24 = (void *)((char *)a1 + v22);
    unint64_t v25 = (void *)((char *)a2 + v22);
    uint64_t v26 = v25[1];
    *unint64_t v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = (void *)((char *)a1 + v23);
    uint64_t v28 = (void *)((char *)a2 + v23);
    uint64_t v29 = v28[1];
    void *v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = a3[10];
    uint64_t v31 = a3[11];
    uint64_t v32 = (void *)((char *)a1 + v30);
    uint64_t v33 = (void *)((char *)a2 + v30);
    uint64_t v34 = v33[1];
    *uint64_t v32 = *v33;
    v32[1] = v34;
    uint64_t v35 = (void *)((char *)a1 + v31);
    uint64_t v36 = (void *)((char *)a2 + v31);
    uint64_t v37 = v36[1];
    void *v35 = *v36;
    v35[1] = v37;
    uint64_t v38 = a3[13];
    *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    unint64_t v111 = (char *)a1 + v38;
    unint64_t v110 = (char *)a2 + v38;
    uint64_t v39 = type metadata accessor for AppInstallRequestType();
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40(v111, v110, v39);
    uint64_t v41 = a3[14];
    uint64_t v42 = a3[15];
    uint64_t v43 = (void *)((char *)a1 + v41);
    uint64_t v44 = (void *)((char *)a2 + v41);
    uint64_t v45 = v44[1];
    *uint64_t v43 = *v44;
    v43[1] = v45;
    uint64_t v46 = (void *)((char *)a1 + v42);
    uint64_t v47 = (void *)((char *)a2 + v42);
    unint64_t v48 = *(void *)((char *)a2 + v42 + 8);
    swift_bridgeObjectRetain();
    if (v48 >= 2)
    {
      *uint64_t v46 = *v47;
      v46[1] = v48;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
    }
    uint64_t v49 = a3[16];
    uint64_t v50 = (char *)a1 + v49;
    uint64_t v51 = (char *)a2 + v49;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))((char *)a2 + v49, 1, v109))
    {
      uint64_t v52 = sub_1000172F8(&qword_10065C9B0);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      v107(v50, v51, v109);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v50, 0, 1, v109);
    }
    uint64_t v53 = a3[18];
    *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
    *(void *)((char *)a1 + v53) = *(void *)((char *)a2 + v53);
    uint64_t v54 = a3[19];
    uint64_t v55 = (char *)a1 + v54;
    uint64_t v56 = (_OWORD *)((char *)a2 + v54);
    unint64_t v57 = *(void *)((char *)a2 + v54 + 8);
    swift_bridgeObjectRetain();
    if (v57 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v55 = *v56;
    }
    else
    {
      uint64_t v58 = *(void *)v56;
      sub_100012670(v58, v57);
      *(void *)uint64_t v55 = v58;
      *((void *)v55 + 1) = v57;
    }
    uint64_t v59 = a3[20];
    uint64_t v60 = a3[21];
    char v61 = *(void **)((char *)a2 + v59);
    *(void *)((char *)a1 + v59) = v61;
    uint64_t v62 = (char *)a1 + v60;
    uint64_t v63 = (char *)a2 + v60;
    *(void *)uint64_t v62 = *(void *)v63;
    v62[8] = v63[8];
    uint64_t v64 = a3[23];
    *(_DWORD *)((char *)a1 + a3[22]) = *(_DWORD *)((char *)a2 + a3[22]);
    uint64_t v65 = (char *)a1 + v64;
    uint64_t v66 = (char *)a2 + v64;
    *(void *)uint64_t v65 = *(void *)v66;
    v65[8] = v66[8];
    uint64_t v67 = a3[24];
    uint64_t v68 = a3[25];
    uint64_t v69 = (char *)a1 + v67;
    int64_t v70 = (char *)a2 + v67;
    *(void *)uint64_t v69 = *(void *)v70;
    v69[8] = v70[8];
    *((unsigned char *)a1 + v68) = *((unsigned char *)a2 + v68);
    uint64_t v71 = a3[27];
    *((unsigned char *)a1 + a3[26]) = *((unsigned char *)a2 + a3[26]);
    *((unsigned char *)a1 + v71) = *((unsigned char *)a2 + v71);
    uint64_t v72 = a3[29];
    *((unsigned char *)a1 + a3[28]) = *((unsigned char *)a2 + a3[28]);
    uint64_t v73 = (void *)((char *)a1 + v72);
    uint64_t v74 = (void *)((char *)a2 + v72);
    uint64_t v75 = v74[1];
    *uint64_t v73 = *v74;
    v73[1] = v75;
    uint64_t v76 = a3[30];
    uint64_t v77 = (char *)a1 + v76;
    uint64_t v78 = (char *)a2 + v76;
    uint64_t v79 = type metadata accessor for Platform();
    char v80 = *(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16);
    id v81 = v61;
    swift_bridgeObjectRetain();
    v80(v77, v78, v79);
    uint64_t v82 = a3[32];
    *((unsigned char *)a1 + a3[31]) = *((unsigned char *)a2 + a3[31]);
    int v83 = (void *)((char *)a1 + v82);
    unint64_t v84 = (void *)((char *)a2 + v82);
    uint64_t v85 = v84[1];
    *int v83 = *v84;
    v83[1] = v85;
    uint64_t v86 = a3[33];
    uint64_t v87 = (char *)a1 + v86;
    uint64_t v88 = (_OWORD *)((char *)a2 + v86);
    unint64_t v89 = *(void *)((char *)a2 + v86 + 8);
    swift_bridgeObjectRetain();
    if (v89 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v87 = *v88;
    }
    else
    {
      uint64_t v90 = *(void *)v88;
      sub_100012670(v90, v89);
      *(void *)uint64_t v87 = v90;
      *((void *)v87 + 1) = v89;
    }
    uint64_t v91 = a3[34];
    uint64_t v92 = a3[35];
    char v93 = (void *)((char *)a1 + v91);
    uint64_t v94 = (void *)((char *)a2 + v91);
    uint64_t v95 = v94[1];
    *char v93 = *v94;
    v93[1] = v95;
    unint64_t v96 = (char *)a1 + v92;
    uint64_t v97 = (char *)a2 + v92;
    int v98 = *((unsigned __int8 *)a2 + v92 + 16);
    swift_bridgeObjectRetain();
    if (v98 == 255)
    {
      *(_OWORD *)unint64_t v96 = *(_OWORD *)v97;
      v96[16] = v97[16];
    }
    else
    {
      uint64_t v99 = *(void *)v97;
      uint64_t v100 = *((void *)v97 + 1);
      sub_1001C617C();
      *(void *)unint64_t v96 = v99;
      *((void *)v96 + 1) = v100;
      v96[16] = v98 & 1;
    }
    uint64_t v101 = a3[36];
    uint64_t v102 = a3[37];
    uint64_t v103 = (void *)((char *)a1 + v101);
    unint64_t v104 = (void *)((char *)a2 + v101);
    uint64_t v105 = v104[1];
    *uint64_t v103 = *v104;
    v103[1] = v105;
    *((unsigned char *)a1 + v102) = *((unsigned char *)a2 + v102);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1004124E8(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);

  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[13];
  uint64_t v11 = type metadata accessor for AppInstallRequestType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[15] + 8) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = a1 + a2[16];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4)) {
    v6(v12, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = (uint64_t *)(a1 + a2[19]);
  unint64_t v14 = v13[1];
  if (v14 >> 60 != 15) {
    sub_100013510(*v13, v14);
  }

  swift_bridgeObjectRelease();
  uint64_t v15 = a1 + a2[30];
  uint64_t v16 = type metadata accessor for Platform();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  swift_bridgeObjectRelease();
  uint64_t v17 = (uint64_t *)(a1 + a2[33]);
  unint64_t v18 = v17[1];
  if (v18 >> 60 != 15) {
    sub_100013510(*v17, v18);
  }
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + a2[35] + 16) != 255) {
    sub_10018ACBC();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100412804(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v106 = *(void *)(v6 - 8);
  uint64_t v107 = v6;
  uint64_t v105 = *(void (**)(void *, const void *, uint64_t))(v106 + 16);
  ((void (*)(uint64_t, uint64_t))v105)(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  unint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  id v18 = v9;
  if (v17(v14, 1, v15))
  {
    uint64_t v19 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  uint64_t v22 = (void *)(a1 + v20);
  uint64_t v23 = (void *)(a2 + v20);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  unint64_t v25 = (void *)(a1 + v21);
  uint64_t v26 = (void *)(a2 + v21);
  uint64_t v27 = v26[1];
  *unint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = a3[10];
  uint64_t v29 = a3[11];
  uint64_t v30 = (void *)(a1 + v28);
  uint64_t v31 = (void *)(a2 + v28);
  uint64_t v32 = v31[1];
  *uint64_t v30 = *v31;
  v30[1] = v32;
  uint64_t v33 = (void *)(a1 + v29);
  uint64_t v34 = (void *)(a2 + v29);
  uint64_t v35 = v34[1];
  void *v33 = *v34;
  v33[1] = v35;
  uint64_t v36 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  uint64_t v109 = a1 + v36;
  uint64_t v108 = a2 + v36;
  uint64_t v37 = type metadata accessor for AppInstallRequestType();
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38(v109, v108, v37);
  uint64_t v39 = a3[14];
  uint64_t v40 = a3[15];
  uint64_t v41 = (void *)(a1 + v39);
  uint64_t v42 = (void *)(a2 + v39);
  uint64_t v43 = v42[1];
  *uint64_t v41 = *v42;
  v41[1] = v43;
  uint64_t v44 = (void *)(a1 + v40);
  uint64_t v45 = (void *)(a2 + v40);
  unint64_t v46 = *(void *)(a2 + v40 + 8);
  swift_bridgeObjectRetain();
  if (v46 >= 2)
  {
    void *v44 = *v45;
    v44[1] = v46;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  }
  uint64_t v47 = a3[16];
  unint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (const void *)(a2 + v47);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(a2 + v47, 1, v107))
  {
    uint64_t v50 = sub_1000172F8(&qword_10065C9B0);
    memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    v105(v48, v49, v107);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v106 + 56))(v48, 0, 1, v107);
  }
  uint64_t v51 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(void *)(a1 + v51) = *(void *)(a2 + v51);
  uint64_t v52 = a3[19];
  uint64_t v53 = a1 + v52;
  uint64_t v54 = (_OWORD *)(a2 + v52);
  unint64_t v55 = *(void *)(a2 + v52 + 8);
  swift_bridgeObjectRetain();
  if (v55 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v53 = *v54;
  }
  else
  {
    uint64_t v56 = *(void *)v54;
    sub_100012670(v56, v55);
    *(void *)uint64_t v53 = v56;
    *(void *)(v53 + 8) = v55;
  }
  uint64_t v57 = a3[20];
  uint64_t v58 = a3[21];
  uint64_t v59 = *(void **)(a2 + v57);
  *(void *)(a1 + v57) = v59;
  uint64_t v60 = a1 + v58;
  uint64_t v61 = a2 + v58;
  *(void *)uint64_t v60 = *(void *)v61;
  *(unsigned char *)(v60 + 8) = *(unsigned char *)(v61 + 8);
  uint64_t v62 = a3[23];
  *(_DWORD *)(a1 + a3[22]) = *(_DWORD *)(a2 + a3[22]);
  uint64_t v63 = a1 + v62;
  uint64_t v64 = a2 + v62;
  *(void *)uint64_t v63 = *(void *)v64;
  *(unsigned char *)(v63 + 8) = *(unsigned char *)(v64 + 8);
  uint64_t v65 = a3[24];
  uint64_t v66 = a3[25];
  uint64_t v67 = a1 + v65;
  uint64_t v68 = a2 + v65;
  *(void *)uint64_t v67 = *(void *)v68;
  *(unsigned char *)(v67 + 8) = *(unsigned char *)(v68 + 8);
  *(unsigned char *)(a1 + v66) = *(unsigned char *)(a2 + v66);
  uint64_t v69 = a3[27];
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  *(unsigned char *)(a1 + v69) = *(unsigned char *)(a2 + v69);
  uint64_t v70 = a3[29];
  *(unsigned char *)(a1 + a3[28]) = *(unsigned char *)(a2 + a3[28]);
  uint64_t v71 = (void *)(a1 + v70);
  uint64_t v72 = (void *)(a2 + v70);
  uint64_t v73 = v72[1];
  void *v71 = *v72;
  v71[1] = v73;
  uint64_t v74 = a3[30];
  uint64_t v75 = a1 + v74;
  uint64_t v76 = a2 + v74;
  uint64_t v77 = type metadata accessor for Platform();
  uint64_t v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 16);
  id v79 = v59;
  swift_bridgeObjectRetain();
  v78(v75, v76, v77);
  uint64_t v80 = a3[32];
  *(unsigned char *)(a1 + a3[31]) = *(unsigned char *)(a2 + a3[31]);
  id v81 = (void *)(a1 + v80);
  uint64_t v82 = (void *)(a2 + v80);
  uint64_t v83 = v82[1];
  void *v81 = *v82;
  v81[1] = v83;
  uint64_t v84 = a3[33];
  uint64_t v85 = a1 + v84;
  uint64_t v86 = (_OWORD *)(a2 + v84);
  unint64_t v87 = *(void *)(a2 + v84 + 8);
  swift_bridgeObjectRetain();
  if (v87 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v85 = *v86;
  }
  else
  {
    uint64_t v88 = *(void *)v86;
    sub_100012670(v88, v87);
    *(void *)uint64_t v85 = v88;
    *(void *)(v85 + 8) = v87;
  }
  uint64_t v89 = a3[34];
  uint64_t v90 = a3[35];
  uint64_t v91 = (void *)(a1 + v89);
  uint64_t v92 = (void *)(a2 + v89);
  uint64_t v93 = v92[1];
  void *v91 = *v92;
  v91[1] = v93;
  uint64_t v94 = a1 + v90;
  uint64_t v95 = (uint64_t *)(a2 + v90);
  int v96 = *(unsigned __int8 *)(a2 + v90 + 16);
  swift_bridgeObjectRetain();
  if (v96 == 255)
  {
    *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
    *(unsigned char *)(v94 + 16) = *((unsigned char *)v95 + 16);
  }
  else
  {
    uint64_t v97 = *v95;
    uint64_t v98 = v95[1];
    sub_1001C617C();
    *(void *)uint64_t v94 = v97;
    *(void *)(v94 + 8) = v98;
    *(unsigned char *)(v94 + 16) = v96 & 1;
  }
  uint64_t v99 = a3[36];
  uint64_t v100 = a3[37];
  uint64_t v101 = (void *)(a1 + v99);
  uint64_t v102 = (void *)(a2 + v99);
  uint64_t v103 = v102[1];
  *uint64_t v101 = *v102;
  v101[1] = v103;
  *(unsigned char *)(a1 + v100) = *(unsigned char *)(a2 + v100);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100412D94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v118 = *(void *)(v6 - 8);
  uint64_t v119 = v6;
  char v117 = *(void (**)(void *, const void *, uint64_t))(v118 + 24);
  ((void (*)(uint64_t, uint64_t))v117)(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v14 = *v13;
  *(unsigned char *)(v12 + 8) = *((unsigned char *)v13 + 8);
  *(void *)uint64_t v12 = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = type metadata accessor for URL();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    uint64_t v23 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_7:
  uint64_t v24 = a3[8];
  unint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  *unint64_t v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[9];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  void *v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[10];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  void *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  *uint64_t v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  uint64_t v36 = a3[13];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = type metadata accessor for AppInstallRequestType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
  uint64_t v40 = a3[14];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  *uint64_t v41 = *v42;
  v41[1] = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[15];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (void *)(a2 + v43);
  unint64_t v46 = *(void *)(a1 + v43 + 8);
  unint64_t v47 = *(void *)(a2 + v43 + 8);
  if (v46 < 2)
  {
    if (v47 >= 2)
    {
      void *v44 = *v45;
      v44[1] = v45[1];
      swift_bridgeObjectRetain();
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v47 < 2)
  {
    sub_10001729C((uint64_t)v44, &qword_100661C28);
LABEL_12:
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
    goto LABEL_14;
  }
  void *v44 = *v45;
  v44[1] = v45[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_14:
  uint64_t v48 = a3[16];
  uint64_t v49 = (void *)(a1 + v48);
  uint64_t v50 = (const void *)(a2 + v48);
  uint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v118 + 48);
  int v52 = v51(a1 + v48, 1, v119);
  int v53 = v51((uint64_t)v50, 1, v119);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(void *, const void *, uint64_t))(v118 + 16))(v49, v50, v119);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v118 + 56))(v49, 0, 1, v119);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v53)
  {
    (*(void (**)(void *, uint64_t))(v118 + 8))(v49, v119);
LABEL_19:
    uint64_t v54 = sub_1000172F8(&qword_10065C9B0);
    memcpy(v49, v50, *(void *)(*(void *)(v54 - 8) + 64));
    goto LABEL_20;
  }
  v117(v49, v50, v119);
LABEL_20:
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v55 = a3[19];
  uint64_t v56 = (uint64_t *)(a1 + v55);
  uint64_t v57 = (uint64_t *)(a2 + v55);
  unint64_t v58 = *(void *)(a2 + v55 + 8);
  if (*(void *)(a1 + v55 + 8) >> 60 == 15)
  {
    if (v58 >> 60 != 15)
    {
      uint64_t v59 = *v57;
      sub_100012670(v59, v58);
      uint64_t *v56 = v59;
      v56[1] = v58;
      goto LABEL_27;
    }
    goto LABEL_25;
  }
  if (v58 >> 60 == 15)
  {
    sub_1002DEBB4((uint64_t)v56);
LABEL_25:
    *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
    goto LABEL_27;
  }
  uint64_t v60 = *v57;
  sub_100012670(v60, v58);
  uint64_t v61 = *v56;
  unint64_t v62 = v56[1];
  uint64_t *v56 = v60;
  v56[1] = v58;
  sub_100013510(v61, v62);
LABEL_27:
  uint64_t v63 = a3[20];
  uint64_t v64 = *(void **)(a1 + v63);
  uint64_t v65 = *(void **)(a2 + v63);
  *(void *)(a1 + v63) = v65;
  id v66 = v65;

  uint64_t v67 = a3[21];
  uint64_t v68 = a1 + v67;
  uint64_t v69 = (uint64_t *)(a2 + v67);
  uint64_t v70 = *v69;
  *(unsigned char *)(v68 + 8) = *((unsigned char *)v69 + 8);
  *(void *)uint64_t v68 = v70;
  *(_DWORD *)(a1 + a3[22]) = *(_DWORD *)(a2 + a3[22]);
  uint64_t v71 = a3[23];
  uint64_t v72 = a1 + v71;
  uint64_t v73 = (uint64_t *)(a2 + v71);
  uint64_t v74 = *v73;
  *(unsigned char *)(v72 + 8) = *((unsigned char *)v73 + 8);
  *(void *)uint64_t v72 = v74;
  uint64_t v75 = a3[24];
  uint64_t v76 = a1 + v75;
  uint64_t v77 = (uint64_t *)(a2 + v75);
  uint64_t v78 = *v77;
  *(unsigned char *)(v76 + 8) = *((unsigned char *)v77 + 8);
  *(void *)uint64_t v76 = v78;
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  *(unsigned char *)(a1 + a3[28]) = *(unsigned char *)(a2 + a3[28]);
  uint64_t v79 = a3[29];
  uint64_t v80 = (void *)(a1 + v79);
  id v81 = (void *)(a2 + v79);
  void *v80 = *v81;
  v80[1] = v81[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v82 = a3[30];
  uint64_t v83 = a1 + v82;
  uint64_t v84 = a2 + v82;
  uint64_t v85 = type metadata accessor for Platform();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 24))(v83, v84, v85);
  *(unsigned char *)(a1 + a3[31]) = *(unsigned char *)(a2 + a3[31]);
  uint64_t v86 = a3[32];
  unint64_t v87 = (void *)(a1 + v86);
  uint64_t v88 = (void *)(a2 + v86);
  *unint64_t v87 = *v88;
  v87[1] = v88[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v89 = a3[33];
  uint64_t v90 = (uint64_t *)(a1 + v89);
  uint64_t v91 = (uint64_t *)(a2 + v89);
  unint64_t v92 = *(void *)(a2 + v89 + 8);
  if (*(void *)(a1 + v89 + 8) >> 60 == 15)
  {
    if (v92 >> 60 != 15)
    {
      uint64_t v93 = *v91;
      sub_100012670(v93, v92);
      uint64_t *v90 = v93;
      v90[1] = v92;
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  if (v92 >> 60 == 15)
  {
    sub_1002E9998((uint64_t)v90);
LABEL_32:
    *(_OWORD *)uint64_t v90 = *(_OWORD *)v91;
    goto LABEL_34;
  }
  uint64_t v94 = *v91;
  sub_100012670(v94, v92);
  uint64_t v95 = *v90;
  unint64_t v96 = v90[1];
  uint64_t *v90 = v94;
  v90[1] = v92;
  sub_100013510(v95, v96);
LABEL_34:
  uint64_t v97 = a3[34];
  uint64_t v98 = (void *)(a1 + v97);
  uint64_t v99 = (void *)(a2 + v97);
  void *v98 = *v99;
  v98[1] = v99[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v100 = a3[35];
  uint64_t v101 = a1 + v100;
  uint64_t v102 = (long long *)(a2 + v100);
  int v103 = *(unsigned __int8 *)(a1 + v100 + 16);
  int v104 = *(unsigned __int8 *)(a2 + v100 + 16);
  if (v103 == 255)
  {
    if (v104 == 255)
    {
      long long v106 = *v102;
      *(unsigned char *)(v101 + 16) = *((unsigned char *)v102 + 16);
      *(_OWORD *)uint64_t v101 = v106;
    }
    else
    {
      char v110 = v104 & 1;
      uint64_t v111 = *(void *)v102;
      uint64_t v112 = *((void *)v102 + 1);
      sub_1001C617C();
      *(void *)uint64_t v101 = v111;
      *(void *)(v101 + 8) = v112;
      *(unsigned char *)(v101 + 16) = v110;
    }
  }
  else if (v104 == 255)
  {
    sub_1002BC904(v101);
    char v105 = *((unsigned char *)v102 + 16);
    *(_OWORD *)uint64_t v101 = *v102;
    *(unsigned char *)(v101 + 16) = v105;
  }
  else
  {
    char v107 = v104 & 1;
    uint64_t v108 = *(void *)v102;
    uint64_t v109 = *((void *)v102 + 1);
    sub_1001C617C();
    *(void *)uint64_t v101 = v108;
    *(void *)(v101 + 8) = v109;
    *(unsigned char *)(v101 + 16) = v107;
    sub_10018ACBC();
  }
  uint64_t v113 = a3[36];
  char v114 = (void *)(a1 + v113);
  unint64_t v115 = (void *)(a2 + v113);
  void *v114 = *v115;
  v114[1] = v115[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[37]) = *(unsigned char *)(a2 + a3[37]);
  return a1;
}

char *sub_1004135FC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v54 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v54(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  id v10 = &a2[v8];
  *(void *)uint64_t v9 = *(void *)v10;
  void v9[8] = v10[8];
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  *(_OWORD *)&a1[v17] = *(_OWORD *)&a2[v17];
  uint64_t v18 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  *(_OWORD *)&a1[v18] = *(_OWORD *)&a2[v18];
  uint64_t v19 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  uint64_t v20 = &a1[v19];
  int v21 = &a2[v19];
  uint64_t v22 = type metadata accessor for AppInstallRequestType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[15];
  *(_OWORD *)&a1[a3[14]] = *(_OWORD *)&a2[a3[14]];
  *(_OWORD *)&a1[v23] = *(_OWORD *)&a2[v23];
  uint64_t v24 = a3[16];
  unint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v24], 1, v6))
  {
    uint64_t v27 = sub_1000172F8(&qword_10065C9B0);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    v54(v25, v26, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
  }
  uint64_t v28 = a3[18];
  a1[a3[17]] = a2[a3[17]];
  *(void *)&a1[v28] = *(void *)&a2[v28];
  uint64_t v29 = a3[20];
  *(_OWORD *)&a1[a3[19]] = *(_OWORD *)&a2[a3[19]];
  *(void *)&a1[v29] = *(void *)&a2[v29];
  uint64_t v30 = a3[21];
  uint64_t v31 = a3[22];
  uint64_t v32 = &a1[v30];
  uint64_t v33 = &a2[v30];
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v33[8];
  *(_DWORD *)&a1[v31] = *(_DWORD *)&a2[v31];
  uint64_t v34 = a3[23];
  uint64_t v35 = a3[24];
  uint64_t v36 = &a1[v34];
  uint64_t v37 = &a2[v34];
  *(void *)uint64_t v36 = *(void *)v37;
  v36[8] = v37[8];
  uint64_t v38 = &a1[v35];
  uint64_t v39 = &a2[v35];
  *(void *)uint64_t v38 = *(void *)v39;
  v38[8] = v39[8];
  uint64_t v40 = a3[26];
  a1[a3[25]] = a2[a3[25]];
  a1[v40] = a2[v40];
  uint64_t v41 = a3[28];
  a1[a3[27]] = a2[a3[27]];
  a1[v41] = a2[v41];
  uint64_t v42 = a3[30];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  *(_OWORD *)&a1[a3[29]] = *(_OWORD *)&a2[a3[29]];
  uint64_t v45 = type metadata accessor for Platform();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
  uint64_t v46 = a3[32];
  a1[a3[31]] = a2[a3[31]];
  *(_OWORD *)&a1[v46] = *(_OWORD *)&a2[v46];
  uint64_t v47 = a3[34];
  *(_OWORD *)&a1[a3[33]] = *(_OWORD *)&a2[a3[33]];
  *(_OWORD *)&a1[v47] = *(_OWORD *)&a2[v47];
  uint64_t v48 = a3[35];
  uint64_t v49 = a3[36];
  uint64_t v50 = &a1[v48];
  uint64_t v51 = &a2[v48];
  long long v52 = *(_OWORD *)v51;
  v50[16] = v51[16];
  *(_OWORD *)uint64_t v50 = v52;
  *(_OWORD *)&a1[v49] = *(_OWORD *)&a2[v49];
  a1[a3[37]] = a2[a3[37]];
  return a1;
}

uint64_t sub_100413A34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v118 = *(void *)(v6 - 8);
  uint64_t v119 = v6;
  char v117 = *(void (**)(void *, const void *, uint64_t))(v118 + 40);
  ((void (*)(uint64_t, uint64_t))v117)(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = a3[6];
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v9;
  uint64_t v12 = a2 + v9;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  uint64_t v13 = (void *)(a1 + v10);
  uint64_t v14 = (void *)(a2 + v10);
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    uint64_t v20 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  void *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[10];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *uint64_t v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[11];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (uint64_t *)(a2 + v36);
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  void *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  uint64_t v44 = type metadata accessor for AppInstallRequestType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 40))(v42, v43, v44);
  uint64_t v45 = a3[14];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (uint64_t *)(a2 + v45);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  *uint64_t v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  uint64_t v50 = a3[15];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = a2 + v50;
  if (*(void *)(a1 + v50 + 8) < 2uLL)
  {
LABEL_10:
    *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
    goto LABEL_12;
  }
  unint64_t v53 = *(void *)(v52 + 8);
  if (v53 < 2)
  {
    sub_10001729C(v51, &qword_100661C28);
    goto LABEL_10;
  }
  *(void *)uint64_t v51 = *(void *)v52;
  *(void *)(v51 + 8) = v53;
  swift_bridgeObjectRelease();
LABEL_12:
  uint64_t v54 = a3[16];
  uint64_t v55 = (void *)(a1 + v54);
  uint64_t v56 = (const void *)(a2 + v54);
  uint64_t v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v118 + 48);
  int v58 = v57(a1 + v54, 1, v119);
  int v59 = v57((uint64_t)v56, 1, v119);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(void *, const void *, uint64_t))(v118 + 32))(v55, v56, v119);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v118 + 56))(v55, 0, 1, v119);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v59)
  {
    (*(void (**)(void *, uint64_t))(v118 + 8))(v55, v119);
LABEL_17:
    uint64_t v60 = sub_1000172F8(&qword_10065C9B0);
    memcpy(v55, v56, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_18;
  }
  v117(v55, v56, v119);
LABEL_18:
  uint64_t v61 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(void *)(a1 + v61) = *(void *)(a2 + v61);
  swift_bridgeObjectRelease();
  uint64_t v62 = a3[19];
  uint64_t v63 = a1 + v62;
  uint64_t v64 = a2 + v62;
  unint64_t v65 = *(void *)(a1 + v62 + 8);
  if (v65 >> 60 == 15)
  {
LABEL_21:
    *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
    goto LABEL_23;
  }
  unint64_t v66 = *(void *)(v64 + 8);
  if (v66 >> 60 == 15)
  {
    sub_1002DEBB4(v63);
    goto LABEL_21;
  }
  uint64_t v67 = *(void *)v63;
  *(void *)uint64_t v63 = *(void *)v64;
  *(void *)(v63 + 8) = v66;
  sub_100013510(v67, v65);
LABEL_23:
  uint64_t v68 = a3[20];
  uint64_t v69 = *(void **)(a1 + v68);
  *(void *)(a1 + v68) = *(void *)(a2 + v68);

  uint64_t v70 = a3[21];
  uint64_t v71 = a3[22];
  uint64_t v72 = a1 + v70;
  uint64_t v73 = a2 + v70;
  *(void *)uint64_t v72 = *(void *)v73;
  *(unsigned char *)(v72 + 8) = *(unsigned char *)(v73 + 8);
  *(_DWORD *)(a1 + v71) = *(_DWORD *)(a2 + v71);
  uint64_t v74 = a3[23];
  uint64_t v75 = a3[24];
  uint64_t v76 = a1 + v74;
  uint64_t v77 = a2 + v74;
  *(void *)uint64_t v76 = *(void *)v77;
  *(unsigned char *)(v76 + 8) = *(unsigned char *)(v77 + 8);
  uint64_t v78 = a1 + v75;
  uint64_t v79 = a2 + v75;
  *(void *)uint64_t v78 = *(void *)v79;
  *(unsigned char *)(v78 + 8) = *(unsigned char *)(v79 + 8);
  uint64_t v80 = a3[26];
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  *(unsigned char *)(a1 + v80) = *(unsigned char *)(a2 + v80);
  uint64_t v81 = a3[28];
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  *(unsigned char *)(a1 + v81) = *(unsigned char *)(a2 + v81);
  uint64_t v82 = a3[29];
  uint64_t v83 = (void *)(a1 + v82);
  uint64_t v84 = (uint64_t *)(a2 + v82);
  uint64_t v86 = *v84;
  uint64_t v85 = v84[1];
  *uint64_t v83 = v86;
  v83[1] = v85;
  swift_bridgeObjectRelease();
  uint64_t v87 = a3[30];
  uint64_t v88 = a1 + v87;
  uint64_t v89 = a2 + v87;
  uint64_t v90 = type metadata accessor for Platform();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 40))(v88, v89, v90);
  uint64_t v91 = a3[32];
  *(unsigned char *)(a1 + a3[31]) = *(unsigned char *)(a2 + a3[31]);
  unint64_t v92 = (void *)(a1 + v91);
  uint64_t v93 = (uint64_t *)(a2 + v91);
  uint64_t v95 = *v93;
  uint64_t v94 = v93[1];
  *unint64_t v92 = v95;
  v92[1] = v94;
  swift_bridgeObjectRelease();
  uint64_t v96 = a3[33];
  uint64_t v97 = a1 + v96;
  uint64_t v98 = a2 + v96;
  unint64_t v99 = *(void *)(a1 + v96 + 8);
  if (v99 >> 60 == 15)
  {
LABEL_26:
    *(_OWORD *)uint64_t v97 = *(_OWORD *)v98;
    goto LABEL_28;
  }
  unint64_t v100 = *(void *)(v98 + 8);
  if (v100 >> 60 == 15)
  {
    sub_1002E9998(v97);
    goto LABEL_26;
  }
  uint64_t v101 = *(void *)v97;
  *(void *)uint64_t v97 = *(void *)v98;
  *(void *)(v97 + 8) = v100;
  sub_100013510(v101, v99);
LABEL_28:
  uint64_t v102 = a3[34];
  int v103 = (void *)(a1 + v102);
  int v104 = (uint64_t *)(a2 + v102);
  uint64_t v106 = *v104;
  uint64_t v105 = v104[1];
  *int v103 = v106;
  v103[1] = v105;
  swift_bridgeObjectRelease();
  uint64_t v107 = a3[35];
  uint64_t v108 = a1 + v107;
  uint64_t v109 = a2 + v107;
  if (*(unsigned __int8 *)(a1 + v107 + 16) != 255)
  {
    int v110 = *(unsigned __int8 *)(v109 + 16);
    if (v110 != 255)
    {
      *(_OWORD *)uint64_t v108 = *(_OWORD *)v109;
      *(unsigned char *)(v108 + 16) = v110 & 1;
      sub_10018ACBC();
      goto LABEL_33;
    }
    sub_1002BC904(v108);
  }
  *(_OWORD *)uint64_t v108 = *(_OWORD *)v109;
  *(unsigned char *)(v108 + 16) = *(unsigned char *)(v109 + 16);
LABEL_33:
  uint64_t v111 = a3[36];
  uint64_t v112 = (void *)(a1 + v111);
  uint64_t v113 = (uint64_t *)(a2 + v111);
  uint64_t v115 = *v113;
  uint64_t v114 = v113[1];
  *uint64_t v112 = v115;
  v112[1] = v114;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[37]) = *(unsigned char *)(a2 + a3[37]);
  return a1;
}

uint64_t sub_1004140FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100414110);
}

uint64_t sub_100414110(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5]);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  uint64_t v13 = sub_1000172F8(&qword_10065C3C0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a3[7];
LABEL_13:
    uint64_t v10 = a1 + v15;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_14;
  }
  uint64_t v16 = type metadata accessor for AppInstallRequestType();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a3[13];
    goto LABEL_13;
  }
  uint64_t v17 = sub_1000172F8(&qword_10065C9B0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a3[16];
    goto LABEL_13;
  }
  uint64_t v18 = type metadata accessor for Platform();
  int v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[30];

  return v19(v21, a2, v20);
}

uint64_t sub_100414330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100414344);
}

uint64_t sub_100414344(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5]) = (a2 - 1);
    return result;
  }
  uint64_t v13 = sub_1000172F8(&qword_10065C3C0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[7];
LABEL_11:
    uint64_t v12 = a1 + v15;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  uint64_t v16 = type metadata accessor for AppInstallRequestType();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_11;
  }
  uint64_t v17 = sub_1000172F8(&qword_10065C9B0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[16];
    goto LABEL_11;
  }
  uint64_t v18 = type metadata accessor for Platform();
  int v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[30];

  return v19(v21, a2, a2, v20);
}

void sub_100414564()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_1004147D4(319, (unint64_t *)&qword_100661BB0, (void (*)(uint64_t))&type metadata accessor for URL);
    if (v1 <= 0x3F)
    {
      type metadata accessor for AppInstallRequestType();
      if (v2 <= 0x3F)
      {
        sub_1004147D4(319, (unint64_t *)&unk_100662CD0, (void (*)(uint64_t))&type metadata accessor for UUID);
        if (v3 <= 0x3F)
        {
          type metadata accessor for Platform();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_1004147D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_10041482C()
{
  unint64_t result = qword_100662D80;
  if (!qword_100662D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662D80);
  }
  return result;
}

uint64_t sub_100414880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t updated = type metadata accessor for ManagedAppDeclaration.UpdateBehaviorEnum();
  uint64_t v110 = *(void *)(updated - 8);
  uint64_t v111 = updated;
  __chkstk_darwin(updated);
  uint64_t v109 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ManagedAppDeclaration.BackupBehavior();
  uint64_t v107 = *(void *)(v6 - 8);
  uint64_t v108 = v6;
  __chkstk_darwin(v6);
  uint64_t v106 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v112 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v94 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v92 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum();
  uint64_t v103 = *(void *)(v13 - 8);
  uint64_t v104 = v13;
  __chkstk_darwin(v13);
  uint64_t v105 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.InstallTimingEnum();
  uint64_t v98 = *(void *)(v15 - 8);
  uint64_t v99 = v15;
  __chkstk_darwin(v15);
  uint64_t v97 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ManagedAppDeclaration.InstallBehavior();
  uint64_t v101 = *(void *)(v17 - 8);
  uint64_t v102 = v17;
  uint64_t v18 = __chkstk_darwin(v17);
  unint64_t v100 = (char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v84 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v84 - v23;
  uint64_t v25 = sub_1000172F8(&qword_100662E08);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v84 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(_OWORD *)(a2 + 16) = xmmword_1005A5CE0;
  uint64_t v28 = (int *)type metadata accessor for DDMDeclarationTemplate();
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  uint64_t v29 = a2 + v28[12];
  uint64_t v93 = v11;
  uint64_t v30 = *(void (**)(void))(v11 + 56);
  uint64_t v89 = v29;
  uint64_t v95 = v10;
  uint64_t v91 = v11 + 56;
  uint64_t v90 = v30;
  v30();
  uint64_t v31 = *(void (**)(void))(v112 + 56);
  uint64_t v86 = a2 + v28[14];
  uint64_t v96 = v8;
  uint64_t v88 = v112 + 56;
  uint64_t v87 = v31;
  v31();
  uint64_t v32 = (void *)(a2 + v28[15]);
  *uint64_t v32 = 0;
  v32[1] = 0;
  uint64_t v33 = a2 + v28[19];
  *(void *)uint64_t v33 = 0;
  uint64_t v85 = (void *)v33;
  *(unsigned char *)(v33 + 8) = 1;
  uint64_t v34 = (void *)(a2 + v28[20]);
  *uint64_t v34 = 0;
  v34[1] = 0;
  *(void *)(a2 + 72) = ManagedAppDeclaration.declarationKey.getter();
  *(void *)(a2 + 80) = v35;
  *(void *)(a2 + 56) = ManagedAppDeclaration.declarationIdentifier.getter();
  *(void *)(a2 + 64) = v36;
  *(unsigned char *)(a2 + v28[13]) = ManagedAppDeclaration.managementScope.getter() & 1;
  uint64_t v37 = ManagedAppDeclaration.personaIdentifier.getter();
  if (v38) {
    uint64_t v39 = v37;
  }
  else {
    uint64_t v39 = 0;
  }
  if (v38 <= 1) {
    uint64_t v40 = 1;
  }
  else {
    uint64_t v40 = v38;
  }
  uint64_t v41 = (uint64_t *)(a2 + v28[16]);
  *uint64_t v41 = v39;
  v41[1] = v40;
  ManagedAppDeclaration.attributes.getter();
  uint64_t v42 = type metadata accessor for ManagedAppDeclaration.Attributes();
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v27, 1, v42) == 1)
  {
    sub_10001729C((uint64_t)v27, &qword_100662E08);
    uint64_t v44 = 0;
    unint64_t v45 = 0xF000000000000000;
  }
  else
  {
    uint64_t v44 = ManagedAppDeclaration.Attributes.rawValue.getter();
    unint64_t v45 = v46;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v42);
  }
  sub_10018AE44(*(void *)(a2 + 16), *(void *)(a2 + 24));
  *(void *)(a2 + 16) = v44;
  *(void *)(a2 + 24) = v45;
  ManagedAppDeclaration.platform.getter();
  ManagedAppDeclaration.installBehavior.getter();
  char v47 = ManagedAppDeclaration.InstallBehavior.isAccountPromptAllowed.getter();
  uint64_t v48 = *(void (**)(char *, uint64_t))(v101 + 8);
  uint64_t v49 = v24;
  uint64_t v50 = v102;
  v48(v49, v102);
  *(unsigned char *)(a2 + 89) = v47 & 1;
  ManagedAppDeclaration.installBehavior.getter();
  uint64_t v51 = v97;
  ManagedAppDeclaration.InstallBehavior.installTiming.getter();
  v48(v22, v50);
  int v52 = (*(uint64_t (**)(char *, uint64_t))(v98 + 88))(v51, v99);
  unint64_t v53 = v105;
  if (v52 == enum case for ManagedAppDeclaration.InstallBehavior.InstallTimingEnum.immediately(_:))
  {
    char v54 = 0;
  }
  else
  {
    if (v52 != enum case for ManagedAppDeclaration.InstallBehavior.InstallTimingEnum.onDemand(_:)) {
      goto LABEL_25;
    }
    char v54 = 1;
  }
  *(unsigned char *)(a2 + 88) = v54;
  uint64_t v55 = v100;
  ManagedAppDeclaration.installBehavior.getter();
  ManagedAppDeclaration.InstallBehavior.purchaseMethod.getter();
  v48(v55, v50);
  uint64_t v57 = v103;
  uint64_t v56 = v104;
  int v58 = (*(uint64_t (**)(char *, uint64_t))(v103 + 88))(v53, v104);
  if (v58 == enum case for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum.volumePurchaseProgram(_:))
  {
    (*(void (**)(char *, uint64_t))(v57 + 96))(v53, v56);
    uint64_t v112 = *(void *)v53;
    uint64_t v104 = *((void *)v53 + 1);
    int v59 = v53[16];
    uint64_t v60 = sub_1000172F8(&qword_10065BD80);
    uint64_t v61 = v92;
    uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v93 + 32);
    uint64_t v63 = v95;
    v62(v92, &v53[*(int *)(v60 + 48)], v95);
    uint64_t v64 = a2 + v28[18];
    uint64_t v65 = enum case for DDMPurchaseMethod.volumePurchaseProgram(_:);
    uint64_t v66 = type metadata accessor for DDMPurchaseMethod();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 104))(v64, v65, v66);
    uint64_t v67 = v89;
    sub_10001729C(v89, &qword_10065BE10);
    v62((char *)v67, v61, v63);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v90)(v67, 0, 1, v63);
    if (v59 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v68 = v104;
      *(void *)(a2 + 40) = v112;
      *(void *)(a2 + 48) = v68;
    }
    else
    {
      *(void *)a2 = v112;
      *(unsigned char *)(a2 + 8) = 0;
    }
    goto LABEL_20;
  }
  if (v58 != enum case for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum.manifest(_:))
  {
LABEL_25:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  (*(void (**)(char *, uint64_t))(v57 + 96))(v53, v56);
  uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v112 + 32);
  uint64_t v70 = v94;
  uint64_t v71 = v96;
  v69(v94, v53, v96);
  uint64_t v72 = a2 + v28[18];
  uint64_t v73 = enum case for DDMPurchaseMethod.manifest(_:);
  uint64_t v74 = type metadata accessor for DDMPurchaseMethod();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 104))(v72, v73, v74);
  uint64_t v75 = v86;
  sub_10001729C(v86, &qword_10065C3C0);
  v69((char *)v75, v70, v71);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v87)(v75, 0, 1, v71);
LABEL_20:
  uint64_t v76 = v106;
  ManagedAppDeclaration.backupBehavior.getter();
  char v77 = ManagedAppDeclaration.BackupBehavior.backupAppData.getter();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v76, v108);
  *(unsigned char *)(a2 + 32) = v77 & 1;
  uint64_t v78 = v109;
  ManagedAppDeclaration.updateBehavior.getter();
  uint64_t v79 = type metadata accessor for ManagedAppDeclaration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(a1, v79);
  uint64_t v81 = v110;
  uint64_t v80 = v111;
  if ((*(unsigned int (**)(char *, uint64_t))(v110 + 88))(v78, v111) != enum case for ManagedAppDeclaration.UpdateBehaviorEnum.automaticallyUpdate(_:)) {
    return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v78, v80);
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v81 + 96))(v78, v80);
  if ((v78[8] & 1) == 0)
  {
    uint64_t v83 = v85;
    *uint64_t v85 = *(void *)v78;
    *((unsigned char *)v83 + 8) = 0;
  }
  return result;
}

void sub_10041535C(void *a1, void *a2)
{
  id v4 = a2;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 valueForProperty:v5];

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v22, 0, sizeof(v22));
  }
  sub_100017238((uint64_t)v22, (uint64_t)&v20, (uint64_t *)&unk_10065C9C0);
  if (!v21)
  {
    sub_10001729C((uint64_t)v22, (uint64_t *)&unk_10065C9C0);

    goto LABEL_13;
  }
  sub_1001C5DD4(&v20, v19);
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  uint64_t v7 = sub_100241F7C(v19);
  if (v2)
  {
    swift_release();
    swift_unexpectedError();
    __break(1u);
    swift_release();
    swift_unexpectedError();
    __break(1u);
    swift_unexpectedError();
    __break(1u);
    return;
  }
  uint64_t v9 = v7;
  uint64_t v10 = v8;
  swift_release();
  sub_100014524((uint64_t)v19);
  sub_10001729C((uint64_t)v22, (uint64_t *)&unk_10065C9C0);

  if (v9 != a1[7] || v10 != a1[8])
  {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_11;
    }
LABEL_13:
    type metadata accessor for InternalError();
    sub_100013D44((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return;
  }
  swift_bridgeObjectRelease();
LABEL_11:
  unint64_t v12 = sub_100416B1C();
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  if (*(void *)(sub_100417880(v12, (void (*)(long long *__return_ptr, long long *, char *))sub_100249FCC)
                 + 16))
  {
    sub_1000172F8(&qword_10065CE48);
    uint64_t v13 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v13 = &_swiftEmptyDictionarySingleton;
  }
  *(void *)&v22[0] = v13;
  id v14 = v4;
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_1004ED160(v15, 1, v22);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_release();
  [v14 setValuesWithDictionary:isa];
  swift_bridgeObjectRelease();
  swift_release();

  if (a1[3] >> 60 == 15) {
    Class v17 = 0;
  }
  else {
    Class v17 = Data._bridgeToObjectiveC()().super.isa;
  }
  NSString v18 = String._bridgeToObjectiveC()();
  [v14 setValue:v17 forProperty:v18];
  swift_unknownObjectRelease();
}

unint64_t *sub_100415774()
{
  sub_1000172F8((uint64_t *)&unk_100663BE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
  *(void *)(inited + 56) = &type metadata for SQLiteTable;
  *(void *)(inited + 64) = &off_1006493B8;
  unint64_t v1 = (void *)swift_allocObject();
  *(void *)(inited + 32) = v1;
  v1[2] = sub_100415860;
  v1[3] = 0;
  v1[4] = 0x6C6365645F6D6464;
  v1[5] = 0xEF6E6F6974617261;
  uint64_t v2 = sub_1004AB980(inited);
  swift_setDeallocating();
  sub_1000172F8(&qword_10065C038);
  swift_arrayDestroy();
  return v2;
}

unint64_t *sub_100415860()
{
  strcpy((char *)v124, "apple_item_id");
  v124[7] = -4864;
  unint64_t v0 = 0xE400000000000000;
  uint64_t v125 = 1112493122;
  unint64_t v126 = 0xE400000000000000;
  long long v127 = 0u;
  long long v128 = 0u;
  long long v129 = 0u;
  char v130 = 0;
  v119[0] = 0x7475626972747461;
  v119[1] = 0xEA00000000007365;
  v119[2] = 1112493122;
  v119[3] = 0xE400000000000000;
  long long v120 = 0u;
  long long v121 = 0u;
  long long v122 = 0u;
  char v123 = 0;
  uint64_t v115 = &type metadata for Bool;
  uint64_t v116 = &protocol witness table for Bool;
  char v117 = &protocol witness table for Bool;
  char v114 = 1;
  v113[0] = 0x615F70756B636162;
  v113[1] = 0xEF617461645F7070;
  v113[2] = 0x52454745544E49;
  uint64_t v113[3] = 0xE700000000000000;
  char v118 = 1;
  v108[0] = 0x695F656C646E7562;
  v108[1] = 0xE900000000000064;
  v108[2] = 1415071060;
  v108[3] = 0xE400000000000000;
  long long v109 = 0u;
  long long v110 = 0u;
  long long v111 = 0u;
  char v112 = 0;
  strcpy(v101, "declaration_id");
  v101[15] = -18;
  uint64_t v102 = 1415071060;
  unint64_t v103 = 0xE400000000000000;
  long long v104 = 0u;
  long long v105 = 0u;
  long long v106 = 0u;
  char v107 = 0;
  v96[0] = 0x746172616C636564;
  v96[1] = 0xEF79656B5F6E6F69;
  v96[2] = 1415071060;
  v96[3] = 0xE400000000000000;
  long long v97 = 0u;
  long long v98 = 0u;
  long long v99 = 0u;
  char v100 = 0;
  strcpy(v89, "install_timing");
  v89[15] = -18;
  uint64_t v1 = swift_dynamicCastMetatype();
  long long v2 = 0uLL;
  uint64_t v3 = 1415071060;
  if (!v1)
  {
    if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
    {
      unint64_t v0 = 0xE700000000000000;
      uint64_t v3 = 0x52454745544E49;
    }
    else
    {
      uint64_t v3 = 1279346002;
      if (!swift_dynamicCastMetatype() && !swift_dynamicCastMetatype())
      {
        type metadata accessor for UUID();
        if (swift_dynamicCastMetatype()) {
          uint64_t v3 = 1145656661;
        }
        else {
          uint64_t v3 = 1112493122;
        }
      }
    }
    long long v2 = 0uLL;
  }
  uint64_t v90 = v3;
  unint64_t v91 = v0;
  long long v92 = v2;
  long long v93 = v2;
  long long v94 = v2;
  char v95 = 0;
  v84[0] = 0xD000000000000019;
  v84[1] = 0x80000001005B80F0;
  v84[2] = 0x52454745544E49;
  v84[3] = 0xE700000000000000;
  long long v85 = v2;
  long long v86 = v2;
  long long v87 = v2;
  char v88 = 0;
  v79[0] = 0x65736E6563696CLL;
  v79[1] = 0xE700000000000000;
  type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum();
  if (swift_dynamicCastMetatype())
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v5 = 1415071060;
  }
  else if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v5 = 0x52454745544E49;
  }
  else
  {
    uint64_t v5 = 1279346002;
    if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
    {
      unint64_t v4 = 0xE400000000000000;
    }
    else
    {
      type metadata accessor for UUID();
      if (swift_dynamicCastMetatype()) {
        uint64_t v5 = 1145656661;
      }
      else {
        uint64_t v5 = 1112493122;
      }
      unint64_t v4 = 0xE400000000000000;
    }
  }
  v79[2] = v5;
  v79[3] = v4;
  long long v80 = 0u;
  long long v81 = 0u;
  long long v82 = 0u;
  char v83 = 0;
  v74[0] = 0xD000000000000010;
  v74[1] = 0x80000001005B8120;
  uint64_t v6 = swift_dynamicCastMetatype();
  long long v7 = 0uLL;
  unint64_t v8 = 0xE400000000000000;
  uint64_t v9 = 1415071060;
  unint64_t v10 = 0xE400000000000000;
  if (!v6)
  {
    if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
    {
      unint64_t v10 = 0xE700000000000000;
      uint64_t v9 = 0x52454745544E49;
    }
    else
    {
      uint64_t v9 = 1279346002;
      if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
      {
        unint64_t v10 = 0xE400000000000000;
      }
      else
      {
        type metadata accessor for UUID();
        if (swift_dynamicCastMetatype()) {
          uint64_t v9 = 1145656661;
        }
        else {
          uint64_t v9 = 1112493122;
        }
        unint64_t v10 = 0xE400000000000000;
      }
    }
    long long v7 = 0uLL;
  }
  v74[2] = v9;
  v74[3] = v10;
  long long v75 = v7;
  long long v76 = v7;
  long long v77 = v7;
  char v78 = 0;
  strcpy((char *)v67, "manifest_url");
  HIBYTE(v67[6]) = 0;
  v67[7] = -5120;
  uint64_t v68 = 1112493122;
  unint64_t v69 = 0xE400000000000000;
  long long v70 = v7;
  long long v71 = v7;
  long long v72 = v7;
  char v73 = 0;
  v62[0] = 1701667182;
  v62[1] = 0xE400000000000000;
  v62[2] = 1415071060;
  v62[3] = 0xE400000000000000;
  long long v63 = v7;
  long long v64 = v7;
  long long v65 = v7;
  char v66 = 0;
  v57[0] = 0x616E6F73726570;
  v57[1] = 0xE700000000000000;
  uint64_t v11 = 1415071060;
  if (!swift_dynamicCastMetatype())
  {
    if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
    {
      unint64_t v8 = 0xE700000000000000;
      uint64_t v11 = 0x52454745544E49;
    }
    else
    {
      uint64_t v11 = 1279346002;
      if (!swift_dynamicCastMetatype() && !swift_dynamicCastMetatype())
      {
        type metadata accessor for UUID();
        if (swift_dynamicCastMetatype()) {
          uint64_t v11 = 1145656661;
        }
        else {
          uint64_t v11 = 1112493122;
        }
      }
    }
  }
  v57[2] = v11;
  v57[3] = v8;
  long long v58 = 0u;
  long long v59 = 0u;
  long long v60 = 0u;
  char v61 = 0;
  v52[0] = 0x6D726F6674616C70;
  v52[1] = 0xE800000000000000;
  v52[2] = 1112493122;
  v52[3] = 0xE400000000000000;
  long long v53 = 0u;
  long long v54 = 0u;
  long long v55 = 0u;
  char v56 = 0;
  v47[0] = 0x6573616863727570;
  v47[1] = 0xEF646F6874656D5FLL;
  type metadata accessor for DDMPurchaseMethod();
  uint64_t v12 = swift_dynamicCastMetatype();
  long long v13 = 0uLL;
  uint64_t v14 = 1415071060;
  unint64_t v15 = 0xE400000000000000;
  if (!v12)
  {
    if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
    {
      unint64_t v15 = 0xE700000000000000;
      uint64_t v14 = 0x52454745544E49;
    }
    else
    {
      uint64_t v14 = 1279346002;
      if (!swift_dynamicCastMetatype() && !swift_dynamicCastMetatype())
      {
        type metadata accessor for UUID();
        if (swift_dynamicCastMetatype()) {
          uint64_t v14 = 1145656661;
        }
        else {
          uint64_t v14 = 1112493122;
        }
      }
      unint64_t v15 = 0xE400000000000000;
    }
    long long v13 = 0uLL;
  }
  v47[2] = v14;
  v47[3] = v15;
  long long v48 = v13;
  long long v49 = v13;
  long long v50 = v13;
  char v51 = 0;
  v42[0] = 0xD000000000000016;
  v42[1] = 0x80000001005B8150;
  v42[2] = 1112493122;
  v42[3] = 0xE400000000000000;
  long long v43 = v13;
  long long v44 = v13;
  long long v45 = v13;
  char v46 = 0;
  v37[0] = 0x6E5F726F646E6576;
  v37[1] = 0xEB00000000656D61;
  v37[2] = 1415071060;
  v37[3] = 0xE400000000000000;
  long long v38 = v13;
  long long v39 = v13;
  long long v40 = v13;
  char v41 = 0;
  sub_1000172F8((uint64_t *)&unk_100663BE0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1005AE180;
  *(void *)(v16 + 56) = &type metadata for SQLiteColumn;
  *(void *)(v16 + 64) = &off_1006493B0;
  uint64_t v17 = swift_allocObject();
  *(void *)(v16 + 32) = v17;
  sub_1001CD8D8((uint64_t)v124, v17 + 16);
  *(void *)(v16 + 96) = &type metadata for SQLiteColumn;
  *(void *)(v16 + 104) = &off_1006493B0;
  uint64_t v18 = swift_allocObject();
  *(void *)(v16 + 72) = v18;
  sub_1001CD8D8((uint64_t)v119, v18 + 16);
  *(void *)(v16 + 136) = &type metadata for SQLiteColumn;
  *(void *)(v16 + 144) = &off_1006493B0;
  uint64_t v19 = swift_allocObject();
  *(void *)(v16 + 112) = v19;
  sub_1001CD8D8((uint64_t)v113, v19 + 16);
  *(void *)(v16 + 176) = &type metadata for SQLiteColumn;
  *(void *)(v16 + 184) = &off_1006493B0;
  uint64_t v20 = swift_allocObject();
  *(void *)(v16 + 152) = v20;
  sub_1001CD8D8((uint64_t)v108, v20 + 16);
  *(void *)(v16 + 216) = &type metadata for SQLiteColumn;
  *(void *)(v16 + 224) = &off_1006493B0;
  uint64_t v21 = swift_allocObject();
  *(void *)(v16 + 192) = v21;
  sub_1001CD8D8((uint64_t)v101, v21 + 16);
  *(void *)(v16 + 256) = &type metadata for SQLiteColumn;
  *(void *)(v16 + 264) = &off_1006493B0;
  uint64_t v22 = swift_allocObject();
  *(void *)(v16 + 232) = v22;
  sub_1001CD8D8((uint64_t)v96, v22 + 16);
  *(void *)(v16 + 296) = &type metadata for SQLiteColumn;
  *(void *)(v16 + 304) = &off_1006493B0;
  uint64_t v23 = swift_allocObject();
  *(void *)(v16 + 272) = v23;
  sub_1001CD8D8((uint64_t)v89, v23 + 16);
  *(void *)(v16 + 336) = &type metadata for SQLiteColumn;
  *(void *)(v16 + 344) = &off_1006493B0;
  uint64_t v24 = swift_allocObject();
  *(void *)(v16 + 312) = v24;
  sub_1001CD8D8((uint64_t)v84, v24 + 16);
  *(void *)(v16 + 376) = &type metadata for SQLiteColumn;
  *(void *)(v16 + 384) = &off_1006493B0;
  uint64_t v25 = swift_allocObject();
  *(void *)(v16 + 352) = v25;
  sub_1001CD8D8((uint64_t)v79, v25 + 16);
  *(void *)(v16 + 416) = &type metadata for SQLiteColumn;
  *(void *)(v16 + 424) = &off_1006493B0;
  uint64_t v26 = swift_allocObject();
  *(void *)(v16 + 392) = v26;
  sub_1001CD8D8((uint64_t)v74, v26 + 16);
  *(void *)(v16 + 456) = &type metadata for SQLiteColumn;
  *(void *)(v16 + 464) = &off_1006493B0;
  uint64_t v27 = swift_allocObject();
  *(void *)(v16 + 432) = v27;
  sub_1001CD8D8((uint64_t)v67, v27 + 16);
  *(void *)(v16 + 496) = &type metadata for SQLiteColumn;
  *(void *)(v16 + 504) = &off_1006493B0;
  uint64_t v28 = swift_allocObject();
  *(void *)(v16 + 472) = v28;
  sub_1001CD8D8((uint64_t)v62, v28 + 16);
  *(void *)(v16 + 536) = &type metadata for SQLiteColumn;
  *(void *)(v16 + 544) = &off_1006493B0;
  uint64_t v29 = swift_allocObject();
  *(void *)(v16 + 512) = v29;
  sub_1001CD8D8((uint64_t)v57, v29 + 16);
  *(void *)(v16 + 576) = &type metadata for SQLiteColumn;
  *(void *)(v16 + 584) = &off_1006493B0;
  uint64_t v30 = swift_allocObject();
  *(void *)(v16 + 552) = v30;
  sub_1001CD8D8((uint64_t)v52, v30 + 16);
  *(void *)(v16 + 616) = &type metadata for SQLiteColumn;
  *(void *)(v16 + 624) = &off_1006493B0;
  uint64_t v31 = swift_allocObject();
  *(void *)(v16 + 592) = v31;
  sub_1001CD8D8((uint64_t)v47, v31 + 16);
  *(void *)(v16 + 656) = &type metadata for SQLiteColumn;
  *(void *)(v16 + 664) = &off_1006493B0;
  uint64_t v32 = swift_allocObject();
  *(void *)(v16 + 632) = v32;
  sub_1001CD8D8((uint64_t)v42, v32 + 16);
  *(void *)(v16 + 696) = &type metadata for SQLiteColumn;
  *(void *)(v16 + 704) = &off_1006493B0;
  uint64_t v33 = swift_allocObject();
  *(void *)(v16 + 672) = v33;
  sub_1001CD8D8((uint64_t)v37, v33 + 16);
  *(void *)(v16 + 736) = &type metadata for SQLiteIndex;
  *(void *)(v16 + 744) = &off_1006493A8;
  uint64_t v34 = swift_allocObject();
  *(void *)(v16 + 712) = v34;
  strcpy((char *)(v34 + 16), "declaration_id");
  *(unsigned char *)(v34 + 31) = -18;
  *(void *)(v34 + 32) = 0xD000000000000012;
  *(void *)(v34 + 40) = 0x80000001005BF6A0;
  *(unsigned char *)(v34 + 48) = 1;
  uint64_t v35 = sub_1004AB980(v16);
  swift_setDeallocating();
  sub_1000172F8(&qword_10065C038);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1001CD934((uint64_t)v37);
  sub_1001CD934((uint64_t)v42);
  sub_1001CD934((uint64_t)v47);
  sub_1001CD934((uint64_t)v52);
  sub_1001CD934((uint64_t)v57);
  sub_1001CD934((uint64_t)v62);
  sub_1001CD934((uint64_t)v67);
  sub_1001CD934((uint64_t)v74);
  sub_1001CD934((uint64_t)v79);
  sub_1001CD934((uint64_t)v84);
  sub_1001CD934((uint64_t)v89);
  sub_1001CD934((uint64_t)v96);
  sub_1001CD934((uint64_t)v101);
  sub_1001CD934((uint64_t)v108);
  sub_1001CD934((uint64_t)v113);
  sub_1001CD934((uint64_t)v119);
  sub_1001CD934((uint64_t)v124);
  return v35;
}

unint64_t sub_100416498(char a1)
{
  unint64_t result = 0x74695F656C707061;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7475626972747461;
      break;
    case 2:
      unint64_t result = 0x615F70756B636162;
      break;
    case 3:
      unint64_t result = 0x695F656C646E7562;
      break;
    case 4:
    case 5:
      unint64_t result = 0x746172616C636564;
      break;
    case 6:
      unint64_t result = 0x5F6C6C6174736E69;
      break;
    case 7:
      unint64_t result = 0xD000000000000019;
      break;
    case 8:
      unint64_t result = 0x65736E6563696CLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    case 10:
      unint64_t result = 0x74736566696E616DLL;
      break;
    case 11:
      unint64_t result = 1701667182;
      break;
    case 12:
      unint64_t result = 0x616E6F73726570;
      break;
    case 13:
      unint64_t result = 0x6D726F6674616C70;
      break;
    case 14:
      unint64_t result = 0x6573616863727570;
      break;
    case 15:
      unint64_t result = 0xD000000000000016;
      break;
    case 16:
      unint64_t result = 0x6E5F726F646E6576;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1004166F0(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_100416498(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_100416498(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_10041677C()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_100416498(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1004167E0()
{
  sub_100416498(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100416834()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_100416498(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100416894@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100419F1C();
  *a1 = result;
  return result;
}

unint64_t sub_1004168C4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100416498(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1004168F0(void *a1@<X8>)
{
  *a1 = &off_100636CC0;
}

id sub_100416AA8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DDMDeclarationEntity.Entity();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DDMDeclarationEntity.Entity()
{
  return self;
}

uint64_t sub_100416B00()
{
  return sub_1001CD9A4((void (*)(void))&_swift_release, 48);
}

unint64_t sub_100416B1C()
{
  uint64_t v1 = sub_1000172F8(&qword_10065C3C0);
  __chkstk_darwin(v1 - 8);
  unint64_t v3 = (char *)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000172F8(&qword_10065BE10);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000172F8(&qword_100662DE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005AE190;
  *(unsigned char *)(inited + 32) = 0;
  if (v0[1])
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    unint64_t v10 = 0;
    unint64_t v11 = 0;
    *(void *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0;
  }
  else
  {
    uint64_t v8 = *v0;
    unint64_t v10 = sub_10024A634();
    uint64_t v9 = &type metadata for AppleItemID;
    unint64_t v11 = sub_100411EB4();
  }
  *(void *)(inited + 40) = v8;
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = v11;
  *(unsigned char *)(inited + 88) = 1;
  uint64_t v12 = v0[2];
  unint64_t v13 = v0[3];
  uint64_t v74 = v12;
  if (v13 >> 60 == 15)
  {
    uint64_t v14 = 0;
    unint64_t v15 = 0;
    uint64_t v16 = 0;
    unint64_t v17 = 0;
    unint64_t v18 = 0;
    *(void *)(inited + 112) = 0;
  }
  else
  {
    unint64_t v17 = sub_10024A974();
    uint64_t v16 = &type metadata for Data;
    unint64_t v18 = sub_10024A9C8();
    uint64_t v14 = v12;
    unint64_t v15 = v13;
  }
  *(void *)(inited + 96) = v14;
  *(void *)(inited + 104) = v15;
  *(void *)(inited + 120) = v16;
  *(void *)(inited + 128) = v17;
  *(void *)(inited + 136) = v18;
  *(unsigned char *)(inited + 144) = 2;
  char v19 = *((unsigned char *)v0 + 32);
  *(void *)(inited + 176) = &type metadata for Bool;
  *(void *)(inited + 184) = &protocol witness table for Bool;
  *(void *)(inited + 192) = &protocol witness table for Bool;
  *(unsigned char *)(inited + 152) = v19;
  *(unsigned char *)(inited + 200) = 3;
  uint64_t v20 = v0[6];
  long long v75 = v3;
  uint64_t v72 = v20;
  unint64_t v73 = v13;
  if (v20)
  {
    uint64_t v21 = &protocol witness table for String;
    uint64_t v22 = v0[5];
    uint64_t v23 = &protocol witness table for String;
    uint64_t v24 = &type metadata for String;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v24 = 0;
    uint64_t v23 = 0;
    uint64_t v21 = 0;
    *(void *)(inited + 224) = 0;
  }
  *(void *)(inited + 208) = v22;
  *(void *)(inited + 216) = v20;
  *(void *)(inited + 232) = v24;
  *(void *)(inited + 240) = v23;
  *(void *)(inited + 248) = v21;
  *(unsigned char *)(inited + 256) = 4;
  uint64_t v25 = v0[7];
  uint64_t v26 = v0[8];
  *(void *)(inited + 288) = &type metadata for String;
  *(void *)(inited + 296) = &protocol witness table for String;
  *(void *)(inited + 304) = &protocol witness table for String;
  *(void *)(inited + 264) = v25;
  *(void *)(inited + 272) = v26;
  *(unsigned char *)(inited + 312) = 5;
  uint64_t v27 = v0[9];
  uint64_t v28 = v0[10];
  *(void *)(inited + 344) = &type metadata for String;
  *(void *)(inited + 352) = &protocol witness table for String;
  *(void *)(inited + 360) = &protocol witness table for String;
  *(void *)(inited + 320) = v27;
  *(void *)(inited + 328) = v28;
  *(unsigned char *)(inited + 368) = 6;
  char v29 = *((unsigned char *)v0 + 88);
  *(void *)(inited + 400) = &type metadata for DDMInstallTiming;
  *(void *)(inited + 408) = sub_10024A450();
  *(void *)(inited + 416) = sub_100417C74();
  *(unsigned char *)(inited + 376) = v29;
  *(unsigned char *)(inited + 424) = 7;
  char v30 = *((unsigned char *)v0 + 89);
  *(void *)(inited + 456) = &type metadata for Bool;
  *(void *)(inited + 464) = &protocol witness table for Bool;
  *(void *)(inited + 472) = &protocol witness table for Bool;
  *(unsigned char *)(inited + 432) = v30;
  *(unsigned char *)(inited + 480) = 8;
  uint64_t v31 = (int *)type metadata accessor for DDMDeclarationTemplate();
  uint64_t v32 = (uint64_t)v6;
  sub_100017238((uint64_t)v0 + v31[12], (uint64_t)v6, &qword_10065BE10);
  uint64_t v33 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum();
  uint64_t v34 = *(void *)(v33 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33) == 1)
  {
    sub_10018B2A8(v74, v73);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10001729C(v32, &qword_10065BE10);
    *(_OWORD *)(inited + 488) = 0u;
    *(_OWORD *)(inited + 504) = 0u;
    *(_OWORD *)(inited + 520) = 0u;
  }
  else
  {
    *(void *)(inited + 512) = v33;
    uint64_t v71 = v32;
    *(void *)(inited + 520) = sub_100013D44(&qword_10065D050, (void (*)(uint64_t))&type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum);
    *(void *)(inited + 528) = sub_100013D44(&qword_100662E00, (void (*)(uint64_t))&type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum);
    uint64_t v35 = sub_10019CE94((uint64_t *)(inited + 488));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v34 + 32))(v35, v71, v33);
    sub_10018B2A8(v74, v73);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v36 = (uint64_t)v75;
  *(unsigned char *)(inited + 536) = 9;
  char v37 = *((unsigned char *)v0 + v31[13]);
  *(void *)(inited + 568) = &type metadata for ManagedAppDeclaration.ManagementScope;
  *(void *)(inited + 576) = sub_10024A4A4();
  *(void *)(inited + 584) = sub_100417D14();
  *(unsigned char *)(inited + 544) = v37;
  *(unsigned char *)(inited + 592) = 10;
  sub_100017238((uint64_t)v0 + v31[14], v36, &qword_10065C3C0);
  uint64_t v38 = type metadata accessor for URL();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v36, 1, v38) == 1)
  {
    sub_10001729C(v36, &qword_10065C3C0);
    *(_OWORD *)(inited + 600) = 0u;
    *(_OWORD *)(inited + 616) = 0u;
    *(_OWORD *)(inited + 632) = 0u;
  }
  else
  {
    *(void *)(inited + 624) = v38;
    *(void *)(inited + 632) = sub_100013D44(&qword_10065CFD8, (void (*)(uint64_t))&type metadata accessor for URL);
    *(void *)(inited + 640) = sub_100013D44(&qword_10065CFE0, (void (*)(uint64_t))&type metadata accessor for URL);
    long long v40 = sub_10019CE94((uint64_t *)(inited + 600));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v39 + 32))(v40, v36, v38);
  }
  *(unsigned char *)(inited + 648) = 11;
  char v41 = (uint64_t *)((char *)v0 + v31[15]);
  uint64_t v42 = v41[1];
  if (v42)
  {
    long long v43 = &protocol witness table for String;
    uint64_t v44 = *v41;
    long long v45 = &protocol witness table for String;
    uint64_t v46 = v42;
    char v47 = &type metadata for String;
  }
  else
  {
    uint64_t v44 = 0;
    uint64_t v46 = 0;
    char v47 = 0;
    long long v45 = 0;
    long long v43 = 0;
    *(void *)(inited + 672) = 0;
  }
  *(void *)(inited + 656) = v44;
  *(void *)(inited + 664) = v46;
  *(void *)(inited + 680) = v47;
  *(void *)(inited + 688) = v45;
  *(void *)(inited + 696) = v43;
  *(unsigned char *)(inited + 704) = 12;
  long long v48 = (char **)((char *)v0 + v31[16]);
  long long v49 = *v48;
  unint64_t v50 = (unint64_t)v48[1];
  *(void *)(inited + 736) = &type metadata for Persona;
  *(void *)(inited + 744) = sub_10024AA80();
  *(void *)(inited + 752) = sub_100411B64();
  long long v75 = v49;
  *(void *)(inited + 712) = v49;
  *(void *)(inited + 720) = v50;
  *(unsigned char *)(inited + 760) = 13;
  uint64_t v51 = (uint64_t)v0 + v31[17];
  uint64_t v52 = type metadata accessor for Platform();
  *(void *)(inited + 792) = v52;
  *(void *)(inited + 800) = sub_100013D44(&qword_10065D030, (void (*)(uint64_t))&type metadata accessor for Platform);
  *(void *)(inited + 808) = sub_100013D44(&qword_100662C18, (void (*)(uint64_t))&type metadata accessor for Platform);
  long long v53 = sub_10019CE94((uint64_t *)(inited + 768));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v53, v51, v52);
  *(unsigned char *)(inited + 816) = 14;
  uint64_t v54 = (uint64_t)v0 + v31[18];
  uint64_t v55 = type metadata accessor for DDMPurchaseMethod();
  *(void *)(inited + 848) = v55;
  *(void *)(inited + 856) = sub_100013D44(&qword_10065BC88, (void (*)(uint64_t))&type metadata accessor for DDMPurchaseMethod);
  *(void *)(inited + 864) = sub_100013D44(&qword_100662DF8, (void (*)(uint64_t))&type metadata accessor for DDMPurchaseMethod);
  char v56 = sub_10019CE94((uint64_t *)(inited + 824));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16))(v56, v54, v55);
  *(unsigned char *)(inited + 872) = 15;
  uint64_t v57 = (uint64_t *)((char *)v0 + v31[19]);
  if (v57[1])
  {
    uint64_t v58 = 0;
    long long v59 = 0;
    unint64_t v60 = 0;
    unint64_t v61 = 0;
    *(_OWORD *)(inited + 888) = 0u;
  }
  else
  {
    uint64_t v58 = *v57;
    unint64_t v60 = sub_10024A5E0();
    long long v59 = &type metadata for AppleVersionID;
    unint64_t v61 = sub_100411E60();
  }
  uint64_t v62 = (uint64_t)v75;
  *(void *)(inited + 880) = v58;
  *(void *)(inited + 904) = v59;
  *(void *)(inited + 912) = v60;
  *(void *)(inited + 920) = v61;
  *(unsigned char *)(inited + 928) = 16;
  long long v63 = (uint64_t *)((char *)v0 + v31[20]);
  uint64_t v64 = v63[1];
  if (v64)
  {
    uint64_t v65 = *v63;
    char v66 = &protocol witness table for String;
    uint64_t v67 = &protocol witness table for String;
    uint64_t v68 = &type metadata for String;
  }
  else
  {
    uint64_t v65 = 0;
    uint64_t v68 = 0;
    uint64_t v67 = 0;
    char v66 = 0;
    *(void *)(inited + 952) = 0;
  }
  *(void *)(inited + 936) = v65;
  *(void *)(inited + 944) = v64;
  *(void *)(inited + 960) = v68;
  *(void *)(inited + 968) = v67;
  *(void *)(inited + 976) = v66;
  swift_bridgeObjectRetain();
  sub_1001C5E20(v62, v50);
  swift_bridgeObjectRetain();
  return sub_10044BD74(inited);
}

uint64_t sub_1004173C0(void *a1, int a2)
{
  int v18 = a2;
  uint64_t v3 = sub_1000172F8(&qword_100662FE8);
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000172F8(&qword_100662FF0);
  uint64_t v6 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000172F8(&qword_100662FF8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018AC60(a1, a1[3]);
  sub_10041A4B4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  unint64_t v13 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  if (v18)
  {
    char v20 = 1;
    sub_10041A508();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    char v19 = 0;
    sub_10041A55C();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  }
  return (*v13)(v12, v9);
}

uint64_t sub_100417670()
{
  if (*v0) {
    return 0x6C616E6F6974706FLL;
  }
  else {
    return 0x6465726975716572;
  }
}

uint64_t sub_1004176A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100419F70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004176CC(uint64_t a1)
{
  unint64_t v2 = sub_10041A4B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100417708(uint64_t a1)
{
  unint64_t v2 = sub_10041A4B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100417744(uint64_t a1)
{
  unint64_t v2 = sub_10041A508();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100417780(uint64_t a1)
{
  unint64_t v2 = sub_10041A508();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004177BC(uint64_t a1)
{
  unint64_t v2 = sub_10041A55C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004177F8(uint64_t a1)
{
  unint64_t v2 = sub_10041A55C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100417834@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10041A064(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_100417864(void *a1)
{
  return sub_1004173C0(a1, *v1);
}

uint64_t sub_100417880(uint64_t a1, void (*a2)(long long *__return_ptr, long long *, char *))
{
  void (*v38)(long long *__return_ptr, long long *, char *);

  uint64_t v38 = a2;
  uint64_t v22 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v23 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (v6) {
    goto LABEL_6;
  }
LABEL_7:
  if (__OFADD__(v8++, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v8 >= v23) {
    goto LABEL_33;
  }
  unint64_t v13 = *(void *)(v22 + 8 * v8);
  if (v13) {
    goto LABEL_19;
  }
  int64_t v14 = v8 + 1;
  if (v8 + 1 >= v23) {
    goto LABEL_33;
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13)
  {
LABEL_18:
    int64_t v8 = v14;
LABEL_19:
    unint64_t v6 = (v13 - 1) & v13;
    for (unint64_t i = __clz(__rbit64(v13)) + (v8 << 6); ; unint64_t i = v10 | (v8 << 6))
    {
      char v15 = *(unsigned char *)(*(void *)(a1 + 48) + i);
      sub_100017238(*(void *)(a1 + 56) + 48 * i, (uint64_t)v36 + 8, &qword_10065CE70);
      LOBYTE(v36[0]) = v15;
      v34[0] = v36[0];
      v34[1] = v36[1];
      v34[2] = v36[2];
      uint64_t v35 = v37;
      *((void *)&v25 + 1) = &type metadata for DDMDeclarationEntity.Property;
      *(void *)&long long v26 = sub_100417C20();
      LOBYTE(v24) = v34[0];
      v38(&v29, &v24, (char *)v34 + 8);
      if (v2) {
        break;
      }
      sub_100014524((uint64_t)&v24);
      sub_10001729C((uint64_t)v34, &qword_100662DD8);
      if (*((void *)&v30 + 1))
      {
        long long v26 = v31;
        long long v27 = v32;
        uint64_t v28 = v33;
        long long v24 = v29;
        long long v25 = v30;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_10028F274(0, v9[2] + 1, 1, v9);
          uint64_t v9 = (void *)result;
        }
        unint64_t v17 = v9[2];
        unint64_t v16 = v9[3];
        if (v17 >= v16 >> 1)
        {
          uint64_t result = (uint64_t)sub_10028F274((void *)(v16 > 1), v17 + 1, 1, v9);
          uint64_t v9 = (void *)result;
        }
        v9[2] = v17 + 1;
        int v18 = &v9[9 * v17];
        *((_OWORD *)v18 + 2) = v24;
        long long v19 = v25;
        long long v20 = v26;
        long long v21 = v27;
        v18[12] = v28;
        *((_OWORD *)v18 + 4) = v20;
        *((_OWORD *)v18 + 5) = v21;
        *((_OWORD *)v18 + 3) = v19;
        if (!v6) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t result = sub_10001729C((uint64_t)&v29, &qword_10065CE88);
        if (!v6) {
          goto LABEL_7;
        }
      }
LABEL_6:
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
    }
    sub_100014524((uint64_t)&v24);
    sub_10001729C((uint64_t)v34, &qword_100662DD8);
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  int64_t v14 = v8 + 2;
  if (v8 + 2 >= v23)
  {
LABEL_33:
    swift_release();
    return (uint64_t)v9;
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13) {
    goto LABEL_18;
  }
  int64_t v14 = v8 + 3;
  if (v8 + 3 >= v23) {
    goto LABEL_33;
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13) {
    goto LABEL_18;
  }
  int64_t v14 = v8 + 4;
  if (v8 + 4 >= v23) {
    goto LABEL_33;
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v23) {
      goto LABEL_33;
    }
    unint64_t v13 = *(void *)(v22 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_19;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100417BB4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 72)) {
    sub_100014524(v0 + 48);
  }

  return _swift_deallocObject(v0, 97, 7);
}

uint64_t sub_100417C04()
{
  return sub_1001CD9A4((void (*)(void))&_swift_bridgeObjectRelease, 49);
}

unint64_t sub_100417C20()
{
  unint64_t result = qword_100662DD0;
  if (!qword_100662DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662DD0);
  }
  return result;
}

unint64_t sub_100417C74()
{
  unint64_t result = qword_100662DE8;
  if (!qword_100662DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662DE8);
  }
  return result;
}

uint64_t type metadata accessor for DDMDeclarationTemplate()
{
  uint64_t result = qword_100662E68;
  if (!qword_100662E68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_100417D14()
{
  unint64_t result = qword_100662DF0;
  if (!qword_100662DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662DF0);
  }
  return result;
}

uint64_t sub_100417D68(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = a2 + 2;
    unint64_t v8 = a2[3];
    if (v8 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v7;
    }
    else
    {
      uint64_t v10 = *v7;
      sub_100012670(*v7, a2[3]);
      *(void *)(v4 + 16) = v10;
      *(void *)(v4 + 24) = v8;
    }
    *(unsigned char *)(v4 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v11 = a2[6];
    *(void *)(v4 + 40) = a2[5];
    *(void *)(v4 + 48) = v11;
    uint64_t v12 = a2[8];
    *(void *)(v4 + 56) = a2[7];
    *(void *)(v4 + 64) = v12;
    uint64_t v13 = a2[9];
    uint64_t v14 = a2[10];
    *(unsigned char *)(v4 + 88) = *((unsigned char *)a2 + 88);
    *(unsigned char *)(v4 + 89) = *((unsigned char *)a2 + 89);
    uint64_t v15 = a3[12];
    uint64_t v51 = a3;
    __dst = (void *)(v4 + v15);
    unint64_t v16 = (char *)a2 + v15;
    *(void *)(v4 + 72) = v13;
    *(void *)(v4 + 80) = v14;
    uint64_t v17 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum();
    uint64_t v18 = *(void *)(v17 - 8);
    long long v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19(v16, 1, v17))
    {
      uint64_t v20 = sub_1000172F8(&qword_10065BE10);
      memcpy(__dst, v16, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 16))(__dst, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
    }
    uint64_t v21 = v51[14];
    *(unsigned char *)(v4 + v51[13]) = *((unsigned char *)a2 + v51[13]);
    uint64_t v22 = (void *)(v4 + v21);
    int64_t v23 = (char *)a2 + v21;
    uint64_t v24 = type metadata accessor for URL();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      uint64_t v26 = sub_1000172F8(&qword_10065C3C0);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    uint64_t v27 = v51[15];
    uint64_t v28 = v51[16];
    long long v29 = (void *)(v4 + v27);
    long long v30 = (uint64_t *)((char *)a2 + v27);
    uint64_t v31 = v30[1];
    *long long v29 = *v30;
    v29[1] = v31;
    long long v32 = (void *)(v4 + v28);
    uint64_t v33 = (uint64_t *)((char *)a2 + v28);
    unint64_t v34 = *(uint64_t *)((char *)a2 + v28 + 8);
    swift_bridgeObjectRetain();
    if (v34 >= 2)
    {
      *long long v32 = *v33;
      v32[1] = v34;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)long long v32 = *(_OWORD *)v33;
    }
    uint64_t v35 = v51[17];
    uint64_t v36 = v4 + v35;
    uint64_t v37 = (uint64_t)a2 + v35;
    uint64_t v38 = type metadata accessor for Platform();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    uint64_t v39 = v51[18];
    uint64_t v40 = v4 + v39;
    uint64_t v41 = (uint64_t)a2 + v39;
    uint64_t v42 = type metadata accessor for DDMPurchaseMethod();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    uint64_t v43 = v51[19];
    uint64_t v44 = v51[20];
    uint64_t v45 = v4 + v43;
    uint64_t v46 = (uint64_t)a2 + v43;
    *(void *)uint64_t v45 = *(void *)v46;
    *(unsigned char *)(v45 + 8) = *(unsigned char *)(v46 + 8);
    char v47 = (void *)(v4 + v44);
    long long v48 = (uint64_t *)((char *)a2 + v44);
    uint64_t v49 = v48[1];
    *char v47 = *v48;
    v47[1] = v49;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100418168(uint64_t a1, int *a2)
{
  unint64_t v4 = *(void *)(a1 + 24);
  if (v4 >> 60 != 15) {
    sub_100013510(*(void *)(a1 + 16), v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[12];
  uint64_t v6 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + a2[14];
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[16] + 8) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = a1 + a2[17];
  uint64_t v12 = type metadata accessor for Platform();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[18];
  uint64_t v14 = type metadata accessor for DDMPurchaseMethod();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10041839C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = (uint64_t *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 24);
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
  }
  else
  {
    uint64_t v8 = *v6;
    sub_100012670(*v6, *(void *)(a2 + 24));
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v7;
  }
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v10;
  uint64_t v11 = *(void *)(a2 + 72);
  uint64_t v12 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  uint64_t v13 = a3[12];
  __dst = (void *)(a1 + v13);
  unint64_t v50 = a3;
  uint64_t v14 = (const void *)(a2 + v13);
  *(void *)(a1 + 72) = v11;
  *(void *)(a1 + 80) = v12;
  uint64_t v15 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17(v14, 1, v15))
  {
    uint64_t v18 = sub_1000172F8(&qword_10065BE10);
    memcpy(__dst, v14, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(__dst, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
  }
  uint64_t v19 = v50[14];
  *(unsigned char *)(a1 + v50[13]) = *(unsigned char *)(a2 + v50[13]);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  uint64_t v22 = type metadata accessor for URL();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  uint64_t v25 = v50[15];
  uint64_t v26 = v50[16];
  uint64_t v27 = (void *)(a1 + v25);
  uint64_t v28 = (void *)(a2 + v25);
  uint64_t v29 = v28[1];
  void *v27 = *v28;
  v27[1] = v29;
  long long v30 = (void *)(a1 + v26);
  uint64_t v31 = (void *)(a2 + v26);
  unint64_t v32 = *(void *)(a2 + v26 + 8);
  swift_bridgeObjectRetain();
  if (v32 >= 2)
  {
    *long long v30 = *v31;
    v30[1] = v32;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)long long v30 = *(_OWORD *)v31;
  }
  uint64_t v33 = v50[17];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  uint64_t v36 = type metadata accessor for Platform();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  uint64_t v37 = v50[18];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  uint64_t v40 = type metadata accessor for DDMPurchaseMethod();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
  uint64_t v41 = v50[19];
  uint64_t v42 = v50[20];
  uint64_t v43 = a1 + v41;
  uint64_t v44 = a2 + v41;
  *(void *)uint64_t v43 = *(void *)v44;
  *(unsigned char *)(v43 + 8) = *(unsigned char *)(v44 + 8);
  uint64_t v45 = (void *)(a1 + v42);
  uint64_t v46 = (void *)(a2 + v42);
  uint64_t v47 = v46[1];
  void *v45 = *v46;
  v45[1] = v47;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10041874C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  unint64_t v7 = (_OWORD *)(a1 + 16);
  uint64_t v8 = a2 + 2;
  unint64_t v9 = a2[3];
  if (*(void *)(a1 + 24) >> 60 == 15)
  {
    if (v9 >> 60 != 15)
    {
      uint64_t v10 = *v8;
      sub_100012670(*v8, a2[3]);
      *(void *)(a1 + 16) = v10;
      *(void *)(a1 + 24) = v9;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v9 >> 60 == 15)
  {
    sub_1002E9998(a1 + 16);
LABEL_6:
    *unint64_t v7 = *(_OWORD *)v8;
    goto LABEL_8;
  }
  uint64_t v11 = *v8;
  sub_100012670(*v8, a2[3]);
  uint64_t v12 = *(void *)(a1 + 16);
  unint64_t v13 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = v9;
  sub_100013510(v12, v13);
LABEL_8:
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = a2[7];
  *(void *)(a1 + 64) = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = a2[9];
  *(void *)(a1 + 80) = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(unsigned char *)(a1 + 89) = *((unsigned char *)a2 + 89);
  uint64_t v14 = a3[12];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_13:
    uint64_t v22 = sub_1000172F8(&qword_10065BE10);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, char *, uint64_t))(v18 + 24))(v15, v16, v17);
LABEL_14:
  *(unsigned char *)(a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  uint64_t v23 = a3[14];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = type metadata accessor for URL();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v30)
  {
    (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
LABEL_19:
    uint64_t v31 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, char *, uint64_t))(v27 + 24))(v24, v25, v26);
LABEL_20:
  uint64_t v32 = a3[15];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (uint64_t *)((char *)a2 + v32);
  void *v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[16];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (uint64_t *)((char *)a2 + v35);
  unint64_t v38 = *(void *)(a1 + v35 + 8);
  unint64_t v39 = *(uint64_t *)((char *)a2 + v35 + 8);
  if (v38 >= 2)
  {
    if (v39 >= 2)
    {
      void *v36 = *v37;
      v36[1] = v37[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
    sub_10001729C((uint64_t)v36, &qword_100661C28);
    goto LABEL_25;
  }
  if (v39 < 2)
  {
LABEL_25:
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    goto LABEL_27;
  }
  void *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
LABEL_27:
  uint64_t v40 = a3[17];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = (uint64_t)a2 + v40;
  uint64_t v43 = type metadata accessor for Platform();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 24))(v41, v42, v43);
  uint64_t v44 = a3[18];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = (uint64_t)a2 + v44;
  uint64_t v47 = type metadata accessor for DDMPurchaseMethod();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 24))(v45, v46, v47);
  uint64_t v48 = a3[19];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = (uint64_t)a2 + v48;
  char v51 = *(unsigned char *)(v50 + 8);
  *(void *)uint64_t v49 = *(void *)v50;
  *(unsigned char *)(v49 + 8) = v51;
  uint64_t v52 = a3[20];
  long long v53 = (void *)(a1 + v52);
  uint64_t v54 = (uint64_t *)((char *)a2 + v52);
  void *v53 = *v54;
  v53[1] = v54[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100418C90(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  long long v6 = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  uint64_t v7 = a3[12];
  uint64_t v8 = (void *)(a1 + v7);
  unint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 72) = v6;
  uint64_t v10 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_1000172F8(&qword_10065BE10);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
  uint64_t v20 = a3[17];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = type metadata accessor for Platform();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = a3[18];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = type metadata accessor for DDMPurchaseMethod();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  uint64_t v28 = a3[19];
  uint64_t v29 = a3[20];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(void *)uint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  *(_OWORD *)(a1 + v29) = *(_OWORD *)(a2 + v29);
  return a1;
}

uint64_t sub_100418F9C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v6 = (_OWORD *)(a1 + 16);
  uint64_t v7 = (_OWORD *)(a2 + 16);
  unint64_t v8 = *(void *)(a1 + 24);
  if (v8 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v9 = *(void *)(a2 + 24);
  if (v9 >> 60 == 15)
  {
    sub_1002E9998(a1 + 16);
LABEL_4:
    *long long v6 = *v7;
    goto LABEL_6;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)v7;
  *(void *)(a1 + 24) = v9;
  sub_100013510(v10, v8);
LABEL_6:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  uint64_t v14 = a3[12];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_11:
    uint64_t v22 = sub_1000172F8(&qword_10065BE10);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v15, v16, v17);
LABEL_12:
  uint64_t v23 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = type metadata accessor for URL();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v30)
  {
    (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
LABEL_17:
    uint64_t v31 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v24, v25, v26);
LABEL_18:
  uint64_t v32 = a3[15];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (uint64_t *)(a2 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  void *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[16];
  unint64_t v38 = (void *)(a1 + v37);
  unint64_t v39 = (void *)(a2 + v37);
  if (*(void *)(a1 + v37 + 8) >= 2uLL)
  {
    unint64_t v40 = v39[1];
    if (v40 >= 2)
    {
      void *v38 = *v39;
      v38[1] = v40;
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    sub_10001729C((uint64_t)v38, &qword_100661C28);
  }
  *(_OWORD *)unint64_t v38 = *(_OWORD *)v39;
LABEL_23:
  uint64_t v41 = a3[17];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  uint64_t v44 = type metadata accessor for Platform();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 40))(v42, v43, v44);
  uint64_t v45 = a3[18];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  uint64_t v48 = type metadata accessor for DDMPurchaseMethod();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 40))(v46, v47, v48);
  uint64_t v49 = a3[19];
  uint64_t v50 = a3[20];
  uint64_t v51 = a1 + v49;
  uint64_t v52 = a2 + v49;
  *(void *)uint64_t v51 = *(void *)v52;
  *(unsigned char *)(v51 + 8) = *(unsigned char *)(v52 + 8);
  long long v53 = (void *)(a1 + v50);
  uint64_t v54 = (uint64_t *)(a2 + v50);
  uint64_t v56 = *v54;
  uint64_t v55 = v54[1];
  void *v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100419428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10041943C);
}

uint64_t sub_10041943C(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 64);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_1000172F8(&qword_10065BE10);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[12];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_1000172F8(&qword_10065C3C0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[14];
    goto LABEL_11;
  }
  uint64_t v13 = type metadata accessor for Platform();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[17];
    goto LABEL_11;
  }
  uint64_t v15 = type metadata accessor for DDMPurchaseMethod();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[18];

  return v16(v18, a2, v17);
}

uint64_t sub_100419608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10041961C);
}

uint64_t sub_10041961C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 64) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_1000172F8(&qword_10065BE10);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[12];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1000172F8(&qword_10065C3C0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[14];
    goto LABEL_9;
  }
  uint64_t v13 = type metadata accessor for Platform();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[17];
    goto LABEL_9;
  }
  uint64_t v15 = type metadata accessor for DDMPurchaseMethod();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[18];

  return v16(v18, a2, a2, v17);
}

void sub_1004197E8()
{
  sub_1004199B0(319, (unint64_t *)&unk_100662E78, (void (*)(uint64_t))&type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum);
  if (v0 <= 0x3F)
  {
    sub_1004199B0(319, (unint64_t *)&qword_100661BB0, (void (*)(uint64_t))&type metadata accessor for URL);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Platform();
      if (v2 <= 0x3F)
      {
        type metadata accessor for DDMPurchaseMethod();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1004199B0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for DDMDeclaration(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for DDMDeclaration()
{
  return swift_release();
}

void *assignWithCopy for DDMDeclaration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for DDMDeclaration(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DDMDeclaration()
{
  return &type metadata for DDMDeclaration;
}

ValueMetadata *type metadata accessor for DDMDeclarationEntity()
{
  return &type metadata for DDMDeclarationEntity;
}

uint64_t getEnumTagSinglePayload for DDMDeclarationEntity.Property(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DDMDeclarationEntity.Property(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *unint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100419C30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DDMDeclarationEntity.Property()
{
  return &type metadata for DDMDeclarationEntity.Property;
}

ValueMetadata *type metadata accessor for DDMInstallTiming()
{
  return &type metadata for DDMInstallTiming;
}

unint64_t sub_100419C80()
{
  unint64_t result = qword_100662EE8;
  if (!qword_100662EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662EE8);
  }
  return result;
}

unint64_t sub_100419CD8()
{
  unint64_t result = qword_100662EF0;
  if (!qword_100662EF0)
  {
    sub_10017B924(&qword_100662EF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662EF0);
  }
  return result;
}

unint64_t sub_100419D38()
{
  unint64_t result = qword_100662F00;
  if (!qword_100662F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662F00);
  }
  return result;
}

unint64_t sub_100419D94()
{
  unint64_t result = qword_100662F38;
  if (!qword_100662F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662F38);
  }
  return result;
}

unint64_t sub_100419DE8(void *a1)
{
  a1[1] = sub_100419E20();
  a1[2] = sub_100419E74();
  unint64_t result = sub_100419EC8();
  a1[3] = result;
  return result;
}

unint64_t sub_100419E20()
{
  unint64_t result = qword_100662FA0;
  if (!qword_100662FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662FA0);
  }
  return result;
}

unint64_t sub_100419E74()
{
  unint64_t result = qword_100662FA8;
  if (!qword_100662FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662FA8);
  }
  return result;
}

unint64_t sub_100419EC8()
{
  unint64_t result = qword_100662FB0;
  if (!qword_100662FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662FB0);
  }
  return result;
}

uint64_t sub_100419F1C()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x11) {
    return 17;
  }
  else {
    return v0;
  }
}

uint64_t sub_100419F70(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6465726975716572 && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616E6F6974706FLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10041A064(uint64_t a1)
{
  uint64_t v2 = sub_1000172F8(&qword_100662FB8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000172F8(&qword_100662FC0);
  uint64_t v25 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  int v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000172F8(&qword_100662FC8);
  uint64_t v24 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018AC60((void *)a1, *(void *)(a1 + 24));
  sub_10041A4B4();
  uint64_t v12 = v26;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v13 = v25;
  uint64_t v21 = v6;
  uint64_t v26 = a1;
  uint64_t v14 = KeyedDecodingContainer.allKeys.getter();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v18 = v17;
    sub_1000172F8(&qword_10065DF58);
    *uint64_t v18 = &type metadata for DDMInstallTiming;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, enum case for DecodingError.typeMismatch(_:), v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
    a1 = v26;
LABEL_7:
    sub_100014524(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v14 + 32);
  if (a1)
  {
    LODWORD(v25) = *(unsigned __int8 *)(v14 + 32);
    char v28 = 1;
    sub_10041A508();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t v15 = v24;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v9);
    a1 = v25;
  }
  else
  {
    char v27 = 0;
    sub_10041A55C();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t v19 = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  }
  sub_100014524(v26);
  return a1;
}

unint64_t sub_10041A4B4()
{
  unint64_t result = qword_100662FD0;
  if (!qword_100662FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662FD0);
  }
  return result;
}

unint64_t sub_10041A508()
{
  unint64_t result = qword_100662FD8;
  if (!qword_100662FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662FD8);
  }
  return result;
}

unint64_t sub_10041A55C()
{
  unint64_t result = qword_100662FE0;
  if (!qword_100662FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100662FE0);
  }
  return result;
}

unsigned char *_s28ManagedAppDistributionDaemon16DDMInstallTimingOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10041A67CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DDMInstallTiming.CodingKeys()
{
  return &type metadata for DDMInstallTiming.CodingKeys;
}

ValueMetadata *type metadata accessor for DDMInstallTiming.RequiredCodingKeys()
{
  return &type metadata for DDMInstallTiming.RequiredCodingKeys;
}

ValueMetadata *type metadata accessor for DDMInstallTiming.OptionalCodingKeys()
{
  return &type metadata for DDMInstallTiming.OptionalCodingKeys;
}

unint64_t sub_10041A6D8()
{
  unint64_t result = qword_100663000;
  if (!qword_100663000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663000);
  }
  return result;
}

unint64_t sub_10041A730()
{
  unint64_t result = qword_100663008;
  if (!qword_100663008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663008);
  }
  return result;
}

unint64_t sub_10041A788()
{
  unint64_t result = qword_100663010;
  if (!qword_100663010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663010);
  }
  return result;
}

unint64_t sub_10041A7E0()
{
  unint64_t result = qword_100663018;
  if (!qword_100663018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663018);
  }
  return result;
}

unint64_t sub_10041A838()
{
  unint64_t result = qword_100663020;
  if (!qword_100663020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663020);
  }
  return result;
}

unint64_t sub_10041A890()
{
  unint64_t result = qword_100663028;
  if (!qword_100663028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663028);
  }
  return result;
}

unint64_t sub_10041A8E8()
{
  unint64_t result = qword_100663030;
  if (!qword_100663030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663030);
  }
  return result;
}

uint64_t sub_10041A940(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10051C120(*a1, *a2);
}

Swift::Int sub_10041A94C()
{
  return Hasher._finalize()();
}

uint64_t sub_10041AA04()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10041AAA8()
{
  return Hasher._finalize()();
}

unint64_t sub_10041AB5C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10041B138(*a1);
  *a2 = result;
  return result;
}

void sub_10041AB8C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEF64695F63696C62;
  unint64_t v4 = 0xE900000000000064;
  uint64_t v5 = 0x695F656C646E7562;
  if (v2 != 1)
  {
    uint64_t v5 = 0x5F65736E6563696CLL;
    unint64_t v4 = 0xEA00000000006469;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x75705F7465737361;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void sub_10041AC00(void *a1@<X8>)
{
  *a1 = &off_100639930;
}

id sub_10041ADAC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LicenseStorageEntity.Entity();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for LicenseStorageEntity.Entity()
{
  return self;
}

ValueMetadata *type metadata accessor for LicenseStorageEntity()
{
  return &type metadata for LicenseStorageEntity;
}

unint64_t sub_10041AE18()
{
  unint64_t result = qword_100663060;
  if (!qword_100663060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663060);
  }
  return result;
}

unint64_t sub_10041AE6C(void *a1)
{
  a1[1] = sub_10041AEA4();
  a1[2] = sub_10041AEF8();
  unint64_t result = sub_10041AF4C();
  a1[3] = result;
  return result;
}

unint64_t sub_10041AEA4()
{
  unint64_t result = qword_100663098;
  if (!qword_100663098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663098);
  }
  return result;
}

unint64_t sub_10041AEF8()
{
  unint64_t result = qword_1006630A0;
  if (!qword_1006630A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006630A0);
  }
  return result;
}

unint64_t sub_10041AF4C()
{
  unint64_t result = qword_1006630A8;
  if (!qword_1006630A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006630A8);
  }
  return result;
}

unint64_t sub_10041AFA4()
{
  unint64_t result = qword_1006630B0;
  if (!qword_1006630B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006630B0);
  }
  return result;
}

unint64_t sub_10041AFFC()
{
  unint64_t result = qword_1006630B8;
  if (!qword_1006630B8)
  {
    sub_10017B924(&qword_1006630C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006630B8);
  }
  return result;
}

unint64_t sub_10041B058()
{
  sub_1000172F8(&qword_1006630C8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A6B00;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 64) = &type metadata for String;
  *(void *)(inited + 72) = &protocol witness table for String;
  *(void *)(inited + 80) = &protocol witness table for String;
  long long v2 = *v0;
  long long v3 = v0[1];
  *(_OWORD *)(inited + 40) = *v0;
  *(unsigned char *)(inited + 88) = 1;
  long long v6 = v3;
  long long v7 = v2;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = &protocol witness table for String;
  *(void *)(inited + 136) = &protocol witness table for String;
  *(_OWORD *)(inited + 96) = v3;
  *(unsigned char *)(inited + 144) = 2;
  uint64_t v4 = *((void *)v0 + 4);
  *(void *)(inited + 176) = &type metadata for UInt64;
  *(void *)(inited + 184) = &protocol witness table for UInt64;
  *(void *)(inited + 192) = &protocol witness table for UInt64;
  *(void *)(inited + 152) = v4;
  sub_10018B0F0((uint64_t)&v7);
  sub_10018B0F0((uint64_t)&v6);
  return sub_10044BDB0(inited);
}

unint64_t sub_10041B138(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1006398C8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

unsigned char *storeEnumTagSinglePayload for LicenseStorageEntity.Property(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10041B250);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LicenseStorageEntity.Property()
{
  return &type metadata for LicenseStorageEntity.Property;
}

uint64_t sub_10041B288(uint64_t a1)
{
  uint64_t v25 = sub_1000172F8(&qword_10065B950);
  LOWORD(v24) = 9;
  uint64_t v26 = sub_10000DDFC(&qword_10065B958, &qword_10065B950);
  *((void *)&v24 + 1) = a1;
  sub_1000172F8(&qword_10065E5F8);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1005A3EC0;
  unint64_t v4 = v3 + 32;
  sub_10018B164(&v24, v3 + 32);
  uint64_t v25 = sub_1000172F8(&qword_100663110);
  uint64_t v26 = sub_10000DDFC(&qword_100663118, &qword_100663110);
  LOWORD(v24) = 7;
  BYTE2(v24) = 0;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1005A3EC0;
  sub_10018B164(&v24, v5 + 32);
  sub_1000172F8(&qword_100663120);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A4070;
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = v5;
  int64_t v7 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int v8 = sub_100290C40(0, v7, 1, (char *)_swiftEmptyArrayStorage);
  uint64_t v9 = v8;
  if (*(void *)(v3 + 16))
  {
    uint64_t v10 = *((void *)v8 + 2);
    if ((*((void *)v8 + 3) >> 1) - v10 < v7)
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    unint64_t v11 = (unint64_t)&v8[40 * v10 + 32];
    if (v4 < v11 + 40 * v7 && v11 < v4 + 40 * v7) {
      goto LABEL_37;
    }
    sub_1000172F8(&qword_10065E600);
    swift_arrayInitWithCopy();
    if (v7)
    {
      uint64_t v13 = *((void *)v9 + 2);
      BOOL v14 = __OFADD__(v13, v7);
      uint64_t v15 = v13 + v7;
      if (v14)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      *((void *)v9 + 2) = v15;
    }
  }
  else if (v7)
  {
    __break(1u);
    goto LABEL_25;
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(inited + 40);
  unint64_t v4 = *(void *)(v3 + 16);
  int64_t v7 = *((void *)v9 + 2);
  int64_t v1 = v7 + v4;
  if (__OFADD__(v7, v4))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v16 = *((void *)v9 + 3);
  swift_bridgeObjectRetain();
  if (v1 <= (uint64_t)(v16 >> 1))
  {
    if (v4) {
      goto LABEL_15;
    }
    goto LABEL_30;
  }
LABEL_26:
  if (v7 <= v1) {
    int64_t v22 = v1;
  }
  else {
    int64_t v22 = v7;
  }
  uint64_t v9 = sub_100290C40((char *)1, v22, 1, v9);
  if (!*(void *)(v3 + 16))
  {
LABEL_30:
    if (!v4) {
      goto LABEL_31;
    }
    __break(1u);
    goto LABEL_33;
  }
LABEL_15:
  uint64_t v17 = *((void *)v9 + 2);
  if ((*((void *)v9 + 3) >> 1) - v17 < (uint64_t)v4)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  unint64_t v18 = (unint64_t)&v9[40 * v17 + 32];
  if (v3 + 32 < v18 + 40 * v4 && v18 < v3 + 32 + 40 * v4) {
    goto LABEL_37;
  }
  sub_1000172F8(&qword_10065E600);
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1000172F8(&qword_100663128);
    swift_arrayDestroy();
    return (uint64_t)v9;
  }
  uint64_t v20 = *((void *)v9 + 2);
  BOOL v14 = __OFADD__(v20, v4);
  uint64_t v21 = v20 + v4;
  if (!v14)
  {
    *((void *)v9 + 2) = v21;
    goto LABEL_31;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_10041B608()
{
  uint64_t v1 = sub_1000172F8(&qword_10065C3C0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000172F8(&qword_100663130);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005AE880;
  *(unsigned char *)(inited + 32) = 2;
  uint64_t v5 = (int *)type metadata accessor for AppPackageTemplate();
  uint64_t v6 = *(void *)(v0 + v5[5]);
  *(void *)(inited + 64) = &type metadata for UInt64;
  *(void *)(inited + 72) = &protocol witness table for UInt64;
  *(void *)(inited + 80) = &protocol witness table for UInt64;
  *(void *)(inited + 40) = v6;
  *(unsigned char *)(inited + 88) = 4;
  int64_t v7 = (unint64_t *)(v0 + v5[9]);
  unint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  unint64_t v10 = v7[2];
  uint64_t v11 = v7[3];
  uint64_t v12 = v7[4];
  unint64_t v13 = v7[5];
  uint64_t v84 = v12;
  unint64_t v85 = v10;
  uint64_t v82 = v0;
  if (v10 == 1)
  {
    *(_OWORD *)(inited + 112) = 0u;
    *(_OWORD *)(inited + 128) = 0u;
    *(_OWORD *)(inited + 96) = 0u;
  }
  else
  {
    *(void *)(inited + 120) = &type metadata for BlockDigest;
    char v78 = v3;
    uint64_t v14 = v8;
    *(void *)(inited + 128) = sub_10024AC10();
    *(void *)(inited + 136) = sub_10041CDE0();
    uint64_t v15 = swift_allocObject();
    uint64_t v8 = v14;
    unint64_t v16 = v85;
    uint64_t v3 = v78;
    uint64_t v0 = v82;
    *(void *)(inited + 96) = v15;
    *(unsigned char *)(v15 + 16) = v9 & 1;
    *(void *)(v15 + 24) = v8;
    *(void *)(v15 + 32) = v16;
    *(void *)(v15 + 40) = v11;
    *(unsigned char *)(v15 + 48) = v12 & 1;
    *(void *)(v15 + 56) = v13;
  }
  *(unsigned char *)(inited + 144) = 1;
  uint64_t v17 = (unint64_t *)(v0 + v5[10]);
  unint64_t v18 = *v17;
  uint64_t v19 = v17[1];
  uint64_t v21 = v17[2];
  uint64_t v20 = v17[3];
  uint64_t v22 = v17[4];
  uint64_t v23 = v17[5];
  uint64_t v83 = v13;
  unint64_t v80 = v9;
  uint64_t v81 = v11;
  char v78 = (char *)v22;
  uint64_t v79 = v8;
  uint64_t v76 = v20;
  uint64_t v77 = v23;
  uint64_t v74 = (int *)v19;
  unint64_t v75 = v18;
  if (v21 == 1)
  {
    *(_OWORD *)(inited + 168) = 0u;
    *(_OWORD *)(inited + 184) = 0u;
    *(_OWORD *)(inited + 152) = 0u;
  }
  else
  {
    *(void *)(inited + 176) = &type metadata for BlockDigest;
    char v24 = v22;
    uint64_t v25 = v23;
    uint64_t v26 = v20;
    unint64_t v73 = v21;
    char v27 = v18;
    *(void *)(inited + 184) = sub_10024AC10();
    *(void *)(inited + 192) = sub_10041CDE0();
    uint64_t v28 = swift_allocObject();
    *(void *)(inited + 152) = v28;
    char v29 = v27 & 1;
    uint64_t v21 = v73;
    *(unsigned char *)(v28 + 16) = v29;
    *(void *)(v28 + 24) = v19;
    *(void *)(v28 + 32) = v21;
    *(void *)(v28 + 40) = v26;
    *(unsigned char *)(v28 + 48) = v24 & 1;
    *(void *)(v28 + 56) = v25;
  }
  *(unsigned char *)(inited + 200) = 5;
  sub_100017238(v0 + v5[11], (uint64_t)v3, &qword_10065C3C0);
  uint64_t v30 = type metadata accessor for URL();
  uint64_t v31 = *(void *)(v30 - 8);
  int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v3, 1, v30);
  uint64_t v68 = v30;
  uint64_t v69 = v31;
  if (v32 == 1)
  {
    sub_100254E0C(v80, v79, v85);
    sub_100254E0C(v75, (uint64_t)v74, v21);
    sub_10001729C((uint64_t)v3, &qword_10065C3C0);
    *(_OWORD *)(inited + 208) = 0u;
    *(_OWORD *)(inited + 224) = 0u;
    *(_OWORD *)(inited + 240) = 0u;
  }
  else
  {
    *(void *)(inited + 232) = v30;
    *(void *)(inited + 240) = sub_1002E0B34(&qword_10065CFD8);
    *(void *)(inited + 248) = sub_1002E0B34(&qword_10065CFE0);
    uint64_t v33 = sub_10019CE94((uint64_t *)(inited + 208));
    (*(void (**)(uint64_t *, char *, uint64_t))(v31 + 32))(v33, v3, v30);
    sub_100254E0C(v80, v79, v85);
    sub_100254E0C(v75, (uint64_t)v74, v21);
  }
  *(unsigned char *)(inited + 256) = 6;
  uint64_t v34 = (uint64_t *)(v0 + v5[13]);
  uint64_t v35 = *v34;
  unint64_t v36 = v34[1];
  unint64_t v37 = v34[3];
  uint64_t v38 = v34[4];
  uint64_t v84 = v34[2];
  unint64_t v85 = v37;
  uint64_t v39 = v34[5];
  uint64_t v40 = v34[6];
  uint64_t v74 = v5;
  uint64_t v42 = v34[7];
  uint64_t v41 = v34[8];
  unint64_t v43 = v34[9];
  unint64_t v71 = v34[10];
  uint64_t v72 = v41;
  unint64_t v44 = v34[11];
  uint64_t v70 = v34[12];
  uint64_t v83 = v34[13];
  *(void *)(inited + 288) = &type metadata for AppPackageEncryption;
  *(void *)(inited + 296) = sub_10024AC64();
  *(void *)(inited + 304) = sub_10041CE34();
  uint64_t v45 = (void *)swift_allocObject();
  *(void *)(inited + 264) = v45;
  unint64_t v80 = v36;
  uint64_t v81 = v35;
  v45[2] = v35;
  v45[3] = v36;
  unint64_t v46 = v85;
  v45[4] = v84;
  v45[5] = v46;
  uint64_t v76 = v38;
  uint64_t v77 = v42;
  v45[6] = v38;
  v45[7] = v39;
  char v78 = (char *)v40;
  uint64_t v79 = v39;
  v45[8] = v40;
  v45[9] = v42;
  uint64_t v47 = v74;
  uint64_t v49 = v82;
  uint64_t v48 = v83;
  uint64_t v50 = v72;
  v45[10] = v72;
  v45[11] = v43;
  unint64_t v75 = v43;
  unint64_t v51 = v71;
  v45[12] = v71;
  v45[13] = v44;
  unint64_t v73 = v44;
  v45[14] = v70;
  v45[15] = v48;
  *(unsigned char *)(inited + 312) = 8;
  LOBYTE(v48) = *(unsigned char *)(v49 + v47[12]);
  *(void *)(inited + 344) = &type metadata for Bool;
  *(void *)(inited + 352) = &protocol witness table for Bool;
  *(void *)(inited + 360) = &protocol witness table for Bool;
  *(unsigned char *)(inited + 320) = v48;
  *(unsigned char *)(inited + 368) = 12;
  LOBYTE(v35) = *(unsigned char *)(v49 + v47[8]);
  *(void *)(inited + 400) = &type metadata for AppPackageType;
  *(void *)(inited + 408) = sub_10024A920();
  *(void *)(inited + 416) = sub_10041CD8C();
  *(unsigned char *)(inited + 376) = v35;
  *(unsigned char *)(inited + 424) = 13;
  uint64_t v52 = (uint64_t *)(v49 + v47[6]);
  if (v52[1])
  {
    uint64_t v53 = 0;
    uint64_t v54 = 0;
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    *(void *)(inited + 440) = 0;
    *(void *)(inited + 448) = 0;
  }
  else
  {
    uint64_t v53 = *v52;
    uint64_t v56 = &protocol witness table for UInt64;
    uint64_t v55 = &protocol witness table for UInt64;
    uint64_t v54 = &type metadata for UInt64;
  }
  uint64_t v57 = v68;
  uint64_t v58 = v69;
  *(void *)(inited + 432) = v53;
  *(void *)(inited + 456) = v54;
  *(void *)(inited + 464) = v55;
  *(void *)(inited + 472) = v56;
  *(unsigned char *)(inited + 480) = 14;
  *(void *)(inited + 512) = v57;
  *(void *)(inited + 520) = sub_1002E0B34(&qword_10065CFD8);
  *(void *)(inited + 528) = sub_1002E0B34(&qword_10065CFE0);
  long long v59 = sub_10019CE94((uint64_t *)(inited + 488));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v58 + 16))(v59, v49, v57);
  *(unsigned char *)(inited + 536) = 15;
  unint64_t v60 = (uint64_t *)(v49 + v47[7]);
  uint64_t v61 = v60[1];
  if (v61)
  {
    uint64_t v62 = *v60;
    long long v63 = &protocol witness table for String;
    uint64_t v64 = &protocol witness table for String;
    uint64_t v65 = &type metadata for String;
  }
  else
  {
    uint64_t v62 = 0;
    uint64_t v65 = 0;
    uint64_t v64 = 0;
    long long v63 = 0;
    *(void *)(inited + 560) = 0;
  }
  *(void *)(inited + 544) = v62;
  *(void *)(inited + 552) = v61;
  *(void *)(inited + 568) = v65;
  *(void *)(inited + 576) = v64;
  *(void *)(inited + 584) = v63;
  sub_10041D3F8(v81, v80, v84, v85, v76, v79, (uint64_t)v78, v77, v50, v75, v51, v73);
  swift_bridgeObjectRetain();
  return sub_10044BA50(inited);
}

unint64_t sub_10041BC60(char a1)
{
  unint64_t result = 7107189;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x73736572706D6F63;
      break;
    case 2:
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x746E6169726176;
      break;
    case 4:
      unint64_t result = 1701869940;
      break;
    case 5:
      unint64_t result = 0x747365676964;
      break;
    case 6:
      unint64_t result = 0x6944726568706963;
      break;
    case 7:
      unint64_t result = 0x61636F4C6B736964;
      break;
    case 9:
      unint64_t result = 0x6974707972636E65;
      break;
    case 10:
      unint64_t result = 0x7562697274736964;
      break;
    case 11:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10041BDE8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1000172F8(&qword_1006630E0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018AC60(a1, a1[3]);
  sub_10041CC78();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v22) = 0;
  type metadata accessor for URL();
  sub_1002E0B34(&qword_10065CFE0);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    unint64_t v9 = (int *)type metadata accessor for AppPackageTemplate();
    LOBYTE(v22) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v22) = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v22) = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v22) = *(unsigned char *)(v3 + v9[8]);
    char v29 = 4;
    sub_10041CD8C();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    unint64_t v10 = (long long *)(v3 + v9[9]);
    long long v11 = v10[1];
    long long v22 = *v10;
    long long v23 = v11;
    long long v24 = v10[2];
    char v29 = 5;
    v21[1] = sub_10041CDE0();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    uint64_t v12 = (long long *)(v3 + v9[10]);
    long long v13 = v12[1];
    long long v22 = *v12;
    long long v23 = v13;
    long long v24 = v12[2];
    char v29 = 6;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v22) = 7;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v22) = 8;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v14 = (long long *)(v3 + v9[13]);
    long long v15 = v14[1];
    long long v22 = *v14;
    long long v23 = v15;
    long long v16 = v14[3];
    long long v24 = v14[2];
    long long v25 = v16;
    long long v17 = v14[5];
    long long v26 = v14[4];
    long long v27 = v17;
    long long v28 = v14[6];
    char v29 = 9;
    sub_10041CE34();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    unint64_t v18 = (long long *)(v3 + v9[14]);
    char v19 = *((unsigned char *)v18 + 16);
    long long v22 = *v18;
    LOBYTE(v23) = v19;
    char v29 = 10;
    sub_100411CC8();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v22) = 11;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10041C220@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = sub_1000172F8(&qword_10065C3C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v48 = (uint64_t)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v50 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1000172F8(&qword_1006630D0);
  uint64_t v49 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  unint64_t v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AppPackageTemplate();
  long long v11 = (int *)__chkstk_darwin(v10);
  long long v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = &v13[v11[6]];
  *(void *)uint64_t v14 = 0;
  v14[8] = 1;
  long long v15 = &v13[v11[7]];
  *(void *)long long v15 = 0;
  *((void *)v15 + 1) = 0;
  unint64_t v60 = (uint64_t *)v15;
  long long v16 = (uint64_t *)&v13[v11[9]];
  uint64_t *v16 = 0;
  v16[1] = 0;
  v16[2] = 1;
  v16[3] = 0;
  v16[4] = 0;
  v16[5] = 0;
  long long v17 = (uint64_t *)&v13[v11[10]];
  *long long v17 = 0;
  v17[1] = 0;
  v17[2] = 1;
  v17[3] = 0;
  v17[4] = 0;
  v17[5] = 0;
  unint64_t v18 = *(void (**)(void))(v6 + 56);
  uint64_t v58 = &v13[v11[11]];
  v18();
  char v19 = &v13[*(int *)(v10 + 56)];
  *(void *)char v19 = 0;
  *((void *)v19 + 1) = 0;
  uint64_t v57 = v19;
  v19[16] = -1;
  unint64_t v51 = (int *)v10;
  uint64_t v20 = *(int *)(v10 + 60);
  long long v59 = v13;
  uint64_t v21 = &v13[v20];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  uint64_t v55 = v21;
  uint64_t v56 = a1;
  sub_10018AC60(a1, a1[3]);
  sub_10041CC78();
  uint64_t v52 = v9;
  uint64_t v22 = v54;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v22)
  {
    sub_100014524((uint64_t)v56);
    uint64_t v25 = (uint64_t)v58;
    swift_bridgeObjectRelease();
    sub_1001C3D08(*v16, v16[1], v16[2]);
    sub_1001C3D08(*v17, v17[1], v17[2]);
    sub_10001729C(v25, &qword_10065C3C0);
    sub_10018ACA4(*(void *)v57, *((void *)v57 + 1), v57[16]);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = v49;
    uint64_t v54 = v6;
    LOBYTE(v61) = 0;
    uint64_t v24 = sub_1002E0B34(&qword_10065CFD8);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v46[1] = v24;
    uint64_t v26 = (uint64_t)v59;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v59, v50, v5);
    LOBYTE(v61) = 1;
    *(void *)(v26 + v51[5]) = KeyedDecodingContainer.decode(_:forKey:)();
    LOBYTE(v61) = 2;
    *(void *)uint64_t v14 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v14[8] = v27 & 1;
    LOBYTE(v61) = 3;
    uint64_t v28 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    char v29 = v60;
    *unint64_t v60 = v28;
    v29[1] = v30;
    char v68 = 4;
    sub_10024A920();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v31 = (uint64_t)v58;
    *(unsigned char *)(v26 + v51[8]) = v61;
    char v68 = 5;
    sub_10024AC10();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    long long v32 = v62;
    *(_OWORD *)long long v16 = v61;
    *((_OWORD *)v16 + 1) = v32;
    *((_OWORD *)v16 + 2) = v63;
    char v68 = 6;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    long long v33 = v62;
    *(_OWORD *)long long v17 = v61;
    *((_OWORD *)v17 + 1) = v33;
    *((_OWORD *)v17 + 2) = v63;
    LOBYTE(v61) = 7;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10027ED88(v48, v31);
    LOBYTE(v61) = 8;
    *(unsigned char *)(v26 + v51[12]) = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    char v68 = 9;
    sub_10024AC64();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v34 = &v59[v51[13]];
    long long v35 = v62;
    *(_OWORD *)uint64_t v34 = v61;
    *((_OWORD *)v34 + 1) = v35;
    long long v36 = v64;
    *((_OWORD *)v34 + 2) = v63;
    *((_OWORD *)v34 + 3) = v36;
    long long v37 = v66;
    *((_OWORD *)v34 + 4) = v65;
    *((_OWORD *)v34 + 5) = v37;
    *((_OWORD *)v34 + 6) = v67;
    char v68 = 10;
    sub_10024A688();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    long long v38 = v61;
    LOBYTE(v31) = v62;
    uint64_t v39 = v57;
    sub_10018ACA4(*(void *)v57, *((void *)v57 + 1), v57[16]);
    *(_OWORD *)uint64_t v39 = v38;
    v39[16] = v31;
    LOBYTE(v61) = 11;
    uint64_t v40 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v42 = v41;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v52, v53);
    unint64_t v43 = (uint64_t *)v55;
    swift_bridgeObjectRelease();
    *unint64_t v43 = v40;
    v43[1] = v42;
    uint64_t v44 = (uint64_t)v59;
    sub_10041CCCC((uint64_t)v59, v47);
    sub_100014524((uint64_t)v56);
    return sub_10041CD30(v44);
  }
}

unint64_t sub_10041CB48()
{
  return sub_10041BC60(*v0);
}

uint64_t sub_10041CB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10041F004(a1, a2);
  *a3 = result;
  return result;
}

void sub_10041CB78(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_10041CB84(uint64_t a1)
{
  unint64_t v2 = sub_10041CC78();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10041CBC0(uint64_t a1)
{
  unint64_t v2 = sub_10041CC78();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10041CBFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10041C220(a1, a2);
}

uint64_t sub_10041CC14(void *a1)
{
  return sub_10041BDE8(a1);
}

uint64_t type metadata accessor for AppPackageTemplate()
{
  uint64_t result = qword_100663190;
  if (!qword_100663190) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_10041CC78()
{
  unint64_t result = qword_1006630D8;
  if (!qword_1006630D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006630D8);
  }
  return result;
}

uint64_t sub_10041CCCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppPackageTemplate();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10041CD30(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppPackageTemplate();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10041CD8C()
{
  unint64_t result = qword_1006630E8;
  if (!qword_1006630E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006630E8);
  }
  return result;
}

unint64_t sub_10041CDE0()
{
  unint64_t result = qword_1006630F0;
  if (!qword_1006630F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006630F0);
  }
  return result;
}

unint64_t sub_10041CE34()
{
  unint64_t result = qword_1006630F8;
  if (!qword_1006630F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006630F8);
  }
  return result;
}

uint64_t sub_10041CE88(void *a1, uint64_t a2)
{
  uint64_t v3 = sub_10041B288(a2);
  *((void *)&v44 + 1) = sub_1000172F8(&qword_100663100);
  LOBYTE(v43) = 0;
  uint64_t v45 = sub_10000DDFC(&qword_100663108, &qword_100663100);
  *((void *)&v43 + 1) = v3;
  id v4 = a1;
  long long v33 = sub_10043A774((uint64_t)&v43, v4);
  uint64_t v34 = v5;

  if (*((void *)&v44 + 1)) {
    sub_100014524((uint64_t)&v43);
  }
  uint64_t v32 = *(void *)(v34 + 16);
  if (v32)
  {
    type metadata accessor for AppPackageEntity.Entity();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v8 = (objc_class *)ObjCClassFromMetadata;
    unint64_t v9 = 0;
    unint64_t v10 = 0;
    p_base_prots = &XPCClientRegistry.base_prots;
    uint64_t v12 = &XPCClientRegistry.base_prots;
    while (v10 < *(void *)(v34 + 16))
    {
      uint64_t v13 = *(void *)(v34 + 8 * v10 + 32);
      id v14 = objc_allocWithZone(v8);
      id v15 = v33;
      id v16 = objc_msgSend(v14, (SEL)p_base_prots[124], v13, v15);
      LOBYTE(v14) = [v16 (SEL)v12[424]];

      if ((v14 & 1) == 0)
      {
        swift_bridgeObjectRelease();

        if (!v9) {
          return 0;
        }
        id v17 = v9;
        goto LABEL_28;
      }
      id v17 = v16;
      NSString v18 = String._bridgeToObjectiveC()();
      id v19 = [v17 valueForProperty:v18];

      if (v19)
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v43 = 0u;
        long long v44 = 0u;
      }
      sub_100017238((uint64_t)&v43, (uint64_t)&v41, (uint64_t *)&unk_10065C9C0);
      if (v42)
      {
        sub_1001C5DD4(&v41, &v39);
        type metadata accessor for JSONDecoder();
        swift_allocObject();
        JSONDecoder.init()();
        sub_1000144C8((uint64_t)&v39, (uint64_t)v37);
        if (swift_dynamicCast())
        {
          sub_10024A920();
          dispatch thunk of JSONDecoder.decode<A>(_:from:)();
          sub_100013510(v35, v36);
          swift_release();
          char v20 = v38;
          p_base_prots = (__objc2_prot_list **)(&XPCClientRegistry + 40);
          uint64_t v12 = (__objc2_prot_list **)(&XPCClientRegistry + 40);
        }
        else
        {
          sub_1000144C8((uint64_t)&v39, (uint64_t)v37);
          if (!swift_dynamicCast())
          {
            v37[0] = &type metadata for AppPackageType;
            sub_1000172F8(&qword_10065CF98);
            uint64_t v25 = String.init<A>(describing:)();
            uint64_t v27 = v26;
            sub_10018AC60(&v39, v40);
            v37[0] = swift_getDynamicType();
            sub_1000172F8(&qword_10065BC70);
            uint64_t v28 = String.init<A>(describing:)();
            uint64_t v30 = v29;
            sub_1001C3A08();
            swift_allocError();
            *(void *)uint64_t v31 = v25;
            *(void *)(v31 + 8) = v27;
            *(void *)(v31 + 16) = v28;
            *(void *)(v31 + 24) = v30;
            *(unsigned char *)(v31 + 32) = 0;
            swift_willThrow();
            goto LABEL_33;
          }
          swift_release();
          char v20 = v35 & 1;
        }
        sub_100014524((uint64_t)&v39);
        sub_10001729C((uint64_t)&v43, (uint64_t *)&unk_10065C9C0);

        if (v20)
        {
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
LABEL_27:

LABEL_28:
          id v23 = v17;
          id v22 = sub_100249AB8(v23);

          return (uint64_t)v22;
        }
        char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();

        if (v21)
        {
          swift_bridgeObjectRelease();
          unint64_t v9 = v15;
          goto LABEL_27;
        }
      }
      else
      {
        sub_10001729C((uint64_t)&v43, (uint64_t *)&unk_10065C9C0);
      }
      ++v10;
      unint64_t v9 = v17;
      if (v32 == v10)
      {
        swift_bridgeObjectRelease();

        goto LABEL_28;
      }
    }
    __break(1u);
    sub_100013510(ObjCClassFromMetadata, v7);
LABEL_33:
    swift_release();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();

    return 0;
  }
  return result;
}

uint64_t sub_10041D39C()
{
  sub_10028E770(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104));

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_10041D3F8(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, unint64_t a11, unint64_t a12)
{
  if (a12 >> 62 == 1)
  {
    sub_100012670(a3, a4);
    swift_bridgeObjectRetain();
    sub_100012670(a10, a11);
    return swift_bridgeObjectRetain();
  }
  else if (!(a12 >> 62))
  {
    sub_1003B5A3C(result, a2, a3, a4, a5);
    return sub_100012670(a9, a10);
  }
  return result;
}

uint64_t sub_10041D4B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t getEnumTagSinglePayload for AppPackageTemplate.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AppPackageTemplate.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10041D654);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppPackageTemplate.CodingKeys()
{
  return &type metadata for AppPackageTemplate.CodingKeys;
}

char *sub_10041D68C(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(void *)(v7 - 8);
    unint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = a3[6];
    *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
    long long v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    *(void *)long long v11 = *(void *)v12;
    v11[8] = v12[8];
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    id v15 = &a1[v13];
    id v16 = &a2[v13];
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)id v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    a1[v14] = a2[v14];
    uint64_t v18 = a3[9];
    id v19 = &a1[v18];
    char v20 = &a2[v18];
    uint64_t v21 = *(void *)&a2[v18 + 16];
    swift_bridgeObjectRetain();
    if (v21 == 1)
    {
      long long v22 = *((_OWORD *)v20 + 1);
      *(_OWORD *)id v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v22;
      *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
    }
    else
    {
      *id v19 = *v20;
      *((void *)v19 + 1) = *((void *)v20 + 1);
      *((void *)v19 + 2) = v21;
      *((void *)v19 + 3) = *((void *)v20 + 3);
      v19[32] = v20[32];
      *((void *)v19 + 5) = *((void *)v20 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v24 = a3[10];
    uint64_t v25 = &a1[v24];
    uint64_t v26 = &a2[v24];
    uint64_t v27 = *((void *)v26 + 2);
    if (v27 == 1)
    {
      long long v28 = *((_OWORD *)v26 + 1);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v28;
      *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
    }
    else
    {
      *uint64_t v25 = *v26;
      *((void *)v25 + 1) = *((void *)v26 + 1);
      *((void *)v25 + 2) = v27;
      *((void *)v25 + 3) = *((void *)v26 + 3);
      v25[32] = v26[32];
      *((void *)v25 + 5) = *((void *)v26 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v29 = a3[11];
    uint64_t v30 = &a1[v29];
    uint64_t v31 = &a2[v29];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v29], 1, v7))
    {
      uint64_t v32 = sub_1000172F8(&qword_10065C3C0);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      v9(v30, v31, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v30, 0, 1, v7);
    }
    uint64_t v33 = a3[13];
    a1[a3[12]] = a2[a3[12]];
    long long v62 = a2;
    uint64_t v34 = (uint64_t *)&a1[v33];
    uint64_t v35 = *(void *)((char *)v62 + v33);
    unint64_t v36 = *(void *)((char *)v62 + v33 + 8);
    uint64_t v37 = *(void *)((char *)v62 + v33 + 16);
    unint64_t v38 = *(void *)((char *)v62 + v33 + 24);
    uint64_t v39 = *(void *)((char *)v62 + v33 + 32);
    uint64_t v40 = *(void *)((char *)v62 + v33 + 40);
    long long v61 = a3;
    uint64_t v42 = *(void *)((char *)v62 + v33 + 48);
    uint64_t v41 = *(void *)((char *)v62 + v33 + 56);
    uint64_t v55 = *(void *)((char *)v62 + v33 + 64);
    unint64_t v56 = *(void *)((char *)v62 + v33 + 72);
    unint64_t v57 = *(void *)((char *)v62 + v33 + 80);
    unint64_t v58 = *(void *)((char *)v62 + v33 + 88);
    uint64_t v59 = *(void *)((char *)v62 + v33 + 96);
    uint64_t v60 = *(void *)((char *)v62 + v33 + 104);
    sub_10041D3F8(v35, v36, v37, v38, v39, v40, v42, v41, v55, v56, v57, v58);
    *uint64_t v34 = v35;
    v34[1] = v36;
    v34[2] = v37;
    _OWORD v34[3] = v38;
    v34[4] = v39;
    v34[5] = v40;
    v34[6] = v42;
    v34[7] = v41;
    v34[8] = v55;
    v34[9] = v56;
    v34[10] = v57;
    v34[11] = v58;
    v34[12] = v59;
    v34[13] = v60;
    uint64_t v43 = v61[14];
    long long v44 = &a1[v43];
    uint64_t v45 = (char *)v62 + v43;
    int v46 = v45[16];
    if (v46 == 255)
    {
      *(_OWORD *)long long v44 = *(_OWORD *)v45;
      v44[16] = v45[16];
    }
    else
    {
      char v47 = v46 & 1;
      uint64_t v48 = *(void *)v45;
      uint64_t v49 = *((void *)v45 + 1);
      sub_1001C617C();
      *(void *)long long v44 = v48;
      *((void *)v44 + 1) = v49;
      v44[16] = v47;
    }
    uint64_t v50 = v61[15];
    unint64_t v51 = &a1[v50];
    uint64_t v52 = (void *)((char *)v62 + v50);
    uint64_t v53 = v52[1];
    *(void *)unint64_t v51 = *v52;
    *((void *)v51 + 1) = v53;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10041DA5C(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  unsigned int v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[9] + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[10] + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = a1 + a2[11];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4)) {
    v6(v7, v4);
  }
  uint64_t v8 = a1 + a2[13];
  sub_10028E770(*(void *)v8, *(void *)(v8 + 8), *(void *)(v8 + 16), *(void *)(v8 + 24), *(void *)(v8 + 32), *(void *)(v8 + 40), *(void *)(v8 + 48), *(void *)(v8 + 56), *(void *)(v8 + 64), *(void *)(v8 + 72), *(void *)(v8 + 80), *(void *)(v8 + 88));
  if (*(unsigned __int8 *)(a1 + a2[14] + 16) != 255) {
    sub_10018ACBC();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10041DBFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v12);
  id v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)(a2 + v17 + 16);
  swift_bridgeObjectRetain();
  if (v20 == 1)
  {
    long long v21 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v21;
    *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  }
  else
  {
    *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
    *(void *)(v18 + 8) = *(void *)(v19 + 8);
    *(void *)(v18 + 16) = v20;
    *(void *)(v18 + 24) = *(void *)(v19 + 24);
    *(unsigned char *)(v18 + 32) = *(unsigned char *)(v19 + 32);
    *(void *)(v18 + 40) = *(void *)(v19 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v22 = a3[10];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)(v24 + 16);
  if (v25 == 1)
  {
    long long v26 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v26;
    *(_OWORD *)(v23 + 32) = *(_OWORD *)(v24 + 32);
  }
  else
  {
    *(unsigned char *)uint64_t v23 = *(unsigned char *)v24;
    *(void *)(v23 + 8) = *(void *)(v24 + 8);
    *(void *)(v23 + 16) = v25;
    *(void *)(v23 + 24) = *(void *)(v24 + 24);
    *(unsigned char *)(v23 + 32) = *(unsigned char *)(v24 + 32);
    *(void *)(v23 + 40) = *(void *)(v24 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v27 = a3[11];
  long long v28 = (void *)(a1 + v27);
  uint64_t v29 = (const void *)(a2 + v27);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v27, 1, v6))
  {
    uint64_t v30 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v28, (uint64_t)v29, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v28, 0, 1, v6);
  }
  uint64_t v31 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  uint64_t v61 = a2;
  uint64_t v32 = (uint64_t *)(a1 + v31);
  uint64_t v33 = *(void *)(v61 + v31);
  unint64_t v34 = *(void *)(v61 + v31 + 8);
  uint64_t v35 = *(void *)(v61 + v31 + 16);
  unint64_t v36 = *(void *)(v61 + v31 + 24);
  uint64_t v37 = *(void *)(v61 + v31 + 32);
  uint64_t v38 = *(void *)(v61 + v31 + 40);
  uint64_t v59 = a3;
  uint64_t v60 = a1;
  uint64_t v40 = *(void *)(v61 + v31 + 48);
  uint64_t v39 = *(void *)(v61 + v31 + 56);
  uint64_t v41 = *(void *)(v61 + v31 + 64);
  unint64_t v54 = *(void *)(v61 + v31 + 72);
  unint64_t v55 = *(void *)(v61 + v31 + 80);
  unint64_t v56 = *(void *)(v61 + v31 + 88);
  uint64_t v57 = *(void *)(v61 + v31 + 96);
  uint64_t v58 = *(void *)(v61 + v31 + 104);
  sub_10041D3F8(v33, v34, v35, v36, v37, v38, v40, v39, v41, v54, v55, v56);
  *uint64_t v32 = v33;
  v32[1] = v34;
  v32[2] = v35;
  v32[3] = v36;
  v32[4] = v37;
  v32[5] = v38;
  v32[6] = v40;
  v32[7] = v39;
  v32[8] = v41;
  v32[9] = v54;
  v32[10] = v55;
  v32[11] = v56;
  v32[12] = v57;
  v32[13] = v58;
  uint64_t v42 = v59[14];
  uint64_t v43 = v60 + v42;
  long long v44 = (uint64_t *)(v61 + v42);
  int v45 = *((unsigned __int8 *)v44 + 16);
  if (v45 == 255)
  {
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
    *(unsigned char *)(v43 + 16) = *((unsigned char *)v44 + 16);
  }
  else
  {
    char v46 = v45 & 1;
    uint64_t v47 = *v44;
    uint64_t v48 = v44[1];
    sub_1001C617C();
    *(void *)uint64_t v43 = v47;
    *(void *)(v43 + 8) = v48;
    *(unsigned char *)(v43 + 16) = v46;
  }
  uint64_t v49 = v59[15];
  uint64_t v50 = (void *)(v60 + v49);
  unint64_t v51 = (void *)(v61 + v49);
  uint64_t v52 = v51[1];
  *uint64_t v50 = *v51;
  v50[1] = v52;
  swift_bridgeObjectRetain();
  return v60;
}

uint64_t sub_10041DF7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  char v12 = *(unsigned char *)(v11 + 8);
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = v12;
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  id v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v16 = a3[9];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (long long *)(a2 + v16);
  uint64_t v19 = *(void *)(a1 + v16 + 16);
  uint64_t v20 = *(void *)(a2 + v16 + 16);
  if (v19 == 1)
  {
    if (v20 == 1)
    {
      long long v21 = *v18;
      long long v22 = v18[2];
      *(_OWORD *)(v17 + 16) = v18[1];
      *(_OWORD *)(v17 + 32) = v22;
      *(_OWORD *)uint64_t v17 = v21;
    }
    else
    {
      *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
      *(void *)(v17 + 8) = *((void *)v18 + 1);
      *(void *)(v17 + 16) = *((void *)v18 + 2);
      uint64_t v25 = *((void *)v18 + 3);
      *(unsigned char *)(v17 + 32) = *((unsigned char *)v18 + 32);
      *(void *)(v17 + 24) = v25;
      *(void *)(v17 + 40) = *((void *)v18 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v20 == 1)
  {
    sub_100285DF4(v17);
    long long v24 = v18[1];
    long long v23 = v18[2];
    *(_OWORD *)uint64_t v17 = *v18;
    *(_OWORD *)(v17 + 16) = v24;
    *(_OWORD *)(v17 + 32) = v23;
  }
  else
  {
    *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
    *(void *)(v17 + 8) = *((void *)v18 + 1);
    *(void *)(v17 + 16) = *((void *)v18 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v26 = *((void *)v18 + 3);
    *(unsigned char *)(v17 + 32) = *((unsigned char *)v18 + 32);
    *(void *)(v17 + 24) = v26;
    *(void *)(v17 + 40) = *((void *)v18 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = (long long *)(a2 + v27);
  uint64_t v30 = *(void *)(a1 + v27 + 16);
  uint64_t v31 = *(void *)(a2 + v27 + 16);
  if (v30 == 1)
  {
    if (v31 == 1)
    {
      long long v32 = *v29;
      long long v33 = v29[2];
      *(_OWORD *)(v28 + 16) = v29[1];
      *(_OWORD *)(v28 + 32) = v33;
      *(_OWORD *)uint64_t v28 = v32;
    }
    else
    {
      *(unsigned char *)uint64_t v28 = *(unsigned char *)v29;
      *(void *)(v28 + 8) = *((void *)v29 + 1);
      *(void *)(v28 + 16) = *((void *)v29 + 2);
      uint64_t v36 = *((void *)v29 + 3);
      *(unsigned char *)(v28 + 32) = *((unsigned char *)v29 + 32);
      *(void *)(v28 + 24) = v36;
      *(void *)(v28 + 40) = *((void *)v29 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v31 == 1)
  {
    sub_100285DF4(v28);
    long long v35 = v29[1];
    long long v34 = v29[2];
    *(_OWORD *)uint64_t v28 = *v29;
    *(_OWORD *)(v28 + 16) = v35;
    *(_OWORD *)(v28 + 32) = v34;
  }
  else
  {
    *(unsigned char *)uint64_t v28 = *(unsigned char *)v29;
    *(void *)(v28 + 8) = *((void *)v29 + 1);
    *(void *)(v28 + 16) = *((void *)v29 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v37 = *((void *)v29 + 3);
    *(unsigned char *)(v28 + 32) = *((unsigned char *)v29 + 32);
    *(void *)(v28 + 24) = v37;
    *(void *)(v28 + 40) = *((void *)v29 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v90 = a3;
  uint64_t v38 = a3[11];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v91 = a2;
  uint64_t v40 = (const void *)(a2 + v38);
  uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v42 = v41(a1 + v38, 1, v6);
  int v43 = v41((uint64_t)v40, 1, v6);
  if (v42)
  {
    if (!v43)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v39, v40, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v39, 0, 1, v6);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v43)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v39, v6);
LABEL_20:
    uint64_t v44 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v39, v40, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_21;
  }
  v8((uint64_t)v39, (uint64_t)v40, v6);
LABEL_21:
  *(unsigned char *)(a1 + v90[12]) = *(unsigned char *)(v91 + v90[12]);
  uint64_t v45 = v90[13];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = (uint64_t *)(v91 + v45);
  uint64_t v48 = *v47;
  unint64_t v49 = v47[1];
  uint64_t v50 = v47[2];
  unint64_t v51 = v47[3];
  uint64_t v52 = v47[4];
  uint64_t v53 = v47[5];
  uint64_t v55 = v47[6];
  uint64_t v54 = v47[7];
  uint64_t v89 = a1;
  uint64_t v56 = v47[8];
  unint64_t v84 = v47[9];
  unint64_t v85 = v47[10];
  unint64_t v86 = v47[11];
  uint64_t v87 = v47[12];
  uint64_t v88 = v47[13];
  sub_10041D3F8(*v47, v49, v50, v51, v52, v53, v55, v54, v56, v84, v85, v86);
  uint64_t v57 = *(void *)v46;
  unint64_t v58 = *(void *)(v46 + 8);
  uint64_t v59 = *(void *)(v46 + 16);
  unint64_t v60 = *(void *)(v46 + 24);
  uint64_t v61 = *(void *)(v46 + 32);
  uint64_t v62 = *(void *)(v46 + 40);
  uint64_t v63 = *(void *)(v46 + 48);
  uint64_t v64 = *(void *)(v46 + 56);
  long long v65 = *(_OWORD *)(v46 + 64);
  long long v66 = *(_OWORD *)(v46 + 80);
  *(void *)uint64_t v46 = v48;
  *(void *)(v46 + 8) = v49;
  *(void *)(v46 + 16) = v50;
  *(void *)(v46 + 24) = v51;
  *(void *)(v46 + 32) = v52;
  *(void *)(v46 + 40) = v53;
  *(void *)(v46 + 48) = v55;
  *(void *)(v46 + 56) = v54;
  *(void *)(v46 + 64) = v56;
  *(void *)(v46 + 72) = v84;
  *(void *)(v46 + 80) = v85;
  *(void *)(v46 + 88) = v86;
  *(void *)(v46 + 96) = v87;
  *(void *)(v46 + 104) = v88;
  sub_10028E770(v57, v58, v59, v60, v61, v62, v63, v64, v65, *((unint64_t *)&v65 + 1), v66, *((unint64_t *)&v66 + 1));
  uint64_t v67 = v90[14];
  uint64_t v68 = v89 + v67;
  uint64_t v69 = (long long *)(v91 + v67);
  int v70 = *(unsigned __int8 *)(v89 + v67 + 16);
  int v71 = *(unsigned __int8 *)(v91 + v67 + 16);
  if (v70 == 255)
  {
    if (v71 == 255)
    {
      long long v73 = *v69;
      *(unsigned char *)(v68 + 16) = *((unsigned char *)v69 + 16);
      *(_OWORD *)uint64_t v68 = v73;
    }
    else
    {
      char v77 = v71 & 1;
      uint64_t v78 = *(void *)v69;
      uint64_t v79 = *((void *)v69 + 1);
      sub_1001C617C();
      *(void *)uint64_t v68 = v78;
      *(void *)(v68 + 8) = v79;
      *(unsigned char *)(v68 + 16) = v77;
    }
  }
  else if (v71 == 255)
  {
    sub_1002BC904(v68);
    char v72 = *((unsigned char *)v69 + 16);
    *(_OWORD *)uint64_t v68 = *v69;
    *(unsigned char *)(v68 + 16) = v72;
  }
  else
  {
    char v74 = v71 & 1;
    uint64_t v75 = *(void *)v69;
    uint64_t v76 = *((void *)v69 + 1);
    sub_1001C617C();
    *(void *)uint64_t v68 = v75;
    *(void *)(v68 + 8) = v76;
    *(unsigned char *)(v68 + 16) = v74;
    sub_10018ACBC();
  }
  uint64_t v80 = v90[15];
  uint64_t v81 = (void *)(v89 + v80);
  uint64_t v82 = (void *)(v91 + v80);
  void *v81 = *v82;
  v81[1] = v82[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v89;
}

char *sub_10041E528(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)uint64_t v10 = *(void *)v11;
  unsigned char v10[8] = v11[8];
  uint64_t v12 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  a1[v12] = a2[v12];
  uint64_t v13 = a3[9];
  uint64_t v14 = a3[10];
  id v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  long long v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)id v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
  uint64_t v18 = &a1[v14];
  uint64_t v19 = &a2[v14];
  long long v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  long long v21 = *((_OWORD *)v19 + 2);
  uint64_t v22 = a3[11];
  long long v23 = &a1[v22];
  *((_OWORD *)v18 + 2) = v21;
  long long v24 = &a2[v22];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v22], 1, v6))
  {
    uint64_t v25 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    v8(v23, v24, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
  }
  uint64_t v26 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  long long v29 = *((_OWORD *)v28 + 1);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v29;
  long long v30 = *((_OWORD *)v28 + 6);
  long long v31 = *((_OWORD *)v28 + 4);
  *((_OWORD *)v27 + 5) = *((_OWORD *)v28 + 5);
  *((_OWORD *)v27 + 6) = v30;
  long long v32 = *((_OWORD *)v28 + 3);
  *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
  *((_OWORD *)v27 + 3) = v32;
  *((_OWORD *)v27 + 4) = v31;
  uint64_t v33 = a3[14];
  uint64_t v34 = a3[15];
  long long v35 = &a1[v33];
  uint64_t v36 = &a2[v33];
  *(_OWORD *)long long v35 = *(_OWORD *)v36;
  v35[16] = v36[16];
  *(_OWORD *)&a1[v34] = *(_OWORD *)&a2[v34];
  return a1;
}

char *sub_10041E73C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v59 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v59(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)uint64_t v9 = *(void *)v10;
  void v9[8] = v10[8];
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = (uint64_t *)&a2[v11];
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *(void *)uint64_t v12 = v15;
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  long long v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  if (*(void *)&a1[v16 + 16] == 1) {
    goto LABEL_4;
  }
  uint64_t v19 = *((void *)v18 + 2);
  if (v19 == 1)
  {
    sub_100285DF4((uint64_t)&a1[v16]);
LABEL_4:
    long long v20 = *((_OWORD *)v18 + 1);
    *(_OWORD *)long long v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v20;
    *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
    goto LABEL_6;
  }
  *long long v17 = *v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  *((void *)v17 + 2) = v19;
  swift_bridgeObjectRelease();
  *((void *)v17 + 3) = *((void *)v18 + 3);
  v17[32] = v18[32];
  *((void *)v17 + 5) = *((void *)v18 + 5);
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v21 = a3[10];
  uint64_t v22 = (uint64_t)&a1[v21];
  long long v23 = &a2[v21];
  if (*(void *)&a1[v21 + 16] == 1)
  {
LABEL_9:
    long long v25 = *((_OWORD *)v23 + 1);
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v25;
    *(_OWORD *)(v22 + 32) = *((_OWORD *)v23 + 2);
    goto LABEL_11;
  }
  uint64_t v24 = *((void *)v23 + 2);
  if (v24 == 1)
  {
    sub_100285DF4(v22);
    goto LABEL_9;
  }
  *(unsigned char *)uint64_t v22 = *v23;
  *(void *)(v22 + 8) = *((void *)v23 + 1);
  *(void *)(v22 + 16) = v24;
  swift_bridgeObjectRelease();
  *(void *)(v22 + 24) = *((void *)v23 + 3);
  *(unsigned char *)(v22 + 32) = v23[32];
  *(void *)(v22 + 40) = *((void *)v23 + 5);
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v26 = a3[11];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  long long v29 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v30 = v29(&a1[v26], 1, v6);
  int v31 = v29(v28, 1, v6);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v27, v28, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v27, 0, 1, v6);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v27, v6);
LABEL_16:
    uint64_t v32 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_17;
  }
  v59(v27, v28, v6);
LABEL_17:
  uint64_t v33 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  uint64_t v34 = &a1[v33];
  long long v35 = &a2[v33];
  uint64_t v36 = *(void *)v34;
  unint64_t v37 = *((void *)v34 + 1);
  uint64_t v38 = *((void *)v34 + 2);
  unint64_t v39 = *((void *)v34 + 3);
  uint64_t v40 = *((void *)v34 + 4);
  uint64_t v41 = *((void *)v34 + 5);
  uint64_t v42 = *((void *)v34 + 6);
  uint64_t v43 = *((void *)v34 + 7);
  long long v44 = *((_OWORD *)v34 + 4);
  long long v45 = *((_OWORD *)v34 + 5);
  long long v46 = *((_OWORD *)v35 + 1);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *((_OWORD *)v34 + 1) = v46;
  long long v47 = *((_OWORD *)v35 + 3);
  *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
  *((_OWORD *)v34 + 3) = v47;
  long long v48 = *((_OWORD *)v35 + 5);
  *((_OWORD *)v34 + 4) = *((_OWORD *)v35 + 4);
  *((_OWORD *)v34 + 5) = v48;
  *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
  sub_10028E770(v36, v37, v38, v39, v40, v41, v42, v43, v44, *((unint64_t *)&v44 + 1), v45, *((unint64_t *)&v45 + 1));
  uint64_t v49 = a3[14];
  uint64_t v50 = (uint64_t)&a1[v49];
  unint64_t v51 = &a2[v49];
  if (a1[v49 + 16] != 255)
  {
    int v52 = v51[16];
    if (v52 != 255)
    {
      *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
      *(unsigned char *)(v50 + 16) = v52 & 1;
      sub_10018ACBC();
      goto LABEL_22;
    }
    sub_1002BC904(v50);
  }
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *(unsigned char *)(v50 + 16) = v51[16];
LABEL_22:
  uint64_t v53 = a3[15];
  uint64_t v54 = &a1[v53];
  uint64_t v55 = (uint64_t *)&a2[v53];
  uint64_t v57 = *v55;
  uint64_t v56 = v55[1];
  *(void *)uint64_t v54 = v57;
  *((void *)v54 + 1) = v56;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10041EAFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10041EB10);
}

uint64_t sub_10041EB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_1000172F8(&qword_10065C3C0);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = (*(void *)(a1 + *(int *)(a3 + 52) + 80) >> 60) & 3 | (4 * (*(_DWORD *)(a1 + *(int *)(a3 + 52) + 88) >> 1));
      if (v14 > 0x80000000) {
        return -v14;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 44);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_10041EC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10041EC4C);
}

double sub_10041EC4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_1000172F8(&qword_10065C3C0);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      uint64_t v16 = a1 + *(int *)(a4 + 52);
      double result = 0.0;
      *(_OWORD *)(v16 + 48) = 0u;
      *(_OWORD *)(v16 + 64) = 0u;
      *(_OWORD *)(v16 + 16) = 0u;
      *(_OWORD *)(v16 + 32) = 0u;
      *(_OWORD *)uint64_t v16 = 0u;
      *(void *)(v16 + 80) = (unint64_t)(-(char)a2 & 3) << 60;
      *(void *)(v16 + 88) = ((unint64_t)-(int)a2 >> 1) & 0x7FFFFFFE;
      *(void *)(v16 + 96) = 0;
      *(void *)(v16 + 104) = 0;
      return result;
    }
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 44);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  v11(v12, a2, a2, v10);
  return result;
}

void sub_10041ED84()
{
  type metadata accessor for URL();
  if (v0 <= 0x3F)
  {
    sub_10026B458();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_10041EEA8()
{
  unint64_t result = qword_1006631F0;
  if (!qword_1006631F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006631F0);
  }
  return result;
}

unint64_t sub_10041EF00()
{
  unint64_t result = qword_100663218;
  if (!qword_100663218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663218);
  }
  return result;
}

unint64_t sub_10041EF58()
{
  unint64_t result = qword_100663220;
  if (!qword_100663220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663220);
  }
  return result;
}

unint64_t sub_10041EFB0()
{
  unint64_t result = qword_100663228;
  if (!qword_100663228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100663228);
  }
  return result;
}

uint64_t sub_10041F004(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73736572706D6F63 && a2 == 0xEE00657A69536465 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001005BD950 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E6169726176 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x747365676964 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6944726568706963 && a2 == 0xEC00000074736567 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x61636F4C6B736964 && a2 == 0xEC0000006E6F6974 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001005BF710 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6974707972636E65 && a2 == 0xEA00000000006E6FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7562697274736964 && a2 == 0xEB00000000726F74 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001005BF730)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t sub_10041F514()
{
  v1[24] = v0;
  uint64_t v2 = type metadata accessor for Logger();
  v1[25] = v2;
  v1[26] = *(void *)(v2 - 8);
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Restore();
  v1[30] = v3;
  v1[31] = *(void *)(v3 - 8);
  v1[32] = swift_task_alloc();
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  type metadata accessor for ConfigurationBag(0);
  v1[37] = swift_task_alloc();
  return _swift_task_switch(sub_10041F6AC, 0, 0);
}

uint64_t sub_10041F6AC()
{
  long long v23 = v0;
  uint64_t v1 = v0[24];
  uint64_t v2 = *(void *)v1;
  unint64_t v3 = *(void *)(v1 + 8);
  char v4 = *(unsigned char *)(v1 + 112);
  v0[38] = *(void *)(v1 + 120);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v1 + 40);
    char v6 = (uint64_t *)(v1 + 32);
    uint64_t v7 = &type metadata for WebDistributor;
    unint64_t v8 = sub_1002BEA38();
  }
  else
  {
    uint64_t v5 = (uint64_t *)(v1 + 56);
    char v6 = (uint64_t *)(v1 + 48);
    uint64_t v7 = &type metadata for NativeDistributor;
    unint64_t v8 = sub_1002F9EF8();
  }
  uint64_t v9 = *v6;
  uint64_t v10 = *v5;
  v22[3] = v7;
  v22[4] = v8;
  v22[0] = v9;
  v22[1] = v10;
  char v11 = *(unsigned char *)(v1 + 239);
  uint64_t v12 = *(void **)(v1 + 240);
  v0[39] = v12;
  swift_bridgeObjectRetain();
  uint64_t v13 = self;
  swift_bridgeObjectRetain();
  id v14 = v12;
  id v15 = [v13 ephemeralSessionConfiguration];
  [v15 setHTTPShouldSetCookies:0];
  [v15 setHTTPCookieAcceptPolicy:1];
  [v15 setRequestCachePolicy:1];
  sub_100373694(1);
  id v16 = [self sessionWithConfiguration:v15];

  type metadata accessor for PlainHTTP();
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 24) = 0;
  *(void *)(v17 + 16) = v16;
  type metadata accessor for DecoratedHTTP();
  swift_allocObject();
  uint64_t v18 = sub_1002C20CC(v17, (uint64_t)v22, v2, v3, v11, v14);
  v0[40] = v18;
  uint64_t v19 = (void *)swift_task_alloc();
  v0[41] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_10041F8D4;
  uint64_t v20 = v0[37];
  return sub_100421258(v20, v18);
}

uint64_t sub_10041F8D4()
{
  uint64_t v2 = (void *)*v1;
  v2[42] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100420F84, 0, 0);
  }
  else
  {
    v2[21] = _swiftEmptyArrayStorage;
    v2[12] = _swiftEmptyArrayStorage;
    unint64_t v3 = (void *)swift_task_alloc();
    v2[43] = v3;
    *unint64_t v3 = v2;
    v3[1] = sub_10041FA58;
    uint64_t v4 = v2[37];
    uint64_t v5 = v2[38];
    return sub_100421A34(v5, v4);
  }
}

uint64_t sub_10041FA58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[44] = a1;
  v4[45] = a2;
  v4[46] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_100421060;
  }
  else {
    uint64_t v5 = sub_10041FB70;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10041FB70()
{
  char v131 = v0;
  uint64_t v1 = v0[44];
  if (*(void *)(v1 + 16)) {
    uint64_t result = sub_100555E20(v1);
  }
  else {
    uint64_t result = swift_bridgeObjectRelease();
  }
  unint64_t v3 = v0[45];
  Class isa = v3[2].isa;
  if (isa)
  {
    uint64_t v4 = 0;
    uint64_t v101 = v0[39];
    uint64_t v5 = v0[38];
    char v6 = (int *)v0[30];
    uint64_t v104 = v0[31];
    uint64_t v7 = v0[26];
    v0[11] = _swiftEmptyArrayStorage;
    uint64_t v8 = *(void *)(v5 + 16);
    os_log_t log = v3 + 4;
    uint64_t v102 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    long long v105 = v3;
    uint64_t v103 = v8;
    do
    {
      if (v4 >= v3[2].isa)
      {
        __break(1u);
        return result;
      }
      uint64_t v9 = &log[7 * (void)v4];
      Class v11 = v9->isa;
      Class v10 = v9[1].isa;
      Class v12 = v9[3].isa;
      Class v112 = v9[4].isa;
      Class v114 = v9[2].isa;
      Class v13 = v9[6].isa;
      Class v110 = v9[5].isa;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      Class v116 = v11;
      uint64_t v14 = sub_1004BD574(v11, v10);
      if (v8)
      {
        uint64_t v16 = v14;
        char v17 = v15;
        Class v119 = v12;
        Class v124 = v13;
        unint64_t v106 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
        uint64_t v18 = v0[38] + v106;
        swift_bridgeObjectRetain();
        uint64_t v19 = *(void *)(v104 + 72);
        while (1)
        {
          uint64_t v20 = v0[33];
          sub_10017B7DC(v18, v20);
          uint64_t v21 = v20 + v6[15];
          if ((*(unsigned char *)(v21 + 8) & 1) == 0 && (v17 & 1) == 0 && *(void *)v21 == v16) {
            break;
          }
          sub_100423BC4(v0[33], (uint64_t (*)(void))type metadata accessor for Restore);
          v18 += v19;
          if (!--v8)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
LABEL_30:
            unint64_t v3 = v105;
            uint64_t v8 = v103;
            goto LABEL_7;
          }
        }
        uint64_t v23 = v0[35];
        uint64_t v22 = v0[36];
        uint64_t v25 = v0[33];
        uint64_t v24 = v0[34];
        swift_bridgeObjectRelease();
        sub_100423B5C(v25, v24, (uint64_t (*)(void))type metadata accessor for Restore);
        sub_100423B5C(v24, v23, (uint64_t (*)(void))type metadata accessor for Restore);
        sub_100423B5C(v23, v22, (uint64_t (*)(void))type metadata accessor for Restore);
        swift_beginAccess();
        if ((*(unsigned char *)(v22 + v6[22]) & 1) == 0)
        {
          uint64_t v31 = v0[36];
          uint64_t v32 = v0[32];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v31 + v6[22]) = 1;
          sub_10017B7DC(v31, v32);
          unint64_t v33 = v0[11];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v33 = sub_100290934(0, *(void *)(v33 + 16) + 1, 1, v33);
          }
          unint64_t v35 = *(void *)(v33 + 16);
          unint64_t v34 = *(void *)(v33 + 24);
          if (v35 >= v34 >> 1) {
            unint64_t v33 = sub_100290934(v34 > 1, v35 + 1, 1, v33);
          }
          uint64_t v36 = v0[32];
          uint64_t v37 = v0[24];
          *(void *)(v33 + 16) = v35 + 1;
          sub_100423B5C(v36, v33 + v106 + v35 * v19, (uint64_t (*)(void))type metadata accessor for Restore);
          v0[11] = v33;
          static Logger.restore.getter();
          sub_100423920(v37);
          sub_100423920(v37);
          uint64_t v38 = Logger.logObject.getter();
          os_log_type_t v39 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v38, v39))
          {
            uint64_t v40 = (void *)v0[39];
            uint64_t v120 = v0[29];
            uint64_t v125 = v0[36];
            uint64_t v41 = v0[24];
            uint64_t v117 = v0[25];
            uint64_t v42 = swift_slowAlloc();
            uint64_t v113 = v38;
            uint64_t v43 = (void *)swift_slowAlloc();
            uint64_t v129 = swift_slowAlloc();
            *(_DWORD *)uint64_t v42 = 138412546;
            v0[22] = v40;
            id v44 = v40;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *uint64_t v43 = v101;
            sub_1003ADBCC(v41);
            sub_1003ADBCC(v41);
            *(_WORD *)(v42 + 12) = 2082;
            long long v45 = (uint64_t *)(v125 + v6[9]);
            uint64_t v46 = *v45;
            unint64_t v47 = v45[1];
            swift_bridgeObjectRetain();
            v0[23] = sub_1000143F4(v46, v47, &v129);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v113, v39, "[%@][%{public}s] Retrying for latest version", (uint8_t *)v42, 0x16u);
            sub_1000172F8(&qword_10065DB10);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*v102)(v120, v117);
            uint64_t v48 = v125;
          }
          else
          {
            uint64_t v49 = v0[36];
            uint64_t v50 = v0[29];
            uint64_t v52 = v0[24];
            uint64_t v51 = v0[25];
            sub_1003ADBCC(v52);
            sub_1003ADBCC(v52);

            (*v102)(v50, v51);
            uint64_t v48 = v49;
          }
          uint64_t result = sub_100423BC4(v48, (uint64_t (*)(void))type metadata accessor for Restore);
          goto LABEL_30;
        }
        uint64_t v26 = (void *)v0[12];
        uint64_t v8 = v103;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v26 = sub_100290968(0, v26[2] + 1, 1, v26);
        }
        unint64_t v28 = v26[2];
        unint64_t v27 = v26[3];
        if (v28 >= v27 >> 1) {
          uint64_t v26 = sub_100290968((void *)(v27 > 1), v28 + 1, 1, v26);
        }
        uint64_t v29 = v0[36];
        v26[2] = v28 + 1;
        int v30 = &v26[7 * v28];
        v30[4] = v116;
        v30[5] = v10;
        v30[6] = v114;
        v30[7] = v119;
        v30[8] = v112;
        v30[9] = v110;
        v30[10] = v124;
        uint64_t result = sub_100423BC4(v29, (uint64_t (*)(void))type metadata accessor for Restore);
        v0[12] = v26;
        unint64_t v3 = v105;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
      }
LABEL_7:
      uint64_t v4 = (objc_class *)((char *)v4 + 1);
    }
    while (v4 != isa);
    swift_bridgeObjectRelease();
    uint64_t v53 = v0[11];
    if (!*(void *)(v53 + 16)) {
      goto LABEL_40;
    }
    uint64_t v54 = v0[24];
    static Logger.restore.getter();
    swift_bridgeObjectRetain_n();
    sub_100423920(v54);
    swift_bridgeObjectRetain();
    sub_100423920(v54);
    swift_bridgeObjectRetain();
    uint64_t v55 = Logger.logObject.getter();
    os_log_type_t v56 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = (void *)v0[39];
      uint64_t v58 = v0[24];
      uint64_t v121 = v0[25];
      uint64_t v126 = v0[28];
      uint64_t v59 = swift_slowAlloc();
      unint64_t v60 = (void *)swift_slowAlloc();
      uint64_t v128 = swift_slowAlloc();
      *(_DWORD *)uint64_t v59 = 138412802;
      v0[17] = v57;
      id v61 = v57;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v60 = v101;
      sub_1003ADBCC(v58);
      sub_1003ADBCC(v58);
      *(_WORD *)(v59 + 12) = 2048;
      uint64_t v62 = *(void *)(v53 + 16);
      swift_bridgeObjectRelease();
      v0[18] = v62;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v59 + 22) = 2082;
      uint64_t v63 = *(void *)(v53 + 16);
      v0[19] = v63;
      uint64_t v129 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v130 = v64;
      v65._uint64_t countAndFlagsBits = 32;
      v65._object = (void *)0xE100000000000000;
      String.append(_:)(v65);
      v66._uint64_t countAndFlagsBits = 0x65726F74736572;
      v66._object = (void *)0xE700000000000000;
      String.append(_:)(v66);
      if (v63 == 1) {
        uint64_t v67 = 0;
      }
      else {
        uint64_t v67 = 115;
      }
      if (v63 == 1) {
        unint64_t v68 = 0xE000000000000000;
      }
      else {
        unint64_t v68 = 0xE100000000000000;
      }
      unint64_t v69 = v68;
      String.append(_:)(*(Swift::String *)&v67);
      swift_bridgeObjectRelease();
      v0[20] = sub_1000143F4(v129, v130, &v128);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "[%@] Will return %ld %{public}s", (uint8_t *)v59, 0x20u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*v102)(v126, v121);
    }
    else
    {
      uint64_t v95 = v0[28];
      uint64_t v97 = v0[24];
      uint64_t v96 = v0[25];
      swift_bridgeObjectRelease();
      sub_1003ADBCC(v97);
      sub_1003ADBCC(v97);
      swift_bridgeObjectRelease_n();

      (*v102)(v95, v96);
    }
    swift_beginAccess();
    uint64_t v98 = v0[11];
    v0[47] = v98;
    long long v99 = (void *)swift_task_alloc();
    v0[48] = v99;
    void *v99 = v0;
    v99[1] = sub_1004209B0;
    uint64_t v100 = v0[37];
    return sub_100421A34(v98, v100);
  }
  else
  {
LABEL_40:
    swift_bridgeObjectRelease();
    uint64_t v70 = v0[24];
    static Logger.restore.getter();
    uint64_t v71 = v0[21];
    swift_bridgeObjectRetain_n();
    sub_100423920(v70);
    swift_bridgeObjectRetain();
    sub_100423920(v70);
    swift_bridgeObjectRetain();
    char v72 = Logger.logObject.getter();
    os_log_type_t v73 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v72, v73))
    {
      os_log_type_t v111 = v73;
      char v74 = (void *)v0[39];
      uint64_t v122 = v0[27];
      uint64_t v127 = v0[37];
      uint64_t v115 = v0[26];
      uint64_t v118 = v0[25];
      loga = v72;
      uint64_t v75 = v0[24];
      uint64_t v76 = swift_slowAlloc();
      char v77 = (void *)swift_slowAlloc();
      uint64_t v128 = swift_slowAlloc();
      *(_DWORD *)uint64_t v76 = 138412802;
      v0[13] = v74;
      id v78 = v74;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *char v77 = v74;
      sub_1003ADBCC(v75);
      sub_1003ADBCC(v75);
      *(_WORD *)(v76 + 12) = 2048;
      uint64_t v79 = *(void *)(v71 + 16);
      swift_bridgeObjectRelease();
      v0[14] = v79;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v76 + 22) = 2082;
      uint64_t v80 = *(void *)(v71 + 16);
      v0[15] = v80;
      uint64_t v129 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v130 = v81;
      v82._uint64_t countAndFlagsBits = 32;
      v82._object = (void *)0xE100000000000000;
      String.append(_:)(v82);
      v83._uint64_t countAndFlagsBits = 0x65726F74736572;
      v83._object = (void *)0xE700000000000000;
      String.append(_:)(v83);
      if (v80 == 1) {
        uint64_t v84 = 0;
      }
      else {
        uint64_t v84 = 115;
      }
      if (v80 == 1) {
        unint64_t v85 = 0xE000000000000000;
      }
      else {
        unint64_t v85 = 0xE100000000000000;
      }
      unint64_t v86 = v85;
      String.append(_:)(*(Swift::String *)&v84);
      swift_bridgeObjectRelease();
      v0[16] = sub_1000143F4(v129, v130, &v128);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, loga, v111, "[%@] Found metadata for %ld %{public}s", (uint8_t *)v76, 0x20u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v122, v118);
      uint64_t v87 = v127;
    }
    else
    {
      uint64_t v88 = v0[37];
      uint64_t v90 = v0[26];
      uint64_t v89 = v0[27];
      uint64_t v92 = v0[24];
      uint64_t v91 = v0[25];
      swift_bridgeObjectRelease_n();
      swift_release();

      sub_1003ADBCC(v92);
      sub_1003ADBCC(v92);
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v89, v91);
      uint64_t v87 = v88;
    }
    sub_100423BC4(v87, type metadata accessor for ConfigurationBag);
    swift_beginAccess();
    uint64_t v93 = v0[21];
    uint64_t v123 = v0[12];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v94 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v94(v93, v123);
  }
}

uint64_t sub_1004209B0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 392) = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_10042115C;
  }
  else
  {
    *(void *)(v6 + 400) = a2;
    *(void *)(v6 + 408) = a1;
    uint64_t v7 = sub_100420B0C;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_100420B0C()
{
  uint64_t v36 = v0;
  uint64_t v1 = v0[50];
  sub_100555E20(v0[51]);
  sub_100555E4C(v1);
  uint64_t v2 = v0[24];
  static Logger.restore.getter();
  uint64_t v3 = v0[21];
  swift_bridgeObjectRetain_n();
  sub_100423920(v2);
  swift_bridgeObjectRetain();
  sub_100423920(v2);
  swift_bridgeObjectRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[39];
    uint64_t v30 = v0[27];
    uint64_t v31 = v0[37];
    uint64_t v28 = v0[26];
    uint64_t v7 = v0[24];
    uint64_t v29 = v0[25];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412802;
    v0[13] = v6;
    id v10 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v9 = v6;
    sub_1003ADBCC(v7);
    sub_1003ADBCC(v7);
    *(_WORD *)(v8 + 12) = 2048;
    uint64_t v11 = *(void *)(v3 + 16);
    swift_bridgeObjectRelease();
    v0[14] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 22) = 2082;
    uint64_t v12 = *(void *)(v3 + 16);
    v0[15] = v12;
    uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v35 = v13;
    v14._uint64_t countAndFlagsBits = 32;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    v15._uint64_t countAndFlagsBits = 0x65726F74736572;
    v15._object = (void *)0xE700000000000000;
    String.append(_:)(v15);
    if (v12 == 1) {
      uint64_t v16 = 0;
    }
    else {
      uint64_t v16 = 115;
    }
    if (v12 == 1) {
      unint64_t v17 = 0xE000000000000000;
    }
    else {
      unint64_t v17 = 0xE100000000000000;
    }
    unint64_t v18 = v17;
    String.append(_:)(*(Swift::String *)&v16);
    swift_bridgeObjectRelease();
    v0[16] = sub_1000143F4(v34, v35, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[%@] Found metadata for %ld %{public}s", (uint8_t *)v8, 0x20u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v29);
    uint64_t v19 = v31;
  }
  else
  {
    uint64_t v20 = v0[37];
    uint64_t v21 = v0[26];
    uint64_t v22 = v0[27];
    uint64_t v24 = v0[24];
    uint64_t v23 = v0[25];
    swift_bridgeObjectRelease_n();
    swift_release();

    sub_1003ADBCC(v24);
    sub_1003ADBCC(v24);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v23);
    uint64_t v19 = v20;
  }
  sub_100423BC4(v19, type metadata accessor for ConfigurationBag);
  swift_beginAccess();
  uint64_t v25 = v0[21];
  uint64_t v32 = v0[12];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v26(v25, v32);
}

uint64_t sub_100420F84()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100421060()
{
  uint64_t v1 = *(void *)(v0 + 296);
  swift_release();
  sub_100423BC4(v1, type metadata accessor for ConfigurationBag);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10042115C()
{
  uint64_t v1 = *(void *)(v0 + 296);
  swift_release();
  sub_100423BC4(v1, type metadata accessor for ConfigurationBag);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100421258(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  uint64_t v4 = type metadata accessor for Logger();
  v3[14] = v4;
  v3[15] = *(void *)(v4 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  return _swift_task_switch(sub_10042132C, 0, 0);
}

uint64_t sub_10042132C()
{
  uint64_t v26 = v0;
  uint64_t v1 = v0[13];
  static Logger.restore.getter();
  sub_100423920(v1);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v22 = v0[15];
    uint64_t v4 = (void *)v0[13];
    uint64_t v23 = v0[14];
    uint64_t v24 = v0[17];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    unint64_t v6 = v4[5];
    uint64_t v21 = v4[4];
    uint64_t v7 = v4[6];
    unint64_t v8 = v4[7];
    swift_bridgeObjectRetain();
    v0[9] = sub_1000143F4(v7, v8, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[10] = sub_1000143F4(v21, v6, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1003ADBCC((uint64_t)v4);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Fetching bag configuration for distributor: %{public}s atDomain: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v9(v24, v23);
  }
  else
  {
    uint64_t v10 = v0[17];
    uint64_t v11 = v0[14];
    uint64_t v12 = v0[15];
    sub_1003ADBCC(v0[13]);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v9(v10, v11);
  }
  v0[18] = v9;
  uint64_t v13 = v0[12];
  Swift::String v14 = (void *)v0[13];
  uint64_t v15 = v14[4];
  uint64_t v16 = v14[5];
  v0[19] = v14[6];
  v0[20] = v14[7];
  v0[5] = type metadata accessor for DecoratedHTTP();
  v0[6] = &off_10063FB70;
  v0[2] = v13;
  uint64_t v17 = v14[30];
  v0[21] = v17;
  swift_retain();
  unint64_t v18 = (void *)swift_task_alloc();
  v0[22] = v18;
  *unint64_t v18 = v0;
  v18[1] = sub_1004215F8;
  uint64_t v19 = v0[11];
  return sub_1002CDB18(v19, v15, v16, (uint64_t)(v0 + 2), v17);
}

uint64_t sub_1004215F8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10042174C, 0, 0);
  }
  else
  {
    sub_100014524(v2 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_10042174C()
{
  uint64_t v22 = v0;
  uint64_t v1 = v0[13];
  sub_100014524((uint64_t)(v0 + 2));
  static Logger.restore.getter();
  sub_100423920(v1);
  sub_100423920(v1);
  sub_100423920(v1);
  sub_100423920(v1);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (void *)v0[21];
    unint64_t v15 = v0[20];
    uint64_t v16 = v0[19];
    uint64_t v19 = v0[16];
    uint64_t v20 = (void (*)(uint64_t, uint64_t))v0[18];
    uint64_t v5 = v0[13];
    uint64_t v18 = v0[14];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    v0[7] = v4;
    uint64_t v21 = v17;
    *(_DWORD *)uint64_t v6 = 138412546;
    id v8 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v7 = v4;
    sub_1003ADBCC(v5);
    sub_1003ADBCC(v5);
    *(_WORD *)(v6 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[8] = sub_1000143F4(v16, v15, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1003ADBCC(v5);
    sub_1003ADBCC(v5);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%@] Error loading configuration bag for %{public}s", (uint8_t *)v6, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v20(v19, v18);
  }
  else
  {
    uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[18];
    uint64_t v10 = v0[16];
    uint64_t v12 = v0[13];
    uint64_t v11 = v0[14];
    sub_1003ADBCC(v12);
    sub_1003ADBCC(v12);
    sub_1003ADBCC(v12);
    sub_1003ADBCC(v12);

    v9(v10, v11);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_100421A34(uint64_t a1, uint64_t a2)
{
  v3[56] = a2;
  v3[57] = v2;
  v3[55] = a1;
  uint64_t v4 = type metadata accessor for Logger();
  v3[58] = v4;
  v3[59] = *(void *)(v4 - 8);
  v3[60] = swift_task_alloc();
  sub_1000172F8(&qword_100663248);
  v3[61] = swift_task_alloc();
  v3[62] = swift_task_alloc();
  sub_1000172F8(&qword_10065FC48);
  v3[63] = swift_task_alloc();
  v3[64] = type metadata accessor for ConfigurationBag(0);
  v3[65] = swift_task_alloc();
  v3[66] = swift_task_alloc();
  sub_1000172F8(&qword_10065C3C0);
  v3[67] = swift_task_alloc();
  v3[68] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v3[69] = v5;
  v3[70] = *(void *)(v5 - 8);
  v3[71] = swift_task_alloc();
  v3[72] = swift_task_alloc();
  v3[73] = swift_task_alloc();
  v3[74] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Restore();
  v3[75] = v6;
  v3[76] = *(void *)(v6 - 8);
  v3[77] = swift_task_alloc();
  v3[78] = swift_task_alloc();
  return _swift_task_switch(sub_100421CD8, 0, 0);
}

uint64_t sub_100421CD8()
{
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
LABEL_37:
    *(void *)(v0 + 632) = v7;
    uint64_t v70 = *(void *)(v0 + 456);
    uint64_t v71 = *(void *)v70;
    unint64_t v72 = *(void *)(v70 + 8);
    char v73 = *(unsigned char *)(v70 + 112);
    *(unsigned char *)(v0 + 127) = v73;
    if (v73)
    {
      char v74 = (uint64_t *)(v70 + 40);
      uint64_t v75 = (uint64_t *)(v70 + 32);
      uint64_t v76 = &type metadata for WebDistributor;
      unint64_t v77 = sub_1002BEA38();
    }
    else
    {
      char v74 = (uint64_t *)(v70 + 56);
      uint64_t v75 = (uint64_t *)(v70 + 48);
      uint64_t v76 = &type metadata for NativeDistributor;
      unint64_t v77 = sub_1002F9EF8();
    }
    uint64_t v78 = *v75;
    uint64_t v79 = *v74;
    *(void *)(v0 + 360) = v76;
    *(void *)(v0 + 368) = v77;
    *(void *)(v0 + 336) = v78;
    *(void *)(v0 + 344) = v79;
    char v80 = *(unsigned char *)(v70 + 239);
    *(unsigned char *)(v0 + 241) = v80;
    unint64_t v81 = *(void **)(v70 + 240);
    *(void *)(v0 + 640) = v81;
    swift_bridgeObjectRetain();
    Swift::String v82 = self;
    swift_bridgeObjectRetain();
    id v83 = v81;
    id v84 = [v82 ephemeralSessionConfiguration];
    [v84 setHTTPShouldSetCookies:0];
    [v84 setHTTPCookieAcceptPolicy:1];
    [v84 setRequestCachePolicy:1];
    sub_100373694(1);
    id v85 = [self sessionWithConfiguration:v84];

    type metadata accessor for PlainHTTP();
    uint64_t v86 = swift_allocObject();
    *(unsigned char *)(v86 + 24) = 0;
    *(void *)(v86 + 16) = v85;
    type metadata accessor for DecoratedHTTP();
    *(void *)(v0 + 648) = swift_initStackObject();
    *(void *)(v0 + 656) = sub_1002C20CC(v86, v0 + 336, v71, v72, v80, v83);
    *(void *)(v0 + 408) = _swiftEmptyArrayStorage;
    *(void *)(v0 + 416) = _swiftEmptyArrayStorage;
    char v87 = *((unsigned char *)v7 + 32);
    *(unsigned char *)(v0 + 242) = v87;
    uint64_t v88 = -1;
    uint64_t v89 = -1 << v87;
    if (-(-1 << v87) < 64) {
      uint64_t v88 = ~(-1 << -(char)v89);
    }
    unint64_t v90 = v88 & *((void *)v7 + 8);
    swift_bridgeObjectRetain();
    if (v90)
    {
      uint64_t v91 = 0;
      unint64_t v92 = __clz(__rbit64(v90));
      uint64_t v93 = (v90 - 1) & v90;
      uint64_t v7 = *(void **)(v0 + 632);
LABEL_44:
      uint64_t v94 = *(void *)(v0 + 488);
      (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 560) + 16))(v94, *((void *)v7 + 6) + *(void *)(*(void *)(v0 + 560) + 72) * v92, *(void *)(v0 + 552));
      uint64_t v95 = *((void *)v7 + 7);
      uint64_t v96 = sub_1000172F8(&qword_100663250);
      *(void *)(v94 + *(int *)(v96 + 48)) = *(void *)(v95 + 8 * v92);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v94, 0, 1, v96);
      swift_bridgeObjectRetain();
      goto LABEL_51;
    }
    unint64_t v62 = 63 - v89;
    if ((unint64_t)(63 - v89) <= 0x7F)
    {
      uint64_t v91 = 0;
    }
    else
    {
      uint64_t v7 = *(void **)(v0 + 632);
      unint64_t v97 = *((void *)v7 + 9);
      if (v97)
      {
        uint64_t v91 = 1;
LABEL_48:
        uint64_t v93 = (v97 - 1) & v97;
        unint64_t v92 = __clz(__rbit64(v97)) + (v91 << 6);
        goto LABEL_44;
      }
      if (v62 < 0xC0)
      {
        uint64_t v91 = 1;
      }
      else
      {
        unint64_t v97 = *((void *)v7 + 10);
        if (v97)
        {
          uint64_t v91 = 2;
          goto LABEL_48;
        }
        if (v62 < 0x100)
        {
          uint64_t v91 = 2;
        }
        else
        {
          unint64_t v97 = *((void *)v7 + 11);
          if (v97)
          {
            uint64_t v91 = 3;
            goto LABEL_48;
          }
          if (v62 < 0x140)
          {
LABEL_73:
            uint64_t v91 = 3;
          }
          else
          {
            unint64_t v97 = *((void *)v7 + 12);
            if (v97)
            {
              uint64_t v91 = 4;
              goto LABEL_48;
            }
LABEL_75:
            uint64_t v116 = 0;
            uint64_t v117 = v62 >> 6;
            uint64_t v118 = 5;
            if (v117 > 5) {
              uint64_t v118 = v117;
            }
            uint64_t v119 = v118 - 5;
            while (v119 != v116)
            {
              unint64_t v97 = *((void *)v7 + v116++ + 13);
              if (v97)
              {
                uint64_t v91 = v116 + 4;
                goto LABEL_48;
              }
            }
            uint64_t v91 = v117 - 1;
          }
        }
      }
    }
    uint64_t v98 = *(void *)(v0 + 488);
    uint64_t v99 = sub_1000172F8(&qword_100663250);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v98, 1, 1, v99);
    uint64_t v93 = 0;
LABEL_51:
    *(void *)(v0 + 672) = v93;
    *(void *)(v0 + 664) = v91;
    uint64_t v100 = *(void *)(v0 + 496);
    sub_100423A04(*(void *)(v0 + 488), v100);
    uint64_t v101 = sub_1000172F8(&qword_100663250);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 48))(v100, 1, v101) == 1)
    {
      swift_release();
      swift_release();
      uint64_t v102 = *(void *)(v0 + 416);
      uint64_t v131 = *(void *)(v0 + 408);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v103 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
      return v103(v102, v131);
    }
    else
    {
      long long v105 = *(_OWORD **)(v0 + 456);
      uint64_t v106 = *(void *)(*(void *)(v0 + 496) + *(int *)(v101 + 48));
      (*(void (**)(void))(*(void *)(v0 + 560) + 32))(*(void *)(v0 + 568));
      long long v108 = v105[9];
      long long v107 = v105[10];
      *(_OWORD *)(v0 + 16) = v105[8];
      *(_OWORD *)(v0 + 32) = v108;
      *(_OWORD *)(v0 + 48) = v107;
      long long v110 = v105[12];
      long long v109 = v105[13];
      long long v111 = v105[11];
      *(_OWORD *)(v0 + 111) = *(_OWORD *)((char *)v105 + 223);
      *(_OWORD *)(v0 + 80) = v110;
      *(_OWORD *)(v0 + 96) = v109;
      *(_OWORD *)(v0 + 64) = v111;
      sub_10018AB28(v0 + 16);
      sub_1002FB98C(v106, v0 + 16, (void *)(v0 + 296));
      sub_10018AB94(v0 + 16);
      *(void *)(v0 + 224) = &type metadata for RestoreHTTPRequest;
      *(void *)(v0 + 232) = sub_100423A6C();
      uint64_t v112 = swift_allocObject();
      *(void *)(v0 + 200) = v112;
      long long v113 = *(_OWORD *)(v0 + 312);
      *(_OWORD *)(v112 + 16) = *(_OWORD *)(v0 + 296);
      *(_OWORD *)(v112 + 32) = v113;
      *(void *)(v112 + 48) = *(void *)(v0 + 328);
      *(unsigned char *)(v0 + 240) = 0;
      sub_1002C66D0(v0 + 200, v0 + 248);
      uint64_t v133 = (char *)&dword_10065F848 + dword_10065F848;
      Class v114 = (void *)swift_task_alloc();
      *(void *)(v0 + 680) = v114;
      void *v114 = v0;
      v114[1] = sub_100422A50;
      uint64_t v115 = *(void *)(v0 + 568);
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t))v133)(v115, 1, v0 + 248, 0, 1);
    }
  }
  uint64_t v3 = *(void *)(v0 + 608);
  uint64_t v4 = *(void *)(v0 + 600);
  uint64_t v5 = *(void *)(v0 + 560);
  uint64_t v128 = *(void *)(v0 + 512);
  unint64_t v121 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = v1 + v121;
  uint64_t v129 = (void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  uint64_t v132 = *(void *)(v3 + 72);
  uint64_t v127 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  unint64_t v130 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  uint64_t v125 = (void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  uint64_t v120 = v5;
  uint64_t v123 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  swift_bridgeObjectRetain();
  uint64_t v7 = &_swiftEmptyDictionarySingleton;
  uint64_t v124 = v4;
  while (1)
  {
    uint64_t v8 = *(void *)(v0 + 624);
    sub_10017B7DC(v6, v8);
    uint64_t v9 = v8 + *(int *)(v4 + 60);
    if (*(unsigned char *)(v9 + 8) != 1) {
      break;
    }
    sub_100423BC4(*(void *)(v0 + 624), (uint64_t (*)(void))type metadata accessor for Restore);
LABEL_4:
    v6 += v132;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
  }
  uint64_t v10 = *(void *)(v0 + 528);
  uint64_t v11 = *(void *)(v0 + 504);
  *(void *)(v0 + 432) = *(void *)v9;
  uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
  sub_1002CE45C(v12, v13, v10);
  sub_100017238(v10 + *(int *)(v128 + 28), v11, &qword_10065FC48);
  uint64_t v14 = type metadata accessor for ConfigurationBag.RestoresConfiguration(0);
  int v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v11, 1, v14);
  uint64_t v16 = *(void *)(v0 + 552);
  uint64_t v17 = *(void *)(v0 + 536);
  uint64_t v18 = *(void *)(v0 + 504);
  if (v15 == 1)
  {
    sub_10001729C(*(void *)(v0 + 504), &qword_10065FC48);
    uint64_t v19 = *v127;
    (*v127)(v17, 1, 1, v16);
  }
  else
  {
    (*v129)(*(void *)(v0 + 536), *(void *)(v0 + 504), *(void *)(v0 + 552));
    sub_100423BC4(v18, type metadata accessor for ConfigurationBag.RestoresConfiguration);
    uint64_t v19 = *v127;
    (*v127)(v17, 0, 1, v16);
  }
  uint64_t v20 = *(void *)(v0 + 552);
  uint64_t v21 = *(void *)(v0 + 536);
  sub_100423B5C(*(void *)(v0 + 528), *(void *)(v0 + 520), type metadata accessor for ConfigurationBag);
  uint64_t v22 = *v130;
  if ((*v130)(v21, 1, v20) == 1)
  {
    uint64_t v23 = *(void *)(v0 + 536);
    uint64_t v24 = *(void *)(v0 + 520);
    sub_100017238(v24 + *(int *)(v128 + 24), *(void *)(v0 + 544), &qword_10065C3C0);
    sub_100423BC4(v24, type metadata accessor for ConfigurationBag);
    sub_10001729C(v23, &qword_10065C3C0);
  }
  else
  {
    uint64_t v25 = *(void *)(v0 + 552);
    uint64_t v26 = *(void *)(v0 + 544);
    uint64_t v27 = *(void *)(v0 + 536);
    sub_100423BC4(*(void *)(v0 + 520), type metadata accessor for ConfigurationBag);
    (*v125)(v26, v27, v25);
    v19(v26, 0, 1, v25);
  }
  uint64_t v28 = *(void *)(v0 + 552);
  uint64_t v29 = *(void *)(v0 + 544);
  swift_bridgeObjectRelease();
  if (v22(v29, 1, v28) == 1)
  {
    uint64_t v30 = *(void *)(v0 + 544);
    sub_100423BC4(*(void *)(v0 + 624), (uint64_t (*)(void))type metadata accessor for Restore);
    sub_10001729C(v30, &qword_10065C3C0);
LABEL_34:
    uint64_t v4 = v124;
    goto LABEL_4;
  }
  uint64_t v31 = *(void *)(v0 + 592);
  uint64_t v32 = *(void *)(v0 + 584);
  uint64_t v33 = *(void *)(v0 + 552);
  (*v125)(v31, *(void *)(v0 + 544), v33);
  uint64_t v34 = v7;
  unint64_t v35 = *v129;
  (*v129)(v32, v31, v33);
  uint64_t v126 = v34;
  if (v34[2])
  {
    unint64_t v36 = sub_100452998(*(void *)(v0 + 584));
    uint64_t v37 = _swiftEmptyArrayStorage;
    if (v38)
    {
      uint64_t v37 = *(void **)(v34[7] + 8 * v36);
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    uint64_t v37 = _swiftEmptyArrayStorage;
  }
  uint64_t v39 = *(void *)(v0 + 624);
  uint64_t v40 = *(void *)(v0 + 616);
  uint64_t v41 = *v123;
  (*v123)(*(void *)(v0 + 584), *(void *)(v0 + 552));
  sub_10017B7DC(v39, v40);
  uint64_t v122 = v41;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v37 = (void *)sub_100290934(0, v37[2] + 1, 1, (unint64_t)v37);
  }
  unint64_t v43 = v37[2];
  unint64_t v42 = v37[3];
  if (v43 >= v42 >> 1) {
    uint64_t v37 = (void *)sub_100290934(v42 > 1, v43 + 1, 1, (unint64_t)v37);
  }
  uint64_t v44 = *(void *)(v0 + 616);
  uint64_t v45 = *(void *)(v0 + 592);
  uint64_t v46 = *(void *)(v0 + 576);
  uint64_t v47 = *(void *)(v0 + 552);
  v37[2] = v43 + 1;
  sub_100423B5C(v44, (uint64_t)v37 + v121 + v43 * v132, (uint64_t (*)(void))type metadata accessor for Restore);
  uint64_t v48 = v35;
  v35(v46, v45, v47);
  uint64_t v7 = v126;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v51 = sub_100452998(v46);
  uint64_t v52 = v126[2];
  BOOL v53 = (v50 & 1) == 0;
  uint64_t v54 = v52 + v53;
  if (__OFADD__(v52, v53))
  {
    __break(1u);
    goto LABEL_73;
  }
  char v55 = v50;
  if (v126[3] >= v54)
  {
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v50) {
        goto LABEL_29;
      }
    }
    else
    {
      sub_10052D694();
      uint64_t v7 = v126;
      if (v55) {
        goto LABEL_29;
      }
    }
LABEL_31:
    uint64_t v60 = *(void *)(v0 + 576);
    uint64_t v61 = *(void *)(v0 + 552);
    *((void *)v7 + (v51 >> 6) + 8) |= 1 << v51;
    v48(*((void *)v7 + 6) + *(void *)(v120 + 72) * v51, v60, v61);
    *(void *)(*((void *)v7 + 7) + 8 * v51) = v37;
    uint64_t v63 = *((void *)v7 + 2);
    BOOL v64 = __OFADD__(v63, 1);
    uint64_t v65 = v63 + 1;
    if (v64)
    {
      __break(1u);
      goto LABEL_75;
    }
    *((void *)v7 + 2) = v65;
    goto LABEL_33;
  }
  uint64_t v56 = *(void *)(v0 + 576);
  sub_100526B6C(v54, isUniquelyReferenced_nonNull_native);
  uint64_t v7 = v126;
  unint64_t v57 = sub_100452998(v56);
  if ((v55 & 1) == (v58 & 1))
  {
    unint64_t v51 = v57;
    if ((v55 & 1) == 0) {
      goto LABEL_31;
    }
LABEL_29:
    uint64_t v59 = *((void *)v7 + 7);
    swift_bridgeObjectRelease();
    *(void *)(v59 + 8 * v51) = v37;
LABEL_33:
    uint64_t v66 = *(void *)(v0 + 624);
    uint64_t v67 = *(void *)(v0 + 592);
    uint64_t v68 = *(void *)(v0 + 576);
    uint64_t v69 = *(void *)(v0 + 552);
    swift_bridgeObjectRelease();
    v122(v68, v69);
    v122(v67, v69);
    sub_100423BC4(v66, (uint64_t (*)(void))type metadata accessor for Restore);
    goto LABEL_34;
  }
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_100422A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[86] = a1;
  v5[87] = a2;
  v5[88] = a3;
  v5[89] = v3;
  swift_task_dealloc();
  sub_10001729C((uint64_t)(v5 + 31), &qword_10065B8E8);
  if (v3)
  {
    uint64_t v6 = sub_10042378C;
  }
  else
  {
    sub_1002C672C((uint64_t)(v5 + 25));
    uint64_t v6 = sub_100422BA8;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_100422BA8()
{
  uint64_t v93 = v0;
  if ([*(id *)(v0 + 704) statusCode] != (id)200)
  {
    uint64_t v8 = *(void **)(v0 + 704);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ([v8 statusCode] == (id)401)
    {
      if ((*(unsigned char *)(v0 + 127) & 1) != 0 || !*(unsigned char *)(v0 + 241))
      {
LABEL_12:
        uint64_t v12 = *(void **)(v0 + 704);
        unint64_t v13 = *(void *)(v0 + 696);
        uint64_t v14 = *(void *)(v0 + 688);
        uint64_t v15 = *(void *)(v0 + 568);
        uint64_t v16 = *(void *)(v0 + 560);
        uint64_t v17 = *(void *)(v0 + 552);
        id v20 = [v12 statusCode];
        sub_10029D4AC();
        swift_allocError();
        *(void *)uint64_t v21 = v20;
        *(unsigned char *)(v21 + 8) = 0;
        goto LABEL_13;
      }
    }
    else
    {
      int v9 = *(unsigned __int8 *)(v0 + 241);
      char v10 = *(unsigned char *)(v0 + 127);
      id v11 = [*(id *)(v0 + 704) statusCode];
      if ((v10 & 1) != 0 || v11 != (id)403 || !v9) {
        goto LABEL_12;
      }
    }
    uint64_t v12 = *(void **)(v0 + 704);
    unint64_t v13 = *(void *)(v0 + 696);
    uint64_t v14 = *(void *)(v0 + 688);
    uint64_t v15 = *(void *)(v0 + 568);
    uint64_t v16 = *(void *)(v0 + 560);
    uint64_t v17 = *(void *)(v0 + 552);
    id v18 = [v12 statusCode];
    sub_10029D4AC();
    swift_allocError();
    *(void *)uint64_t v19 = v18;
    *(unsigned char *)(v19 + 8) = 1;
LABEL_13:
    swift_willThrow();

    sub_100013510(v14, v13);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    swift_release();
    goto LABEL_14;
  }
  uint64_t v1 = *(void *)(v0 + 712);
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_100423B08();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 704);
    unint64_t v3 = *(void *)(v0 + 696);
    uint64_t v4 = *(void *)(v0 + 688);
    uint64_t v5 = *(void *)(v0 + 568);
    uint64_t v6 = *(void *)(v0 + 560);
    uint64_t v7 = *(void *)(v0 + 552);
    swift_release();

    sub_100013510(v4, v3);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
  uint64_t v24 = *(void *)(v0 + 456);
  swift_release();
  uint64_t v26 = *(void *)(v0 + 376);
  uint64_t v25 = *(void *)(v0 + 384);
  static Logger.restore.getter();
  sub_100423920(v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100423920(v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v27, v28))
  {
    uint64_t v41 = *(void *)(v0 + 472);
    uint64_t v40 = *(void *)(v0 + 480);
    uint64_t v43 = *(void *)(v0 + 456);
    uint64_t v42 = *(void *)(v0 + 464);
    sub_1003ADBCC(v43);
    sub_1003ADBCC(v43);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
    if (!*(void *)(v26 + 16)) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  uint64_t v29 = *(void **)(v0 + 640);
  uint64_t v87 = *(void *)(v0 + 472);
  uint64_t v30 = *(void *)(v0 + 456);
  uint64_t v88 = *(void *)(v0 + 464);
  uint64_t v90 = *(void *)(v0 + 480);
  uint64_t v31 = swift_slowAlloc();
  uint64_t v86 = (void *)swift_slowAlloc();
  uint64_t v92 = swift_slowAlloc();
  *(_DWORD *)uint64_t v31 = 138412546;
  *(void *)(v31 + 4) = v29;
  *uint64_t v86 = v29;
  id v32 = v29;
  sub_1003ADBCC(v30);
  sub_1003ADBCC(v30);
  *(_WORD *)(v31 + 12) = 2082;
  uint64_t v33 = *(void *)(v26 + 16);
  *(void *)(v0 + 424) = v33;
  *(void *)(v0 + 392) = dispatch thunk of CustomStringConvertible.description.getter();
  *(void *)(v0 + 400) = v34;
  unint64_t v35 = 0xE100000000000000;
  v36._uint64_t countAndFlagsBits = 32;
  v36._object = (void *)0xE100000000000000;
  String.append(_:)(v36);
  v37._uint64_t countAndFlagsBits = 0x65726F74736572;
  v37._object = (void *)0xE700000000000000;
  String.append(_:)(v37);
  if (v33 == 1) {
    uint64_t v38 = 0;
  }
  else {
    uint64_t v38 = 115;
  }
  if (v33 == 1) {
    unint64_t v35 = 0xE000000000000000;
  }
  unint64_t v39 = v35;
  String.append(_:)(*(Swift::String *)&v38);
  swift_bridgeObjectRelease();
  *(void *)(v31 + 14) = sub_1000143F4(*(void *)(v0 + 392), *(void *)(v0 + 400), &v92);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  _os_log_impl((void *)&_mh_execute_header, v27, v28, "[%@] Received metadata for %{public}s", (uint8_t *)v31, 0x16u);
  sub_1000172F8(&qword_10065DB10);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v90, v88);
  if (*(void *)(v26 + 16))
  {
LABEL_26:
    uint64_t v44 = swift_bridgeObjectRetain();
    sub_100555E20(v44);
  }
LABEL_27:
  if (v25)
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = *(void **)(v0 + 704);
    unint64_t v46 = *(void *)(v0 + 696);
    uint64_t v47 = *(void *)(v0 + 688);
    uint64_t v48 = *(void *)(v0 + 568);
    uint64_t v49 = *(void *)(v0 + 552);
    char v50 = (uint64_t (**)(uint64_t, uint64_t))(*(void *)(v0 + 560) + 8);
    if (*(void *)(v25 + 16))
    {
      sub_100555E4C(v25);

      sub_100013510(v47, v46);
      uint64_t result = (*v50)(v48, v49);
    }
    else
    {
      (*v50)(*(void *)(v0 + 568), *(void *)(v0 + 552));

      sub_100013510(v47, v46);
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  else
  {
    unint64_t v51 = *(void *)(v0 + 696);
    uint64_t v52 = *(void *)(v0 + 688);
    uint64_t v53 = *(void *)(v0 + 568);
    uint64_t v54 = *(void *)(v0 + 560);
    uint64_t v55 = *(void *)(v0 + 552);

    sub_100013510(v52, v51);
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 8))(v53, v55);
  }
  unint64_t v56 = *(void *)(v0 + 672);
  int64_t v57 = *(void *)(v0 + 664);
  if (v56)
  {
    uint64_t v58 = (v56 - 1) & v56;
    unint64_t v59 = __clz(__rbit64(v56)) | (v57 << 6);
    uint64_t v60 = *(void *)(v0 + 632);
LABEL_34:
    uint64_t v61 = *(void *)(v0 + 488);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 560) + 16))(v61, *(void *)(v60 + 48) + *(void *)(*(void *)(v0 + 560) + 72) * v59, *(void *)(v0 + 552));
    uint64_t v62 = *(void *)(v60 + 56);
    uint64_t v63 = sub_1000172F8(&qword_100663250);
    *(void *)(v61 + *(int *)(v63 + 48)) = *(void *)(v62 + 8 * v59);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v61, 0, 1, v63);
    swift_bridgeObjectRetain();
    goto LABEL_53;
  }
  int64_t v64 = v57 + 1;
  if (__OFADD__(v57, 1))
  {
    __break(1u);
    goto LABEL_61;
  }
  int64_t v65 = (unint64_t)((1 << *(unsigned char *)(v0 + 242)) + 63) >> 6;
  if (v64 < v65)
  {
    uint64_t v60 = *(void *)(v0 + 632);
    uint64_t v66 = v60 + 64;
    unint64_t v67 = *(void *)(v60 + 64 + 8 * v64);
    if (v67)
    {
LABEL_38:
      uint64_t v58 = (v67 - 1) & v67;
      unint64_t v59 = __clz(__rbit64(v67)) + (v64 << 6);
      int64_t v57 = v64;
      goto LABEL_34;
    }
    int64_t v68 = v57 + 2;
    ++v57;
    if (v64 + 1 < v65)
    {
      unint64_t v67 = *(void *)(v66 + 8 * v68);
      if (v67)
      {
LABEL_41:
        int64_t v64 = v68;
        goto LABEL_38;
      }
      int64_t v57 = v64 + 1;
      if (v64 + 2 < v65)
      {
        unint64_t v67 = *(void *)(v66 + 8 * (v64 + 2));
        if (v67)
        {
          v64 += 2;
          goto LABEL_38;
        }
        int64_t v68 = v64 + 3;
        int64_t v57 = v64 + 2;
        if (v64 + 3 < v65)
        {
          unint64_t v67 = *(void *)(v66 + 8 * v68);
          if (v67) {
            goto LABEL_41;
          }
          while (1)
          {
            int64_t v64 = v68 + 1;
            if (__OFADD__(v68, 1)) {
              break;
            }
            if (v64 >= v65)
            {
              int64_t v57 = v65 - 1;
              goto LABEL_52;
            }
            unint64_t v67 = *(void *)(v66 + 8 * v64);
            ++v68;
            if (v67) {
              goto LABEL_38;
            }
          }
LABEL_61:
          __break(1u);
          return result;
        }
      }
    }
  }
LABEL_52:
  uint64_t v69 = *(void *)(v0 + 488);
  uint64_t v70 = sub_1000172F8(&qword_100663250);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v69, 1, 1, v70);
  uint64_t v58 = 0;
LABEL_53:
  *(void *)(v0 + 672) = v58;
  *(void *)(v0 + 664) = v57;
  uint64_t v71 = *(void *)(v0 + 496);
  sub_100423A04(*(void *)(v0 + 488), v71);
  uint64_t v72 = sub_1000172F8(&qword_100663250);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 48))(v71, 1, v72) == 1)
  {
    swift_release();
    swift_release();
    uint64_t v73 = *(void *)(v0 + 416);
    uint64_t v89 = *(void *)(v0 + 408);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v74 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v74(v73, v89);
  }
  else
  {
    uint64_t v75 = *(_OWORD **)(v0 + 456);
    uint64_t v76 = *(void *)(*(void *)(v0 + 496) + *(int *)(v72 + 48));
    (*(void (**)(void))(*(void *)(v0 + 560) + 32))(*(void *)(v0 + 568));
    long long v78 = v75[9];
    long long v77 = v75[10];
    *(_OWORD *)(v0 + 16) = v75[8];
    *(_OWORD *)(v0 + 32) = v78;
    *(_OWORD *)(v0 + 48) = v77;
    long long v80 = v75[12];
    long long v79 = v75[13];
    long long v81 = v75[11];
    *(_OWORD *)(v0 + 111) = *(_OWORD *)((char *)v75 + 223);
    *(_OWORD *)(v0 + 80) = v80;
    *(_OWORD *)(v0 + 96) = v79;
    *(_OWORD *)(v0 + 64) = v81;
    sub_10018AB28(v0 + 16);
    sub_1002FB98C(v76, v0 + 16, (void *)(v0 + 296));
    sub_10018AB94(v0 + 16);
    *(void *)(v0 + 224) = &type metadata for RestoreHTTPRequest;
    *(void *)(v0 + 232) = sub_100423A6C();
    uint64_t v82 = swift_allocObject();
    *(void *)(v0 + 200) = v82;
    long long v83 = *(_OWORD *)(v0 + 312);
    *(_OWORD *)(v82 + 16) = *(_OWORD *)(v0 + 296);
    *(_OWORD *)(v82 + 32) = v83;
    *(void *)(v82 + 48) = *(void *)(v0 + 328);
    *(unsigned char *)(v0 + 240) = 0;
    sub_1002C66D0(v0 + 200, v0 + 248);
    uint64_t v91 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, char))((char *)&dword_10065F848 + dword_10065F848);
    id v84 = (void *)swift_task_alloc();
    *(void *)(v0 + 680) = v84;
    *id v84 = v0;
    v84[1] = sub_100422A50;
    uint64_t v85 = *(void *)(v0 + 568);
    return v91(v85, 1, v0 + 248, 0, 1);
  }
}

uint64_t sub_10042378C()
{
  uint64_t v1 = v0[71];
  uint64_t v2 = v0[70];
  uint64_t v3 = v0[69];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  sub_1002C672C((uint64_t)(v0 + 25));
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100423920(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100423A04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000172F8(&qword_100663248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100423A6C()
{
  unint64_t result = qword_100663258;
  if (!qword_100663258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663258);
  }
  return result;
}

uint64_t sub_100423AC0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

unint64_t sub_100423B08()
{
  unint64_t result = qword_100663260;
  if (!qword_100663260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100663260);
  }
  return result;
}

uint64_t sub_100423B5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100423BC4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_100423C24(uint64_t (*a1)(id *), void *a2, unint64_t a3)
{
  unint64_t v4 = a3;
  uint64_t v19 = _swiftEmptyArrayStorage;
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v4 & 0xC000000000000001;
      unint64_t v15 = v4;
      while (v17)
      {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        char v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        id v18 = v9;
        uint64_t v12 = a2;
        char v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          unint64_t v4 = v15;
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          uint64_t v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  uint64_t v12 = _swiftEmptyArrayStorage;
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100423DD0()
{
  v1[393] = v0;
  v1[394] = type metadata accessor for EnsureAllowedDeveloperTask();
  v1[395] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for Logger();
  v1[396] = v2;
  v1[397] = *(void *)(v2 - 8);
  v1[398] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Date();
  v1[399] = v3;
  v1[400] = *(void *)(v3 - 8);
  v1[401] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Calendar.Component();
  v1[402] = v4;
  v1[403] = *(void *)(v4 - 8);
  v1[404] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Calendar();
  v1[405] = v5;
  v1[406] = *(void *)(v5 - 8);
  v1[407] = swift_task_alloc();
  sub_1000172F8(&qword_10065B8F0);
  v1[408] = swift_task_alloc();
  v1[409] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DeveloperApprovalSheetContext();
  v1[410] = v6;
  v1[411] = *(void *)(v6 - 8);
  v1[412] = swift_task_alloc();
  uint64_t v7 = sub_1000172F8(&qword_100662328);
  v1[413] = v7;
  v1[414] = *(void *)(v7 - 8);
  v1[415] = swift_task_alloc();
  uint64_t v8 = sub_1000172F8(&qword_10065B828);
  v1[416] = v8;
  v1[417] = *(void *)(v8 - 8);
  v1[418] = swift_task_alloc();
  sub_1000172F8(&qword_10065C3C0);
  v1[419] = swift_task_alloc();
  v1[420] = swift_task_alloc();
  v1[421] = swift_task_alloc();
  v1[422] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for URL();
  v1[423] = v9;
  v1[424] = *(void *)(v9 - 8);
  v1[425] = swift_task_alloc();
  v1[426] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for FeatureFlag();
  v1[427] = v10;
  v1[428] = *(void *)(v10 - 8);
  v1[429] = swift_task_alloc();
  return _swift_task_switch(sub_10042427C, 0, 0);
}

uint64_t sub_10042427C()
{
  uint64_t v1 = *(void *)(v0 + 3144);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v4 = sub_1000084C4();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)(v4 + 16);
    if (v6)
    {
      uint64_t v7 = *(void *)(type metadata accessor for ApprovedDeveloper() - 8);
      unint64_t v8 = v5 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      uint64_t v9 = *(void *)(v7 + 72);
      while (ApprovedDeveloper.identifier.getter() != v3 || v10 != v2)
      {
        char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v11) {
          goto LABEL_27;
        }
        v8 += v9;
        if (!--v6) {
          goto LABEL_8;
        }
      }
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      unsigned int v45 = 0;
      goto LABEL_28;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = *(void *)(v0 + 3144);
  if (*(unsigned char *)(v12 + *(int *)(*(void *)(v0 + 3152) + 36)) == 1)
  {
    uint64_t v13 = *(void *)(v0 + 3432);
    uint64_t v14 = *(void *)(v0 + 3424);
    uint64_t v15 = *(void *)(v0 + 3416);
    *(_DWORD *)(v0 + 276) = enum case for FeatureFlag.webDistribution(_:);
    uint64_t v16 = *(void (**)(uint64_t))(v14 + 104);
    *(void *)(v0 + 3440) = v16;
    *(void *)(v0 + 3448) = (v14 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
    v16(v13);
    char v17 = isFeatureEnabled(_:)();
    id v18 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    *(void *)(v0 + 3456) = v18;
    *(void *)(v0 + 3464) = (v14 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v18(v13, v15);
    if (v17)
    {
      uint64_t v19 = *(void *)(v0 + 3144);
      if (*(unsigned char *)(v19 + *(int *)(*(void *)(v0 + 3152) + 48))) {
        char v20 = 2;
      }
      else {
        char v20 = 1;
      }
      uint64_t v21 = 11;
    }
    else
    {
      char v20 = 0;
      uint64_t v19 = *(void *)(v0 + 3144);
      uint64_t v21 = 10;
    }
    uint64_t v32 = *(void *)(v19 + 48);
    uint64_t v33 = swift_bridgeObjectRetain();
    *(unsigned char *)(v0 + 275) = v20;
    *(void *)(v0 + 3480) = v33;
    *(void *)(v0 + 3472) = v32;
    uint64_t v34 = *(void *)(v0 + 3432);
    uint64_t v35 = *(void *)(v0 + 3416);
    *(void *)(v0 + 280) = v32;
    *(void *)(v0 + 288) = v33;
    *(_OWORD *)(v0 + 296) = 0u;
    *(_OWORD *)(v0 + 312) = 0u;
    *(_OWORD *)(v0 + 328) = 0u;
    *(unsigned char *)(v0 + 344) = v20;
    *(_DWORD *)(v0 + 348) = enum case for FeatureFlag.newInstallSheetFlow(_:);
    v16(v34);
    char v36 = isFeatureEnabled(_:)();
    v18(v34, v35);
    if (v36)
    {
      sub_10019C9FC(v21, 0, 0, 0, 0, 0, 0, 0, 26);
      uint64_t v37 = 7;
      uint64_t v38 = 9;
      uint64_t v21 = 12;
    }
    else
    {
      uint64_t v37 = 0;
      uint64_t v38 = 2;
    }
    *(void *)(v0 + 3504) = v37;
    *(void *)(v0 + 3496) = v38;
    *(void *)(v0 + 3488) = v21;
    uint64_t v39 = *(void *)(v0 + 3152);
    uint64_t v40 = *(void *)(v0 + 3144);
    *(void *)(v0 + 208) = v21;
    *(_OWORD *)(v0 + 216) = 0u;
    *(_OWORD *)(v0 + 232) = 0u;
    *(_OWORD *)(v0 + 248) = 0u;
    *(void *)(v0 + 264) = 0;
    *(unsigned char *)(v0 + 272) = 26;
    *(void *)(v0 + 352) = v37;
    *(void *)(v0 + 408) = 0;
    *(_OWORD *)(v0 + 360) = 0u;
    *(_OWORD *)(v0 + 376) = 0u;
    *(_OWORD *)(v0 + 392) = 0u;
    *(unsigned char *)(v0 + 416) = 26;
    *(void *)(v0 + 424) = v38;
    *(void *)(v0 + 480) = 0;
    *(_OWORD *)(v0 + 448) = 0u;
    *(_OWORD *)(v0 + 464) = 0u;
    *(_OWORD *)(v0 + 432) = 0u;
    *(unsigned char *)(v0 + 488) = 26;
    uint64_t v41 = *(int *)(v39 + 44);
    *(_DWORD *)(v0 + 420) = v41;
    *(void *)(v0 + 3512) = *(void *)(v40 + v41);
    uint64_t v42 = (void *)swift_task_alloc();
    *(void *)(v0 + 3520) = v42;
    *uint64_t v42 = v0;
    v42[1] = sub_1004248C4;
    return sub_100560FFC(v0 + 208);
  }
  uint64_t v22 = *(void *)(v0 + 3160);
  static Logger.install.getter();
  sub_10042C5A8(v12, v22);
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.error.getter();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v26 = *(void *)(v0 + 3160);
  if (v25)
  {
    uint64_t v27 = *(void *)(v0 + 3152);
    os_log_type_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v28 = 138412290;
    uint64_t v30 = *(void **)(v26 + *(int *)(v27 + 40));
    *(void *)(v0 + 3112) = v30;
    id v31 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v29 = v30;
    sub_10042C60C(v26);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "[%@] Developer not approved, but install is automatic so we can't show a prompt.", v28, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10042C60C(*(void *)(v0 + 3160));
  }

  (*(void (**)(void, void))(*(void *)(v0 + 3176) + 8))(*(void *)(v0 + 3184), *(void *)(v0 + 3168));
  unsigned int v45 = 1;
LABEL_28:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44(v45);
}

uint64_t sub_1004248C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v6 = (void *)*v2;
  v3[441] = a1;
  v3[442] = a2;
  swift_task_dealloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v3[443] = v4;
  *uint64_t v4 = v6;
  v4[1] = sub_100424A48;
  return sub_100560FFC((uint64_t)(v3 + 35));
}

uint64_t sub_100424A48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v6 = (void *)*v2;
  v3[444] = a1;
  v3[445] = a2;
  swift_task_dealloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v3[446] = v4;
  *uint64_t v4 = v6;
  v4[1] = sub_100424BCC;
  return sub_100560FFC((uint64_t)(v3 + 44));
}

uint64_t sub_100424BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v6 = (void *)*v2;
  v3[447] = a1;
  v3[448] = a2;
  swift_task_dealloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v3[449] = v4;
  *uint64_t v4 = v6;
  v4[1] = sub_100424D50;
  return sub_100560FFC((uint64_t)(v3 + 53));
}

uint64_t sub_100424D50(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 3600) = a1;
  *(void *)(v3 + 3608) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100424E80, 0, 0);
}

uint64_t sub_100424E80()
{
  uint64_t v1 = *(void *)(v0 + 3608);
  uint64_t v2 = *(void *)(v0 + 3600);
  long long v13 = *(_OWORD *)(v0 + 3552);
  long long v14 = *(_OWORD *)(v0 + 3576);
  long long v12 = *(_OWORD *)(v0 + 3528);
  uint64_t v3 = *(void *)(v0 + 3504);
  uint64_t v4 = *(void *)(v0 + 3496);
  uint64_t v5 = *(void *)(v0 + 3488);
  char v6 = *(unsigned char *)(v0 + 275);
  uint64_t v7 = *(void *)(v0 + 3480);
  uint64_t v8 = *(void *)(v0 + 3472);
  type metadata accessor for SystemAlert();
  uint64_t v9 = swift_allocObject();
  *(void *)(v0 + 3616) = v9;
  *(_OWORD *)(v9 + 16) = v12;
  *(_OWORD *)(v9 + 32) = v13;
  *(_OWORD *)(v9 + 48) = v14;
  *(void *)(v9 + 64) = v2;
  *(void *)(v9 + 72) = v1;
  *(_WORD *)(v9 + 80) = 0;
  sub_10019C9FC(v4, 0, 0, 0, 0, 0, 0, 0, 26);
  sub_10019C9FC(v3, 0, 0, 0, 0, 0, 0, 0, 26);
  sub_10019C9FC(v8, v7, 0, 0, 0, 0, 0, 0, v6);
  sub_10019C9FC(v5, 0, 0, 0, 0, 0, 0, 0, 26);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 3624) = v10;
  void *v10 = v0;
  v10[1] = sub_100425070;
  return sub_10042D9F4();
}

uint64_t sub_100425070(char a1)
{
  *(unsigned char *)(*(void *)v1 + 345) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1004251BC, 0, 0);
}

uint64_t sub_1004251BC()
{
  int v1 = *(unsigned __int8 *)(v0 + 345);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 3456);
  uint64_t v3 = *(void *)(v0 + 3432);
  uint64_t v4 = *(void *)(v0 + 3416);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 3440))(v3, *(unsigned int *)(v0 + 348), v4);
  char v5 = isFeatureEnabled(_:)();
  v2(v3, v4);
  if (v1 == 1)
  {
    uint64_t v6 = *(void *)(v0 + 3392);
    uint64_t v7 = *(void *)(v0 + 3384);
    if (v5)
    {
      uint64_t v8 = *(void *)(v0 + 3376);
      URL.init(string:)();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v7) == 1)
      {
        sub_1002BDBEC(*(void *)(v0 + 3376));
        goto LABEL_14;
      }
      (*(void (**)(void, void, void))(*(void *)(v0 + 3392) + 32))(*(void *)(v0 + 3408), *(void *)(v0 + 3376), *(void *)(v0 + 3384));
      id v15 = [self defaultWorkspace];
      if (v15)
      {
        id v18 = v15;
        uint64_t v19 = *(void *)(v0 + 3408);
        uint64_t v20 = *(void *)(v0 + 3392);
        uint64_t v21 = *(void *)(v0 + 3384);
        URL._bridgeToObjectiveC()(v17);
        uint64_t v23 = v22;
        sub_10044B428((uint64_t)_swiftEmptyArrayStorage);
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v18 openSensitiveURL:v23 withOptions:isa];

        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
LABEL_14:
        id v25 = objc_allocWithZone((Class)FLFollowUpController);
        NSString v26 = String._bridgeToObjectiveC()();
        id v27 = [v25 initWithClientIdentifier:v26];
        *(void *)(v0 + 3656) = v27;

        if (v27)
        {
          *(void *)(v0 + 3120) = 0;
          id v28 = [v27 pendingFollowUpItems:v0 + 3120];
          uint64_t v29 = *(void **)(v0 + 3120);
          if (v28)
          {
            uint64_t v30 = v28;
            uint64_t v31 = *(void *)(v0 + 3144);
            sub_10018B1DC(0, &qword_100663280);
            unint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
            id v33 = v29;

            uint64_t v34 = (void *)swift_task_alloc();
            v34[2] = v31;
            swift_bridgeObjectRetain();
            unint64_t v35 = (unint64_t)sub_100423C24(sub_10042C6B8, v34, v32);
            *(void *)(v0 + 3664) = v35;
            *(void *)(v0 + 3672) = 0;
            swift_bridgeObjectRelease();
            swift_task_dealloc();
            if (!(v35 >> 62))
            {
              uint64_t v36 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              uint64_t v37 = v36;
              if ((unint64_t)v36 < 2)
              {
LABEL_18:
                swift_bridgeObjectRelease();
LABEL_24:
                *(void *)(v0 + 3704) = v35;
                *(void *)(v0 + 3696) = 0;
                *(void *)(v0 + 496) = 3;
                *(_OWORD *)(v0 + 504) = 0u;
                *(_OWORD *)(v0 + 520) = 0u;
                *(_OWORD *)(v0 + 536) = 0u;
                *(void *)(v0 + 552) = 0;
                *(unsigned char *)(v0 + 560) = 26;
                uint64_t v46 = (void *)swift_task_alloc();
                *(void *)(v0 + 3712) = v46;
                *uint64_t v46 = v0;
                v46[1] = sub_10042677C;
                return sub_100560FFC(v0 + 496);
              }
              goto LABEL_30;
            }
            swift_bridgeObjectRetain_n();
            uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v36 < 2) {
              goto LABEL_18;
            }
            swift_bridgeObjectRetain();
            uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
            id v15 = (id)swift_bridgeObjectRelease();
            if ((v47 & 0x8000000000000000) == 0)
            {
              swift_bridgeObjectRetain();
              uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
LABEL_30:
              uint64_t v48 = v36 - 1;
              if (v37 < v48)
              {
LABEL_56:
                __break(1u);
LABEL_57:
                __break(1u);
LABEL_58:
                __break(1u);
              }
              if ((v35 & 0xC000000000000001) != 0)
              {
                Swift::Int v49 = 0;
                do
                {
                  Swift::Int v50 = v49 + 1;
                  _ArrayBuffer._typeCheckSlowPath(_:)(v49);
                  Swift::Int v49 = v50;
                }
                while (v48 != v50);
              }
              if (v35 >> 62)
              {
                swift_bridgeObjectRetain();
                _CocoaArrayWrapper.subscript.getter();
                uint64_t v52 = v53;
                uint64_t v51 = v54;
                unint64_t v56 = v55;
                swift_bridgeObjectRelease_n();
                uint64_t v48 = v56 >> 1;
              }
              else
              {
                uint64_t v51 = 0;
                uint64_t v52 = (v35 & 0xFFFFFFFFFFFFFF8) + 32;
              }
              uint64_t v57 = v48 - v51;
              if (__OFSUB__(v48, v51)) {
                goto LABEL_57;
              }
              uint64_t v76 = v27;
              if (v57)
              {
                sub_100455CD8(0, v57 & ~(v57 >> 63), 0);
                if (v57 < 0) {
                  goto LABEL_58;
                }
                if (v51 <= v48) {
                  uint64_t v58 = v48;
                }
                else {
                  uint64_t v58 = v51;
                }
                uint64_t v59 = v58 - v51;
                uint64_t v60 = (id *)(v52 + 8 * v51);
                while (v59)
                {
                  id v61 = *v60;
                  id v62 = [v61 uniqueIdentifier];
                  if (v62)
                  {
                    uint64_t v63 = v62;
                    uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                    uint64_t v66 = v65;
                  }
                  else
                  {

                    uint64_t v64 = 0;
                    uint64_t v66 = 0;
                  }
                  unint64_t v68 = _swiftEmptyArrayStorage[2];
                  unint64_t v67 = _swiftEmptyArrayStorage[3];
                  if (v68 >= v67 >> 1) {
                    sub_100455CD8(v67 > 1, v68 + 1, 1);
                  }
                  _swiftEmptyArrayStorage[2] = v68 + 1;
                  uint64_t v69 = &_swiftEmptyArrayStorage[2 * v68];
                  v69[4] = v64;
                  v69[5] = v66;
                  --v59;
                  ++v60;
                  if (!--v57) {
                    goto LABEL_51;
                  }
                }
                __break(1u);
                goto LABEL_56;
              }
LABEL_51:
              swift_unknownObjectRelease();
              uint64_t v70 = *(void *)(v0 + 3320);
              uint64_t v71 = *(void *)(v0 + 3312);
              uint64_t v72 = *(void *)(v0 + 3304);
              id v73 = v76;
              sub_10043B090((uint64_t)_swiftEmptyArrayStorage);
              swift_bridgeObjectRelease();
              Class v74 = Array._bridgeToObjectiveC()().super.isa;
              *(void *)(v0 + 3680) = v74;
              swift_bridgeObjectRelease();
              *(void *)(v0 + 144) = v0;
              *(void *)(v0 + 184) = v0 + 273;
              *(void *)(v0 + 152) = sub_100426530;
              swift_continuation_init();
              *(void *)(v0 + 2488) = v72;
              uint64_t v75 = sub_10019CE94((uint64_t *)(v0 + 2464));
              sub_1000172F8(&qword_10065B260);
              CheckedContinuation.init(continuation:function:)();
              (*(void (**)(uint64_t *, uint64_t, uint64_t))(v71 + 32))(v75, v70, v72);
              *(void *)(v0 + 2432) = _NSConcreteStackBlock;
              *(void *)(v0 + 2440) = 1107296256;
              *(void *)(v0 + 2448) = sub_10042C510;
              *(void *)(v0 + 2456) = &unk_100646600;
              [v73 clearPendingFollowUpItemsWithUniqueIdentifiers:v74 completion:v0 + 2432];
              id v15 = (id)(v0 + 144);
              goto LABEL_52;
            }
LABEL_62:
            __break(1u);
            return _swift_continuation_await(v15);
          }
          id v45 = v29;
          _convertNSErrorToError(_:)();

          swift_willThrow();
          swift_errorRelease();
        }
        unint64_t v35 = 0;
        goto LABEL_24;
      }
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    uint64_t v11 = *(void *)(v0 + 3368);
    URL.init(string:)();
    long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (v12(v11, 1, v7) == 1)
    {
      uint64_t v13 = *(void *)(v0 + 3384);
      uint64_t v14 = *(void *)(v0 + 3360);
      URL.init(string:)();
      id v15 = (id)v12(v14, 1, v13);
      if (v15 == 1)
      {
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
      uint64_t v16 = *(void *)(v0 + 3368);
      (*(void (**)(void, void, void))(*(void *)(v0 + 3392) + 32))(*(void *)(v0 + 3400), *(void *)(v0 + 3360), *(void *)(v0 + 3384));
      sub_1002BDBEC(v16);
    }
    else
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 3392) + 32))(*(void *)(v0 + 3400), *(void *)(v0 + 3368), *(void *)(v0 + 3384));
    }
    id v15 = [self defaultWorkspace];
    *(void *)(v0 + 3632) = v15;
    if (v15)
    {
      uint64_t v38 = v15;
      uint64_t v39 = *(void *)(v0 + 3344);
      uint64_t v40 = *(void *)(v0 + 3336);
      uint64_t v41 = *(void *)(v0 + 3328);
      URL._bridgeToObjectiveC()((NSURL *)(v0 + 2368));
      uint64_t v43 = v42;
      *(void *)(v0 + 3640) = v42;
      *(void *)(v0 + 16) = v0;
      *(void *)(v0 + 56) = v0 + 3128;
      *(void *)(v0 + 24) = sub_100425D60;
      swift_continuation_init();
      *(void *)(v0 + 2424) = v41;
      uint64_t v44 = sub_10019CE94((uint64_t *)(v0 + 2400));
      sub_1000172F8(&qword_10065B830);
      sub_1000172F8(&qword_10065B260);
      CheckedContinuation.init(continuation:function:)();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v40 + 32))(v44, v39, v41);
      *(void *)(v0 + 2368) = _NSConcreteStackBlock;
      *(void *)(v0 + 2376) = 1107296256;
      *(void *)(v0 + 2384) = sub_100341EA4;
      *(void *)(v0 + 2392) = &unk_100646628;
      objc_msgSend(v38, "openURL:configuration:completionHandler:", v43, 0);
      id v15 = (id)(v0 + 16);
LABEL_52:
      return _swift_continuation_await(v15);
    }
    __break(1u);
    goto LABEL_60;
  }
  if ((v5 & 1) == 0) {
    goto LABEL_14;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v9(1);
}

uint64_t sub_100425D60()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 3648) = v1;
  if (v1) {
    uint64_t v2 = sub_10042B9AC;
  }
  else {
    uint64_t v2 = sub_100425E9C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100425E9C()
{
  uint64_t v1 = *(void **)(v0 + 3640);
  uint64_t v2 = *(void **)(v0 + 3632);
  (*(void (**)(void, void))(*(void *)(v0 + 3392) + 8))(*(void *)(v0 + 3400), *(void *)(v0 + 3384));

  swift_bridgeObjectRelease();
  id v3 = objc_allocWithZone((Class)FLFollowUpController);
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 initWithClientIdentifier:v4];
  *(void *)(v0 + 3656) = v5;

  if (!v5) {
    goto LABEL_7;
  }
  *(void *)(v0 + 3120) = 0;
  id v6 = [v5 pendingFollowUpItems:v0 + 3120];
  uint64_t v7 = *(void **)(v0 + 3120);
  if (!v6)
  {
    id v16 = v7;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
LABEL_7:
    unint64_t v13 = 0;
    goto LABEL_8;
  }
  uint64_t v8 = v6;
  uint64_t v9 = *(void *)(v0 + 3144);
  sub_10018B1DC(0, &qword_100663280);
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v11 = v7;

  long long v12 = (void *)swift_task_alloc();
  v12[2] = v9;
  swift_bridgeObjectRetain();
  unint64_t v13 = (unint64_t)sub_100423C24(sub_10042C6B8, v12, v10);
  *(void *)(v0 + 3664) = v13;
  *(void *)(v0 + 3672) = 0;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v14 < 2) {
      goto LABEL_5;
    }
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v20 = swift_bridgeObjectRelease();
    if (v19 < 0)
    {
      __break(1u);
      return _swift_continuation_await(v20);
    }
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v21 = v14 - 1;
    if (v15 < v21)
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
    }
    if ((v13 & 0xC000000000000001) != 0)
    {
      Swift::Int v22 = 0;
      do
      {
        Swift::Int v23 = v22 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v22);
        Swift::Int v22 = v23;
      }
      while (v21 != v23);
    }
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.subscript.getter();
      uint64_t v25 = v26;
      uint64_t v24 = v27;
      unint64_t v29 = v28;
      swift_bridgeObjectRelease_n();
      uint64_t v21 = v29 >> 1;
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v25 = (v13 & 0xFFFFFFFFFFFFFF8) + 32;
    }
    uint64_t v30 = v21 - v24;
    if (__OFSUB__(v21, v24)) {
      goto LABEL_40;
    }
    Swift::Int v49 = v5;
    if (v30)
    {
      sub_100455CD8(0, v30 & ~(v30 >> 63), 0);
      if (v30 < 0) {
        goto LABEL_41;
      }
      if (v24 <= v21) {
        uint64_t v31 = v21;
      }
      else {
        uint64_t v31 = v24;
      }
      uint64_t v32 = v31 - v24;
      id v33 = (id *)(v25 + 8 * v24);
      while (v32)
      {
        id v34 = *v33;
        id v35 = [v34 uniqueIdentifier];
        if (v35)
        {
          uint64_t v36 = v35;
          uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v39 = v38;
        }
        else
        {

          uint64_t v37 = 0;
          uint64_t v39 = 0;
        }
        unint64_t v41 = _swiftEmptyArrayStorage[2];
        unint64_t v40 = _swiftEmptyArrayStorage[3];
        if (v41 >= v40 >> 1) {
          sub_100455CD8(v40 > 1, v41 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v41 + 1;
        uint64_t v42 = &_swiftEmptyArrayStorage[2 * v41];
        void v42[4] = v37;
        v42[5] = v39;
        --v32;
        ++v33;
        if (!--v30) {
          goto LABEL_35;
        }
      }
      __break(1u);
      goto LABEL_39;
    }
LABEL_35:
    swift_unknownObjectRelease();
    uint64_t v43 = *(void *)(v0 + 3320);
    uint64_t v44 = *(void *)(v0 + 3312);
    uint64_t v45 = *(void *)(v0 + 3304);
    id v46 = v49;
    sub_10043B090((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    *(void *)(v0 + 3680) = isa;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 144) = v0;
    *(void *)(v0 + 184) = v0 + 273;
    *(void *)(v0 + 152) = sub_100426530;
    swift_continuation_init();
    *(void *)(v0 + 2488) = v45;
    uint64_t v48 = sub_10019CE94((uint64_t *)(v0 + 2464));
    sub_1000172F8(&qword_10065B260);
    CheckedContinuation.init(continuation:function:)();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v44 + 32))(v48, v43, v45);
    *(void *)(v0 + 2432) = _NSConcreteStackBlock;
    *(void *)(v0 + 2440) = 1107296256;
    *(void *)(v0 + 2448) = sub_10042C510;
    *(void *)(v0 + 2456) = &unk_100646600;
    [v46 clearPendingFollowUpItemsWithUniqueIdentifiers:isa completion:v0 + 2432];
    uint64_t v20 = v0 + 144;
    return _swift_continuation_await(v20);
  }
  uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v15 = v14;
  if ((unint64_t)v14 >= 2) {
    goto LABEL_14;
  }
LABEL_5:
  swift_bridgeObjectRelease();
LABEL_8:
  *(void *)(v0 + 3704) = v13;
  *(void *)(v0 + 3696) = 0;
  *(void *)(v0 + 496) = 3;
  *(_OWORD *)(v0 + 504) = 0u;
  *(_OWORD *)(v0 + 520) = 0u;
  *(_OWORD *)(v0 + 536) = 0u;
  *(void *)(v0 + 552) = 0;
  *(unsigned char *)(v0 + 560) = 26;
  char v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 3712) = v17;
  *char v17 = v0;
  v17[1] = sub_10042677C;
  return sub_100560FFC(v0 + 496);
}

uint64_t sub_100426530()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  *(void *)(*(void *)v0 + 3688) = v1;
  if (v1) {
    uint64_t v2 = sub_10042C050;
  }
  else {
    uint64_t v2 = sub_10042666C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10042666C()
{
  uint64_t v1 = *(void **)(v0 + 3680);

  uint64_t v2 = *(void *)(v0 + 3672);
  *(void *)(v0 + 3704) = *(void *)(v0 + 3664);
  *(void *)(v0 + 3696) = v2;
  *(void *)(v0 + 496) = 3;
  *(void *)(v0 + 552) = 0;
  *(_OWORD *)(v0 + 520) = 0u;
  *(_OWORD *)(v0 + 536) = 0u;
  *(_OWORD *)(v0 + 504) = 0u;
  *(unsigned char *)(v0 + 560) = 26;
  id v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 3712) = v3;
  *id v3 = v0;
  v3[1] = sub_10042677C;
  return sub_100560FFC(v0 + 496);
}

uint64_t sub_10042677C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 3720) = a1;
  *(void *)(v3 + 3728) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_1004268AC, 0, 0);
}

uint64_t sub_1004268AC()
{
  uint64_t v1 = *(void *)(v0 + 3152);
  uint64_t v2 = *(void *)(v0 + 3144);
  String.append(_:)(*(Swift::String *)(v0 + 3720));
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 10333;
  v3._object = (void *)0xE200000000000000;
  String.append(_:)(v3);
  uint64_t v4 = (uint64_t *)(v2 + *(int *)(v1 + 24));
  uint64_t v5 = *v4;
  id v6 = (void *)v4[1];
  swift_bridgeObjectRetain();
  v7._uint64_t countAndFlagsBits = v5;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 41;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  *(void *)(v0 + 3736) = 91;
  *(void *)(v0 + 3744) = 0xE100000000000000;
  uint64_t v9 = (void *)(v2 + *(int *)(type metadata accessor for MediaAPIMetadata() + 56));
  *(void *)(v0 + 3752) = *v9;
  *(void *)(v0 + 3760) = v9[1];
  *(void *)(v0 + 568) = 5;
  *(void *)(v0 + 624) = 0;
  *(_OWORD *)(v0 + 592) = 0u;
  *(_OWORD *)(v0 + 608) = 0u;
  *(_OWORD *)(v0 + 576) = 0u;
  *(unsigned char *)(v0 + 632) = 26;
  swift_bridgeObjectRetain();
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 3768) = v10;
  void *v10 = v0;
  v10[1] = sub_100426A54;
  return sub_100560FFC(v0 + 568);
}

uint64_t sub_100426A54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 3776) = a1;
  *(void *)(v3 + 3784) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100426B84, 0, 0);
}

uint64_t sub_100426B84()
{
  *(void *)(v0 + 640) = 6;
  *(_OWORD *)(v0 + 648) = 0u;
  *(_OWORD *)(v0 + 664) = 0u;
  *(_OWORD *)(v0 + 680) = 0u;
  *(void *)(v0 + 696) = 0;
  *(unsigned char *)(v0 + 704) = 26;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 3792) = v1;
  void *v1 = v0;
  v1[1] = sub_100426C74;
  return sub_100560FFC(v0 + 640);
}

uint64_t sub_100426C74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 3800) = a1;
  *(void *)(v3 + 3808) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100426DA4, 0, 0);
}

uint64_t sub_100426DA4()
{
  *(void *)(v0 + 712) = 34;
  *(_OWORD *)(v0 + 720) = 0u;
  *(_OWORD *)(v0 + 736) = 0u;
  *(_OWORD *)(v0 + 752) = 0u;
  *(void *)(v0 + 768) = 0;
  *(unsigned char *)(v0 + 776) = 26;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 3816) = v1;
  void *v1 = v0;
  v1[1] = sub_100426E90;
  return sub_100560FFC(v0 + 712);
}

uint64_t sub_100426E90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 3824) = a1;
  *(void *)(v3 + 3832) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100426FC0, 0, 0);
}

uint64_t sub_100426FC0()
{
  *(void *)(v0 + 784) = 35;
  *(_OWORD *)(v0 + 792) = 0u;
  *(_OWORD *)(v0 + 808) = 0u;
  *(_OWORD *)(v0 + 824) = 0u;
  *(void *)(v0 + 840) = 0;
  *(unsigned char *)(v0 + 848) = 26;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 3840) = v1;
  void *v1 = v0;
  v1[1] = sub_1004270B0;
  return sub_100560FFC(v0 + 784);
}

uint64_t sub_1004270B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 3848) = a1;
  *(void *)(v3 + 3856) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_1004271E0, 0, 0);
}

uint64_t sub_1004271E0()
{
  *(void *)(v0 + 856) = 36;
  *(_OWORD *)(v0 + 864) = 0u;
  *(_OWORD *)(v0 + 880) = 0u;
  *(_OWORD *)(v0 + 896) = 0u;
  *(void *)(v0 + 912) = 0;
  *(unsigned char *)(v0 + 920) = 26;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 3864) = v1;
  void *v1 = v0;
  v1[1] = sub_1004272CC;
  return sub_100560FFC(v0 + 856);
}

uint64_t sub_1004272CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 3872) = a1;
  *(void *)(v3 + 3880) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_1004273FC, 0, 0);
}

uint64_t sub_1004273FC()
{
  *(void *)(v0 + 928) = 37;
  *(_OWORD *)(v0 + 936) = 0u;
  *(_OWORD *)(v0 + 952) = 0u;
  *(_OWORD *)(v0 + 968) = 0u;
  *(void *)(v0 + 984) = 0;
  *(unsigned char *)(v0 + 992) = 26;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 3888) = v1;
  void *v1 = v0;
  v1[1] = sub_1004274EC;
  return sub_100560FFC(v0 + 928);
}

uint64_t sub_1004274EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 3896) = a1;
  *(void *)(v3 + 3904) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_10042761C, 0, 0);
}

uint64_t sub_10042761C()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 3456);
  uint64_t v2 = *(void *)(v0 + 3432);
  uint64_t v3 = *(void *)(v0 + 3416);
  uint64_t v4 = *(void *)(v0 + 3144);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 3440))(v2, *(unsigned int *)(v0 + 276), v3);
  char v5 = isFeatureEnabled(_:)();
  v1(v2, v3);
  uint64_t v7 = *(void *)(v4 + 48);
  uint64_t v6 = *(void *)(v4 + 56);
  if (v5)
  {
    *(void *)(v0 + 1576) = v7;
    *(void *)(v0 + 1584) = v6;
    *(_OWORD *)(v0 + 1592) = 0u;
    *(_OWORD *)(v0 + 1608) = 0u;
    *(_OWORD *)(v0 + 1624) = 0u;
    *(unsigned char *)(v0 + 1640) = 14;
    Swift::String v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 3912) = v8;
    *Swift::String v8 = v0;
    v8[1] = sub_1004277E8;
    uint64_t v9 = v0 + 1576;
  }
  else
  {
    *(void *)(v0 + 1000) = v7;
    *(void *)(v0 + 1008) = v6;
    *(_OWORD *)(v0 + 1016) = 0u;
    *(_OWORD *)(v0 + 1032) = 0u;
    *(_OWORD *)(v0 + 1048) = 0u;
    *(unsigned char *)(v0 + 1064) = 11;
    unint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 4000) = v10;
    void *v10 = v0;
    v10[1] = sub_100428F58;
    uint64_t v9 = v0 + 1000;
  }
  return sub_100560FFC(v9);
}

uint64_t sub_1004277E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[333] = v2;
  v3[334] = a1;
  v3[335] = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_10042791C, 0, 0);
}

uint64_t sub_10042791C()
{
  uint64_t v1 = *(void *)(v0 + 3744);
  uint64_t v2 = *(void *)(v0 + 3736);
  uint64_t v3 = *(uint64_t **)(v0 + 3144);
  uint64_t v4 = *(void *)(v0 + 3152);
  uint64_t v6 = *v3;
  uint64_t v5 = v3[1];
  *(void *)(v0 + 3920) = v5;
  uint64_t v7 = (uint64_t *)((char *)v3 + *(int *)(v4 + 20));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  *(void *)(v0 + 3928) = v9;
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  *(void *)(v0 + 3936) = v11;
  *(void *)(v0 + 1648) = v6;
  *(void *)(v0 + 1656) = v5;
  *(void *)(v0 + 1664) = v8;
  *(void *)(v0 + 1672) = v9;
  *(void *)(v0 + 1680) = v10;
  *(void *)(v0 + 1688) = v11;
  *(void *)(v0 + 1696) = v2;
  *(void *)(v0 + 1704) = v1;
  *(unsigned char *)(v0 + 1712) = 15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 3944) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_100427A64;
  return sub_100560FFC(v0 + 1648);
}

uint64_t sub_100427A64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[336] = v2;
  v3[337] = a1;
  v3[338] = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100427C18, 0, 0);
}

uint64_t sub_100427C18()
{
  *(void *)(v0 + 1720) = 26;
  *(_OWORD *)(v0 + 1728) = 0u;
  *(_OWORD *)(v0 + 1744) = 0u;
  *(_OWORD *)(v0 + 1760) = 0u;
  *(void *)(v0 + 1776) = 0;
  *(unsigned char *)(v0 + 1784) = 26;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 3952) = v1;
  void *v1 = v0;
  v1[1] = sub_100427D04;
  return sub_100560FFC(v0 + 1720);
}

uint64_t sub_100427D04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[339] = v2;
  v3[340] = a1;
  v3[341] = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100427E38, 0, 0);
}

uint64_t sub_100427E38()
{
  int v1 = *(unsigned __int8 *)(*(void *)(v0 + 3144) + *(int *)(*(void *)(v0 + 3152) + 48));
  *(unsigned char *)(v0 + 346) = v1;
  BOOL v2 = v1 == 0;
  uint64_t v3 = 27;
  if (!v2) {
    uint64_t v3 = 28;
  }
  *(void *)(v0 + 1792) = v3;
  *(_OWORD *)(v0 + 1800) = 0u;
  *(_OWORD *)(v0 + 1816) = 0u;
  *(_OWORD *)(v0 + 1832) = 0u;
  *(void *)(v0 + 1848) = 0;
  *(unsigned char *)(v0 + 1856) = 26;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 3960) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100427F40;
  return sub_100560FFC(v0 + 1792);
}

uint64_t sub_100427F40(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  *(void *)(v5 + 2736) = v2;
  *(void *)(v5 + 2744) = a1;
  *(void *)(v5 + 2752) = a2;
  if (*(unsigned char *)(v5 + 346)) {
    uint64_t v3 = 28;
  }
  else {
    uint64_t v3 = 27;
  }
  swift_task_dealloc();
  sub_10019C9FC(v3, 0, 0, 0, 0, 0, 0, 0, 26);
  return _swift_task_switch(sub_1004280B0, 0, 0);
}

uint64_t sub_1004280B0()
{
  *(void *)(v0 + 1864) = 29;
  *(_OWORD *)(v0 + 1872) = 0u;
  *(_OWORD *)(v0 + 1888) = 0u;
  *(_OWORD *)(v0 + 1904) = 0u;
  *(void *)(v0 + 1920) = 0;
  *(unsigned char *)(v0 + 1928) = 26;
  int v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 3968) = v1;
  void *v1 = v0;
  v1[1] = sub_1004281A0;
  return sub_100560FFC(v0 + 1864);
}

uint64_t sub_1004281A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[345] = v2;
  v3[346] = a1;
  v3[347] = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_1004282D4, 0, 0);
}

uint64_t sub_1004282D4()
{
  *(void *)(v0 + 1936) = 30;
  *(_OWORD *)(v0 + 1944) = 0u;
  *(_OWORD *)(v0 + 1960) = 0u;
  *(_OWORD *)(v0 + 1976) = 0u;
  *(void *)(v0 + 1992) = 0;
  *(unsigned char *)(v0 + 2000) = 26;
  int v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 3976) = v1;
  void *v1 = v0;
  v1[1] = sub_1004283C4;
  return sub_100560FFC(v0 + 1936);
}

uint64_t sub_1004283C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[348] = v2;
  v3[349] = a1;
  v3[350] = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_1004284F8, 0, 0);
}

uint64_t sub_1004284F8()
{
  *(void *)(v0 + 2008) = 31;
  *(_OWORD *)(v0 + 2016) = 0u;
  *(_OWORD *)(v0 + 2032) = 0u;
  *(_OWORD *)(v0 + 2048) = 0u;
  *(void *)(v0 + 2064) = 0;
  *(unsigned char *)(v0 + 2072) = 26;
  int v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 3984) = v1;
  void *v1 = v0;
  v1[1] = sub_1004285E8;
  return sub_100560FFC(v0 + 2008);
}

uint64_t sub_1004285E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[351] = v2;
  v3[352] = a1;
  v3[353] = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_10042871C, 0, 0);
}

uint64_t sub_10042871C()
{
  *(void *)(v0 + 2080) = 32;
  *(_OWORD *)(v0 + 2088) = 0u;
  *(_OWORD *)(v0 + 2104) = 0u;
  *(_OWORD *)(v0 + 2120) = 0u;
  *(void *)(v0 + 2136) = 0;
  *(unsigned char *)(v0 + 2144) = 26;
  int v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 3992) = v1;
  void *v1 = v0;
  v1[1] = sub_10042880C;
  return sub_100560FFC(v0 + 2080);
}

uint64_t sub_10042880C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[354] = v2;
  v3[355] = a1;
  v3[356] = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100428940, 0, 0);
}

uint64_t sub_100428940()
{
  long long v42 = *(_OWORD *)(v0 + 2816);
  long long v43 = *(_OWORD *)(v0 + 2840);
  long long v40 = *(_OWORD *)(v0 + 2768);
  long long v41 = *(_OWORD *)(v0 + 2792);
  uint64_t v1 = *(void *)(v0 + 3904);
  uint64_t v2 = *(void *)(v0 + 3896);
  long long v37 = *(_OWORD *)(v0 + 3848);
  long long v38 = *(_OWORD *)(v0 + 3872);
  long long v36 = *(_OWORD *)(v0 + 3824);
  uint64_t v3 = *(void *)(v0 + 3808);
  uint64_t v4 = *(void *)(v0 + 3800);
  long long v39 = *(_OWORD *)(v0 + 3776);
  long long v35 = *(_OWORD *)(v0 + 3752);
  uint64_t v45 = *(void *)(v0 + 3696);
  uint64_t v5 = *(void **)(v0 + 3144);
  uint64_t v7 = v5[4];
  uint64_t v6 = v5[5];
  uint64_t v8 = v5[6];
  uint64_t v9 = v5[7];
  id v34 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v32 = v8;
  uint64_t v33 = v9;
  uint64_t v30 = v7;
  uint64_t v31 = v6;
  uint64_t v29 = v4;
  DeveloperApprovalSheetContext.init(title:body:firstBulletTitle:firstBulletBody:secondBulletTitle:secondBulletBody:thirdBulletTitle:thirdBulletBody:allowButtonText:ignoreButtonText:developerID:developerName:supportURL:passcodeTitle:passcodeReason:touchIDTitle:touchIDReason:)();
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  sub_10042C668(&qword_100663270, (void (*)(uint64_t))&type metadata accessor for DeveloperApprovalSheetContext);
  uint64_t v10 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  *(void *)(v0 + 4088) = v10;
  *(void *)(v0 + 4096) = v11;
  if (v45)
  {
    uint64_t v12 = *(void **)(v0 + 3656);
    (*(void (**)(void, void))(*(void *)(v0 + 3288) + 8))(*(void *)(v0 + 3296), *(void *)(v0 + 3280));

    swift_release();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v13 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v13(1);
  }
  else
  {
    uint64_t v15 = v10;
    unint64_t v16 = v11;
    char v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 3440);
    uint64_t v18 = *(unsigned int *)(v0 + 276);
    uint64_t v19 = *(void *)(v0 + 3432);
    uint64_t v20 = *(void *)(v0 + 3416);
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v0 + 3456);
    swift_release();
    id v21 = objc_msgSend(objc_allocWithZone((Class)FLFollowUpItem), "init", v40, v41, v42, v43, v39, v29, v3, v30, v31, v32, v33, v35, v36, v37, v38, v2, v1);
    *(void *)(v0 + 4104) = v21;
    sub_1000172F8(&qword_10065E588);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1005A3EC0;
    *(void *)(v0 + 3096) = 0xD000000000000010;
    *(void *)(v0 + 3104) = 0x80000001005BF780;
    AnyHashable.init<A>(_:)();
    *(void *)(v22 + 96) = &type metadata for Data;
    *(void *)(v22 + 72) = v15;
    *(void *)(v22 + 80) = v16;
    sub_100012670(v15, v16);
    sub_10044B8D0(v22);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v21 setUserInfo:isa];

    v17(v19, v18, v20);
    LOBYTE(v18) = isFeatureEnabled(_:)();
    v44(v19, v20);
    uint64_t v25 = v34[6];
    uint64_t v24 = v34[7];
    if (v18)
    {
      *(void *)(v0 + 2224) = v25;
      *(void *)(v0 + 2232) = v24;
      *(_OWORD *)(v0 + 2240) = 0u;
      *(_OWORD *)(v0 + 2256) = 0u;
      *(_OWORD *)(v0 + 2272) = 0u;
      *(unsigned char *)(v0 + 2288) = 13;
      uint64_t v26 = (void *)swift_task_alloc();
      *(void *)(v0 + 4112) = v26;
      *uint64_t v26 = v0;
      v26[1] = sub_10042A678;
      uint64_t v27 = v0 + 2224;
    }
    else
    {
      *(void *)(v0 + 2152) = v25;
      *(void *)(v0 + 2160) = v24;
      *(_OWORD *)(v0 + 2168) = 0u;
      *(_OWORD *)(v0 + 2184) = 0u;
      *(_OWORD *)(v0 + 2200) = 0u;
      *(unsigned char *)(v0 + 2216) = 10;
      unint64_t v28 = (void *)swift_task_alloc();
      *(void *)(v0 + 4120) = v28;
      void *v28 = v0;
      v28[1] = sub_10042A8AC;
      uint64_t v27 = v0 + 2152;
    }
    return sub_100560FFC(v27);
  }
}

uint64_t sub_100428F58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[357] = v2;
  v3[358] = a1;
  v3[359] = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_10042908C, 0, 0);
}

uint64_t sub_10042908C()
{
  uint64_t v1 = *(void *)(v0 + 3744);
  uint64_t v2 = *(void *)(v0 + 3736);
  uint64_t v3 = *(uint64_t **)(v0 + 3144);
  uint64_t v4 = *(void *)(v0 + 3152);
  uint64_t v6 = *v3;
  uint64_t v5 = v3[1];
  *(void *)(v0 + 4008) = v5;
  uint64_t v7 = (uint64_t *)((char *)v3 + *(int *)(v4 + 20));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  *(void *)(v0 + 4016) = v9;
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  *(void *)(v0 + 4024) = v11;
  *(void *)(v0 + 1072) = v6;
  *(void *)(v0 + 1080) = v5;
  *(void *)(v0 + 1088) = v8;
  *(void *)(v0 + 1096) = v9;
  *(void *)(v0 + 1104) = v10;
  *(void *)(v0 + 1112) = v11;
  *(void *)(v0 + 1120) = v2;
  *(void *)(v0 + 1128) = v1;
  *(unsigned char *)(v0 + 1136) = 12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 4032) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1004291D4;
  return sub_100560FFC(v0 + 1072);
}

uint64_t sub_1004291D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[360] = v2;
  v3[361] = a1;
  v3[362] = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100429388, 0, 0);
}

uint64_t sub_100429388()
{
  *(void *)(v0 + 1144) = 20;
  *(_OWORD *)(v0 + 1152) = 0u;
  *(_OWORD *)(v0 + 1168) = 0u;
  *(_OWORD *)(v0 + 1184) = 0u;
  *(void *)(v0 + 1200) = 0;
  *(unsigned char *)(v0 + 1208) = 26;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 4040) = v1;
  void *v1 = v0;
  v1[1] = sub_100429478;
  return sub_100560FFC(v0 + 1144);
}

uint64_t sub_100429478(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[363] = v2;
  v3[364] = a1;
  v3[365] = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_1004295AC, 0, 0);
}

uint64_t sub_1004295AC()
{
  *(void *)(v0 + 1216) = 21;
  *(_OWORD *)(v0 + 1224) = 0u;
  *(_OWORD *)(v0 + 1240) = 0u;
  *(_OWORD *)(v0 + 1256) = 0u;
  *(void *)(v0 + 1272) = 0;
  *(unsigned char *)(v0 + 1280) = 26;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 4048) = v1;
  void *v1 = v0;
  v1[1] = sub_10042969C;
  return sub_100560FFC(v0 + 1216);
}

uint64_t sub_10042969C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[366] = v2;
  v3[367] = a1;
  v3[368] = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_1004297D0, 0, 0);
}

uint64_t sub_1004297D0()
{
  *(void *)(v0 + 1288) = 22;
  *(_OWORD *)(v0 + 1296) = 0u;
  *(_OWORD *)(v0 + 1312) = 0u;
  *(_OWORD *)(v0 + 1328) = 0u;
  *(void *)(v0 + 1344) = 0;
  *(unsigned char *)(v0 + 1352) = 26;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 4056) = v1;
  void *v1 = v0;
  v1[1] = sub_1004298C0;
  return sub_100560FFC(v0 + 1288);
}

uint64_t sub_1004298C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[369] = v2;
  v3[370] = a1;
  v3[371] = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_1004299F4, 0, 0);
}

uint64_t sub_1004299F4()
{
  *(void *)(v0 + 1360) = 23;
  *(_OWORD *)(v0 + 1368) = 0u;
  *(_OWORD *)(v0 + 1384) = 0u;
  *(_OWORD *)(v0 + 1400) = 0u;
  *(void *)(v0 + 1416) = 0;
  *(unsigned char *)(v0 + 1424) = 26;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 4064) = v1;
  void *v1 = v0;
  v1[1] = sub_100429AE4;
  return sub_100560FFC(v0 + 1360);
}

uint64_t sub_100429AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[372] = v2;
  v3[373] = a1;
  v3[374] = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100429C18, 0, 0);
}

uint64_t sub_100429C18()
{
  *(void *)(v0 + 1432) = 24;
  *(_OWORD *)(v0 + 1440) = 0u;
  *(_OWORD *)(v0 + 1456) = 0u;
  *(_OWORD *)(v0 + 1472) = 0u;
  *(void *)(v0 + 1488) = 0;
  *(unsigned char *)(v0 + 1496) = 26;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 4072) = v1;
  void *v1 = v0;
  v1[1] = sub_100429D08;
  return sub_100560FFC(v0 + 1432);
}

uint64_t sub_100429D08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[375] = v2;
  v3[376] = a1;
  v3[377] = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100429E3C, 0, 0);
}

uint64_t sub_100429E3C()
{
  *(void *)(v0 + 1504) = 25;
  *(_OWORD *)(v0 + 1512) = 0u;
  *(_OWORD *)(v0 + 1528) = 0u;
  *(_OWORD *)(v0 + 1544) = 0u;
  *(void *)(v0 + 1560) = 0;
  *(unsigned char *)(v0 + 1568) = 26;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 4080) = v1;
  void *v1 = v0;
  v1[1] = sub_100429F2C;
  return sub_100560FFC(v0 + 1504);
}

uint64_t sub_100429F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[378] = v2;
  v3[379] = a1;
  v3[380] = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_10042A060, 0, 0);
}

uint64_t sub_10042A060()
{
  long long v42 = *(_OWORD *)(v0 + 3008);
  long long v43 = *(_OWORD *)(v0 + 3032);
  long long v40 = *(_OWORD *)(v0 + 2960);
  long long v41 = *(_OWORD *)(v0 + 2984);
  uint64_t v1 = *(void *)(v0 + 3904);
  uint64_t v2 = *(void *)(v0 + 3896);
  long long v37 = *(_OWORD *)(v0 + 3848);
  long long v38 = *(_OWORD *)(v0 + 3872);
  long long v36 = *(_OWORD *)(v0 + 3824);
  uint64_t v3 = *(void *)(v0 + 3808);
  uint64_t v4 = *(void *)(v0 + 3800);
  long long v39 = *(_OWORD *)(v0 + 3776);
  long long v35 = *(_OWORD *)(v0 + 3752);
  uint64_t v45 = *(void *)(v0 + 3696);
  uint64_t v5 = *(void **)(v0 + 3144);
  uint64_t v7 = v5[4];
  uint64_t v6 = v5[5];
  uint64_t v8 = v5[6];
  uint64_t v9 = v5[7];
  id v34 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v32 = v8;
  uint64_t v33 = v9;
  uint64_t v30 = v7;
  uint64_t v31 = v6;
  uint64_t v29 = v4;
  DeveloperApprovalSheetContext.init(title:body:firstBulletTitle:firstBulletBody:secondBulletTitle:secondBulletBody:thirdBulletTitle:thirdBulletBody:allowButtonText:ignoreButtonText:developerID:developerName:supportURL:passcodeTitle:passcodeReason:touchIDTitle:touchIDReason:)();
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  sub_10042C668(&qword_100663270, (void (*)(uint64_t))&type metadata accessor for DeveloperApprovalSheetContext);
  uint64_t v10 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  *(void *)(v0 + 4088) = v10;
  *(void *)(v0 + 4096) = v11;
  if (v45)
  {
    uint64_t v12 = *(void **)(v0 + 3656);
    (*(void (**)(void, void))(*(void *)(v0 + 3288) + 8))(*(void *)(v0 + 3296), *(void *)(v0 + 3280));

    swift_release();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v13 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v13(1);
  }
  else
  {
    uint64_t v15 = v10;
    unint64_t v16 = v11;
    char v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 3440);
    uint64_t v18 = *(unsigned int *)(v0 + 276);
    uint64_t v19 = *(void *)(v0 + 3432);
    uint64_t v20 = *(void *)(v0 + 3416);
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v0 + 3456);
    swift_release();
    id v21 = objc_msgSend(objc_allocWithZone((Class)FLFollowUpItem), "init", v40, v41, v42, v43, v39, v29, v3, v30, v31, v32, v33, v35, v36, v37, v38, v2, v1);
    *(void *)(v0 + 4104) = v21;
    sub_1000172F8(&qword_10065E588);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1005A3EC0;
    *(void *)(v0 + 3096) = 0xD000000000000010;
    *(void *)(v0 + 3104) = 0x80000001005BF780;
    AnyHashable.init<A>(_:)();
    *(void *)(v22 + 96) = &type metadata for Data;
    *(void *)(v22 + 72) = v15;
    *(void *)(v22 + 80) = v16;
    sub_100012670(v15, v16);
    sub_10044B8D0(v22);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v21 setUserInfo:isa];

    v17(v19, v18, v20);
    LOBYTE(v18) = isFeatureEnabled(_:)();
    v44(v19, v20);
    uint64_t v25 = v34[6];
    uint64_t v24 = v34[7];
    if (v18)
    {
      *(void *)(v0 + 2224) = v25;
      *(void *)(v0 + 2232) = v24;
      *(_OWORD *)(v0 + 2240) = 0u;
      *(_OWORD *)(v0 + 2256) = 0u;
      *(_OWORD *)(v0 + 2272) = 0u;
      *(unsigned char *)(v0 + 2288) = 13;
      uint64_t v26 = (void *)swift_task_alloc();
      *(void *)(v0 + 4112) = v26;
      *uint64_t v26 = v0;
      v26[1] = sub_10042A678;
      uint64_t v27 = v0 + 2224;
    }
    else
    {
      *(void *)(v0 + 2152) = v25;
      *(void *)(v0 + 2160) = v24;
      *(_OWORD *)(v0 + 2168) = 0u;
      *(_OWORD *)(v0 + 2184) = 0u;
      *(_OWORD *)(v0 + 2200) = 0u;
      *(unsigned char *)(v0 + 2216) = 10;
      unint64_t v28 = (void *)swift_task_alloc();
      *(void *)(v0 + 4120) = v28;
      void *v28 = v0;
      v28[1] = sub_10042A8AC;
      uint64_t v27 = v0 + 2152;
    }
    return sub_100560FFC(v27);
  }
}

uint64_t sub_10042A678(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[381] = v2;
  v3[382] = a1;
  v3[383] = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_10042A7AC, 0, 0);
}

uint64_t sub_10042A7AC()
{
  uint64_t v1 = *(void *)(v0 + 3056);
  *(void *)(v0 + 4128) = *(void *)(v0 + 3064);
  *(void *)(v0 + 4136) = v1;
  *(void *)(v0 + 2296) = 33;
  *(void *)(v0 + 2352) = 0;
  *(_OWORD *)(v0 + 2336) = 0u;
  *(_OWORD *)(v0 + 2320) = 0u;
  *(_OWORD *)(v0 + 2304) = 0u;
  *(unsigned char *)(v0 + 2360) = 26;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 4144) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10042AAE0;
  return sub_100560FFC(v0 + 2296);
}

uint64_t sub_10042A8AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[384] = v2;
  v3[385] = a1;
  v3[386] = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_10042A9E0, 0, 0);
}

uint64_t sub_10042A9E0()
{
  uint64_t v1 = *(void *)(v0 + 3080);
  *(void *)(v0 + 4128) = *(void *)(v0 + 3088);
  *(void *)(v0 + 4136) = v1;
  *(void *)(v0 + 2296) = 33;
  *(void *)(v0 + 2352) = 0;
  *(_OWORD *)(v0 + 2336) = 0u;
  *(_OWORD *)(v0 + 2320) = 0u;
  *(_OWORD *)(v0 + 2304) = 0u;
  *(unsigned char *)(v0 + 2360) = 26;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 4144) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10042AAE0;
  return sub_100560FFC(v0 + 2296);
}

uint64_t sub_10042AAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 4152) = a1;
  *(void *)(v3 + 4160) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_10042AC10, 0, 0);
}

uint64_t sub_10042AC10()
{
  uint64_t v1 = *(void *)(v0 + 3392);
  uint64_t v2 = *(void *)(v0 + 3384);
  uint64_t v3 = *(void *)(v0 + 3352);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56))(v3, 1, 1, v2);
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 3392);
    uint64_t v8 = *(void *)(v0 + 3384);
    uint64_t v9 = *(void *)(v0 + 3352);
    URL._bridgeToObjectiveC()(v5);
    uint64_t v6 = v10;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v8);
  }
  id v11 = [self actionWithLabel:v4 url:v6];
  *(void *)(v0 + 4168) = v11;

  if (!v11)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v75 = v0 + 2560;
  uint64_t v12 = *(void **)(v0 + 4104);
  uint64_t v66 = *(void *)(v0 + 3256);
  uint64_t v68 = *(void *)(v0 + 3232);
  uint64_t v70 = *(void *)(v0 + 3272);
  uint64_t v13 = *(void *)(v0 + 3224);
  uint64_t v76 = v13;
  uint64_t v77 = *(void *)(v0 + 3248);
  uint64_t v14 = *(void *)(v0 + 3216);
  uint64_t v15 = *(void *)(v0 + 3208);
  uint64_t v78 = *(void *)(v0 + 3200);
  uint64_t v71 = *(void *)(v0 + 3192);
  uint64_t v72 = *(void *)(v0 + 3240);
  sub_1000172F8((uint64_t *)&unk_100660E90);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1005A55B0;
  *(void *)(v16 + 32) = v11;
  specialized Array._endMutation()();
  sub_10018B1DC(0, &qword_100663278);
  id v63 = v11;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v12 setActions:isa];

  [v12 setDisplayStyle:18];
  NSString v18 = String._bridgeToObjectiveC()();
  [v12 setExtensionIdentifier:v18];

  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 setTitle:v19];

  NSString v20 = String._bridgeToObjectiveC()();
  [v12 setTypeIdentifier:v20];

  NSString v21 = String._bridgeToObjectiveC()();
  [v12 setUniqueIdentifier:v21];

  static Calendar.current.getter();
  uint64_t v22 = v68;
  uint64_t v65 = *(void (**)(uint64_t, void, uint64_t))(v13 + 104);
  v65(v68, enum case for Calendar.Component.minute(_:), v14);
  Date.init()();
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  Swift::Int v23 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
  v23(v15, v71);
  uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
  v69(v22, v14);
  uint64_t v24 = v66;
  unint64_t v67 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
  v67(v24, v72);
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
  Class v26 = 0;
  if (v25(v70, 1, v71) != 1)
  {
    uint64_t v27 = *(void *)(v0 + 3272);
    uint64_t v28 = *(void *)(v0 + 3192);
    Class v26 = Date._bridgeToObjectiveC()().super.isa;
    v23(v27, v28);
  }
  id v73 = v23;
  uint64_t v29 = *(void **)(v0 + 4104);
  objc_msgSend(v29, "setExpirationDate:", v26, v63);

  uint64_t v30 = (void *)FLUserInfoPropertyDontDisplayDate;
  *(void *)(v0 + 3136) = FLUserInfoPropertyDontDisplayDate;
  type metadata accessor for FLUserInfoProperty(0);
  sub_10042C668(&qword_10065B480, type metadata accessor for FLUserInfoProperty);
  id v31 = v30;
  AnyHashable.init<A>(_:)();
  *(void *)(v0 + 2656) = &type metadata for Bool;
  *(unsigned char *)(v0 + 2632) = 1;
  id v32 = [v29 userInfo];
  if (!v32) {
LABEL_24:
  }
    __break(1u);
  uint64_t v33 = v32;
  uint64_t v34 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  sub_1001C5DD4((_OWORD *)(v0 + 2632), (_OWORD *)(v0 + 2600));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100529A40((_OWORD *)(v0 + 2600), v75, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_10025C22C(v75);
  if (v34)
  {
    v36.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v36.super.Class isa = 0;
  }
  [*(id *)(v0 + 4104) setUserInfo:v36.super.isa];

  id v37 = [objc_allocWithZone((Class)NSUserDefaults) init];
  *(void *)(v0 + 4176) = v37;
  NSString v38 = String._bridgeToObjectiveC()();
  uint64_t v39 = (uint64_t)[v37 integerForKey:v38];

  if (v39 >= 1)
  {
    Class v74 = v25;
    uint64_t v40 = *(void *)(v0 + 3264);
    uint64_t v41 = *(void *)(v0 + 3256);
    uint64_t v42 = *(void *)(v0 + 3240);
    uint64_t v43 = *(void *)(v0 + 3232);
    uint64_t v44 = *(void *)(v0 + 3216);
    uint64_t v45 = *(void *)(v0 + 3208);
    uint64_t v46 = *(void *)(v0 + 3192);
    static Calendar.current.getter();
    v65(v43, enum case for Calendar.Component.second(_:), v44);
    Date.init()();
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    v73(v45, v46);
    v69(v43, v44);
    v67(v41, v42);
    if (v74(v40, 1, v46) == 1)
    {
      Class v47 = 0;
    }
    else
    {
      uint64_t v48 = *(void *)(v0 + 3264);
      uint64_t v49 = *(void *)(v0 + 3192);
      Class v47 = Date._bridgeToObjectiveC()().super.isa;
      v73(v48, v49);
    }
    [*(id *)(v0 + 4104) setExpirationDate:v47];
  }
  uint64_t v50 = *(void **)(v0 + 3656);
  if (v50)
  {
    uint64_t v51 = *(void **)(v0 + 4104);
    uint64_t v52 = *(void *)(v0 + 3320);
    uint64_t v53 = *(void *)(v0 + 3312);
    uint64_t v54 = *(void *)(v0 + 3304);
    *(void *)(v0 + 80) = v0;
    *(void *)(v0 + 120) = v0 + 274;
    *(void *)(v0 + 88) = sub_10042B680;
    swift_continuation_init();
    *(void *)(v0 + 2552) = v54;
    unint64_t v55 = sub_10019CE94((uint64_t *)(v0 + 2528));
    id v56 = v50;
    id v57 = v51;
    sub_1000172F8(&qword_10065B260);
    CheckedContinuation.init(continuation:function:)();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v53 + 32))(v55, v52, v54);
    *(void *)(v0 + 2496) = _NSConcreteStackBlock;
    *(void *)(v0 + 2504) = 1107296256;
    *(void *)(v0 + 2512) = sub_10042C510;
    *(void *)(v0 + 2520) = &unk_1006465D8;
    [v56 postFollowUpItem:v57 completion:v0 + 2496];
    return _swift_continuation_await(v0 + 80);
  }
  else
  {
    uint64_t v58 = *(void **)(v0 + 4104);
    unint64_t v59 = *(void *)(v0 + 4096);
    uint64_t v60 = *(void *)(v0 + 4088);
    (*(void (**)(void, void))(*(void *)(v0 + 3288) + 8))(*(void *)(v0 + 3296), *(void *)(v0 + 3280));
    sub_100013510(v60, v59);

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v61 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v61(1);
  }
}

uint64_t sub_10042B680()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 4184) = v1;
  if (v1) {
    uint64_t v2 = sub_10042C208;
  }
  else {
    uint64_t v2 = sub_10042B7BC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10042B7BC()
{
  uint64_t v1 = *(void **)(v0 + 4168);
  uint64_t v2 = *(void **)(v0 + 4104);
  unint64_t v3 = *(void *)(v0 + 4096);
  uint64_t v4 = *(void *)(v0 + 4088);
  uint64_t v5 = *(void **)(v0 + 3656);
  uint64_t v6 = *(void *)(v0 + 3296);
  uint64_t v7 = *(void *)(v0 + 3288);
  uint64_t v8 = *(void *)(v0 + 3280);

  sub_100013510(v4, v3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v9(1);
}

uint64_t sub_10042B9AC()
{
  uint64_t v1 = *(void **)(v0 + 3640);
  uint64_t v2 = *(void **)(v0 + 3632);
  uint64_t v3 = *(void *)(v0 + 3400);
  uint64_t v4 = *(void *)(v0 + 3392);
  uint64_t v5 = *(void *)(v0 + 3384);
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);

  id v6 = objc_allocWithZone((Class)FLFollowUpController);
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v6 initWithClientIdentifier:v7];
  *(void *)(v0 + 3656) = v8;

  if (!v8) {
    goto LABEL_7;
  }
  *(void *)(v0 + 3120) = 0;
  id v9 = [v8 pendingFollowUpItems:v0 + 3120];
  uint64_t v10 = *(void **)(v0 + 3120);
  if (!v9)
  {
    id v19 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
LABEL_7:
    unint64_t v16 = 0;
    goto LABEL_8;
  }
  uint64_t v11 = v9;
  uint64_t v12 = *(void *)(v0 + 3144);
  sub_10018B1DC(0, &qword_100663280);
  unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v14 = v10;

  uint64_t v15 = (void *)swift_task_alloc();
  v15[2] = v12;
  swift_bridgeObjectRetain();
  unint64_t v16 = (unint64_t)sub_100423C24(sub_10042C6B8, v15, v13);
  *(void *)(v0 + 3664) = v16;
  *(void *)(v0 + 3672) = 0;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v17 < 2) {
      goto LABEL_5;
    }
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v23 = swift_bridgeObjectRelease();
    if (v22 < 0)
    {
      __break(1u);
      return _swift_continuation_await(v23);
    }
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v24 = v17 - 1;
    if (v18 < v24)
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
    }
    if ((v16 & 0xC000000000000001) != 0)
    {
      Swift::Int v25 = 0;
      do
      {
        Swift::Int v26 = v25 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v25);
        Swift::Int v25 = v26;
      }
      while (v24 != v26);
    }
    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.subscript.getter();
      uint64_t v28 = v29;
      uint64_t v27 = v30;
      unint64_t v32 = v31;
      swift_bridgeObjectRelease_n();
      uint64_t v24 = v32 >> 1;
    }
    else
    {
      uint64_t v27 = 0;
      uint64_t v28 = (v16 & 0xFFFFFFFFFFFFFF8) + 32;
    }
    uint64_t v33 = v24 - v27;
    if (__OFSUB__(v24, v27)) {
      goto LABEL_40;
    }
    uint64_t v52 = v8;
    if (v33)
    {
      sub_100455CD8(0, v33 & ~(v33 >> 63), 0);
      if (v33 < 0) {
        goto LABEL_41;
      }
      if (v27 <= v24) {
        uint64_t v34 = v24;
      }
      else {
        uint64_t v34 = v27;
      }
      uint64_t v35 = v34 - v27;
      NSDictionary v36 = (id *)(v28 + 8 * v27);
      while (v35)
      {
        id v37 = *v36;
        id v38 = [v37 uniqueIdentifier];
        if (v38)
        {
          uint64_t v39 = v38;
          uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v42 = v41;
        }
        else
        {

          uint64_t v40 = 0;
          uint64_t v42 = 0;
        }
        unint64_t v44 = _swiftEmptyArrayStorage[2];
        unint64_t v43 = _swiftEmptyArrayStorage[3];
        if (v44 >= v43 >> 1) {
          sub_100455CD8(v43 > 1, v44 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v44 + 1;
        uint64_t v45 = &_swiftEmptyArrayStorage[2 * v44];
        v45[4] = v40;
        v45[5] = v42;
        --v35;
        ++v36;
        if (!--v33) {
          goto LABEL_35;
        }
      }
      __break(1u);
      goto LABEL_39;
    }
LABEL_35:
    swift_unknownObjectRelease();
    uint64_t v46 = *(void *)(v0 + 3320);
    uint64_t v47 = *(void *)(v0 + 3312);
    uint64_t v48 = *(void *)(v0 + 3304);
    id v49 = v52;
    sub_10043B090((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    *(void *)(v0 + 3680) = isa;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 144) = v0;
    *(void *)(v0 + 184) = v0 + 273;
    *(void *)(v0 + 152) = sub_100426530;
    swift_continuation_init();
    *(void *)(v0 + 2488) = v48;
    uint64_t v51 = sub_10019CE94((uint64_t *)(v0 + 2464));
    sub_1000172F8(&qword_10065B260);
    CheckedContinuation.init(continuation:function:)();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v47 + 32))(v51, v46, v48);
    *(void *)(v0 + 2432) = _NSConcreteStackBlock;
    *(void *)(v0 + 2440) = 1107296256;
    *(void *)(v0 + 2448) = sub_10042C510;
    *(void *)(v0 + 2456) = &unk_100646600;
    [v49 clearPendingFollowUpItemsWithUniqueIdentifiers:isa completion:v0 + 2432];
    uint64_t v23 = v0 + 144;
    return _swift_continuation_await(v23);
  }
  uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v18 = v17;
  if ((unint64_t)v17 >= 2) {
    goto LABEL_14;
  }
LABEL_5:
  swift_bridgeObjectRelease();
LABEL_8:
  *(void *)(v0 + 3704) = v16;
  *(void *)(v0 + 3696) = 0;
  *(void *)(v0 + 496) = 3;
  *(_OWORD *)(v0 + 504) = 0u;
  *(_OWORD *)(v0 + 520) = 0u;
  *(_OWORD *)(v0 + 536) = 0u;
  *(void *)(v0 + 552) = 0;
  *(unsigned char *)(v0 + 560) = 26;
  NSString v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 3712) = v20;
  *NSString v20 = v0;
  v20[1] = sub_10042677C;
  return sub_100560FFC(v0 + 496);
}

uint64_t sub_10042C050()
{
  uint64_t v1 = (void *)v0[460];
  uint64_t v2 = (void *)v0[457];
  swift_willThrow();

  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  return v3(1);
}

uint64_t sub_10042C208()
{
  uint64_t v1 = (void *)v0[522];
  uint64_t v2 = (void *)v0[521];
  uint64_t v3 = (void *)v0[513];
  unint64_t v4 = v0[512];
  uint64_t v5 = v0[511];
  id v6 = (void *)v0[457];
  uint64_t v11 = v0[412];
  uint64_t v7 = v0[411];
  uint64_t v10 = v0[410];
  swift_willThrow();

  sub_100013510(v5, v4);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v10);

  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v8 = (uint64_t (*)(uint64_t))v0[1];
  return v8(1);
}

uint64_t type metadata accessor for EnsureAllowedDeveloperTask()
{
  uint64_t result = qword_1006632E0;
  if (!qword_1006632E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10042C45C(id *a1, uint64_t a2)
{
  id v3 = [*a1 uniqueIdentifier];
  if (v3)
  {
    unint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    if (v5 == *(void *)(a2 + 32) && v7 == *(void *)(a2 + 40))
    {
      swift_bridgeObjectRelease();
      char v10 = 0;
    }
    else
    {
      char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      char v10 = v9 ^ 1;
    }
  }
  else
  {
    char v10 = 1;
  }
  return v10 & 1;
}

void sub_10042C510(uint64_t a1, uint64_t a2, void *a3)
{
  sub_10018AC60((void *)(a1 + 32), *(void *)(a1 + 56));
  if (a3)
  {
    id v4 = a3;
    sub_1000172F8(&qword_100662328);
    CheckedContinuation.resume(throwing:)();
  }
  else
  {
    sub_1000172F8(&qword_100662328);
    CheckedContinuation.resume(returning:)();
  }
}

uint64_t sub_10042C5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EnsureAllowedDeveloperTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10042C60C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EnsureAllowedDeveloperTask();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10042C668(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10042C6B0(uint64_t a1)
{
  return sub_100014524(a1 + 32);
}

uint64_t sub_10042C6B8(id *a1)
{
  return sub_10042C45C(a1, *(void *)(v1 + 16)) & 1;
}

void *sub_10042C6D8(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v11 = (int *)type metadata accessor for MediaAPIMetadata();
    uint64_t v12 = v11[7];
    __dst = (char *)v4 + v12;
    unint64_t v13 = (char *)a2 + v12;
    uint64_t v14 = type metadata accessor for URL();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v50(v13, 1, v14))
    {
      uint64_t v16 = sub_1000172F8(&qword_10065C3C0);
      memcpy(__dst, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    *((unsigned char *)v4 + v11[8]) = *((unsigned char *)a2 + v11[8]);
    uint64_t v18 = v11[9];
    id v19 = (char *)v4 + v18;
    NSString v20 = (char *)a2 + v18;
    *(void *)id v19 = *(void *)v20;
    v19[8] = v20[8];
    uint64_t v21 = v11[10];
    uint64_t v22 = (void *)((char *)v4 + v21);
    uint64_t v23 = (void *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = v11[11];
    Swift::Int v26 = (void *)((char *)v4 + v25);
    uint64_t v27 = (void *)((char *)a2 + v25);
    __dsta = (void *)v27[1];
    *Swift::Int v26 = *v27;
    v26[1] = __dsta;
    *(void *)((char *)v4 + v11[12]) = *(void *)((char *)a2 + v11[12]);
    *(void *)((char *)v4 + v11[13]) = *(void *)((char *)a2 + v11[13]);
    uint64_t v28 = v11[14];
    uint64_t v29 = (void *)((char *)v4 + v28);
    uint64_t v30 = (void *)((char *)a2 + v28);
    uint64_t v31 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v31;
    *(void *)((char *)v4 + v11[15]) = *(void *)((char *)a2 + v11[15]);
    uint64_t v32 = a3[5];
    uint64_t v33 = a3[6];
    uint64_t v34 = (void *)((char *)v4 + v32);
    uint64_t v35 = (void *)((char *)a2 + v32);
    uint64_t v36 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v36;
    id v37 = (void *)((char *)v4 + v33);
    id v38 = (void *)((char *)a2 + v33);
    uint64_t v39 = v38[1];
    void *v37 = *v38;
    v37[1] = v39;
    uint64_t v40 = a3[7];
    uint64_t v41 = a3[8];
    uint64_t v42 = (void *)((char *)v4 + v40);
    unint64_t v43 = (void *)((char *)a2 + v40);
    uint64_t v44 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v44;
    *(void *)((char *)v4 + v41) = *(void *)((char *)a2 + v41);
    uint64_t v45 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    uint64_t v46 = *(void **)((char *)a2 + v45);
    *(void *)((char *)v4 + v45) = v46;
    uint64_t v47 = a3[12];
    *(void *)((char *)v4 + a3[11]) = *(void *)((char *)a2 + a3[11]);
    *((unsigned char *)v4 + v47) = *((unsigned char *)a2 + v47);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    id v48 = v46;
  }
  swift_retain();
  return v4;
}

uint64_t sub_10042C9FC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for MediaAPIMetadata() + 28);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

void *sub_10042CB80(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = (int *)type metadata accessor for MediaAPIMetadata();
  uint64_t v10 = v9[7];
  __dst = (char *)a1 + v10;
  uint64_t v11 = (char *)a2 + v10;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v47(v11, 1, v12))
  {
    uint64_t v14 = sub_1000172F8(&qword_10065C3C0);
    memcpy(__dst, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  *((unsigned char *)a1 + v9[8]) = *((unsigned char *)a2 + v9[8]);
  uint64_t v15 = v9[9];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  uint64_t v18 = v9[10];
  id v19 = (void *)((char *)a1 + v18);
  NSString v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = v20[1];
  *id v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = v9[11];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  __dsta = (void *)v24[1];
  void *v23 = *v24;
  v23[1] = __dsta;
  *(void *)((char *)a1 + v9[12]) = *(void *)((char *)a2 + v9[12]);
  *(void *)((char *)a1 + v9[13]) = *(void *)((char *)a2 + v9[13]);
  uint64_t v25 = v9[14];
  Swift::Int v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v28 = v27[1];
  *Swift::Int v26 = *v27;
  v26[1] = v28;
  *(void *)((char *)a1 + v9[15]) = *(void *)((char *)a2 + v9[15]);
  uint64_t v29 = a3[5];
  uint64_t v30 = a3[6];
  uint64_t v31 = (void *)((char *)a1 + v29);
  uint64_t v32 = (void *)((char *)a2 + v29);
  uint64_t v33 = v32[1];
  void *v31 = *v32;
  v31[1] = v33;
  uint64_t v34 = (void *)((char *)a1 + v30);
  uint64_t v35 = (void *)((char *)a2 + v30);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = a3[7];
  uint64_t v38 = a3[8];
  uint64_t v39 = (void *)((char *)a1 + v37);
  uint64_t v40 = (void *)((char *)a2 + v37);
  uint64_t v41 = v40[1];
  *uint64_t v39 = *v40;
  v39[1] = v41;
  *(void *)((char *)a1 + v38) = *(void *)((char *)a2 + v38);
  uint64_t v42 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  unint64_t v43 = *(void **)((char *)a2 + v42);
  *(void *)((char *)a1 + v42) = v43;
  uint64_t v44 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *((unsigned char *)a1 + v44) = *((unsigned char *)a2 + v44);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v45 = v43;
  swift_retain();
  return a1;
}

void *sub_10042CE58(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for MediaAPIMetadata();
  uint64_t v6 = v5[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *((unsigned char *)a1 + v5[8]) = *((unsigned char *)a2 + v5[8]);
  uint64_t v15 = v5[9];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)uint64_t v16 = v18;
  uint64_t v19 = v5[10];
  NSString v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *NSString v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v5[11];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  void *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[12]) = *(void *)((char *)a2 + v5[12]);
  *(void *)((char *)a1 + v5[13]) = *(void *)((char *)a2 + v5[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = v5[14];
  Swift::Int v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  *Swift::Int v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[15]) = *(void *)((char *)a2 + v5[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[5];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[6];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[7];
  uint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (void *)((char *)a2 + v34);
  void *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_retain();
  swift_release();
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v37 = a3[10];
  uint64_t v38 = *(void **)((char *)a2 + v37);
  uint64_t v39 = *(void **)((char *)a1 + v37);
  *(void *)((char *)a1 + v37) = v38;
  id v40 = v38;

  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_retain();
  swift_release();
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  return a1;
}

_OWORD *sub_10042D24C(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = (int *)type metadata accessor for MediaAPIMetadata();
  uint64_t v9 = v8[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *((unsigned char *)a1 + v8[8]) = *((unsigned char *)a2 + v8[8]);
  uint64_t v15 = v8[9];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  *(_OWORD *)((char *)a1 + v8[10]) = *(_OWORD *)((char *)a2 + v8[10]);
  *(_OWORD *)((char *)a1 + v8[11]) = *(_OWORD *)((char *)a2 + v8[11]);
  *(void *)((char *)a1 + v8[12]) = *(void *)((char *)a2 + v8[12]);
  *(void *)((char *)a1 + v8[13]) = *(void *)((char *)a2 + v8[13]);
  *(_OWORD *)((char *)a1 + v8[14]) = *(_OWORD *)((char *)a2 + v8[14]);
  *(void *)((char *)a1 + v8[15]) = *(void *)((char *)a2 + v8[15]);
  uint64_t v18 = a3[6];
  *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
  *(_OWORD *)((char *)a1 + v18) = *(_OWORD *)((char *)a2 + v18);
  uint64_t v19 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
  uint64_t v20 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
  uint64_t v21 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *((unsigned char *)a1 + v21) = *((unsigned char *)a2 + v21);
  return a1;
}

void *sub_10042D444(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = (int *)type metadata accessor for MediaAPIMetadata();
  uint64_t v10 = v9[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_1000172F8(&qword_10065C3C0);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  *((unsigned char *)a1 + v9[8]) = *((unsigned char *)a2 + v9[8]);
  uint64_t v19 = v9[9];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  uint64_t v22 = v9[10];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  void *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = v9[11];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  void *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v9[12]) = *(void *)((char *)a2 + v9[12]);
  *(void *)((char *)a1 + v9[13]) = *(void *)((char *)a2 + v9[13]);
  swift_bridgeObjectRelease();
  uint64_t v32 = v9[14];
  uint64_t v33 = (void *)((char *)a1 + v32);
  uint64_t v34 = (void *)((char *)a2 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  void *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v9[15]) = *(void *)((char *)a2 + v9[15]);
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[5];
  uint64_t v38 = (void *)((char *)a1 + v37);
  uint64_t v39 = (void *)((char *)a2 + v37);
  uint64_t v41 = *v39;
  uint64_t v40 = v39[1];
  void *v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[6];
  unint64_t v43 = (void *)((char *)a1 + v42);
  uint64_t v44 = (void *)((char *)a2 + v42);
  uint64_t v46 = *v44;
  uint64_t v45 = v44[1];
  *unint64_t v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  uint64_t v47 = a3[7];
  id v48 = (void *)((char *)a1 + v47);
  id v49 = (void *)((char *)a2 + v47);
  uint64_t v51 = *v49;
  uint64_t v50 = v49[1];
  *id v48 = v51;
  v48[1] = v50;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_release();
  uint64_t v52 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v53 = *(void **)((char *)a1 + v52);
  *(void *)((char *)a1 + v52) = *(void *)((char *)a2 + v52);

  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_release();
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  return a1;
}

uint64_t sub_10042D774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10042D788);
}

uint64_t sub_10042D788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MediaAPIMetadata();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10042D84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10042D860);
}

uint64_t sub_10042D860(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for MediaAPIMetadata();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10042D920()
{
  uint64_t result = type metadata accessor for MediaAPIMetadata();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10042D9F4()
{
  *(void *)(v1 + 16) = v0;
  *(void *)(v1 + 24) = *v0;
  return _swift_task_switch(sub_10042DA3C, 0, 0);
}

uint64_t sub_10042DA3C()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  uint64_t v3 = swift_task_alloc();
  v0[4] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10042DB38;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 6, 0, 0, 0x28746E6573657270, 0xE900000000000029, sub_10019CCD8, v3, &type metadata for SystemAlert.Response);
}

uint64_t sub_10042DB38()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_10042DC50, 0, 0);
}

uint64_t sub_10042DC50()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 48));
}

uint64_t sub_10042DC68()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  sub_100176BD4();
  static DispatchQoS.unspecified.getter();
  v7[1] = _swiftEmptyArrayStorage;
  sub_100431054(&qword_100663418, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000172F8(&qword_100663420);
  sub_10036E06C(&qword_100663428, &qword_100663420);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  qword_100663338 = result;
  return result;
}

uint64_t sub_10042DEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = a2;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v19 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000172F8(&qword_100663410);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  if (qword_10065B110 != -1) {
    swift_once();
  }
  v16[1] = qword_100663338;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13 + v12, (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_10042E984;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002557B0;
  aBlock[3] = &unk_100646678;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v20 = _swiftEmptyArrayStorage;
  sub_100431054(&qword_10065D3E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000172F8(&qword_10065D3E8);
  sub_10036E06C((unint64_t *)&qword_10065D3F0, &qword_10065D3E8);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v18);
  return swift_release();
}

void sub_10042E260(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000172F8(&qword_10065E908);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A6B00;
  if (!kCFUserNotificationAlertHeaderKey)
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v9 = (void *)inited;
  uint64_t v41 = v5;
  uint64_t v42 = a2;
  *(void *)(inited + 32) = kCFUserNotificationAlertHeaderKey;
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  void v9[8] = &type metadata for String;
  v9[5] = v11;
  v9[6] = v10;
  if (!kCFUserNotificationAlertMessageKey)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
  }
  v9[9] = kCFUserNotificationAlertMessageKey;
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  v9[13] = &type metadata for String;
  v9[10] = v12;
  v9[11] = v13;
  if (!kCFUserNotificationDefaultButtonTitleKey) {
    goto LABEL_28;
  }
  v9[14] = kCFUserNotificationDefaultButtonTitleKey;
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v15 = *(void *)(a1 + 56);
  v9[18] = &type metadata for String;
  v9[15] = v14;
  v9[16] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  CFStringRef v16 = (id)kCFUserNotificationAlertHeaderKey;
  CFStringRef v17 = (id)kCFUserNotificationAlertMessageKey;
  CFStringRef v18 = (id)kCFUserNotificationDefaultButtonTitleKey;
  unint64_t v19 = sub_10044B684((uint64_t)v9);
  unint64_t v44 = v19;
  CFOptionFlags v20 = *(void *)(a1 + 72);
  if (v20)
  {
    if (!kCFUserNotificationAlternateButtonTitleKey)
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    CFOptionFlags v21 = *(void *)(a1 + 64);
    uint64_t v47 = &type metadata for String;
    responseFlags[0] = v21;
    responseFlags[1] = v20;
    sub_1001C5DD4(responseFlags, error);
    swift_bridgeObjectRetain();
    uint64_t v22 = (id)kCFUserNotificationAlternateButtonTitleKey;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v43 = v19;
    sub_10052A8A4(error, v22, isUniquelyReferenced_nonNull_native);
    unint64_t v19 = v43;
    unint64_t v44 = v43;

    swift_bridgeObjectRelease();
    if (*(unsigned char *)(a1 + 80) == 1)
    {
      uint64_t v24 = (void *)SBUserNotificationAlternateButtonPresentationStyleKey;
      if (!SBUserNotificationAlternateButtonPresentationStyleKey)
      {
LABEL_31:
        __break(1u);
        return;
      }
      uint64_t v47 = &type metadata for UInt32;
      LODWORD(responseFlags[0]) = 1;
      sub_1001C5DD4(responseFlags, error);
      id v25 = v24;
      char v26 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v43 = v19;
      sub_10052A8A4(error, v25, v26);
      unint64_t v19 = v43;
      unint64_t v44 = v43;

      swift_bridgeObjectRelease();
    }
  }
  if (*(unsigned char *)(a1 + 81) != 1) {
    goto LABEL_14;
  }
  uint64_t v27 = (void *)SBUserNotificationPendInSetupIfNotAllowedKey;
  if (!SBUserNotificationPendInSetupIfNotAllowedKey) {
    goto LABEL_30;
  }
  if (kCFBooleanTrue)
  {
    type metadata accessor for CFBoolean(0);
    uint64_t v47 = v28;
    responseFlags[0] = (CFOptionFlags)kCFBooleanTrue;
    sub_1001C5DD4(responseFlags, error);
    id v29 = v27;
    CFBooleanRef v30 = kCFBooleanTrue;
    char v31 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v43 = v19;
    sub_10052A8A4(error, v29, v31);
    unint64_t v44 = v43;

    swift_bridgeObjectRelease();
  }
  else
  {
    id v32 = SBUserNotificationPendInSetupIfNotAllowedKey;
    sub_10042F08C((uint64_t)v32, responseFlags);

    sub_100016E7C((uint64_t)responseFlags);
  }
LABEL_14:
  error[0] = 0;
  type metadata accessor for CFString(0);
  sub_100431054(&qword_10065B450, type metadata accessor for CFString);
  CFDictionaryRef isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  CFUserNotificationRef v34 = CFUserNotificationCreate(0, 0.0, 3uLL, error, isa);

  if (v34 && !error[0])
  {
    responseFlags[0] = 2;
    uint64_t v35 = v34;
    CFUserNotificationReceiveResponse(v35, 0.0, responseFlags);
    char v36 = responseFlags[0];
    if (responseFlags[0] != 1)
    {
      if (!responseFlags[0])
      {
        LOBYTE(v43) = 0;
LABEL_24:
        sub_1000172F8(&qword_100663410);
        CheckedContinuation.resume(returning:)();

        return;
      }
      char v36 = 2;
    }
    LOBYTE(v43) = v36;
    goto LABEL_24;
  }
  static Logger.daemon.getter();
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 67240192;
    swift_beginAccess();
    LODWORD(v43) = error[0];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Could not create CFUserNotification: %{public}d", v39, 8u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v4);
  LOBYTE(v43) = 2;
  sub_1000172F8(&qword_100663410);
  CheckedContinuation.resume(returning:)();
}

uint64_t sub_10042E840()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SystemAlert()
{
  return self;
}

uint64_t sub_10042E8B4()
{
  uint64_t v1 = sub_1000172F8(&qword_100663410);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_10042E984()
{
  uint64_t v1 = *(void *)(sub_1000172F8(&qword_100663410) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_10042E260(v2, v3);
}

uint64_t sub_10042E9EC()
{
  return swift_release();
}

uint64_t sub_10042E9F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100016D20(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10052B494();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 16 * v6);
  sub_10042F340(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10042EADC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100016D20(a1, a2);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10052B810();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_10042F518(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10042EBBC(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_10000F800(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10052BDB0();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 16 * v4);
  sub_10042F8D4(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10042ECC8(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = v3;
  char v7 = a3 & 1;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100452714(a1, a2, v7);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v4;
  uint64_t v14 = *v4;
  *unint64_t v4 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10052C3F4();
    uint64_t v11 = v14;
  }
  sub_1001C3EC0(*(void *)(*(void *)(v11 + 48) + 24 * v8), *(void *)(*(void *)(v11 + 48) + 24 * v8 + 8), *(unsigned char *)(*(void *)(v11 + 48) + 24 * v8 + 16));
  uint64_t v12 = *(void *)(*(void *)(v11 + 56) + 16 * v8);
  sub_10042FD78(v8, v11);
  *unint64_t v4 = v11;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_10042EDBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10000F800(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10052C7A8();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for ProgressCache.Progress();
    uint64_t v20 = *(void *)(v13 - 8);
    sub_10043109C(v12 + *(void *)(v20 + 72) * v6, a2);
    sub_100430D00(v6, v9, (uint64_t (*)(void))type metadata accessor for ProgressCache.Progress);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for ProgressCache.Progress();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

double sub_10042EF88@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100016D20(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10052CE2C();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1001C5DD4((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_10042FFFC(v8, v11);
    *unint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

double sub_10042F08C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100451D14(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10052E554();
      uint64_t v9 = v11;
    }

    sub_1001C5DD4((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_1004303DC(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_10042F184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100016D20(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10052EC2C();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a3, v12 + *(void *)(v20 + 72) * v8, v13);
    sub_100430AC8(v8, v11, (uint64_t (*)(void))&type metadata accessor for Date);
    *unint64_t v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for Date();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

unint64_t sub_10042F340(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10042F518(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10042F6F0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        char v11 = *(unsigned char *)(*(void *)(a2 + 48) + v6);
        Hasher.init(_seed:)();
        sub_1001A0578(v11);
        String.hash(into:)();
        swift_bridgeObjectRelease();
        double result = Hasher._finalize()();
        unint64_t v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          uint64_t v14 = (unsigned char *)(v13 + v3);
          uint64_t v15 = (unsigned char *)(v13 + v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *uint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          uint64_t v17 = (long long *)(v16 + 48 * v3);
          uint64_t v18 = (long long *)(v16 + 48 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= v18 + 3))
          {
            long long v9 = *v18;
            long long v10 = v18[2];
            v17[1] = v18[1];
            v17[2] = v10;
            *uint64_t v17 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10042F8D4(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = _HashTable.previousHole(before:)();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      id v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_100431054((unint64_t *)&unk_100660E70, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v17 = dispatch thunk of Hashable._rawHashValue(seed:)();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            BOOL v23 = (_OWORD *)(v22 + 16 * a1);
            uint64_t v24 = (_OWORD *)(v22 + 16 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              _OWORD *v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    id v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    id v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *id v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10042FBCC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (void *)(v11 + 8 * v6);
        unint64_t result = static Hasher._hash(seed:_:)();
        unint64_t v13 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 >= v8 && v3 >= (uint64_t)v13)
          {
LABEL_16:
            int64_t v16 = (void *)(v11 + 8 * v3);
            if (v3 != v6 || v16 >= v12 + 1) {
              void *v16 = *v12;
            }
            uint64_t v17 = *(void *)(a2 + 56);
            unint64_t v18 = v17 + 40 * v3;
            uint64_t v19 = (long long *)(v17 + 40 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v18 >= (unint64_t)v19 + 40))
            {
              long long v9 = *v19;
              long long v10 = v19[1];
              *(void *)(v18 + 32) = *((void *)v19 + 4);
              *(_OWORD *)unint64_t v18 = v9;
              *(_OWORD *)(v18 + 16) = v10;
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v8 || v3 >= (uint64_t)v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10042FD78(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      uint64_t v33 = v4;
      do
      {
        uint64_t v9 = 24 * v6;
        uint64_t v10 = v2;
        uint64_t v11 = *(void *)(v2 + 48) + 24 * v6;
        uint64_t v12 = *(void *)v11;
        uint64_t v13 = *(void *)(v11 + 8);
        int64_t v14 = v3;
        char v15 = *(unsigned char *)(v11 + 16);
        unint64_t v16 = v8;
        Hasher.init(_seed:)();
        sub_1001C3ED0(v12, v13, v15);
        StoreAppIdentifier.hash(into:)();
        Swift::Int v17 = Hasher._finalize()();
        char v18 = v15;
        int64_t v3 = v14;
        unint64_t result = sub_1001C3EC0(v12, v13, v18);
        unint64_t v8 = v16;
        Swift::Int v19 = v17 & v7;
        if (v14 >= (uint64_t)v16)
        {
          if (v19 < v16)
          {
            uint64_t v4 = v33;
            uint64_t v2 = v10;
          }
          else
          {
            uint64_t v4 = v33;
            uint64_t v2 = v10;
            if (v3 >= v19) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v4 = v33;
          uint64_t v2 = v10;
          if (v19 >= v8 || v3 >= v19)
          {
LABEL_12:
            uint64_t v20 = *(void *)(v2 + 48);
            unint64_t v21 = v20 + 24 * v3;
            uint64_t v22 = (long long *)(v20 + v9);
            if (24 * v3 < v9 || v21 >= (unint64_t)v22 + 24 || v3 != v6)
            {
              long long v23 = *v22;
              *(void *)(v21 + 16) = *((void *)v22 + 2);
              *(_OWORD *)unint64_t v21 = v23;
            }
            uint64_t v24 = *(void *)(v2 + 56);
            uint64_t v25 = (_OWORD *)(v24 + 16 * v3);
            uint64_t v26 = (_OWORD *)(v24 + 16 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v25 >= v26 + 1))
            {
              *uint64_t v25 = *v26;
              int64_t v3 = v6;
            }
          }
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v27 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v28 = *v27;
    uint64_t v29 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v27 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v29 = *v27;
    uint64_t v28 = (-1 << result) - 1;
  }
  uint64_t *v27 = v29 & v28;
  uint64_t v30 = *(void *)(v2 + 16);
  BOOL v31 = __OFSUB__(v30, 1);
  uint64_t v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v32;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

unint64_t sub_10042FFCC(unint64_t a1, uint64_t a2)
{
  return sub_100430AC8(a1, a2, (uint64_t (*)(void))&type metadata accessor for XPCApp);
}

unint64_t sub_10042FFE4(int64_t a1, uint64_t a2)
{
  return sub_100430D00(a1, a2, (uint64_t (*)(void))type metadata accessor for ProgressCache.Progress);
}

unint64_t sub_10042FFFC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v10 = Hasher._finalize()();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          int64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          Swift::Int v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            _OWORD *v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    char v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    char v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *char v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1004301D4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        uint64_t v9 = 16 * v6;
        uint64_t v10 = *(void *)(a2 + 48) + 16 * v6;
        Swift::UInt64 v11 = *(void *)v10;
        int v12 = *(unsigned __int8 *)(v10 + 8);
        Hasher.init(_seed:)();
        if (!v12) {
          break;
        }
        if (v12 == 1)
        {
          Swift::UInt v13 = 1;
LABEL_10:
          Hasher._combine(_:)(v13);
          Hasher._combine(_:)(v11);
          goto LABEL_12;
        }
        Hasher._combine(_:)(2uLL);
LABEL_12:
        unint64_t result = Hasher._finalize()();
        unint64_t v14 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8) {
            goto LABEL_5;
          }
        }
        else if (v14 >= v8)
        {
          goto LABEL_17;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_17:
          uint64_t v15 = *(void *)(a2 + 48);
          unint64_t v16 = (_OWORD *)(v15 + 16 * v3);
          Swift::Int v17 = (_OWORD *)(v15 + v9);
          if (16 * v3 != v9 || v16 >= v17 + 1) {
            _OWORD *v16 = *v17;
          }
          uint64_t v18 = *(void *)(a2 + 56);
          uint64_t v19 = (void *)(v18 + 8 * v3);
          uint64_t v20 = (void *)(v18 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 1))
          {
            *uint64_t v19 = *v20;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_23;
        }
      }
      Swift::UInt v13 = 0;
      goto LABEL_10;
    }
LABEL_23:
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1004303DC(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::UInt64 v11 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        Hasher.init(_seed:)();
        type metadata accessor for CFString(0);
        sub_100431054(&qword_100663B00, type metadata accessor for CFString);
        id v12 = v11;
        _CFObject.hash(into:)();
        Swift::Int v13 = Hasher._finalize()();

        unint64_t v14 = v13 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v14 < v9) {
            goto LABEL_5;
          }
        }
        else if (v14 >= v9)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          uint64_t v15 = *(void *)(a2 + 48);
          unint64_t v16 = (void *)(v15 + 8 * v3);
          Swift::Int v17 = (void *)(v15 + 8 * v6);
          if (v3 != v6 || v16 >= v17 + 1) {
            void *v16 = *v17;
          }
          uint64_t v18 = *(void *)(a2 + 56);
          uint64_t v19 = (_OWORD *)(v18 + 32 * v3);
          uint64_t v20 = (_OWORD *)(v18 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 2))
          {
            long long v10 = v20[1];
            *uint64_t v19 = *v20;
            v19[1] = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_100430600(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = _HashTable.previousHole(before:)();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      Swift::Int v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_100431054((unint64_t *)&unk_100660E70, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v17 = dispatch thunk of Hashable._rawHashValue(seed:)();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (void *)(v22 + 8 * a1);
            uint64_t v24 = (void *)(v22 + 8 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              void *v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    BOOL v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    BOOL v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *BOOL v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1004308F8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        unint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = static Hasher._hash(seed:_:)();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        uint64_t v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          *uint64_t v14 = *v10;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(type metadata accessor for AppInstallScheduler.ParkReason() - 8) + 72);
        int64_t v17 = v16 * v3;
        unint64_t result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100430AC8(unint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v9 = ~v6;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v10 = (result + 1) & v9;
      while (1)
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v11 = Hasher._finalize()();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v9;
        if (v4 >= (uint64_t)v10) {
          break;
        }
        if (v12 < v10) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v13 = *(void *)(a2 + 48);
        uint64_t v14 = (_OWORD *)(v13 + 16 * v4);
        uint64_t v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1) {
          *uint64_t v14 = *v15;
        }
        uint64_t v16 = *(void *)(a2 + 56);
        uint64_t v17 = *(void *)(*(void *)(a3(0) - 8) + 72);
        int64_t v18 = v17 * v4;
        unint64_t result = v16 + v17 * v4;
        int64_t v19 = v17 * v7;
        unint64_t v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v18 == v19) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v9;
        if (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v12 < v10) {
        goto LABEL_6;
      }
LABEL_11:
      if (v4 < (uint64_t)v12) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v4) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100430CE8(int64_t a1, uint64_t a2)
{
  return sub_100430D00(a1, a2, (uint64_t (*)(void))type metadata accessor for RegisteredXPCClient);
}

unint64_t sub_100430D00(int64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v37 = a3;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t result = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2 + 64;
  uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v12 = (a1 + 1) & ~v11;
  if (((1 << v12) & *(void *)(a2 + 64 + 8 * (v12 >> 6))) != 0)
  {
    uint64_t v13 = ~v11;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v10 + 8 * (v12 >> 6)) & (1 << v12)) != 0)
    {
      unint64_t v40 = (result + 1) & v13;
      uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      uint64_t v14 = v6 + 16;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v41 = v14;
      os_log_type_t v38 = (uint64_t (**)(char *, uint64_t))(v14 - 8);
      uint64_t v39 = v15;
      uint64_t v36 = v13;
      do
      {
        uint64_t v17 = v10;
        uint64_t v18 = v16;
        int64_t v19 = v16 * v12;
        v39(v9, *(void *)(a2 + 48) + v16 * v12, v5);
        sub_100431054((unint64_t *)&unk_100660E70, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v20 = dispatch thunk of Hashable._rawHashValue(seed:)();
        unint64_t result = (*v38)(v9, v5);
        unint64_t v21 = v20 & v13;
        if (a1 >= (uint64_t)v40)
        {
          if (v21 >= v40 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            if (v18 * a1 < v19
              || *(void *)(a2 + 48) + v18 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v19 + v18))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v18 * a1 != v19)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v24 = *(void *)(a2 + 56);
            uint64_t v25 = *(void *)(*(void *)(v37(0) - 8) + 72);
            int64_t v26 = v25 * a1;
            unint64_t result = v24 + v25 * a1;
            int64_t v27 = v25 * v12;
            unint64_t v28 = v24 + v25 * v12 + v25;
            BOOL v29 = v26 < v27 || result >= v28;
            uint64_t v10 = v17;
            if (v29)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v12;
              uint64_t v13 = v36;
            }
            else
            {
              a1 = v12;
              uint64_t v13 = v36;
              if (v26 != v27)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v12;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v40 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        uint64_t v10 = v17;
LABEL_5:
        unint64_t v12 = (v12 + 1) & v13;
        uint64_t v16 = v18;
      }
      while (((*(void *)(v10 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
    }
    uint64_t v30 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  *uint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_100431054(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10043109C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ProgressCache.Progress();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100431100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v45 = a5;
  int v46 = a6;
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v8 = sub_1000172F8(&qword_10065B570);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Locale();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = type metadata accessor for String.LocalizationValue();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v37 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v37 - v16;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v18((char *)&v37 - v16, a1, v12);
  if (qword_10065B120 != -1) {
    swift_once();
  }
  id v19 = (id)qword_10068DA88;
  static Locale.current.getter();
  uint64_t v20 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v41 = v21;
  uint64_t v42 = v20;
  v18(v17, a2, v12);
  id v22 = v19;
  static Locale.current.getter();
  uint64_t v23 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v39 = v24;
  uint64_t v40 = v23;
  v18(v17, v43, v12);
  id v25 = v22;
  static Locale.current.getter();
  uint64_t v43 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v38 = v26;
  sub_1004314C8(v44, (uint64_t)v10);
  int v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12);
  unint64_t v28 = v10;
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  if (v27 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v28, v12);
    v18(v37, (uint64_t)v17, v12);
    id v31 = v25;
    static Locale.current.getter();
    uint64_t v29 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v30 = v32;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
  }
  type metadata accessor for SystemAlert();
  uint64_t result = swift_allocObject();
  uint64_t v34 = v41;
  *(void *)(result + 16) = v42;
  *(void *)(result + 24) = v34;
  uint64_t v35 = v39;
  *(void *)(result + 32) = v40;
  *(void *)(result + 40) = v35;
  uint64_t v36 = v38;
  *(void *)(result + 48) = v43;
  *(void *)(result + 56) = v36;
  *(void *)(result + 64) = v29;
  *(void *)(result + 72) = v30;
  *(unsigned char *)(result + 80) = v45 & 1;
  *(unsigned char *)(result + 81) = v46 & 1;
  return result;
}

uint64_t sub_1004314C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000172F8(&qword_10065B570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for SystemAlert.Response(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004315FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemAlert.Response()
{
  return &type metadata for SystemAlert.Response;
}

unint64_t sub_100431638()
{
  unint64_t result = qword_100663430;
  if (!qword_100663430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663430);
  }
  return result;
}

uint64_t sub_10043168C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (!v1) {
    return (uint64_t)v2;
  }
  uint64_t v3 = a1;
  uint64_t v37 = _swiftEmptyArrayStorage;
  sub_100455C1C(0, v1, 0);
  uint64_t result = sub_100458280(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v28 = v3 + 64;
  uint64_t v25 = v3 + 80;
  int64_t v26 = v1;
  uint64_t v29 = v3;
  int v27 = v5;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_26;
    }
    uint64_t v12 = *(void *)(v3 + 56);
    uint64_t v13 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v6);
    uint64_t v15 = *v13;
    uint64_t v14 = (void *)v13[1];
    sub_1000144C8(v12 + 32 * v6, (uint64_t)v36);
    v35[0] = v15;
    v35[1] = v14;
    v33._uint64_t countAndFlagsBits = v15;
    v33._object = v14;
    sub_1000144C8((uint64_t)v36, (uint64_t)v34);
    Swift::String v30 = v33;
    long long v31 = v34[0];
    long long v32 = v34[1];
    swift_bridgeObjectRetain_n();
    sub_10001729C((uint64_t)v35, &qword_1006600D8);
    String.append(_:)(v30);
    v16._uint64_t countAndFlagsBits = 61;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    sub_10018AC60(&v31, *((uint64_t *)&v32 + 1));
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    sub_10001729C((uint64_t)&v30, &qword_1006600D8);
    uint64_t v2 = v37;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_100455C1C(0, v2[2] + 1, 1);
      uint64_t v2 = v37;
    }
    unint64_t v18 = v2[2];
    unint64_t v17 = v2[3];
    if (v18 >= v17 >> 1)
    {
      uint64_t result = sub_100455C1C(v17 > 1, v18 + 1, 1);
      uint64_t v2 = v37;
    }
    v2[2] = v18 + 1;
    id v19 = &v2[2 * v18];
    void v19[4] = 0;
    v19[5] = 0xE000000000000000;
    uint64_t v3 = v29;
    int64_t v9 = 1 << *(unsigned char *)(v29 + 32);
    if (v6 >= v9) {
      goto LABEL_27;
    }
    uint64_t v8 = v28;
    uint64_t v20 = *(void *)(v28 + 8 * v11);
    if ((v20 & (1 << v6)) == 0) {
      goto LABEL_28;
    }
    int v5 = v27;
    if (*(_DWORD *)(v29 + 36) != v27) {
      goto LABEL_29;
    }
    unint64_t v21 = v20 & (-2 << (v6 & 0x3F));
    if (v21)
    {
      int64_t v9 = __clz(__rbit64(v21)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v26;
    }
    else
    {
      unint64_t v22 = v11 + 1;
      unint64_t v23 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v26;
      if (v11 + 1 < v23)
      {
        unint64_t v24 = *(void *)(v28 + 8 * v22);
        if (v24)
        {
LABEL_22:
          int64_t v9 = __clz(__rbit64(v24)) + (v22 << 6);
        }
        else
        {
          while (v23 - 2 != v11)
          {
            unint64_t v24 = *(void *)(v25 + 8 * v11++);
            if (v24)
            {
              unint64_t v22 = v11 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return (uint64_t)v2;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void *sub_10043197C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v12 = _swiftEmptyArrayStorage;
  sub_100455C1C(0, v2, 0);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_1000144C8(i, (uint64_t)v11);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100455C1C(0, v3[2] + 1, 1);
        uint64_t v3 = v12;
      }
      unint64_t v6 = v3[2];
      unint64_t v5 = v3[3];
      if (v6 >= v5 >> 1)
      {
        sub_100455C1C(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v12;
      }
      v3[2] = v6 + 1;
      uint64_t v7 = &v3[2 * v6];
      void v7[4] = v9;
      v7[5] = v10;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

void *sub_100431AC4(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  sub_100455E58(0, v2, 0);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_1000144C8(i, (uint64_t)v9);
      sub_1000172F8(&qword_100663D50);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100455E58(0, v3[2] + 1, 1);
        uint64_t v3 = v10;
      }
      unint64_t v6 = v3[2];
      unint64_t v5 = v3[3];
      if (v6 >= v5 >> 1)
      {
        sub_100455E58(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v10;
      }
      v3[2] = v6 + 1;
      v3[v6 + 4] = v8;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_100431C0C()
{
  uint64_t v0 = self;
  uint64_t result = (uint64_t)[v0 sharedConnection];
  if (result)
  {
    int64_t v2 = (void *)result;
    unsigned int v3 = [(id)result effectiveBoolValueForSetting:MCFeatureAppInstallationAllowed];

    if (v3 == 2) {
      return 1;
    }
    uint64_t result = (uint64_t)[v0 sharedConnection];
    if (result)
    {
      unsigned int v4 = (void *)result;
      unsigned int v5 = [(id)result effectiveBoolValueForSetting:MCFeatureUIAppInstallationAllowed];

      return v5 == 2;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_100431CDC(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return _swiftEmptyArrayStorage;
  }
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  int64_t v2 = (void *)MobileInstallationCheckCapabilitiesMatch();

  if (v2)
  {
    static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();
  }
  return &off_100636880;
}

uint64_t sub_100431EC0()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v21 = *(void *)(v0 - 8);
  uint64_t v1 = __chkstk_darwin(v0);
  __chkstk_darwin(v1);
  unsigned int v3 = (char *)&v20 - v2;
  uint64_t v4 = type metadata accessor for URLResourceValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v22 = *(void *)(v8 - 8);
  uint64_t v23 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static URL.homeDirectory.getter();
  sub_1000172F8(&qword_10065B558);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
  *(void *)(inited + 32) = NSURLVolumeAvailableCapacityKey;
  uint64_t v12 = NSURLVolumeAvailableCapacityKey;
  sub_1003B9690(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  URL.resourceValues(forKeys:)();
  swift_bridgeObjectRelease();
  uint64_t v13 = URLResourceValues.volumeAvailableCapacity.getter();
  if (v14)
  {
    static Logger.daemon.getter();
    Swift::String v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed to get available capacity", v18, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v23);
    return 0;
  }
  else
  {
    uint64_t v15 = v13;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v23);
  }
  return v15;
}

void sub_1004323C4(uint64_t a1@<X8>)
{
  id v2 = [self sharedManager];
  if (!v2)
  {
    __break(1u);
    goto LABEL_24;
  }
  unsigned int v3 = v2;
  unsigned int v4 = [v2 isSharedIPad];

  id v5 = (id)MobileGestalt_get_current_device();
  long long v6 = 0uLL;
  if (!v5)
  {
    uint64_t v26 = 0;
    uint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v18 = 0;
    uint64_t v20 = 0;
    uint64_t v13 = 0;
    uint64_t v15 = 0;
    uint64_t v27 = 0;
    unint64_t v28 = 0;
    unint64_t v29 = 0;
    long long v30 = 0uLL;
LABEL_16:
    *(void *)a1 = v26;
    *(void *)(a1 + 8) = v10;
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v18;
    *(void *)(a1 + 32) = v20;
    *(void *)(a1 + 40) = v13;
    *(void *)(a1 + 48) = v15;
    *(_OWORD *)(a1 + 56) = v6;
    *(_OWORD *)(a1 + 72) = v30;
    *(void *)(a1 + 88) = v27;
    *(void *)(a1 + 96) = v28;
    *(_DWORD *)(a1 + 104) = v29;
    *(unsigned char *)(a1 + 110) = BYTE6(v29);
    *(_WORD *)(a1 + 108) = WORD2(v29);
    return;
  }
  uint64_t v7 = v5;
  uint64_t v8 = (id)MobileGestalt_copy_compatibleAppVariants_obj();
  if (!v8
    || (uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(),
        v8,
        uint64_t v8 = sub_10043197C(v9),
        swift_bridgeObjectRelease(),
        !v8))
  {

    uint64_t v26 = 0;
    uint64_t v10 = 0;
LABEL_15:
    uint64_t v18 = 0;
    uint64_t v20 = 0;
    uint64_t v13 = 0;
    uint64_t v15 = 0;
    uint64_t v27 = 0;
    unint64_t v28 = 0;
    unint64_t v29 = 0;
    long long v30 = 0uLL;
    long long v6 = 0uLL;
    goto LABEL_16;
  }
  if (!v8[2])
  {

LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v26 = 0;
    uint64_t v10 = 0;
    uint64_t v8 = 0;
    goto LABEL_15;
  }
  uint64_t v10 = v8[5];
  uint64_t v44 = v8[4];
  swift_bridgeObjectRetain();
  id v11 = (id)MobileGestalt_copy_deviceClass_obj();
  if (!v11)
  {

    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v12 = v11;
  unsigned int v43 = v4;
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v16 = (id)MobileGestalt_copy_buildVersion_obj();
  if (v16)
  {
    os_log_type_t v17 = v16;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v21 = (id)MobileGestalt_copy_productVersion_obj();
    if (v21)
    {
      uint64_t v22 = v21;
      uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v24 = v23;

      unint64_t v25 = v24;
      id v21 = (id)v41;
    }
    else
    {
      unint64_t v25 = 0xE000000000000000;
    }
    sub_100447360((uint64_t)v21, v25, (uint64_t *)v45);
    long long v40 = v45[1];
    long long v42 = v45[0];
    uint64_t v27 = v46;
    swift_bridgeObjectRetain();
    unsigned int mainScreenWidth = MobileGestalt_get_mainScreenWidth();
    uint64_t mainScreenHeight = MobileGestalt_get_mainScreenHeight();
    MobileGestalt_get_deviceCornerRadius();
    unsigned int v32 = v31;
    int iPadCapability = MobileGestalt_get_iPadCapability();
    int deviceClassNumber = MobileGestalt_get_deviceClassNumber();

    uint64_t v34 = deviceClassNumber == 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10018B0C4((uint64_t)v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    long long v30 = v40;
    long long v6 = v42;
    unint64_t v28 = mainScreenWidth | (unint64_t)(mainScreenHeight << 32);
    uint64_t v35 = &_mh_execute_header;
    if (!iPadCapability) {
      uint64_t v35 = 0;
    }
    uint64_t v36 = 0x1000000000000;
    if (!v43) {
      uint64_t v36 = 0;
    }
    unint64_t v29 = v36 | v32 | (unint64_t)v35 | (v34 << 40);
    uint64_t v26 = v44;
    goto LABEL_16;
  }
LABEL_24:
  __break(1u);
}

void *sub_100432758()
{
  uint64_t v0 = sub_1000172F8(&qword_10065E9E0);
  uint64_t v1 = v0 - 8;
  __chkstk_darwin(v0);
  unsigned int v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Platform();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v15 - v9;
  static Platform.iOS.getter();
  uint64_t v11 = *(int *)(v1 + 56);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v3, v10, v4);
  v3[v11] = 1;
  static Platform.macOS.getter();
  sub_100432960();
  LOBYTE(v11) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  if (v11)
  {
    sub_1000172F8(&qword_100663438);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1005A3EC0;
    static Platform.iOS.getter();
    v12(v3, v4);
  }
  else
  {
    sub_10001729C((uint64_t)v3, &qword_10065E9E0);
    return _swiftEmptyArrayStorage;
  }
  return (void *)v13;
}

unint64_t sub_100432960()
{
  unint64_t result = qword_10065E048;
  if (!qword_10065E048)
  {
    type metadata accessor for Platform();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10065E048);
  }
  return result;
}

void *sub_1004329B8(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return _swiftEmptyArrayStorage;
  }
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  uint64_t v2 = (void *)MobileInstallationCheckCapabilitiesMatch();

  if (v2)
  {
    static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();
  }
  return &off_1006371B8;
}

uint64_t destroy for Device()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Device(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_WORD *)(a1 + 109) = *(_WORD *)(a2 + 109);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Device(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
  *(unsigned char *)(a1 + 110) = *(unsigned char *)(a2 + 110);
  return a1;
}

__n128 initializeWithTake for Device(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_OWORD *)(a1 + 95) = *(long long *)((char *)a2 + 95);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for Device(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
  *(unsigned char *)(a1 + 110) = *(unsigned char *)(a2 + 110);
  return a1;
}

uint64_t getEnumTagSinglePayload for Device(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 111)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Device(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 110) = 0;
    *(_WORD *)(result + 108) = 0;
    *(_DWORD *)(result + 104) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 111) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 111) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Device()
{
  return &type metadata for Device;
}

uint64_t sub_100432F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[23] = a5;
  v6[24] = a6;
  v6[22] = a4;
  uint64_t v7 = type metadata accessor for Logger();
  v6[25] = v7;
  v6[26] = *(void *)(v7 - 8);
  v6[27] = swift_task_alloc();
  v6[28] = swift_task_alloc();
  v6[29] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  v6[30] = v8;
  v6[31] = *(void *)(v8 - 8);
  v6[32] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for LogKey.Prefix();
  v6[33] = v9;
  v6[34] = *(void *)(v9 - 8);
  v6[35] = swift_task_alloc();
  return _swift_task_switch(sub_1004330E8, 0, 0);
}

uint64_t sub_1004330E8()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  (*(void (**)(void, void, void))(*(void *)(v0 + 272) + 104))(*(void *)(v0 + 280), enum case for LogKey.Prefix.restore(_:), *(void *)(v0 + 264));
  id v3 = objc_allocWithZone((Class)type metadata accessor for LogKey());
  uint64_t v4 = LogKey.init(prefix:)();
  *(void *)(v0 + 288) = v4;
  id v5 = objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain();
  uint64_t v28 = v4;
  id v6 = sub_1003DB240(v1, v2, 1);
  id v7 = [v6 iTunesMetadata];
  id v8 = [v7 distributorInfo];

  id v9 = [v8 distributorID];
  if (v9)
  {
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;
  }
  else
  {

    uint64_t v10 = 0;
    unint64_t v12 = 0;
  }
  *(void *)(v0 + 296) = v12;
  uint64_t v14 = *(void *)(v0 + 248);
  uint64_t v13 = *(void *)(v0 + 256);
  uint64_t v15 = *(void *)(v0 + 240);
  uint64_t v16 = sub_100480604(*(void *)(v0 + 176), *(void *)(v0 + 184));
  uint64_t v18 = v17;
  *(void *)(v0 + 304) = v17;
  if (v12) {
    uint64_t v19 = v10;
  }
  else {
    uint64_t v19 = 0;
  }
  if (v12) {
    unint64_t v20 = v12;
  }
  else {
    unint64_t v20 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  UUID.init()();
  uint64_t v21 = UUID.uuidString.getter();
  uint64_t v23 = v22;
  *(void *)(v0 + 312) = v22;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  *(void *)(v0 + 16) = v21;
  *(void *)(v0 + 24) = v23;
  *(void *)(v0 + 32) = v19;
  *(void *)(v0 + 40) = v20;
  *(void *)(v0 + 48) = v19;
  *(void *)(v0 + 56) = v20;
  *(void *)(v0 + 64) = 0;
  *(unsigned char *)(v0 + 72) = 1;
  *(void *)(v0 + 80) = v16;
  *(void *)(v0 + 88) = v18;
  *(void *)(v0 + 96) = 0;
  *(void *)(v0 + 104) = 0;
  os_log_type_t type = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_100663448 + dword_100663448);
  *(unsigned char *)(v0 + 112) = 1;
  unint64_t v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 320) = v24;
  *unint64_t v24 = v0;
  v24[1] = sub_100433600;
  uint64_t v25 = *(void *)(v0 + 192);
  return type(v0 + 16, v25, v28);
}

uint64_t sub_100433600(char a1)
{
  *(unsigned char *)(*(void *)v1 + 113) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100433778, 0, 0);
}

uint64_t sub_100433778()
{
  uint64_t v33 = v0;
  uint64_t v1 = *(void **)(v0 + 288);
  if (*(unsigned char *)(v0 + 113))
  {
    static Logger.restore.getter();
    swift_bridgeObjectRetain_n();
    id v2 = v1;
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    BOOL v5 = os_log_type_enabled(v3, v4);
    id v6 = *(void **)(v0 + 288);
    uint64_t v7 = *(void *)(v0 + 224);
    uint64_t v8 = *(void *)(v0 + 200);
    uint64_t v9 = *(void *)(v0 + 208);
    unint64_t v10 = *(void *)(v0 + 184);
    if (v5)
    {
      uint64_t v29 = *(void *)(v0 + 176);
      uint64_t v11 = swift_slowAlloc();
      uint64_t v31 = v8;
      os_log_t v27 = (os_log_t)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 138412546;
      *(void *)(v0 + 136) = v6;
      id v12 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v27->Class isa = (Class)v6;

      *(_WORD *)(v11 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 144) = sub_1000143F4(v29, v10, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%@] Localization user opted to install distributor: %s", (uint8_t *)v11, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v31);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    static Logger.restore.getter();
    swift_bridgeObjectRetain_n();
    id v13 = v1;
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v17 = *(void **)(v0 + 288);
    uint64_t v18 = *(void *)(v0 + 232);
    uint64_t v19 = *(void *)(v0 + 200);
    uint64_t v20 = *(void *)(v0 + 208);
    unint64_t v21 = *(void *)(v0 + 184);
    if (v16)
    {
      os_log_t log = *(os_log_t *)(v0 + 176);
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 138412546;
      *(void *)(v0 + 120) = v17;
      uint64_t v28 = v14;
      id v24 = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v23 = v17;

      *(_WORD *)(v22 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 128) = sub_1000143F4((uint64_t)log, v21, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v28, v15, "[%@] Localization user opted to not install distributor: %s", (uint8_t *)v22, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_100433C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  uint64_t v7 = type metadata accessor for Logger();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for LogKey.Prefix();
  v6[13] = v8;
  v6[14] = *(void *)(v8 - 8);
  v6[15] = swift_task_alloc();
  return _swift_task_switch(sub_100433D8C, 0, 0);
}

uint64_t sub_100433D8C()
{
  (*(void (**)(void, void, void))(v0[14] + 104))(v0[15], enum case for LogKey.Prefix.restore(_:), v0[13]);
  id v1 = objc_allocWithZone((Class)type metadata accessor for LogKey());
  uint64_t v2 = LogKey.init(prefix:)();
  v0[16] = v2;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100663440 + dword_100663440);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[17] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100433E88;
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[8];
  uint64_t v6 = v0[6];
  return v8(v6, v4, v5, v2);
}

uint64_t sub_100433E88(char a1)
{
  *(unsigned char *)(*(void *)v1 + 144) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100433F88, 0, 0);
}

uint64_t sub_100433F88()
{
  uint64_t v37 = v0;
  uint64_t v1 = *(void **)(v0 + 128);
  if (*(unsigned char *)(v0 + 144))
  {
    static Logger.restore.getter();
    id v2 = v1;
    swift_bridgeObjectRetain_n();
    id v3 = v2;
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = *(void **)(v0 + 128);
    uint64_t v9 = *(void *)(v0 + 80);
    uint64_t v8 = *(void *)(v0 + 88);
    uint64_t v10 = *(void *)(v0 + 72);
    unint64_t v11 = *(void *)(v0 + 56);
    if (v6)
    {
      uint64_t v32 = *(void *)(v0 + 48);
      uint64_t v35 = *(void *)(v0 + 72);
      uint64_t v12 = swift_slowAlloc();
      uint64_t v29 = (void *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412546;
      *(void *)(v0 + 32) = v7;
      os_log_type_t type = v5;
      id v13 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v29 = v7;

      *(_WORD *)(v12 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 40) = sub_1000143F4(v32, v11, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v4, type, "[%@] Localization user opted to install distributor of: %s", (uint8_t *)v12, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v35);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    }
  }
  else
  {
    static Logger.restore.getter();
    id v14 = v1;
    swift_bridgeObjectRetain_n();
    id v15 = v14;
    BOOL v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = *(void **)(v0 + 128);
    uint64_t v20 = *(void *)(v0 + 96);
    uint64_t v21 = *(void *)(v0 + 72);
    uint64_t v22 = *(void *)(v0 + 80);
    unint64_t v23 = *(void *)(v0 + 56);
    if (v18)
    {
      uint64_t v33 = *(void *)(v0 + 48);
      os_log_type_t log = v17;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = (void *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 138412546;
      *(void *)(v0 + 16) = v19;
      os_log_type_t typea = v16;
      id v26 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v25 = v19;

      *(_WORD *)(v24 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 24) = sub_1000143F4(v33, v23, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, typea, log, "[%@] User opted to not install distributor for bundleID: %s", (uint8_t *)v24, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_100434468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[41] = a2;
  v3[42] = a3;
  v3[40] = a1;
  v3[43] = type metadata accessor for Restore();
  v3[44] = swift_task_alloc();
  v3[45] = swift_task_alloc();
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v3[48] = v4;
  v3[49] = *(void *)(v4 - 8);
  v3[50] = swift_task_alloc();
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  v3[53] = swift_task_alloc();
  return _swift_task_switch(sub_1004345AC, 0, 0);
}

uint64_t sub_1004345AC()
{
  uint64_t v1 = *(void *)(v0 + 320);
  id v2 = *(void **)(v0 + 336);
  id v3 = (uint64_t *)(v1 + *(int *)(*(void *)(v0 + 344) + 52));
  uint64_t v4 = v3[1];
  if (v4)
  {
    uint64_t v5 = *v3;
    uint64_t v6 = *(void *)(v0 + 376);
    swift_bridgeObjectRetain();
    static Logger.restore.getter();
    sub_10017B7DC(v1, v6);
    id v7 = v2;
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    BOOL v10 = os_log_type_enabled(v8, v9);
    uint64_t v11 = *(void *)(v0 + 376);
    if (v10)
    {
      uint64_t v56 = *(void *)(v0 + 344);
      os_log_type_t type = v9;
      uint64_t v12 = *(void **)(v0 + 336);
      uint64_t v59 = v5;
      uint64_t v13 = swift_slowAlloc();
      id v14 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 138412546;
      *(void *)(v0 + 304) = v12;
      uint64_t v58 = v8;
      id v15 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v14 = v12;

      *(_WORD *)(v13 + 12) = 2112;
      BOOL v16 = *(void **)(v11 + *(int *)(v56 + 20));
      *(void *)(v0 + 312) = v16;
      id v17 = v16;
      uint64_t v8 = v58;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v14[1] = v16;
      sub_10017B840(v11);
      _os_log_impl((void *)&_mh_execute_header, v58, type, "[%@][%@] Going to present hard failure dialog", (uint8_t *)v13, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v5 = v59;
      swift_slowDealloc();
    }
    else
    {
      long long v30 = *(void **)(v0 + 336);

      sub_10017B840(v11);
    }

    uint64_t v31 = *(void *)(v0 + 424);
    uint64_t v32 = *(void *)(v0 + 384);
    uint64_t v33 = *(void *)(v0 + 392);
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    *(void *)(v0 + 432) = v34;
    *(void *)(v0 + 440) = (v33 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v34(v31, v32);
    id v35 = objc_allocWithZone((Class)LSApplicationRecord);
    id v36 = sub_1003DB240(v5, v4, 1);
    uint64_t v37 = *(void *)(v0 + 344);
    uint64_t v38 = *(void *)(v0 + 320);
    id v39 = [v36 localizedName];
    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v42 = v41;

    unsigned int v43 = (uint64_t *)(v38 + *(int *)(v37 + 36));
    uint64_t v45 = *v43;
    uint64_t v44 = v43[1];
    id v46 = objc_allocWithZone((Class)LSApplicationRecord);
    swift_bridgeObjectRetain();
    id v50 = sub_1003DB240(v45, v44, 1);
    id v51 = [v50 localizedName];
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v54 = v53;

    swift_bridgeObjectRetain();
    *(void *)(v0 + 480) = swift_bridgeObjectRetain();
    *(void *)(v0 + 488) = v54;
    *(void *)(v0 + 464) = v54;
    *(void *)(v0 + 472) = v40;
    *(void *)(v0 + 448) = v42;
    *(void *)(v0 + 456) = v52;
    *(void *)(v0 + 16) = v52;
    *(void *)(v0 + 24) = v54;
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + 64) = 0u;
    *(unsigned char *)(v0 + 80) = 22;
    *(void *)(v0 + 88) = v40;
    *(void *)(v0 + 96) = v42;
    *(_OWORD *)(v0 + 104) = 0u;
    *(_OWORD *)(v0 + 120) = 0u;
    *(_OWORD *)(v0 + 136) = 0u;
    *(unsigned char *)(v0 + 152) = 23;
    *(_OWORD *)(v0 + 192) = 0u;
    *(_OWORD *)(v0 + 208) = 0u;
    *(_OWORD *)(v0 + 160) = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
    *(unsigned char *)(v0 + 224) = 26;
    unint64_t v55 = (void *)swift_task_alloc();
    *(void *)(v0 + 496) = v55;
    *unint64_t v55 = v0;
    v55[1] = sub_100434E54;
    return sub_100560FFC(v0 + 16);
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 360);
    static Logger.restore.getter();
    sub_10017B7DC(v1, v18);
    id v19 = v2;
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v23 = *(void *)(v0 + 360);
    if (v22)
    {
      uint64_t v24 = *(void **)(v0 + 336);
      uint64_t v60 = *(void *)(v0 + 344);
      uint64_t v25 = swift_slowAlloc();
      id v26 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 138412546;
      *(void *)(v0 + 232) = v24;
      id v27 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v26 = v24;

      *(_WORD *)(v25 + 12) = 2112;
      uint64_t v28 = *(void **)(v23 + *(int *)(v60 + 20));
      *(void *)(v0 + 240) = v28;
      id v29 = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v26[1] = v28;
      sub_10017B840(v23);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%@][%@] Failed to display hard failure dialog due to non available distributorBundleID", (uint8_t *)v25, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v47 = *(void **)(v0 + 336);

      sub_10017B840(v23);
    }

    (*(void (**)(void, void))(*(void *)(v0 + 392) + 8))(*(void *)(v0 + 408), *(void *)(v0 + 384));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v48 = *(uint64_t (**)(void))(v0 + 8);
    return v48();
  }
}

uint64_t sub_100434E54(uint64_t a1, uint64_t a2)
{
  id v3 = (void *)*v2;
  uint64_t v6 = (void *)*v2;
  v3[63] = a1;
  v3[64] = a2;
  swift_task_dealloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v3[65] = v4;
  *uint64_t v4 = v6;
  v4[1] = sub_100434FA8;
  return sub_100560FFC((uint64_t)(v3 + 11));
}

uint64_t sub_100434FA8(uint64_t a1, uint64_t a2)
{
  id v3 = (void *)*v2;
  uint64_t v6 = (void *)*v2;
  v3[66] = a1;
  v3[67] = a2;
  swift_task_dealloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v3[68] = v4;
  *uint64_t v4 = v6;
  v4[1] = sub_100435100;
  return sub_100560FFC((uint64_t)(v3 + 20));
}

uint64_t sub_100435100(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 552) = a1;
  *(void *)(v3 + 560) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100435204, 0, 0);
}

uint64_t sub_100435204()
{
  uint64_t v1 = *(void *)(v0 + 560);
  uint64_t v2 = *(void *)(v0 + 552);
  long long v8 = *(_OWORD *)(v0 + 504);
  long long v9 = *(_OWORD *)(v0 + 528);
  uint64_t v3 = *(void *)(v0 + 488);
  uint64_t v4 = *(void *)(v0 + 456);
  type metadata accessor for SystemAlert();
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 568) = v5;
  *(_OWORD *)(v5 + 16) = v8;
  *(_OWORD *)(v5 + 32) = v9;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v1;
  *(void *)(v5 + 64) = 0;
  *(void *)(v5 + 72) = 0;
  *(_WORD *)(v5 + 80) = 256;
  sub_10019C9FC(v4, v3, 0, 0, 0, 0, 0, 0, 22);
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 576) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100435338;
  return sub_10042D9F4();
}

uint64_t sub_100435338(char a1)
{
  *(unsigned char *)(*(void *)v1 + 81) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100435458, 0, 0);
}

uint64_t sub_100435458()
{
  uint64_t v38 = v0;
  unint64_t v1 = *(void *)(v0 + 480);
  unint64_t v2 = *(void *)(v0 + 464);
  if (*(unsigned char *)(v0 + 81))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 368);
    uint64_t v4 = *(void **)(v0 + 336);
    uint64_t v5 = *(void *)(v0 + 320);
    static Logger.restore.getter();
    sub_10017B7DC(v5, v3);
    swift_bridgeObjectRetain();
    id v6 = v4;
    swift_bridgeObjectRetain();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v31 = *(void *)(v0 + 472);
      uint64_t v32 = *(void *)(v0 + 480);
      uint64_t v28 = *(void *)(v0 + 464);
      uint64_t v29 = *(void *)(v0 + 456);
      id v36 = *(void (**)(uint64_t, uint64_t))(v0 + 432);
      uint64_t v35 = *(void *)(v0 + 416);
      uint64_t v34 = *(void *)(v0 + 384);
      uint64_t v27 = *(void *)(v0 + 368);
      uint64_t v26 = *(void *)(v0 + 344);
      os_log_type_t log = v7;
      long long v9 = *(void **)(v0 + 336);
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = (void *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138413058;
      os_log_type_t type = v8;
      *(void *)(v0 + 248) = v9;
      id v12 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v11 = v9;

      *(_WORD *)(v10 + 12) = 2112;
      uint64_t v13 = *(void **)(v27 + *(int *)(v26 + 20));
      *(void *)(v0 + 256) = v13;
      id v14 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v11[1] = v13;
      sub_10017B840(v27);
      *(_WORD *)(v10 + 22) = 2082;
      if (v28) {
        uint64_t v15 = v29;
      }
      else {
        uint64_t v15 = 0;
      }
      if (v28) {
        unint64_t v16 = v2;
      }
      else {
        unint64_t v16 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      *(void *)(v0 + 264) = sub_1000143F4(v15, v16, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v10 + 32) = 2082;
      if (v32) {
        uint64_t v17 = v31;
      }
      else {
        uint64_t v17 = 0;
      }
      if (v32) {
        unint64_t v18 = v1;
      }
      else {
        unint64_t v18 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      *(void *)(v0 + 272) = sub_1000143F4(v17, v18, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, log, type, "[%@][%@] Prompt complete with message app: %{public}s not available from distributor: %{public}s", (uint8_t *)v10, 0x2Au);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v36(v35, v34);
    }
    else
    {
      id v19 = *(void (**)(uint64_t, uint64_t))(v0 + 432);
      uint64_t v20 = *(void *)(v0 + 416);
      uint64_t v21 = *(void *)(v0 + 384);
      uint64_t v22 = *(void *)(v0 + 368);
      uint64_t v23 = *(void **)(v0 + 336);

      sub_10017B840(v22);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      v19(v20, v21);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_100435894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[61] = a2;
  v3[62] = a3;
  v3[60] = a1;
  uint64_t v4 = type metadata accessor for Logger();
  v3[63] = v4;
  v3[64] = *(void *)(v4 - 8);
  v3[65] = swift_task_alloc();
  v3[66] = swift_task_alloc();
  v3[67] = swift_task_alloc();
  v3[68] = swift_task_alloc();
  v3[69] = swift_task_alloc();
  v3[70] = swift_task_alloc();
  v3[71] = swift_task_alloc();
  return _swift_task_switch(sub_1004359A4, 0, 0);
}

uint64_t sub_1004359A4()
{
  uint64_t v43 = v0;
  unint64_t v1 = *(void **)(v0 + 496);
  unint64_t v2 = *(uint64_t **)(v0 + 480);
  static Logger.restore.getter();
  uint64_t v3 = *v2;
  *(void *)(v0 + 576) = *v2;
  unint64_t v4 = v2[1];
  *(void *)(v0 + 584) = v4;
  uint64_t v5 = v2[2];
  *(void *)(v0 + 592) = v5;
  unint64_t v6 = v2[3];
  *(void *)(v0 + 600) = v6;
  uint64_t v7 = v2[4];
  *(void *)(v0 + 608) = v7;
  unint64_t v8 = v2[5];
  *(void *)(v0 + 616) = v8;
  uint64_t v39 = v3;
  unint64_t v40 = v4;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v9 = v1;
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    os_log_type_t log = v10;
    os_log_t v34 = v7;
    uint64_t v36 = *(void *)(v0 + 512);
    id v12 = *(void **)(v0 + 496);
    uint64_t v37 = *(void *)(v0 + 504);
    uint64_t v38 = *(void *)(v0 + 568);
    uint64_t v13 = swift_slowAlloc();
    id v14 = (void *)swift_slowAlloc();
    v42[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 138413058;
    *(void *)(v0 + 448) = v12;
    unint64_t v15 = v8;
    id v16 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v14 = v12;

    *(_WORD *)(v13 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 456) = sub_1000143F4(v39, v40, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 22) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 464) = sub_1000143F4((uint64_t)v34, v15, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 32) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 472) = sub_1000143F4(v5, v6, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, v11, "[%@][%{public}s] Going to prompt to sign in accountID: %{public}s distributorID: %s", (uint8_t *)v13, 0x2Au);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v38, v37);
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 568);
    uint64_t v18 = *(void *)(v0 + 504);
    uint64_t v19 = *(void *)(v0 + 512);
    uint64_t v20 = *(void **)(v0 + 496);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  id v21 = objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain();
  id v22 = sub_1003DB240(v5, v6, 1);
  id v23 = [v22 localizedName];
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  id v27 = objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain();
  id v28 = sub_1003DB240(v39, v40, 1);
  id v29 = [v28 localizedName];
  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v41 = v31;

  swift_bridgeObjectRetain();
  *(void *)(v0 + 656) = v26;
  *(void *)(v0 + 648) = v41;
  *(void *)(v0 + 640) = v30;
  *(void *)(v0 + 632) = v26;
  *(void *)(v0 + 624) = v24;
  *(void *)(v0 + 16) = 15;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(void *)(v0 + 72) = 0;
  *(unsigned char *)(v0 + 80) = 26;
  *(void *)(v0 + 88) = v30;
  *(void *)(v0 + 96) = v41;
  *(void *)(v0 + 104) = v24;
  *(void *)(v0 + 112) = v26;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *(unsigned char *)(v0 + 152) = 20;
  *(void *)(v0 + 160) = v24;
  *(void *)(v0 + 168) = v26;
  *(_OWORD *)(v0 + 192) = 0u;
  *(_OWORD *)(v0 + 208) = 0u;
  *(_OWORD *)(v0 + 176) = 0u;
  *(unsigned char *)(v0 + 224) = 21;
  *(void *)(v0 + 232) = 49;
  *(_OWORD *)(v0 + 240) = 0u;
  *(_OWORD *)(v0 + 256) = 0u;
  *(_OWORD *)(v0 + 272) = 0u;
  *(void *)(v0 + 288) = 0;
  *(unsigned char *)(v0 + 296) = 26;
  uint64_t v32 = (void *)swift_task_alloc();
  *(void *)(v0 + 664) = v32;
  *uint64_t v32 = v0;
  v32[1] = sub_1004362A4;
  return sub_100560FFC(v0 + 16);
}

uint64_t sub_1004362A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  unint64_t v6 = (void *)*v2;
  v3[84] = a1;
  v3[85] = a2;
  swift_task_dealloc();
  unint64_t v4 = (void *)swift_task_alloc();
  v3[86] = v4;
  *unint64_t v4 = v6;
  v4[1] = sub_1004363FC;
  return sub_100560FFC((uint64_t)(v3 + 11));
}

uint64_t sub_1004363FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  unint64_t v6 = (void *)*v2;
  v3[87] = a1;
  v3[88] = a2;
  swift_task_dealloc();
  unint64_t v4 = (void *)swift_task_alloc();
  v3[89] = v4;
  *unint64_t v4 = v6;
  v4[1] = sub_100436554;
  return sub_100560FFC((uint64_t)(v3 + 20));
}

uint64_t sub_100436554(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  unint64_t v6 = (void *)*v2;
  v3[90] = a1;
  v3[91] = a2;
  swift_task_dealloc();
  unint64_t v4 = (void *)swift_task_alloc();
  v3[92] = v4;
  *unint64_t v4 = v6;
  v4[1] = sub_1004366AC;
  return sub_100560FFC((uint64_t)(v3 + 29));
}

uint64_t sub_1004366AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 744) = a1;
  *(void *)(v3 + 752) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_1004367B0, 0, 0);
}

uint64_t sub_1004367B0()
{
  uint64_t v1 = *(void *)(v0 + 752);
  uint64_t v2 = *(void *)(v0 + 744);
  long long v11 = *(_OWORD *)(v0 + 696);
  long long v12 = *(_OWORD *)(v0 + 720);
  long long v10 = *(_OWORD *)(v0 + 672);
  uint64_t v3 = *(void *)(v0 + 656);
  uint64_t v4 = *(void *)(v0 + 648);
  uint64_t v5 = *(void *)(v0 + 640);
  uint64_t v6 = *(void *)(v0 + 624);
  type metadata accessor for SystemAlert();
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 760) = v7;
  *(_OWORD *)(v7 + 16) = v10;
  *(_OWORD *)(v7 + 32) = v11;
  *(_OWORD *)(v7 + 48) = v12;
  *(void *)(v7 + 64) = v2;
  *(void *)(v7 + 72) = v1;
  *(_WORD *)(v7 + 80) = 257;
  sub_10019C9FC(v5, v4, v6, v3, 0, 0, 0, 0, 20);
  swift_bridgeObjectRelease();
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 768) = v8;
  *unint64_t v8 = v0;
  v8[1] = sub_100436904;
  return sub_10042D9F4();
}

uint64_t sub_100436904(char a1)
{
  *(unsigned char *)(*(void *)v1 + 81) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100436A24, 0, 0);
}

uint64_t sub_100436A24()
{
  uint64_t v61 = v0;
  if (*(unsigned char *)(v0 + 81) == 1)
  {
    uint64_t v13 = *(void **)(v0 + 496);
    static Logger.restore.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v14 = v13;
    unint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    BOOL v17 = os_log_type_enabled(v15, v16);
    unint64_t v18 = *(void *)(v0 + 584);
    if (v17)
    {
      uint64_t v48 = *(void *)(v0 + 576);
      uint64_t v55 = *(void *)(v0 + 512);
      uint64_t v19 = *(void **)(v0 + 496);
      uint64_t v57 = *(void *)(v0 + 504);
      uint64_t v59 = *(void *)(v0 + 552);
      loga = v15;
      uint64_t v20 = swift_slowAlloc();
      id v21 = (void *)swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 138412802;
      *(void *)(v0 + 360) = v19;
      os_log_type_t v51 = v16;
      id v22 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v21 = v19;

      *(_WORD *)(v20 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 368) = sub_1000143F4(v48, v18, &v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 22) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 376) = sub_1000143F4(v48, v18, &v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, loga, v51, "[%@][%{public}s] Attempting to remove bundleID: %{public}s", (uint8_t *)v20, 0x20u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      id v23 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
      v23(v59, v57);
    }
    else
    {
      uint64_t v35 = *(void *)(v0 + 552);
      uint64_t v36 = *(void *)(v0 + 504);
      uint64_t v37 = *(void *)(v0 + 512);
      uint64_t v38 = *(void **)(v0 + 496);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      id v23 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
      v23(v35, v36);
    }
    *(void *)(v0 + 800) = v23;
    id v39 = objc_allocWithZone((Class)IXApplicationIdentity);
    swift_bridgeObjectRetain();
    NSString v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v41 = [v39 initWithBundleID:v40];
    *(void *)(v0 + 808) = v41;

    id v34 = [objc_allocWithZone((Class)IXUninstallOptions) init];
    *(void *)(v0 + 816) = v34;
    if (!v34)
    {
      __break(1u);
      return static AppDistributor.requestAuthorization(_:account:)(v34, v33, v32, v31);
    }
    uint64_t v42 = v34;
    [v34 setWaitForDeletion:0];
    [v42 setRequestUserConfirmation:0];
    unint64_t v43 = sub_10043A610();
    uint64_t v44 = (void *)swift_task_alloc();
    *(void *)(v0 + 824) = v44;
    v44[2] = v43;
    v44[3] = v41;
    Swift::UInt8 v44[4] = v42;
    uint64_t v45 = (void *)swift_task_alloc();
    *(void *)(v0 + 832) = v45;
    type metadata accessor for IXUninstallDisposition(0);
    void *v45 = v0;
    v45[1] = sub_1004374AC;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 304, 0, 0, 0xD00000000000001BLL, 0x80000001005B9270, sub_1001C5DC8, v44, v46);
  }
  else
  {
    if (!*(unsigned char *)(v0 + 81))
    {
      uint64_t v1 = *(void **)(v0 + 496);
      static Logger.restore.getter();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      id v2 = v1;
      uint64_t v3 = Logger.logObject.getter();
      os_log_type_t v4 = static os_log_type_t.default.getter();
      BOOL v5 = os_log_type_enabled(v3, v4);
      unint64_t v6 = *(void *)(v0 + 600);
      if (v5)
      {
        uint64_t v50 = *(void *)(v0 + 592);
        os_log_type_t log = v3;
        unint64_t v7 = *(void *)(v0 + 584);
        uint64_t v47 = *(void *)(v0 + 576);
        uint64_t v54 = *(void *)(v0 + 512);
        unint64_t v8 = *(void **)(v0 + 496);
        uint64_t v56 = *(void *)(v0 + 504);
        uint64_t v58 = *(void *)(v0 + 560);
        uint64_t v9 = swift_slowAlloc();
        long long v10 = (void *)swift_slowAlloc();
        uint64_t v60 = swift_slowAlloc();
        *(_DWORD *)uint64_t v9 = 138412802;
        *(void *)(v0 + 400) = v8;
        os_log_type_t type = v4;
        id v11 = v8;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v10 = v8;

        *(_WORD *)(v9 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 408) = sub_1000143F4(v47, v7, &v60);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v9 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 416) = sub_1000143F4(v50, v6, &v60);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, log, type, "[%@][%{public}s] Attempting to prompt for authorization with distributorID: %{public}s", (uint8_t *)v9, 0x20u);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        long long v12 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
        v12(v58, v56);
      }
      else
      {
        uint64_t v26 = *(void *)(v0 + 560);
        uint64_t v27 = *(void *)(v0 + 504);
        uint64_t v28 = *(void *)(v0 + 512);
        id v29 = *(void **)(v0 + 496);

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

        long long v12 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
        v12(v26, v27);
      }
      *(void *)(v0 + 776) = v12;
      uint64_t v30 = (void *)swift_task_alloc();
      *(void *)(v0 + 784) = v30;
      *uint64_t v30 = v0;
      v30[1] = sub_100437310;
      uint64_t v31 = *(void *)(v0 + 616);
      uint64_t v32 = *(void *)(v0 + 608);
      uint64_t v33 = *(void *)(v0 + 600);
      id v34 = *(id *)(v0 + 592);
      return static AppDistributor.requestAuthorization(_:account:)(v34, v33, v32, v31);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
}

uint64_t sub_100437310()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 792) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100437DEC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1004374AC()
{
  *(void *)(*(void *)v1 + 840) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1004379CC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1004375C8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1004375C8()
{
  uint64_t v27 = v0;
  uint64_t v1 = (void *)v0[62];
  static Logger.restore.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v2 = v1;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  uint64_t v25 = v3;
  if (os_log_type_enabled(v3, v4))
  {
    id v21 = (void *)v0[101];
    uint64_t v24 = (void (*)(uint64_t, uint64_t))v0[100];
    unint64_t v5 = v0[73];
    uint64_t v18 = v0[72];
    uint64_t v20 = (void *)v0[102];
    unint64_t v6 = (void *)v0[62];
    uint64_t v22 = v0[63];
    uint64_t v23 = v0[68];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v19 = (void *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412802;
    v0[42] = v6;
    id v8 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v19 = v6;

    *(_WORD *)(v7 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[43] = sub_1000143F4(v18, v5, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 22) = 2082;
    swift_bridgeObjectRetain();
    v0[44] = sub_1000143F4(v18, v5, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v25, v4, "[%@][%{public}s] Removed bundleID: %{public}s", (uint8_t *)v7, 0x20u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v10 = v22;
    uint64_t v9 = v23;
  }
  else
  {
    id v11 = (void *)v0[102];
    long long v12 = (void *)v0[101];
    uint64_t v24 = (void (*)(uint64_t, uint64_t))v0[100];
    uint64_t v13 = v0[68];
    uint64_t v14 = v0[63];
    unint64_t v15 = (void *)v0[62];

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    uint64_t v9 = v13;
    uint64_t v10 = v14;
  }
  v24(v9, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1004379CC()
{
  uint64_t v25 = v0;
  uint64_t v1 = (void *)v0[102];
  id v2 = (void *)v0[101];
  uint64_t v3 = (void *)v0[62];
  swift_task_dealloc();

  static Logger.restore.getter();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v4 = v3;
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = v4;
  swift_errorRetain();
  unint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v23 = (void (*)(uint64_t, uint64_t))v0[100];
    unint64_t v8 = v0[73];
    uint64_t v20 = v0[72];
    uint64_t v9 = (void *)v0[62];
    uint64_t v21 = v0[63];
    uint64_t v22 = v0[67];
    uint64_t v10 = swift_slowAlloc();
    id v11 = (void *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412802;
    v0[39] = v9;
    id v12 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v11 = v9;

    *(_WORD *)(v10 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[40] = sub_1000143F4(v20, v8, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 22) = 2112;
    swift_errorRetain();
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    v0[41] = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v11[1] = v13;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%@][%{public}s] Failed to remove with marketplace app due to error: %@", (uint8_t *)v10, 0x20u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v23(v22, v21);
  }
  else
  {
    uint64_t v14 = (void (*)(uint64_t, uint64_t))v0[100];
    uint64_t v15 = v0[67];
    uint64_t v16 = v0[63];
    BOOL v17 = (void *)v0[62];
    swift_errorRelease();

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();

    v14(v15, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_100437DEC()
{
  uint64_t v1 = *(void **)(v0 + 496);
  static Logger.restore.getter();
  id v2 = v1;
  swift_errorRetain();
  id v3 = v2;
  swift_errorRetain();
  id v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = *(void **)(v0 + 496);
    uint64_t v7 = swift_slowAlloc();
    unint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412546;
    *(void *)(v0 + 384) = v6;
    id v9 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v8 = v6;

    *(_WORD *)(v7 + 12) = 2112;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 392) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v8[1] = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[%@] Failed to authorize with marketplace name due to error: %@", (uint8_t *)v7, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    id v11 = *(void **)(v0 + 496);
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, void))(v0 + 776))(*(void *)(v0 + 520), *(void *)(v0 + 504));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_100438088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[46] = a2;
  v3[47] = a3;
  v3[45] = a1;
  uint64_t v4 = type metadata accessor for Logger();
  v3[48] = v4;
  v3[49] = *(void *)(v4 - 8);
  v3[50] = swift_task_alloc();
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  return _swift_task_switch(sub_100438168, 0, 0);
}

uint64_t sub_100438168()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void **)(v0 + 360);
  uint64_t v2 = v1[4];
  *(void *)(v0 + 424) = v2;
  unint64_t v3 = v1[5];
  *(void *)(v0 + 432) = v3;
  if (v1[9])
  {
    uint64_t v4 = v1[8];
    unint64_t v5 = v1[9];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v2;
    unint64_t v5 = v3;
  }
  *(void *)(v0 + 440) = v5;
  uint64_t v6 = *(void **)(v0 + 376);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static Logger.restore.getter();
  swift_bridgeObjectRetain_n();
  id v7 = v6;
  swift_bridgeObjectRetain_n();
  id v8 = v7;
  id v9 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  BOOL v10 = os_log_type_enabled(v9, v23);
  uint64_t v11 = *(void *)(v0 + 416);
  uint64_t v13 = *(void *)(v0 + 384);
  uint64_t v12 = *(void *)(v0 + 392);
  uint64_t v14 = *(void **)(v0 + 376);
  if (v10)
  {
    uint64_t v22 = *(void *)(v0 + 392);
    uint64_t v20 = v2;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v19 = (void *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 138412802;
    *(void *)(v0 + 336) = v14;
    uint64_t v21 = v13;
    id v16 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v19 = v14;

    *(_WORD *)(v15 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 344) = sub_1000143F4(v20, v3, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 22) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 352) = sub_1000143F4(v4, v5, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v9, v23, "[%@][%{public}s] Prompting to install %s", (uint8_t *)v15, 0x20u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v11, v21);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  *(void *)(v0 + 16) = v4;
  *(void *)(v0 + 24) = v5;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(unsigned char *)(v0 + 80) = 19;
  *(void *)(v0 + 88) = v4;
  *(void *)(v0 + 96) = v5;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *(unsigned char *)(v0 + 152) = 16;
  *(void *)(v0 + 160) = v4;
  *(void *)(v0 + 168) = v5;
  *(_OWORD *)(v0 + 176) = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  *(_OWORD *)(v0 + 208) = 0u;
  *(unsigned char *)(v0 + 224) = 18;
  *(void *)(v0 + 232) = 7;
  *(void *)(v0 + 288) = 0;
  *(_OWORD *)(v0 + 256) = 0u;
  *(_OWORD *)(v0 + 272) = 0u;
  *(_OWORD *)(v0 + 240) = 0u;
  *(unsigned char *)(v0 + 296) = 26;
  swift_bridgeObjectRetain();
  BOOL v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 448) = v17;
  *BOOL v17 = v0;
  v17[1] = sub_100438568;
  return sub_100560FFC(v0 + 16);
}

uint64_t sub_100438568(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (void *)*v2;
  uint64_t v6 = (void *)*v2;
  v3[57] = a1;
  v3[58] = a2;
  swift_task_dealloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v3[59] = v4;
  *uint64_t v4 = v6;
  v4[1] = sub_1004386BC;
  return sub_100560FFC((uint64_t)(v3 + 11));
}

uint64_t sub_1004386BC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (void *)*v2;
  uint64_t v6 = (void *)*v2;
  v3[60] = a1;
  v3[61] = a2;
  swift_task_dealloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v3[62] = v4;
  *uint64_t v4 = v6;
  v4[1] = sub_100438810;
  return sub_100560FFC((uint64_t)(v3 + 20));
}

uint64_t sub_100438810(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (void *)*v2;
  uint64_t v6 = (void *)*v2;
  v3[63] = a1;
  v3[64] = a2;
  swift_task_dealloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v3[65] = v4;
  *uint64_t v4 = v6;
  v4[1] = sub_100438964;
  return sub_100560FFC((uint64_t)(v3 + 29));
}

uint64_t sub_100438964(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 528) = a1;
  *(void *)(v3 + 536) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100438A68, 0, 0);
}

uint64_t sub_100438A68()
{
  uint64_t v1 = *(void *)(v0 + 536);
  uint64_t v2 = *(void *)(v0 + 528);
  long long v7 = *(_OWORD *)(v0 + 480);
  long long v8 = *(_OWORD *)(v0 + 504);
  long long v6 = *(_OWORD *)(v0 + 456);
  type metadata accessor for SystemAlert();
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 544) = v3;
  *(_OWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 32) = v7;
  *(_OWORD *)(v3 + 48) = v8;
  *(void *)(v3 + 64) = v2;
  *(void *)(v3 + 72) = v1;
  *(_WORD *)(v3 + 80) = 257;
  swift_bridgeObjectRelease_n();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 552) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100438B78;
  return sub_10042D9F4();
}

uint64_t sub_100438B78(char a1)
{
  *(unsigned char *)(*(void *)v1 + 81) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100438C98, 0, 0);
}

uint64_t sub_100438C98()
{
  uint64_t v44 = v0;
  if (*(unsigned char *)(v0 + 81) == 1)
  {
    uint64_t v13 = *(void **)(v0 + 376);
    static Logger.restore.getter();
    id v14 = v13;
    swift_bridgeObjectRetain();
    id v15 = v14;
    id v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    unint64_t v19 = *(void *)(v0 + 432);
    if (v18)
    {
      uint64_t v35 = *(void *)(v0 + 424);
      uint64_t v38 = *(void *)(v0 + 392);
      uint64_t v20 = *(void **)(v0 + 376);
      uint64_t v40 = *(void *)(v0 + 384);
      uint64_t v42 = *(void *)(v0 + 400);
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412546;
      *(void *)(v0 + 304) = v20;
      id v23 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v22 = v20;

      *(_WORD *)(v21 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 312) = sub_1000143F4(v35, v19, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "[%@][%{public}s] Alternative button", (uint8_t *)v21, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v42, v40);
    }
    else
    {
      uint64_t v29 = *(void *)(v0 + 392);
      uint64_t v28 = *(void *)(v0 + 400);
      uint64_t v31 = *(void **)(v0 + 376);
      uint64_t v30 = *(void *)(v0 + 384);

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    }
    goto LABEL_10;
  }
  if (*(unsigned char *)(v0 + 81))
  {
    swift_bridgeObjectRelease();
LABEL_10:
    uint64_t v12 = 0;
    goto LABEL_11;
  }
  uint64_t v1 = *(void **)(v0 + 376);
  static Logger.restore.getter();
  id v2 = v1;
  swift_bridgeObjectRetain();
  id v3 = v2;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  unint64_t v7 = *(void *)(v0 + 432);
  if (v6)
  {
    uint64_t v34 = *(void *)(v0 + 424);
    uint64_t v37 = *(void *)(v0 + 392);
    long long v8 = *(void **)(v0 + 376);
    uint64_t v39 = *(void *)(v0 + 384);
    uint64_t v41 = *(void *)(v0 + 408);
    uint64_t v9 = swift_slowAlloc();
    os_log_type_t log = v4;
    BOOL v10 = (void *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412546;
    *(void *)(v0 + 320) = v8;
    id v11 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v10 = v8;

    *(_WORD *)(v9 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 328) = sub_1000143F4(v34, v7, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, v5, "[%@][%{public}s] Primary", (uint8_t *)v9, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    uint64_t v12 = 1;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v41, v39);
  }
  else
  {
    uint64_t v24 = *(void *)(v0 + 408);
    uint64_t v25 = *(void *)(v0 + 384);
    uint64_t v26 = *(void *)(v0 + 392);
    uint64_t v27 = *(void **)(v0 + 376);

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    uint64_t v12 = 1;
  }
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v32(v12);
}

uint64_t sub_1004391A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[49] = a3;
  v4[50] = a4;
  v4[47] = a1;
  v4[48] = a2;
  uint64_t v5 = type metadata accessor for Logger();
  v4[51] = v5;
  v4[52] = *(void *)(v5 - 8);
  v4[53] = swift_task_alloc();
  v4[54] = swift_task_alloc();
  v4[55] = swift_task_alloc();
  v4[56] = swift_task_alloc();
  return _swift_task_switch(sub_100439294, 0, 0);
}

uint64_t sub_100439294()
{
  uint64_t v36 = v0;
  uint64_t v1 = *(void **)(v0 + 400);
  static Logger.restore.getter();
  id v2 = v1;
  swift_bridgeObjectRetain_n();
  id v3 = v2;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v32 = *(void *)(v0 + 416);
    BOOL v6 = *(void **)(v0 + 400);
    uint64_t v33 = *(void *)(v0 + 408);
    uint64_t v34 = *(void *)(v0 + 448);
    unint64_t v7 = *(void *)(v0 + 384);
    os_log_t v30 = *(os_log_t *)(v0 + 376);
    uint64_t v8 = swift_slowAlloc();
    os_log_type_t log = v4;
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412546;
    *(void *)(v0 + 360) = v6;
    id v10 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v9 = v6;

    *(_WORD *)(v8 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 368) = sub_1000143F4((uint64_t)v30, v7, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, v5, "[%@][%{public}s] Prompting to install required distributor", (uint8_t *)v8, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v33);
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 448);
    uint64_t v12 = *(void *)(v0 + 408);
    uint64_t v13 = *(void *)(v0 + 416);
    id v14 = *(void **)(v0 + 400);

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  uint64_t v16 = *(void *)(v0 + 376);
  unint64_t v15 = *(void *)(v0 + 384);
  uint64_t v17 = sub_100480604(v16, v15);
  unint64_t v19 = v18;
  id v20 = objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain();
  id v21 = sub_1003DB240(v16, v15, 1);
  id v22 = [v21 iTunesMetadata];
  id v23 = [v22 distributorInfo];

  id v24 = [v23 distributorID];
  if (v24)
  {
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v27 = v26;

    *(void *)(v0 + 456) = v27;
    if (!v19) {
      goto LABEL_8;
    }
  }
  else
  {

    uint64_t v25 = 0;
    unint64_t v27 = 0;
    *(void *)(v0 + 456) = 0;
    if (!v19)
    {
LABEL_8:
      if (v27) {
        uint64_t v17 = v25;
      }
      else {
        uint64_t v17 = 0;
      }
      if (v27) {
        unint64_t v19 = v27;
      }
      else {
        unint64_t v19 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
    }
  }
  *(void *)(v0 + 464) = v19;
  *(void *)(v0 + 16) = v17;
  *(void *)(v0 + 24) = v19;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(unsigned char *)(v0 + 80) = 19;
  *(void *)(v0 + 88) = v17;
  *(void *)(v0 + 96) = v19;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *(unsigned char *)(v0 + 152) = 17;
  *(void *)(v0 + 160) = v17;
  *(void *)(v0 + 168) = v19;
  *(_OWORD *)(v0 + 176) = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  *(_OWORD *)(v0 + 208) = 0u;
  *(unsigned char *)(v0 + 224) = 18;
  *(void *)(v0 + 232) = 7;
  *(_OWORD *)(v0 + 240) = 0u;
  *(_OWORD *)(v0 + 256) = 0u;
  *(_OWORD *)(v0 + 272) = 0u;
  *(void *)(v0 + 288) = 0;
  *(unsigned char *)(v0 + 296) = 26;
  swift_bridgeObjectRetain();
  uint64_t v28 = (void *)swift_task_alloc();
  *(void *)(v0 + 472) = v28;
  void *v28 = v0;
  v28[1] = sub_1004399B4;
  return sub_100560FFC(v0 + 16);
}

uint64_t sub_1004399B4(uint64_t a1, uint64_t a2)
{
  id v3 = (void *)*v2;
  BOOL v6 = (void *)*v2;
  v3[60] = a1;
  v3[61] = a2;
  swift_task_dealloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v3[62] = v4;
  *uint64_t v4 = v6;
  v4[1] = sub_100439B08;
  return sub_100560FFC((uint64_t)(v3 + 11));
}

uint64_t sub_100439B08(uint64_t a1, uint64_t a2)
{
  id v3 = (void *)*v2;
  BOOL v6 = (void *)*v2;
  v3[63] = a1;
  v3[64] = a2;
  swift_task_dealloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v3[65] = v4;
  *uint64_t v4 = v6;
  v4[1] = sub_100439C5C;
  return sub_100560FFC((uint64_t)(v3 + 20));
}

uint64_t sub_100439C5C(uint64_t a1, uint64_t a2)
{
  id v3 = (void *)*v2;
  BOOL v6 = (void *)*v2;
  v3[66] = a1;
  v3[67] = a2;
  swift_task_dealloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v3[68] = v4;
  *uint64_t v4 = v6;
  v4[1] = sub_100439DB4;
  return sub_100560FFC((uint64_t)(v3 + 29));
}

uint64_t sub_100439DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 552) = a1;
  *(void *)(v3 + 560) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100439EB8, 0, 0);
}

uint64_t sub_100439EB8()
{
  uint64_t v1 = *(void *)(v0 + 560);
  uint64_t v2 = *(void *)(v0 + 552);
  long long v7 = *(_OWORD *)(v0 + 504);
  long long v8 = *(_OWORD *)(v0 + 528);
  long long v6 = *(_OWORD *)(v0 + 480);
  type metadata accessor for SystemAlert();
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 568) = v3;
  *(_OWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 32) = v7;
  *(_OWORD *)(v3 + 48) = v8;
  *(void *)(v3 + 64) = v2;
  *(void *)(v3 + 72) = v1;
  *(_WORD *)(v3 + 80) = 257;
  swift_bridgeObjectRelease_n();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 576) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100439FC4;
  return sub_10042D9F4();
}

uint64_t sub_100439FC4(char a1)
{
  *(unsigned char *)(*(void *)v1 + 81) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10043A0E4, 0, 0);
}

uint64_t sub_10043A0E4()
{
  uint64_t v39 = v0;
  if (*(unsigned char *)(v0 + 81) == 1)
  {
    uint64_t v16 = *(void **)(v0 + 400);
    static Logger.restore.getter();
    id v17 = v16;
    swift_bridgeObjectRetain_n();
    id v18 = v17;
    unint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    BOOL v21 = os_log_type_enabled(v19, v20);
    uint64_t v22 = *(void *)(v0 + 432);
    uint64_t v23 = *(void *)(v0 + 408);
    uint64_t v24 = *(void *)(v0 + 416);
    uint64_t v25 = *(void **)(v0 + 400);
    unint64_t v26 = *(void *)(v0 + 384);
    if (v21)
    {
      uint64_t v34 = *(void *)(v0 + 376);
      uint64_t v27 = swift_slowAlloc();
      os_log_type_t typea = v20;
      uint64_t v28 = (void *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 138412546;
      *(void *)(v0 + 304) = v25;
      os_log_type_t log = v19;
      id v29 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v28 = v25;

      *(_WORD *)(v27 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 312) = sub_1000143F4(v34, v26, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, log, typea, "[%@][%{public}s] Alternative button", (uint8_t *)v27, 0x16u);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    }
    goto LABEL_10;
  }
  if (*(unsigned char *)(v0 + 81))
  {
    swift_bridgeObjectRelease();
LABEL_10:
    uint64_t v15 = 0;
    goto LABEL_11;
  }
  uint64_t v1 = *(void **)(v0 + 400);
  static Logger.restore.getter();
  id v2 = v1;
  swift_bridgeObjectRetain_n();
  id v3 = v2;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 440);
  uint64_t v8 = *(void *)(v0 + 408);
  uint64_t v9 = *(void *)(v0 + 416);
  id v10 = *(void **)(v0 + 400);
  unint64_t v11 = *(void *)(v0 + 384);
  if (v6)
  {
    uint64_t v33 = *(void *)(v0 + 376);
    uint64_t v12 = swift_slowAlloc();
    os_log_type_t type = v5;
    uint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 138412546;
    *(void *)(v0 + 320) = v10;
    uint64_t v37 = v7;
    id v14 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v13 = v10;

    *(_WORD *)(v12 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 328) = sub_1000143F4(v33, v11, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v4, type, "[%@][%{public}s] Primary", (uint8_t *)v12, 0x16u);
    sub_1000172F8(&qword_10065DB10);
    uint64_t v15 = 1;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v37, v8);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    uint64_t v15 = 1;
  }
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_t v30 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v30(v15);
}

unint64_t sub_10043A610()
{
  unint64_t result = qword_10065C700;
  if (!qword_10065C700)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_10065C700);
  }
  return result;
}

uint64_t sub_10043A650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10043A664);
}

uint64_t sub_10043A664(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  os_log_type_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10043A6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10043A6E4);
}

uint64_t sub_10043A6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  os_log_type_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for LicenseStorageDatabaseConfig(uint64_t a1)
{
  return sub_10019B200(a1, qword_1006634C8);
}

void *sub_10043A774(uint64_t a1, void *a2)
{
  return sub_10043A7CC(a1, a2, (void (*)(void))type metadata accessor for AppPackageEntity.Entity, (void (*)(long long *, void *))sub_10018B164);
}

void *sub_10043A7A0(uint64_t a1, void *a2)
{
  return sub_10043A7CC(a1, a2, (void (*)(void))type metadata accessor for DDMDeclarationEntity.Entity, (void (*)(long long *, void *))sub_10018B164);
}

void *sub_10043A7CC(uint64_t a1, void *a2, void (*a3)(void), void (*a4)(long long *, void *))
{
  a3(0);
  id v7 = [objc_allocWithZone((Class)ASUSQLiteQueryDescriptor) initWithEntityClass:swift_getObjCClassFromMetadata() memoryEntityClass:0];
  if (!*(void *)(a1 + 24))
  {
    long long v17 = *(_OWORD *)(a1 + 16);
    long long v18 = *(_OWORD *)a1;
    long long v19 = v17;
    uint64_t v20 = *(void *)(a1 + 32);
    if (!*((void *)&v17 + 1)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  sub_10019B17C(a1, (uint64_t)&v18);
  if (*((void *)&v19 + 1))
  {
LABEL_3:
    a4(&v18, v21);
    uint64_t v8 = v22;
    uint64_t v9 = v23;
    sub_10018AC60(v21, v22);
    id v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
    [v7 setPredicate:v10];

    sub_100014524((uint64_t)v21);
  }
LABEL_4:
  id v11 = [objc_allocWithZone((Class)ASUSQLiteQuery) initOnConnection:a2 descriptor:v7];
  id v12 = [v11 copyEntityIdentifiers];
  id v13 = [v12 array];

  uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10043B1C0(v14);
  swift_bridgeObjectRelease();

  id v15 = a2;
  return a2;
}

void *sub_10043A980(uint64_t a1, void *a2)
{
  return sub_10043A7CC(a1, a2, (void (*)(void))type metadata accessor for AppInstallEntity.Entity, (void (*)(long long *, void *))sub_10018B164);
}

void *sub_10043A9AC(uint64_t a1, void *a2)
{
  return sub_10043A7CC(a1, a2, (void (*)(void))type metadata accessor for DDMInstallHistoryEntryEntity.Entity, (void (*)(long long *, void *))sub_10018B164);
}

void *sub_10043A9D8(uint64_t a1, void *a2)
{
  return sub_10043A7CC(a1, a2, (void (*)(void))type metadata accessor for DDMDeclarationStatusEntity.Entity, (void (*)(long long *, void *))sub_10018B164);
}

void *sub_10043AA04(uint64_t a1, void *a2)
{
  return sub_10043A7CC(a1, a2, (void (*)(void))type metadata accessor for MarketplaceCertificateEntity.Entity, (void (*)(long long *, void *))sub_10018B164);
}

uint64_t sub_10043AA30(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = type metadata accessor for URL.DirectoryHint();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for URL();
  uint64_t v25 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  id v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = *v3;
  *((void *)&v31 + 1) = sub_1000172F8(&qword_100660688);
  uint64_t v32 = sub_10043E0B8(&qword_100660690, &qword_100660688);
  LOWORD(v30) = 1;
  *((void *)&v30 + 1) = a1;
  *(void *)&long long v31 = a2;
  sub_1000172F8(&qword_10065E5A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
  sub_10018B164(&v30, inited + 32);
  *(void *)&long long v28 = _swiftEmptyArrayStorage;
  id v14 = v12;
  swift_bridgeObjectRetain();
  sub_10055597C(inited);
  id v15 = (void *)sub_10043DE84(0, v28, (uint64_t)sub_10043DDE8, 0, v14);

  swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_9;
  }
  id v16 = v15;
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v16 valueForProperty:v17];

  if (v18)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v30 = 0u;
    long long v31 = 0u;
  }
  sub_1001CD9F8((uint64_t)&v30, (uint64_t)&v28);
  if (!v29)
  {
    sub_100016E7C((uint64_t)&v30);

LABEL_9:
    type metadata accessor for InternalError();
    sub_10043E1E8((unint64_t *)&qword_10065D340, (void (*)(uint64_t))type metadata accessor for InternalError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    return (uint64_t)v15;
  }
  sub_1001C5DD4(&v28, v27);
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  uint64_t v19 = v24;
  uint64_t v20 = sub_10025B3CC((uint64_t)v27);
  if (!v19)
  {
    BOOL v21 = v20;
    swift_release();
    sub_100014524((uint64_t)v27);
    sub_100016E7C((uint64_t)&v30);
    type metadata accessor for LicenseStorageDatabaseTransaction(0);
    *(void *)&long long v30 = v21;
    *(void *)&long long v30 = dispatch thunk of CustomStringConvertible.description.getter();
    *((void *)&v30 + 1) = v22;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for URL.DirectoryHint.inferFromPath(_:), v6);
    sub_100017B14();
    URL.appending<A>(component:directoryHint:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    id v15 = (void *)Data.init(contentsOf:options:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v26);

    return (uint64_t)v15;
  }
  swift_release();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

void sub_10043AF3C(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v13 = sub_1000172F8(&qword_100660688);
  uint64_t v14 = sub_10043E0B8(&qword_100660690, &qword_100660688);
  LOWORD(v11) = 1;
  *((void *)&v11 + 1) = a1;
  uint64_t v12 = a2;
  sub_1000172F8(&qword_10065E5A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
  sub_10018B164(&v11, inited + 32);
  id v8 = v6;
  swift_bridgeObjectRetain();
  sub_10055597C(inited);
  uint64_t v9 = (void *)sub_10043DE84(0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_10043DDE8, 0, v8);

  swift_bridgeObjectRelease();
  if (v9)
  {
    id v10 = v9;
    sub_10043BA64(v10);
  }
}

void *sub_10043B090(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  id v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    sub_100455CB8(0, v1, 0);
    id v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1000172F8(&qword_10065C4D0);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100455CB8(0, v2[2] + 1, 1);
        id v2 = v9;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_100455CB8(v5 > 1, v6 + 1, 1);
        id v2 = v9;
      }
      v4 += 16;
      v2[2] = v6 + 1;
      sub_1001C5DD4(&v8, &v2[4 * v6 + 4]);
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *sub_10043B1C0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  id v2 = &_swiftEmptyArrayStorage;
  if (v1)
  {
    id v10 = &_swiftEmptyArrayStorage;
    sub_100455CF8(0, v1, 0);
    uint64_t v4 = a1 + 32;
    id v2 = &_swiftEmptyArrayStorage;
    do
    {
      sub_1000144C8(v4, (uint64_t)v9);
      swift_dynamicCast();
      uint64_t v5 = v9[4];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100455CF8(0, v2[2] + 1, 1);
        id v2 = v10;
      }
      unint64_t v7 = v2[2];
      unint64_t v6 = v2[3];
      if (v7 >= v6 >> 1)
      {
        sub_100455CF8(v6 > 1, v7 + 1, 1);
        id v2 = v10;
      }
      v2[2] = v7 + 1;
      v2[v7 + 4] = v5;
      v4 += 32;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_10043B2E4()
{
  int64_t v1 = *v0;
  uint64_t v56 = 0;
  long long v54 = 0u;
  long long v55 = 0u;
  id v2 = v1;
  id v3 = sub_10043A7CC((uint64_t)&v54, v2, (void (*)(void))type metadata accessor for LicenseStorageEntity.Entity, (void (*)(long long *, void *))sub_10018B164);
  uint64_t v5 = v4;

  if (*((void *)&v55 + 1)) {
    sub_100014524((uint64_t)&v54);
  }
  uint64_t v44 = *(void *)(v5 + 16);
  if (!v44)
  {
    swift_bridgeObjectRelease();
    unint64_t v7 = _swiftEmptyArrayStorage;
LABEL_35:

    return (uint64_t)v7;
  }
  type metadata accessor for LicenseStorageEntity.Entity();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  swift_bridgeObjectRetain();
  id v42 = v3;
  unint64_t v6 = 0;
  unint64_t v7 = _swiftEmptyArrayStorage;
  uint64_t v40 = v5;
  while (v6 < *(void *)(v5 + 16))
  {
    uint64_t v8 = *(void *)(v5 + 8 * v6 + 32);
    id v9 = objc_allocWithZone(ObjCClassFromMetadata);
    id v10 = v42;
    id v3 = [v9 initWithPersistentID:v8 onConnection:v10];
    LOBYTE(v9) = [v3 existsInDatabase];

    if ((v9 & 1) == 0)
    {
      swift_bridgeObjectRelease_n();

      goto LABEL_35;
    }
    id v11 = v3;
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [v11 valueForProperty:v12];

    if (v13)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v54 = 0u;
      long long v55 = 0u;
    }
    sub_1001CD9F8((uint64_t)&v54, (uint64_t)&v52);
    if (v53)
    {
      sub_1001C5DD4(&v52, &v50);
      type metadata accessor for JSONDecoder();
      swift_allocObject();
      JSONDecoder.init()();
      sub_1000144C8((uint64_t)&v50, (uint64_t)v47);
      if (swift_dynamicCast())
      {
        dispatch thunk of JSONDecoder.decode<A>(_:from:)();
        sub_100013510(v45, v46);
        swift_release();
        unint64_t v14 = v49;
        uint64_t v41 = (uint64_t)v48;
        uint64_t v5 = v40;
      }
      else
      {
        sub_1000144C8((uint64_t)&v50, (uint64_t)v47);
        if (!swift_dynamicCast()) {
          goto LABEL_37;
        }
        unint64_t v14 = v46;
        if (!v46) {
          goto LABEL_37;
        }
        uint64_t v41 = v45;
        swift_release();
      }
      sub_100014524((uint64_t)&v50);
      sub_100016E7C((uint64_t)&v54);

      id v11 = v11;
      NSString v15 = String._bridgeToObjectiveC()();
      id v16 = [v11 valueForProperty:v15];

      if (v16)
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v54 = 0u;
        long long v55 = 0u;
      }
      sub_1001CD9F8((uint64_t)&v54, (uint64_t)&v52);
      if (v53)
      {
        sub_1001C5DD4(&v52, &v50);
        swift_allocObject();
        JSONDecoder.init()();
        sub_1000144C8((uint64_t)&v50, (uint64_t)v47);
        if (swift_dynamicCast())
        {
          NSString v17 = v7;
          id v18 = v48;
          unint64_t v19 = v49;
          dispatch thunk of JSONDecoder.decode<A>(_:from:)();
          sub_100013510((uint64_t)v18, v19);
          swift_release();
          id v20 = (id)v47[0];
          sub_100014524((uint64_t)&v50);
          sub_100016E7C((uint64_t)&v54);

          unint64_t v7 = v17;
          uint64_t v5 = v40;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            goto LABEL_25;
          }
        }
        else
        {
          uint64_t v21 = sub_10018B1DC(0, (unint64_t *)&qword_100661DD0);
          sub_1000144C8((uint64_t)&v50, (uint64_t)v47);
          if (!swift_dynamicCast()) {
            goto LABEL_38;
          }
          id v22 = v48;
          id v20 = [v48 unsignedLongLongValue];
          swift_release();

          sub_100014524((uint64_t)&v50);
          sub_100016E7C((uint64_t)&v54);

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_25:
          }
            unint64_t v7 = sub_100290C54(0, v7[2] + 1, 1, v7);
        }
        unint64_t v24 = v7[2];
        unint64_t v23 = v7[3];
        if (v24 >= v23 >> 1) {
          unint64_t v7 = sub_100290C54((void *)(v23 > 1), v24 + 1, 1, v7);
        }
        void v7[2] = v24 + 1;
        uint64_t v25 = &v7[3 * v24];
        v25[4] = v41;
        v25[5] = v14;
        v25[6] = v20;
        goto LABEL_7;
      }
      sub_100016E7C((uint64_t)&v54);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100016E7C((uint64_t)&v54);
    }

LABEL_7:
    if (v44 == ++v6)
    {
      swift_bridgeObjectRelease_n();

      id v3 = v10;
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  v47[0] = &type metadata for String;
  sub_1000172F8(&qword_10065BC68);
  uint64_t v27 = String.init<A>(describing:)();
  uint64_t v29 = v28;
  sub_10018AC60(&v50, v51);
  v47[0] = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
  uint64_t v30 = String.init<A>(describing:)();
  uint64_t v21 = v31;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v32 = v27;
  *(void *)(v32 + 8) = v29;
  *(void *)(v32 + 16) = v30;
  *(void *)(v32 + 24) = v21;
  *(unsigned char *)(v32 + 32) = 0;
  swift_willThrow();
  swift_release();
  swift_unexpectedError();
  __break(1u);
LABEL_38:
  v47[0] = v21;
  sub_1000172F8(&qword_10065CED8);
  uint64_t v33 = String.init<A>(describing:)();
  uint64_t v35 = v34;
  sub_10018AC60(&v50, v51);
  v47[0] = swift_getDynamicType();
  sub_1000172F8(&qword_10065BC70);
  uint64_t v36 = String.init<A>(describing:)();
  uint64_t v38 = v37;
  sub_1001C3A08();
  swift_allocError();
  *(void *)uint64_t v39 = v33;
  *(void *)(v39 + 8) = v35;
  *(void *)(v39 + 16) = v36;
  *(void *)(v39 + 24) = v38;
  *(unsigned char *)(v39 + 32) = 0;
  swift_willThrow();
  swift_release();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

void sub_10043BA64(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v41 = *(void *)(v2 - 8);
  uint64_t v42 = v2;
  __chkstk_darwin(v2);
  uint64_t v40 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CocoaError.Code();
  uint64_t v43 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL.DirectoryHint();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v44 = *(void *)(v11 - 8);
  uint64_t v45 = v11;
  __chkstk_darwin(v11);
  id v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = a1;
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v14 valueForProperty:v15];

  if (v16)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v49, 0, sizeof(v49));
  }
  sub_1001CD9F8((uint64_t)v49, (uint64_t)&v47);
  if (v48)
  {
    uint64_t v39 = v13;
    sub_1001C5DD4(&v47, v46);
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    NSString v17 = sub_10025B3CC((uint64_t)v46);
    swift_release();
    sub_100014524((uint64_t)v46);
    sub_100016E7C((uint64_t)v49);

    [v14 deleteFromDatabase];
    id v18 = (void *)sub_10043C184((uint64_t)v17);

    if (!v18)
    {
      type metadata accessor for LicenseStorageDatabaseTransaction(0);
      *(void *)&v49[0] = v17;
      *(void *)&v49[0] = dispatch thunk of CustomStringConvertible.description.getter();
      *((void *)&v49[0] + 1) = v19;
      (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for URL.DirectoryHint.inferFromPath(_:), v7);
      sub_100017B14();
      id v20 = v39;
      URL.appending<A>(component:directoryHint:)();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_bridgeObjectRelease();
      id v21 = [self defaultManager];
      URL._bridgeToObjectiveC()(v22);
      unint64_t v24 = v23;
      *(void *)&v49[0] = 0;
      unsigned int v25 = [v21 removeItemAtURL:v23 error:v49];

      if (v25)
      {
        uint64_t v26 = *(void (**)(char *, uint64_t))(v44 + 8);
        id v27 = *(id *)&v49[0];
        v26(v20, v45);
      }
      else
      {
        id v28 = *(id *)&v49[0];
        _convertNSErrorToError(_:)();

        swift_willThrow();
        swift_errorRetain();
        static CocoaError.fileNoSuchFile.getter();
        sub_10043E1E8((unint64_t *)&qword_10065D500, (void (*)(uint64_t))&type metadata accessor for CocoaError.Code);
        LOBYTE(v28) = static _ErrorCodeProtocol.~= infix(_:_:)();
        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v4);
        if (v28)
        {
          (*(void (**)(char *, uint64_t))(v44 + 8))(v39, v45);
          swift_errorRelease();
        }
        else
        {
          uint64_t v29 = v40;
          static Logger.install.getter();
          swift_errorRetain();
          swift_errorRetain();
          uint64_t v30 = Logger.logObject.getter();
          os_log_type_t v31 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v30, v31))
          {
            uint64_t v32 = swift_slowAlloc();
            uint64_t v33 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v32 = 134218242;
            *(void *)&v49[0] = v17;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v32 + 12) = 2114;
            swift_errorRetain();
            uint64_t v34 = _swift_stdlib_bridgeErrorToNSError();
            *(void *)&v49[0] = v34;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            void *v33 = v34;
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v30, v31, "Failed to remove LKO %llu: %{public}@", (uint8_t *)v32, 0x16u);
            sub_1000172F8(&qword_10065DB10);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_errorRelease();
            swift_errorRelease();
          }
          uint64_t v36 = v41;
          uint64_t v35 = v42;
          uint64_t v38 = v44;
          uint64_t v37 = v45;
          swift_errorRelease();
          (*(void (**)(char *, uint64_t))(v36 + 8))(v29, v35);
          (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v37);
        }
      }
    }
  }
  else
  {
    sub_100016E7C((uint64_t)v49);
  }
}

uint64_t sub_10043C184(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v9 = sub_1000172F8(&qword_100663530);
  LOWORD(v8) = 2;
  uint64_t v10 = sub_10043E0B8(&qword_100663538, &qword_100663530);
  *((void *)&v8 + 1) = a1;
  sub_1000172F8(&qword_10065E5A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
  sub_10018B164(&v8, inited + 32);
  id v5 = v3;
  sub_10055597C(inited);
  uint64_t v6 = sub_10043DE84(0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_10043DDE8, 0, v5);

  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_10043C2A8(uint64_t a1, uint64_t a2)
{
  id v5 = *v2;
  *((void *)&v18 + 1) = sub_1000172F8(&qword_100660688);
  uint64_t v19 = sub_10043E0B8(&qword_100660690, &qword_100660688);
  LOWORD(v17) = 1;
  *((void *)&v17 + 1) = a1;
  *(void *)&long long v18 = a2;
  sub_1000172F8(&qword_10065E5A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
  sub_10018B164(&v17, inited + 32);
  *(void *)&long long v15 = _swiftEmptyArrayStorage;
  id v7 = v5;
  swift_bridgeObjectRetain();
  sub_10055597C(inited);
  long long v8 = (void *)sub_10043DE84(0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_10043DDE8, 0, v7);

  swift_bridgeObjectRelease();
  if (!v8) {
    return 0;
  }
  id v9 = v8;
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 valueForProperty:v10];

  if (v11)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  sub_1001CD9F8((uint64_t)&v17, (uint64_t)&v15);
  if (v16)
  {
    sub_1001C5DD4(&v15, v14);
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    uint64_t v12 = sub_100241F7C(v14);
    swift_release();
    sub_100014524((uint64_t)v14);
  }
  else
  {
    uint64_t v12 = 0;
  }
  sub_100016E7C((uint64_t)&v17);

  return v12;
}

void *sub_10043C51C(uint64_t a1, uint64_t a2)
{
  id v5 = *v2;
  *((void *)&v17 + 1) = sub_1000172F8(&qword_100660688);
  uint64_t v18 = sub_10043E0B8(&qword_100660690, &qword_100660688);
  LOWORD(v16) = 1;
  *((void *)&v16 + 1) = a1;
  *(void *)&long long v17 = a2;
  sub_1000172F8(&qword_10065E5A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
  sub_10018B164(&v16, inited + 32);
  *(void *)&long long v14 = _swiftEmptyArrayStorage;
  id v7 = v5;
  swift_bridgeObjectRetain();
  sub_10055597C(inited);
  long long v8 = (void *)sub_10043DE84(0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_10043DDE8, 0, v7);

  swift_bridgeObjectRelease();
  if (v8)
  {
    id v9 = v8;
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [v9 valueForProperty:v10];

    if (v11)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v16 = 0u;
      long long v17 = 0u;
    }
    sub_1001CD9F8((uint64_t)&v16, (uint64_t)&v14);
    if (v15)
    {
      sub_1001C5DD4(&v14, v13);
      type metadata accessor for JSONDecoder();
      swift_allocObject();
      JSONDecoder.init()();
      long long v8 = sub_10025B3CC((uint64_t)v13);
      swift_release();
      sub_100014524((uint64_t)v13);
    }
    else
    {
      long long v8 = 0;
    }
    sub_100016E7C((uint64_t)&v16);
  }
  return v8;
}

uint64_t sub_10043C77C(id *a1)
{
  uint64_t v2 = type metadata accessor for URL.DirectoryHint();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v23[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  long long v8 = (char *)&v23[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LicenseStorageDatabaseTransaction(0);
  v23[0] = *a1;
  v23[0] = (id)dispatch thunk of CustomStringConvertible.description.getter();
  v23[1] = v9;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for URL.DirectoryHint.inferFromPath(_:), v2);
  sub_100017B14();
  URL.appending<A>(component:directoryHint:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease();
  NSString v10 = self;
  id v11 = [v10 defaultManager];
  URL.path(percentEncoded:)(1);
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v13 = [v11 fileExistsAtPath:v12];

  if (v13)
  {
    id v14 = [v10 defaultManager];
    URL._bridgeToObjectiveC()(v15);
    long long v17 = v16;
    v23[0] = 0;
    unsigned int v18 = [v14 removeItemAtURL:v16 error:v23];

    if (!v18)
    {
      id v20 = v23[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v22);
    }
    id v19 = v23[0];
  }
  Data.write(to:options:)();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v22);
}

uint64_t sub_10043CAA0()
{
  int64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v87 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v92 = (char *)&v79 - v7;
  __chkstk_darwin(v6);
  id v9 = (char *)&v79 - v8;
  uint64_t v10 = type metadata accessor for LogKey.Prefix();
  __chkstk_darwin(v10);
  (*(void (**)(char *, void))(v12 + 104))((char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for LogKey.Prefix.internal(_:));
  id v13 = objc_allocWithZone((Class)type metadata accessor for LogKey());
  id v14 = (void *)LogKey.init(prefix:)();
  static Logger.install.getter();
  uint64_t v15 = v14;
  long long v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v89 = v1;
  uint64_t v94 = v15;
  uint64_t v88 = v2;
  if (v18)
  {
    id v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v100 = v9;
    id v21 = (void *)v20;
    *(_DWORD *)id v19 = 138412290;
    *(void *)&long long v110 = v15;
    uint64_t v22 = v15;
    uint64_t v2 = v88;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v21 = v94;

    uint64_t v15 = v94;
    int64_t v1 = v89;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "[%@] Starting license data consistency check", v19, 0xCu);
    sub_1000172F8(&qword_10065DB10);
    swift_arrayDestroy();
    id v9 = v100;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    long long v16 = v15;
  }

  unint64_t v23 = *(void (**)(void, void))(v3 + 8);
  uint64_t v91 = v3 + 8;
  uint64_t v90 = (uint64_t (*)(void, void))v23;
  v23(v9, v2);
  unint64_t v24 = *v1;
  uint64_t v112 = 0;
  long long v110 = 0u;
  long long v111 = 0u;
  id v25 = v24;
  uint64_t v26 = sub_10043A7CC((uint64_t)&v110, v25, (void (*)(void))type metadata accessor for LicenseStorageEntity.Entity, (void (*)(long long *, void *))sub_10018B164);
  uint64_t v28 = v27;

  if (*((void *)&v111 + 1)) {
    sub_100014524((uint64_t)&v110);
  }
  uint64_t v100 = *(char **)(v28 + 16);
  long long v81 = v26;
  uint64_t v96 = v28;
  if (!v100)
  {
LABEL_35:
    static Logger.install.getter();
    uint64_t v64 = v15;
    uint64_t v65 = Logger.logObject.getter();
    os_log_type_t v66 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v65, v66))
    {
      unint64_t v67 = (uint8_t *)swift_slowAlloc();
      uint64_t v68 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v67 = 138412290;
      *(void *)&long long v110 = v64;
      uint64_t v69 = v64;
      uint64_t v2 = v88;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v68 = v64;

      _os_log_impl((void *)&_mh_execute_header, v65, v66, "[%@] License data consistency check complete", v67, 0xCu);
      sub_1000172F8(&qword_10065DB10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_bridgeObjectRelease();
      uint64_t v64 = v81;
    }
    else
    {

      swift_bridgeObjectRelease();
    }

    return v90(v87, v2);
  }
  type metadata accessor for LicenseStorageEntity.Entity();
  Class ObjCClassFromMetadata = (Class)swift_getObjCClassFromMetadata();
  long long v80 = (char *)&v108 + 8;
  swift_bridgeObjectRetain();
  uint64_t v98 = v26;
  unint64_t v29 = 0;
  uint64_t v95 = (char *)&type metadata for Any + 8;
  *(void *)&long long v30 = 138412546;
  long long v79 = v30;
  long long v86 = xmmword_1005A3EC0;
  while (1)
  {
    if (v29 >= *(void *)(v28 + 16)) {
      __break(1u);
    }
    uint64_t v31 = *(void *)(v28 + 8 * v29 + 32);
    id v32 = objc_allocWithZone(ObjCClassFromMetadata);
    uint64_t v33 = v98;
    uint64_t v34 = [v32 initWithPersistentID:v31 onConnection:v33];
    LOBYTE(v32) = [v34 existsInDatabase];

    if ((v32 & 1) == 0)
    {
      swift_bridgeObjectRelease();

LABEL_34:
      uint64_t v15 = v94;
      goto LABEL_35;
    }
    uint64_t v35 = v34;
    NSString v36 = String._bridgeToObjectiveC()();
    id v37 = [v35 valueForProperty:v36];

    if (v37)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v110 = 0u;
      long long v111 = 0u;
    }
    sub_1001CD9F8((uint64_t)&v110, (uint64_t)&v108);
    if (v109) {
      break;
    }
    sub_100016E7C((uint64_t)&v110);

LABEL_9:
    if (v100 == (char *)++v29)
    {
      swift_bridgeObjectRelease();
      uint64_t v34 = v33;
      goto LABEL_34;
    }
  }
  sub_1001C5DD4(&v108, &v106);
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_1000144C8((uint64_t)&v106, (uint64_t)&DynamicType);
  if (!swift_dynamicCast())
  {
    sub_1000144C8((uint64_t)&v106, (uint64_t)&DynamicType);
    if (!swift_dynamicCast() || (unint64_t v42 = v104) == 0)
    {
      DynamicType = &type metadata for String;
      sub_1000172F8(&qword_10065BC68);
      uint64_t v71 = String.init<A>(describing:)();
      uint64_t v73 = v72;
      sub_10018AC60(&v106, v107);
      DynamicType = (void *)swift_getDynamicType();
      sub_1000172F8(&qword_10065BC70);
      uint64_t v74 = String.init<A>(describing:)();
      uint64_t v76 = v75;
      sub_1001C3A08();
      uint64_t v77 = swift_allocError();
      *(void *)uint64_t v78 = v71;
      *(void *)(v78 + 8) = v73;
      *(void *)(v78 + 16) = v74;
      *(void *)(v78 + 24) = v76;
      *(unsigned char *)(v78 + 32) = 0;
      uint64_t v97 = v77;
      swift_willThrow();
      goto LABEL_42;
    }
    uint64_t v41 = v103;
    swift_release();
    goto LABEL_22;
  }
  uint64_t v38 = v103;
  unint64_t v39 = v104;
  uint64_t v40 = v97;
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t v97 = v40;
  if (!v40)
  {
    sub_100013510(v38, v39);
    swift_release();
    uint64_t v41 = v101;
    unint64_t v42 = v102;
LABEL_22:
    sub_100014524((uint64_t)&v106);
    sub_100016E7C((uint64_t)&v110);

    id v43 = objc_allocWithZone((Class)LSApplicationRecord);
    swift_bridgeObjectRetain();
    NSString v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    *(void *)&long long v110 = 0;
    id v45 = [v43 initWithBundleIdentifier:v44 allowPlaceholder:1 error:&v110];

    if (v45)
    {
      id v46 = (id)v110;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v93 = v41;
      id v47 = (id)v110;
      uint64_t v48 = _convertNSErrorToError(_:)();

      uint64_t v97 = v48;
      swift_willThrow();
      unint64_t v49 = v92;
      static Logger.install.getter();
      long long v50 = v94;
      swift_bridgeObjectRetain_n();
      uint64_t v51 = v50;
      long long v52 = Logger.logObject.getter();
      os_log_type_t v53 = static os_log_type_t.default.getter();
      int v54 = v53;
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v55 = swift_slowAlloc();
        uint64_t v82 = (void *)swift_slowAlloc();
        uint64_t v85 = swift_slowAlloc();
        *(void *)&long long v110 = v85;
        *(_DWORD *)uint64_t v55 = v79;
        int v84 = v54;
        *(void *)&long long v108 = v51;
        uint64_t v56 = v51;
        os_log_t v83 = v52;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v82 = v94;

        *(_WORD *)(v55 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v57 = v93;
        *(void *)&long long v108 = sub_1000143F4(v93, v42, (uint64_t *)&v110);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        os_log_t v58 = v83;
        _os_log_impl((void *)&_mh_execute_header, v83, (os_log_type_t)v84, "[%@] Removing license data for uninstalled app %{public}s", (uint8_t *)v55, 0x16u);
        sub_1000172F8(&qword_10065DB10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v2 = v88;
        swift_slowDealloc();

        v90(v92, v2);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        v90(v49, v2);
        uint64_t v57 = v93;
      }
      uint64_t v59 = *v89;
      *((void *)&v111 + 1) = sub_1000172F8(&qword_100660688);
      uint64_t v112 = sub_10043E0B8(&qword_100660690, &qword_100660688);
      LOWORD(v110) = 1;
      *((void *)&v110 + 1) = v57;
      *(void *)&long long v111 = v42;
      sub_1000172F8(&qword_10065E5A0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v86;
      sub_10018B164(&v110, inited + 32);
      *(void *)&long long v108 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      id v61 = v59;
      sub_10055597C(inited);
      uint64_t v62 = (void *)sub_10043DE84(0, v108, (uint64_t)sub_10043DDE8, 0, v61);

      swift_bridgeObjectRelease();
      if (v62)
      {
        id v63 = v62;
        sub_10043BA64(v63);
        swift_bridgeObjectRelease();

        uint64_t v35 = v63;
      }
      else
      {
        swift_bridgeObjectRelease();
      }

      swift_errorRelease();
      uint64_t v97 = 0;
    }
    uint64_t v28 = v96;
    goto LABEL_9;
  }
  sub_100013510(v38, v39);
LABEL_42:
  swift_release();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

unint64_t *sub_10043D838()
{
  sub_1000172F8((uint64_t *)&unk_100663BE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A3EC0;
  *(void *)(inited + 56) = &type metadata for SQLiteTable;
  *(void *)(inited + 64) = &off_1006493B8;
  int64_t v1 = (void *)swift_allocObject();
  *(void *)(inited + 32) = v1;
  v1[2] = sub_10043D918;
  v1[3] = 0;
  v1[4] = 0x65736E6563696CLL;
  v1[5] = 0xE700000000000000;
  uint64_t v2 = sub_1004AB980(inited);
  swift_setDeallocating();
  sub_1000172F8(&qword_10065C038);
  swift_arrayDestroy();
  return v2;
}

unint64_t *sub_10043D918()
{
  v16[0] = 0x75705F7465737361;
  v16[1] = 0xEF64695F63696C62;
  void v16[2] = 1415071060;
  v16[3] = 0xE400000000000000;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  char v20 = 0;
  v11[0] = 0x695F656C646E7562;
  v11[1] = 0xE900000000000064;
  void v11[2] = 1112493122;
  v11[3] = 0xE400000000000000;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  char v15 = 0;
  v6[0] = 0x5F65736E6563696CLL;
  v6[1] = 0xEA00000000006469;
  v6[2] = 1112493122;
  v6[3] = 0xE400000000000000;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  char v10 = 0;
  sub_1000172F8((uint64_t *)&unk_100663BE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A6B00;
  *(void *)(inited + 56) = &type metadata for SQLiteColumn;
  *(void *)(inited + 64) = &off_1006493B0;
  uint64_t v1 = swift_allocObject();
  *(void *)(inited + 32) = v1;
  sub_1001CD8D8((uint64_t)v16, v1 + 16);
  *(void *)(inited + 96) = &type metadata for SQLiteColumn;
  *(void *)(inited + 104) = &off_1006493B0;
  uint64_t v2 = swift_allocObject();
  *(void *)(inited + 72) = v2;
  sub_1001CD8D8((uint64_t)v11, v2 + 16);
  *(void *)(inited + 136) = &type metadata for SQLiteColumn;
  *(void *)(inited + 144) = &off_1006493B0;
  uint64_t v3 = swift_allocObject();
  *(void *)(inited + 112) = v3;
  sub_1001CD8D8((uint64_t)v6, v3 + 16);
  uint64_t v4 = sub_1004AB980(inited);
  swift_setDeallocating();
  sub_1000172F8(&qword_10065C038);
  swift_arrayDestroy();
  sub_1001CD934((uint64_t)v6);
  sub_1001CD934((uint64_t)v11);
  sub_1001CD934((uint64_t)v16);
  return v4;
}

id sub_10043DAF0(char a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a2 + 16);
  if (a1)
  {
    if (v3)
    {
      uint64_t v27 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_100455CB8(0, v3, 0);
      uint64_t v11 = a2 + 32;
      long long v12 = _swiftEmptyArrayStorage;
      do
      {
        sub_10019B17C(v11, (uint64_t)v22);
        uint64_t v13 = v23;
        uint64_t v14 = v24;
        sub_10018AC60(v22, v23);
        uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14);
        uint64_t v26 = sub_10018B1DC(0, (unint64_t *)&qword_100663540);
        *(void *)&long long v25 = v15;
        sub_100014524((uint64_t)v22);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100455CB8(0, v12[2] + 1, 1);
          long long v12 = v27;
        }
        unint64_t v17 = v12[2];
        unint64_t v16 = v12[3];
        if (v17 >= v16 >> 1)
        {
          sub_100455CB8(v16 > 1, v17 + 1, 1);
          long long v12 = v27;
        }
        v12[2] = v17 + 1;
        sub_1001C5DD4(&v25, &v12[4 * v17 + 4]);
        v11 += 40;
        --v3;
      }
      while (v3);
      swift_bridgeObjectRelease();
    }
    long long v18 = &selRef_predicateMatchingAnyPredicates_;
  }
  else
  {
    if (v3)
    {
      uint64_t v27 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_100455CB8(0, v3, 0);
      uint64_t v4 = a2 + 32;
      uint64_t v5 = _swiftEmptyArrayStorage;
      do
      {
        sub_10019B17C(v4, (uint64_t)v22);
        uint64_t v6 = v23;
        uint64_t v7 = v24;
        sub_10018AC60(v22, v23);
        uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
        uint64_t v26 = sub_10018B1DC(0, (unint64_t *)&qword_100663540);
        *(void *)&long long v25 = v8;
        sub_100014524((uint64_t)v22);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100455CB8(0, v5[2] + 1, 1);
          uint64_t v5 = v27;
        }
        unint64_t v10 = v5[2];
        unint64_t v9 = v5[3];
        if (v10 >= v9 >> 1)
        {
          sub_100455CB8(v9 > 1, v10 + 1, 1);
          uint64_t v5 = v27;
        }
        _OWORD v5[2] = v10 + 1;
        sub_1001C5DD4(&v25, &v5[4 * v10 + 4]);
        v4 += 40;
        --v3;
      }
      while (v3);
      swift_bridgeObjectRelease();
    }
    long long v18 = &selRef_predicateMatchingAllPredicates_;
  }
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(self, *v18, isa);

  return v20;
}

void sub_10043DDE8(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  type metadata accessor for LicenseStorageEntity.Entity();
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v7 = a2;
  id v8 = [v6 initWithPersistentID:a1 onConnection:v7];
  LODWORD(a1) = [v8 existsInDatabase];

  if (!a1)
  {

    id v8 = 0;
  }
  *a3 = v8;
}

uint64_t sub_10043DE84(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  char v9 = a1 & 1;
  uint64_t v20 = 0;
  type metadata accessor for LicenseStorageEntity.Entity();
  id v10 = [objc_allocWithZone((Class)ASUSQLiteQueryDescriptor) initWithEntityClass:swift_getObjCClassFromMetadata() memoryEntityClass:0];
  id v11 = sub_10043DAF0(v9, a2);
  [v10 setPredicate:v11];

  id v12 = [objc_allocWithZone((Class)ASUSQLiteQuery) initOnConnection:a5 descriptor:v10];
  uint64_t v13 = (void *)swift_allocObject();
  _OWORD v13[2] = &v20;
  v13[3] = a3;
  v13[4] = a4;
  v13[5] = a5;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1001A2178;
  *(void *)(v14 + 24) = v13;
  aBlock[4] = sub_1001A2194;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100248D44;
  aBlock[3] = &unk_100646820;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = a5;
  swift_retain();
  swift_release();
  [v12 enumeratePersistentIDsUsingBlock:v15];

  _Block_release(v15);
  LOBYTE(a5) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a5)
  {
    __break(1u);
  }
  else
  {
    uint64_t v18 = v20;
    swift_release();
    return v18;
  }
  return result;
}

uint64_t type metadata accessor for LicenseStorageDatabaseTransaction(uint64_t a1)
{
  return sub_10019B200(a1, qword_1006635A0);
}

uint64_t sub_10043E0B8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10017B924(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10043E108()
{
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10043E140()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10043E150()
{
  return swift_release();
}

uint64_t sub_10043E158()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10043E198()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 72)) {
    sub_100014524(v0 + 48);
  }

  return _swift_deallocObject(v0, 97, 7);
}

uint64_t sub_10043E1E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void **sub_10043E230(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    id v7 = (char *)a1 + v6;
    id v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for URL();
    id v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    id v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_10043E310(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void **sub_10043E388(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  id v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  id v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

void **sub_10043E41C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  id v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  id v10 = (char *)a1 + v9;
  id v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

void *sub_10043E4AC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void **sub_10043E528(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_10043E5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10043E5C8);
}

uint64_t sub_10043E5C8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    id v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10043E678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10043E68C);
}

void *sub_10043E68C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10043E734()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10043E7D0(char a1)
{
  unint64_t result = 0xD00000000000001BLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x726556656C707061;
      break;
    case 2:
      unint64_t result = 0x657449656C707061;
      break;
    case 3:
      unint64_t result = 0x6449656C646E7562;
      break;
    case 4:
      unint64_t result = 0x6556656C646E7562;
      break;
    case 5:
    case 14:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0x6D726F6674616C70;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 10:
      unint64_t result = 0x73746E6169726176;
      break;
    case 11:
      unint64_t result = 0x7361746C6564;
      break;
    case 12:
      unint64_t result = 0x6174736E49707061;
      break;
    case 13:
      unint64_t result = 0xD000000000000016;
      break;
    case 15:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10043E9C4(char a1)
{
  unint64_t result = 0xD00000000000001BLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x726556656C707061;
      break;
    case 2:
      unint64_t result = 0x657449656C707061;
      break;
    case 3:
      unint64_t result = 0x6449656C646E7562;
      break;
    case 4:
      unint64_t result = 0x6556656C646E7562;
      break;
    case 5:
    case 14:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0x6D726F6674616C70;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 10:
      unint64_t result = 0x73746E6169726176;
      break;
    case 11:
      unint64_t result = 0x7361746C6564;
      break;
    case 12:
      unint64_t result = 0x6174736E49707061;
      break;
    case 13:
      unint64_t result = 0xD000000000000016;
      break;
    case 15:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10043EBB8(char a1)
{
  unint64_t result = 0x6174736E4978616DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10043EC64(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_10043E7D0(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_10043E7D0(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_10043ECF0()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_10043E7D0(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_10043ED54()
{
  sub_10043E7D0(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10043EDA8()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_10043E7D0(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_10043EE08@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100441284(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_10043EE38@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10043E7D0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10043EE64()
{
  return sub_10043E9C4(*v0);
}

unint64_t sub_10043EE6C@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100441284(a1);
  *a2 = result;
  return result;
}

void sub_10043EE94(unsigned char *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_10043EEA0(uint64_t a1)
{
  unint64_t v2 = sub_100443B90();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10043EEDC(uint64_t a1)
{
  unint64_t v2 = sub_100443B90();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_10043EF18()
{
  return sub_10043EBB8(*v0);
}

uint64_t sub_10043EF20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1004412D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10043EF48(uint64_t a1)
{
  unint64_t v2 = sub_1004448AC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10043EF84(uint64_t a1)
{
  unint64_t v2 = sub_1004448AC();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10043EFC0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100441494(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_10043F00C(unsigned __int8 *a1, char *a2)
{
  return sub_10051E050(*a1, *a2);
}

Swift::Int sub_10043F018()
{
  return Hasher._finalize()();
}

uint64_t sub_10043F110()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10043F1F0()
{
  return Hasher._finalize()();
}

unint64_t sub_10043F2E4@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1004416D8(*a1);
  *a2 = result;
  return result;
}

void sub_10043F314(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE900000000000068;
  uint64_t v3 = 0x7461507465737361;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEE00736C69617465;
      uint64_t v3 = 0x44746E6169726176;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "installTargets");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      *(void *)a1 = 0x644963696C627570;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_10043F3CC()
{
  uint64_t result = 0x7461507465737361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x44746E6169726176;
      break;
    case 2:
      uint64_t result = 0x546C6C6174736E69;
      break;
    case 3:
      uint64_t result = 0x644963696C627570;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10043F478@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1004416D8(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10043F4A0(uint64_t a1)
{
  unint64_t v2 = sub_100443E04();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10043F4DC(uint64_t a1)
{
  unint64_t v2 = sub_100443E04();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10043F518@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100441724(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_10043F55C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10051E218(*a1, *a2);
}

Swift::Int sub_10043F568()
{
  return Hasher._finalize()();
}

uint64_t sub_10043F624()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10043F6CC()
{
  return Hasher._finalize()();
}

unint64_t sub_10043F784@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100441AE4(*a1);
  *a2 = result;
  return result;
}

void sub_10043F7B4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEE00737465677261;
  unint64_t v4 = 0xEE0064496E6F6973;
  uint64_t v5 = 0x726556656C707061;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6E6F6973726576;
    unint64_t v4 = 0xE700000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x546C6C6174736E69;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_10043F82C()
{
  uint64_t v1 = 0x726556656C707061;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E6F6973726576;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x546C6C6174736E69;
  }
}

unint64_t sub_10043F8A0@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100441AE4(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10043F8C8(uint64_t a1)
{
  unint64_t v2 = sub_100444A20();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10043F904(uint64_t a1)
{
  unint64_t v2 = sub_100444A20();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10043F940@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100441B30(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_10043F970(unsigned __int8 *a1, char *a2)
{
  return sub_10051E35C(*a1, *a2);
}

Swift::Int sub_10043F97C()
{
  return sub_10040FA90();
}

uint64_t sub_10043F984()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10043FA80()
{
  return sub_10044A774();
}

unint64_t sub_10043FA88@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100441DC4(*a1);
  *a2 = result;
  return result;
}

void sub_10043FAB8(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE900000000000068;
  uint64_t v3 = 0x7461507465737361;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEC000000736C6961;
      uint64_t v3 = 0x74654461746C6564;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x644963696C627570;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 3:
      strcpy((char *)a1, "sourceVariant");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 4:
      *(void *)a1 = 0xD000000000000016;
      *(void *)(a1 + 8) = 0x80000001005B82E0;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_10043FB90()
{
  unint64_t result = 0x7461507465737361;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x74654461746C6564;
      break;
    case 2:
      unint64_t result = 0x644963696C627570;
      break;
    case 3:
      unint64_t result = 0x6156656372756F73;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10043FC58@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100441DC4(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10043FC80(uint64_t a1)
{
  unint64_t v2 = sub_100443F54();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10043FCBC(uint64_t a1)
{
  unint64_t v2 = sub_100443F54();

  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_10043FCF8@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100441E10(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(void *)(a2 + 96) = v8;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_10043FD58(char *a1, char *a2)
{
  return sub_10051E5FC(*a1, *a2);
}

Swift::Int sub_10043FD64()
{
  return Hasher._finalize()();
}

uint64_t sub_10043FDD8()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10043FE38()
{
  return Hasher._finalize()();
}

uint64_t sub_10043FEA8@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &off_100639C78;
  return sub_1002D86FC(v2, a1, a2);
}

void sub_10043FEB4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 29551;
  if (!*v1) {
    uint64_t v2 = 0x656369766564;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE200000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_10043FEE4()
{
  if (*v0) {
    return 29551;
  }
  else {
    return 0x656369766564;
  }
}

uint64_t sub_10043FF10@<X0>(Swift::String string@<0:X0, 8:X1>, char *a2@<X8>)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100639C78, v3);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_10043FF74(uint64_t a1)
{
  unint64_t v2 = sub_100443F00();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10043FFB0(uint64_t a1)
{
  unint64_t v2 = sub_100443F00();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10043FFEC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1004422BC(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_10044003C()
{
  unint64_t v1 = 0x736568736168;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x73736572706D6F63;
  }
}

uint64_t sub_1004400A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1004424F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004400CC(uint64_t a1)
{
  unint64_t v2 = sub_100444900();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100440108(uint64_t a1)
{
  unint64_t v2 = sub_100444900();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100440144@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100442664(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_100440174(char *a1, char *a2)
{
  return sub_10051E560(*a1, *a2);
}

Swift::Int sub_100440180()
{
  return Hasher._finalize()();
}

uint64_t sub_1004401F8()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10044025C()
{
  return Hasher._finalize()();
}

uint64_t sub_1004402D0@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &off_100639CC8;
  return sub_1002D86FC(v2, a1, a2);
}

void sub_1004402DC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 3490893;
  if (*v1) {
    uint64_t v2 = 0x363532616873;
  }
  unint64_t v3 = 0xE300000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100440310()
{
  return RawRepresentable<>.init(from:)();
}

unint64_t sub_100440370()
{
  unint64_t result = 0x687469726F676C61;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7A69536B6E756863;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100440418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1004428A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100440440(uint64_t a1)
{
  unint64_t v2 = sub_1004450B8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10044047C(uint64_t a1)
{
  unint64_t v2 = sub_1004450B8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004404B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100442A64(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = result & 1;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(void *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_1004404F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100442CF4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t destroy for ADPManifest.Variant()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ADPManifest.Variant(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ADPManifest.Variant(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ADPManifest.Variant(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ADPManifest.Variant()
{
  return &type metadata for ADPManifest.Variant;
}

ValueMetadata *type metadata accessor for ADPManifest.AppInstallDeterminants()
{
  return &type metadata for ADPManifest.AppInstallDeterminants;
}

ValueMetadata *type metadata accessor for ADPManifest.InstallTarget()
{
  return &type metadata for ADPManifest.InstallTarget;
}

uint64_t destroy for ADPManifest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ADPManifest(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  long long v6 = *(_OWORD *)(a2 + 72);
  long long v7 = *(_OWORD *)(a2 + 88);
  long long v8 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 114) = *(_OWORD *)(a2 + 114);
  *(_OWORD *)(a1 + 104) = v8;
  *(_OWORD *)(a1 + 88) = v7;
  *(_OWORD *)(a1 + 72) = v6;
  uint64_t v9 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v9;
  uint64_t v10 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v10;
  uint64_t v11 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v11;
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(_WORD *)(a1 + 185) = *(_WORD *)(a2 + 185);
  uint64_t v12 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ADPManifest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 72);
  long long v5 = *(_OWORD *)(a2 + 88);
  long long v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 114) = *(_OWORD *)(a2 + 114);
  *(_OWORD *)(a1 + 104) = v6;
  *(_OWORD *)(a1 + 88) = v5;
  *(_OWORD *)(a1 + 72) = v4;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v7;
  *(unsigned char *)(a1 + 185) = *(unsigned char *)(a2 + 185);
  *(unsigned char *)(a1 + 186) = *(unsigned char *)(a2 + 186);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ADPManifest(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for ADPManifest(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 114) = *(_OWORD *)(a2 + 114);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(_WORD *)(a1 + 185) = *(_WORD *)(a2 + 185);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ADPManifest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 208)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ADPManifest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 208) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ADPManifest()
{
  return &type metadata for ADPManifest;
}

uint64_t destroy for ADPManifest.Delta()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ADPManifest.Delta(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ADPManifest.Delta(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  return a1;
}

__n128 initializeWithTake for ADPManifest.Delta(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for ADPManifest.Delta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for ADPManifest.Delta(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ADPManifest.Delta(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ADPManifest.Delta()
{
  return &type metadata for ADPManifest.Delta;
}

uint64_t sub_100440F64@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_10044124C(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

unint64_t sub_100440FA8()
{
  unint64_t result = qword_1006635D8;
  if (!qword_1006635D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006635D8);
  }
  return result;
}

unint64_t sub_100441000()
{
  unint64_t result = qword_1006635E0;
  if (!qword_1006635E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006635E0);
  }
  return result;
}

unint64_t sub_100441058()
{
  unint64_t result = qword_1006635E8;
  if (!qword_1006635E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006635E8);
  }
  return result;
}

unint64_t sub_1004410B0()
{
  unint64_t result = qword_1006635F0;
  if (!qword_1006635F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006635F0);
  }
  return result;
}

__n128 sub_100441104@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100442EFC(a1, v10);
  if (!v2)
  {
    long long v5 = v10[11];
    *(_OWORD *)(a2 + 160) = v10[10];
    *(_OWORD *)(a2 + 176) = v5;
    *(_OWORD *)(a2 + 192) = v10[12];
    long long v6 = v10[7];
    *(_OWORD *)(a2 + 96) = v10[6];
    *(_OWORD *)(a2 + 112) = v6;
    long long v7 = v10[9];
    *(_OWORD *)(a2 + 128) = v10[8];
    *(_OWORD *)(a2 + 144) = v7;
    long long v8 = v10[3];
    *(_OWORD *)(a2 + 32) = v10[2];
    *(_OWORD *)(a2 + 48) = v8;
    long long v9 = v10[5];
    *(_OWORD *)(a2 + 64) = v10[4];
    *(_OWORD *)(a2 + 80) = v9;
    __n128 result = (__n128)v10[1];
    *(_OWORD *)a2 = v10[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

unint64_t sub_100441170(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1004411A0();
  unint64_t result = sub_1004411F4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1004411A0()
{
  unint64_t result = qword_1006635F8;
  if (!qword_1006635F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006635F8);
  }
  return result;
}

unint64_t sub_1004411F4()
{
  unint64_t result = qword_100663600;
  if (!qword_100663600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663600);
  }
  return result;
}

uint64_t sub_10044124C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

unint64_t sub_100441284(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100639958, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0x10) {
    return 16;
  }
  else {
    return v3;
  }
}

uint64_t sub_1004412D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6174736E4978616DLL && a2 == 0xEE00657A69536C6CLL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001005BF960 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001005BF980 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001005BF9A0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100441494@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000172F8(&qword_100663728);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018AC60(a1, a1[3]);
  sub_1004448AC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_100014524((uint64_t)a1);
  }
  char v29 = 0;
  uint64_t v9 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  char v11 = v10;
  char v28 = 1;
  uint64_t v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  int v25 = v13;
  uint64_t v24 = v12;
  char v27 = 2;
  uint64_t v14 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  int v22 = v15;
  uint64_t v23 = v14;
  char v26 = 3;
  uint64_t v16 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  unint64_t v17 = v8;
  char v19 = v18;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
  uint64_t result = sub_100014524((uint64_t)a1);
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = v11 & 1;
  *(void *)(a2 + 16) = v24;
  *(unsigned char *)(a2 + 24) = v25 & 1;
  *(void *)(a2 + 32) = v23;
  *(unsigned char *)(a2 + 40) = v22 & 1;
  *(void *)(a2 + 48) = v16;
  *(unsigned char *)(a2 + 56) = v19 & 1;
  return result;
}

unint64_t sub_1004416D8(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100639AF8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t sub_100441724@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1000172F8(&qword_100663670);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018AC60(a1, a1[3]);
  sub_100443E04();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_100014524((uint64_t)a1);
  }
  LOBYTE(v30) = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  uint64_t v29 = v9;
  char v33 = 1;
  sub_100443E58();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v12 = v31;
  uint64_t v26 = v32;
  uint64_t v27 = v30;
  sub_1000172F8(&qword_100663688);
  char v33 = 2;
  sub_100444954(&qword_100663690, &qword_100663688, (void (*)(void))sub_100443EAC);
  uint64_t v28 = v12;
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v13 = v30;
  LOBYTE(v30) = 3;
  uint64_t v25 = v13;
  swift_bridgeObjectRetain();
  uint64_t v14 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v16 = v15;
  unint64_t v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v24 = v14;
  v17(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v18 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100014524((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v19 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v29;
  a2[1] = v11;
  uint64_t v21 = v27;
  a2[2] = v18;
  a2[3] = v21;
  uint64_t v22 = v26;
  a2[4] = v19;
  a2[5] = v22;
  a2[6] = v24;
  a2[7] = v16;
  return result;
}

unint64_t sub_100441AE4(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100639B78, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t sub_100441B30(void *a1)
{
  uint64_t v3 = sub_1000172F8(&qword_100663760);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  sub_10018AC60(a1, v7);
  sub_100444A20();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_100014524((uint64_t)a1);
  }
  else
  {
    sub_1000172F8(&qword_100663688);
    char v10 = 0;
    sub_100444954(&qword_100663690, &qword_100663688, (void (*)(void))sub_100443EAC);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v7 = v11;
    char v10 = 1;
    sub_10024A5E0();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    LOBYTE(v11) = 2;
    KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_100014524((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_100441DC4(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100639BE0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

uint64_t sub_100441E10@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1000172F8(&qword_1006636B0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018AC60(a1, a1[3]);
  sub_100443F54();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_100014524((uint64_t)a1);
  }
  LOBYTE(v36) = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  uint64_t v35 = v9;
  char v40 = 1;
  sub_100443E58();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v12 = v37;
  uint64_t v31 = v38;
  uint64_t v32 = v36;
  LOBYTE(v36) = 2;
  swift_bridgeObjectRetain();
  uint64_t v34 = 0;
  uint64_t v29 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v30 = v12;
  char v40 = 3;
  uint64_t v14 = v13;
  sub_100443FA8();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v33 = v14;
  uint64_t v15 = v36;
  uint64_t v16 = v39;
  uint64_t v26 = v38;
  uint64_t v27 = v37;
  LOBYTE(v36) = 4;
  swift_bridgeObjectRetain();
  uint64_t v28 = v16;
  swift_bridgeObjectRetain();
  uint64_t v17 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v19 = v18;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v34 = v17;
  v20(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v21 = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v22 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100014524((uint64_t)a1);
  uint64_t v23 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v35;
  a2[1] = v11;
  a2[2] = v29;
  a2[3] = v21;
  uint64_t v25 = v27;
  a2[4] = v15;
  a2[5] = v25;
  a2[6] = v26;
  a2[7] = v22;
  a2[8] = v34;
  a2[9] = v19;
  a2[10] = v32;
  a2[11] = v23;
  a2[12] = v31;
  return result;
}

uint64_t sub_1004422BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000172F8(&qword_1006636A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018AC60(a1, a1[3]);
  sub_100443F00();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_100014524((uint64_t)a1);
  }
  LOBYTE(v17) = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  char v21 = 1;
  sub_100443CB4();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  long long v16 = v17;
  uint64_t v12 = v18;
  uint64_t v13 = v19;
  uint64_t v14 = v20;
  swift_bridgeObjectRetain();
  sub_100014524((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(_OWORD *)(a2 + 16) = v16;
  *(void *)(a2 + 32) = v12;
  *(void *)(a2 + 40) = v13;
  *(void *)(a2 + 48) = v14;
  return result;
}

uint64_t sub_1004424F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736572706D6F63 && a2 == 0xEE00657A69536465;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736568736168 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001005BD950)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100442664(void *a1)
{
  uint64_t v3 = sub_1000172F8(&qword_100663738);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_10018AC60(a1, v7);
  sub_100444900();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_100014524((uint64_t)a1);
  }
  else
  {
    v9[31] = 0;
    uint64_t v7 = KeyedDecodingContainer.decode(_:forKey:)();
    sub_1000172F8(&qword_100663748);
    v9[15] = 1;
    sub_100444954(&qword_100663750, &qword_100663748, (void (*)(void))sub_1004449CC);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v9[14] = 2;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    sub_100014524((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1004428A4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x687469726F676C61 && a2 == 0xE90000000000006DLL
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7A69536B6E756863 && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001005BF9C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001005BF9E0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100442A64(void *a1)
{
  uint64_t v3 = sub_1000172F8(&qword_1006637B8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  sub_10018AC60(a1, v7);
  sub_1004450B8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_100014524((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    sub_10044510C();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v7 = v10;
    LOBYTE(v10) = 1;
    KeyedDecodingContainer.decode(_:forKey:)();
    sub_1000172F8((uint64_t *)&unk_10065C5D0);
    char v11 = 2;
    unint64_t v9 = sub_100288278();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    char v11 = 3;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_100014524((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_100442CF4(void *a1)
{
  sub_10018AC60(a1, a1[3]);
  dispatch thunk of Decoder.singleValueContainer()();
  if (v1)
  {
    swift_errorRelease();
  }
  else
  {
    sub_10018AC60(v12, v12[3]);
    sub_1000172F8((uint64_t *)&unk_10065C5D0);
    sub_100288278();
    dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)();
    uint64_t v5 = v12[6];
    sub_100014524((uint64_t)v12);
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      uint64_t v3 = 0;
      uint64_t v7 = (uint64_t *)(v5 + 40);
      while (1)
      {
        uint64_t v9 = *(v7 - 1);
        uint64_t v10 = *v7;
        BOOL v11 = v9 == 0x6C7074656B72616DLL && v10 == 0xEB00000000656361;
        if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          uint64_t v8 = 1;
        }
        else
        {
          if (v9 != 0xD000000000000013 || v10 != 0x80000001005BF940)
          {
            uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
            if ((result & 1) == 0)
            {
              __break(1u);
              return result;
            }
          }
          uint64_t v8 = 2;
        }
        v7 += 2;
        v3 |= v8;
        if (!--v6)
        {
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = 0;
LABEL_5:
  sub_100014524((uint64_t)a1);
  return v3;
}

uint64_t sub_100442EFC@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = sub_1000172F8(&qword_100663608);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v119 = a1;
  sub_10018AC60(a1, v9);
  sub_100443B90();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_100014524((uint64_t)v119);
  }
  uint64_t v10 = v6;
  LOBYTE(v80) = 0;
  uint64_t v11 = KeyedDecodingContainer.decode(_:forKey:)();
  LOBYTE(v67) = 1;
  sub_10024A5E0();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v60 = v11;
  unint64_t v12 = v80;
  LOBYTE(v67) = 2;
  sub_10024A634();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  unint64_t v59 = v12;
  unint64_t v13 = v80;
  LOBYTE(v80) = 3;
  uint64_t v14 = KeyedDecodingContainer.decode(_:forKey:)();
  *(void *)&long long v58 = v13;
  *((void *)&v58 + 1) = v14;
  LOBYTE(v80) = 4;
  uint64_t v16 = v15;
  swift_bridgeObjectRetain();
  uint64_t v17 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v66 = v16;
  uint64_t v57 = v17;
  LOBYTE(v80) = 5;
  uint64_t v65 = v18;
  swift_bridgeObjectRetain();
  uint64_t v56 = KeyedDecodingContainer.decode(_:forKey:)();
  LOBYTE(v67) = 6;
  uint64_t v20 = v19;
  sub_100443BE4();
  uint64_t v64 = v20;
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  unint64_t v54 = v81;
  unint64_t v55 = v80;
  uint64_t v52 = *((void *)&v82 + 1);
  uint64_t v53 = v82;
  uint64_t v50 = v84;
  uint64_t v51 = v83;
  uint64_t v49 = v85;
  int v47 = BYTE1(v86);
  int v48 = v86;
  char v118 = BYTE1(v86);
  sub_1000172F8((uint64_t *)&unk_10065C5D0);
  LOBYTE(v67) = 7;
  unint64_t v63 = sub_100288278();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  unint64_t v21 = v80;
  sub_1000172F8(&qword_100663620);
  LOBYTE(v67) = 8;
  sub_100443C38();
  unint64_t v46 = v21;
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  LOBYTE(v67) = 9;
  unint64_t v45 = v80;
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  unint64_t v22 = v80;
  sub_1000172F8(&qword_100663638);
  LOBYTE(v67) = 10;
  sub_100444954(&qword_100663640, &qword_100663638, (void (*)(void))sub_100443D08);
  unint64_t v63 = v22;
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  unint64_t v23 = v80;
  sub_1000172F8(&qword_100663650);
  LOBYTE(v67) = 11;
  sub_100444954(&qword_100663658, &qword_100663650, (void (*)(void))sub_100443D5C);
  unint64_t v62 = v23;
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  unint64_t v24 = v80;
  LOBYTE(v80) = 12;
  unint64_t v61 = v24;
  swift_bridgeObjectRetain();
  uint64_t v44 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v26 = v25;
  LOBYTE(v67) = 13;
  sub_100443DB0();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  unint64_t v43 = v80;
  int v41 = v81;
  char v115 = v81;
  LOBYTE(v80) = 14;
  int v42 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  char v112 = 15;
  LODWORD(v23) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
  *(void *)&long long v67 = v60;
  *((void *)&v67 + 1) = v59;
  long long v68 = v58;
  uint64_t v27 = v65;
  *(void *)&long long v69 = v66;
  *((void *)&v69 + 1) = v57;
  *(void *)&long long v70 = v65;
  *((void *)&v70 + 1) = v56;
  *(void *)&long long v71 = v64;
  *((void *)&v71 + 1) = v55;
  *(void *)&long long v72 = v54;
  *((void *)&v72 + 1) = v53;
  *(void *)&long long v73 = v52;
  *((void *)&v73 + 1) = v51;
  *(void *)&long long v74 = v50;
  *((void *)&v74 + 1) = v49;
  LOBYTE(v75) = v48;
  BYTE1(v75) = v47;
  *((void *)&v75 + 1) = v46;
  *(void *)&long long v76 = v45;
  *((void *)&v76 + 1) = v63;
  *(void *)&long long v77 = v44;
  *((void *)&v77 + 1) = v26;
  *(void *)&long long v78 = v43;
  BYTE8(v78) = v41;
  BYTE9(v78) = v42;
  HIDWORD(v40) = v23;
  BYTE10(v78) = v23;
  unint64_t v28 = v62;
  *(void *)&long long v79 = v62;
  *((void *)&v79 + 1) = v61;
  sub_10035B39C((uint64_t)&v67);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v29 = v64;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v30 = v63;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v31 = v28;
  swift_bridgeObjectRelease();
  unint64_t v32 = v61;
  swift_bridgeObjectRelease();
  sub_100014524((uint64_t)v119);
  unint64_t v80 = v60;
  unint64_t v81 = v59;
  long long v82 = v58;
  uint64_t v83 = v66;
  uint64_t v84 = v57;
  uint64_t v85 = v27;
  uint64_t v86 = v56;
  uint64_t v87 = v29;
  unint64_t v88 = v55;
  unint64_t v89 = v54;
  uint64_t v90 = v53;
  uint64_t v91 = v52;
  uint64_t v92 = v51;
  uint64_t v93 = v50;
  uint64_t v94 = v49;
  char v95 = v48;
  char v96 = v118;
  int v97 = v116;
  __int16 v98 = v117;
  unint64_t v99 = v46;
  unint64_t v100 = v45;
  unint64_t v101 = v30;
  uint64_t v102 = v44;
  uint64_t v103 = v26;
  unint64_t v104 = v43;
  char v105 = v115;
  char v106 = v42;
  char v107 = BYTE4(v40);
  int v108 = v113;
  char v109 = v114;
  unint64_t v110 = v31;
  unint64_t v111 = v32;
  uint64_t result = sub_10035B440((uint64_t)&v80);
  long long v34 = v78;
  a2[10] = v77;
  a2[11] = v34;
  a2[12] = v79;
  long long v35 = v74;
  a2[6] = v73;
  a2[7] = v35;
  long long v36 = v76;
  a2[8] = v75;
  a2[9] = v36;
  long long v37 = v70;
  a2[2] = v69;
  a2[3] = v37;
  long long v38 = v72;
  a2[4] = v71;
  a2[5] = v38;
  long long v39 = v68;
  *a2 = v67;
  a2[1] = v39;
  return result;
}

unint64_t sub_100443B90()
{
  unint64_t result = qword_100663610;
  if (!qword_100663610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663610);
  }
  return result;
}

unint64_t sub_100443BE4()
{
  unint64_t result = qword_100663618;
  if (!qword_100663618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663618);
  }
  return result;
}

unint64_t sub_100443C38()
{
  unint64_t result = qword_100663628;
  if (!qword_100663628)
  {
    sub_10017B924(&qword_100663620);
    sub_100443CB4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663628);
  }
  return result;
}

unint64_t sub_100443CB4()
{
  unint64_t result = qword_100663630;
  if (!qword_100663630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663630);
  }
  return result;
}

unint64_t sub_100443D08()
{
  unint64_t result = qword_100663648;
  if (!qword_100663648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663648);
  }
  return result;
}

unint64_t sub_100443D5C()
{
  unint64_t result = qword_100663660;
  if (!qword_100663660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663660);
  }
  return result;
}

unint64_t sub_100443DB0()
{
  unint64_t result = qword_100663668;
  if (!qword_100663668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663668);
  }
  return result;
}

unint64_t sub_100443E04()
{
  unint64_t result = qword_100663678;
  if (!qword_100663678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663678);
  }
  return result;
}

unint64_t sub_100443E58()
{
  unint64_t result = qword_100663680;
  if (!qword_100663680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663680);
  }
  return result;
}

unint64_t sub_100443EAC()
{
  unint64_t result = qword_100663698;
  if (!qword_100663698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663698);
  }
  return result;
}

unint64_t sub_100443F00()
{
  unint64_t result = qword_1006636A8;
  if (!qword_1006636A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006636A8);
  }
  return result;
}

unint64_t sub_100443F54()
{
  unint64_t result = qword_1006636B8;
  if (!qword_1006636B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006636B8);
  }
  return result;
}

unint64_t sub_100443FA8()
{
  unint64_t result = qword_1006636C0;
  if (!qword_1006636C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006636C0);
  }
  return result;
}

uint64_t destroy for ADPManifest.Delta.SourceVariant()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ADPManifest.Delta.SourceVariant(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ADPManifest.Delta.SourceVariant(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ADPManifest.Delta.SourceVariant(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ADPManifest.Delta.SourceVariant()
{
  return &type metadata for ADPManifest.Delta.SourceVariant;
}

unsigned char *storeEnumTagSinglePayload for ADPManifest.Delta.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10044421CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ADPManifest.Delta.CodingKeys()
{
  return &type metadata for ADPManifest.Delta.CodingKeys;
}

ValueMetadata *type metadata accessor for ADPManifest.InstallTarget.CodingKeys()
{
  return &type metadata for ADPManifest.InstallTarget.CodingKeys;
}

ValueMetadata *type metadata accessor for ADPManifest.VariantDetails()
{
  return &type metadata for ADPManifest.VariantDetails;
}

ValueMetadata *type metadata accessor for ADPManifest.Variant.CodingKeys()
{
  return &type metadata for ADPManifest.Variant.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ADPManifest.BackgroundAssetMetadata(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ADPManifest.BackgroundAssetMetadata(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 57) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ADPManifest.BackgroundAssetMetadata()
{
  return &type metadata for ADPManifest.BackgroundAssetMetadata;
}

uint64_t getEnumTagSinglePayload for ADPManifest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ADPManifest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *unint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100444454);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ADPManifest.CodingKeys()
{
  return &type metadata for ADPManifest.CodingKeys;
}

unint64_t sub_100444490()
{
  unint64_t result = qword_1006636C8;
  if (!qword_1006636C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006636C8);
  }
  return result;
}

unint64_t sub_1004444E8()
{
  unint64_t result = qword_1006636D0;
  if (!qword_1006636D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006636D0);
  }
  return result;
}

unint64_t sub_100444540()
{
  unint64_t result = qword_1006636D8;
  if (!qword_1006636D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006636D8);
  }
  return result;
}

unint64_t sub_100444598()
{
  unint64_t result = qword_1006636E0;
  if (!qword_1006636E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006636E0);
  }
  return result;
}

unint64_t sub_1004445F0()
{
  unint64_t result = qword_1006636E8;
  if (!qword_1006636E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006636E8);
  }
  return result;
}

unint64_t sub_100444648()
{
  unint64_t result = qword_1006636F0;
  if (!qword_1006636F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006636F0);
  }
  return result;
}

unint64_t sub_1004446A0()
{
  unint64_t result = qword_1006636F8;
  if (!qword_1006636F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006636F8);
  }
  return result;
}

unint64_t sub_1004446F8()
{
  unint64_t result = qword_100663700;
  if (!qword_100663700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663700);
  }
  return result;
}

unint64_t sub_100444750()
{
  unint64_t result = qword_100663708;
  if (!qword_100663708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663708);
  }
  return result;
}

unint64_t sub_1004447A8()
{
  unint64_t result = qword_100663710;
  if (!qword_100663710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663710);
  }
  return result;
}

unint64_t sub_100444800()
{
  unint64_t result = qword_100663718;
  if (!qword_100663718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663718);
  }
  return result;
}

unint64_t sub_100444858()
{
  unint64_t result = qword_100663720;
  if (!qword_100663720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663720);
  }
  return result;
}

unint64_t sub_1004448AC()
{
  unint64_t result = qword_100663730;
  if (!qword_100663730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663730);
  }
  return result;
}

unint64_t sub_100444900()
{
  unint64_t result = qword_100663740;
  if (!qword_100663740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663740);
  }
  return result;
}

uint64_t sub_100444954(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10017B924(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1004449CC()
{
  unint64_t result = qword_100663758;
  if (!qword_100663758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663758);
  }
  return result;
}

unint64_t sub_100444A20()
{
  unint64_t result = qword_100663768;
  if (!qword_100663768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663768);
  }
  return result;
}

ValueMetadata *type metadata accessor for ADPManifest.Delta.SourceVariant.CodingKeys()
{
  return &type metadata for ADPManifest.Delta.SourceVariant.CodingKeys;
}

uint64_t destroy for ADPManifest.Hash()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ADPManifest.Hash(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ADPManifest.Hash(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ADPManifest.Hash(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ADPManifest.Hash(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ADPManifest.Hash(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ADPManifest.Hash()
{
  return &type metadata for ADPManifest.Hash;
}

unsigned char *_s28ManagedAppDistributionDaemon11ADPManifestV5DeltaV13SourceVariantV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100444D58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ADPManifest.VariantDetails.CodingKeys()
{
  return &type metadata for ADPManifest.VariantDetails.CodingKeys;
}

ValueMetadata *type metadata accessor for ADPManifest.BackgroundAssetMetadata.CodingKeys()
{
  return &type metadata for ADPManifest.BackgroundAssetMetadata.CodingKeys;
}

unint64_t sub_100444DA4()
{
  unint64_t result = qword_100663770;
  if (!qword_100663770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663770);
  }
  return result;
}

unint64_t sub_100444DFC()
{
  unint64_t result = qword_100663778;
  if (!qword_100663778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663778);
  }
  return result;
}

unint64_t sub_100444E54()
{
  unint64_t result = qword_100663780;
  if (!qword_100663780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663780);
  }
  return result;
}

unint64_t sub_100444EAC()
{
  unint64_t result = qword_100663788;
  if (!qword_100663788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663788);
  }
  return result;
}

unint64_t sub_100444F04()
{
  unint64_t result = qword_100663790;
  if (!qword_100663790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663790);
  }
  return result;
}

unint64_t sub_100444F5C()
{
  unint64_t result = qword_100663798;
  if (!qword_100663798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663798);
  }
  return result;
}

unint64_t sub_100444FB4()
{
  unint64_t result = qword_1006637A0;
  if (!qword_1006637A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006637A0);
  }
  return result;
}

unint64_t sub_10044500C()
{
  unint64_t result = qword_1006637A8;
  if (!qword_1006637A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006637A8);
  }
  return result;
}

unint64_t sub_100445064()
{
  unint64_t result = qword_1006637B0;
  if (!qword_1006637B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006637B0);
  }
  return result;
}

unint64_t sub_1004450B8()
{
  unint64_t result = qword_1006637C0;
  if (!qword_1006637C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006637C0);
  }
  return result;
}

unint64_t sub_10044510C()
{
  unint64_t result = qword_1006637C8;
  if (!qword_1006637C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006637C8);
  }
  return result;
}

unsigned char *_s28ManagedAppDistributionDaemon11ADPManifestV13InstallTargetV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10044522CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ADPManifest.Hash.Algorithm()
{
  return &type metadata for ADPManifest.Hash.Algorithm;
}

unsigned char *_s28ManagedAppDistributionDaemon11ADPManifestV7VariantV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100445330);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ADPManifest.Hash.CodingKeys()
{
  return &type metadata for ADPManifest.Hash.CodingKeys;
}

unint64_t sub_10044536C()
{
  unint64_t result = qword_1006637D0;
  if (!qword_1006637D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006637D0);
  }
  return result;
}

unint64_t sub_1004453C4()
{
  unint64_t result = qword_1006637D8;
  if (!qword_1006637D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006637D8);
  }
  return result;
}

unint64_t sub_10044541C()
{
  unint64_t result = qword_1006637E0;
  if (!qword_1006637E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006637E0);
  }
  return result;
}

unint64_t sub_100445474()
{
  unint64_t result = qword_1006637E8;
  if (!qword_1006637E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006637E8);
  }
  return result;
}

unint64_t sub_1004454C8()
{
  unint64_t result = qword_1006637F0;
  if (!qword_1006637F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006637F0);
  }
  return result;
}

void sub_10044551C(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000019;
  *(void *)(a1 + 8) = 0x80000001005BA620;
  *(unsigned char *)(a1 + 16) = 0;
}

uint64_t sub_100445540()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeatureEligibility()
{
  return self;
}

uint64_t sub_1004455E8(uint64_t a1)
{
  v1[6] = a1;
  uint64_t v2 = type metadata accessor for Logger();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  return _swift_task_switch(sub_1004456A8, 0, 0);
}

uint64_t sub_1004456A8()
{
  if (*(void *)(*(void *)(v0 + 48) + 16)
    && (unint64_t v1 = sub_100016D20(0xD000000000000019, 0x80000001005BA620), (v2 & 1) != 0))
  {
    sub_1000144C8(*(void *)(*(void *)(v0 + 48) + 56) + 32 * v1, v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
  }
  sub_1000172F8((uint64_t *)&unk_10065C9C0);
  if (swift_dynamicCast() & 1) != 0 && (*(unsigned char *)(v0 + 80))
  {
    uint64_t v9 = 1;
  }
  else
  {
    static Logger.daemon.getter();
    int v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Feature is bag disabled", v5, 2u);
      swift_slowDealloc();
    }
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v6 = *(void *)(v0 + 72);
    uint64_t v8 = *(void *)(v0 + 56);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v9 = 0;
  }
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v10(v9);
}

uint64_t sub_100445840(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 192) = a1;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)&dword_1006638A0 + dword_1006638A0);
  os_log_type_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 200) = v4;
  *os_log_type_t v4 = v2;
  v4[1] = sub_1004458EC;
  return v6(a2);
}

uint64_t sub_1004458EC(char a1)
{
  *(unsigned char *)(*(void *)v1 + 208) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1004459EC, 0, 0);
}

uint64_t sub_1004459EC()
{
  if (*(unsigned char *)(v0 + 208) == 1)
  {
    uint64_t v1 = sub_10000A280();
    uint64_t v2 = v1[2];
    if (v2)
    {
      unint64_t v3 = 0xE900000000000065;
      uint64_t v4 = 0x726F745320707041;
      uint64_t v6 = v1[4];
      uint64_t v5 = v1[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v7 = (void *)sub_100551B90();
      char v8 = sub_10054E494(v6, v5, v7);
      swift_bridgeObjectRelease();
      char v9 = v8 ^ 1;
      if (v6 == 0xD000000000000012 && v5 == 0x80000001005B75E0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0)
        {
          uint64_t v4 = 0x2070704120746F4ELL;
          unint64_t v3 = 0xED000065726F7453;
        }
      }
      sub_1000172F8(&qword_10065C3A0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1005A6B00;
      *(void *)(inited + 32) = 0xD000000000000012;
      *(void *)(inited + 40) = 0x80000001005BFA60;
      *(void *)(inited + 48) = v4;
      *(void *)(inited + 56) = v3;
      *(void *)(inited + 72) = &type metadata for String;
      *(void *)(inited + 80) = 0xD000000000000010;
      *(void *)(inited + 88) = 0x80000001005BFA80;
      *(void *)(inited + 96) = v2;
      *(void *)(inited + 120) = &type metadata for Int;
      *(void *)(inited + 128) = 0xD000000000000025;
      *(void *)(inited + 136) = 0x80000001005BFAA0;
      *(void *)(inited + 168) = &type metadata for Bool;
      *(unsigned char *)(inited + 144) = v9 & 1;
      unint64_t v12 = sub_10044B428(inited);
      sub_1002DFC2C(1, v12);
    }
    swift_bridgeObjectRelease();
  }
  unint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_100445C20(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  sub_1000172F8(&qword_10065B8F0);
  v2[4] = swift_task_alloc();
  v2[5] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Date();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  return _swift_task_switch(sub_100445DA8, 0, 0);
}

uint64_t sub_100445DA8()
{
  static Logger.metrics.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Checking for weekly CA event eligibility", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[11];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[7];
  uint64_t v10 = v0[4];
  uint64_t v9 = v0[5];

  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v11(v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v10, 1, 1, v7);
  sub_10029AD08(1, v10, v9);
  sub_1004463F8(v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7) == 1)
  {
    sub_1004463F8(v0[5]);
LABEL_7:
    static Logger.metrics.getter();
    unint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Posting weekly CA events", v15, 2u);
      swift_slowDealloc();
    }
    uint64_t v16 = v0[12];
    uint64_t v17 = v0[10];

    v11(v16, v17);
    unint64_t v28 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006638B0 + dword_1006638B0);
    uint64_t v18 = (void *)swift_task_alloc();
    v0[15] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1004461AC;
    uint64_t v20 = v0[2];
    uint64_t v19 = v0[3];
    return v28(v20, v19);
  }
  (*(void (**)(void, void, void))(v0[7] + 32))(v0[9], v0[5], v0[6]);
  Date.timeIntervalSinceNow.getter();
  if (v12 < -604800.0)
  {
    (*(void (**)(void, void))(v0[7] + 8))(v0[9], v0[6]);
    goto LABEL_7;
  }
  static Logger.metrics.getter();
  unint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    unint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Ineligible for weekly CA events", v24, 2u);
    swift_slowDealloc();
  }
  uint64_t v25 = v0[13];
  uint64_t v26 = v0[10];

  v11(v25, v26);
  (*(void (**)(void, void))(v0[7] + 8))(v0[9], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

uint64_t sub_1004461AC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1004462A8, 0, 0);
}

uint64_t sub_1004462A8()
{
  Date.init()();
  id v1 = [self standardUserDefaults];
  if (v1)
  {
    os_log_type_t v2 = v1;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    NSString v4 = String._bridgeToObjectiveC()();
    [v2 setObject:isa forKey:v4];
  }
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1004463F8(uint64_t a1)
{
  uint64_t v2 = sub_1000172F8(&qword_10065B8F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10044645C()
{
  unint64_t result = qword_1006638B8;
  if (!qword_1006638B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006638B8);
  }
  return result;
}

uint64_t sub_1004464B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10018AC60(a1, a1[3]);
  dispatch thunk of Decoder.singleValueContainer()();
  if (v2) {
    return sub_100014524((uint64_t)a1);
  }
  sub_10018AC60(v9, v9[3]);
  uint64_t v5 = dispatch thunk of SingleValueDecodingContainer.decode(_:)();
  sub_100447360(v5, v6, (uint64_t *)v10);
  sub_100014524((uint64_t)v9);
  uint64_t result = sub_100014524((uint64_t)a1);
  long long v8 = v10[1];
  *(_OWORD *)a2 = v10[0];
  *(_OWORD *)(a2 + 16) = v8;
  *(void *)(a2 + 32) = v11;
  return result;
}

BOOL sub_10044658C(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  BOOL v4 = v2 == v3;
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v5 = a1[2] < a2[2];
  }
  if (*a1 == *a2) {
    return v5;
  }
  else {
    return *a1 < *a2;
  }
}

BOOL sub_1004465C4(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  BOOL v4 = v3 == v2;
  BOOL v5 = v3 < v2;
  if (v4) {
    BOOL v5 = a2[2] < a1[2];
  }
  if (*a2 == *a1) {
    BOOL v6 = v5;
  }
  else {
    BOOL v6 = *a2 < *a1;
  }
  return !v6;
}

BOOL sub_100446600(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  BOOL v4 = v2 == v3;
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v5 = a1[2] < a2[2];
  }
  if (*a1 == *a2) {
    BOOL v6 = v5;
  }
  else {
    BOOL v6 = *a1 < *a2;
  }
  return !v6;
}

BOOL sub_10044663C(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  BOOL v4 = v3 == v2;
  BOOL v5 = v3 < v2;
  if (v4) {
    BOOL v5 = a2[2] < a1[2];
  }
  if (*a2 == *a1) {
    return v5;
  }
  else {
    return *a2 < *a1;
  }
}

BOOL sub_100446674(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

Swift::Int sub_1004466A4()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[1];
  Swift::UInt v3 = v0[2];
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_10044673C()
{
  Swift::UInt v1 = v0[1];
  Swift::UInt v2 = v0[2];
  Hasher._combine(_:)(*v0);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1004467BC()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[1];
  Swift::UInt v3 = v0[2];
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100446850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100446868(a1, a2, a3, a4, a5, (uint64_t (*)(void *, uint64_t, uint64_t))sub_100446BE8);
}

uint64_t sub_100446868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void *, uint64_t, uint64_t))
{
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1004476D0();
  swift_bridgeObjectRetain();
  uint64_t v9 = String.init<A>(_:)();
  unint64_t v10 = v8;
  if ((v8 & 0x1000000000000000) == 0)
  {
    if ((v8 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v12 = HIBYTE(v10) & 0xF;
    uint64_t v17 = v9;
    uint64_t v18 = v10 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v11 = &v17;
    goto LABEL_7;
  }
  uint64_t v9 = sub_1004D2398();
  unint64_t v14 = v13;
  swift_bridgeObjectRelease();
  unint64_t v10 = v14;
  if ((v14 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v9 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = (void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v11 = (void *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  uint64_t v15 = a6(v11, v12, a5);
  swift_bridgeObjectRelease();
  return v15;
}

unsigned __int8 *sub_10044696C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_100446BE8(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v14 = v9 * a3;
              unsigned __int8 v15 = v11 + v12;
              BOOL v16 = v14 >= v15;
              unint64_t v9 = v14 - v15;
              if (!v16) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_67;
    }
    if (a2)
    {
      unsigned __int8 v26 = a3 + 48;
      unsigned __int8 v27 = a3 + 55;
      unsigned __int8 v28 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v26 = 58;
      }
      else
      {
        unsigned __int8 v28 = 97;
        unsigned __int8 v27 = 65;
      }
      if (result)
      {
        unint64_t v29 = 0;
        do
        {
          unsigned int v30 = *result;
          if (v30 < 0x30 || v30 >= v26)
          {
            if (v30 < 0x41 || v30 >= v27)
            {
              uint64_t v13 = 0;
              if (v30 < 0x61 || v30 >= v28) {
                return (unsigned __int8 *)v13;
              }
              char v31 = -87;
            }
            else
            {
              char v31 = -55;
            }
          }
          else
          {
            char v31 = -48;
          }
          if (!is_mul_ok(v29, a3)) {
            return 0;
          }
          unint64_t v32 = v29 * a3;
          unsigned __int8 v33 = v30 + v31;
          BOOL v16 = __CFADD__(v32, v33);
          unint64_t v29 = v32 + v33;
          if (v16) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v29;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_67:
    __break(1u);
    return result;
  }
  uint64_t v17 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v18 = a3 + 48;
  unsigned __int8 v19 = a3 + 55;
  unsigned __int8 v20 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v18 = 58;
  }
  else
  {
    unsigned __int8 v20 = 97;
    unsigned __int8 v19 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  char v21 = result + 1;
  do
  {
    unsigned int v22 = *v21;
    if (v22 < 0x30 || v22 >= v18)
    {
      if (v22 < 0x41 || v22 >= v19)
      {
        uint64_t v13 = 0;
        if (v22 < 0x61 || v22 >= v20) {
          return (unsigned __int8 *)v13;
        }
        char v23 = -87;
      }
      else
      {
        char v23 = -55;
      }
    }
    else
    {
      char v23 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v24 = v9 * a3;
    unsigned __int8 v25 = v22 + v23;
    BOOL v16 = __CFADD__(v24, v25);
    unint64_t v9 = v24 + v25;
    if (v16) {
      return 0;
    }
    ++v21;
    --v17;
  }
  while (v17);
  return (unsigned __int8 *)v9;
}

uint64_t sub_100446E64(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    unsigned int v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    unsigned int v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    unsigned int v11 = (void *)_StringObject.sharedUTF8.getter();
  }
  uint64_t result = sub_100446F38((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

uint64_t sub_100446F38(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    uint64_t result = sub_1004D1CFC(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_95;
  }
  uint64_t result = String.UTF8View._foreignDistance(from:to:)();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_1004D1CFC(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    uint64_t result = sub_1004D1CFC(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    uint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_91;
  }
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  uint64_t result = String.UTF8View._foreignDistance(from:to:)();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  unsigned __int8 v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    unsigned __int8 v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v31 = a6 + 48;
        unsigned __int8 v32 = a6 + 55;
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v31 = 58;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v32 = 65;
        }
        if (v19)
        {
          uint64_t v24 = 0;
          long long v34 = v19 + 1;
          uint64_t v35 = result - 1;
          do
          {
            unsigned int v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                uint64_t v29 = 0;
                if (v36 < 0x61 || v36 >= v33) {
                  return v29;
                }
                char v37 = -87;
              }
              else
              {
                char v37 = -55;
              }
            }
            else
            {
              char v37 = -48;
            }
            uint64_t v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
              return 0;
            }
            uint64_t v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37))) {
              return 0;
            }
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v39 = a6 + 48;
      unsigned __int8 v40 = a6 + 55;
      unsigned __int8 v41 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v39 = 58;
      }
      else
      {
        unsigned __int8 v41 = 97;
        unsigned __int8 v40 = 65;
      }
      if (v19)
      {
        uint64_t v42 = 0;
        do
        {
          unsigned int v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              uint64_t v29 = 0;
              if (v43 < 0x61 || v43 >= v41) {
                return v29;
              }
              char v44 = -87;
            }
            else
            {
              char v44 = -55;
            }
          }
          else
          {
            char v44 = -48;
          }
          uint64_t v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63) {
            return 0;
          }
          uint64_t v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44))) {
            return 0;
          }
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 48;
      unsigned __int8 v22 = a6 + 55;
      unsigned __int8 v23 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v21 = 58;
      }
      else
      {
        unsigned __int8 v23 = 97;
        unsigned __int8 v22 = 65;
      }
      if (v19)
      {
        uint64_t v24 = 0;
        unsigned __int8 v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              uint64_t v29 = 0;
              if (v27 < 0x61 || v27 >= v23) {
                return v29;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
            return 0;
          }
          uint64_t v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28))) {
            return 0;
          }
          ++v25;
          if (!--v26) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t sub_100447360@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v41[0] = 46;
  v41[1] = 0xE100000000000000;
  unsigned __int8 v40 = v41;
  swift_bridgeObjectRetain_n();
  uint64_t v38 = a1;
  unsigned __int8 v6 = (void *)sub_100365610(2, 0, sub_1004476B0, (uint64_t)v39, a1, a2);
  swift_bridgeObjectRelease();
  uint64_t v7 = v6[2];
  if (!v7) {
    goto LABEL_11;
  }
  uint64_t v8 = v6[4];
  uint64_t v9 = v6[5];
  if (!((v9 ^ (unint64_t)v8) >> 14))
  {
    if (v7 != 1)
    {
      uint64_t result = swift_bridgeObjectRetain();
LABEL_14:
      uint64_t v15 = 0;
      goto LABEL_15;
    }
LABEL_11:
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  unint64_t v11 = v6[6];
  unint64_t v10 = v6[7];
  uint64_t v12 = sub_100446E64(v6[4], v6[5], v11, v10, 10);
  if ((v13 & 0x100) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_100446868(v8, v9, v11, v10, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_10044696C);
    char v18 = v17;
    uint64_t result = swift_bridgeObjectRelease();
    if (v18)
    {
LABEL_5:
      if (v7 == 1)
      {
        uint64_t result = swift_bridgeObjectRelease_n();
LABEL_12:
        uint64_t v19 = 0;
        uint64_t v20 = 0;
        uint64_t v15 = 0;
        goto LABEL_35;
      }
      goto LABEL_14;
    }
  }
  else
  {
    char v14 = v13;
    uint64_t v15 = v12;
    uint64_t result = swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_5;
    }
  }
  if (v7 == 1)
  {
    uint64_t result = swift_bridgeObjectRelease_n();
    uint64_t v19 = 0;
    uint64_t v20 = 0;
LABEL_35:
    *a3 = v15;
    a3[1] = v20;
    a3[2] = v19;
    a3[3] = v38;
    a3[4] = a2;
    return result;
  }
LABEL_15:
  if (v6[2] < 2uLL)
  {
    __break(1u);
    goto LABEL_37;
  }
  unint64_t v21 = v6[8];
  unint64_t v22 = v6[9];
  uint64_t v37 = v15;
  if ((v22 ^ v21) >> 14)
  {
    unint64_t v23 = v6[10];
    unint64_t v24 = v6[11];
    uint64_t result = sub_100446E64(v21, v22, v23, v24, 10);
    if ((v25 & 0x100) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_100446868(v21, v22, v23, v24, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_10044696C);
      char v27 = v26;
      uint64_t result = swift_bridgeObjectRelease();
      if ((v27 & 1) == 0)
      {
LABEL_21:
        if (v7 == 2)
        {
LABEL_22:
          uint64_t result = swift_bridgeObjectRelease_n();
          uint64_t v19 = 0;
LABEL_34:
          uint64_t v15 = v37;
          goto LABEL_35;
        }
        goto LABEL_26;
      }
    }
    else if ((v25 & 1) == 0)
    {
      uint64_t v20 = result;
      goto LABEL_21;
    }
  }
  if (v7 == 2)
  {
    uint64_t result = swift_bridgeObjectRelease_n();
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    goto LABEL_34;
  }
  uint64_t v20 = 0;
LABEL_26:
  if (v6[2] >= 3uLL)
  {
    uint64_t v28 = v6[12];
    uint64_t v29 = v6[13];
    if ((v29 ^ (unint64_t)v28) >> 14)
    {
      unint64_t v30 = v6[14];
      unint64_t v31 = v6[15];
      uint64_t v32 = sub_100446E64(v6[12], v6[13], v30, v31, 10);
      if ((v33 & 0x100) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v34 = sub_100446868(v28, v29, v30, v31, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_10044696C);
        char v35 = v36;
        swift_bridgeObjectRelease_n();
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v34 = v32;
        char v35 = v33;
        uint64_t result = swift_bridgeObjectRelease_n();
      }
      if (v35) {
        uint64_t v19 = 0;
      }
      else {
        uint64_t v19 = v34;
      }
      goto LABEL_34;
    }
    goto LABEL_22;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1004476B0(void *a1)
{
  return sub_100365C10(a1, *(void **)(v1 + 16)) & 1;
}

unint64_t sub_1004476D0()
{
  unint64_t result = qword_1006638C0;
  if (!qword_1006638C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006638C0);
  }
  return result;
}

uint64_t destroy for Version()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Version(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Version(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Version(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Version()
{
  return &type metadata for Version;
}

ValueMetadata *type metadata accessor for InstalledVersion()
{
  return &type metadata for InstalledVersion;
}

uint64_t destroy for UpdateBatch(uint64_t a1)
{
  sub_100014524(a1);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UpdateBatch(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for UpdateBatch(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UpdateBatch(uint64_t a1, uint64_t a2)
{
  sub_100014524(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UpdateBatch(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UpdateBatch(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateBatch()
{
  return &type metadata for UpdateBatch;
}

uint64_t sub_100447A44(char *a1, char *a2)
{
  return sub_10051C858(*a1, *a2);
}

Swift::Int sub_100447A50()
{
  return Hasher._finalize()();
}

uint64_t sub_100447AE8()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100447B6C()
{
  return Hasher._finalize()();
}

uint64_t sub_100447C00@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100639D18, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100447C60(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x657449656C707061;
  if (*v1) {
    uint64_t v2 = 0x726556656C707061;
  }
  unint64_t v3 = 0xEB0000000064496DLL;
  if (*v1) {
    unint64_t v3 = 0xEE0064496E6F6973;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100447CB4@<X0>(Swift::String string@<0:X0, 8:X1>, char *a2@<X8>)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100639D18, v3);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_100447D18(uint64_t a1)
{
  unint64_t v2 = sub_100447F24();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100447D54(uint64_t a1)
{
  unint64_t v2 = sub_100447F24();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100447D90(void *a1)
{
  return sub_100447DB0(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_100447DB0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[0] = a4;
  v12[1] = a5;
  uint64_t v7 = sub_1000172F8(&qword_1006638C8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018AC60(a1, a1[3]);
  sub_100447F24();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v14 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v5)
  {
    char v13 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_100447F24()
{
  unint64_t result = qword_1006638D0;
  if (!qword_1006638D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006638D0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InstalledVersion.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100448044);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InstalledVersion.CodingKeys()
{
  return &type metadata for InstalledVersion.CodingKeys;
}

unint64_t sub_100448080()
{
  unint64_t result = qword_1006638D8;
  if (!qword_1006638D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006638D8);
  }
  return result;
}

unint64_t sub_1004480D8()
{
  unint64_t result = qword_1006638E0;
  if (!qword_1006638E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006638E0);
  }
  return result;
}

unint64_t sub_100448130()
{
  unint64_t result = qword_1006638E8;
  if (!qword_1006638E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006638E8);
  }
  return result;
}

void *sub_100448184(uint64_t a1)
{
  double v1 = (double)a1;
  if ((unint64_t)(a1 - 1000001) <= 0x3B8B87BE) {
    double v1 = round(v1 / 1000000.0) * 1000000.0;
  }
  if (v1 > 1000000000.0) {
    double v1 = round(v1 / 100000000.0) * 100000000.0;
  }
  unint64_t result = self;
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v1 < 9.22337204e18)
  {
    id v3 = [result stringFromByteCount:(uint64_t)v1 countStyle:2];
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return (void *)v4;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100448294(void *a1)
{
  uint64_t v3 = sub_1000172F8(&qword_1006639A0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018AC60(a1, a1[3]);
  sub_10044959C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v10 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    char v9 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100448400()
{
  if (*v0) {
    return 0x63696C7078457369;
  }
  else {
    return 0x65776F6C6C417369;
  }
}

uint64_t sub_100448444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1004492E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10044846C(uint64_t a1)
{
  unint64_t v2 = sub_10044959C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004484A8(uint64_t a1)
{
  unint64_t v2 = sub_10044959C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004484E4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1004493F0(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_10044851C(void *a1)
{
  return sub_100448294(a1);
}

BOOL sub_10044854C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

_WORD *initializeBufferWithCopyOfBuffer for NetworkEvaluatorResult(_WORD *result, _WORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for NetworkEvaluatorResult(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NetworkEvaluatorResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004486F0);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkEvaluatorResult()
{
  return &type metadata for NetworkEvaluatorResult;
}

uint64_t *sub_100448728(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_1000172F8(&qword_10065C3C0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = a3[6];
    char v13 = (uint64_t *)((char *)a1 + v11);
    char v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *char v13 = *v14;
    v13[1] = v15;
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    uint64_t v16 = a3[8];
    *(_DWORD *)((char *)a1 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
    char v17 = *(void **)((char *)a2 + v16);
    *(uint64_t *)((char *)a1 + v16) = (uint64_t)v17;
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    id v18 = v17;
  }
  return a1;
}

void sub_1004488D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  unsigned int v6 = *(void **)(a1 + *(int *)(a2 + 32));
}

char *sub_1004489B4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1000172F8(&qword_10065C3C0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  *(void *)&a1[v10] = *(void *)&a2[v10];
  uint64_t v14 = a3[8];
  *(_DWORD *)&a1[a3[7]] = *(_DWORD *)&a2[a3[7]];
  uint64_t v15 = *(void **)&a2[v14];
  *(void *)&a1[v14] = v15;
  a1[a3[9]] = a2[a3[9]];
  swift_bridgeObjectRetain();
  id v16 = v15;
  return a1;
}

char *sub_100448B14(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_1000172F8(&qword_10065C3C0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(_DWORD *)&a1[a3[7]] = *(_DWORD *)&a2[a3[7]];
  uint64_t v15 = a3[8];
  id v16 = *(void **)&a2[v15];
  char v17 = *(void **)&a1[v15];
  *(void *)&a1[v15] = v16;
  id v18 = v16;

  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *sub_100448CFC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1000172F8(&qword_10065C3C0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v10 = a3[8];
  *(_DWORD *)&a1[a3[7]] = *(_DWORD *)&a2[a3[7]];
  *(void *)&a1[v10] = *(void *)&a2[v10];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *sub_100448E4C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_1000172F8(&qword_10065C3C0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(_DWORD *)&a1[v17] = *(_DWORD *)&a2[v17];
  uint64_t v18 = a3[8];
  uint64_t v19 = *(void **)&a1[v18];
  *(void *)&a1[v18] = *(void *)&a2[v18];

  a1[a3[9]] = a2[a3[9]];
  return a1;
}

uint64_t sub_10044901C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100449030);
}

uint64_t sub_100449030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000172F8(&qword_10065C3C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1004490F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10044910C);
}

uint64_t sub_10044910C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000172F8(&qword_10065C3C0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for EvaluatorDownload()
{
  uint64_t result = qword_100663948;
  if (!qword_100663948) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10044921C()
{
  sub_10026B458();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1004492E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65776F6C6C417369 && a2 == 0xE900000000000064;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x63696C7078457369 && a2 == 0xEA00000000007469)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1004493F0(void *a1)
{
  uint64_t v3 = sub_1000172F8(&qword_100663990);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10018AC60(a1, a1[3]);
  sub_10044959C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1) {
    return sub_100014524((uint64_t)a1);
  }
  v11[15] = 0;
  char v7 = KeyedDecodingContainer.decode(_:forKey:)();
  v11[14] = 1;
  char v8 = KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  sub_100014524((uint64_t)a1);
  if (v8) {
    int v10 = 256;
  }
  else {
    int v10 = 0;
  }
  return v10 & 0xFFFFFFFE | v7 & 1;
}

unint64_t sub_10044959C()
{
  unint64_t result = qword_100663998;
  if (!qword_100663998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100663998);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NetworkEvaluatorResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004496BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkEvaluatorResult.CodingKeys()
{
  return &type metadata for NetworkEvaluatorResult.CodingKeys;
}

unint64_t sub_1004496F8()
{
  unint64_t result = qword_1006639A8;
  if (!qword_1006639A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006639A8);
  }
  return result;
}

unint64_t sub_100449750()
{
  unint64_t result = qword_1006639B0;
  if (!qword_1006639B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006639B0);
  }
  return result;
}

unint64_t sub_1004497A8()
{
  unint64_t result = qword_1006639B8;
  if (!qword_1006639B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006639B8);
  }
  return result;
}

uint64_t sub_1004497FC()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1004498E4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100449A60()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100449B44()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100449C4C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100449D58()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100449E60()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100449F7C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10044A0CC()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10044A1A4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10044A2D4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10044A404()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10044A514()
{
  return Hasher._finalize()();
}

Swift::Int sub_10044A634()
{
  return Hasher._finalize()();
}

Swift::Int sub_10044A774()
{
  return Hasher._finalize()();
}

Swift::Int sub_10044A884()
{
  return Hasher._finalize()();
}

Swift::Int sub_10044A9C4()
{
  return Hasher._finalize()();
}

Swift::Int sub_10044AAB8()
{
  return Hasher._finalize()();
}

Swift::Int sub_10044AC18()
{
  return Hasher._finalize()();
}

Swift::Int sub_10044AD44()
{
  return Hasher._finalize()();
}

Swift::Int sub_10044AE5C()
{
  return Hasher._finalize()();
}

Swift::Int sub_10044AF00()
{
  return Hasher._finalize()();
}

Swift::Int sub_10044B01C()
{
  return Hasher._finalize()();
}

Swift::Int sub_10044B114()
{
  return Hasher._finalize()();
}

Swift::Int sub_10044B234()
{
  return Hasher._finalize()();
}

Swift::Int sub_10044B330()
{
  return Hasher._finalize()();
}

unint64_t sub_10044B428(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000172F8(&qword_100663C68);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100017238(v6, (uint64_t)&v15, &qword_100663C70);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_100016D20(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1001C5DD4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10044B560(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000172F8(&qword_100663AD8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100016D20(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10044B684(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000172F8(&qword_100663AF0);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100017238(v6, (uint64_t)&v13, &qword_100663AF8);
    uint64_t v7 = v13;
    unint64_t result = sub_100451D14(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1001C5DD4(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10044B7B4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000172F8((uint64_t *)&unk_100663C30);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 48);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 16);
    uint64_t v7 = *(v4 - 1);
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100451DC8(v5);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    uint64_t v10 = (void *)(v2[7] + 16 * result);
    void *v10 = v7;
    v10[1] = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10044B8C4(uint64_t a1)
{
  return sub_10044BF84(a1, &qword_100663CA8);
}

unint64_t sub_10044B8D0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000172F8(&qword_10065CE48);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100017238(v6, (uint64_t)v15, &qword_100663CD0);
    unint64_t result = sub_100451EDC((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1001C5DD4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10044BA14(uint64_t a1)
{
  return sub_10044BA8C(a1, &qword_100663C90, &qword_100663C98, (void (*)(uint64_t))sub_1001A0578, (uint64_t (*)(uint64_t, Swift::Int))sub_10045303C);
}

unint64_t sub_10044BA50(uint64_t a1)
{
  return sub_10044BA8C(a1, &qword_100663C80, &qword_100663C88, (void (*)(uint64_t))sub_1004B3BC0, (uint64_t (*)(uint64_t, Swift::Int))sub_1004531B4);
}

unint64_t sub_10044BA8C(uint64_t a1, uint64_t *a2, uint64_t *a3, void (*a4)(uint64_t), uint64_t (*a5)(uint64_t, Swift::Int))
{
  if (!*(void *)(a1 + 16))
  {
    long long v10 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000172F8(a2);
  uint64_t v9 = static _DictionaryStorage.allocate(capacity:)();
  long long v10 = (void *)v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v10;
  }
  uint64_t v12 = v9 + 64;
  uint64_t v13 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100017238(v13, (uint64_t)v20, a3);
    char v14 = v20[0];
    unint64_t result = sub_100452678(v20[0], a4, a5);
    if (v16) {
      break;
    }
    *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v10[6] + result) = v14;
    unint64_t result = sub_10001733C((uint64_t)&v21, v10[7] + 48 * result, &qword_10065CE70);
    uint64_t v17 = v10[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    _OWORD v10[2] = v19;
    v13 += 56;
    if (!--v11)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10044BBDC(uint64_t a1)
{
  return sub_10044BC04(a1, &qword_100663D98, &qword_100663DA0, (uint64_t (*)(void))sub_100451F4C);
}

unint64_t sub_10044BC04(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  if (!*(void *)(a1 + 16))
  {
    char v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000172F8(a2);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100017238(v11, (uint64_t)v18, a3);
    char v12 = v18[0];
    unint64_t result = a4(v18[0]);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v8[6] + result) = v12;
    unint64_t result = sub_10001733C((uint64_t)&v19, v8[7] + 48 * result, &qword_10065CE70);
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v8[2] = v17;
    v11 += 56;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10044BD4C(uint64_t a1)
{
  return sub_10044BC04(a1, &qword_100663D38, &qword_100663D40, (uint64_t (*)(void))sub_100452010);
}

unint64_t sub_10044BD74(uint64_t a1)
{
  return sub_10044BA8C(a1, &qword_100663DD0, &qword_100663DD8, (void (*)(uint64_t))sub_100416498, (uint64_t (*)(uint64_t, Swift::Int))sub_100453B38);
}

unint64_t sub_10044BDB0(uint64_t a1)
{
  return sub_10044BC04(a1, &qword_100663E40, &qword_100663E48, (uint64_t (*)(void))sub_10045212C);
}

unint64_t sub_10044BDD8(uint64_t a1)
{
  return sub_10044BC04(a1, &qword_100663CD8, (uint64_t *)&unk_100663CE0, (uint64_t (*)(void))sub_100452208);
}

unint64_t sub_10044BE00(uint64_t a1)
{
  return sub_10044BC04(a1, &qword_100663BA8, (uint64_t *)&unk_100663BB0, (uint64_t (*)(void))sub_100452274);
}

unint64_t sub_10044BE28(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000172F8(&qword_100663C18);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100017238(v4, (uint64_t)v10, &qword_100663C20);
    unint64_t result = sub_100458340();
    if (v6) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t result = sub_10001733C((uint64_t)v10, v2[7] + 48 * result, &qword_10065CE70);
    uint64_t v7 = v2[2];
    BOOL v8 = __OFADD__(v7, 1);
    uint64_t v9 = v7 + 1;
    if (v8) {
      goto LABEL_11;
    }
    v2[2] = v9;
    v4 += 48;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10044BF50(uint64_t a1)
{
  return sub_10044BC04(a1, &qword_100663CB0, &qword_100663CB8, (uint64_t (*)(void))sub_1004523A0);
}

unint64_t sub_10044BF78(uint64_t a1)
{
  return sub_10044BF84(a1, &qword_100663C58);
}

unint64_t sub_10044BF84(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000172F8(a2);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100016D20(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10044C09C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000172F8(&qword_100663DB8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    id v7 = (id)*(v4 - 2);
    swift_bridgeObjectRetain();
    unint64_t result = sub_1004525B8((uint64_t)v7);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v7;
    char v10 = (void *)(v2[7] + 16 * result);
    void *v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10044C1B4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000172F8(&qword_100663D60);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *((unsigned __int8 *)v4 - 8);
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100452678(v5, (void (*)(uint64_t))sub_1002A9C74, (uint64_t (*)(uint64_t, Swift::Int))sub_100454E68);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10044C2E0(uint64_t a1)
{
  return sub_10044C984(a1, &qword_10065F210, &qword_100663C50, (uint64_t (*)(void))type metadata accessor for ProgressCache.Progress, (uint64_t (*)(void))type metadata accessor for ProgressCache.Progress);
}

unint64_t sub_10044C31C(uint64_t a1)
{
  uint64_t v2 = sub_1000172F8(&qword_100663D00);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    id v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000172F8(&qword_100663D08);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100017238(v12, (uint64_t)v5, &qword_100663D00);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_100016D20(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    *uint64_t v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for Date();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    _OWORD v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10044C51C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000172F8(&qword_100663E30);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (char *)(a1 + 49);
  while (1)
  {
    uint64_t v5 = *(void *)(v4 - 17);
    uint64_t v6 = *(void *)(v4 - 9);
    char v7 = *(v4 - 1);
    char v8 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100016D20(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (unsigned char *)(v2[7] + 2 * result);
    *uint64_t v12 = v7;
    v12[1] = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v2[2] = v15;
    v4 += 24;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10044C640(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000172F8((uint64_t *)&unk_100663B30);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_100451D14((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10044C74C(uint64_t a1)
{
  uint64_t v2 = sub_1000172F8(&qword_100661968);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    id v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000172F8(&qword_100663D30);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100017238(v12, (uint64_t)v5, &qword_100661968);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_100016D20(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    *uint64_t v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for Restore();
    unint64_t result = sub_100458F78(v9, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, (uint64_t (*)(void))type metadata accessor for Restore);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    _OWORD v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10044C948(uint64_t a1)
{
  return sub_10044C984(a1, &qword_100663E20, &qword_100663E28, (uint64_t (*)(void))type metadata accessor for RegisteredXPCClient, (uint64_t (*)(void))type metadata accessor for RegisteredXPCClient);
}

unint64_t sub_10044C984(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  unint64_t v31 = a4;
  uint64_t v32 = a5;
  uint64_t v8 = sub_1000172F8(a2);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v13 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000172F8(a3);
  uint64_t v12 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v13 = (void *)v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  uint64_t v15 = (uint64_t)&v11[*(int *)(v8 + 48)];
  uint64_t v16 = v12 + 64;
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v30[1] = a1;
  uint64_t v18 = a1 + v17;
  uint64_t v19 = *(void *)(v9 + 72);
  swift_retain();
  while (1)
  {
    sub_100017238(v18, (uint64_t)v11, a2);
    unint64_t result = sub_10000F800((uint64_t)v11);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v23 = v13[6];
    uint64_t v24 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v11, v24);
    uint64_t v25 = v13[7];
    uint64_t v26 = v31(0);
    unint64_t result = sub_100458F78(v15, v25 + *(void *)(*(void *)(v26 - 8) + 72) * v22, v32);
    uint64_t v27 = v13[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_11;
    }
    _OWORD v13[2] = v29;
    v18 += v19;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}