unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *result = *a2;
  return result;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0(a1 + 32);
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  return sub_244584198(a2 + 32, a1 + 32);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t objectdestroy_9Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)), v2);

  return swift_deallocObject();
}

uint64_t objectdestroy_11Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)), v2);

  return swift_deallocObject();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t CellularSettings.Prompt.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_2445EF658();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t CellularSettings.Prompt.rawValue.getter()
{
  uint64_t v1 = 0x696D694C7265764FLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x726576654ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x737961776C41;
  }
}

uint64_t sub_244582990(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2445AF30C(*a1, *a2);
}

uint64_t sub_24458299C()
{
  return sub_2445EF988();
}

uint64_t sub_244582A3C()
{
  sub_2445EF198();

  return swift_bridgeObjectRelease();
}

uint64_t sub_244582AC8()
{
  return sub_2445EF988();
}

uint64_t sub_244582B64@<X0>(char *a1@<X8>)
{
  return CellularSettings.Prompt.init(rawValue:)(a1);
}

void sub_244582B70(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE900000000000074;
  uint64_t v5 = 0x696D694C7265764FLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x726576654ELL;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x737961776C41;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t CellularSettings.init(for:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  a2[1] = v4;
  return result;
}

id CellularSettings.allowAutomaticDownloads.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v1 = (void *)sub_2445EF118();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = (void *)sub_2445EF118();
  id v4 = objc_msgSend(v2, sel_BOOLForKey_, v3);

  return v4;
}

void sub_244582CC8(unsigned __int8 *a1@<X8>)
{
  id v2 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_2445EF118();
  id v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  if (v4)
  {
    uint64_t v5 = (void *)sub_2445EF118();
    unsigned __int8 v6 = objc_msgSend(v4, sel_BOOLForKey_, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    unsigned __int8 v6 = 0;
  }
  *a1 = v6;
}

void sub_244582DB4(unsigned __int8 *a1)
{
  uint64_t v1 = *a1;
  id v2 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v3 = (void *)sub_2445EF118();
  id v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  if (v4)
  {
    id v5 = (id)sub_2445EF118();
    objc_msgSend(v4, sel_setBool_forKey_, v1, v5);
  }
}

void CellularSettings.allowAutomaticDownloads.setter(char a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v3 = (void *)sub_2445EF118();
  id v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  if (v4)
  {
    id v5 = (id)sub_2445EF118();
    objc_msgSend(v4, sel_setBool_forKey_, a1 & 1, v5);
  }
}

void (*CellularSettings.allowAutomaticDownloads.modify(unsigned __int8 *a1))(unsigned __int8 *a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v3 = (void *)sub_2445EF118();
  id v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  if (v4)
  {
    id v5 = (void *)sub_2445EF118();
    unsigned __int8 v6 = objc_msgSend(v4, sel_BOOLForKey_, v5);
  }
  else
  {
    unsigned __int8 v6 = 0;
  }
  *a1 = v6;
  return sub_244583068;
}

void sub_244583068(unsigned __int8 *a1)
{
  uint64_t v1 = *a1;
  id v2 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v3 = (void *)sub_2445EF118();
  id v5 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  if (v5)
  {
    id v4 = (void *)sub_2445EF118();
    objc_msgSend(v5, sel_setBool_forKey_, v1, v4);
  }
}

uint64_t CellularSettings.cellularData.getter@<X0>(char *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_24458361C();
  swift_bridgeObjectRetain();
  sub_2445EF508();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_2445840A0((uint64_t)v11), (v6 & 1) != 0))
  {
    sub_244584198(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v12);
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_2445840E4((uint64_t)v11);
  if (!*((void *)&v13 + 1)) {
    goto LABEL_15;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C8F8);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_16:
    char v10 = 1;
    goto LABEL_17;
  }
  sub_2445EF508();
  if (*(void *)(v3 + 16) && (unint64_t v8 = sub_2445840A0((uint64_t)v11), (v9 & 1) != 0))
  {
    sub_244584198(*(void *)(v3 + 56) + 32 * v8, (uint64_t)&v12);
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_2445840E4((uint64_t)v11);
  if (!*((void *)&v13 + 1))
  {
LABEL_15:
    uint64_t result = sub_244584138((uint64_t)&v12);
    goto LABEL_16;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t result = CellularSettings.Prompt.init(rawValue:)(v11);
  char v10 = v11[0];
  if (v11[0] == 3) {
    char v10 = 1;
  }
LABEL_17:
  *a1 = v10;
  return result;
}

uint64_t sub_244583304@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = CellularSettings.cellularData.getter(&v3);
  *a1 = v3;
  return result;
}

void sub_244583348(unsigned __int8 *a1)
{
  unsigned __int8 v1 = *a1;
  CellularSettings.cellularData.setter(&v1);
}

void CellularSettings.cellularData.setter(unsigned __int8 *a1)
{
  id v2 = v1;
  int v3 = *a1;
  uint64_t v4 = v1[1];
  *(void *)&v16[0] = *v1;
  *((void *)&v16[0] + 1) = v4;
  swift_bridgeObjectRetain();
  sub_2445EF508();
  uint64_t v5 = sub_24458361C();
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_2445840A0((uint64_t)v17), (v7 & 1) != 0))
  {
    sub_244584198(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v18);
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_2445840E4((uint64_t)v17);
  if (*((void *)&v19 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C8F8);
    if (swift_dynamicCast())
    {
      unint64_t v8 = *(void *)&v16[0];
      goto LABEL_10;
    }
  }
  else
  {
    sub_244584138((uint64_t)&v18);
  }
  unint64_t v8 = sub_244583870(MEMORY[0x263F8EE78]);
LABEL_10:
  *(void *)&long long v18 = 0xD000000000000012;
  *((void *)&v18 + 1) = 0x80000002445F8820;
  uint64_t v9 = MEMORY[0x263F8D310];
  sub_2445EF508();
  if (v3)
  {
    if (v3 == 1)
    {
      unint64_t v10 = 0xE900000000000074;
      uint64_t v11 = 0x696D694C7265764FLL;
    }
    else
    {
      unint64_t v10 = 0xE500000000000000;
      uint64_t v11 = 0x726576654ELL;
    }
  }
  else
  {
    unint64_t v10 = 0xE600000000000000;
    uint64_t v11 = 0x737961776C41;
  }
  *((void *)&v19 + 1) = v9;
  *(void *)&long long v18 = v11;
  *((void *)&v18 + 1) = v10;
  sub_2445841F4(&v18, v16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_2445851C0(v16, (uint64_t)v17, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_2445840E4((uint64_t)v17);
  uint64_t v13 = v2[1];
  *(void *)&long long v18 = *v2;
  *((void *)&v18 + 1) = v13;
  swift_bridgeObjectRetain();
  sub_2445EF508();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C8F8);
  *((void *)&v19 + 1) = v14;
  *(void *)&long long v18 = v8;
  sub_24458361C();
  if (v14)
  {
    sub_2445841F4(&v18, v16);
    char v15 = swift_isUniquelyReferenced_nonNull_native();
    sub_2445851C0(v16, (uint64_t)v17, v15);
    swift_bridgeObjectRelease();
    sub_2445840E4((uint64_t)v17);
  }
  else
  {
    sub_244584138((uint64_t)&v18);
    sub_2445847CC((uint64_t)v17, v16);
    sub_2445840E4((uint64_t)v17);
    sub_244584138((uint64_t)v16);
  }
  sub_244583AF8();
}

uint64_t sub_24458361C()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  unsigned __int8 v1 = (void *)sub_2445EF118();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2
    && (int v3 = (void *)sub_2445EF118(),
        id v4 = objc_msgSend(v2, sel_dictionaryForKey_, v3),
        v2,
        v3,
        v4))
  {
    uint64_t v5 = sub_2445EF0B8();
  }
  else
  {
    uint64_t v5 = sub_244583738(MEMORY[0x263F8EE78]);
  }
  uint64_t v6 = sub_244583CD8(v5);
  swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_244583738(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C920);
  uint64_t v2 = sub_2445EF638();
  int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_244585A90(v6, (uint64_t)&v15, &qword_268E8C928);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_244584204(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_2445841F4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_244583870(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C910);
  uint64_t v2 = sub_2445EF638();
  int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_244585A90(v6, (uint64_t)v15, &qword_268E8C918);
    unint64_t result = sub_2445840A0((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_2445841F4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2445839B4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C908);
  uint64_t v2 = (void *)sub_2445EF638();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    char v7 = *((unsigned char *)v4 - 8);
    unint64_t v8 = *v4;
    sub_24458565C(v5, v6, v7);
    sub_24458566C(v8);
    unint64_t result = sub_2445842E0(v5, v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = v2[6] + 24 * result;
    *(void *)uint64_t v11 = v5;
    *(void *)(v11 + 8) = v6;
    *(unsigned char *)(v11 + 16) = v7;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_244583AF8()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  unsigned __int8 v1 = (void *)sub_2445EF118();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    uint64_t v3 = (void *)sub_2445EF0A8();
    swift_bridgeObjectRelease();
    id v4 = (id)sub_2445EF118();
    objc_msgSend(v2, sel_setObject_forKey_, v3, v4);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void (*CellularSettings.cellularData.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)a1 = v1;
  CellularSettings.cellularData.getter((char *)(a1 + 8));
  return sub_244583C90;
}

void sub_244583C90(uint64_t a1, char a2)
{
  if (a2)
  {
    char v3 = *(unsigned char *)(a1 + 8);
    id v2 = (unsigned __int8 *)&v3;
  }
  else
  {
    char v4 = *(unsigned char *)(a1 + 8);
    id v2 = (unsigned __int8 *)&v4;
  }
  CellularSettings.cellularData.setter(v2);
}

uint64_t sub_244583CD8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C910);
    uint64_t v2 = sub_2445EF638();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    long long v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_244584198(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_2445841F4(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_2445841F4(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_2445841F4(v36, v37);
    sub_2445841F4(v37, &v33);
    uint64_t result = sub_2445EF4E8();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_2445841F4(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_244585A88();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_2445840A0(uint64_t a1)
{
  uint64_t v2 = sub_2445EF4E8();

  return sub_244584398(a1, v2);
}

uint64_t sub_2445840E4(uint64_t a1)
{
  return a1;
}

uint64_t sub_244584138(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C8F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_244584198(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_2445841F4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_244584204(uint64_t a1, uint64_t a2)
{
  sub_2445EF948();
  sub_2445EF198();
  uint64_t v4 = sub_2445EF988();

  return sub_244584460(a1, a2, v4);
}

unint64_t sub_24458427C(uint64_t a1)
{
  sub_2445EF5D8();
  uint64_t v2 = sub_2445EF0C8();

  return sub_244584544(a1, v2);
}

unint64_t sub_2445842E0(uint64_t a1, uint64_t a2, char a3)
{
  char v6 = a3 & 1;
  sub_2445EF948();
  sub_2445EF958();
  if (a3) {
    sub_2445EF198();
  }
  else {
    sub_2445EF978();
  }
  uint64_t v7 = sub_2445EF988();

  return sub_2445846DC(a1, a2, v6, v7);
}

unint64_t sub_244584398(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_244585A2C(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x2456937D0](v9, a1);
      sub_2445840E4((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_244584460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2445EF848() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        int64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2445EF848() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_244584544(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v4 = sub_2445EF5D8();
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v20 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    int64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    int64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      uint64_t v16 = v11;
      v12(v7, *(void *)(v22 + 48) + v14 * v9, v4);
      char v17 = sub_2445EF0E8();
      (*v15)(v7, v4);
      if (v17) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      uint64_t v11 = v16;
    }
    while (((*(void *)(v20 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_2445846DC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v11 = ~v6;
    uint64_t v12 = *(void *)(v4 + 48);
    do
    {
      int64_t v13 = (uint64_t *)(v12 + 24 * v7);
      uint64_t v14 = *v13;
      if (*((unsigned char *)v13 + 16) == 1)
      {
        if (a3)
        {
          BOOL v15 = v14 == a1 && v13[1] == a2;
          if (v15 || (sub_2445EF848() & 1) != 0) {
            return v7;
          }
        }
      }
      else if ((a3 & 1) == 0 && v14 == a1)
      {
        return v7;
      }
      unint64_t v7 = (v7 + 1) & v11;
    }
    while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

double sub_2445847CC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2445840A0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2445DDF00();
      uint64_t v9 = v11;
    }
    sub_2445840E4(*(void *)(v9 + 48) + 40 * v6);
    sub_2445841F4((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_244584AE4(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

double sub_2445848C8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_24458427C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2445DE0E8();
      uint64_t v9 = v13;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_2445EF5D8();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    sub_2445841F4((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_244584CB0(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_2445849F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  uint64_t v5 = v4;
  char v9 = a3 & 1;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_2445842E0(a1, a2, v9);
  LOBYTE(a2) = v11;
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v5;
    uint64_t v15 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2445DE554();
      uint64_t v14 = v15;
    }
    sub_244585A1C(*(void *)(*(void *)(v14 + 48) + 24 * v10), *(void *)(*(void *)(v14 + 48) + 24 * v10 + 8), *(unsigned char *)(*(void *)(v14 + 48) + 24 * v10 + 16));
    *a4 = *(void *)(*(void *)(v14 + 56) + 8 * v10);
    sub_244584F68(v10, v14);
    *uint64_t v5 = v14;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *a4 = 0xF000000000000007;
  }
  return result;
}

unint64_t sub_244584AE4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_2445EF4D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_244585A2C(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        uint64_t v10 = sub_2445EF4E8();
        uint64_t result = sub_2445840E4((uint64_t)v28);
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = *(void *)(a2 + 48);
            unint64_t v15 = v14 + 40 * v3;
            uint64_t v16 = (long long *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              long long v17 = *v16;
              long long v18 = v16[1];
              *(void *)(v15 + 32) = *((void *)v16 + 4);
              *(_OWORD *)unint64_t v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = (_OWORD *)(v19 + 32 * v3);
            uint64_t v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 2))
            {
              long long v9 = v21[1];
              *uint64_t v20 = *v21;
              v20[1] = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_244584CB0(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2445EF5D8();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v38 = a2 + 64;
    unint64_t result = sub_2445EF4D8();
    uint64_t v12 = v38;
    if ((*(void *)(v38 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v36 = (result + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v35 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v37 = v13;
      uint64_t v16 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v10;
        v35(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        uint64_t v18 = sub_2445EF0C8();
        unint64_t result = (*v16)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_17:
            uint64_t v22 = *(void *)(a2 + 48);
            unint64_t result = v22 + v15 * a1;
            unint64_t v23 = v22 + v17 + v15;
            if (v15 * a1 < v17 || result >= v23)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v17)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v25 = *(void *)(a2 + 56);
            BOOL v26 = (_OWORD *)(v25 + 32 * a1);
            uint64_t v27 = (_OWORD *)(v25 + 32 * v10);
            uint64_t v12 = v38;
            if (a1 != v10 || (a1 = v10, v26 >= v27 + 2))
            {
              long long v28 = v27[1];
              *BOOL v26 = *v27;
              v26[1] = v28;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_17;
        }
        uint64_t v12 = v38;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    long long v29 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    long long v29 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *long long v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_244584F68(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_2445EF4D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      uint64_t v31 = v4;
      do
      {
        int64_t v9 = v8;
        uint64_t v10 = 24 * v6;
        uint64_t v11 = v2;
        uint64_t v12 = *(void *)(v2 + 48) + 24 * v6;
        uint64_t v14 = *(void *)v12;
        uint64_t v13 = *(void *)(v12 + 8);
        int v15 = *(unsigned __int8 *)(v12 + 16);
        sub_2445EF948();
        sub_2445EF958();
        if (v15 == 1)
        {
          swift_bridgeObjectRetain();
          sub_2445EF198();
        }
        else
        {
          sub_2445EF978();
        }
        uint64_t v16 = sub_2445EF988();
        unint64_t result = sub_244585A1C(v14, v13, v15);
        unint64_t v17 = v16 & v7;
        unint64_t v8 = v9;
        if (v3 >= v9)
        {
          uint64_t v4 = v31;
          uint64_t v2 = v11;
          if (v17 < v8) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v4 = v31;
          uint64_t v2 = v11;
          if (v17 >= v8) {
            goto LABEL_14;
          }
        }
        if (v3 >= (uint64_t)v17)
        {
LABEL_14:
          uint64_t v18 = *(void *)(v2 + 48);
          unint64_t v19 = v18 + 24 * v3;
          uint64_t v20 = (long long *)(v18 + v10);
          if (24 * v3 < v10 || v19 >= (unint64_t)v20 + 24 || v3 != v6)
          {
            long long v21 = *v20;
            *(void *)(v19 + 16) = *((void *)v20 + 2);
            *(_OWORD *)unint64_t v19 = v21;
          }
          uint64_t v22 = *(void *)(v2 + 56);
          unint64_t v23 = (void *)(v22 + 8 * v3);
          uint64_t v24 = (void *)(v22 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v23 >= v24 + 1))
          {
            *unint64_t v23 = *v24;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << result) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(v2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v30;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

_OWORD *sub_2445851C0(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2445840A0(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_2445DDF00();
      goto LABEL_7;
    }
    sub_2445DD144(v13, a3 & 1);
    unint64_t v19 = sub_2445840A0(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_244585A2C(a2, (uint64_t)v21);
      return sub_24458588C(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    unint64_t result = (_OWORD *)sub_2445EF8E8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  unint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);

  return sub_2445841F4(a1, v17);
}

unint64_t sub_244585310()
{
  unint64_t result = qword_268E8C900;
  if (!qword_268E8C900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8C900);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for CellularSettings(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for CellularSettings()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for CellularSettings(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for CellularSettings(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CellularSettings(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CellularSettings(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CellularSettings()
{
  return &type metadata for CellularSettings;
}

uint64_t getEnumTagSinglePayload for CellularSettings.Prompt(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CellularSettings.Prompt(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244585610);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_244585638(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_244585644(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CellularSettings.Prompt()
{
  return &type metadata for CellularSettings.Prompt;
}

uint64_t sub_24458565C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_24458566C(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

_OWORD *sub_2445856B4(_OWORD *a1, uint64_t a2, char a3)
{
  unsigned int v4 = (void **)v3;
  uint64_t v8 = sub_2445EF5D8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (void *)*v3;
  unint64_t v14 = sub_24458427C(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_2445DE0E8();
      goto LABEL_7;
    }
    sub_2445DD45C(v17, a3 & 1);
    unint64_t v23 = sub_24458427C(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      char v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_244585908(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_2445EF8E8();
    __break(1u);
    return result;
  }
LABEL_7:
  char v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  long long v21 = (_OWORD *)(v20[7] + 32 * v14);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);

  return sub_2445841F4(a1, v21);
}

_OWORD *sub_24458588C(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_2445841F4(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

_OWORD *sub_244585908(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_2445EF5D8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t result = sub_2445841F4(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_2445859C8(unint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = a6[6] + 24 * result;
  *(void *)uint64_t v6 = a2;
  *(void *)(v6 + 8) = a3;
  *(unsigned char *)(v6 + 16) = a4 & 1;
  *(void *)(a6[7] + 8 * result) = a5;
  uint64_t v7 = a6[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a6[2] = v9;
  }
  return result;
}

uint64_t sub_244585A1C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244585A2C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_244585A88()
{
  return swift_release();
}

uint64_t sub_244585A90(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void type metadata accessor for os_unfair_lock_s()
{
  if (!qword_26B0CE8D8)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_26B0CE8D8);
    }
  }
}

uint64_t ManagedApp.declarationIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedApp.itemID.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t ManagedApp.externalVersionID.getter()
{
  return *(void *)(v0 + 48);
}

void ManagedApp.platform.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 64);
}

uint64_t ManagedApp.fileSize.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ManagedApp();
  return sub_244585A90(v1 + *(int *)(v3 + 36), a1, &qword_268E8C930);
}

uint64_t type metadata accessor for ManagedApp()
{
  uint64_t result = qword_268E8CA48;
  if (!qword_268E8CA48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ManagedApp.metadataLanguage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ManagedApp();
  return sub_244585A90(v1 + *(int *)(v3 + 40), a1, &qword_268E8C938);
}

uint64_t ManagedApp.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ManagedApp() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedApp.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ManagedApp() + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedApp.seller.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ManagedApp() + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedApp.genres.getter()
{
  type metadata accessor for ManagedApp();

  return swift_bridgeObjectRetain();
}

uint64_t ManagedApp.description.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ManagedApp() + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedApp.languages.getter()
{
  type metadata accessor for ManagedApp();

  return swift_bridgeObjectRetain();
}

uint64_t ManagedApp.requirements.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ManagedApp() + 68));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedApp.version.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ManagedApp() + 72));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedApp.releaseDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ManagedApp();
  return sub_244585A90(v1 + *(int *)(v3 + 76), a1, &qword_268E8C940);
}

uint64_t ManagedApp.releaseNotes.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ManagedApp() + 80));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedApp.iconURL(fitting:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v7 = type metadata accessor for ManagedApp();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
  MEMORY[0x270FA5388](v10 - 8);
  BOOL v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v3 + *(int *)(v7 + 84);
  uint64_t v14 = *(void *)(v13 + 8);
  if (v14)
  {
    v19[0] = *(void *)v13;
    v19[1] = v14;
    long long v20 = *(_OWORD *)(v13 + 16);
    swift_bridgeObjectRetain();
    sub_244586204(25719, 0xE200000000000000, 6778480, 0xE300000000000000, (uint64_t)v12, a2, a3);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = sub_2445EEF28();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
  }
  sub_244586144(v3, (uint64_t)v9);
  uint64_t v16 = sub_2445EEF28();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16) == 1)
  {
    sub_244585A90((uint64_t)&v9[*(int *)(v7 + 88)], a1, &qword_26B0CE530);
    sub_2445861A8((uint64_t)v9);
    return sub_244589A98((uint64_t)v12, &qword_26B0CE530);
  }
  else
  {
    sub_2445861A8((uint64_t)v9);
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a1, v12, v16);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
  }
}

uint64_t sub_244586144(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ManagedApp();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2445861A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ManagedApp();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_244586204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  v29[2] = a3;
  v29[3] = a4;
  v29[0] = a1;
  v29[1] = a2;
  v29[4] = a5;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C948);
  uint64_t v11 = *(void *)(v10 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v7;
  uint64_t v15 = v7[1];
  uint64_t v17 = v7[2];
  uint64_t v16 = v7[3];
  id v18 = objc_msgSend(self, sel_screenScale);
  if (v18)
  {
    uint64_t v19 = v18;
    double v30 = 0.0;
    LOBYTE(v31) = 1;
    MEMORY[0x2456932B0](v18, &v30);

    if ((_BYTE)v31) {
      double v20 = 1.0;
    }
    else {
      double v20 = v30;
    }
  }
  else
  {
    double v20 = 1.0;
  }
  v29[6] = v14;
  v29[7] = v15;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C950);
  uint64_t v21 = sub_2445EEFF8();
  MEMORY[0x270FA5388](v21);
  *(double *)&v29[-12] = a6;
  *(double *)&v29[-11] = a7;
  *(double *)&v29[-10] = v20;
  v29[-9] = v14;
  v29[-8] = v15;
  v29[-7] = v17;
  v29[-6] = v16;
  v29[-5] = v29[0];
  unint64_t v22 = sub_244587234();
  unint64_t v23 = sub_244587288();
  uint64_t v24 = sub_244589B48(&qword_268E8C968, &qword_268E8C948);
  unint64_t v27 = v23;
  uint64_t v28 = v24;
  unint64_t v26 = v22;
  sub_2445EF408();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_bridgeObjectRelease();
  sub_2445EEF08();
  return swift_bridgeObjectRelease();
}

unint64_t ManagedApp.screenshotURLs(fitting:)(double a1, double a2)
{
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C948);
  uint64_t v5 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  v55 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2445EEF28();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v54 = (char *)v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  v47 = (char *)v45 - v14;
  uint64_t v15 = *(void *)(v2 + *(int *)(type metadata accessor for ManagedApp() + 92));
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v17 = self;
  v50 = (void (**)(char *, uint64_t))(v5 + 8);
  id v51 = v17;
  v49 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  uint64_t v46 = v11;
  v48 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
  swift_bridgeObjectRetain_n();
  uint64_t v18 = 0;
  unint64_t v19 = MEMORY[0x263F8EE78];
  v45[1] = v15;
  double v20 = (uint64_t *)(v15 + 56);
  uint64_t v52 = v10;
  v53 = v9;
  do
  {
    uint64_t v57 = v18;
    unint64_t v58 = v19;
    uint64_t v59 = v16;
    uint64_t v22 = *(v20 - 3);
    uint64_t v23 = *(v20 - 2);
    uint64_t v25 = *(v20 - 1);
    uint64_t v24 = *v20;
    swift_bridgeObjectRetain();
    id v26 = objc_msgSend(v51, sel_screenScale);
    double v27 = 1.0;
    if (v26)
    {
      uint64_t v28 = v26;
      double v62 = 0.0;
      LOBYTE(v63) = 1;
      MEMORY[0x2456932B0](v26, &v62);

      if ((_BYTE)v63) {
        double v27 = 1.0;
      }
      else {
        double v27 = v62;
      }
    }
    uint64_t v60 = v22;
    uint64_t v61 = v23;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C950);
    BOOL v29 = v55;
    uint64_t v30 = sub_2445EEFF8();
    MEMORY[0x270FA5388](v30);
    *(double *)&v45[-12] = a1;
    *(double *)&v45[-11] = a2;
    *(double *)&v45[-10] = v27;
    v45[-9] = v22;
    v45[-8] = v23;
    v45[-7] = v25;
    v45[-6] = v24;
    v45[-5] = 25186;
    unint64_t v31 = sub_244587234();
    unint64_t v32 = sub_244587288();
    uint64_t v33 = sub_244589B48(&qword_268E8C968, &qword_268E8C948);
    unint64_t v43 = v32;
    uint64_t v44 = v33;
    unint64_t v42 = v31;
    uint64_t v34 = v56;
    uint64_t v18 = v57;
    sub_2445EF408();
    (*v50)(v29, v34);
    swift_bridgeObjectRelease();
    uint64_t v35 = (uint64_t)v53;
    sub_2445EEF08();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = v52;
    if ((*v49)(v35, 1, v52) == 1)
    {
      sub_244589A98(v35, &qword_26B0CE530);
      unint64_t v19 = v58;
      uint64_t v21 = v59;
    }
    else
    {
      uint64_t v37 = *v48;
      uint64_t v38 = v47;
      (*v48)(v47, v35, v36);
      v37(v54, (uint64_t)v38, v36);
      unint64_t v19 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v19 = sub_24458960C(0, *(void *)(v19 + 16) + 1, 1, v19);
      }
      unint64_t v40 = *(void *)(v19 + 16);
      unint64_t v39 = *(void *)(v19 + 24);
      if (v40 >= v39 >> 1) {
        unint64_t v19 = sub_24458960C(v39 > 1, v40 + 1, 1, v19);
      }
      *(void *)(v19 + 16) = v40 + 1;
      v37((char *)(v19+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v40), (uint64_t)v54, v36);
      uint64_t v21 = v59;
    }
    v20 += 4;
    uint64_t v16 = v21 - 1;
  }
  while (v16);
  swift_bridgeObjectRelease_n();
  return v19;
}

uint64_t ManagedApp.contentRating.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ManagedApp() + 96));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedApp.developerWebsite.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ManagedApp();
  return sub_244585A90(v1 + *(int *)(v3 + 100), a1, &qword_26B0CE530);
}

uint64_t ManagedApp.privacyPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ManagedApp();
  return sub_244585A90(v1 + *(int *)(v3 + 104), a1, &qword_26B0CE530);
}

uint64_t ManagedApp.licenseAgreement.getter@<X0>(uint64_t a1@<X8>)
{
  if (*(unsigned char *)(v1 + *(int *)(type metadata accessor for ManagedApp() + 108)) == 1 && (*(unsigned char *)(v1 + 40) & 1) == 0)
  {
    sub_2445EF558();
    sub_2445EF1A8();
    sub_2445EF818();
    sub_2445EF1A8();
    swift_bridgeObjectRelease();
    sub_2445EEF08();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = sub_2445EEF28();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
    return v4(a1, 1, 1, v3);
  }
}

uint64_t ManagedApp.copyright.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ManagedApp() + 112));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedApp.buyParams.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ManagedApp() + 116));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedApp.init(declarationIdentifier:bundleID:itemID:externalVersionID:platform:fileSize:metadataLanguage:name:subtitle:seller:genres:description:languages:requirements:version:releaseDate:releaseNotes:icon:iconURL:screenshots:contentRating:developerWebsite:privacyPolicy:hasLicenseAgreement:copyright:buyParams:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,long long *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 40) = a6 & 1;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = a8 & 1;
  long long v56 = *a30;
  *(void *)(a9 + 64) = *a10;
  uint64_t v55 = *((void *)a30 + 2);
  uint64_t v57 = *((void *)a30 + 3);
  unint64_t v42 = (int *)type metadata accessor for ManagedApp();
  sub_244589874(a11, a9 + v42[9], &qword_268E8C930);
  sub_244589874(a12, a9 + v42[10], &qword_268E8C938);
  unint64_t v43 = (void *)(a9 + v42[11]);
  *unint64_t v43 = a13;
  v43[1] = a14;
  uint64_t v44 = (void *)(a9 + v42[12]);
  *uint64_t v44 = a15;
  v44[1] = a16;
  v45 = (void *)(a9 + v42[13]);
  void *v45 = a17;
  v45[1] = a18;
  *(void *)(a9 + v42[14]) = a19;
  uint64_t v46 = (void *)(a9 + v42[15]);
  *uint64_t v46 = a20;
  v46[1] = a21;
  *(void *)(a9 + v42[16]) = a22;
  v47 = (void *)(a9 + v42[17]);
  void *v47 = a23;
  v47[1] = a24;
  v48 = (void *)(a9 + v42[18]);
  void *v48 = a25;
  v48[1] = a26;
  sub_244589874(a27, a9 + v42[19], &qword_268E8C940);
  v49 = (void *)(a9 + v42[20]);
  void *v49 = a28;
  v49[1] = a29;
  uint64_t v50 = a9 + v42[21];
  *(_OWORD *)uint64_t v50 = v56;
  *(void *)(v50 + 16) = v55;
  *(void *)(v50 + 24) = v57;
  sub_244589874(a31, a9 + v42[22], &qword_26B0CE530);
  *(void *)(a9 + v42[23]) = a32;
  id v51 = (void *)(a9 + v42[24]);
  *id v51 = a33;
  v51[1] = a34;
  sub_244589874(a35, a9 + v42[25], &qword_26B0CE530);
  uint64_t result = sub_244589874(a36, a9 + v42[26], &qword_26B0CE530);
  *(unsigned char *)(a9 + v42[27]) = a37;
  v53 = (void *)(a9 + v42[28]);
  void *v53 = a38;
  v53[1] = a39;
  v54 = (void *)(a9 + v42[29]);
  void *v54 = a40;
  v54[1] = a41;
  return result;
}

uint64_t ManagedApp.Artwork.init(urlTemplate:maxWidth:maxHeight:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t sub_244586F64@<X0>(uint64_t a1@<X5>, unint64_t a2@<X6>, uint64_t a3@<X7>, void *a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, unint64_t a8)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CAB0);
  sub_2445EF008();
  swift_bridgeObjectRelease();
  if (sub_24458D72C(119, 0xE100000000000000, v23, v24, v25, v26))
  {
    swift_bridgeObjectRelease();
    double v14 = floor(a5 * a7);
    double v15 = ceil(a5 * a7);
    if (COERCE__INT64(a5 * a7) >= 0) {
      double v16 = v15;
    }
    else {
      double v16 = v14;
    }
    if ((~*(void *)&v16 & 0x7FF0000000000000) != 0)
    {
      if (v16 > -9.22337204e18)
      {
        if (v16 < 9.22337204e18) {
          goto LABEL_16;
        }
        goto LABEL_24;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (sub_24458D72C(104, 0xE100000000000000, v23, v24, v25, v26))
  {
    swift_bridgeObjectRelease();
    double v17 = floor(a6 * a7);
    double v18 = ceil(a6 * a7);
    if (COERCE__INT64(a6 * a7) >= 0) {
      double v19 = v18;
    }
    else {
      double v19 = v17;
    }
    if ((~*(void *)&v19 & 0x7FF0000000000000) != 0)
    {
      if (v19 > -9.22337204e18)
      {
        if (v19 < 9.22337204e18)
        {
LABEL_16:
          sub_2445EF818();
          sub_2445EF1A8();
          uint64_t result = swift_bridgeObjectRelease();
          a1 = 0;
          a2 = 0xE000000000000000;
LABEL_17:
          *a4 = a1;
          a4[1] = a2;
          return result;
        }
        goto LABEL_27;
      }
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (sub_24458D72C(99, 0xE100000000000000, v23, v24, v25, v26))
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRetain();
    goto LABEL_17;
  }
  char v21 = sub_24458D72C(102, 0xE100000000000000, v23, v24, v25, v26);
  swift_bridgeObjectRelease();
  if (v21)
  {
    a2 = a8;
    uint64_t result = swift_bridgeObjectRetain();
    a1 = a3;
    goto LABEL_17;
  }
LABEL_28:
  uint64_t result = sub_2445EF5F8();
  __break(1u);
  return result;
}

uint64_t sub_24458721C@<X0>(void *a1@<X8>)
{
  return sub_24458E4C0(a1);
}

unint64_t sub_244587234()
{
  unint64_t result = qword_268E8C958;
  if (!qword_268E8C958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8C958);
  }
  return result;
}

unint64_t sub_244587288()
{
  unint64_t result = qword_268E8C960;
  if (!qword_268E8C960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8C960);
  }
  return result;
}

uint64_t sub_2445872E4()
{
  uint64_t v1 = 0x687464695778616DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x686769654878616DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C706D65546C7275;
  }
}

uint64_t sub_24458734C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24458D798(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244587374()
{
  return 0;
}

void sub_244587380(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_24458738C(uint64_t a1)
{
  unint64_t v2 = sub_2445898D8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445873C8(uint64_t a1)
{
  unint64_t v2 = sub_2445898D8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ManagedApp.Artwork.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C970);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  v10[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445898D8();
  sub_2445EFA18();
  char v13 = 0;
  uint64_t v8 = v10[3];
  sub_2445EF798();
  if (!v8)
  {
    char v12 = 1;
    sub_2445EF7C8();
    char v11 = 2;
    sub_2445EF7C8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ManagedApp.Artwork.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C980);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445898D8();
  sub_2445EF9E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v18 = 0;
  uint64_t v9 = sub_2445EF6C8();
  uint64_t v11 = v10;
  char v17 = 1;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_2445EF6F8();
  char v16 = 2;
  uint64_t v13 = sub_2445EF6F8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v15;
  a2[3] = v13;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_2445877B8(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4449656C646E7562;
      break;
    case 2:
      unint64_t result = 0x44496D657469;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x6D726F6674616C70;
      break;
    case 5:
      unint64_t result = 0x657A6953656C6966;
      break;
    case 6:
    case 21:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 1701667182;
      break;
    case 8:
      unint64_t result = 0x656C746974627573;
      break;
    case 9:
      unint64_t result = 0x72656C6C6573;
      break;
    case 10:
      unint64_t result = 0x7365726E6567;
      break;
    case 11:
      unint64_t result = 0x7470697263736564;
      break;
    case 12:
      unint64_t result = 0x65676175676E616CLL;
      break;
    case 13:
      unint64_t result = 0x6D65726975716572;
      break;
    case 14:
      unint64_t result = 0x6E6F6973726576;
      break;
    case 15:
      unint64_t result = 0x44657361656C6572;
      break;
    case 16:
      unint64_t result = 0x4E657361656C6572;
      break;
    case 17:
      unint64_t result = 1852793705;
      break;
    case 18:
      unint64_t result = 0x4C52556E6F6369;
      break;
    case 19:
      unint64_t result = 0x68736E6565726373;
      break;
    case 20:
      unint64_t result = 0x52746E65746E6F63;
      break;
    case 22:
      unint64_t result = 0x5079636176697270;
      break;
    case 23:
      unint64_t result = 0xD000000000000013;
      break;
    case 24:
      unint64_t result = 0x6867697279706F63;
      break;
    case 25:
      unint64_t result = 0x6D61726150797562;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_244587ADC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ManagedApp.Artwork.init(from:)(a1, a2);
}

uint64_t sub_244587AF4(void *a1)
{
  return ManagedApp.Artwork.encode(to:)(a1);
}

BOOL sub_244587B0C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s22ManagedAppDistribution0aB11DeclarationV15InstallBehaviorV0E10TimingEnumO9hashValueSivg_0()
{
  return sub_2445EF988();
}

uint64_t sub_244587B68()
{
  return sub_2445EF958();
}

uint64_t sub_244587B94()
{
  return sub_2445EF988();
}

unint64_t sub_244587BD8()
{
  return sub_2445877B8(*v0);
}

uint64_t sub_244587BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24458D914(a1, a2);
  *a3 = result;
  return result;
}

void sub_244587C08(unsigned char *a1@<X8>)
{
  *a1 = 26;
}

uint64_t sub_244587C14(uint64_t a1)
{
  unint64_t v2 = sub_24458992C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244587C50(uint64_t a1)
{
  unint64_t v2 = sub_24458992C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ManagedApp.id.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_244587CBC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t ManagedApp.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C988);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24458992C();
  sub_2445EFA18();
  LOBYTE(v13[0]) = 0;
  sub_2445EF798();
  if (!v2)
  {
    LOBYTE(v13[0]) = 1;
    sub_2445EF798();
    LOBYTE(v13[0]) = 2;
    sub_2445EF788();
    LOBYTE(v13[0]) = 3;
    sub_2445EF788();
    *(void *)&v13[0] = *(void *)(v3 + 64);
    char v14 = 4;
    sub_244589980();
    sub_2445EF7D8();
    uint64_t v9 = (int *)type metadata accessor for ManagedApp();
    LOBYTE(v13[0]) = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C9A0);
    sub_244589B48(&qword_268E8C9A8, &qword_268E8C9A0);
    sub_2445EF778();
    LOBYTE(v13[0]) = 6;
    sub_2445EEFB8();
    sub_244589CD8(&qword_268E8C9B0, MEMORY[0x263F07648]);
    sub_2445EF778();
    LOBYTE(v13[0]) = 7;
    sub_2445EF798();
    LOBYTE(v13[0]) = 8;
    sub_2445EF758();
    LOBYTE(v13[0]) = 9;
    sub_2445EF758();
    *(void *)&v13[0] = *(void *)(v3 + v9[14]);
    char v14 = 10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE1C8);
    sub_244589B8C(&qword_268E8C9B8);
    sub_2445EF7D8();
    LOBYTE(v13[0]) = 11;
    sub_2445EF758();
    *(void *)&v13[0] = *(void *)(v3 + v9[16]);
    char v14 = 12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C9C0);
    sub_244589BF0(&qword_268E8C9C8, &qword_268E8C9B0);
    sub_2445EF7D8();
    LOBYTE(v13[0]) = 13;
    sub_2445EF758();
    LOBYTE(v13[0]) = 14;
    sub_2445EF758();
    LOBYTE(v13[0]) = 15;
    sub_2445EEF68();
    sub_244589CD8(&qword_268E8C9D0, MEMORY[0x263F07490]);
    sub_2445EF778();
    LOBYTE(v13[0]) = 16;
    sub_2445EF758();
    uint64_t v10 = (_OWORD *)(v3 + v9[21]);
    long long v11 = v10[1];
    v13[0] = *v10;
    v13[1] = v11;
    char v14 = 17;
    sub_2445899D4();
    sub_2445EF778();
    LOBYTE(v13[0]) = 18;
    sub_2445EEF28();
    sub_244589CD8(&qword_268E8C9E0, MEMORY[0x263F06EA8]);
    sub_2445EF778();
    *(void *)&v13[0] = *(void *)(v3 + v9[23]);
    char v14 = 19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C9E8);
    sub_244589A28(&qword_268E8C9F0, (void (*)(void))sub_2445899D4);
    sub_2445EF7D8();
    LOBYTE(v13[0]) = 20;
    sub_2445EF758();
    LOBYTE(v13[0]) = 21;
    sub_2445EF778();
    LOBYTE(v13[0]) = 22;
    sub_2445EF778();
    LOBYTE(v13[0]) = 23;
    sub_2445EF7A8();
    LOBYTE(v13[0]) = 24;
    sub_2445EF758();
    LOBYTE(v13[0]) = 25;
    sub_2445EF758();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ManagedApp.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v72 = (uint64_t)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v70 = (uint64_t)&v69 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v69 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C940);
  MEMORY[0x270FA5388](v10 - 8);
  char v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C938);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C930);
  MEMORY[0x270FA5388](v16 - 8);
  char v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C9F8);
  uint64_t v19 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  char v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = (int *)type metadata accessor for ManagedApp();
  MEMORY[0x270FA5388](v78);
  v76 = a1;
  v77 = (uint64_t *)((char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24458992C();
  v74 = v21;
  uint64_t v23 = (uint64_t)v75;
  sub_2445EF9E8();
  if (v23) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v76);
  }
  uint64_t v25 = (uint64_t)v15;
  v75 = v12;
  uint64_t v26 = v19;
  LOBYTE(v79) = 0;
  uint64_t v27 = sub_2445EF6C8();
  uint64_t v28 = v77;
  uint64_t *v77 = v27;
  v28[1] = v29;
  LOBYTE(v79) = 1;
  v28[2] = sub_2445EF6C8();
  v28[3] = v30;
  LOBYTE(v79) = 2;
  v28[4] = sub_2445EF6B8();
  *((unsigned char *)v28 + 40) = v31 & 1;
  LOBYTE(v79) = 3;
  v28[6] = sub_2445EF6B8();
  *((unsigned char *)v28 + 56) = v32 & 1;
  char v81 = 4;
  sub_244589AF4();
  sub_2445EF708();
  v28[8] = v79;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C9A0);
  LOBYTE(v79) = 5;
  sub_244589B48(&qword_268E8CA08, &qword_268E8C9A0);
  sub_2445EF6A8();
  uint64_t v33 = v78;
  sub_244589874((uint64_t)v18, (uint64_t)v28 + v78[9], &qword_268E8C930);
  sub_2445EEFB8();
  LOBYTE(v79) = 6;
  sub_244589CD8(&qword_268E8CA10, MEMORY[0x263F07648]);
  sub_2445EF6A8();
  sub_244589874(v25, (uint64_t)v28 + v33[10], &qword_268E8C938);
  LOBYTE(v79) = 7;
  uint64_t v34 = sub_2445EF6C8();
  uint64_t v35 = v78;
  uint64_t v36 = (uint64_t *)((char *)v28 + v78[11]);
  *uint64_t v36 = v34;
  v36[1] = v37;
  LOBYTE(v79) = 8;
  uint64_t v38 = sub_2445EF688();
  unint64_t v39 = (uint64_t *)((char *)v28 + v35[12]);
  *unint64_t v39 = v38;
  v39[1] = v40;
  LOBYTE(v79) = 9;
  uint64_t v41 = sub_2445EF688();
  unint64_t v42 = (uint64_t *)((char *)v77 + v78[13]);
  *unint64_t v42 = v41;
  v42[1] = v43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE1C8);
  char v81 = 10;
  sub_244589B8C(&qword_268E8CA18);
  sub_2445EF708();
  *(uint64_t *)((char *)v77 + v78[14]) = v79;
  LOBYTE(v79) = 11;
  uint64_t v44 = sub_2445EF688();
  v45 = (uint64_t *)((char *)v77 + v78[15]);
  uint64_t *v45 = v44;
  v45[1] = v46;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C9C0);
  char v81 = 12;
  sub_244589BF0(&qword_268E8CA20, &qword_268E8CA10);
  sub_2445EF708();
  *(uint64_t *)((char *)v77 + v78[16]) = v79;
  LOBYTE(v79) = 13;
  uint64_t v47 = sub_2445EF688();
  v48 = (uint64_t *)((char *)v77 + v78[17]);
  uint64_t *v48 = v47;
  v48[1] = v49;
  LOBYTE(v79) = 14;
  uint64_t v50 = sub_2445EF688();
  id v51 = (uint64_t *)((char *)v77 + v78[18]);
  *id v51 = v50;
  v51[1] = v52;
  sub_2445EEF68();
  LOBYTE(v79) = 15;
  sub_244589CD8(&qword_268E8CA28, MEMORY[0x263F07490]);
  sub_2445EF6A8();
  sub_244589874((uint64_t)v75, (uint64_t)v77 + v78[19], &qword_268E8C940);
  LOBYTE(v79) = 16;
  uint64_t v53 = sub_2445EF688();
  v54 = (uint64_t *)((char *)v77 + v78[20]);
  uint64_t *v54 = v53;
  v54[1] = v55;
  char v81 = 17;
  sub_244589C84();
  sub_2445EF6A8();
  long long v56 = (_OWORD *)((char *)v77 + v78[21]);
  long long v57 = v80;
  *long long v56 = v79;
  v56[1] = v57;
  sub_2445EEF28();
  LOBYTE(v79) = 18;
  sub_244589CD8(&qword_268E8CA38, MEMORY[0x263F06EA8]);
  sub_2445EF6A8();
  sub_244589874((uint64_t)v9, (uint64_t)v77 + v78[22], &qword_26B0CE530);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C9E8);
  char v81 = 19;
  sub_244589A28(&qword_268E8CA40, (void (*)(void))sub_244589C84);
  sub_2445EF708();
  *(uint64_t *)((char *)v77 + v78[23]) = v79;
  LOBYTE(v79) = 20;
  uint64_t v58 = sub_2445EF688();
  uint64_t v59 = (uint64_t *)((char *)v77 + v78[24]);
  *uint64_t v59 = v58;
  v59[1] = v60;
  LOBYTE(v79) = 21;
  sub_2445EF6A8();
  sub_244589874(v70, (uint64_t)v77 + v78[25], &qword_26B0CE530);
  LOBYTE(v79) = 22;
  sub_2445EF6A8();
  sub_244589874(v72, (uint64_t)v77 + v78[26], &qword_26B0CE530);
  LOBYTE(v79) = 23;
  *((unsigned char *)v77 + v78[27]) = sub_2445EF6D8() & 1;
  LOBYTE(v79) = 24;
  uint64_t v61 = sub_2445EF688();
  double v62 = (uint64_t *)((char *)v77 + v78[28]);
  *double v62 = v61;
  v62[1] = v63;
  LOBYTE(v79) = 25;
  uint64_t v64 = sub_2445EF688();
  uint64_t v66 = v65;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v74, v73);
  uint64_t v67 = (uint64_t)v77;
  v68 = (uint64_t *)((char *)v77 + v78[29]);
  uint64_t *v68 = v64;
  v68[1] = v66;
  sub_244586144(v67, v71);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v76);
  return sub_2445861A8(v67);
}

uint64_t sub_2445895DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ManagedApp.init(from:)(a1, a2);
}

uint64_t sub_2445895F4(void *a1)
{
  return ManagedApp.encode(to:)(a1);
}

uint64_t sub_24458960C(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CAA8);
  uint64_t v10 = *(void *)(sub_2445EEF28() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_2445EF5E8();
    __break(1u);
    return result;
  }
  _OWORD v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_2445EEF28() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24458D5D4(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_244589874(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_2445898D8()
{
  unint64_t result = qword_268E8C978;
  if (!qword_268E8C978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8C978);
  }
  return result;
}

unint64_t sub_24458992C()
{
  unint64_t result = qword_268E8C990;
  if (!qword_268E8C990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8C990);
  }
  return result;
}

unint64_t sub_244589980()
{
  unint64_t result = qword_268E8C998;
  if (!qword_268E8C998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8C998);
  }
  return result;
}

unint64_t sub_2445899D4()
{
  unint64_t result = qword_268E8C9D8;
  if (!qword_268E8C9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8C9D8);
  }
  return result;
}

uint64_t sub_244589A28(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E8C9E8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_244589A98(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_244589AF4()
{
  unint64_t result = qword_268E8CA00;
  if (!qword_268E8CA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CA00);
  }
  return result;
}

uint64_t sub_244589B48(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_244589B8C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B0CE1C8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_244589BF0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E8C9C0);
    sub_244589CD8(a2, MEMORY[0x263F07648]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_244589C84()
{
  unint64_t result = qword_268E8CA30;
  if (!qword_268E8CA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CA30);
  }
  return result;
}

uint64_t sub_244589CD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_244589D20()
{
  return MEMORY[0x263F8D320];
}

uint64_t initializeBufferWithCopyOfBuffer for ManagedApp(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[2];
    uint64_t v9 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v9;
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    *(void *)(a1 + 48) = a2[6];
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    *(void *)(a1 + 64) = a2[8];
    uint64_t v10 = a3[9];
    uint64_t v11 = (void *)(a1 + v10);
    unint64_t v12 = (char *)a2 + v10;
    *(void *)(a1 + 16) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C9A0);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C930);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    uint64_t v17 = a3[10];
    unint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = sub_2445EEFB8();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C938);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v23 = a3[11];
    uint64_t v24 = a3[12];
    uint64_t v25 = (void *)(a1 + v23);
    uint64_t v26 = (uint64_t *)((char *)a2 + v23);
    uint64_t v89 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v89;
    uint64_t v27 = (void *)(a1 + v24);
    uint64_t v28 = (uint64_t *)((char *)a2 + v24);
    uint64_t v90 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v90;
    uint64_t v29 = a3[13];
    uint64_t v30 = a3[14];
    char v31 = (void *)(a1 + v29);
    char v32 = (uint64_t *)((char *)a2 + v29);
    uint64_t v33 = v32[1];
    *char v31 = *v32;
    v31[1] = v33;
    *(void *)(a1 + v30) = *(uint64_t *)((char *)a2 + v30);
    uint64_t v34 = a3[15];
    uint64_t v35 = a3[16];
    uint64_t v36 = (void *)(a1 + v34);
    uint64_t v37 = (uint64_t *)((char *)a2 + v34);
    uint64_t v38 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v38;
    *(void *)(a1 + v35) = *(uint64_t *)((char *)a2 + v35);
    uint64_t v39 = a3[17];
    uint64_t v40 = a3[18];
    uint64_t v41 = (void *)(a1 + v39);
    unint64_t v42 = (uint64_t *)((char *)a2 + v39);
    uint64_t v43 = v42[1];
    *uint64_t v41 = *v42;
    v41[1] = v43;
    uint64_t v44 = (void *)(a1 + v40);
    v45 = (uint64_t *)((char *)a2 + v40);
    uint64_t v46 = v45[1];
    *uint64_t v44 = *v45;
    v44[1] = v46;
    uint64_t v47 = a3[19];
    __dst = (void *)(a1 + v47);
    v88 = (char *)a2 + v47;
    uint64_t v48 = sub_2445EEF68();
    uint64_t v49 = *(void *)(v48 - 8);
    v87 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v49 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v87(v88, 1, v48))
    {
      uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C940);
      memcpy(__dst, v88, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v49 + 16))(__dst, v88, v48);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(__dst, 0, 1, v48);
    }
    uint64_t v51 = a3[20];
    uint64_t v52 = a3[21];
    uint64_t v53 = (void *)(a1 + v51);
    v54 = (uint64_t *)((char *)a2 + v51);
    uint64_t v55 = v54[1];
    void *v53 = *v54;
    v53[1] = v55;
    uint64_t v56 = a1 + v52;
    uint64_t v57 = (uint64_t)a2 + v52;
    uint64_t v58 = *(void *)(v57 + 8);
    *(void *)uint64_t v56 = *(void *)v57;
    *(void *)(v56 + 8) = v58;
    *(_OWORD *)(v56 + 16) = *(_OWORD *)(v57 + 16);
    uint64_t v59 = a3[22];
    __dsta = (void *)(a1 + v59);
    uint64_t v60 = (char *)a2 + v59;
    uint64_t v61 = sub_2445EEF28();
    uint64_t v62 = *(void *)(v61 - 8);
    uint64_t v63 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v62 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v63(v60, 1, v61))
    {
      uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
      memcpy(__dsta, v60, *(void *)(*(void *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v62 + 16))(__dsta, v60, v61);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v62 + 56))(__dsta, 0, 1, v61);
    }
    uint64_t v65 = v62;
    uint64_t v66 = a3[24];
    *(void *)(a1 + a3[23]) = *(uint64_t *)((char *)a2 + a3[23]);
    uint64_t v67 = (void *)(a1 + v66);
    v68 = (uint64_t *)((char *)a2 + v66);
    uint64_t v69 = v68[1];
    *uint64_t v67 = *v68;
    v67[1] = v69;
    uint64_t v70 = a3[25];
    uint64_t v71 = (void *)(a1 + v70);
    uint64_t v72 = (char *)a2 + v70;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v63(v72, 1, v61))
    {
      uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
      memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v65 + 16))(v71, v72, v61);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(v71, 0, 1, v61);
    }
    uint64_t v74 = a3[26];
    v75 = (void *)(a1 + v74);
    v76 = (char *)a2 + v74;
    if (v63((char *)a2 + v74, 1, v61))
    {
      uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
      memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v65 + 16))(v75, v76, v61);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(v75, 0, 1, v61);
    }
    uint64_t v78 = a3[28];
    *(unsigned char *)(a1 + a3[27]) = *((unsigned char *)a2 + a3[27]);
    long long v79 = (void *)(a1 + v78);
    long long v80 = (uint64_t *)((char *)a2 + v78);
    uint64_t v81 = v80[1];
    *long long v79 = *v80;
    v79[1] = v81;
    uint64_t v82 = a3[29];
    v83 = (void *)(a1 + v82);
    v84 = (uint64_t *)((char *)a2 + v82);
    uint64_t v85 = v84[1];
    void *v83 = *v84;
    v83[1] = v85;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ManagedApp(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C9A0);
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + a2[10];
  uint64_t v8 = sub_2445EEFB8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[19];
  uint64_t v11 = sub_2445EEF68();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = a1 + a2[22];
  uint64_t v14 = sub_2445EEF28();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (!v16(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = a1 + a2[25];
  if (!v16(v17, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v14);
  }
  uint64_t v18 = a1 + a2[26];
  if (!v16(v18, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v14);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ManagedApp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v9 = a3[9];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  *(void *)(a1 + 16) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C9A0);
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C930);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = a3[10];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = sub_2445EEFB8();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C938);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v21 = a3[11];
  uint64_t v22 = a3[12];
  uint64_t v23 = (void *)(a1 + v21);
  uint64_t v24 = (void *)(a2 + v21);
  uint64_t v87 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v87;
  uint64_t v25 = (void *)(a1 + v22);
  uint64_t v26 = (void *)(a2 + v22);
  uint64_t v88 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v88;
  uint64_t v27 = a3[13];
  uint64_t v28 = a3[14];
  uint64_t v29 = (void *)(a1 + v27);
  uint64_t v30 = (void *)(a2 + v27);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  *(void *)(a1 + v28) = *(void *)(a2 + v28);
  uint64_t v32 = a3[15];
  uint64_t v33 = a3[16];
  uint64_t v34 = (void *)(a1 + v32);
  uint64_t v35 = (void *)(a2 + v32);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  *(void *)(a1 + v33) = *(void *)(a2 + v33);
  uint64_t v37 = a3[17];
  uint64_t v38 = a3[18];
  uint64_t v39 = (void *)(a1 + v37);
  uint64_t v40 = (void *)(a2 + v37);
  uint64_t v41 = v40[1];
  *uint64_t v39 = *v40;
  v39[1] = v41;
  unint64_t v42 = (void *)(a1 + v38);
  uint64_t v43 = (void *)(a2 + v38);
  uint64_t v44 = v43[1];
  *unint64_t v42 = *v43;
  v42[1] = v44;
  uint64_t v45 = a3[19];
  __dst = (void *)(a1 + v45);
  v91 = a3;
  uint64_t v85 = (const void *)(a2 + v45);
  uint64_t v46 = sub_2445EEF68();
  uint64_t v47 = *(void *)(v46 - 8);
  v86 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v86(v85, 1, v46))
  {
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C940);
    memcpy(__dst, v85, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v47 + 16))(__dst, v85, v46);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v46);
  }
  uint64_t v49 = v91[20];
  uint64_t v50 = v91[21];
  uint64_t v51 = (void *)(a1 + v49);
  uint64_t v52 = (void *)(a2 + v49);
  uint64_t v53 = v52[1];
  *uint64_t v51 = *v52;
  v51[1] = v53;
  uint64_t v54 = a1 + v50;
  uint64_t v55 = a2 + v50;
  uint64_t v56 = *(void *)(v55 + 8);
  *(void *)uint64_t v54 = *(void *)v55;
  *(void *)(v54 + 8) = v56;
  *(_OWORD *)(v54 + 16) = *(_OWORD *)(v55 + 16);
  uint64_t v57 = v91[22];
  __dsta = (void *)(a1 + v57);
  uint64_t v58 = (const void *)(a2 + v57);
  uint64_t v59 = sub_2445EEF28();
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v61 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v60 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v61(v58, 1, v59))
  {
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
    memcpy(__dsta, v58, *(void *)(*(void *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v60 + 16))(__dsta, v58, v59);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v60 + 56))(__dsta, 0, 1, v59);
  }
  uint64_t v63 = v60;
  uint64_t v64 = v91[24];
  *(void *)(a1 + v91[23]) = *(void *)(a2 + v91[23]);
  uint64_t v65 = (void *)(a1 + v64);
  uint64_t v66 = (void *)(a2 + v64);
  uint64_t v67 = v66[1];
  *uint64_t v65 = *v66;
  v65[1] = v67;
  uint64_t v68 = v91[25];
  uint64_t v69 = (void *)(a1 + v68);
  uint64_t v70 = (const void *)(a2 + v68);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v61(v70, 1, v59))
  {
    uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
    memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v63 + 16))(v69, v70, v59);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v69, 0, 1, v59);
  }
  uint64_t v72 = v91[26];
  uint64_t v73 = (void *)(a1 + v72);
  uint64_t v74 = (const void *)(a2 + v72);
  if (v61((const void *)(a2 + v72), 1, v59))
  {
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
    memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v63 + 16))(v73, v74, v59);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v73, 0, 1, v59);
  }
  uint64_t v76 = v91[28];
  *(unsigned char *)(a1 + v91[27]) = *(unsigned char *)(a2 + v91[27]);
  uint64_t v77 = (void *)(a1 + v76);
  uint64_t v78 = (void *)(a2 + v76);
  uint64_t v79 = v78[1];
  void *v77 = *v78;
  v77[1] = v79;
  uint64_t v80 = v91[29];
  uint64_t v81 = (void *)(a1 + v80);
  uint64_t v82 = (void *)(a2 + v80);
  uint64_t v83 = v82[1];
  *uint64_t v81 = *v82;
  v81[1] = v83;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ManagedApp(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v8 = a3[9];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C9A0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C930);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = a3[10];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = sub_2445EEFB8();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_12:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C938);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_13:
  uint64_t v26 = a3[11];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[12];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  *uint64_t v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[13];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[15];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  *uint64_t v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[17];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (void *)(a2 + v38);
  *uint64_t v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[18];
  unint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (void *)(a2 + v41);
  *unint64_t v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[19];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (void *)(a2 + v44);
  uint64_t v47 = sub_2445EEF68();
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v49 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v48 + 48);
  int v50 = v49(v45, 1, v47);
  int v51 = v49(v46, 1, v47);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, void *, uint64_t))(v48 + 16))(v45, v46, v47);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v48 + 8))(v45, v47);
LABEL_18:
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C940);
    memcpy(v45, v46, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v48 + 24))(v45, v46, v47);
LABEL_19:
  uint64_t v53 = a3[20];
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (void *)(a2 + v53);
  void *v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = a3[21];
  uint64_t v57 = (void *)(a1 + v56);
  uint64_t v58 = a2 + v56;
  *uint64_t v57 = *(void *)(a2 + v56);
  v57[1] = *(void *)(a2 + v56 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v57[2] = *(void *)(v58 + 16);
  v57[3] = *(void *)(v58 + 24);
  uint64_t v59 = a3[22];
  uint64_t v60 = (void *)(a1 + v59);
  uint64_t v61 = (void *)(a2 + v59);
  uint64_t v62 = sub_2445EEF28();
  uint64_t v63 = *(void *)(v62 - 8);
  uint64_t v64 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v63 + 48);
  int v65 = v64(v60, 1, v62);
  int v66 = v64(v61, 1, v62);
  if (v65)
  {
    if (!v66)
    {
      (*(void (**)(void *, void *, uint64_t))(v63 + 16))(v60, v61, v62);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v66)
  {
    (*(void (**)(void *, uint64_t))(v63 + 8))(v60, v62);
LABEL_24:
    uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
    memcpy(v60, v61, *(void *)(*(void *)(v67 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v63 + 24))(v60, v61, v62);
LABEL_25:
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v68 = a3[24];
  uint64_t v69 = (void *)(a1 + v68);
  uint64_t v70 = (void *)(a2 + v68);
  *uint64_t v69 = *v70;
  v69[1] = v70[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v71 = a3[25];
  uint64_t v72 = (void *)(a1 + v71);
  uint64_t v73 = (void *)(a2 + v71);
  int v74 = v64((void *)(a1 + v71), 1, v62);
  int v75 = v64(v73, 1, v62);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(void *, void *, uint64_t))(v63 + 16))(v72, v73, v62);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v72, 0, 1, v62);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v75)
  {
    (*(void (**)(void *, uint64_t))(v63 + 8))(v72, v62);
LABEL_30:
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
    memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v63 + 24))(v72, v73, v62);
LABEL_31:
  uint64_t v77 = a3[26];
  uint64_t v78 = (void *)(a1 + v77);
  uint64_t v79 = (void *)(a2 + v77);
  int v80 = v64((void *)(a1 + v77), 1, v62);
  int v81 = v64(v79, 1, v62);
  if (!v80)
  {
    if (!v81)
    {
      (*(void (**)(void *, void *, uint64_t))(v63 + 24))(v78, v79, v62);
      goto LABEL_37;
    }
    (*(void (**)(void *, uint64_t))(v63 + 8))(v78, v62);
    goto LABEL_36;
  }
  if (v81)
  {
LABEL_36:
    uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, void *, uint64_t))(v63 + 16))(v78, v79, v62);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v78, 0, 1, v62);
LABEL_37:
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  uint64_t v83 = a3[28];
  v84 = (void *)(a1 + v83);
  uint64_t v85 = (void *)(a2 + v83);
  void *v84 = *v85;
  v84[1] = v85[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v86 = a3[29];
  uint64_t v87 = (void *)(a1 + v86);
  uint64_t v88 = (void *)(a2 + v86);
  *uint64_t v87 = *v88;
  v87[1] = v88[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ManagedApp(uint64_t a1, long long *a2, int *a3)
{
  long long v6 = *a2;
  long long v7 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  uint64_t v8 = a3[9];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  *(_OWORD *)a1 = v6;
  *(_OWORD *)(a1 + 16) = v7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C9A0);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C930);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = a3[10];
  int v15 = (void *)(a1 + v14);
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_2445EEFB8();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C938);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(long long *)((char *)a2 + a3[11]);
  *(_OWORD *)(a1 + v20) = *(long long *)((char *)a2 + v20);
  uint64_t v21 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(long long *)((char *)a2 + a3[13]);
  *(void *)(a1 + v21) = *(void *)((char *)a2 + v21);
  uint64_t v22 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(long long *)((char *)a2 + a3[15]);
  *(void *)(a1 + v22) = *(void *)((char *)a2 + v22);
  uint64_t v23 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(long long *)((char *)a2 + a3[17]);
  *(_OWORD *)(a1 + v23) = *(long long *)((char *)a2 + v23);
  uint64_t v24 = a3[19];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_2445EEF68();
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C940);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  uint64_t v30 = a3[21];
  *(_OWORD *)(a1 + a3[20]) = *(long long *)((char *)a2 + a3[20]);
  uint64_t v31 = (_OWORD *)(a1 + v30);
  uint64_t v32 = (long long *)((char *)a2 + v30);
  long long v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  uint64_t v34 = a3[22];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = sub_2445EEF28();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48);
  if (v39(v36, 1, v37))
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
    memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  uint64_t v41 = a3[24];
  *(void *)(a1 + a3[23]) = *(void *)((char *)a2 + a3[23]);
  *(_OWORD *)(a1 + v41) = *(long long *)((char *)a2 + v41);
  uint64_t v42 = a3[25];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (char *)a2 + v42;
  if (v39((char *)a2 + v42, 1, v37))
  {
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v38 + 32))(v43, v44, v37);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v43, 0, 1, v37);
  }
  uint64_t v46 = a3[26];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (char *)a2 + v46;
  if (v39((char *)a2 + v46, 1, v37))
  {
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v38 + 32))(v47, v48, v37);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v47, 0, 1, v37);
  }
  uint64_t v50 = a3[28];
  *(unsigned char *)(a1 + a3[27]) = *((unsigned char *)a2 + a3[27]);
  *(_OWORD *)(a1 + v50) = *(long long *)((char *)a2 + v50);
  *(_OWORD *)(a1 + a3[29]) = *(long long *)((char *)a2 + a3[29]);
  return a1;
}

uint64_t assignWithTake for ManagedApp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v8 = a3[9];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C9A0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C930);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = a3[10];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = sub_2445EEFB8();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_12:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C938);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v18, v19, v20);
LABEL_13:
  uint64_t v26 = a3[11];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[12];
  uint64_t v32 = (void *)(a1 + v31);
  long long v33 = (uint64_t *)(a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *uint64_t v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[13];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (uint64_t *)(a2 + v36);
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  *uint64_t v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[15];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (uint64_t *)(a2 + v41);
  uint64_t v45 = *v43;
  uint64_t v44 = v43[1];
  *uint64_t v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_bridgeObjectRelease();
  uint64_t v46 = a3[17];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (uint64_t *)(a2 + v46);
  uint64_t v50 = *v48;
  uint64_t v49 = v48[1];
  void *v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  uint64_t v51 = a3[18];
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = (uint64_t *)(a2 + v51);
  uint64_t v55 = *v53;
  uint64_t v54 = v53[1];
  *uint64_t v52 = v55;
  v52[1] = v54;
  swift_bridgeObjectRelease();
  uint64_t v56 = a3[19];
  uint64_t v57 = (void *)(a1 + v56);
  uint64_t v58 = (void *)(a2 + v56);
  uint64_t v59 = sub_2445EEF68();
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v61 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v60 + 48);
  int v62 = v61(v57, 1, v59);
  int v63 = v61(v58, 1, v59);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(void *, void *, uint64_t))(v60 + 32))(v57, v58, v59);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v63)
  {
    (*(void (**)(void *, uint64_t))(v60 + 8))(v57, v59);
LABEL_18:
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C940);
    memcpy(v57, v58, *(void *)(*(void *)(v64 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v60 + 40))(v57, v58, v59);
LABEL_19:
  uint64_t v65 = a3[20];
  int v66 = (void *)(a1 + v65);
  uint64_t v67 = (uint64_t *)(a2 + v65);
  uint64_t v69 = *v67;
  uint64_t v68 = v67[1];
  *int v66 = v69;
  v66[1] = v68;
  swift_bridgeObjectRelease();
  uint64_t v70 = a3[21];
  uint64_t v71 = a1 + v70;
  uint64_t v72 = a2 + v70;
  uint64_t v73 = *(void *)(a2 + v70 + 8);
  *(void *)uint64_t v71 = *(void *)(a2 + v70);
  *(void *)(v71 + 8) = v73;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v71 + 16) = *(_OWORD *)(v72 + 16);
  uint64_t v74 = a3[22];
  int v75 = (void *)(a1 + v74);
  uint64_t v76 = (void *)(a2 + v74);
  uint64_t v77 = sub_2445EEF28();
  uint64_t v78 = *(void *)(v77 - 8);
  uint64_t v79 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v78 + 48);
  int v80 = v79(v75, 1, v77);
  int v81 = v79(v76, 1, v77);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(void *, void *, uint64_t))(v78 + 32))(v75, v76, v77);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v81)
  {
    (*(void (**)(void *, uint64_t))(v78 + 8))(v75, v77);
LABEL_24:
    uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
    memcpy(v75, v76, *(void *)(*(void *)(v82 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v78 + 40))(v75, v76, v77);
LABEL_25:
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  swift_bridgeObjectRelease();
  uint64_t v83 = a3[24];
  v84 = (void *)(a1 + v83);
  uint64_t v85 = (uint64_t *)(a2 + v83);
  uint64_t v87 = *v85;
  uint64_t v86 = v85[1];
  void *v84 = v87;
  v84[1] = v86;
  swift_bridgeObjectRelease();
  uint64_t v88 = a3[25];
  uint64_t v89 = (void *)(a1 + v88);
  uint64_t v90 = (void *)(a2 + v88);
  int v91 = v79((void *)(a1 + v88), 1, v77);
  int v92 = v79(v90, 1, v77);
  if (v91)
  {
    if (!v92)
    {
      (*(void (**)(void *, void *, uint64_t))(v78 + 32))(v89, v90, v77);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v78 + 56))(v89, 0, 1, v77);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v92)
  {
    (*(void (**)(void *, uint64_t))(v78 + 8))(v89, v77);
LABEL_30:
    uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
    memcpy(v89, v90, *(void *)(*(void *)(v93 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v78 + 40))(v89, v90, v77);
LABEL_31:
  uint64_t v94 = a3[26];
  v95 = (void *)(a1 + v94);
  v96 = (void *)(a2 + v94);
  int v97 = v79((void *)(a1 + v94), 1, v77);
  int v98 = v79(v96, 1, v77);
  if (!v97)
  {
    if (!v98)
    {
      (*(void (**)(void *, void *, uint64_t))(v78 + 40))(v95, v96, v77);
      goto LABEL_37;
    }
    (*(void (**)(void *, uint64_t))(v78 + 8))(v95, v77);
    goto LABEL_36;
  }
  if (v98)
  {
LABEL_36:
    uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
    memcpy(v95, v96, *(void *)(*(void *)(v99 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, void *, uint64_t))(v78 + 32))(v95, v96, v77);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v78 + 56))(v95, 0, 1, v77);
LABEL_37:
  uint64_t v100 = a3[28];
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  v101 = (void *)(a1 + v100);
  v102 = (uint64_t *)(a2 + v100);
  uint64_t v104 = *v102;
  uint64_t v103 = v102[1];
  void *v101 = v104;
  v101[1] = v103;
  swift_bridgeObjectRelease();
  uint64_t v105 = a3[29];
  v106 = (void *)(a1 + v105);
  v107 = (uint64_t *)(a2 + v105);
  uint64_t v109 = *v107;
  uint64_t v108 = v107[1];
  void *v106 = v109;
  v106[1] = v108;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedApp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24458C7AC);
}

uint64_t sub_24458C7AC(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C930);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[9];
LABEL_11:
    int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C938);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[10];
    goto LABEL_11;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C940);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[19];
    goto LABEL_11;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[22];

  return v16(v18, a2, v17);
}

uint64_t storeEnumTagSinglePayload for ManagedApp(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24458C994);
}

uint64_t sub_24458C994(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C930);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[9];
LABEL_9:
    int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C938);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_9;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C940);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[19];
    goto LABEL_9;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[22];

  return v16(v18, a2, a2, v17);
}

void sub_24458CB68()
{
  sub_24458CD74();
  if (v0 <= 0x3F)
  {
    sub_24458CDD0(319, &qword_268E8CA60, MEMORY[0x263F07648]);
    if (v1 <= 0x3F)
    {
      sub_24458CDD0(319, &qword_268E8CA68, MEMORY[0x263F07490]);
      if (v2 <= 0x3F)
      {
        sub_24458CDD0(319, &qword_268E8CA70, MEMORY[0x263F06EA8]);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_24458CD74()
{
  if (!qword_268E8CA58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E8C9A0);
    unint64_t v0 = sub_2445EF468();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268E8CA58);
    }
  }
}

void sub_24458CDD0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2445EF468();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ManagedApp.Artwork(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t initializeWithCopy for ManagedApp.Artwork(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ManagedApp.Artwork(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for ManagedApp.Artwork(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedApp.Artwork(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedApp.Artwork(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedApp.Artwork()
{
  return &type metadata for ManagedApp.Artwork;
}

uint64_t getEnumTagSinglePayload for ManagedApp.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE7) {
    goto LABEL_17;
  }
  if (a2 + 25 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 25) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 25;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1A;
  int v8 = v6 - 26;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ManagedApp.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 25 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 25) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE6)
  {
    unsigned int v6 = ((a2 - 231) >> 8) + 1;
    *__n128 result = a2 + 25;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24458D130);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 25;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedApp.CodingKeys()
{
  return &type metadata for ManagedApp.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ManagedApp.Artwork.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24458D234);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedApp.Artwork.CodingKeys()
{
  return &type metadata for ManagedApp.Artwork.CodingKeys;
}

unint64_t sub_24458D270()
{
  unint64_t result = qword_268E8CA78;
  if (!qword_268E8CA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CA78);
  }
  return result;
}

unint64_t sub_24458D2C8()
{
  unint64_t result = qword_268E8CA80;
  if (!qword_268E8CA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CA80);
  }
  return result;
}

unint64_t sub_24458D320()
{
  unint64_t result = qword_268E8CA88;
  if (!qword_268E8CA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CA88);
  }
  return result;
}

unint64_t sub_24458D378()
{
  unint64_t result = qword_268E8CA90;
  if (!qword_268E8CA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CA90);
  }
  return result;
}

unint64_t sub_24458D3D0()
{
  unint64_t result = qword_268E8CA98;
  if (!qword_268E8CA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CA98);
  }
  return result;
}

unint64_t sub_24458D428()
{
  unint64_t result = qword_268E8CAA0;
  if (!qword_268E8CAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CAA0);
  }
  return result;
}

void *sub_24458D47C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24458D4A4(a1, a2, a3, a4, &qword_26B0CE828);
}

void *sub_24458D490(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24458D4A4(a1, a2, a3, a4, &qword_26B0CE188);
}

void *sub_24458D4A4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v11 = (void *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4]) {
          memmove(v13, a4 + 4, 24 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24458E3CC(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_24458D5D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_2445EEF28() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_2445EF648();
  __break(1u);
  return result;
}

uint64_t sub_24458D72C(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v7 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (a1 == a5 && a2 == a6 && !(a3 >> 16) && v7 == a4 >> 16) {
    return 1;
  }
  else {
    return sub_2445EF808() & 1;
  }
}

uint64_t sub_24458D798(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C706D65546C7275 && a2 == 0xEB00000000657461;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x687464695778616DLL && a2 == 0xE800000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x686769654878616DLL && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24458D914(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000002445F89D0 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44496D657469 && a2 == 0xE600000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002445F89F0 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D726F6674616C70 && a2 == 0xE800000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x657A6953656C6966 && a2 == 0xE800000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002445F8A10 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x72656C6C6573 && a2 == 0xE600000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7365726E6567 && a2 == 0xE600000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x65676175676E616CLL && a2 == 0xE900000000000073 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6D65726975716572 && a2 == 0xEC00000073746E65 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x44657361656C6572 && a2 == 0xEB00000000657461 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x4E657361656C6572 && a2 == 0xEC0000007365746FLL || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 1852793705 && a2 == 0xE400000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x4C52556E6F6369 && a2 == 0xE700000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x68736E6565726373 && a2 == 0xEB0000000073746FLL || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x52746E65746E6F63 && a2 == 0xED0000676E697461 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002445F8A30 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x5079636176697270 && a2 == 0xED00007963696C6FLL || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002445F8A50 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x6867697279706F63 && a2 == 0xE900000000000074 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x6D61726150797562 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else
  {
    char v5 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v5) {
      return 25;
    }
    else {
      return 26;
    }
  }
}

uint64_t sub_24458E3CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2445EF648();
  __break(1u);
  return result;
}

uint64_t sub_24458E4C0@<X0>(void *a1@<X8>)
{
  return sub_244586F64(*(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), a1, *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(void *)(v1 + 96));
}

uint64_t ManagedAppInstallRequest.declarationIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedAppInstallRequest.buyParams.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedAppInstallRequest.userInitiated.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t ManagedAppInstallRequest.userInitiated.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*ManagedAppInstallRequest.userInitiated.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppInstallRequest.externalVersionID.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t ManagedAppInstallRequest.init(declarationIdentifier:buyParams:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  *(unsigned char *)(a5 + 32) = 1;
  *(void *)(a5 + 40) = 0;
  *(unsigned char *)(a5 + 48) = 1;
  return result;
}

uint64_t ManagedAppInstallRequest.init(declarationIdentifier:buyParams:externalVersionID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  *(void *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(unsigned char *)(a7 + 32) = 1;
  *(void *)(a7 + 40) = a5;
  *(unsigned char *)(a7 + 48) = a6 & 1;
  return result;
}

uint64_t ManagedAppInstallRequest.request()()
{
  long long v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 96) = v2;
  *(unsigned char *)(v1 + 65) = *(unsigned char *)(v0 + 32);
  *(void *)(v1 + 112) = *(void *)(v0 + 40);
  *(unsigned char *)(v1 + 66) = *(unsigned char *)(v0 + 48);
  return MEMORY[0x270FA2498](sub_24458E624, 0, 0);
}

uint64_t sub_24458E624()
{
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  char v1 = *(unsigned char *)(v0 + 66);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 112);
  char v4 = *(unsigned char *)(v0 + 65);
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v7 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_244594A4C();
  sub_244594AA0();
  *(void *)(v0 + 16) = v7;
  *(void *)(v0 + 24) = v5;
  *(void *)(v0 + 32) = v6;
  *(void *)(v0 + 40) = v2;
  *(unsigned char *)(v0 + 48) = v4;
  *(void *)(v0 + 56) = v3;
  *(void *)(v0 + 72) = v0 + 16;
  *(unsigned char *)(v0 + 64) = v1;
  uint64_t v10 = (char *)&dword_268E8CAD0 + dword_268E8CAD0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_24458E798;
  return ((uint64_t (*)(uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v10)(v0 + 72, sub_24458E9C0, 0);
}

uint64_t sub_24458E798()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24458E930;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_24458E8C0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24458E8C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24458E930()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_24458E9C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)sub_2445EEF38();
  void v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_2445D5428;
  v10[3] = &block_descriptor_176;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_installManagedApp_reply_, v8, v9);
  _Block_release(v9);
}

unint64_t sub_24458EA9C()
{
  unint64_t result = 0xD000000000000015;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6D61726150797562;
      break;
    case 2:
      unint64_t result = 0x74696E4972657375;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24458EB40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244598D54(a1, a2);
  *a3 = result;
  return result;
}

void sub_24458EB68(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_24458EB74(uint64_t a1)
{
  unint64_t v2 = sub_244594AF4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24458EBB0(uint64_t a1)
{
  unint64_t v2 = sub_244594AF4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ManagedAppInstallRequest.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CAD8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v16 = *(void *)(v1 + 24);
  uint64_t v17 = v8;
  int v18 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v15 = *(void *)(v1 + 40);
  v14[1] = *(unsigned __int8 *)(v1 + 48);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1;
  uint64_t v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_244594AF4();
  sub_2445EFA18();
  char v22 = 0;
  sub_2445EF758();
  if (!v2)
  {
    char v21 = 1;
    sub_2445EF758();
    char v20 = 2;
    sub_2445EF7A8();
    char v19 = 3;
    sub_2445EF788();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

uint64_t ManagedAppInstallRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CAE8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244594AF4();
  sub_2445EF9E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v30 = 0;
  uint64_t v9 = sub_2445EF688();
  uint64_t v11 = v10;
  uint64_t v25 = v9;
  char v29 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_2445EF688();
  uint64_t v14 = v13;
  uint64_t v23 = v12;
  char v28 = 2;
  swift_bridgeObjectRetain();
  uint64_t v24 = v14;
  int v26 = sub_2445EF6D8();
  char v27 = 3;
  uint64_t v16 = sub_2445EF6B8();
  uint64_t v17 = v26 & 1;
  int v18 = v8;
  char v20 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
  uint64_t v21 = v24;
  *(void *)a2 = v25;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v23;
  *(void *)(a2 + 24) = v21;
  *(unsigned char *)(a2 + 32) = v17;
  *(void *)(a2 + 40) = v16;
  *(unsigned char *)(a2 + 48) = v20 & 1;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24458F09C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ManagedAppInstallRequest.init(from:)(a1, a2);
}

uint64_t sub_24458F0B4(void *a1)
{
  return ManagedAppInstallRequest.encode(to:)(a1);
}

uint64_t sub_24458F0CC(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v6 = a2[2];
  uint64_t v5 = a2[3];
  char v7 = *((unsigned char *)a2 + 32);
  long long v16 = *(_OWORD *)((char *)a2 + 33);
  sub_244594AA0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445EF9F8();
  uint64_t v17 = v10;
  v10[2] = v4;
  v10[3] = v3;
  void v10[4] = v6;
  v10[5] = v5;
  char v11 = v7;
  uint64_t v12 = *(void *)((char *)&v16 + 7);
  char v13 = HIBYTE(v16);
  uint64_t v8 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v8);
  sub_2445EF838();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
}

uint64_t sub_24458F1E8(void *a1, uint64_t a2, uint64_t a3)
{
  v12[0] = a2;
  v12[1] = a3;
  sub_24459A7A4();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v4 = sub_2445EF9F8();
  uint64_t v5 = off_26F936068;
  MEMORY[0x270FA5388](v4);
  char v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  ((void (*)(unsigned char *, void *, ValueMetadata *))v5->initializeWithCopy)(v7, v12, &type metadata for ManagedAppCancelRequest);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
  sub_2445EF838();
  ((void (*)(unsigned char *, ValueMetadata *))v5->destroy)(v7, &type metadata for ManagedAppCancelRequest);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
}

uint64_t sub_24458F358(void *a1, uint64_t a2, uint64_t a3)
{
  v12[0] = a2;
  v12[1] = a3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v3 = sub_2445EF9F8();
  uint64_t v4 = MEMORY[0x263F8D310];
  uint64_t v5 = *(void *)(MEMORY[0x263F8D310] - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(unsigned char *, void *, uint64_t))(v5 + 16))(v7, v12, v4);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
  sub_2445EF838();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
}

uint64_t sub_24458F4B4(void *a1, uint64_t a2, uint64_t a3)
{
  v12[0] = a2;
  v12[1] = a3;
  sub_24459A4CC();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v4 = sub_2445EF9F8();
  uint64_t v5 = off_26F9364B0;
  MEMORY[0x270FA5388](v4);
  char v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  ((void (*)(unsigned char *, void *, ValueMetadata *))v5->initializeWithCopy)(v7, v12, &type metadata for DDMDeclarationStatusRequest);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
  sub_2445EF838();
  ((void (*)(unsigned char *, ValueMetadata *))v5->destroy)(v7, &type metadata for DDMDeclarationStatusRequest);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
}

uint64_t sub_24458F624(void *a1, char a2)
{
  char v11 = a2 & 1;
  sub_24459A41C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v3 = sub_2445EF9F8();
  uint64_t v4 = off_26F936B90;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  ((void (*)(unsigned char *, char *, ValueMetadata *))v4->initializeWithCopy)(v6, &v11, &type metadata for RestoreRequest);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
  sub_2445EF838();
  ((void (*)(unsigned char *, ValueMetadata *))v4->destroy)(v6, &type metadata for RestoreRequest);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
}

uint64_t sub_24458F798(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v14[0] = a2;
  v14[1] = a3;
  _DWORD v14[2] = a4;
  v14[3] = a5;
  sub_244599F9C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v6 = sub_2445EF9F8();
  char v7 = off_26F936F28;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  ((void (*)(unsigned char *, void *, ValueMetadata *))v7->initializeWithCopy)(v9, v14, &type metadata for OAuthInvalidateRequest);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v12, v13);
  sub_2445EF838();
  ((void (*)(unsigned char *, ValueMetadata *))v7->destroy)(v9, &type metadata for OAuthInvalidateRequest);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
}

uint64_t sub_24458F90C(void *a1, char a2)
{
  char v11 = a2;
  sub_244599E98();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v3 = sub_2445EF9F8();
  uint64_t v4 = off_26F937298;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  ((void (*)(unsigned char *, char *, ValueMetadata *))v4->initializeWithCopy)(v6, &v11, &type metadata for DDMPollForUpdatesRequest);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
  sub_2445EF838();
  ((void (*)(unsigned char *, ValueMetadata *))v4->destroy)(v6, &type metadata for DDMPollForUpdatesRequest);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
}

uint64_t sub_24458FA7C(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  v12[0] = a2;
  v12[1] = a3;
  char v13 = a4;
  sub_244599D34();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v5 = sub_2445EF9F8();
  uint64_t v6 = off_26F937460;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  ((void (*)(unsigned char *, void *, ValueMetadata *))v6->initializeWithCopy)(v8, v12, &type metadata for DiagnosticRequest);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
  sub_2445EF838();
  ((void (*)(unsigned char *, ValueMetadata *))v6->destroy)(v8, &type metadata for DiagnosticRequest);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
}

uint64_t sub_24458FBF0(void *a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v9 = a3(0);
  sub_24459A078(a4, a5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_2445EF9F8();
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v10);
  char v13 = &v16[-v12 - 8];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(&v16[-v12 - 8], a2, v9);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v17);
  sub_2445EF838();
  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v9);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
}

uint64_t sub_24458FD7C(void *a1, uint64_t a2)
{
  return sub_24458FDC0(a1, a2, &qword_268E8CB60, &qword_268E8CB68, MEMORY[0x263F8D490], &qword_268E8CB70);
}

uint64_t sub_24458FDC0(void *a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(a3);
  sub_244599A7C(a4, a3, (void (*)(void))sub_244599034);
  uint64_t v25 = sub_2445EEF88();
  v24[1] = sub_24459A078(&qword_26B0CE708, MEMORY[0x263F07508]);
  v24[0] = *(int *)(__swift_instantiateConcreteTypeFromMangledName(a6) + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_2445EF9F8();
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v11);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
  uint64_t v16 = v28;
  sub_2445EF838();
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
  }
  else
  {
    uint64_t v17 = a2 + v24[0];
    uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v11);
    uint64_t v19 = v25;
    uint64_t v20 = *(void *)(v25 - 8);
    MEMORY[0x270FA5388](v18);
    uint64_t v22 = (char *)v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v17, v19);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
    sub_2445EF838();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
}

uint64_t sub_2445900C0(void *a1, uint64_t a2)
{
  uint64_t v12 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CEBA0);
  sub_244599A7C(&qword_26B0CE498, &qword_26B0CEBA0, (void (*)(void))sub_2445999B8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v4 = sub_2445EF9F8();
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v5 + 16))(v7, &v12, v3);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
  sub_2445EF838();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v3);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
}

uint64_t sub_244590270(void *a1, uint64_t a2)
{
  return sub_24458FBF0(a1, a2, (uint64_t (*)(void))type metadata accessor for DDMAppOrUpdateManagedAppRequest, &qword_268E8CB18, (void (*)(uint64_t))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
}

uint64_t sub_2445902CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[13] = *v3;
  return MEMORY[0x270FA2498](sub_244590318, 0, 0);
}

uint64_t sub_244590318()
{
  *(void *)(v0 + 40) = &type metadata for FeatureFlag;
  *(void *)(v0 + 48) = sub_244598F38();
  char v1 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v1)
  {
    uint64_t v2 = *(uint64_t ***)(v0 + 72);
    sub_244594A4C();
    sub_244594AA0();
    uint64_t v3 = *v2;
    uint64_t v4 = **v2;
    uint64_t v5 = v3[1];
    uint64_t v7 = v3[2];
    uint64_t v6 = v3[3];
    char v8 = *((unsigned char *)v3 + 32);
    uint64_t v9 = v3[5];
    *(unsigned char *)(v0 + 152) = *((unsigned char *)v3 + 48);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v4;
    *(void *)(v10 + 24) = v5;
    *(void *)(v10 + 32) = v7;
    *(void *)(v10 + 40) = v6;
    *(unsigned char *)(v10 + 48) = v8;
    *(void *)(v10 + 56) = v9;
    *(unsigned char *)(v10 + 64) = *(unsigned char *)(v0 + 152);
    sub_2445EEEA8();
    swift_allocObject();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_2445EEE98();
    *(void *)(v0 + 56) = sub_24459A898;
    *(void *)(v0 + 64) = v10;
    sub_24459928C();
    uint64_t v11 = sub_2445EEE88();
    *(void *)(v0 + 112) = v11;
    *(void *)(v0 + 120) = v12;
    uint64_t v16 = v11;
    uint64_t v17 = v12;
    uint64_t v19 = *(void *)(v0 + 96);
    uint64_t v18 = *(void *)(v0 + 104);
    long long v24 = *(_OWORD *)(v0 + 80);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void *)(v19 + 16);
    uint64_t v21 = swift_task_alloc();
    *(void *)(v0 + 128) = v21;
    *(void *)(v21 + 16) = v20;
    *(_OWORD *)(v21 + 24) = v24;
    *(void *)(v21 + 40) = v16;
    *(void *)(v21 + 48) = v17;
    *(void *)(v21 + 56) = v18;
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v22;
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB30);
    *uint64_t v22 = v0;
    v22[1] = sub_24459060C;
    return MEMORY[0x270FA2360](v0 + 153, 0, 0, 0xD000000000000021, 0x80000002445F8BC0, sub_24459A8D4, v21, v23);
  }
  else
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v13 = 0;
    swift_willThrow();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
}

uint64_t sub_24459060C()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_244590790;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_244590728;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_244590728()
{
  sub_244599358(*(void *)(v0 + 112), *(void *)(v0 + 120));
  uint64_t v1 = *(unsigned __int8 *)(v0 + 153);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_244590790()
{
  sub_244599358(v0[14], v0[15]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_244590800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[13] = *v3;
  return MEMORY[0x270FA2498](sub_24459084C, 0, 0);
}

uint64_t sub_24459084C()
{
  *(void *)(v0 + 40) = &type metadata for FeatureFlag;
  *(void *)(v0 + 48) = sub_244598F38();
  char v1 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v1)
  {
    uint64_t v2 = *(uint64_t ***)(v0 + 72);
    sub_24459A750();
    sub_24459A7A4();
    uint64_t v3 = *v2;
    uint64_t v5 = **v2;
    uint64_t v4 = v3[1];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
    *(void *)(v6 + 24) = v4;
    sub_2445EEEA8();
    swift_allocObject();
    swift_bridgeObjectRetain_n();
    sub_2445EEE98();
    *(void *)(v0 + 56) = sub_24459A7F8;
    *(void *)(v0 + 64) = v6;
    sub_24459928C();
    uint64_t v7 = sub_2445EEE88();
    *(void *)(v0 + 112) = v7;
    *(void *)(v0 + 120) = v8;
    uint64_t v12 = v7;
    uint64_t v13 = v8;
    uint64_t v15 = *(void *)(v0 + 96);
    uint64_t v14 = *(void *)(v0 + 104);
    long long v20 = *(_OWORD *)(v0 + 80);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(v15 + 16);
    uint64_t v17 = swift_task_alloc();
    *(void *)(v0 + 128) = v17;
    *(void *)(v17 + 16) = v16;
    *(_OWORD *)(v17 + 24) = v20;
    *(void *)(v17 + 40) = v12;
    *(void *)(v17 + 48) = v13;
    *(void *)(v17 + 56) = v14;
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v18;
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB30);
    *uint64_t v18 = v0;
    v18[1] = sub_244590AFC;
    return MEMORY[0x270FA2360](v0 + 152, 0, 0, 0xD000000000000021, 0x80000002445F8BC0, sub_24459A814, v17, v19);
  }
  else
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v9 = 0;
    swift_willThrow();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_244590AFC()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_244590790;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_244590C18;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_244590C18()
{
  sub_244599358(*(void *)(v0 + 112), *(void *)(v0 + 120));
  uint64_t v1 = *(unsigned __int8 *)(v0 + 152);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_244590C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[13] = *v3;
  return MEMORY[0x270FA2498](sub_244590CCC, 0, 0);
}

uint64_t sub_244590CCC()
{
  *(void *)(v0 + 40) = &type metadata for FeatureFlag;
  *(void *)(v0 + 48) = sub_244598F38();
  char v1 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v1)
  {
    uint64_t v2 = **(uint64_t ***)(v0 + 72);
    uint64_t v4 = *v2;
    uint64_t v3 = v2[1];
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v4;
    *(void *)(v5 + 24) = v3;
    sub_2445EEEA8();
    swift_allocObject();
    swift_bridgeObjectRetain_n();
    sub_2445EEE98();
    *(void *)(v0 + 56) = sub_24459A704;
    *(void *)(v0 + 64) = v5;
    sub_24459928C();
    uint64_t v6 = sub_2445EEE88();
    *(void *)(v0 + 112) = v6;
    *(void *)(v0 + 120) = v7;
    uint64_t v11 = v6;
    uint64_t v12 = v7;
    uint64_t v14 = *(void *)(v0 + 96);
    uint64_t v13 = *(void *)(v0 + 104);
    long long v19 = *(_OWORD *)(v0 + 80);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)(v14 + 16);
    uint64_t v16 = swift_task_alloc();
    *(void *)(v0 + 128) = v16;
    *(void *)(v16 + 16) = v15;
    *(_OWORD *)(v16 + 24) = v19;
    *(void *)(v16 + 40) = v11;
    *(void *)(v16 + 48) = v12;
    *(void *)(v16 + 56) = v13;
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v17;
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB30);
    *uint64_t v17 = v0;
    v17[1] = sub_244590F74;
    return MEMORY[0x270FA2360](v0 + 152, 0, 0, 0xD000000000000021, 0x80000002445F8BC0, sub_24459A720, v16, v18);
  }
  else
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v8 = 0;
    swift_willThrow();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_244590F74()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24459A99C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24459A904;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_244591090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  v4[14] = *v3;
  return MEMORY[0x270FA2498](sub_2445910DC, 0, 0);
}

uint64_t sub_2445910DC()
{
  *(void *)(v0 + 40) = &type metadata for FeatureFlag;
  *(void *)(v0 + 48) = sub_244598F38();
  char v1 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v1)
  {
    uint64_t v2 = *(uint64_t ***)(v0 + 80);
    sub_24459A520();
    sub_24459A4CC();
    uint64_t v3 = *v2;
    uint64_t v5 = **v2;
    uint64_t v4 = v3[1];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
    *(void *)(v6 + 24) = v4;
    sub_2445EEEA8();
    swift_allocObject();
    swift_bridgeObjectRetain_n();
    sub_2445EEE98();
    *(void *)(v0 + 56) = sub_24459A5AC;
    *(void *)(v0 + 64) = v6;
    sub_24459928C();
    uint64_t v7 = sub_2445EEE88();
    *(void *)(v0 + 120) = v7;
    *(void *)(v0 + 128) = v8;
    uint64_t v12 = v7;
    uint64_t v13 = v8;
    uint64_t v15 = *(void *)(v0 + 104);
    uint64_t v14 = *(void *)(v0 + 112);
    long long v20 = *(_OWORD *)(v0 + 88);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(v15 + 16);
    uint64_t v17 = swift_task_alloc();
    *(void *)(v0 + 136) = v17;
    *(void *)(v17 + 16) = v16;
    *(_OWORD *)(v17 + 24) = v20;
    *(void *)(v17 + 40) = v12;
    *(void *)(v17 + 48) = v13;
    *(void *)(v17 + 56) = v14;
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v18;
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CC28);
    *uint64_t v18 = v0;
    v18[1] = sub_24459138C;
    return MEMORY[0x270FA2360](v0 + 72, 0, 0, 0xD000000000000021, 0x80000002445F8BC0, sub_24459A5C8, v17, v19);
  }
  else
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v9 = 0;
    swift_willThrow();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_24459138C()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_244591510;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2445914A8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2445914A8()
{
  sub_244599358(v0[15], v0[16]);
  uint64_t v1 = v0[9];
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_244591510()
{
  sub_244599358(v0[15], v0[16]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_244591580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[13] = *v3;
  return MEMORY[0x270FA2498](sub_2445915CC, 0, 0);
}

uint64_t sub_2445915CC()
{
  *(void *)(v0 + 40) = &type metadata for FeatureFlag;
  *(void *)(v0 + 48) = sub_244598F38();
  char v1 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v1)
  {
    uint64_t v2 = *(unsigned char ***)(v0 + 72);
    sub_24459A3C8();
    sub_24459A41C();
    LOBYTE(v2) = **v2;
    uint64_t v3 = swift_allocObject();
    *(unsigned char *)(v3 + 16) = (_BYTE)v2;
    sub_2445EEEA8();
    swift_allocObject();
    sub_2445EEE98();
    *(void *)(v0 + 56) = sub_24459A480;
    *(void *)(v0 + 64) = v3;
    sub_24459928C();
    uint64_t v4 = sub_2445EEE88();
    *(void *)(v0 + 112) = v4;
    *(void *)(v0 + 120) = v5;
    uint64_t v9 = v4;
    uint64_t v10 = v5;
    uint64_t v12 = *(void *)(v0 + 96);
    uint64_t v11 = *(void *)(v0 + 104);
    long long v17 = *(_OWORD *)(v0 + 80);
    swift_release();
    swift_release();
    uint64_t v13 = *(void *)(v12 + 16);
    uint64_t v14 = swift_task_alloc();
    *(void *)(v0 + 128) = v14;
    *(void *)(v14 + 16) = v13;
    *(_OWORD *)(v14 + 24) = v17;
    *(void *)(v14 + 40) = v9;
    *(void *)(v14 + 48) = v10;
    *(void *)(v14 + 56) = v11;
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v15;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB30);
    *uint64_t v15 = v0;
    v15[1] = sub_244590F74;
    return MEMORY[0x270FA2360](v0 + 152, 0, 0, 0xD000000000000021, 0x80000002445F8BC0, sub_24459A49C, v14, v16);
  }
  else
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v6 = 0;
    swift_willThrow();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_244591854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[13] = *v3;
  uint64_t v5 = *(void *)(type metadata accessor for VPPInstallRequest() - 8);
  v4[14] = v5;
  v4[15] = *(void *)(v5 + 64);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_244591954, 0, 0);
}

uint64_t sub_244591954()
{
  *(void *)(v0 + 40) = &type metadata for FeatureFlag;
  *(void *)(v0 + 48) = sub_244598F38();
  char v1 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 128);
    uint64_t v2 = *(void *)(v0 + 136);
    uint64_t v4 = *(void *)(v0 + 112);
    uint64_t v5 = *(uint64_t **)(v0 + 72);
    sub_24459A078(&qword_268E8CBE8, (void (*)(uint64_t))type metadata accessor for VPPInstallRequest);
    sub_24459A078(&qword_268E8CBF0, (void (*)(uint64_t))type metadata accessor for VPPInstallRequest);
    sub_24459A0C0(*v5, v2, (uint64_t (*)(void))type metadata accessor for VPPInstallRequest);
    sub_24459A0C0(v2, v3, (uint64_t (*)(void))type metadata accessor for VPPInstallRequest);
    unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v7 = swift_allocObject();
    sub_24459A220(v3, v7 + v6, (uint64_t (*)(void))type metadata accessor for VPPInstallRequest);
    sub_2445EEEA8();
    swift_allocObject();
    sub_2445EEE98();
    *(void *)(v0 + 56) = sub_24459A288;
    *(void *)(v0 + 64) = v7;
    sub_24459928C();
    uint64_t v8 = sub_2445EEE88();
    *(void *)(v0 + 144) = v8;
    *(void *)(v0 + 152) = v9;
    uint64_t v10 = *(void *)(v0 + 136);
    uint64_t v14 = v8;
    uint64_t v15 = v9;
    uint64_t v17 = *(void *)(v0 + 96);
    uint64_t v16 = *(void *)(v0 + 104);
    long long v22 = *(_OWORD *)(v0 + 80);
    swift_release();
    swift_release();
    sub_24459A338(v10, (uint64_t (*)(void))type metadata accessor for VPPInstallRequest);
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = swift_task_alloc();
    *(void *)(v0 + 160) = v19;
    *(void *)(v19 + 16) = v18;
    *(_OWORD *)(v19 + 24) = v22;
    *(void *)(v19 + 40) = v14;
    *(void *)(v19 + 48) = v15;
    *(void *)(v19 + 56) = v16;
    long long v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v20;
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB30);
    *long long v20 = v0;
    v20[1] = sub_244591CD4;
    return MEMORY[0x270FA2360](v0 + 184, 0, 0, 0xD000000000000021, 0x80000002445F8BC0, sub_24459A398, v19, v21);
  }
  else
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v11 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_244591CD4()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24459A9A0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24459A998;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_244591DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a3;
  v4[11] = v3;
  v4[9] = a2;
  v4[12] = *v3;
  return MEMORY[0x270FA2498](sub_244591E3C, 0, 0);
}

uint64_t sub_244591E3C()
{
  *(void *)(v0 + 40) = &type metadata for FeatureFlag;
  *(void *)(v0 + 48) = sub_244598F38();
  char v1 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v1)
  {
    sub_2445EEEA8();
    swift_allocObject();
    sub_2445EEE98();
    *(void *)(v0 + 56) = sub_244599444;
    *(void *)(v0 + 64) = 0;
    sub_24459928C();
    uint64_t v2 = sub_2445EEE88();
    *(void *)(v0 + 104) = v2;
    *(void *)(v0 + 112) = v3;
    uint64_t v7 = v2;
    uint64_t v8 = v3;
    uint64_t v10 = *(void *)(v0 + 88);
    uint64_t v9 = *(void *)(v0 + 96);
    long long v15 = *(_OWORD *)(v0 + 72);
    swift_release();
    uint64_t v11 = *(void *)(v10 + 16);
    uint64_t v12 = swift_task_alloc();
    *(void *)(v0 + 120) = v12;
    *(void *)(v12 + 16) = v11;
    *(_OWORD *)(v12 + 24) = v15;
    *(void *)(v12 + 40) = v7;
    *(void *)(v12 + 48) = v8;
    *(void *)(v12 + 56) = v9;
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v13;
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB30);
    *uint64_t v13 = v0;
    v13[1] = sub_244592084;
    return MEMORY[0x270FA2360](v0 + 144, 0, 0, 0xD000000000000021, 0x80000002445F8BC0, sub_24459A048, v12, v14);
  }
  else
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v4 = 0;
    swift_willThrow();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_244592084()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_244592208;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2445921A0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2445921A0()
{
  sub_244599358(*(void *)(v0 + 104), *(void *)(v0 + 112));
  uint64_t v1 = *(unsigned __int8 *)(v0 + 144);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_244592208()
{
  sub_244599358(v0[13], v0[14]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_244592278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[13] = *v3;
  return MEMORY[0x270FA2498](sub_2445922C4, 0, 0);
}

uint64_t sub_2445922C4()
{
  *(void *)(v0 + 40) = &type metadata for FeatureFlag;
  *(void *)(v0 + 48) = sub_244598F38();
  char v1 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v1)
  {
    uint64_t v2 = *(uint64_t ***)(v0 + 72);
    sub_244599F48();
    sub_244599F9C();
    uint64_t v3 = *v2;
    uint64_t v4 = **v2;
    uint64_t v5 = v3[1];
    uint64_t v7 = v3[2];
    uint64_t v6 = v3[3];
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v4;
    v8[3] = v5;
    v8[4] = v7;
    v8[5] = v6;
    sub_2445EEEA8();
    swift_allocObject();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_2445EEE98();
    *(void *)(v0 + 56) = sub_244599FF8;
    *(void *)(v0 + 64) = v8;
    sub_24459928C();
    uint64_t v9 = sub_2445EEE88();
    *(void *)(v0 + 112) = v9;
    *(void *)(v0 + 120) = v10;
    uint64_t v14 = v9;
    uint64_t v15 = v10;
    uint64_t v17 = *(void *)(v0 + 96);
    uint64_t v16 = *(void *)(v0 + 104);
    long long v22 = *(_OWORD *)(v0 + 80);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = swift_task_alloc();
    *(void *)(v0 + 128) = v19;
    *(void *)(v19 + 16) = v18;
    *(_OWORD *)(v19 + 24) = v22;
    *(void *)(v19 + 40) = v14;
    *(void *)(v19 + 48) = v15;
    *(void *)(v19 + 56) = v16;
    long long v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v20;
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB30);
    *long long v20 = v0;
    v20[1] = sub_244590F74;
    return MEMORY[0x270FA2360](v0 + 152, 0, 0, 0xD000000000000021, 0x80000002445F8BC0, sub_24459A018, v19, v21);
  }
  else
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v11 = 0;
    swift_willThrow();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_244592598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[13] = *v3;
  return MEMORY[0x270FA2498](sub_2445925E4, 0, 0);
}

uint64_t sub_2445925E4()
{
  *(void *)(v0 + 40) = &type metadata for FeatureFlag;
  *(void *)(v0 + 48) = sub_244598F38();
  char v1 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v1)
  {
    uint64_t v2 = *(unsigned char ***)(v0 + 72);
    sub_244599E44();
    sub_244599E98();
    LOBYTE(v2) = **v2;
    uint64_t v3 = swift_allocObject();
    *(unsigned char *)(v3 + 16) = (_BYTE)v2;
    sub_2445EEEA8();
    swift_allocObject();
    sub_2445EEE98();
    *(void *)(v0 + 56) = sub_244599EFC;
    *(void *)(v0 + 64) = v3;
    sub_24459928C();
    uint64_t v4 = sub_2445EEE88();
    *(void *)(v0 + 112) = v4;
    *(void *)(v0 + 120) = v5;
    uint64_t v9 = v4;
    uint64_t v10 = v5;
    uint64_t v12 = *(void *)(v0 + 96);
    uint64_t v11 = *(void *)(v0 + 104);
    long long v17 = *(_OWORD *)(v0 + 80);
    swift_release();
    swift_release();
    uint64_t v13 = *(void *)(v12 + 16);
    uint64_t v14 = swift_task_alloc();
    *(void *)(v0 + 128) = v14;
    *(void *)(v14 + 16) = v13;
    *(_OWORD *)(v14 + 24) = v17;
    *(void *)(v14 + 40) = v9;
    *(void *)(v14 + 48) = v10;
    *(void *)(v14 + 56) = v11;
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v15;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB30);
    *uint64_t v15 = v0;
    v15[1] = sub_244590F74;
    return MEMORY[0x270FA2360](v0 + 152, 0, 0, 0xD000000000000021, 0x80000002445F8BC0, sub_244599F18, v14, v16);
  }
  else
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v6 = 0;
    swift_willThrow();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_24459286C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[13] = *v3;
  return MEMORY[0x270FA2498](sub_2445928B8, 0, 0);
}

uint64_t sub_2445928B8()
{
  *(void *)(v0 + 40) = &type metadata for FeatureFlag;
  *(void *)(v0 + 48) = sub_244598F38();
  char v1 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v1)
  {
    uint64_t v2 = *(uint64_t ***)(v0 + 72);
    sub_244599CE0();
    sub_244599D34();
    uint64_t v3 = **v2;
    uint64_t v4 = (*v2)[1];
    unsigned __int8 v5 = *((unsigned char *)*v2 + 16);
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v3;
    *(void *)(v6 + 24) = v4;
    *(unsigned char *)(v6 + 32) = v5;
    sub_2445EEEA8();
    swift_allocObject();
    sub_244599DFC(v3, v4, v5);
    sub_244599DFC(v3, v4, v5);
    sub_2445EEE98();
    *(void *)(v0 + 56) = sub_244599DDC;
    *(void *)(v0 + 64) = v6;
    sub_24459928C();
    uint64_t v7 = sub_2445EEE88();
    *(void *)(v0 + 112) = v7;
    *(void *)(v0 + 120) = v8;
    uint64_t v12 = v7;
    uint64_t v13 = v8;
    uint64_t v14 = *(void *)(v0 + 96);
    uint64_t v15 = *(void *)(v0 + 104);
    long long v20 = *(_OWORD *)(v0 + 80);
    swift_release();
    swift_release();
    sub_244599DC4(v3, v4, v5);
    uint64_t v16 = *(void *)(v14 + 16);
    uint64_t v17 = swift_task_alloc();
    *(void *)(v0 + 128) = v17;
    *(void *)(v17 + 16) = v16;
    *(_OWORD *)(v17 + 24) = v20;
    *(void *)(v17 + 40) = v12;
    *(void *)(v17 + 48) = v13;
    *(void *)(v17 + 56) = v15;
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v18;
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB30);
    *uint64_t v18 = v0;
    v18[1] = sub_244590F74;
    return MEMORY[0x270FA2360](v0 + 152, 0, 0, 0xD000000000000021, 0x80000002445F8BC0, sub_244599E14, v17, v19);
  }
  else
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v9 = 0;
    swift_willThrow();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_244592B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[13] = *v3;
  uint64_t v5 = *(void *)(type metadata accessor for InstallEnterpriseManifestRequest() - 8);
  v4[14] = v5;
  v4[15] = *(void *)(v5 + 64);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_244592C98, 0, 0);
}

uint64_t sub_244592C98()
{
  *(void *)(v0 + 40) = &type metadata for FeatureFlag;
  *(void *)(v0 + 48) = sub_244598F38();
  char v1 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 128);
    uint64_t v2 = *(void *)(v0 + 136);
    uint64_t v4 = *(void *)(v0 + 112);
    uint64_t v5 = *(uint64_t **)(v0 + 72);
    sub_24459A078(&qword_268E8CB80, (void (*)(uint64_t))type metadata accessor for InstallEnterpriseManifestRequest);
    sub_24459A078(&qword_268E8CB88, (void (*)(uint64_t))type metadata accessor for InstallEnterpriseManifestRequest);
    sub_24459A0C0(*v5, v2, (uint64_t (*)(void))type metadata accessor for InstallEnterpriseManifestRequest);
    sub_24459A0C0(v2, v3, (uint64_t (*)(void))type metadata accessor for InstallEnterpriseManifestRequest);
    unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v7 = swift_allocObject();
    sub_24459A220(v3, v7 + v6, (uint64_t (*)(void))type metadata accessor for InstallEnterpriseManifestRequest);
    sub_2445EEEA8();
    swift_allocObject();
    sub_2445EEE98();
    *(void *)(v0 + 56) = sub_244599BE0;
    *(void *)(v0 + 64) = v7;
    sub_24459928C();
    uint64_t v8 = sub_2445EEE88();
    *(void *)(v0 + 144) = v8;
    *(void *)(v0 + 152) = v9;
    uint64_t v10 = *(void *)(v0 + 136);
    uint64_t v14 = v8;
    uint64_t v15 = v9;
    uint64_t v17 = *(void *)(v0 + 96);
    uint64_t v16 = *(void *)(v0 + 104);
    long long v22 = *(_OWORD *)(v0 + 80);
    swift_release();
    swift_release();
    sub_24459A338(v10, (uint64_t (*)(void))type metadata accessor for InstallEnterpriseManifestRequest);
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = swift_task_alloc();
    *(void *)(v0 + 160) = v19;
    *(void *)(v19 + 16) = v18;
    *(_OWORD *)(v19 + 24) = v22;
    *(void *)(v19 + 40) = v14;
    *(void *)(v19 + 48) = v15;
    *(void *)(v19 + 56) = v16;
    long long v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v20;
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB30);
    *long long v20 = v0;
    v20[1] = sub_244591CD4;
    return MEMORY[0x270FA2360](v0 + 184, 0, 0, 0xD000000000000021, 0x80000002445F8BC0, sub_244599C90, v19, v21);
  }
  else
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v11 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_244593018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[10] = a2;
  v4[13] = *v3;
  return MEMORY[0x270FA2498](sub_244593064, 0, 0);
}

uint64_t sub_244593064()
{
  *(void *)(v0 + 40) = &type metadata for FeatureFlag;
  *(void *)(v0 + 48) = sub_244598F38();
  char v1 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v1)
  {
    sub_2445EEEA8();
    swift_allocObject();
    sub_2445EEE98();
    *(void *)(v0 + 56) = sub_244599444;
    *(void *)(v0 + 64) = 0;
    sub_24459928C();
    uint64_t v2 = sub_2445EEE88();
    *(void *)(v0 + 112) = v2;
    *(void *)(v0 + 120) = v3;
    uint64_t v7 = v2;
    uint64_t v8 = v3;
    uint64_t v10 = *(void *)(v0 + 96);
    uint64_t v9 = *(void *)(v0 + 104);
    long long v15 = *(_OWORD *)(v0 + 80);
    swift_release();
    uint64_t v11 = *(void *)(v10 + 16);
    uint64_t v12 = swift_task_alloc();
    *(void *)(v0 + 128) = v12;
    *(void *)(v12 + 16) = v11;
    *(_OWORD *)(v12 + 24) = v15;
    *(void *)(v12 + 40) = v7;
    *(void *)(v12 + 48) = v8;
    *(void *)(v12 + 56) = v9;
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v13;
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE1C8);
    *uint64_t v13 = v0;
    v13[1] = sub_2445932AC;
    return MEMORY[0x270FA2360](v0 + 72, 0, 0, 0xD000000000000021, 0x80000002445F8BC0, sub_244599A0C, v12, v14);
  }
  else
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v4 = 0;
    swift_willThrow();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_2445932AC()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_244590790;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2445933C8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2445933C8()
{
  sub_244599358(v0[14], v0[15]);
  uint64_t v1 = v0[9];
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_244593430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  v4[14] = *v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE7A8);
  v4[15] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[16] = v6;
  v4[17] = *(void *)(v6 + 64);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_244593538, 0, 0);
}

uint64_t sub_244593538()
{
  *(void *)(v0 + 40) = &type metadata for FeatureFlag;
  *(void *)(v0 + 48) = sub_244598F38();
  char v1 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v1)
  {
    uint64_t v2 = *(char **)(v0 + 144);
    uint64_t v3 = *(void **)(v0 + 152);
    uint64_t v4 = *(void *)(v0 + 128);
    uint64_t v5 = *(void *)(v0 + 120);
    uint64_t v6 = *(void *)(v0 + 80);
    sub_244599A7C(&qword_26B0CE7A0, &qword_26B0CE790, (void (*)(void))sub_244598FE0);
    sub_244599A7C(&qword_26B0CE798, &qword_26B0CE790, (void (*)(void))sub_244599034);
    *uint64_t v3 = **(void **)v6;
    uint64_t v7 = sub_2445EEF88();
    uint64_t v8 = (void (*)(uint64_t))MEMORY[0x263F07508];
    sub_24459A078(&qword_26B0CE710, MEMORY[0x263F07508]);
    sub_24459A078(&qword_26B0CE708, v8);
    uint64_t v9 = (char *)v3 + *(int *)(v5 + 48);
    uint64_t v10 = *(void *)(v6 + 8);
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
    v11(v9, v10, v7);
    *(void *)uint64_t v2 = *v3;
    v11(&v2[*(int *)(v5 + 48)], (uint64_t)v9, v7);
    unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v13 = swift_allocObject();
    sub_244599180((uint64_t)v2, v13 + v12);
    sub_2445EEEA8();
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2445EEE98();
    *(void *)(v0 + 56) = sub_2445991E8;
    *(void *)(v0 + 64) = v13;
    sub_24459928C();
    uint64_t v14 = sub_2445EEE88();
    *(void *)(v0 + 184) = v14;
    *(void *)(v0 + 192) = v15;
    uint64_t v16 = *(void *)(v0 + 152);
    uint64_t v20 = v14;
    uint64_t v21 = v15;
    uint64_t v23 = *(void *)(v0 + 104);
    uint64_t v22 = *(void *)(v0 + 112);
    long long v28 = *(_OWORD *)(v0 + 88);
    swift_release();
    swift_release();
    sub_2445992E0(v16);
    uint64_t v24 = *(void *)(v23 + 16);
    uint64_t v25 = swift_task_alloc();
    *(void *)(v0 + 160) = v25;
    *(void *)(v25 + 16) = v24;
    *(_OWORD *)(v25 + 24) = v28;
    *(void *)(v25 + 40) = v20;
    *(void *)(v25 + 48) = v21;
    *(void *)(v25 + 56) = v22;
    int v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v26;
    *int v26 = v0;
    v26[1] = sub_24459395C;
    uint64_t v27 = MEMORY[0x263F8E970];
    return MEMORY[0x270FA2360](v0 + 72, 0, 0, 0xD000000000000021, 0x80000002445F8BC0, sub_244599340, v25, v27);
  }
  else
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v17 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
}

uint64_t sub_24459395C()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_244593B00;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_244593A78;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_244593A78()
{
  sub_244599358(v0[23], v0[24]);
  uint64_t v1 = v0[9];
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_244593B00()
{
  sub_244599358(v0[23], v0[24]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_244593B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[10] = a2;
  v4[13] = *v3;
  return MEMORY[0x270FA2498](sub_244593BCC, 0, 0);
}

uint64_t sub_244593BCC()
{
  *(void *)(v0 + 40) = &type metadata for FeatureFlag;
  *(void *)(v0 + 48) = sub_244598F38();
  char v1 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v1)
  {
    sub_2445EEEA8();
    swift_allocObject();
    sub_2445EEE98();
    *(void *)(v0 + 56) = sub_244599444;
    *(void *)(v0 + 64) = 0;
    sub_24459928C();
    uint64_t v2 = sub_2445EEE88();
    *(void *)(v0 + 112) = v2;
    *(void *)(v0 + 120) = v3;
    uint64_t v7 = v2;
    uint64_t v8 = v3;
    uint64_t v10 = *(void *)(v0 + 96);
    uint64_t v9 = *(void *)(v0 + 104);
    long long v15 = *(_OWORD *)(v0 + 80);
    swift_release();
    uint64_t v11 = *(void *)(v10 + 16);
    uint64_t v12 = swift_task_alloc();
    *(void *)(v0 + 128) = v12;
    *(void *)(v12 + 16) = v11;
    *(_OWORD *)(v12 + 24) = v15;
    *(void *)(v12 + 40) = v7;
    *(void *)(v12 + 48) = v8;
    *(void *)(v12 + 56) = v9;
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_244593E0C;
    uint64_t v14 = MEMORY[0x263F8E970];
    return MEMORY[0x270FA2360](v0 + 72, 0, 0, 0xD000000000000021, 0x80000002445F8BC0, sub_24459945C, v12, v14);
  }
  else
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v4 = 0;
    swift_willThrow();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_244593E0C()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24459A99C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24459A994;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_244593F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[13] = *v3;
  uint64_t v5 = *(void *)(type metadata accessor for OAuthAuthorizeRequest() - 8);
  v4[14] = v5;
  v4[15] = *(void *)(v5 + 64);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_244594028, 0, 0);
}

uint64_t sub_244594028()
{
  *(void *)(v0 + 40) = &type metadata for FeatureFlag;
  *(void *)(v0 + 48) = sub_244598F38();
  char v1 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 128);
    uint64_t v2 = *(void *)(v0 + 136);
    uint64_t v4 = *(void *)(v0 + 112);
    uint64_t v5 = *(uint64_t **)(v0 + 72);
    sub_24459A078(&qword_268E8CB48, (void (*)(uint64_t))type metadata accessor for OAuthAuthorizeRequest);
    sub_24459A078(&qword_268E8CB50, (void (*)(uint64_t))type metadata accessor for OAuthAuthorizeRequest);
    sub_24459A0C0(*v5, v2, (uint64_t (*)(void))type metadata accessor for OAuthAuthorizeRequest);
    sub_24459A0C0(v2, v3, (uint64_t (*)(void))type metadata accessor for OAuthAuthorizeRequest);
    unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v7 = swift_allocObject();
    sub_24459A220(v3, v7 + v6, (uint64_t (*)(void))type metadata accessor for OAuthAuthorizeRequest);
    sub_2445EEEA8();
    swift_allocObject();
    sub_2445EEE98();
    *(void *)(v0 + 56) = sub_2445998D8;
    *(void *)(v0 + 64) = v7;
    sub_24459928C();
    uint64_t v8 = sub_2445EEE88();
    *(void *)(v0 + 144) = v8;
    *(void *)(v0 + 152) = v9;
    uint64_t v10 = *(void *)(v0 + 136);
    uint64_t v14 = v8;
    uint64_t v15 = v9;
    uint64_t v17 = *(void *)(v0 + 96);
    uint64_t v16 = *(void *)(v0 + 104);
    long long v22 = *(_OWORD *)(v0 + 80);
    swift_release();
    swift_release();
    sub_24459A338(v10, (uint64_t (*)(void))type metadata accessor for OAuthAuthorizeRequest);
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = swift_task_alloc();
    *(void *)(v0 + 160) = v19;
    *(void *)(v19 + 16) = v18;
    *(_OWORD *)(v19 + 24) = v22;
    *(void *)(v19 + 40) = v14;
    *(void *)(v19 + 48) = v15;
    *(void *)(v19 + 56) = v16;
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v20;
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB30);
    *uint64_t v20 = v0;
    v20[1] = sub_244591CD4;
    return MEMORY[0x270FA2360](v0 + 184, 0, 0, 0xD000000000000021, 0x80000002445F8BC0, sub_244599988, v19, v21);
  }
  else
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v11 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_2445943A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[13] = *v3;
  uint64_t v5 = *(void *)(type metadata accessor for DDMAppOrUpdateManagedAppRequest() - 8);
  v4[14] = v5;
  v4[15] = *(void *)(v5 + 64);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2445944A8, 0, 0);
}

uint64_t sub_2445944A8()
{
  *(void *)(v0 + 40) = &type metadata for FeatureFlag;
  *(void *)(v0 + 48) = sub_244598F38();
  char v1 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 128);
    uint64_t v2 = *(void *)(v0 + 136);
    uint64_t v4 = *(void *)(v0 + 112);
    uint64_t v5 = *(uint64_t **)(v0 + 72);
    sub_24459A078(&qword_268E8CB28, (void (*)(uint64_t))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
    sub_24459A078(&qword_268E8CB18, (void (*)(uint64_t))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
    sub_24459A0C0(*v5, v2, (uint64_t (*)(void))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
    sub_24459A0C0(v2, v3, (uint64_t (*)(void))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
    unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v7 = swift_allocObject();
    sub_24459A220(v3, v7 + v6, (uint64_t (*)(void))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
    sub_2445EEEA8();
    swift_allocObject();
    sub_2445EEE98();
    *(void *)(v0 + 56) = sub_244599718;
    *(void *)(v0 + 64) = v7;
    sub_24459928C();
    uint64_t v8 = sub_2445EEE88();
    *(void *)(v0 + 144) = v8;
    *(void *)(v0 + 152) = v9;
    uint64_t v10 = *(void *)(v0 + 136);
    uint64_t v14 = v8;
    uint64_t v15 = v9;
    uint64_t v17 = *(void *)(v0 + 96);
    uint64_t v16 = *(void *)(v0 + 104);
    long long v22 = *(_OWORD *)(v0 + 80);
    swift_release();
    swift_release();
    sub_24459A338(v10, (uint64_t (*)(void))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = swift_task_alloc();
    *(void *)(v0 + 160) = v19;
    *(void *)(v19 + 16) = v18;
    *(_OWORD *)(v19 + 24) = v22;
    *(void *)(v19 + 40) = v14;
    *(void *)(v19 + 48) = v15;
    *(void *)(v19 + 56) = v16;
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v20;
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB30);
    *uint64_t v20 = v0;
    v20[1] = sub_244594828;
    return MEMORY[0x270FA2360](v0 + 184, 0, 0, 0xD000000000000021, 0x80000002445F8BC0, sub_2445997C8, v19, v21);
  }
  else
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v11 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_244594828()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2445949CC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_244594944;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_244594944()
{
  sub_244599358(*(void *)(v0 + 144), *(void *)(v0 + 152));
  uint64_t v1 = *(unsigned __int8 *)(v0 + 184);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_2445949CC()
{
  sub_244599358(v0[18], v0[19]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

unint64_t sub_244594A4C()
{
  unint64_t result = qword_268E8CAC0;
  if (!qword_268E8CAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CAC0);
  }
  return result;
}

unint64_t sub_244594AA0()
{
  unint64_t result = qword_268E8CAC8;
  if (!qword_268E8CAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CAC8);
  }
  return result;
}

unint64_t sub_244594AF4()
{
  unint64_t result = qword_268E8CAE0;
  if (!qword_268E8CAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CAE0);
  }
  return result;
}

uint64_t destroy for ManagedAppInstallRequest()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ManagedAppInstallRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ManagedAppInstallRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ManagedAppInstallRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedAppInstallRequest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedAppInstallRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppInstallRequest()
{
  return &type metadata for ManagedAppInstallRequest;
}

uint64_t getEnumTagSinglePayload for ManagedAppInstallRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ManagedAppInstallRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244594F0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppInstallRequest.CodingKeys()
{
  return &type metadata for ManagedAppInstallRequest.CodingKeys;
}

unint64_t sub_244594F48()
{
  unint64_t result = qword_268E8CAF0;
  if (!qword_268E8CAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CAF0);
  }
  return result;
}

unint64_t sub_244594FA0()
{
  unint64_t result = qword_268E8CAF8;
  if (!qword_268E8CAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CAF8);
  }
  return result;
}

unint64_t sub_244594FF8()
{
  unint64_t result = qword_268E8CB00;
  if (!qword_268E8CB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CB00);
  }
  return result;
}

uint64_t sub_24459504C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a7;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a4;
  uint64_t v31 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB38);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v32 = a1;
  int v26 = v13;
  v13(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = v14 + v11;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v14, v12, v9);
  aBlock[4] = sub_244599CB4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2445C07F4;
  aBlock[3] = &block_descriptor_171;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)aBlock, (uint64_t)v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v33;
    v26(v12, v32, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v14, v12, v9);
    uint64_t v22 = v28;
    *(void *)(v21 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
    v31(v20, v22, v29, sub_244599818, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_244598F8C();
    uint64_t v23 = swift_allocError();
    *uint64_t v24 = 0;
    v34[0] = v23;
    sub_2445EF2E8();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
}

uint64_t sub_24459534C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a7;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a4;
  uint64_t v31 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB38);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v32 = a1;
  int v26 = v13;
  v13(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = v14 + v11;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v14, v12, v9);
  aBlock[4] = sub_244599CB4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2445C07F4;
  aBlock[3] = &block_descriptor_160;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)aBlock, (uint64_t)v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v33;
    v26(v12, v32, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v14, v12, v9);
    uint64_t v22 = v28;
    *(void *)(v21 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
    v31(v20, v22, v29, sub_244599818, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_244598F8C();
    uint64_t v23 = swift_allocError();
    *uint64_t v24 = 0;
    v34[0] = v23;
    sub_2445EF2E8();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
}

uint64_t sub_24459564C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a7;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a4;
  uint64_t v31 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB38);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v32 = a1;
  int v26 = v13;
  v13(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = v14 + v11;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v14, v12, v9);
  aBlock[4] = sub_244599CB4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2445C07F4;
  aBlock[3] = &block_descriptor_149;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)aBlock, (uint64_t)v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v33;
    v26(v12, v32, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v14, v12, v9);
    uint64_t v22 = v28;
    *(void *)(v21 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
    v31(v20, v22, v29, sub_244599818, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_244598F8C();
    uint64_t v23 = swift_allocError();
    *uint64_t v24 = 0;
    v34[0] = v23;
    sub_2445EF2E8();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
}

uint64_t sub_24459594C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a7;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a4;
  uint64_t v31 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CC30);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v32 = a1;
  int v26 = v13;
  v13(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = v14 + v11;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v14, v12, v9);
  aBlock[4] = sub_24459A5EC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2445C07F4;
  aBlock[3] = &block_descriptor_138;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)aBlock, (uint64_t)v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v33;
    v26(v12, v32, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v14, v12, v9);
    uint64_t v22 = v28;
    *(void *)(v21 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
    v31(v20, v22, v29, sub_24459A618, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_244598F8C();
    uint64_t v23 = swift_allocError();
    *uint64_t v24 = 0;
    v34[0] = v23;
    sub_2445EF2E8();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
}

uint64_t sub_244595C4C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a7;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a4;
  uint64_t v31 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB38);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v32 = a1;
  int v26 = v13;
  v13(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = v14 + v11;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v14, v12, v9);
  aBlock[4] = sub_244599CB4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2445C07F4;
  aBlock[3] = &block_descriptor_127;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)aBlock, (uint64_t)v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v33;
    v26(v12, v32, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v14, v12, v9);
    uint64_t v22 = v28;
    *(void *)(v21 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
    v31(v20, v22, v29, sub_244599818, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_244598F8C();
    uint64_t v23 = swift_allocError();
    *uint64_t v24 = 0;
    v34[0] = v23;
    sub_2445EF2E8();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
}

uint64_t sub_244595F4C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a7;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a4;
  uint64_t v31 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB38);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v32 = a1;
  int v26 = v13;
  v13(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = v14 + v11;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v14, v12, v9);
  aBlock[4] = sub_244599CB4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2445C07F4;
  aBlock[3] = &block_descriptor_116;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)aBlock, (uint64_t)v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v33;
    v26(v12, v32, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v14, v12, v9);
    uint64_t v22 = v28;
    *(void *)(v21 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
    v31(v20, v22, v29, sub_244599818, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_244598F8C();
    uint64_t v23 = swift_allocError();
    *uint64_t v24 = 0;
    v34[0] = v23;
    sub_2445EF2E8();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
}

uint64_t sub_24459624C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a7;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a4;
  uint64_t v31 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB38);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v32 = a1;
  int v26 = v13;
  v13(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = v14 + v11;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v14, v12, v9);
  aBlock[4] = sub_244599CB4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2445C07F4;
  aBlock[3] = &block_descriptor_105;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)aBlock, (uint64_t)v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v33;
    v26(v12, v32, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v14, v12, v9);
    uint64_t v22 = v28;
    *(void *)(v21 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
    v31(v20, v22, v29, sub_244599818, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_244598F8C();
    uint64_t v23 = swift_allocError();
    *uint64_t v24 = 0;
    v34[0] = v23;
    sub_2445EF2E8();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
}

uint64_t sub_24459654C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a7;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a4;
  uint64_t v31 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB38);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v32 = a1;
  int v26 = v13;
  v13(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = v14 + v11;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v14, v12, v9);
  aBlock[4] = sub_244599CB4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2445C07F4;
  aBlock[3] = &block_descriptor_95;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)aBlock, (uint64_t)v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v33;
    v26(v12, v32, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v14, v12, v9);
    uint64_t v22 = v28;
    *(void *)(v21 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
    v31(v20, v22, v29, sub_244599818, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_244598F8C();
    uint64_t v23 = swift_allocError();
    *uint64_t v24 = 0;
    v34[0] = v23;
    sub_2445EF2E8();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
}

uint64_t sub_24459684C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a7;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a4;
  uint64_t v31 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB38);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v32 = a1;
  int v26 = v13;
  v13(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = v14 + v11;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v14, v12, v9);
  aBlock[4] = sub_244599CB4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2445C07F4;
  aBlock[3] = &block_descriptor_84;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)aBlock, (uint64_t)v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v33;
    v26(v12, v32, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v14, v12, v9);
    uint64_t v22 = v28;
    *(void *)(v21 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
    v31(v20, v22, v29, sub_244599818, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_244598F8C();
    uint64_t v23 = swift_allocError();
    *uint64_t v24 = 0;
    v34[0] = v23;
    sub_2445EF2E8();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
}

uint64_t sub_244596B4C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a7;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a4;
  uint64_t v31 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB38);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v32 = a1;
  int v26 = v13;
  v13(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = v14 + v11;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v14, v12, v9);
  aBlock[4] = sub_244599CB4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2445C07F4;
  aBlock[3] = &block_descriptor_73;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)aBlock, (uint64_t)v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v33;
    v26(v12, v32, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v14, v12, v9);
    uint64_t v22 = v28;
    *(void *)(v21 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
    v31(v20, v22, v29, sub_244599818, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_244598F8C();
    uint64_t v23 = swift_allocError();
    *uint64_t v24 = 0;
    v34[0] = v23;
    sub_2445EF2E8();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
}

uint64_t sub_244596E4C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a7;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a4;
  uint64_t v31 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB38);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v32 = a1;
  int v26 = v13;
  v13(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = v14 + v11;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v14, v12, v9);
  aBlock[4] = sub_244599CB4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2445C07F4;
  aBlock[3] = &block_descriptor_62;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)aBlock, (uint64_t)v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v33;
    v26(v12, v32, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v14, v12, v9);
    uint64_t v22 = v28;
    *(void *)(v21 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
    v31(v20, v22, v29, sub_244599818, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_244598F8C();
    uint64_t v23 = swift_allocError();
    *uint64_t v24 = 0;
    v34[0] = v23;
    sub_2445EF2E8();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
}

uint64_t sub_24459714C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a7;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a4;
  uint64_t v31 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE1D0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v32 = a1;
  int v26 = v13;
  v13(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = v14 + v11;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v14, v12, v9);
  aBlock[4] = sub_244599A30;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2445C07F4;
  aBlock[3] = &block_descriptor_51;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)aBlock, (uint64_t)v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v33;
    v26(v12, v32, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v14, v12, v9);
    uint64_t v22 = v28;
    *(void *)(v21 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
    v31(v20, v22, v29, sub_244599A5C, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_244598F8C();
    uint64_t v23 = swift_allocError();
    *uint64_t v24 = 0;
    v34[0] = v23;
    sub_2445EF2E8();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
}

uint64_t sub_24459744C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a7;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a4;
  uint64_t v31 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE780);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v32 = a1;
  int v26 = v13;
  v13(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = v14 + v11;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v14, v12, v9);
  aBlock[4] = sub_2445993BC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2445C07F4;
  aBlock[3] = &block_descriptor;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)aBlock, (uint64_t)v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v33;
    v26(v12, v32, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v14, v12, v9);
    uint64_t v22 = v28;
    *(void *)(v21 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
    v31(v20, v22, v29, sub_2445993E8, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_244598F8C();
    uint64_t v23 = swift_allocError();
    *uint64_t v24 = 0;
    v34[0] = v23;
    sub_2445EF2E8();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
}

uint64_t sub_24459774C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a7;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a4;
  uint64_t v31 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE780);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v32 = a1;
  int v26 = v13;
  v13(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = v14 + v11;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v14, v12, v9);
  aBlock[4] = sub_2445993BC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2445C07F4;
  aBlock[3] = &block_descriptor_19;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)aBlock, (uint64_t)v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v33;
    v26(v12, v32, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v14, v12, v9);
    uint64_t v22 = v28;
    *(void *)(v21 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
    v31(v20, v22, v29, sub_2445993E8, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_244598F8C();
    uint64_t v23 = swift_allocError();
    *uint64_t v24 = 0;
    v34[0] = v23;
    sub_2445EF2E8();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
}

uint64_t sub_244597A4C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a7;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a4;
  uint64_t v31 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB38);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v32 = a1;
  int v26 = v13;
  v13(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = v14 + v11;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v14, v12, v9);
  aBlock[4] = sub_2445997EC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2445C07F4;
  aBlock[3] = &block_descriptor_41;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)aBlock, (uint64_t)v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v33;
    v26(v12, v32, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v14, v12, v9);
    uint64_t v22 = v28;
    *(void *)(v21 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
    v31(v20, v22, v29, sub_244599818, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_244598F8C();
    uint64_t v23 = swift_allocError();
    *uint64_t v24 = 0;
    v34[0] = v23;
    sub_2445EF2E8();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
}

uint64_t sub_244597D4C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a7;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a4;
  uint64_t v31 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB38);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v32 = a1;
  int v26 = v13;
  v13(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = v14 + v11;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v14, v12, v9);
  aBlock[4] = sub_2445997EC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2445C07F4;
  aBlock[3] = &block_descriptor_30;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)aBlock, (uint64_t)v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v33;
    v26(v12, v32, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v14, v12, v9);
    uint64_t v22 = v28;
    *(void *)(v21 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
    v31(v20, v22, v29, sub_244599818, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_244598F8C();
    uint64_t v23 = swift_allocError();
    *uint64_t v24 = 0;
    v34[0] = v23;
    sub_2445EF2E8();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
}

uint64_t sub_24459804C(void *a1, uint64_t a2, uint64_t *a3)
{
  if (qword_26B0CE668 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_2445EF038();
  __swift_project_value_buffer(v5, (uint64_t)qword_26B0CE650);
  id v6 = a1;
  id v7 = a1;
  int v8 = sub_2445EF018();
  os_log_type_t v9 = sub_2445EF438();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138543362;
    id v12 = a1;
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    sub_2445EF478();
    *uint64_t v11 = v15;

    _os_log_impl(&dword_244580000, v8, v9, "Error fetching remote object proxy: %{public}@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE538);
    swift_arrayDestroy();
    MEMORY[0x245694340](v11, -1, -1);
    MEMORY[0x245694340](v10, -1, -1);
  }
  else
  {
  }
  sub_244598F8C();
  swift_allocError();
  *uint64_t v13 = 0;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_2445EF2E8();
}

uint64_t sub_244598244(uint64_t a1, unint64_t a2)
{
  sub_244598798(a1, a2, (uint64_t)&v6);
  uint64_t v2 = v6;
  if (v7)
  {
    sub_244598F8C();
    swift_allocError();
    *int v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CC30);
    sub_2445EF2E8();
    uint64_t v2 = v6;
    char v4 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CC30);
    sub_2445EF2F8();
    char v4 = 0;
  }
  return sub_24459A6F8(v2, v4);
}

uint64_t sub_2445982F8(uint64_t a1, unint64_t a2)
{
  sub_244598A5C(a1, a2, (void (*)(uint64_t **__return_ptr, uint64_t **))sub_2445D5C10, (uint64_t)&v6);
  uint64_t v2 = v6;
  if (v7)
  {
    sub_244598F8C();
    swift_allocError();
    *int v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE1D0);
    sub_2445EF2E8();
    uint64_t v2 = v6;
    char v4 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE1D0);
    sub_2445EF2F8();
    char v4 = 0;
  }
  return sub_24459A6F8(v2, v4);
}

uint64_t sub_2445983C0(uint64_t a1, unint64_t a2)
{
  sub_244598A5C(a1, a2, (void (*)(uint64_t **__return_ptr, uint64_t **))sub_2445D5F54, (uint64_t)&v5);
  char v2 = v5;
  if (v6)
  {
    sub_244598F8C();
    swift_allocError();
    *int v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE780);
    return sub_2445EF2E8();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE780);
    return sub_2445EF2F8();
  }
}

uint64_t sub_24459846C(uint64_t a1, unint64_t a2)
{
  sub_244598508(a1, a2, v5);
  char v2 = v5[0];
  if (v5[1])
  {
    sub_244598F8C();
    swift_allocError();
    *int v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB38);
    return sub_2445EF2E8();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB38);
    return sub_2445EF2F8();
  }
}

uint64_t sub_244598508@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v10 = &v11;
  uint64_t v7 = a1;
  unint64_t v8 = a2;
  os_log_type_t v9 = &v7;
  sub_2445993EC(a1, a2);
  sub_2445D5590(&v10);
  uint64_t result = sub_244599358(v7, v8);
  char v5 = v11;
  char v6 = v12;
  if (!v12) {
    char v5 = v11 & 1;
  }
  *a3 = v5;
  a3[1] = v6;
  return result;
}

uint64_t sub_244598798@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v10 = &v11;
  uint64_t v7 = a1;
  unint64_t v8 = a2;
  os_log_type_t v9 = &v7;
  sub_2445993EC(a1, a2);
  sub_2445D58CC((uint64_t *)&v10);
  uint64_t result = sub_244599358(v7, v8);
  uint64_t v5 = v11;
  char v6 = v12;
  if (v12) {
    uint64_t v5 = v11;
  }
  *(void *)a3 = v5;
  *(unsigned char *)(a3 + 8) = v6;
  return result;
}

uint64_t sub_244598A2C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_244598A5C(a1, a2, (void (*)(uint64_t **__return_ptr, uint64_t **))sub_2445D5C10, a3);
}

uint64_t sub_244598A44@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_244598A5C(a1, a2, (void (*)(uint64_t **__return_ptr, uint64_t **))sub_2445D5F54, a3);
}

uint64_t sub_244598A5C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void (*a3)(uint64_t **__return_ptr, uint64_t **)@<X2>, uint64_t a4@<X8>)
{
  char v12 = &v13;
  uint64_t v9 = a1;
  unint64_t v10 = a2;
  uint64_t v11 = &v9;
  sub_2445993EC(a1, a2);
  a3(&v12, &v11);
  uint64_t result = sub_244599358(v9, v10);
  uint64_t v7 = v13;
  char v8 = v14;
  if (v14) {
    uint64_t v7 = v13;
  }
  *(void *)a4 = v7;
  *(unsigned char *)(a4 + 8) = v8;
  return result;
}

uint64_t sub_244598CF8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445EF9F8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t sub_244598D54(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000002445F89D0 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D61726150797562 && a2 == 0xE900000000000073 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74696E4972657375 && a2 == 0xED00006465746169 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002445F8BA0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_244598F38()
{
  unint64_t result = qword_26B0CE840;
  if (!qword_26B0CE840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE840);
  }
  return result;
}

unint64_t sub_244598F8C()
{
  unint64_t result = qword_26B0CE568[0];
  if (!qword_26B0CE568[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B0CE568);
  }
  return result;
}

unint64_t sub_244598FE0()
{
  unint64_t result = qword_26B0CE758;
  if (!qword_26B0CE758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE758);
  }
  return result;
}

unint64_t sub_244599034()
{
  unint64_t result = qword_26B0CE748;
  if (!qword_26B0CE748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE748);
  }
  return result;
}

uint64_t sub_244599088()
{
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE7A8) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[14];
  uint64_t v4 = sub_2445EEF88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_244599180(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2445991E8(void *a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE7A8) - 8);
  return sub_24458FDC0(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), &qword_26B0CE790, &qword_26B0CE798, MEMORY[0x263F8D688], &qword_26B0CE7A8);
}

unint64_t sub_24459928C()
{
  unint64_t result = qword_26B0CE910[0];
  if (!qword_26B0CE910[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B0CE910);
  }
  return result;
}

uint64_t sub_2445992E0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE7A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_244599340(uint64_t a1)
{
  return sub_244599474(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_24459744C);
}

uint64_t sub_244599358(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_2445993B0()
{
  return objectdestroy_9Tm(&qword_26B0CE780);
}

uint64_t sub_2445993BC(uint64_t a1)
{
  return sub_244599498(a1, &qword_26B0CE780, (uint64_t (*)(uint64_t, unint64_t, uint64_t *))sub_24459A908);
}

uint64_t sub_2445993DC()
{
  return objectdestroy_11Tm(&qword_26B0CE780);
}

uint64_t sub_2445993EC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_244599444(void *a1)
{
  return sub_244598CF8(a1);
}

uint64_t sub_24459945C(uint64_t a1)
{
  return sub_244599474(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_24459774C);
}

uint64_t sub_244599474(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_24459948C()
{
  return objectdestroy_9Tm(&qword_26B0CE780);
}

uint64_t sub_244599498(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, unint64_t, uint64_t *))
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  return a3(a1, v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a2);
}

uint64_t sub_244599514()
{
  return objectdestroy_11Tm(&qword_26B0CE780);
}

uint64_t sub_244599520(uint64_t a1, unint64_t a2)
{
  return sub_2445983C0(a1, a2);
}

uint64_t sub_2445995C4()
{
  uint64_t v1 = *(void *)(type metadata accessor for DDMAppOrUpdateManagedAppRequest() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(v2 + 64);
  if (v3 >> 60 != 15) {
    sub_244599358(*(void *)(v2 + 56), v3);
  }
  uint64_t v4 = *(int *)(type metadata accessor for ManagedAppDeclaration(0) + 36);
  uint64_t v5 = v2 + v4 + *(int *)(type metadata accessor for ManagedAppDeclaration.InstallBehavior(0) + 24);
  type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_2445EEF28();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    sub_244585A1C(*(void *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16));
  }

  return swift_deallocObject();
}

uint64_t sub_244599718(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for DDMAppOrUpdateManagedAppRequest() - 8);
  return sub_24458FBF0(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), (uint64_t (*)(void))type metadata accessor for DDMAppOrUpdateManagedAppRequest, &qword_268E8CB18, (void (*)(uint64_t))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
}

uint64_t sub_2445997C8(uint64_t a1)
{
  return sub_244599474(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244597D4C);
}

uint64_t sub_2445997E0()
{
  return objectdestroy_9Tm(&qword_268E8CB38);
}

uint64_t sub_2445997EC(uint64_t a1)
{
  return sub_244599498(a1, &qword_268E8CB38, (uint64_t (*)(uint64_t, unint64_t, uint64_t *))sub_24459A908);
}

uint64_t sub_24459980C()
{
  return objectdestroy_11Tm(&qword_268E8CB38);
}

uint64_t sub_24459981C(uint64_t a1, unint64_t a2)
{
  return sub_24459846C(a1, a2);
}

uint64_t sub_2445998C0()
{
  return objectdestroy_33Tm((uint64_t (*)(void))type metadata accessor for OAuthAuthorizeRequest);
}

uint64_t sub_2445998D8(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for OAuthAuthorizeRequest() - 8);
  return sub_24458FBF0(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), (uint64_t (*)(void))type metadata accessor for OAuthAuthorizeRequest, &qword_268E8CB50, (void (*)(uint64_t))type metadata accessor for OAuthAuthorizeRequest);
}

uint64_t sub_244599988(uint64_t a1)
{
  return sub_244599474(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244597A4C);
}

uint64_t sub_2445999A0()
{
  return objectdestroy_9Tm(&qword_268E8CB38);
}

uint64_t sub_2445999AC()
{
  return objectdestroy_11Tm(&qword_268E8CB38);
}

unint64_t sub_2445999B8()
{
  unint64_t result = qword_26B0CE420;
  if (!qword_26B0CE420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE420);
  }
  return result;
}

uint64_t sub_244599A0C(uint64_t a1)
{
  return sub_244599474(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_24459714C);
}

uint64_t sub_244599A24()
{
  return objectdestroy_9Tm(&qword_26B0CE1D0);
}

uint64_t sub_244599A30(uint64_t a1)
{
  return sub_244599498(a1, &qword_26B0CE1D0, (uint64_t (*)(uint64_t, unint64_t, uint64_t *))sub_24459A908);
}

uint64_t sub_244599A50()
{
  return objectdestroy_11Tm(&qword_26B0CE1D0);
}

uint64_t sub_244599A5C(uint64_t a1, uint64_t a2)
{
  return sub_24459A638(a1, a2, &qword_26B0CE1D0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_2445982F8);
}

uint64_t sub_244599A7C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_244599AE8()
{
  return objectdestroy_33Tm((uint64_t (*)(void))type metadata accessor for InstallEnterpriseManifestRequest);
}

uint64_t objectdestroy_33Tm(uint64_t (*a1)(void))
{
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(a1(0) - 8) + 80);
  uint64_t v3 = v1 + ((v2 + 16) & ~v2);
  uint64_t v4 = sub_2445EEF28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_244599BE0(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for InstallEnterpriseManifestRequest() - 8);
  return sub_24458FBF0(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), (uint64_t (*)(void))type metadata accessor for InstallEnterpriseManifestRequest, &qword_268E8CB88, (void (*)(uint64_t))type metadata accessor for InstallEnterpriseManifestRequest);
}

uint64_t sub_244599C90(uint64_t a1)
{
  return sub_244599474(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244596E4C);
}

uint64_t sub_244599CA8()
{
  return objectdestroy_9Tm(&qword_268E8CB38);
}

uint64_t sub_244599CB4(uint64_t a1)
{
  return sub_244599498(a1, &qword_268E8CB38, (uint64_t (*)(uint64_t, unint64_t, uint64_t *))sub_24459804C);
}

uint64_t sub_244599CD4()
{
  return objectdestroy_11Tm(&qword_268E8CB38);
}

unint64_t sub_244599CE0()
{
  unint64_t result = qword_268E8CB98;
  if (!qword_268E8CB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CB98);
  }
  return result;
}

unint64_t sub_244599D34()
{
  unint64_t result = qword_268E8CBA0;
  if (!qword_268E8CBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CBA0);
  }
  return result;
}

uint64_t sub_244599D88()
{
  sub_244599DC4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));

  return swift_deallocObject();
}

uint64_t sub_244599DC4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244599DDC(void *a1)
{
  return sub_24458FA7C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_244599DFC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_244599E14(uint64_t a1)
{
  return sub_244599474(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244596B4C);
}

uint64_t sub_244599E2C()
{
  return objectdestroy_9Tm(&qword_268E8CB38);
}

uint64_t sub_244599E38()
{
  return objectdestroy_11Tm(&qword_268E8CB38);
}

unint64_t sub_244599E44()
{
  unint64_t result = qword_268E8CBB0;
  if (!qword_268E8CBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CBB0);
  }
  return result;
}

unint64_t sub_244599E98()
{
  unint64_t result = qword_268E8CBB8;
  if (!qword_268E8CBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CBB8);
  }
  return result;
}

uint64_t sub_244599EEC()
{
  return swift_deallocObject();
}

uint64_t sub_244599EFC(void *a1)
{
  return sub_24458F90C(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_244599F18(uint64_t a1)
{
  return sub_244599474(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_24459684C);
}

uint64_t sub_244599F30()
{
  return objectdestroy_9Tm(&qword_268E8CB38);
}

uint64_t sub_244599F3C()
{
  return objectdestroy_11Tm(&qword_268E8CB38);
}

unint64_t sub_244599F48()
{
  unint64_t result = qword_268E8CBC8;
  if (!qword_268E8CBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CBC8);
  }
  return result;
}

unint64_t sub_244599F9C()
{
  unint64_t result = qword_268E8CBD0;
  if (!qword_268E8CBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CBD0);
  }
  return result;
}

uint64_t sub_244599FF0()
{
  return objectdestroy_87Tm();
}

uint64_t sub_244599FF8(void *a1)
{
  return sub_24458F798(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_24459A018(uint64_t a1)
{
  return sub_244599474(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_24459654C);
}

uint64_t sub_24459A030()
{
  return objectdestroy_9Tm(&qword_268E8CB38);
}

uint64_t sub_24459A03C()
{
  return objectdestroy_11Tm(&qword_268E8CB38);
}

uint64_t sub_24459A048(uint64_t a1)
{
  return sub_244599474(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_24459624C);
}

uint64_t sub_24459A060()
{
  return objectdestroy_9Tm(&qword_268E8CB38);
}

uint64_t sub_24459A06C()
{
  return objectdestroy_11Tm(&qword_268E8CB38);
}

uint64_t sub_24459A078(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24459A0C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24459A128()
{
  uint64_t v1 = (int *)(type metadata accessor for VPPInstallRequest() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t v3 = sub_2445EEF88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  sub_244585A1C(*(void *)(v2 + v1[8]), *(void *)(v2 + v1[8] + 8), *(unsigned char *)(v2 + v1[8] + 16));

  return swift_deallocObject();
}

uint64_t sub_24459A220(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24459A288(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for VPPInstallRequest() - 8);
  return sub_24458FBF0(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), (uint64_t (*)(void))type metadata accessor for VPPInstallRequest, &qword_268E8CBF0, (void (*)(uint64_t))type metadata accessor for VPPInstallRequest);
}

uint64_t sub_24459A338(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24459A398(uint64_t a1)
{
  return sub_244599474(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244595F4C);
}

uint64_t sub_24459A3B0()
{
  return objectdestroy_9Tm(&qword_268E8CB38);
}

uint64_t sub_24459A3BC()
{
  return objectdestroy_11Tm(&qword_268E8CB38);
}

unint64_t sub_24459A3C8()
{
  unint64_t result = qword_268E8CC00;
  if (!qword_268E8CC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CC00);
  }
  return result;
}

unint64_t sub_24459A41C()
{
  unint64_t result = qword_268E8CC08;
  if (!qword_268E8CC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CC08);
  }
  return result;
}

uint64_t sub_24459A470()
{
  return swift_deallocObject();
}

uint64_t sub_24459A480(void *a1)
{
  return sub_24458F624(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_24459A49C(uint64_t a1)
{
  return sub_244599474(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244595C4C);
}

uint64_t sub_24459A4B4()
{
  return objectdestroy_9Tm(&qword_268E8CB38);
}

uint64_t sub_24459A4C0()
{
  return objectdestroy_11Tm(&qword_268E8CB38);
}

unint64_t sub_24459A4CC()
{
  unint64_t result = qword_268E8CC10;
  if (!qword_268E8CC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CC10);
  }
  return result;
}

unint64_t sub_24459A520()
{
  unint64_t result = qword_268E8CC20;
  if (!qword_268E8CC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CC20);
  }
  return result;
}

uint64_t sub_24459A574()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24459A5AC(void *a1)
{
  return sub_2445AE564(a1, (uint64_t *)(v1 + 16));
}

uint64_t sub_24459A5C8(uint64_t a1)
{
  return sub_244599474(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_24459594C);
}

uint64_t sub_24459A5E0()
{
  return objectdestroy_9Tm(&qword_268E8CC30);
}

uint64_t sub_24459A5EC(uint64_t a1)
{
  return sub_244599498(a1, &qword_268E8CC30, (uint64_t (*)(uint64_t, unint64_t, uint64_t *))sub_24459804C);
}

uint64_t sub_24459A60C()
{
  return objectdestroy_11Tm(&qword_268E8CC30);
}

uint64_t sub_24459A618(uint64_t a1, uint64_t a2)
{
  return sub_24459A638(a1, a2, &qword_268E8CC30, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_244598244);
}

uint64_t sub_24459A638(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v4 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a4(a1, a2, v4 + v8, v9);
}

uint64_t sub_24459A6F8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24459A704(void *a1)
{
  return sub_2445AE544(a1, (uint64_t *)(v1 + 16));
}

uint64_t sub_24459A720(uint64_t a1)
{
  return sub_244599474(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_24459564C);
}

uint64_t sub_24459A738()
{
  return objectdestroy_9Tm(&qword_268E8CB38);
}

uint64_t sub_24459A744()
{
  return objectdestroy_11Tm(&qword_268E8CB38);
}

unint64_t sub_24459A750()
{
  unint64_t result = qword_268E8CC48;
  if (!qword_268E8CC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CC48);
  }
  return result;
}

unint64_t sub_24459A7A4()
{
  unint64_t result = qword_268E8CC50;
  if (!qword_268E8CC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CC50);
  }
  return result;
}

uint64_t sub_24459A7F8(void *a1)
{
  return sub_24458F1E8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24459A814(uint64_t a1)
{
  return sub_244599474(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_24459534C);
}

uint64_t sub_24459A82C()
{
  return objectdestroy_9Tm(&qword_268E8CB38);
}

uint64_t sub_24459A838()
{
  return objectdestroy_11Tm(&qword_268E8CB38);
}

uint64_t sub_24459A844()
{
  return objectdestroy_87Tm();
}

uint64_t objectdestroy_87Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24459A898(void *a1)
{
  long long v2 = *(_OWORD *)(v1 + 32);
  v4[0] = *(_OWORD *)(v1 + 16);
  v4[1] = v2;
  v4[2] = *(_OWORD *)(v1 + 48);
  char v5 = *(unsigned char *)(v1 + 64);
  return sub_24458F0CC(a1, (uint64_t *)v4);
}

uint64_t sub_24459A8D4(uint64_t a1)
{
  return sub_244599474(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_24459504C);
}

uint64_t sub_24459A8EC()
{
  return objectdestroy_9Tm(&qword_268E8CB38);
}

uint64_t sub_24459A8F8()
{
  return objectdestroy_11Tm(&qword_268E8CB38);
}

uint64_t Platform.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24459AC2C(a1, a2);
}

uint64_t Platform.encode(to:)(void *a1)
{
  return sub_24459ACF8(a1);
}

uint64_t sub_24459A9E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24459AC2C(a1, a2);
}

uint64_t sub_24459A9FC(void *a1)
{
  return sub_24459ACF8(a1);
}

void static ManagedApp.Platform.macOS.getter(void *a1@<X8>)
{
  *a1 = 0;
}

void static ManagedApp.Platform.iOS.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static ManagedApp.Platform.tvOS.getter(void *a1@<X8>)
{
  *a1 = 3;
}

void static ManagedApp.Platform.watchOS.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static ManagedApp.Platform.visionOS.getter(void *a1@<X8>)
{
  *a1 = 7;
}

uint64_t ManagedApp.Platform.description.getter()
{
  uint64_t result = 0x534F63616DLL;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 5459817;
      break;
    case 3:
      uint64_t result = 1397716596;
      break;
    case 4:
      uint64_t result = 0x534F6863746177;
      break;
    case 7:
      uint64_t result = 0x534F6E6F69736976;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t ManagedApp.Platform.hash(into:)()
{
  return sub_2445EF958();
}

BOOL static ManagedApp.Platform.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t _s22ManagedAppDistribution8PlatformV9hashValueSivg_0()
{
  return sub_2445EF988();
}

uint64_t sub_24459AB90()
{
  return sub_2445EF958();
}

uint64_t sub_24459ABBC()
{
  return sub_2445EF988();
}

BOOL sub_24459AC00(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t ManagedApp.Platform.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24459AC2C(a1, a2);
}

uint64_t sub_24459AC2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445EF9C8();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    uint64_t v5 = sub_2445EF868();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
    *a2 = v5;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t ManagedApp.Platform.encode(to:)(void *a1)
{
  return sub_24459ACF8(a1);
}

uint64_t sub_24459ACF8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445EFA08();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_2445EF898();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

unint64_t sub_24459AD90()
{
  unint64_t result = qword_268E8CC58;
  if (!qword_268E8CC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CC58);
  }
  return result;
}

unint64_t sub_24459ADE8()
{
  unint64_t result = qword_268E8CC60;
  if (!qword_268E8CC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CC60);
  }
  return result;
}

ValueMetadata *type metadata accessor for Platform()
{
  return &type metadata for Platform;
}

ValueMetadata *type metadata accessor for ManagedApp.Platform()
{
  return &type metadata for ManagedApp.Platform;
}

uint64_t SyncXPCResult.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  SyncXPCResult.init()();
  return v0;
}

uint64_t SyncXPCResult.init()()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t v2 = sub_2445EF998();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return v0;
}

uint64_t SyncXPCResult.setResult(_:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2445EF998();
  uint64_t v5 = sub_2445EF468();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v16[-v10];
  char v12 = (char *)v1 + *(void *)(v3 + 104);
  swift_beginAccess();
  (*(void (**)(unsigned char *, char *, uint64_t))(v6 + 16))(v11, v12, v5);
  uint64_t v13 = *(void *)(v4 - 8);
  int v14 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v4);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
  if (v14 == 1)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v9, a1, v4);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v4);
    swift_beginAccess();
    (*(void (**)(char *, unsigned char *, uint64_t))(v6 + 40))(v12, v9, v5);
    return swift_endAccess();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t SyncXPCResult.result.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2445EF998();
  uint64_t v5 = sub_2445EF468();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = (char *)v1 + *(void *)(v3 + 104);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v9, v5);
  uint64_t v10 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v4) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v8, v4);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_244598F8C();
  swift_allocError();
  *uint64_t v11 = 0;
  return swift_willThrow();
}

uint64_t SyncXPCResult.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  sub_2445EF998();
  uint64_t v2 = sub_2445EF468();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SyncXPCResult.__deallocating_deinit()
{
  SyncXPCResult.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_24459B510()
{
  sub_2445EF998();
  uint64_t result = sub_2445EF468();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SyncXPCResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for SyncXPCResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SyncXPCResult);
}

uint64_t dispatch thunk of SyncXPCResult.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t CellularIdentity.isRoaming.getter()
{
  return *v0;
}

uint64_t sub_24459B600()
{
  return CellularIdentity.init(simIdentity:isRoaming:)(0xD000000000000014, 0x80000002445F8D90, 0, &byte_268E8CC68);
}

uint64_t CellularIdentity.init(simIdentity:isRoaming:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, unsigned char *a4@<X8>)
{
  uint64_t v37 = a4;
  v40[3] = *MEMORY[0x263EF8340];
  uint64_t v7 = sub_2445EF088();
  uint64_t v34 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2445EF098();
  uint64_t v32 = *(void *)(v10 - 8);
  uint64_t v33 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v31 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2445EF168();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v39 = a3;
  swift_bridgeObjectRetain();
  sub_2445EF158();
  uint64_t v36 = a1;
  uint64_t v16 = sub_2445EF138();
  unint64_t v18 = v17;
  uint64_t v38 = a2;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v18 >> 60 == 15) {
LABEL_13:
  }
    __break(1u);
  sub_24459DA4C(&qword_268E8CC90, MEMORY[0x263F04840]);
  sub_2445EF078();
  switch(v18 >> 62)
  {
    case 1uLL:
      if (v16 >> 32 < (int)v16)
      {
        __break(1u);
        goto LABEL_13;
      }
      sub_2445993EC(v16, v18);
      sub_24459D648((int)v16, v16 >> 32);
LABEL_10:
      sub_24459D73C(v16, v18);
LABEL_11:
      uint64_t v22 = (uint64_t)v31;
      sub_2445EF068();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v7);
      uint64_t v23 = sub_24459D194(v22);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v22, v33);
      v40[0] = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE1C8);
      sub_24459D750();
      uint64_t v24 = sub_2445EF0D8();
      uint64_t v26 = v25;
      sub_24459D73C(v16, v18);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v28 = v37;
      *uint64_t v37 = v39;
      v28[1] = v24;
      v28[2] = v26;
      uint64_t v29 = v38;
      v28[3] = v36;
      v28[4] = v29;
      return result;
    case 2uLL:
      uint64_t v19 = *(void *)(v16 + 16);
      uint64_t v20 = *(void *)(v16 + 24);
      sub_24459D728(v16, v18);
      swift_retain();
      swift_retain();
      uint64_t v21 = v35;
      sub_24459D648(v19, v20);
      if (v21)
      {
        swift_release();
        swift_release();
        __break(1u);
        JUMPOUT(0x24459BB70);
      }
      swift_release();
      swift_release();
      goto LABEL_10;
    case 3uLL:
      memset(v40, 0, 14);
      goto LABEL_7;
    default:
      v40[0] = v16;
      LOWORD(v40[1]) = v18;
      BYTE2(v40[1]) = BYTE2(v18);
      BYTE3(v40[1]) = BYTE3(v18);
      BYTE4(v40[1]) = BYTE4(v18);
      BYTE5(v40[1]) = BYTE5(v18);
LABEL_7:
      sub_2445EF058();
      sub_24459D73C(v16, v18);
      goto LABEL_11;
  }
}

uint64_t static CellularIdentity.null.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_268E8C880 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_268E8CC70;
  uint64_t v2 = unk_268E8CC78;
  uint64_t v4 = qword_268E8CC80;
  uint64_t v5 = unk_268E8CC88;
  *(unsigned char *)a1 = byte_268E8CC68;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t static CellularIdentity.current()(uint64_t a1)
{
  v1[19] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CCA8);
  v1[20] = v2;
  v1[21] = *(void *)(v2 - 8);
  v1[22] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24459BCCC, 0, 0);
}

uint64_t sub_24459BCCC()
{
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t v3 = v0[20];
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F02D30]), sel_initWithQueue_, 0);
  v0[23] = v4;
  v0[2] = v0;
  v0[7] = v0 + 18;
  v0[3] = sub_24459BE94;
  swift_continuation_init();
  v0[17] = v3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v0 + 14);
  sub_24459D810(0, &qword_268E8CCB0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE838);
  sub_2445EF2D8();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 32))(boxed_opaque_existential_0, v1, v3);
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 1107296256;
  v0[12] = sub_24459C2CC;
  v0[13] = &block_descriptor_0;
  objc_msgSend(v4, sel_getCurrentDataSubscriptionContext_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24459BE94()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 192) = v1;
  if (v1) {
    uint64_t v2 = sub_24459C1D0;
  }
  else {
    uint64_t v2 = sub_24459BFA4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24459BFA4()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = (void *)v0[18];
  v0[25] = v2;
  id v3 = v2;
  id v4 = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[26] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_24459C064;
  uint64_t v6 = v0[23];
  uint64_t v7 = v0[19];
  return CellularIdentity.init(for:using:)(v7, (uint64_t)v3, v6);
}

uint64_t sub_24459C064()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24459C160, 0, 0);
}

uint64_t sub_24459C160()
{
  uint64_t v1 = *(void **)(v0 + 184);

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24459C1D0()
{
  swift_willThrow();
  if (qword_268E8C880 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[23];
  uint64_t v1 = (void *)v0[24];
  uint64_t v3 = v0[19];
  char v4 = byte_268E8CC68;
  uint64_t v6 = qword_268E8CC70;
  uint64_t v5 = unk_268E8CC78;
  uint64_t v8 = qword_268E8CC80;
  uint64_t v7 = unk_268E8CC88;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  *(unsigned char *)uint64_t v3 = v4;
  *(void *)(v3 + 8) = v6;
  *(void *)(v3 + 16) = v5;
  *(void *)(v3 + 24) = v8;
  *(void *)(v3 + 32) = v7;
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

void sub_24459C2CC(uint64_t a1, void *a2, void *a3)
{
}

uint64_t CellularIdentity.init(for:using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[38] = a2;
  v3[39] = a3;
  v3[37] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CCC0);
  v3[40] = v4;
  v3[41] = *(void *)(v4 - 8);
  v3[42] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CCC8);
  v3[43] = v5;
  v3[44] = *(void *)(v5 - 8);
  v3[45] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24459C400, 0, 0);
}

uint64_t sub_24459C400()
{
  uint64_t v2 = v0[44];
  uint64_t v1 = v0[45];
  uint64_t v3 = v0[43];
  uint64_t v4 = v0[38];
  uint64_t v5 = (void *)v0[39];
  v0[2] = v0;
  v0[7] = v0 + 34;
  v0[3] = sub_24459C598;
  swift_continuation_init();
  v0[25] = v3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v0 + 22);
  v0[46] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE838);
  sub_2445EF2D8();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 32))(boxed_opaque_existential_0, v1, v3);
  v0[18] = MEMORY[0x263EF8330];
  v0[19] = 1107296256;
  v0[20] = sub_24459D048;
  v0[21] = &block_descriptor_4;
  objc_msgSend(v5, sel_copySIMIdentity_completion_, v4, v0 + 18);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24459C598()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 376) = v1;
  if (v1) {
    uint64_t v2 = sub_24459CADC;
  }
  else {
    uint64_t v2 = sub_24459C6A8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24459C6A8()
{
  uint64_t v2 = v0[41];
  uint64_t v1 = v0[42];
  uint64_t v3 = v0[40];
  id v9 = (id)v0[39];
  uint64_t v4 = (void *)v0[38];
  uint64_t v5 = v0[35];
  v0[48] = v0[34];
  v0[49] = v5;
  v0[10] = v0;
  v0[15] = v0 + 36;
  v0[11] = sub_24459C860;
  swift_continuation_init();
  v0[33] = v3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v0 + 30);
  sub_24459D810(0, &qword_268E8CCD0);
  id v7 = v4;
  sub_2445EF2D8();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 32))(boxed_opaque_existential_0, v1, v3);
  v0[26] = MEMORY[0x263EF8330];
  v0[27] = 1107296256;
  v0[28] = sub_24459D0E8;
  v0[29] = &block_descriptor_7;
  objc_msgSend(v9, sel_getDataStatus_completion_, v7, v0 + 26);
  return MEMORY[0x270FA23F0](v0 + 10);
}

uint64_t sub_24459C860()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 400) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_24459CBEC;
  }
  else
  {
    uint64_t v2 = sub_24459C978;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24459C978()
{
  uint64_t v17 = v0;
  uint64_t v2 = *(void *)(v0 + 384);
  uint64_t v1 = *(void *)(v0 + 392);
  uint64_t v3 = *(void **)(v0 + 288);

  CellularIdentity.init(simIdentity:isRoaming:)(v2, v1, objc_msgSend(v3, sel_inHomeCountry) ^ 1, v12);
  uint64_t v4 = *(void **)(v0 + 304);

  uint64_t v6 = v13;
  uint64_t v5 = v14;
  uint64_t v8 = v15;
  uint64_t v7 = v16;
  uint64_t v9 = *(void *)(v0 + 296);
  *(unsigned char *)uint64_t v9 = v12[0];
  *(void *)(v9 + 8) = v6;
  *(void *)(v9 + 16) = v5;
  *(void *)(v9 + 24) = v8;
  *(void *)(v9 + 32) = v7;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_24459CADC()
{
  swift_willThrow();
  uint64_t v1 = (void *)v0[47];
  if (qword_268E8C880 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)v0[38];
  uint64_t v2 = (void *)v0[39];
  char v4 = byte_268E8CC68;
  uint64_t v6 = qword_268E8CC70;
  uint64_t v5 = unk_268E8CC78;
  uint64_t v8 = qword_268E8CC80;
  uint64_t v7 = unk_268E8CC88;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  uint64_t v9 = v0[37];
  *(unsigned char *)uint64_t v9 = v4;
  *(void *)(v9 + 8) = v6;
  *(void *)(v9 + 16) = v5;
  *(void *)(v9 + 24) = v8;
  *(void *)(v9 + 32) = v7;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_24459CBEC()
{
  uint64_t v1 = (void *)v0[38];
  swift_willThrow();

  uint64_t v2 = (void *)v0[50];
  if (qword_268E8C880 != -1) {
    swift_once();
  }
  char v4 = (void *)v0[38];
  uint64_t v3 = (void *)v0[39];
  char v5 = byte_268E8CC68;
  uint64_t v7 = qword_268E8CC70;
  uint64_t v6 = unk_268E8CC78;
  uint64_t v9 = qword_268E8CC80;
  uint64_t v8 = unk_268E8CC88;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  uint64_t v10 = v0[37];
  *(unsigned char *)uint64_t v10 = v5;
  *(void *)(v10 + 8) = v7;
  *(void *)(v10 + 16) = v6;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

void static CellularIdentity.current()(uint64_t a1@<X8>)
{
  v13[1] = *(id *)MEMORY[0x263EF8340];
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F02D30]), sel_initWithQueue_, 0);
  v13[0] = 0;
  id v3 = objc_msgSend(v2, sel_getCurrentDataSubscriptionContextSync_, v13);
  if (v3)
  {
    char v4 = v3;
    id v5 = v13[0];
    CellularIdentity.init(for:using:)(v2, v4, a1);
  }
  else
  {
    id v6 = v13[0];
    uint64_t v7 = (void *)sub_2445EEEB8();

    swift_willThrow();
    if (qword_268E8C880 != -1) {
      swift_once();
    }
    char v8 = byte_268E8CC68;
    uint64_t v10 = qword_268E8CC70;
    uint64_t v9 = unk_268E8CC78;
    uint64_t v12 = qword_268E8CC80;
    uint64_t v11 = unk_268E8CC88;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();

    *(unsigned char *)a1 = v8;
    *(void *)(a1 + 8) = v10;
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v12;
    *(void *)(a1 + 32) = v11;
  }
}

void CellularIdentity.init(for:using:)(id a1@<X1>, void *a2@<X0>, uint64_t a3@<X8>)
{
  v24[5] = *(id *)MEMORY[0x263EF8340];
  v24[0] = 0;
  id v6 = objc_msgSend(a1, sel_copySIMIdentity_error_, a2, v24);
  id v7 = v24[0];
  if (v6)
  {
    char v8 = v6;
    uint64_t v9 = sub_2445EF128();
    uint64_t v11 = v10;
    id v12 = v7;

    v24[0] = 0;
    id v13 = objc_msgSend(a1, sel_getDataStatus_error_, a2, v24);
    if (v13)
    {
      uint64_t v14 = v13;
      id v15 = v24[0];
      CellularIdentity.init(simIdentity:isRoaming:)(v9, v11, objc_msgSend(v14, sel_inHomeCountry) ^ 1, v24);

      char v16 = (char)v24[0];
      id v18 = v24[1];
      id v17 = v24[2];
      id v20 = v24[3];
      id v19 = v24[4];
      goto LABEL_9;
    }
    id v23 = v24[0];
    swift_bridgeObjectRelease();
    uint64_t v22 = (void *)sub_2445EEEB8();
  }
  else
  {
    id v21 = v24[0];
    uint64_t v22 = (void *)sub_2445EEEB8();
  }
  swift_willThrow();
  if (qword_268E8C880 != -1) {
    swift_once();
  }
  char v16 = byte_268E8CC68;
  id v18 = (id)qword_268E8CC70;
  id v17 = (id)unk_268E8CC78;
  id v20 = (id)qword_268E8CC80;
  id v19 = (id)unk_268E8CC88;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

LABEL_9:
  *(unsigned char *)a3 = v16;
  *(void *)(a3 + 8) = v18;
  *(void *)(a3 + 16) = v17;
  *(void *)(a3 + 24) = v20;
  *(void *)(a3 + 32) = v19;
}

void sub_24459D048(uint64_t a1, uint64_t a2, void *a3)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 32), *(void *)(a1 + 56));
  if (a3)
  {
    id v4 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CCC8);
    sub_2445EF2E8();
  }
  else
  {
    sub_2445EF128();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CCC8);
    sub_2445EF2F8();
  }
}

void sub_24459D0E8(uint64_t a1, void *a2, void *a3)
{
}

void sub_24459D0F4(uint64_t a1, void *a2, void *a3, uint64_t *a4)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 32), *(void *)(a1 + 56));
  if (a3)
  {
    id v7 = a3;
    __swift_instantiateConcreteTypeFromMangledName(a4);
    sub_2445EF2E8();
  }
  else if (a2)
  {
    id v8 = a2;
    __swift_instantiateConcreteTypeFromMangledName(a4);
    sub_2445EF2F8();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24459D194(uint64_t a1)
{
  uint64_t v2 = sub_2445EF098();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24459DA4C(&qword_268E8CCD8, MEMORY[0x263F04868]);
  uint64_t v6 = sub_2445EF1F8();
  uint64_t v37 = MEMORY[0x263F8EE78];
  sub_2445DE718(0, v6 & ~(v6 >> 63), 0);
  uint64_t v7 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t result = sub_2445EF1E8();
  if ((v6 & 0x8000000000000000) == 0)
  {
    unint64_t v9 = v36;
    if (v6)
    {
      uint64_t v10 = *(void *)(v35 + 16);
      uint64_t v33 = v35;
      *(void *)&long long v34 = v10;
      uint64_t v32 = v35 + 32;
      long long v31 = xmmword_2445F0B90;
      unint64_t v11 = v36;
      while ((void)v34 != v11)
      {
        if ((v9 & 0x8000000000000000) != 0) {
          goto LABEL_21;
        }
        if (v11 >= *(void *)(v33 + 16)) {
          goto LABEL_22;
        }
        char v12 = *(unsigned char *)(v32 + v11);
        __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CCE0);
        uint64_t v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = v31;
        *(void *)(v13 + 56) = MEMORY[0x263F8E778];
        *(void *)(v13 + 64) = MEMORY[0x263F8E7C0];
        *(unsigned char *)(v13 + 32) = v12;
        uint64_t result = sub_2445EF148();
        uint64_t v14 = result;
        uint64_t v16 = v15;
        uint64_t v37 = v7;
        unint64_t v18 = *(void *)(v7 + 16);
        unint64_t v17 = *(void *)(v7 + 24);
        if (v18 >= v17 >> 1)
        {
          uint64_t result = sub_2445DE718(v17 > 1, v18 + 1, 1);
          uint64_t v7 = v37;
        }
        *(void *)(v7 + 16) = v18 + 1;
        uint64_t v19 = v7 + 16 * v18;
        *(void *)(v19 + 32) = v14;
        *(void *)(v19 + 40) = v16;
        ++v11;
        if (!--v6)
        {
          unint64_t v36 = v11;
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
    }
    else
    {
      unint64_t v11 = v36;
LABEL_12:
      uint64_t v20 = v35;
      unint64_t v21 = *(void *)(v35 + 16);
      if (v11 == v21)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        return v7;
      }
      long long v34 = xmmword_2445F0B90;
      while (v11 < v21)
      {
        char v22 = *(unsigned char *)(v20 + 32 + v11);
        unint64_t v36 = v11 + 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CCE0);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = v34;
        *(void *)(v23 + 56) = MEMORY[0x263F8E778];
        *(void *)(v23 + 64) = MEMORY[0x263F8E7C0];
        *(unsigned char *)(v23 + 32) = v22;
        uint64_t result = sub_2445EF148();
        uint64_t v24 = result;
        uint64_t v26 = v25;
        uint64_t v37 = v7;
        unint64_t v28 = *(void *)(v7 + 16);
        unint64_t v27 = *(void *)(v7 + 24);
        if (v28 >= v27 >> 1)
        {
          uint64_t result = sub_2445DE718(v27 > 1, v28 + 1, 1);
          uint64_t v7 = v37;
        }
        *(void *)(v7 + 16) = v28 + 1;
        uint64_t v29 = v7 + 16 * v28;
        *(void *)(v29 + 32) = v24;
        *(void *)(v29 + 40) = v26;
        unint64_t v11 = v36;
        unint64_t v21 = *(void *)(v20 + 16);
        if (v36 == v21) {
          goto LABEL_13;
        }
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t CellularIdentity.description.getter()
{
  if (os_variant_has_internal_content())
  {
    sub_2445EF558();
    swift_bridgeObjectRelease();
    unint64_t v1 = 0xD000000000000019;
    swift_bridgeObjectRetain();
    sub_2445EF1A8();
    swift_bridgeObjectRelease();
    sub_2445EF1A8();
  }
  else
  {
    sub_2445EF558();
    swift_bridgeObjectRelease();
    unint64_t v1 = 0xD00000000000002ALL;
  }
  swift_bridgeObjectRetain();
  sub_2445EF1A8();
  swift_bridgeObjectRelease();
  sub_2445EF1A8();
  return v1;
}

uint64_t sub_24459D648(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2445EEE08();
  if (!result || (uint64_t result = sub_2445EEE28(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_2445EEE18();
      sub_2445EF088();
      sub_24459DA4C(&qword_268E8CC90, MEMORY[0x263F04840]);
      return sub_2445EF058();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24459D728(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_2445993EC(a1, a2);
  }
  return a1;
}

uint64_t sub_24459D73C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_244599358(a1, a2);
  }
  return a1;
}

unint64_t sub_24459D750()
{
  unint64_t result = qword_268E8CC98;
  if (!qword_268E8CC98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B0CE1C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CC98);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  unint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_24459D810(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t destroy for CellularIdentity()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CellularIdentity(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CellularIdentity(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for CellularIdentity(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CellularIdentity(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CellularIdentity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CellularIdentity()
{
  return &type metadata for CellularIdentity;
}

uint64_t sub_24459DA4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24459DAA4()
{
  return sub_2445EF988();
}

uint64_t sub_24459DBAC()
{
  return sub_2445EF988();
}

uint64_t ManagedAppStatus.bundleID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedAppStatus.bundleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ManagedAppStatus.bundleID.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppStatus.declarationIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedAppStatus.declarationIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ManagedAppStatus.declarationIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppStatus.declarationKey.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedAppStatus.declarationKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ManagedAppStatus.declarationKey.modify())()
{
  return nullsub_1;
}

void ManagedAppStatus.state.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

unsigned char *ManagedAppStatus.state.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 48) = *result;
  return result;
}

uint64_t (*ManagedAppStatus.state.modify())()
{
  return nullsub_1;
}

void ManagedAppStatus.updateState.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 49);
}

unsigned char *ManagedAppStatus.updateState.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 49) = *result;
  return result;
}

uint64_t (*ManagedAppStatus.updateState.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppStatus.reasons.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ManagedAppStatus.reasons.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*ManagedAppStatus.reasons.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppStatus.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedAppStatus.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*ManagedAppStatus.name.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppStatus.installedVersionInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[10];
  uint64_t v3 = v1[11];
  uint64_t v4 = v1[12];
  uint64_t v5 = v1[13];
  uint64_t v6 = v1[14];
  uint64_t v7 = v1[15];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_24459DFB0(v2, v3, v4, v5);
}

uint64_t sub_24459DFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 ManagedAppStatus.installedVersionInfo.setter(long long *a1)
{
  __n128 v5 = (__n128)a1[1];
  long long v6 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = *((void *)a1 + 5);
  sub_24459E050(v1[10], v1[11], v1[12], v1[13]);
  __n128 result = v5;
  *((_OWORD *)v1 + 5) = v6;
  *((__n128 *)v1 + 6) = v5;
  v1[14] = v2;
  v1[15] = v3;
  return result;
}

uint64_t sub_24459E050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*ManagedAppStatus.installedVersionInfo.modify())()
{
  return nullsub_1;
}

void ManagedAppStatus.purchaseMethod.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 128);
}

__n128 ManagedAppStatus.init(bundleID:declarationIdentifier:declarationKey:state:updateState:reasons:name:installedVersionInfo:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, uint64_t a12)
{
  char v12 = *a7;
  char v13 = *a8;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 48) = v12;
  *(unsigned char *)(a9 + 49) = v13;
  *(_OWORD *)(a9 + 56) = a10;
  *(void *)(a9 + 72) = a11;
  long long v14 = *(_OWORD *)(a12 + 16);
  *(_OWORD *)(a9 + 80) = *(_OWORD *)a12;
  *(_OWORD *)(a9 + 96) = v14;
  __n128 result = *(__n128 *)(a12 + 32);
  *(__n128 *)(a9 + 112) = result;
  *(unsigned char *)(a9 + 128) = 2;
  return result;
}

__n128 ManagedAppStatus.init(bundleID:declarationIdentifier:declarationKey:state:updateState:reasons:name:installedVersionInfo:purchaseMethod:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, uint64_t a12, char *a13)
{
  char v13 = *a7;
  char v14 = *a8;
  char v15 = *a13;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 48) = v13;
  *(unsigned char *)(a9 + 49) = v14;
  *(_OWORD *)(a9 + 56) = a10;
  *(void *)(a9 + 72) = a11;
  long long v16 = *(_OWORD *)(a12 + 16);
  *(_OWORD *)(a9 + 80) = *(_OWORD *)a12;
  *(_OWORD *)(a9 + 96) = v16;
  __n128 result = *(__n128 *)(a12 + 32);
  *(__n128 *)(a9 + 112) = result;
  *(unsigned char *)(a9 + 128) = v15;
  return result;
}

uint64_t ManagedAppStatus.InstalledVersionInfo.appleVersionID.getter()
{
  return *(void *)v0;
}

uint64_t ManagedAppStatus.InstalledVersionInfo.appleVersionID.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*ManagedAppStatus.InstalledVersionInfo.appleVersionID.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppStatus.InstalledVersionInfo.bundleVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedAppStatus.InstalledVersionInfo.bundleVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ManagedAppStatus.InstalledVersionInfo.bundleVersion.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppStatus.InstalledVersionInfo.bundleShortVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedAppStatus.InstalledVersionInfo.bundleShortVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ManagedAppStatus.InstalledVersionInfo.bundleShortVersion.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppStatus.InstalledVersionInfo.init(appleVersionID:bundleVersion:bundleShortVersion:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)a7 = result;
  *(unsigned char *)(a7 + 8) = a2 & 1;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(void *)(a7 + 32) = a5;
  *(void *)(a7 + 40) = a6;
  return result;
}

uint64_t sub_24459E2B8()
{
  unint64_t v1 = 0x6556656C646E7562;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x726556656C707061;
  }
}

uint64_t sub_24459E330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445A1744(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24459E358(uint64_t a1)
{
  unint64_t v2 = sub_2445A02B4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24459E394(uint64_t a1)
{
  unint64_t v2 = sub_2445A02B4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ManagedAppStatus.State.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_2445EF658();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 10;
  if (v2 < 0xA) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

unint64_t ManagedAppStatus.State.rawValue.getter()
{
  unint64_t result = 0x6C616E6F6974706FLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x646575657571;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0x64616F6C6E776F64;
      break;
    case 6:
      unint64_t result = 0x696C6C6174736E69;
      break;
    case 7:
      unint64_t result = 0x646567616E616DLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    case 9:
      unint64_t result = 0x64656C696166;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24459E574(unsigned __int8 *a1, char *a2)
{
  return sub_2445AEADC(*a1, *a2);
}

uint64_t sub_24459E580()
{
  return sub_2445EF988();
}

uint64_t sub_24459E5C8()
{
  return sub_2445AF420();
}

uint64_t sub_24459E5D0()
{
  return sub_2445EF988();
}

uint64_t sub_24459E614@<X0>(char *a1@<X8>)
{
  return ManagedAppStatus.State.init(rawValue:)(a1);
}

unint64_t sub_24459E620@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ManagedAppStatus.State.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t ManagedAppStatus.Reason.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_2445EF658();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 12;
  if (v2 < 0xC) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

unint64_t ManagedAppStatus.Reason.rawValue.getter()
{
  unint64_t result = 0xD00000000000001CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x7070416E41746F6ELL;
      break;
    case 5:
      unint64_t result = 0x6F70707553746F6ELL;
      break;
    case 6:
      unint64_t result = 0x4E65736E6563696CLL;
      break;
    case 7:
      unint64_t result = 0x64616F6C6E776F64;
      break;
    case 8:
      unint64_t result = 0x466C6C6174736E69;
      break;
    case 9:
      unint64_t result = 0x656A655272657375;
      break;
    case 0xA:
      unint64_t result = 0x7641657461647075;
      break;
    case 0xB:
      unint64_t result = 0x6146657461647075;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24459E868(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2445AEA20(*a1, *a2);
}

uint64_t sub_24459E874()
{
  return sub_2445EF988();
}

uint64_t sub_24459E8DC()
{
  ManagedAppStatus.Reason.rawValue.getter();
  sub_2445EF198();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24459E940()
{
  return sub_2445EF988();
}

uint64_t sub_24459E9A4@<X0>(char *a1@<X8>)
{
  return ManagedAppStatus.Reason.init(rawValue:)(a1);
}

unint64_t sub_24459E9B0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ManagedAppStatus.Reason.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t ManagedAppStatus.UpdateState.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_2445EF658();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 5;
  if (v2 < 5) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

unint64_t ManagedAppStatus.UpdateState.rawValue.getter()
{
  unint64_t result = 0x6C62616C69617661;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0x676E697461647075;
      break;
    case 4:
      unint64_t result = 0x64656C696166;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24459EAF0(char a1)
{
  unint64_t result = 0x4449656C646E7562;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x746172616C636564;
      break;
    case 3:
      unint64_t result = 0x6574617473;
      break;
    case 4:
      unint64_t result = 0x7453657461647075;
      break;
    case 5:
      unint64_t result = 0x736E6F73616572;
      break;
    case 6:
      unint64_t result = 1701667182;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0x6573616863727570;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24459EC30(unsigned __int8 *a1, char *a2)
{
  return sub_2445AEDE8(*a1, *a2);
}

uint64_t sub_24459EC3C()
{
  return sub_24459DAA4();
}

uint64_t sub_24459EC44()
{
  return sub_2445AF59C();
}

uint64_t sub_24459EC4C()
{
  return sub_24459DBAC();
}

uint64_t sub_24459EC54@<X0>(char *a1@<X8>)
{
  return ManagedAppStatus.UpdateState.init(rawValue:)(a1);
}

unint64_t sub_24459EC60@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ManagedAppStatus.UpdateState.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_24459EC88()
{
  return sub_24459EAF0(*v0);
}

uint64_t sub_24459EC90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445A18E0(a1, a2);
  *a3 = result;
  return result;
}

void sub_24459ECB8(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_24459ECC4(uint64_t a1)
{
  unint64_t v2 = sub_24459F0DC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24459ED00(uint64_t a1)
{
  unint64_t v2 = sub_24459F0DC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ManagedAppStatus.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CCE8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v34 = *(void *)(v1 + 24);
  uint64_t v35 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v32 = *(void *)(v1 + 40);
  uint64_t v33 = v8;
  int v43 = *(unsigned __int8 *)(v1 + 48);
  int v31 = *(unsigned __int8 *)(v1 + 49);
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v10 = *(void *)(v1 + 64);
  uint64_t v29 = *(void *)(v1 + 72);
  uint64_t v30 = v9;
  uint64_t v11 = *(void *)(v1 + 88);
  uint64_t v22 = *(void *)(v1 + 80);
  uint64_t v23 = v11;
  uint64_t v12 = *(void *)(v1 + 104);
  uint64_t v24 = *(void *)(v1 + 96);
  uint64_t v25 = v12;
  uint64_t v27 = *(void *)(v1 + 112);
  uint64_t v28 = v10;
  uint64_t v26 = *(void *)(v1 + 120);
  char v13 = *(unsigned char *)(v1 + 128);
  uint64_t v14 = a1[3];
  char v15 = a1;
  uint64_t v17 = v16;
  __swift_project_boxed_opaque_existential_1(v15, v14);
  sub_24459F0DC();
  sub_2445EFA18();
  LOBYTE(v37) = 0;
  uint64_t v18 = v36;
  sub_2445EF798();
  if (!v18)
  {
    char v19 = v43;
    char v20 = v31;
    LOBYTE(v37) = 1;
    sub_2445EF798();
    LOBYTE(v37) = 2;
    sub_2445EF798();
    LOBYTE(v37) = v19;
    char v44 = 3;
    sub_24459F130();
    sub_2445EF7D8();
    LOBYTE(v37) = v20;
    char v44 = 4;
    sub_24459F184();
    sub_2445EF778();
    uint64_t v37 = v30;
    char v44 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CD08);
    sub_24459FBF0(&qword_268E8CD10, (void (*)(void))sub_24459F1D8);
    sub_2445EF7D8();
    LOBYTE(v37) = 6;
    sub_2445EF798();
    uint64_t v37 = v22;
    uint64_t v38 = v23;
    uint64_t v39 = v24;
    uint64_t v40 = v25;
    uint64_t v41 = v27;
    uint64_t v42 = v26;
    char v44 = 7;
    sub_24459F22C();
    sub_2445EF778();
    LOBYTE(v37) = v13;
    char v44 = 8;
    sub_24459F280();
    sub_2445EF778();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v17);
}

unint64_t sub_24459F0DC()
{
  unint64_t result = qword_268E8CCF0;
  if (!qword_268E8CCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CCF0);
  }
  return result;
}

unint64_t sub_24459F130()
{
  unint64_t result = qword_268E8CCF8;
  if (!qword_268E8CCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CCF8);
  }
  return result;
}

unint64_t sub_24459F184()
{
  unint64_t result = qword_268E8CD00;
  if (!qword_268E8CD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CD00);
  }
  return result;
}

unint64_t sub_24459F1D8()
{
  unint64_t result = qword_268E8CD18;
  if (!qword_268E8CD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CD18);
  }
  return result;
}

unint64_t sub_24459F22C()
{
  unint64_t result = qword_268E8CD20;
  if (!qword_268E8CD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CD20);
  }
  return result;
}

unint64_t sub_24459F280()
{
  unint64_t result = qword_268E8CD28;
  if (!qword_268E8CD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CD28);
  }
  return result;
}

void *ManagedAppStatus.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CD30);
  uint64_t v5 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24459F0DC();
  sub_2445EF9E8();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return (void *)sub_24459E050(0, 0, 0, 0);
  }
  else
  {
    uint64_t v57 = v5;
    LOBYTE(v67) = 0;
    uint64_t v8 = sub_2445EF6C8();
    uint64_t v10 = v9;
    uint64_t v54 = v8;
    LOBYTE(v67) = 1;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_2445EF6C8();
    uint64_t v12 = (uint64_t)a1;
    uint64_t v52 = a2;
    uint64_t v53 = v11;
    LOBYTE(v67) = 2;
    uint64_t v14 = v13;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_2445EF6C8();
    uint64_t v56 = v14;
    uint64_t v17 = v16;
    uint64_t v51 = v15;
    LOBYTE(v58) = 3;
    sub_24459FB48();
    swift_bridgeObjectRetain();
    sub_2445EF708();
    int v18 = v67;
    LOBYTE(v58) = 4;
    sub_24459FB9C();
    sub_2445EF6A8();
    int v46 = v18;
    int v19 = v67;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CD08);
    LOBYTE(v58) = 5;
    sub_24459FBF0(&qword_268E8CD48, (void (*)(void))sub_24459FC60);
    sub_2445EF708();
    uint64_t v50 = v10;
    int v43 = v19;
    uint64_t v20 = v67;
    LOBYTE(v67) = 6;
    swift_bridgeObjectRetain();
    uint64_t v44 = 0;
    uint64_t v21 = sub_2445EF6C8();
    uint64_t v45 = v20;
    uint64_t v42 = v21;
    LOBYTE(v58) = 7;
    uint64_t v23 = v22;
    sub_24459FCB4();
    swift_bridgeObjectRetain();
    sub_2445EF6A8();
    uint64_t v55 = v23;
    uint64_t v41 = v17;
    uint64_t v24 = v70;
    uint64_t v26 = v71;
    uint64_t v25 = v72;
    char v87 = 8;
    uint64_t v27 = v67;
    uint64_t v48 = v69;
    uint64_t v49 = v68;
    sub_24459DFB0(v67, v68, v69, v70);
    sub_24459FD08();
    sub_2445EF6A8();
    uint64_t v47 = v27;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v7, v91);
    LODWORD(v91) = v88;
    *(void *)&long long v58 = v54;
    *((void *)&v58 + 1) = v50;
    *(void *)&long long v59 = v53;
    *((void *)&v59 + 1) = v56;
    *(void *)&long long v60 = v51;
    *((void *)&v60 + 1) = v41;
    LOBYTE(v61) = v46;
    BYTE1(v61) = v43;
    *((void *)&v61 + 1) = v45;
    *(void *)&long long v62 = v42;
    *((void *)&v62 + 1) = v55;
    *(void *)&long long v63 = v27;
    uint64_t v28 = v27;
    uint64_t v30 = v48;
    uint64_t v29 = v49;
    *((void *)&v63 + 1) = v49;
    *(void *)&long long v64 = v48;
    *((void *)&v64 + 1) = v24;
    *(void *)&long long v65 = v26;
    *((void *)&v65 + 1) = v25;
    unsigned __int8 v66 = v88;
    sub_24459FD5C(&v58);
    sub_24459E050(v28, v29, v30, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = v41;
    swift_bridgeObjectRelease();
    uint64_t v32 = v45;
    swift_bridgeObjectRelease();
    uint64_t v33 = v55;
    swift_bridgeObjectRelease();
    long long v34 = v65;
    uint64_t v35 = v52;
    *(_OWORD *)(v52 + 96) = v64;
    *(_OWORD *)(v35 + 112) = v34;
    *(unsigned char *)(v35 + 128) = v66;
    long long v36 = v61;
    *(_OWORD *)(v35 + 32) = v60;
    *(_OWORD *)(v35 + 48) = v36;
    long long v37 = v63;
    *(_OWORD *)(v35 + 64) = v62;
    *(_OWORD *)(v35 + 80) = v37;
    long long v38 = v59;
    *(_OWORD *)uint64_t v35 = v58;
    *(_OWORD *)(v35 + 16) = v38;
    __swift_destroy_boxed_opaque_existential_0(v12);
    uint64_t v67 = v54;
    uint64_t v68 = v50;
    uint64_t v69 = v53;
    uint64_t v70 = v56;
    uint64_t v71 = v51;
    uint64_t v72 = v31;
    char v73 = v46;
    char v74 = v43;
    int v75 = v89;
    __int16 v76 = v90;
    uint64_t v77 = v32;
    uint64_t v78 = v42;
    uint64_t v79 = v33;
    uint64_t v80 = v47;
    uint64_t v81 = v49;
    uint64_t v82 = v48;
    uint64_t v83 = v24;
    uint64_t v84 = v26;
    uint64_t v85 = v25;
    char v86 = v91;
    return sub_24459FE0C(&v67);
  }
}

unint64_t sub_24459FB48()
{
  unint64_t result = qword_268E8CD38;
  if (!qword_268E8CD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CD38);
  }
  return result;
}

unint64_t sub_24459FB9C()
{
  unint64_t result = qword_268E8CD40;
  if (!qword_268E8CD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CD40);
  }
  return result;
}

uint64_t sub_24459FBF0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E8CD08);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24459FC60()
{
  unint64_t result = qword_268E8CD50;
  if (!qword_268E8CD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CD50);
  }
  return result;
}

unint64_t sub_24459FCB4()
{
  unint64_t result = qword_268E8CD58;
  if (!qword_268E8CD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CD58);
  }
  return result;
}

unint64_t sub_24459FD08()
{
  unint64_t result = qword_268E8CD60;
  if (!qword_268E8CD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CD60);
  }
  return result;
}

void *sub_24459FD5C(void *a1)
{
  uint64_t v2 = a1[10];
  uint64_t v3 = a1[11];
  uint64_t v4 = a1[12];
  uint64_t v5 = a1[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24459DFB0(v2, v3, v4, v5);
  return a1;
}

void *sub_24459FE0C(void *a1)
{
  uint64_t v2 = a1[10];
  uint64_t v3 = a1[11];
  uint64_t v4 = a1[12];
  uint64_t v5 = a1[13];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24459E050(v2, v3, v4, v5);
  return a1;
}

void *sub_24459FEBC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ManagedAppStatus.init(from:)(a1, a2);
}

uint64_t sub_24459FED4(void *a1)
{
  return ManagedAppStatus.encode(to:)(a1);
}

uint64_t sub_24459FEEC()
{
  return sub_2445EF228();
}

uint64_t sub_24459FF4C()
{
  return sub_2445EF208();
}

uint64_t sub_24459FF9C()
{
  return sub_2445EF228();
}

uint64_t sub_24459FFFC()
{
  return sub_2445EF208();
}

uint64_t sub_2445A004C()
{
  return sub_2445EF228();
}

uint64_t sub_2445A00AC()
{
  return sub_2445EF208();
}

uint64_t ManagedAppStatus.InstalledVersionInfo.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CD68);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  v11[3] = v1[3];
  v11[4] = v7;
  uint64_t v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445A02B4();
  sub_2445EFA18();
  char v14 = 0;
  uint64_t v9 = v11[5];
  sub_2445EF788();
  if (!v9)
  {
    char v13 = 1;
    sub_2445EF798();
    char v12 = 2;
    sub_2445EF798();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2445A02B4()
{
  unint64_t result = qword_268E8CD70;
  if (!qword_268E8CD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CD70);
  }
  return result;
}

uint64_t ManagedAppStatus.InstalledVersionInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CD78);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445A02B4();
  sub_2445EF9E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v25 = 0;
  uint64_t v9 = sub_2445EF6B8();
  char v11 = v10;
  char v24 = 1;
  uint64_t v21 = sub_2445EF6C8();
  uint64_t v22 = v12;
  char v23 = 2;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_2445EF6C8();
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v20 = v13;
  v16(v8, v5);
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = v11 & 1;
  uint64_t v17 = v22;
  *(void *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v17;
  *(void *)(a2 + 32) = v20;
  *(void *)(a2 + 40) = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_2445A0550()
{
  unint64_t result = qword_268E8CD80;
  if (!qword_268E8CD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CD80);
  }
  return result;
}

unint64_t sub_2445A05A8()
{
  unint64_t result = qword_268E8CD88;
  if (!qword_268E8CD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CD88);
  }
  return result;
}

unint64_t sub_2445A0600()
{
  unint64_t result = qword_268E8CD90;
  if (!qword_268E8CD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CD90);
  }
  return result;
}

uint64_t sub_2445A0654@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ManagedAppStatus.InstalledVersionInfo.init(from:)(a1, a2);
}

uint64_t sub_2445A066C(void *a1)
{
  return ManagedAppStatus.InstalledVersionInfo.encode(to:)(a1);
}

uint64_t destroy for ManagedAppStatus(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 104);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ManagedAppStatus(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = (void *)(a1 + 80);
  uint64_t v9 = a2 + 80;
  uint64_t v10 = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10)
  {
    *uint64_t v8 = *(void *)v9;
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(v9 + 8);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v10;
    uint64_t v11 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(a1 + 96) = v12;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(v9 + 32);
  }
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

uint64_t assignWithCopy for ManagedAppStatus(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(a1 + 80);
  uint64_t v5 = (uint64_t *)(a2 + 80);
  uint64_t v6 = *(void *)(a2 + 104);
  if (*(void *)(a1 + 104))
  {
    if (v6)
    {
      uint64_t v7 = *v5;
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *uint64_t v4 = v7;
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2445A09B0(a1 + 80);
      long long v10 = *(_OWORD *)(a2 + 96);
      long long v9 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
      *(_OWORD *)(a1 + 96) = v10;
      *(_OWORD *)(a1 + 112) = v9;
    }
  }
  else if (v6)
  {
    uint64_t v8 = *v5;
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    *uint64_t v4 = v8;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = *(_OWORD *)v5;
    long long v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
    *(_OWORD *)uint64_t v4 = v11;
  }
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

uint64_t sub_2445A09B0(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for ManagedAppStatus(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (_OWORD *)(a1 + 80);
  long long v9 = (_OWORD *)(a2 + 80);
  if (!*(void *)(a1 + 104)) {
    goto LABEL_5;
  }
  uint64_t v10 = *(void *)(a2 + 104);
  if (!v10)
  {
    sub_2445A09B0(a1 + 80);
LABEL_5:
    long long v12 = *(_OWORD *)(a2 + 96);
    *uint64_t v8 = *v9;
    *(_OWORD *)(a1 + 96) = v12;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    goto LABEL_6;
  }
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedAppStatus(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 129)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedAppStatus(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 128) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 129) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 129) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppStatus()
{
  return &type metadata for ManagedAppStatus;
}

uint64_t destroy for ManagedAppStatus.InstalledVersionInfo()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ManagedAppStatus.InstalledVersionInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ManagedAppStatus.InstalledVersionInfo(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ManagedAppStatus.InstalledVersionInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedAppStatus.InstalledVersionInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedAppStatus.InstalledVersionInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppStatus.InstalledVersionInfo()
{
  return &type metadata for ManagedAppStatus.InstalledVersionInfo;
}

uint64_t getEnumTagSinglePayload for ManagedAppStatus.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ManagedAppStatus.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *__n128 result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445A0F3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppStatus.State()
{
  return &type metadata for ManagedAppStatus.State;
}

uint64_t getEnumTagSinglePayload for ManagedAppStatus.Reason(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ManagedAppStatus.Reason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *__n128 result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445A10D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppStatus.Reason()
{
  return &type metadata for ManagedAppStatus.Reason;
}

uint64_t getEnumTagSinglePayload for ManagedAppStatus.UpdateState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ManagedAppStatus.UpdateState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445A1264);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppStatus.UpdateState()
{
  return &type metadata for ManagedAppStatus.UpdateState;
}

unsigned char *storeEnumTagSinglePayload for ManagedAppStatus.InstalledVersionInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445A1368);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppStatus.InstalledVersionInfo.CodingKeys()
{
  return &type metadata for ManagedAppStatus.InstalledVersionInfo.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ManagedAppStatus.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ManagedAppStatus.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445A14FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppStatus.CodingKeys()
{
  return &type metadata for ManagedAppStatus.CodingKeys;
}

unint64_t sub_2445A1538()
{
  unint64_t result = qword_268E8CD98;
  if (!qword_268E8CD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CD98);
  }
  return result;
}

unint64_t sub_2445A1590()
{
  unint64_t result = qword_268E8CDA0;
  if (!qword_268E8CDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CDA0);
  }
  return result;
}

unint64_t sub_2445A15E8()
{
  unint64_t result = qword_268E8CDA8;
  if (!qword_268E8CDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CDA8);
  }
  return result;
}

unint64_t sub_2445A1640()
{
  unint64_t result = qword_268E8CDB0;
  if (!qword_268E8CDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CDB0);
  }
  return result;
}

unint64_t sub_2445A1698()
{
  unint64_t result = qword_268E8CDB8;
  if (!qword_268E8CDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CDB8);
  }
  return result;
}

unint64_t sub_2445A16F0()
{
  unint64_t result = qword_268E8CDC0;
  if (!qword_268E8CDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CDC0);
  }
  return result;
}

uint64_t sub_2445A1744(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726556656C707061 && a2 == 0xEE0044496E6F6973;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6556656C646E7562 && a2 == 0xED00006E6F697372 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002445F8E00)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2445A18E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002445F89D0 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746172616C636564 && a2 == 0xEE0079654B6E6F69 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7453657461647075 && a2 == 0xEB00000000657461 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x736E6F73616572 && a2 == 0xE700000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002445F8DE0 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEE00646F6874654DLL)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

unint64_t sub_2445A1CC8()
{
  unint64_t result = qword_268E8CDC8;
  if (!qword_268E8CDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CDC8);
  }
  return result;
}

unint64_t sub_2445A1D1C()
{
  unint64_t result = qword_268E8CDD0;
  if (!qword_268E8CDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CDD0);
  }
  return result;
}

unint64_t sub_2445A1D70()
{
  unint64_t result = qword_268E8CDD8;
  if (!qword_268E8CDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CDD8);
  }
  return result;
}

uint64_t AppState.Availability.hash(into:)()
{
  return sub_2445EF958();
}

uint64_t sub_2445A1DF4()
{
  return 0;
}

void sub_2445A1E00(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_2445A1E0C(uint64_t a1)
{
  unint64_t v2 = sub_2445A4934();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445A1E48(uint64_t a1)
{
  unint64_t v2 = sub_2445A4934();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445A1E84()
{
  uint64_t v1 = 0x6F6C6E776F646572;
  if (*v0 != 1) {
    uint64_t v1 = 0x657461647075;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C62616C69617661;
  }
}

uint64_t sub_2445A1EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445A6058(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445A1F0C(uint64_t a1)
{
  unint64_t v2 = sub_2445A4838();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445A1F48(uint64_t a1)
{
  unint64_t v2 = sub_2445A4838();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445A1F84(uint64_t a1)
{
  unint64_t v2 = sub_2445A48E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445A1FC0(uint64_t a1)
{
  unint64_t v2 = sub_2445A48E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445A1FFC(uint64_t a1)
{
  unint64_t v2 = sub_2445A488C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445A2038(uint64_t a1)
{
  unint64_t v2 = sub_2445A488C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppState.Availability.hashValue.getter()
{
  return sub_2445EF988();
}

BOOL AppState.isComplete.getter()
{
  return (*v0 & 0xFFFFFFFFFFFFFFF7) == 0x8000000000000000;
}

uint64_t AppState.description.getter()
{
  uint64_t v1 = *v0;
  switch((unint64_t)*v0 >> 61)
  {
    case 1uLL:
      double v4 = *(double *)((v1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      sub_2445EF558();
      swift_bridgeObjectRelease();
      uint64_t v5 = 0x64616F6C6E776F44;
      goto LABEL_7;
    case 2uLL:
      double v4 = *(double *)((v1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      sub_2445EF558();
      swift_bridgeObjectRelease();
      uint64_t v5 = 0x696C6C6174736E49;
LABEL_7:
      unint64_t v11 = v5;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CCE0);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_2445F0B90;
      uint64_t v7 = MEMORY[0x263F8D5B8];
      *(void *)(v6 + 56) = MEMORY[0x263F8D538];
      *(void *)(v6 + 64) = v7;
      *(double *)(v6 + 32) = v4 * 100.0;
      sub_2445EF148();
      sub_2445EF1A8();
      swift_bridgeObjectRelease();
      sub_2445EF1A8();
      goto LABEL_9;
    case 3uLL:
      unint64_t v8 = *(void *)((v1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      sub_24458566C(v8);
      sub_2445EF558();
      uint64_t v9 = swift_bridgeObjectRelease();
      unint64_t v11 = 0xD000000000000010;
      AppState.description.getter(v9);
      sub_2445EF1A8();
      swift_bridgeObjectRelease();
      sub_2445A2390(v8);
LABEL_9:
      uint64_t result = v11;
      break;
    case 4uLL:
      uint64_t v10 = 0x646567616E614DLL;
      if (v1 != 0x8000000000000008) {
        uint64_t v10 = 0x676E6974696157;
      }
      if (v1 == 0x8000000000000000) {
        uint64_t result = 0x656C6C6174736E49;
      }
      else {
        uint64_t result = v10;
      }
      break;
    default:
      int v2 = *(unsigned __int8 *)(v1 + 16);
      if (v2)
      {
        if (v2 == 1) {
          uint64_t result = 0x6F6C6E776F646552;
        }
        else {
          uint64_t result = 0x657461647055;
        }
      }
      else
      {
        uint64_t result = 0x6C62616C69617641;
      }
      break;
  }
  return result;
}

unint64_t sub_2445A2390(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2445A23D8()
{
  return 1;
}

uint64_t sub_2445A23E8()
{
  return 12383;
}

uint64_t sub_2445A23F8(uint64_t a1)
{
  unint64_t v2 = sub_2445A36F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445A2434(uint64_t a1)
{
  unint64_t v2 = sub_2445A36F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445A2470()
{
  uint64_t result = 0x6C62616C69617661;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64616F6C6E776F64;
      break;
    case 2:
      uint64_t result = 0x696C6C6174736E69;
      break;
    case 3:
      uint64_t result = 0x646573756170;
      break;
    case 4:
      uint64_t result = 0x656C6C6174736E69;
      break;
    case 5:
      uint64_t result = 0x646567616E616DLL;
      break;
    case 6:
      uint64_t result = 0x676E6974696177;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2445A2568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445A61C0(a1, a2);
  *a3 = result;
  return result;
}

void sub_2445A2590(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_2445A259C(uint64_t a1)
{
  unint64_t v2 = sub_2445A3458();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445A25D8(uint64_t a1)
{
  unint64_t v2 = sub_2445A3458();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445A2614(uint64_t a1)
{
  unint64_t v2 = sub_2445A36A4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445A2650(uint64_t a1)
{
  unint64_t v2 = sub_2445A36A4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445A268C(uint64_t a1)
{
  unint64_t v2 = sub_2445A3554();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445A26C8(uint64_t a1)
{
  unint64_t v2 = sub_2445A3554();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445A2704(uint64_t a1)
{
  unint64_t v2 = sub_2445A3650();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445A2740(uint64_t a1)
{
  unint64_t v2 = sub_2445A3650();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445A277C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_2445A27AC(uint64_t a1)
{
  unint64_t v2 = sub_2445A3500();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445A27E8(uint64_t a1)
{
  unint64_t v2 = sub_2445A3500();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445A2824()
{
  return sub_2445EF988();
}

uint64_t sub_2445A2868()
{
  return sub_2445EF958();
}

uint64_t sub_2445A2890()
{
  return sub_2445EF988();
}

uint64_t sub_2445A28D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2445EF848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2445A2950(uint64_t a1)
{
  unint64_t v2 = sub_2445A35A8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445A298C(uint64_t a1)
{
  unint64_t v2 = sub_2445A35A8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445A29C8(uint64_t a1)
{
  unint64_t v2 = sub_2445A34AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445A2A04(uint64_t a1)
{
  unint64_t v2 = sub_2445A34AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t static AppState.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch(*a1 >> 61)
  {
    case 1uLL:
      if (v3 >> 61 != 1) {
        goto LABEL_19;
      }
      goto LABEL_13;
    case 2uLL:
      if (v3 >> 61 != 2) {
        goto LABEL_19;
      }
LABEL_13:
      double v9 = *(double *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      double v10 = *(double *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      sub_24458566C(*a2);
      sub_24458566C(v2);
      sub_2445A2390(v2);
      sub_2445A2390(v3);
      char v6 = v9 == v10;
      return v6 & 1;
    case 3uLL:
      if (v3 >> 61 != 3) {
        goto LABEL_19;
      }
      uint64_t v7 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v12 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v13 = v7;
      sub_24458566C(v3);
      sub_24458566C(v2);
      char v6 = static AppState.== infix(_:_:)(&v13, &v12);
      sub_2445A2390(v2);
      sub_2445A2390(v3);
      return v6 & 1;
    case 4uLL:
      if (v2 == 0x8000000000000000)
      {
        if (v3 == 0x8000000000000000)
        {
          sub_2445A2390(0x8000000000000000);
          unint64_t v8 = 0x8000000000000000;
          goto LABEL_18;
        }
      }
      else if (v2 == 0x8000000000000008)
      {
        if (v3 == 0x8000000000000008)
        {
          sub_2445A2390(0x8000000000000008);
          unint64_t v8 = 0x8000000000000008;
LABEL_18:
          sub_2445A2390(v8);
          char v6 = 1;
          return v6 & 1;
        }
      }
      else if (v3 == 0x8000000000000010)
      {
        sub_2445A2390(0x8000000000000010);
        unint64_t v8 = 0x8000000000000010;
        goto LABEL_18;
      }
LABEL_19:
      sub_24458566C(*a2);
      sub_24458566C(v2);
      sub_2445A2390(v2);
      sub_2445A2390(v3);
      char v6 = 0;
      return v6 & 1;
    default:
      if (v3 >> 61) {
        goto LABEL_19;
      }
      int v4 = *(unsigned __int8 *)(v2 + 16);
      int v5 = *(unsigned __int8 *)(v3 + 16);
      sub_24458566C(*a2);
      sub_24458566C(v2);
      sub_2445A2390(v2);
      sub_2445A2390(v3);
      char v6 = v4 == v5;
      return v6 & 1;
  }
}

BOOL static AppState.Availability.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t AppState.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CDE0);
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v50 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CDE8);
  uint64_t v48 = *(void *)(v5 - 8);
  uint64_t v49 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v47 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CDF0);
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v46 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v44 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CDF8);
  uint64_t v59 = *(void *)(v9 - 8);
  uint64_t v60 = v9;
  MEMORY[0x270FA5388](v9);
  long long v58 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CE00);
  uint64_t v56 = *(void *)(v11 - 8);
  uint64_t v57 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CE08);
  uint64_t v54 = *(void *)(v14 - 8);
  uint64_t v55 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CE10);
  uint64_t v53 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CE18);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v62 = v20;
  uint64_t v63 = v21;
  MEMORY[0x270FA5388](v20);
  char v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v24 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445A3458();
  long long v61 = v23;
  sub_2445EFA18();
  switch(v24 >> 61)
  {
    case 1uLL:
      LOBYTE(v64) = 1;
      sub_2445A36A4();
      uint64_t v30 = v61;
      uint64_t v29 = v62;
      sub_2445EF748();
      uint64_t v42 = v55;
      sub_2445EF7B8();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v16, v42);
      goto LABEL_9;
    case 2uLL:
      LOBYTE(v64) = 2;
      sub_2445A3650();
      uint64_t v30 = v61;
      uint64_t v29 = v62;
      sub_2445EF748();
      uint64_t v31 = v57;
      sub_2445EF7B8();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v13, v31);
LABEL_9:
      unint64_t result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v30, v29);
      break;
    case 3uLL:
      unint64_t v32 = *(void *)((v24 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v64) = 3;
      sub_24458566C(v32);
      sub_2445A35A8();
      uint64_t v33 = v58;
      uint64_t v35 = v61;
      uint64_t v34 = v62;
      sub_2445EF748();
      unint64_t v64 = v32;
      sub_2445A35FC();
      uint64_t v36 = v60;
      sub_2445EF7D8();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v33, v36);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v35, v34);
      unint64_t result = sub_2445A2390(v32);
      break;
    case 4uLL:
      if (v24 == 0x8000000000000000)
      {
        LOBYTE(v64) = 4;
        sub_2445A3554();
        long long v37 = v44;
        uint64_t v39 = v61;
        uint64_t v38 = v62;
        sub_2445EF748();
        uint64_t v41 = v45;
        uint64_t v40 = v46;
      }
      else if (v24 == 0x8000000000000008)
      {
        LOBYTE(v64) = 5;
        sub_2445A3500();
        long long v37 = v47;
        uint64_t v39 = v61;
        uint64_t v38 = v62;
        sub_2445EF748();
        uint64_t v41 = v48;
        uint64_t v40 = v49;
      }
      else
      {
        LOBYTE(v64) = 6;
        sub_2445A34AC();
        long long v37 = v50;
        uint64_t v39 = v61;
        uint64_t v38 = v62;
        sub_2445EF748();
        uint64_t v41 = v51;
        uint64_t v40 = v52;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v37, v40);
      unint64_t result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v39, v38);
      break;
    default:
      char v25 = *(unsigned char *)(v24 + 16);
      LOBYTE(v64) = 0;
      sub_2445A36F8();
      uint64_t v27 = v61;
      uint64_t v26 = v62;
      sub_2445EF748();
      LOBYTE(v64) = v25;
      sub_2445A374C();
      sub_2445EF7D8();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v19, v17);
      unint64_t result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v27, v26);
      break;
  }
  return result;
}

unint64_t sub_2445A3458()
{
  unint64_t result = qword_268E8CE20;
  if (!qword_268E8CE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CE20);
  }
  return result;
}

unint64_t sub_2445A34AC()
{
  unint64_t result = qword_268E8CE28;
  if (!qword_268E8CE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CE28);
  }
  return result;
}

unint64_t sub_2445A3500()
{
  unint64_t result = qword_268E8CE30;
  if (!qword_268E8CE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CE30);
  }
  return result;
}

unint64_t sub_2445A3554()
{
  unint64_t result = qword_268E8CE38;
  if (!qword_268E8CE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CE38);
  }
  return result;
}

unint64_t sub_2445A35A8()
{
  unint64_t result = qword_268E8CE40;
  if (!qword_268E8CE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CE40);
  }
  return result;
}

unint64_t sub_2445A35FC()
{
  unint64_t result = qword_268E8CE48;
  if (!qword_268E8CE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CE48);
  }
  return result;
}

unint64_t sub_2445A3650()
{
  unint64_t result = qword_268E8CE50;
  if (!qword_268E8CE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CE50);
  }
  return result;
}

unint64_t sub_2445A36A4()
{
  unint64_t result = qword_268E8CE58;
  if (!qword_268E8CE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CE58);
  }
  return result;
}

unint64_t sub_2445A36F8()
{
  unint64_t result = qword_268E8CE60;
  if (!qword_268E8CE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CE60);
  }
  return result;
}

unint64_t sub_2445A374C()
{
  unint64_t result = qword_268E8CE68;
  if (!qword_268E8CE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CE68);
  }
  return result;
}

uint64_t AppState.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CE70);
  uint64_t v68 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v82 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CE78);
  uint64_t v75 = *(void *)(v4 - 8);
  uint64_t v76 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v77 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CE80);
  uint64_t v70 = *(void *)(v6 - 8);
  uint64_t v71 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v81 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CE88);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v72 = v8;
  uint64_t v73 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v80 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CE90);
  uint64_t v67 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v79 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CE98);
  uint64_t v64 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CEA0);
  uint64_t v65 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CEA8);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1[3];
  uint64_t v83 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_2445A3458();
  uint64_t v22 = v84;
  sub_2445EF9E8();
  if (v22) {
    goto LABEL_19;
  }
  uint64_t v62 = v16;
  uint64_t v61 = v14;
  char v23 = v79;
  uint64_t v63 = 0;
  char v25 = v80;
  unint64_t v24 = v81;
  uint64_t v26 = v82;
  uint64_t v84 = v18;
  uint64_t v27 = sub_2445EF728();
  if (*(void *)(v27 + 16) != 1)
  {
    uint64_t v33 = sub_2445EF5A8();
    swift_allocError();
    uint64_t v35 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CEB0);
    *uint64_t v35 = &type metadata for AppState;
    sub_2445EF678();
    sub_2445EF598();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v33 - 8) + 104))(v35, *MEMORY[0x263F8DCB0], v33);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v20, v17);
LABEL_19:
    uint64_t v55 = (uint64_t)v83;
    return __swift_destroy_boxed_opaque_existential_0(v55);
  }
  switch(*(unsigned char *)(v27 + 32))
  {
    case 1:
      char v86 = 1;
      sub_2445A36A4();
      uint64_t v36 = v13;
      uint64_t v37 = v63;
      sub_2445EF668();
      if (v37) {
        goto LABEL_18;
      }
      uint64_t v38 = swift_allocObject();
      uint64_t v39 = v66;
      sub_2445EF6E8();
      uint64_t v60 = v59;
      (*(void (**)(char *, uint64_t))(v64 + 8))(v36, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v20, v17);
      *(void *)(v38 + 16) = v60;
      uint64_t v31 = v38 | 0x2000000000000000;
      goto LABEL_22;
    case 2:
      char v87 = 2;
      sub_2445A3650();
      uint64_t v40 = v23;
      uint64_t v41 = v63;
      sub_2445EF668();
      if (v41) {
        goto LABEL_18;
      }
      uint64_t v42 = swift_allocObject();
      uint64_t v43 = v69;
      sub_2445EF6E8();
      uint64_t v44 = (void (**)(char *, uint64_t))(v84 + 8);
      uint64_t v58 = v57;
      (*(void (**)(char *, uint64_t))(v67 + 8))(v40, v43);
      swift_bridgeObjectRelease();
      (*v44)(v20, v17);
      *(void *)(v42 + 16) = v58;
      uint64_t v31 = v42 | 0x4000000000000000;
      goto LABEL_22;
    case 3:
      char v88 = 3;
      sub_2445A35A8();
      uint64_t v45 = v63;
      sub_2445EF668();
      if (v45) {
        goto LABEL_18;
      }
      uint64_t v46 = swift_allocObject();
      sub_2445A43D8();
      uint64_t v47 = v72;
      sub_2445EF708();
      uint64_t v48 = v25;
      uint64_t v49 = v84;
      (*(void (**)(char *, uint64_t))(v73 + 8))(v48, v47);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v20, v17);
      uint64_t v31 = v46 | 0x6000000000000000;
      goto LABEL_22;
    case 4:
      char v89 = 4;
      sub_2445A3554();
      uint64_t v50 = v63;
      sub_2445EF668();
      if (v50) {
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v71);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v20, v17);
      uint64_t v31 = 0x8000000000000000;
      goto LABEL_22;
    case 5:
      char v90 = 5;
      sub_2445A3500();
      uint64_t v51 = v77;
      uint64_t v52 = v63;
      sub_2445EF668();
      if (v52) {
        goto LABEL_18;
      }
      uint64_t v53 = v17;
      uint64_t v31 = 0x8000000000000008;
      (*(void (**)(char *, uint64_t))(v75 + 8))(v51, v76);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v20, v53);
      goto LABEL_22;
    case 6:
      char v91 = 6;
      sub_2445A34AC();
      uint64_t v54 = v63;
      sub_2445EF668();
      if (v54) {
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v68 + 8))(v26, v74);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v20, v17);
      uint64_t v31 = 0x8000000000000010;
      goto LABEL_22;
    default:
      char v85 = 0;
      sub_2445A36F8();
      uint64_t v28 = v62;
      uint64_t v29 = v63;
      sub_2445EF668();
      if (v29)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v20, v17);
        goto LABEL_19;
      }
      uint64_t v30 = v17;
      uint64_t v31 = swift_allocObject();
      sub_2445A444C();
      uint64_t v32 = v61;
      sub_2445EF708();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v28, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v20, v30);
LABEL_22:
      uint64_t v55 = (uint64_t)v83;
      uint64_t *v78 = v31;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_0(v55);
}

uint64_t sub_2445A43A0()
{
  sub_2445A2390(*(void *)(v0 + 16));

  return swift_deallocObject();
}

unint64_t sub_2445A43D8()
{
  unint64_t result = qword_268E8CEB8;
  if (!qword_268E8CEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CEB8);
  }
  return result;
}

uint64_t sub_2445A442C()
{
  return swift_deallocObject();
}

uint64_t sub_2445A443C()
{
  return swift_deallocObject();
}

unint64_t sub_2445A444C()
{
  unint64_t result = qword_268E8CEC0;
  if (!qword_268E8CEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CEC0);
  }
  return result;
}

uint64_t sub_2445A44A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AppState.init(from:)(a1, a2);
}

unint64_t sub_2445A44B8(void *a1)
{
  return AppState.encode(to:)(a1);
}

uint64_t AppState.Availability.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CEC8);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  char v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CED0);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CED8);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CEE0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445A4838();
  sub_2445EFA18();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_2445A48E0();
      sub_2445EF748();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_2445A488C();
      uint64_t v17 = v23;
      sub_2445EF748();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_2445A4934();
    sub_2445EF748();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_2445A4838()
{
  unint64_t result = qword_268E8CEE8;
  if (!qword_268E8CEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CEE8);
  }
  return result;
}

unint64_t sub_2445A488C()
{
  unint64_t result = qword_268E8CEF0;
  if (!qword_268E8CEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CEF0);
  }
  return result;
}

unint64_t sub_2445A48E0()
{
  unint64_t result = qword_268E8CEF8;
  if (!qword_268E8CEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CEF8);
  }
  return result;
}

unint64_t sub_2445A4934()
{
  unint64_t result = qword_268E8CF00;
  if (!qword_268E8CF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CF00);
  }
  return result;
}

uint64_t AppState.Availability.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CF08);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CF10);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CF18);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CF20);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445A4838();
  uint64_t v12 = (uint64_t)v39;
  sub_2445EF9E8();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_2445EF728();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_2445EF5A8();
    swift_allocError();
    char v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CEB0);
    *char v23 = &type metadata for AppState.Availability;
    sub_2445EF678();
    sub_2445EF598();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_2445A48E0();
      uint64_t v18 = v30;
      sub_2445EF668();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_2445A488C();
      uint64_t v25 = v30;
      sub_2445EF668();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_2445A4934();
    uint64_t v24 = v30;
    sub_2445EF668();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
}

unint64_t sub_2445A4F44()
{
  unint64_t result = qword_268E8CF28;
  if (!qword_268E8CF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CF28);
  }
  return result;
}

uint64_t sub_2445A4F98@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return AppState.Availability.init(from:)(a1, a2);
}

uint64_t sub_2445A4FB0(void *a1)
{
  return AppState.Availability.encode(to:)(a1);
}

unint64_t *initializeBufferWithCopyOfBuffer for AppState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_24458566C(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for AppState(unint64_t *a1)
{
  return sub_2445A2390(*a1);
}

unint64_t *assignWithCopy for AppState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_24458566C(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_2445A2390(v4);
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for AppState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_2445A2390(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7C && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 124);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 4) | (8 * ((*(void *)a1 >> 57) & 8 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7B) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AppState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7B)
  {
    *(void *)unint64_t result = a2 - 124;
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_2445A512C(void *a1)
{
  uint64_t v1 = *a1 >> 61;
  if (v1 <= 3) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 4;
  }
}

void *sub_2445A5148(void *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_2445A5158(unint64_t *result, uint64_t a2)
{
  if (a2 < 4)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 61;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 4);
    unint64_t v3 = 0x8000000000000000;
  }
  *unint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for AppState()
{
  return &type metadata for AppState;
}

ValueMetadata *type metadata accessor for AppState.Availability()
{
  return &type metadata for AppState.Availability;
}

unsigned char *_s22ManagedAppDistribution8AppStateO12AvailabilityOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445A5278);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppState.Availability.CodingKeys()
{
  return &type metadata for AppState.Availability.CodingKeys;
}

ValueMetadata *type metadata accessor for AppState.Availability.AvailableCodingKeys()
{
  return &type metadata for AppState.Availability.AvailableCodingKeys;
}

ValueMetadata *type metadata accessor for AppState.Availability.RedownloadCodingKeys()
{
  return &type metadata for AppState.Availability.RedownloadCodingKeys;
}

ValueMetadata *type metadata accessor for AppState.Availability.UpdateCodingKeys()
{
  return &type metadata for AppState.Availability.UpdateCodingKeys;
}

uint64_t getEnumTagSinglePayload for AppState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AppState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445A543CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppState.CodingKeys()
{
  return &type metadata for AppState.CodingKeys;
}

uint64_t sub_2445A547C()
{
  return 0;
}

ValueMetadata *type metadata accessor for AppState.AvailableCodingKeys()
{
  return &type metadata for AppState.AvailableCodingKeys;
}

ValueMetadata *type metadata accessor for AppState.DownloadingCodingKeys()
{
  return &type metadata for AppState.DownloadingCodingKeys;
}

ValueMetadata *type metadata accessor for AppState.InstallingCodingKeys()
{
  return &type metadata for AppState.InstallingCodingKeys;
}

uint64_t getEnumTagSinglePayload for ManagedAppCancelRequest.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s22ManagedAppDistribution8AppStateO19AvailableCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2445A55A0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppState.PausedCodingKeys()
{
  return &type metadata for AppState.PausedCodingKeys;
}

ValueMetadata *type metadata accessor for AppState.InstalledCodingKeys()
{
  return &type metadata for AppState.InstalledCodingKeys;
}

ValueMetadata *type metadata accessor for AppState.ManagedCodingKeys()
{
  return &type metadata for AppState.ManagedCodingKeys;
}

ValueMetadata *type metadata accessor for AppState.WaitingCodingKeys()
{
  return &type metadata for AppState.WaitingCodingKeys;
}

unint64_t sub_2445A560C()
{
  unint64_t result = qword_268E8CF30;
  if (!qword_268E8CF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CF30);
  }
  return result;
}

unint64_t sub_2445A5664()
{
  unint64_t result = qword_268E8CF38;
  if (!qword_268E8CF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CF38);
  }
  return result;
}

unint64_t sub_2445A56BC()
{
  unint64_t result = qword_268E8CF40;
  if (!qword_268E8CF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CF40);
  }
  return result;
}

unint64_t sub_2445A5714()
{
  unint64_t result = qword_268E8CF48;
  if (!qword_268E8CF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CF48);
  }
  return result;
}

unint64_t sub_2445A576C()
{
  unint64_t result = qword_268E8CF50;
  if (!qword_268E8CF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CF50);
  }
  return result;
}

unint64_t sub_2445A57C4()
{
  unint64_t result = qword_268E8CF58;
  if (!qword_268E8CF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CF58);
  }
  return result;
}

unint64_t sub_2445A581C()
{
  unint64_t result = qword_268E8CF60;
  if (!qword_268E8CF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CF60);
  }
  return result;
}

unint64_t sub_2445A5874()
{
  unint64_t result = qword_268E8CF68;
  if (!qword_268E8CF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CF68);
  }
  return result;
}

unint64_t sub_2445A58CC()
{
  unint64_t result = qword_268E8CF70;
  if (!qword_268E8CF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CF70);
  }
  return result;
}

unint64_t sub_2445A5924()
{
  unint64_t result = qword_268E8CF78;
  if (!qword_268E8CF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CF78);
  }
  return result;
}

unint64_t sub_2445A597C()
{
  unint64_t result = qword_268E8CF80;
  if (!qword_268E8CF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CF80);
  }
  return result;
}

unint64_t sub_2445A59D4()
{
  unint64_t result = qword_268E8CF88;
  if (!qword_268E8CF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CF88);
  }
  return result;
}

unint64_t sub_2445A5A2C()
{
  unint64_t result = qword_268E8CF90;
  if (!qword_268E8CF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CF90);
  }
  return result;
}

unint64_t sub_2445A5A84()
{
  unint64_t result = qword_268E8CF98;
  if (!qword_268E8CF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CF98);
  }
  return result;
}

unint64_t sub_2445A5ADC()
{
  unint64_t result = qword_268E8CFA0;
  if (!qword_268E8CFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CFA0);
  }
  return result;
}

unint64_t sub_2445A5B34()
{
  unint64_t result = qword_268E8CFA8;
  if (!qword_268E8CFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CFA8);
  }
  return result;
}

unint64_t sub_2445A5B8C()
{
  unint64_t result = qword_268E8CFB0;
  if (!qword_268E8CFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CFB0);
  }
  return result;
}

unint64_t sub_2445A5BE4()
{
  unint64_t result = qword_268E8CFB8;
  if (!qword_268E8CFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CFB8);
  }
  return result;
}

unint64_t sub_2445A5C3C()
{
  unint64_t result = qword_268E8CFC0;
  if (!qword_268E8CFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CFC0);
  }
  return result;
}

unint64_t sub_2445A5C94()
{
  unint64_t result = qword_268E8CFC8;
  if (!qword_268E8CFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CFC8);
  }
  return result;
}

unint64_t sub_2445A5CEC()
{
  unint64_t result = qword_268E8CFD0;
  if (!qword_268E8CFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CFD0);
  }
  return result;
}

unint64_t sub_2445A5D44()
{
  unint64_t result = qword_268E8CFD8;
  if (!qword_268E8CFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CFD8);
  }
  return result;
}

unint64_t sub_2445A5D9C()
{
  unint64_t result = qword_268E8CFE0;
  if (!qword_268E8CFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CFE0);
  }
  return result;
}

unint64_t sub_2445A5DF4()
{
  unint64_t result = qword_268E8CFE8;
  if (!qword_268E8CFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CFE8);
  }
  return result;
}

unint64_t sub_2445A5E4C()
{
  unint64_t result = qword_268E8CFF0;
  if (!qword_268E8CFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CFF0);
  }
  return result;
}

unint64_t sub_2445A5EA4()
{
  unint64_t result = qword_268E8CFF8;
  if (!qword_268E8CFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8CFF8);
  }
  return result;
}

unint64_t sub_2445A5EFC()
{
  unint64_t result = qword_268E8D000;
  if (!qword_268E8D000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D000);
  }
  return result;
}

unint64_t sub_2445A5F54()
{
  unint64_t result = qword_268E8D008;
  if (!qword_268E8D008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D008);
  }
  return result;
}

unint64_t sub_2445A5FAC()
{
  unint64_t result = qword_268E8D010;
  if (!qword_268E8D010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D010);
  }
  return result;
}

unint64_t sub_2445A6004()
{
  unint64_t result = qword_268E8D018;
  if (!qword_268E8D018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D018);
  }
  return result;
}

uint64_t sub_2445A6058(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C62616C69617661 && a2 == 0xE900000000000065;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6C6E776F646572 && a2 == 0xEA00000000006461 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657461647075 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2445A61C0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6C62616C69617661 && a2 == 0xE900000000000065 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xEB00000000676E69 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696C6C6174736E69 && a2 == 0xEA0000000000676ELL || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646573756170 && a2 == 0xE600000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C6C6174736E69 && a2 == 0xE900000000000064 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x646567616E616DLL && a2 == 0xE700000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x676E6974696177 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

unint64_t ServiceMachName.getter()
{
  return 0xD000000000000025;
}

uint64_t ManagedAppCancelRequest.declarationIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedAppCancelRequest.init(declarationIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t ManagedAppCancelRequest.request()()
{
  *(_OWORD *)(v1 + 40) = *v0;
  return MEMORY[0x270FA2498](sub_2445A6560, 0, 0);
}

uint64_t sub_2445A6560()
{
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  swift_bridgeObjectRetain();
  sub_24459A750();
  sub_24459A7A4();
  v0[2] = v2;
  v0[4] = v0 + 2;
  v0[3] = v1;
  char v5 = (char *)&dword_268E8CC40 + dword_268E8CC40;
  swift_bridgeObjectRetain();
  int v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *int v3 = v0;
  v3[1] = sub_2445A6694;
  return ((uint64_t (*)(void *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v5)(v0 + 4, sub_2445A6884, 0);
}

uint64_t sub_2445A6694()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2445A6814;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_2445A67B0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2445A67B0()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2445A6814()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_2445A6884(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = (void *)sub_2445EEF38();
  void v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_2445D5428;
  v10[3] = &block_descriptor_1;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_cancelManagedApp_reply_, v8, v9);
  _Block_release(v9);
}

unint64_t sub_2445A6960()
{
  return 0xD000000000000015;
}

uint64_t sub_2445A697C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445A7104(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2445A69A8(uint64_t a1)
{
  unint64_t v2 = sub_2445A6E18();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445A69E4(uint64_t a1)
{
  unint64_t v2 = sub_2445A6E18();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ManagedAppCancelRequest.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D028);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445A6E18();
  sub_2445EFA18();
  sub_2445EF758();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t ManagedAppCancelRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D038);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445A6E18();
  sub_2445EF9E8();
  if (!v2)
  {
    uint64_t v9 = sub_2445EF688();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2445A6CC8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ManagedAppCancelRequest.init(from:)(a1, a2);
}

uint64_t sub_2445A6CE0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D028);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445A6E18();
  sub_2445EFA18();
  sub_2445EF758();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_2445A6E18()
{
  unint64_t result = qword_268E8D030;
  if (!qword_268E8D030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D030);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ManagedAppCancelRequest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedAppCancelRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppCancelRequest()
{
  return &type metadata for ManagedAppCancelRequest;
}

unsigned char *storeEnumTagSinglePayload for ManagedAppCancelRequest.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2445A6FC4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppCancelRequest.CodingKeys()
{
  return &type metadata for ManagedAppCancelRequest.CodingKeys;
}

unint64_t sub_2445A7000()
{
  unint64_t result = qword_268E8D040;
  if (!qword_268E8D040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D040);
  }
  return result;
}

unint64_t sub_2445A7058()
{
  unint64_t result = qword_268E8D048;
  if (!qword_268E8D048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D048);
  }
  return result;
}

unint64_t sub_2445A70B0()
{
  unint64_t result = qword_268E8D050;
  if (!qword_268E8D050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D050);
  }
  return result;
}

uint64_t sub_2445A7104(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000002445F89D0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_2445EF848();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t AppLaunchRequest.bundleID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppLaunchRequest.init(bundleID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t AppLaunchRequest.launch()()
{
  uint64_t v2 = v0[1];
  *(void *)(v1 + 40) = *v0;
  *(void *)(v1 + 48) = v2;
  return MEMORY[0x270FA2498](sub_2445A71E8, 0, 0);
}

uint64_t sub_2445A71E8()
{
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[5];
  uint64_t v2 = swift_bridgeObjectRetain();
  v0[2] = v1;
  v0[4] = v0 + 2;
  v0[3] = v2;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))&aHP[*(int *)aHP];
  swift_bridgeObjectRetain();
  char v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *char v3 = v0;
  v3[1] = sub_2445A7308;
  return v5((uint64_t)(v0 + 4), (uint64_t)sub_2445A7494, 0);
}

uint64_t sub_2445A7308()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2445A7424;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_2445A67B0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2445A7424()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_2445A7494(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = (void *)sub_2445EEF38();
  void v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_2445D5428;
  v10[3] = &block_descriptor_2;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_handleLaunchAppRequest_reply_, v8, v9);
  _Block_release(v9);
}

ValueMetadata *type metadata accessor for AppLaunchRequest()
{
  return &type metadata for AppLaunchRequest;
}

id BundleID.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  uint64_t v6 = &v5[OBJC_IVAR____TtC22ManagedAppDistribution8BundleID_rawValue];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id BundleID.init(_:)(uint64_t a1, uint64_t a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = &v2[OBJC_IVAR____TtC22ManagedAppDistribution8BundleID_rawValue];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v2;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t BundleID.description.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC22ManagedAppDistribution8BundleID_rawValue);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BundleID.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_2445A77B0(a1, (uint64_t)v7);
  if (!v8)
  {
    sub_244584138((uint64_t)v7);
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    char v4 = 0;
    return v4 & 1;
  }
  if (*(void *)(v1 + OBJC_IVAR____TtC22ManagedAppDistribution8BundleID_rawValue) == *(void *)&v6[OBJC_IVAR____TtC22ManagedAppDistribution8BundleID_rawValue]
    && *(void *)(v1 + OBJC_IVAR____TtC22ManagedAppDistribution8BundleID_rawValue + 8) == *(void *)&v6[OBJC_IVAR____TtC22ManagedAppDistribution8BundleID_rawValue + 8])
  {

    char v4 = 1;
  }
  else
  {
    char v4 = sub_2445EF848();
  }
  return v4 & 1;
}

uint64_t sub_2445A77B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static BundleID.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + OBJC_IVAR____TtC22ManagedAppDistribution8BundleID_rawValue) == *(void *)(a2
                                                                                                 + OBJC_IVAR____TtC22ManagedAppDistribution8BundleID_rawValue)
    && *(void *)(a1 + OBJC_IVAR____TtC22ManagedAppDistribution8BundleID_rawValue + 8) == *(void *)(a2 + OBJC_IVAR____TtC22ManagedAppDistribution8BundleID_rawValue + 8))
  {
    return 1;
  }
  else
  {
    return sub_2445EF848();
  }
}

uint64_t BundleID.hash.getter()
{
  return sub_2445EF1C8();
}

id BundleID.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void BundleID.init()()
{
}

id BundleID.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *BundleID.__allocating_init(from:)(void *a1)
{
  return sub_2445A7BAC(a1);
}

uint64_t BundleID.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445EFA08();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_2445EF888();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

void *sub_2445A7AD4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_2445A7BAC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_2445A7B00(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445EFA08();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_2445EF888();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

void *sub_2445A7BAC(void *a1)
{
  uint64_t v3 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445EF9C8();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    uint64_t v5 = sub_2445EF858();
    uint64_t v7 = v6;
    uint64_t v8 = (objc_class *)type metadata accessor for BundleID();
    uint64_t v9 = (char *)objc_allocWithZone(v8);
    uint64_t v10 = (uint64_t *)&v9[OBJC_IVAR____TtC22ManagedAppDistribution8BundleID_rawValue];
    *uint64_t v10 = v5;
    v10[1] = v7;
    v11.receiver = v9;
    v11.super_class = v8;
    uint64_t v3 = objc_msgSendSuper2(&v11, sel_init);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t type metadata accessor for BundleID()
{
  return self;
}

uint64_t method lookup function for BundleID(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BundleID);
}

uint64_t dispatch thunk of BundleID.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

const char *LogKey.Prefix.fallbackActivityName.getter()
{
  unint64_t result = "App Review";
  switch(*v0)
  {
    case 1:
      unint64_t result = "VPP";
      break;
    case 2:
      unint64_t result = "Manifest";
      break;
    case 3:
      unint64_t result = "DDM";
      break;
    case 4:
      unint64_t result = "Automatic Update";
      break;
    case 5:
      unint64_t result = "UPD";
      break;
    case 6:
      unint64_t result = "Apple Distribution Package";
      break;
    case 7:
      unint64_t result = "License";
      break;
    case 8:
      unint64_t result = "PDS";
      break;
    case 9:
      unint64_t result = "Bootstrap";
      break;
    case 0xA:
      unint64_t result = "RSP";
      break;
    case 0xB:
      unint64_t result = "RSD";
      break;
    case 0xC:
      unint64_t result = "???";
      break;
    case 0xD:
      return result;
    case 0xE:
      unint64_t result = "madctl";
      break;
    case 0xF:
      unint64_t result = "Internal";
      break;
    case 0x10:
      unint64_t result = "Migrator";
      break;
    case 0x11:
      unint64_t result = "None";
      break;
    default:
      unint64_t result = "General";
      break;
  }
  return result;
}

uint64_t LogKey.Prefix.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_2445EF8B8();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 18;
  if (v2 < 0x12) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t LogKey.Prefix.rawValue.getter()
{
  uint64_t result = 5129543;
  switch(*v0)
  {
    case 1:
      uint64_t result = 5263446;
      break;
    case 2:
      uint64_t result = 5128525;
      break;
    case 3:
      uint64_t result = 5063748;
      break;
    case 4:
      uint64_t result = 4280405;
      break;
    case 5:
      uint64_t result = 4477013;
      break;
    case 6:
      uint64_t result = 5260353;
      break;
    case 7:
      uint64_t result = 4409676;
      break;
    case 8:
      uint64_t result = 5456976;
      break;
    case 9:
      uint64_t result = 5461058;
      break;
    case 0xA:
      uint64_t result = 5264210;
      break;
    case 0xB:
      uint64_t result = 4477778;
      break;
    case 0xC:
      uint64_t result = 4144959;
      break;
    case 0xD:
      uint64_t result = 5394497;
      break;
    case 0xE:
      uint64_t result = 0x4C544344414DLL;
      break;
    case 0xF:
      uint64_t result = 5525065;
      break;
    case 0x10:
      uint64_t result = 4671821;
      break;
    case 0x11:
      uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2445A8044(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2445AEA08(*a1, *a2);
}

uint64_t sub_2445A8050()
{
  return sub_2445EF988();
}

uint64_t sub_2445A80B8()
{
  LogKey.Prefix.rawValue.getter();
  sub_2445EF198();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2445A811C()
{
  return sub_2445EF988();
}

uint64_t sub_2445A8180@<X0>(char *a1@<X8>)
{
  return LogKey.Prefix.init(rawValue:)(a1);
}

uint64_t sub_2445A818C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LogKey.Prefix.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t LogKey.Representation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445EF9C8();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    uint64_t v5 = sub_2445EF858();
    uint64_t v7 = v6;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    *(void *)a2 = v5;
    *(void *)(a2 + 8) = v7;
    *(unsigned char *)(a2 + 16) = 1;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t LogKey.Representation.encode(to:)(void *a1)
{
  uint64_t v2 = *v1;
  int v3 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445EFA08();
  if (v3 == 1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    LogKey.Prefix.rawValue.getter();
    int v7 = HIDWORD(v2);
    sub_2445A8434();
    sub_2445EF1D8();
    sub_2445EF1A8();
    swift_bridgeObjectRelease();
  }
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v6);
  sub_2445EF888();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
}

uint64_t LogKey.Representation.description.getter()
{
  uint64_t v1 = *v0;
  if (*((unsigned char *)v0 + 16) == 1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v3 = LogKey.Prefix.rawValue.getter();
    sub_2445A8434();
    sub_2445EF1D8();
    sub_2445EF1A8();
    swift_bridgeObjectRelease();
    return v3;
  }
  return v1;
}

unint64_t sub_2445A8434()
{
  unint64_t result = qword_26B0CE520;
  if (!qword_26B0CE520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE520);
  }
  return result;
}

uint64_t sub_2445A848C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445EF9C8();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    uint64_t v5 = sub_2445EF858();
    uint64_t v7 = v6;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    *(void *)a2 = v5;
    *(void *)(a2 + 8) = v7;
    *(unsigned char *)(a2 + 16) = 1;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2445A8558(void *a1)
{
  return LogKey.Representation.encode(to:)(a1);
}

uint64_t LogKey.representation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC22ManagedAppDistribution6LogKey_representation);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC22ManagedAppDistribution6LogKey_representation + 8);
  char v4 = *(unsigned char *)(v1 + OBJC_IVAR____TtC22ManagedAppDistribution6LogKey_representation + 16);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return sub_24458565C(v2, v3, v4);
}

uint64_t LogKey.stringValue.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC22ManagedAppDistribution6LogKey_representation);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC22ManagedAppDistribution6LogKey_representation + 16) == 1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v3 = LogKey.Prefix.rawValue.getter();
    sub_2445A8434();
    sub_2445EF1D8();
    sub_2445EF1A8();
    swift_bridgeObjectRelease();
    return v3;
  }
  return v1;
}

id LogKey.__allocating_init(prefix:)(unsigned __int8 *a1)
{
  id v3 = objc_allocWithZone(v1);
  uint64_t v4 = *a1;
  uint64_t v9 = 0;
  uint64_t v5 = (char *)v3;
  MEMORY[0x245694360](&v9, 8);
  uint64_t v6 = &v5[OBJC_IVAR____TtC22ManagedAppDistribution6LogKey_representation];
  *(void *)uint64_t v6 = v4 | (v9 << 32);
  *((void *)v6 + 1) = 0;
  v6[16] = 0;

  v8.receiver = v5;
  v8.super_class = v1;
  return objc_msgSendSuper2(&v8, sel_init);
}

id LogKey.init(prefix:)(unsigned __int8 *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = *a1;
  uint64_t v9 = 0;
  uint64_t v5 = v1;
  MEMORY[0x245694360](&v9, 8);
  uint64_t v6 = &v5[OBJC_IVAR____TtC22ManagedAppDistribution6LogKey_representation];
  *(void *)uint64_t v6 = v4 | (v9 << 32);
  *((void *)v6 + 1) = 0;
  v6[16] = 0;

  v8.receiver = v5;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

id LogKey.__allocating_init(string:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  uint64_t v6 = &v5[OBJC_IVAR____TtC22ManagedAppDistribution6LogKey_representation];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v6[16] = 1;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id LogKey.init(string:)(uint64_t a1, uint64_t a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = &v2[OBJC_IVAR____TtC22ManagedAppDistribution6LogKey_representation];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v6[16] = 1;
  v8.receiver = v2;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

id LogKey.__allocating_init(strings:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v10 = a1;
  id v3 = (char *)objc_allocWithZone(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE1C8);
  sub_24459D750();
  uint64_t v4 = sub_2445EF0D8();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = &v3[OBJC_IVAR____TtC22ManagedAppDistribution6LogKey_representation];
  *(void *)uint64_t v7 = v4;
  *((void *)v7 + 1) = v6;
  v7[16] = 1;

  v9.receiver = v3;
  v9.super_class = v2;
  return objc_msgSendSuper2(&v9, sel_init);
}

id LogKey.init(strings:)(uint64_t a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = a1;
  uint64_t v4 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE1C8);
  sub_24459D750();
  uint64_t v5 = sub_2445EF0D8();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  objc_super v8 = &v4[OBJC_IVAR____TtC22ManagedAppDistribution6LogKey_representation];
  *(void *)objc_super v8 = v5;
  *((void *)v8 + 1) = v7;
  v8[16] = 1;

  v10.receiver = v4;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_init);
}

id LogKey.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return LogKey.init(from:)(a1);
}

id LogKey.init(from:)(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v6 = v1;
  id v7 = v5;
  sub_2445EF9C8();
  if (v2)
  {

    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v13, v13[3]);
    sub_2445A8B34();
    sub_2445EF878();
    char v9 = v12;
    objc_super v10 = (objc_super *)&v6[OBJC_IVAR____TtC22ManagedAppDistribution6LogKey_representation];
    *objc_super v10 = v11[1];
    LOBYTE(v10[1].receiver) = v9;

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
    v11[0].receiver = v6;
    v11[0].super_class = ObjectType;
    id v7 = [(objc_super *)v11 init];
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_2445A8B34()
{
  unint64_t result = qword_268E8D070;
  if (!qword_268E8D070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D070);
  }
  return result;
}

uint64_t LogKey.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445EFA08();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_2445A8C48();
  sub_2445EF8A8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

unint64_t sub_2445A8C48()
{
  unint64_t result = qword_268E8D078;
  if (!qword_268E8D078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D078);
  }
  return result;
}

uint64_t LogKey.description.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC22ManagedAppDistribution6LogKey_representation);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC22ManagedAppDistribution6LogKey_representation + 16) == 1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v3 = LogKey.Prefix.rawValue.getter();
    sub_2445A8434();
    sub_2445EF1D8();
    sub_2445EF1A8();
    swift_bridgeObjectRelease();
    return v3;
  }
  return v1;
}

id sub_2445A8D7C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  uint64_t v5 = (void *)sub_2445EF118();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_2445A8DEC()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC22ManagedAppDistribution6LogKey_representation);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC22ManagedAppDistribution6LogKey_representation + 16) == 1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v3 = LogKey.Prefix.rawValue.getter();
    sub_2445A8434();
    sub_2445EF1D8();
    sub_2445EF1A8();
    swift_bridgeObjectRelease();
    return v3;
  }
  return v1;
}

id LogKey.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void LogKey.init()()
{
}

id LogKey.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_2445A8F6C()
{
  unint64_t result = qword_268E8D080;
  if (!qword_268E8D080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D080);
  }
  return result;
}

id sub_2445A8FD8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v6 = objc_allocWithZone(v2);
  id result = LogKey.init(from:)(a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_2445A9028(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445EFA08();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_2445A8C48();
  sub_2445EF8A8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t type metadata accessor for LogKey()
{
  return self;
}

uint64_t method lookup function for LogKey(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LogKey);
}

uint64_t dispatch thunk of LogKey.__allocating_init(prefix:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of LogKey.__allocating_init(string:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of LogKey.__allocating_init(strings:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of LogKey.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t getEnumTagSinglePayload for LogKey.Prefix(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LogKey.Prefix(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *id result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445A92E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LogKey.Prefix()
{
  return &type metadata for LogKey.Prefix;
}

uint64_t destroy for LogKey.Representation(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 16);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)result + 2;
  }
  if (v1 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s22ManagedAppDistribution6LogKeyC14RepresentationOwCP_0(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    swift_bridgeObjectRetain();
    char v5 = 1;
  }
  else
  {
    char v5 = 0;
    *(void *)a1 = *(void *)a2;
  }
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LogKey.Representation(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1) {
      swift_bridgeObjectRelease();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 16);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    *(void *)a1 = *(void *)a2;
    if (v5 == 1)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(unsigned char *)(a1 + 16) = 0;
    }
  }
  return a1;
}

uint64_t assignWithTake for LogKey.Representation(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1) {
      swift_bridgeObjectRelease();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 16);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      LOBYTE(v5) = 0;
      *(void *)a1 = *(void *)a2;
    }
    *(unsigned char *)(a1 + 16) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for LogKey.Representation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LogKey.Representation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)id result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)id result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2445A9558(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 16);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_2445A9574(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LogKey.Representation()
{
  return &type metadata for LogKey.Representation;
}

uint64_t ManagedApp.open()()
{
  *(void *)(v1 + 32) = v0;
  return MEMORY[0x270FA2498](sub_2445A95C4, 0, 0);
}

uint64_t sub_2445A95C4()
{
  uint64_t v1 = v0[4];
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  v0[2] = v3;
  v0[3] = v2;
  unsigned int v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *unsigned int v4 = v0;
  v4[1] = sub_2445A9668;
  return AppLaunchRequest.launch()();
}

uint64_t sub_2445A9668()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2445A979C, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_2445A979C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ManagedApp.state.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D090);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unsigned int v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D098);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  char v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v22[-v10];
  (*(void (**)(unsigned char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F8F580], v1);
  sub_2445EF338();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16))(v9, v11, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D0A0);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32))(v12 + *(void *)(*(void *)v12 + 88), v9, v5);
  uint64_t v14 = *(void *)(v0 + 16);
  uint64_t v13 = *(void *)(v0 + 24);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v12;
  *(void *)(v15 + 24) = v14;
  *(void *)(v15 + 32) = v13;
  *(unsigned char *)(v15 + 40) = 1;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_2445EF348();
  if (qword_26B0CE768 != -1) {
    uint64_t v16 = swift_once();
  }
  MEMORY[0x270FA5388](v16);
  *(void *)&v22[-48] = v14;
  *(void *)&v22[-40] = v13;
  v22[-32] = 1;
  uint64_t v18 = (uint64_t)&v17[4];
  uint64_t v19 = v17 + 26;
  *(void *)&v22[-24] = v12;
  *(void *)&v22[-16] = v20;
  os_unfair_lock_lock(v17 + 26);
  sub_2445A9C2C(v18);
  os_unfair_lock_unlock(v19);
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
}

void sub_2445A9AFC(uint64_t a1)
{
  if (qword_26B0CE768 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x270FA5388](a1);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 26;
  os_unfair_lock_lock(v1 + 26);
  sub_2445A9C58(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_2445A9BD8()
{
  swift_release();
  sub_244585A1C(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));

  return swift_deallocObject();
}

void sub_2445A9C1C(uint64_t a1)
{
}

uint64_t sub_2445A9C2C(uint64_t a1)
{
  return sub_2445A9C84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_2445D7FFC);
}

uint64_t sub_2445A9C58(uint64_t a1)
{
  return sub_2445A9C84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_2445D8558);
}

uint64_t sub_2445A9C84(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_2445A9CB0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_2445841F4((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_2445856B4(v9, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v8;
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_2445EF5D8();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_244584138(a1);
    sub_2445848C8(a2, v9);
    uint64_t v7 = sub_2445EF5D8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
    return sub_244584138((uint64_t)v9);
  }
}

uint64_t sub_2445A9DC0()
{
  return (*v0)();
}

uint64_t encodeXPCValues<each A>(_:)(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3, uint64_t a4)
{
  v32[0] = a3;
  v32[1] = a4;
  uint64_t v5 = (uint64_t *)TupleTypeMetadata;
  uint64_t v6 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v7 = *v6;
  }
  else
  {
    MEMORY[0x270FA5388](TupleTypeMetadata);
    char v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v10 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v9 - (char *)v6) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v10 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v11 = (long long *)(v6 + 2);
      uint64_t v12 = v9 + 16;
      unint64_t v13 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v14 = *v11;
        *(v12 - 1) = *(v11 - 1);
        *uint64_t v12 = v14;
        v11 += 2;
        v12 += 2;
        v13 -= 4;
      }
      while (v13);
      if (v10 != a2)
      {
LABEL_9:
        unint64_t v15 = a2 - v10;
        uint64_t v16 = v10;
        int v17 = &v9[8 * v10];
        uint64_t v18 = &v6[v16];
        do
        {
          uint64_t v19 = *v18++;
          *(void *)int v17 = v19;
          v17 += 8;
          --v15;
        }
        while (v15);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v7 = TupleTypeMetadata;
  }
  uint64_t v20 = *(void *)(v7 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  MEMORY[0x270FA5388](TupleTypeMetadata);
  if (a2)
  {
    uint64_t v22 = (int *)(v7 + 32);
    unint64_t v23 = a2;
    do
    {
      if (a2 == 1) {
        int v24 = 0;
      }
      else {
        int v24 = *v22;
      }
      uint64_t v26 = *v6++;
      uint64_t v25 = v26;
      uint64_t v27 = *v5++;
      (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 16))((char *)v32 + v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v27);
      v22 += 4;
      --v23;
    }
    while (v23);
  }
  unint64_t v28 = (*(unsigned __int8 *)(v20 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v29 = (char *)swift_allocObject();
  *((void *)v29 + 2) = a2;
  *((void *)v29 + 3) = swift_allocateMetadataPack();
  *((void *)v29 + 4) = swift_allocateWitnessTablePack();
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v29[v28], (char *)v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  sub_2445EEEA8();
  swift_allocObject();
  sub_2445EEE98();
  _OWORD v32[2] = sub_2445AA4FC;
  v32[3] = v29;
  sub_24459928C();
  uint64_t v30 = sub_2445EEE88();
  swift_release();
  swift_release();
  return v30;
}

uint64_t sub_2445AA0B4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = 8 * a3;
  TupleTypeMetadata = (void *)MEMORY[0x270FA5388](a1);
  unint64_t v10 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v11)
  {
    uint64_t v12 = TupleTypeMetadata;
    uint64_t v38 = v9;
    uint64_t v40 = v3;
    uint64_t v13 = 0;
    long long v14 = (char *)(v8 & 0xFFFFFFFFFFFFFFFELL);
    uint64_t v44 = (uint64_t *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 16);
    do
    {
      if (a3 == 1)
      {
        int v15 = 0;
      }
      else
      {
        MEMORY[0x270FA5388](TupleTypeMetadata);
        uint64_t v16 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
        unint64_t v17 = 0;
        if (a3 < 4) {
          goto LABEL_11;
        }
        if ((unint64_t)(v16 - v14) < 0x20) {
          goto LABEL_11;
        }
        uint64_t v18 = v16 + 16;
        unint64_t v19 = a3 & 0xFFFFFFFFFFFFFFFCLL;
        uint64_t v20 = (long long *)v44;
        do
        {
          long long v21 = *v20;
          *(v18 - 1) = *(v20 - 1);
          *uint64_t v18 = v21;
          v20 += 2;
          v18 += 2;
          v19 -= 4;
        }
        while (v19);
        unint64_t v17 = a3 & 0xFFFFFFFFFFFFFFFCLL;
        if ((a3 & 0xFFFFFFFFFFFFFFFCLL) != a3)
        {
LABEL_11:
          unint64_t v22 = a3 - v17;
          uint64_t v23 = 8 * v17;
          int v24 = &v16[8 * v17];
          uint64_t v25 = &v14[v23];
          do
          {
            uint64_t v26 = *(void *)v25;
            v25 += 8;
            *(void *)int v24 = v26;
            v24 += 8;
            --v22;
          }
          while (v22);
        }
        TupleTypeMetadata = (void *)swift_getTupleTypeMetadata();
        int v15 = TupleTypeMetadata[2 * v13 + 4];
      }
      *(void *)&v10[8 * v13++] = a2 + v15;
    }
    while (v13 != a3);
    unint64_t v39 = a3;
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    uint64_t v27 = sub_2445EF9F8();
    unint64_t v28 = v38 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v29 = v40;
    do
    {
      uint64_t v44 = &v38;
      uint64_t v30 = *(void *)v14;
      uint64_t v31 = *(void *)(*(void *)v14 - 8);
      uint64_t v32 = v14;
      uint64_t v33 = v10;
      uint64_t v34 = v31;
      MEMORY[0x270FA5388](v27);
      uint64_t v36 = (char *)&v38 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v34 + 16))(v36);
      uint64_t v40 = v43;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v41, v42);
      sub_2445EF838();
      uint64_t v27 = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v36, v30);
      if (v29) {
        break;
      }
      unint64_t v10 = v33 + 8;
      v28 += 8;
      long long v14 = v32 + 8;
      --v39;
    }
    while (v39);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(TupleTypeMetadata, TupleTypeMetadata[3]);
    sub_2445EF9F8();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
}

uint64_t sub_2445AA3B4(uint64_t a1)
{
  if (*(void *)(v1 + 16) == 1)
  {
    uint64_t TupleTypeMetadata = *(void *)(*(void *)(v1 + 24) & 0xFFFFFFFFFFFFFFFELL);
  }
  else
  {
    MEMORY[0x270FA5388](a1);
    uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v3)
    {
      unint64_t v7 = 0;
      if (v3 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)&v6[-v4] < 0x20) {
        goto LABEL_9;
      }
      unint64_t v7 = v3 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v8 = (long long *)(v4 + 16);
      uint64_t v9 = v6 + 16;
      unint64_t v10 = v3 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v11 = *v8;
        *(v9 - 1) = *(v8 - 1);
        *uint64_t v9 = v11;
        v8 += 2;
        v9 += 2;
        v10 -= 4;
      }
      while (v10);
      if (v3 != v7)
      {
LABEL_9:
        unint64_t v12 = v3 - v7;
        uint64_t v13 = 8 * v7;
        long long v14 = &v6[8 * v7];
        int v15 = (uint64_t *)(v4 + v13);
        do
        {
          uint64_t v16 = *v15++;
          *(void *)long long v14 = v16;
          v14 += 8;
          --v12;
        }
        while (v12);
      }
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  (*(void (**)(unint64_t))(*(void *)(TupleTypeMetadata - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(void *)(TupleTypeMetadata - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(TupleTypeMetadata - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_2445AA4FC(uint64_t a1)
{
  unint64_t v3 = *(void *)(v1 + 16);
  if (v3 == 1)
  {
    uint64_t TupleTypeMetadata = *(void *)(*(void *)(v1 + 24) & 0xFFFFFFFFFFFFFFFELL);
  }
  else
  {
    MEMORY[0x270FA5388](a1);
    unint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v3)
    {
      unint64_t v8 = 0;
      if (v3 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)&v7[-v5] < 0x20) {
        goto LABEL_9;
      }
      unint64_t v8 = v3 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v9 = (long long *)(v5 + 16);
      unint64_t v10 = v7 + 16;
      unint64_t v11 = v3 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v12 = *v9;
        *(v10 - 1) = *(v9 - 1);
        *unint64_t v10 = v12;
        v9 += 2;
        v10 += 2;
        v11 -= 4;
      }
      while (v11);
      if (v3 != v8)
      {
LABEL_9:
        unint64_t v13 = v3 - v8;
        uint64_t v14 = 8 * v8;
        int v15 = &v7[8 * v8];
        uint64_t v16 = (uint64_t *)(v5 + v14);
        do
        {
          uint64_t v17 = *v16++;
          *(void *)int v15 = v17;
          v15 += 8;
          --v13;
        }
        while (v13);
      }
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  return sub_2445AA0B4(a1, v1+ ((*(unsigned __int8 *)(*(void *)(TupleTypeMetadata - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(TupleTypeMetadata - 8) + 80)), v3);
}

uint64_t sub_2445AA650(void *a1)
{
  return sub_2445AB2F8(a1);
}

uint64_t decodeXPCValues<each A, B>(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  unint64_t v11 = (uint64_t *)(a5 & 0xFFFFFFFFFFFFFFFELL);
  uint64_t v66 = a1;
  uint64_t v78 = a6;
  uint64_t v79 = a7;
  uint64_t v76 = a4;
  unint64_t v77 = a5;
  if (a3 == 1)
  {
    uint64_t v13 = v8;
    uint64_t TupleTypeMetadata = swift_checkMetadataState();
  }
  else
  {
    MEMORY[0x270FA5388](a1);
    uint64_t v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a3)
    {
      unint64_t v18 = 0;
      if (a3 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v17 - (char *)v11) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v18 = a3 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v19 = (long long *)(v11 + 2);
      uint64_t v20 = v17 + 16;
      unint64_t v21 = a3 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v22 = *v19;
        *(v20 - 1) = *(v19 - 1);
        *uint64_t v20 = v22;
        v19 += 2;
        v20 += 2;
        v21 -= 4;
      }
      while (v21);
      if (v18 != a3)
      {
LABEL_9:
        unint64_t v23 = a3 - v18;
        uint64_t v24 = v18;
        uint64_t v25 = &v17[8 * v18];
        uint64_t v26 = &v11[v24];
        do
        {
          uint64_t v27 = *v26++;
          *(void *)uint64_t v25 = v27;
          v25 += 8;
          --v23;
        }
        while (v23);
      }
    }
    a8 = v15;
    uint64_t v13 = v8;
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  uint64_t v28 = TupleTypeMetadata;
  uint64_t v29 = sub_2445EF468();
  uint64_t v70 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v73 = (char *)&v66 - v30;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CEBB0);
  uint64_t v75 = &v66;
  MEMORY[0x270FA5388](v31 - 8);
  uint64_t v33 = (char *)&v66 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = v29;
  uint64_t v34 = swift_allocBox();
  uint64_t v35 = *(void *)(v28 - 8);
  uint64_t v68 = v36;
  uint64_t v69 = v35;
  uint64_t v37 = *(void (**)(void, void, void, void))(v35 + 56);
  uint64_t v72 = v28;
  v37(v36, 1, 1, v28);
  sub_2445EEE78();
  swift_allocObject();
  uint64_t v80 = sub_2445EEE68();
  sub_2445EF5C8();
  uint64_t v38 = sub_2445EF5D8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v33, 1, v38);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v74 = &v66;
  uint64_t v67 = a8;
  uint64_t v83 = v13;
  uint64_t v40 = (void *)swift_allocObject();
  _OWORD v40[2] = a2;
  v40[3] = a3;
  uint64_t v41 = v76;
  void v40[4] = swift_allocateMetadataPack();
  v40[5] = swift_allocateMetadataPack();
  uint64_t v42 = v78;
  v40[6] = swift_allocateWitnessTablePack();
  unint64_t v77 = a3;
  v40[7] = swift_allocateWitnessTablePack();
  v40[8] = v34;
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = sub_2445AB0A8;
  *(void *)(v43 + 24) = v40;
  v82[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0CEBC0);
  v82[0] = sub_2445AB130;
  v82[1] = v43;
  uint64_t v79 = v34;
  swift_retain();
  uint64_t v44 = (uint64_t (*)(void, void))sub_2445EEE58();
  sub_2445A9CB0((uint64_t)v82, (uint64_t)v33);
  uint64_t v45 = v44(v81, 0);
  if (!a2)
  {
LABEL_17:
    uint64_t v55 = v68;
    swift_beginAccess();
    uint64_t v56 = v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v73, v55, v71);
    uint64_t v57 = v72;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 48))(v56, 1, v72);
    if (result != 1)
    {
      unint64_t v58 = v77;
      uint64_t v59 = v67;
      if (v77)
      {
        uint64_t v60 = (int *)(v57 + 32);
        unint64_t v61 = v77;
        do
        {
          if (v58 == 1) {
            int v62 = 0;
          }
          else {
            int v62 = *v60;
          }
          uint64_t v64 = *v11++;
          uint64_t v63 = v64;
          uint64_t v65 = *v59++;
          (*(void (**)(uint64_t, char *))(*(void *)(v63 - 8) + 32))(v65, &v56[v62]);
          v60 += 4;
          --v61;
        }
        while (v61);
      }
      swift_release();
      return swift_release();
    }
LABEL_27:
    __break(1u);
    return result;
  }
  unint64_t v46 = v41 & 0xFFFFFFFFFFFFFFFELL;
  unint64_t v47 = v42 & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v48 = v66;
  while (1)
  {
    MEMORY[0x270FA5388](v45);
    (*(void (**)(char *))(v50 + 16))((char *)&v66 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v51 = sub_2445EEF58();
    unint64_t v53 = v52;
    sub_2445AB158();
    uint64_t v54 = v83;
    sub_2445EEE48();
    if (v54) {
      break;
    }
    uint64_t v83 = 0;
    uint64_t v45 = sub_244599358(v51, v53);
    v48 += 8;
    v47 += 8;
    v46 += 8;
    if (!--a2) {
      goto LABEL_17;
    }
  }
  swift_release();
  sub_244599358(v51, v53);
  return swift_release();
}

uint64_t sub_2445AACC4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v10 = a6 & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v42 = a4;
  uint64_t v38 = a8;
  if (a4 == 1)
  {
    uint64_t TupleTypeMetadata = swift_checkMetadataState();
  }
  else
  {
    MEMORY[0x270FA5388](a1);
    uint64_t v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v12)
    {
      unint64_t v15 = 0;
      if (v12 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)&v14[-v10] < 0x20) {
        goto LABEL_9;
      }
      unint64_t v15 = v12 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v16 = (long long *)(v10 + 16);
      uint64_t v17 = v14 + 16;
      unint64_t v18 = v12 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v19 = *v16;
        *(v17 - 1) = *(v16 - 1);
        *uint64_t v17 = v19;
        v16 += 2;
        v17 += 2;
        v18 -= 4;
      }
      while (v18);
      if (v15 != v12)
      {
LABEL_9:
        unint64_t v20 = v12 - v15;
        uint64_t v21 = 8 * v15;
        long long v22 = &v14[8 * v15];
        unint64_t v23 = (uint64_t *)(v10 + v21);
        do
        {
          uint64_t v24 = *v23++;
          *(void *)long long v22 = v24;
          v22 += 8;
          --v20;
        }
        while (v20);
      }
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  uint64_t v37 = TupleTypeMetadata;
  uint64_t v25 = sub_2445EF468();
  uint64_t v41 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)v36 - v26;
  uint64_t v28 = swift_projectBox();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_2445EF9B8();
  if (!v8)
  {
    uint64_t v39 = v28;
    uint64_t v40 = v25;
    uint64_t v45 = v27;
    v36[1] = v36;
    if (v42)
    {
      uint64_t v30 = 0;
      v38 &= ~1uLL;
      uint64_t v31 = v37 + 16;
      do
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v43, v44);
        sub_2445EF828();
        ++v30;
        v31 += 16;
        uint64_t v32 = v41;
        uint64_t v34 = v39;
        uint64_t v33 = v40;
      }
      while (v42 != v30);
    }
    else
    {
      uint64_t v33 = v40;
      uint64_t v32 = v41;
      uint64_t v34 = v39;
    }
    uint64_t v35 = v45;
    (*(void (**)(char *, void, uint64_t))(*(void *)(v37 - 8) + 56))(v45, 0, 1);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 40))(v34, v35, v33);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
  }
  return result;
}

uint64_t sub_2445AB070()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2445AB0A8(void *a1)
{
  return sub_2445AACC4(a1, v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_2445AB0D0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_2445AB0F8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2445AB130()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_2445AB158()
{
  unint64_t result = qword_26B0CE908;
  if (!qword_26B0CE908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE908);
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCDecoder()
{
  return &type metadata for XPCDecoder;
}

void *initializeBufferWithCopyOfBuffer for XPCEncoder(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for XPCEncoder()
{
  return swift_release();
}

void *assignWithCopy for XPCEncoder(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for XPCEncoder(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCEncoder(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCEncoder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCEncoder()
{
  return &type metadata for XPCEncoder;
}

uint64_t sub_2445AB2F8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CEBB0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v5 = sub_2445EF9D8();
  sub_2445EF5C8();
  uint64_t v6 = sub_2445EF5D8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    if (*(void *)(v5 + 16) && (unint64_t v9 = sub_24458427C((uint64_t)v4), (v10 & 1) != 0))
    {
      sub_244584198(*(void *)(v5 + 56) + 32 * v9, (uint64_t)&v13);
    }
    else
    {
      long long v13 = 0u;
      long long v14 = 0u;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (*((void *)&v14 + 1))
    {
      sub_2445841F4(&v13, &v15);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0CEBC0);
      swift_dynamicCast();
      unint64_t v11 = v12;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
      v11(a1);
      swift_release();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    }
  }
  __break(1u);
  return result;
}

uint64_t DDMDeclarationStatusRequest.declarationKey.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DDMDeclarationStatusRequest.init(declarationKey:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t DDMDeclarationStatusRequest.request()()
{
  *(_OWORD *)(v1 + 40) = *v0;
  return MEMORY[0x270FA2498](sub_2445AB548, 0, 0);
}

uint64_t sub_2445AB548()
{
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[6];
  v0[2] = v0[5];
  v0[4] = v0 + 2;
  v0[3] = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))&aXdp[*(int *)aXdp];
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[7] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2445AB664;
  return v4((uint64_t)(v0 + 4), (uint64_t)sub_2445AB820, 0);
}

uint64_t sub_2445AB664(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_2445AB7BC, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_2445AB7BC()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_2445AB820(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t *DDMDeclarationStatusRequest.request()()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  v5[0] = v2;
  v5[1] = v1;
  uint64_t v6 = v5;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_2445AB9CC(&v6, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_2445AB8E8, 0);
  swift_bridgeObjectRelease();
  return v3;
}

void sub_2445AB8E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_2445AB8F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v10 = (void *)sub_2445EEF38();
  void v12[4] = a4;
  v12[5] = a5;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 1107296256;
  void v12[2] = sub_2445D5428;
  v12[3] = a6;
  unint64_t v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_getDeclarationStatus_reply_, v10, v11);
  _Block_release(v11);
}

uint64_t *sub_2445AB9CC(uint64_t **a1, void (*a2)(uint64_t, uint64_t, unint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t *a3)
{
  uint64_t v8 = *v3;
  uint64_t v33 = &type metadata for FeatureFlag;
  unint64_t v34 = sub_244598F38();
  char v9 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
  if ((v9 & 1) == 0)
  {
    sub_244598F8C();
    swift_allocError();
    *unint64_t v18 = 0;
    swift_willThrow();
    return v3;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D0F8);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(unsigned char *)(v10 + 24) = -1;
  unint64_t v11 = (void *)v3[2];
  unint64_t v34 = (unint64_t)sub_2445AE53C;
  uint64_t v35 = v10;
  aBlock = (uint64_t (*)(void *))MEMORY[0x263EF8330];
  uint64_t v31 = 1107296256;
  uint64_t v32 = sub_2445C07F4;
  uint64_t v33 = (ValueMetadata *)&block_descriptor_30_0;
  unint64_t v12 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  uint64_t v3 = (uint64_t *)objc_msgSend(v11, sel_synchronousRemoteObjectProxyWithErrorHandler_, v12);
  _Block_release(v12);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)v36, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_244598F8C();
    swift_allocError();
    *long long v19 = 0;
    swift_willThrow();
    swift_release();
LABEL_7:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
    return v3;
  }
  uint64_t v27 = a3;
  uint64_t v28 = a2;
  uint64_t v29 = v37;
  sub_24459A520();
  sub_24459A4CC();
  uint64_t v13 = **a1;
  uint64_t v14 = (*a1)[1];
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  *(void *)(v15 + 24) = v14;
  sub_2445EEEA8();
  swift_allocObject();
  swift_bridgeObjectRetain_n();
  uint64_t v3 = (uint64_t *)sub_2445EEE98();
  aBlock = sub_2445AE94C;
  uint64_t v31 = v15;
  sub_24459928C();
  uint64_t v16 = sub_2445EEE88();
  if (!v4)
  {
    uint64_t v21 = v16;
    unint64_t v22 = v17;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v10;
    *(void *)(v23 + 24) = v8;
    swift_retain();
    uint64_t v3 = v27;
    v28(v29, v21, v22, sub_2445AE968, v23);
    swift_release();
    swift_beginAccess();
    int v24 = *(unsigned __int8 *)(v10 + 24);
    if (v24 == 255)
    {
      sub_244598F8C();
      swift_allocError();
      *uint64_t v25 = 0;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
      swift_release();
      sub_244599358(v21, v22);
      swift_unknownObjectRelease();
      return v3;
    }
    uint64_t v3 = *(uint64_t **)(v10 + 16);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
      swift_release();
      sub_244599358(v21, v22);
      swift_unknownObjectRelease();
      return v3;
    }
    LOBYTE(v37) = *(void *)(v10 + 16);
    sub_244598F8C();
    swift_willThrowTypedImpl();
    swift_allocError();
    *uint64_t v26 = (_BYTE)v3;
    sub_244599358(v21, v22);
    swift_release();
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return v3;
}

uint64_t sub_2445ABE68(uint64_t **a1, void (*a2)(uint64_t, uint64_t, unint64_t, uint64_t (*)(), uint64_t))
{
  uint64_t v6 = *v2;
  uint64_t v31 = &type metadata for FeatureFlag;
  unint64_t v32 = sub_244598F38();
  char v7 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
  if ((v7 & 1) == 0)
  {
    sub_244598F8C();
    swift_allocError();
    *unint64_t v17 = 0;
    swift_willThrow();
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D0E0);
  uint64_t v8 = swift_allocObject();
  *(_WORD *)(v8 + 16) = -256;
  char v9 = (void *)v2[2];
  unint64_t v32 = (unint64_t)sub_2445AE0C8;
  uint64_t v33 = v8;
  aBlock = (uint64_t (*)(void *))MEMORY[0x263EF8330];
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_2445C07F4;
  uint64_t v31 = (ValueMetadata *)&block_descriptor_23;
  uint64_t v10 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v11 = objc_msgSend(v9, sel_synchronousRemoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)v34, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_244598F8C();
    swift_allocError();
    *unint64_t v18 = 0;
    swift_willThrow();
    swift_release();
LABEL_7:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    return 0;
  }
  uint64_t v26 = a2;
  uint64_t v27 = v35;
  uint64_t v12 = **a1;
  uint64_t v13 = (*a1)[1];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v12;
  *(void *)(v14 + 24) = v13;
  sub_2445EEEA8();
  swift_allocObject();
  swift_bridgeObjectRetain_n();
  sub_2445EEE98();
  aBlock = sub_2445AE930;
  uint64_t v29 = v14;
  sub_24459928C();
  uint64_t v15 = sub_2445EEE88();
  if (v3)
  {
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    return 0;
  }
  uint64_t v20 = v15;
  unint64_t v21 = v16;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v8;
  *(void *)(v22 + 24) = v6;
  swift_retain();
  v26(v27, v20, v21, sub_2445AEA00, v22);
  swift_release();
  swift_beginAccess();
  unsigned int v23 = *(unsigned __int16 *)(v8 + 16);
  if (v23 >> 8 > 0xFE)
  {
    sub_244598F8C();
    swift_allocError();
    *int v24 = 0;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    swift_release();
    sub_244599358(v20, v21);
    swift_unknownObjectRelease();
    return 0;
  }
  if ((v23 & 0x100) != 0)
  {
    LOBYTE(v35) = *(_WORD *)(v8 + 16);
    sub_244598F8C();
    swift_willThrowTypedImpl();
    swift_allocError();
    *uint64_t v25 = v23;
    sub_244599358(v20, v21);
    swift_release();
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
  swift_release();
  sub_244599358(v20, v21);
  swift_unknownObjectRelease();
  return v23 & 1;
}

uint64_t *sub_2445AC2F8(uint64_t a1, void (*a2)(uint64_t, uint64_t, unint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t *a3)
{
  uint64_t v7 = *v3;
  unint64_t v32 = &type metadata for FeatureFlag;
  unint64_t v33 = sub_244598F38();
  char v8 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
  if ((v8 & 1) == 0)
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v15 = 0;
    swift_willThrow();
    return v3;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE1B8);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(unsigned char *)(v9 + 24) = -1;
  uint64_t v10 = (void *)v3[2];
  unint64_t v33 = (unint64_t)sub_2445AE53C;
  uint64_t v34 = v9;
  aBlock = (uint64_t (*)(void *))MEMORY[0x263EF8330];
  uint64_t v30 = 1107296256;
  uint64_t v31 = sub_2445C07F4;
  unint64_t v32 = (ValueMetadata *)&block_descriptor_11;
  id v11 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  uint64_t v3 = (uint64_t *)objc_msgSend(v10, sel_synchronousRemoteObjectProxyWithErrorHandler_, v11);
  _Block_release(v11);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)v35, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_244598F8C();
    swift_allocError();
    *unint64_t v16 = 0;
    swift_willThrow();
    swift_release();
LABEL_7:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
    return v3;
  }
  uint64_t v28 = a2;
  uint64_t v12 = v36;
  sub_2445EEEA8();
  swift_allocObject();
  uint64_t v3 = (uint64_t *)sub_2445EEE98();
  aBlock = sub_244599444;
  uint64_t v30 = 0;
  sub_24459928C();
  uint64_t v13 = sub_2445EEE88();
  if (!v4)
  {
    unint64_t v18 = v14;
    uint64_t v19 = v13;
    swift_release();
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = v12;
    uint64_t v22 = v20;
    *(void *)(v20 + 16) = v9;
    *(void *)(v20 + 24) = v7;
    uint64_t v23 = v19;
    uint64_t v24 = v21;
    swift_retain();
    uint64_t v3 = a3;
    v28(v24, v23, v18, sub_2445AE5BC, v22);
    swift_release();
    swift_beginAccess();
    int v25 = *(unsigned __int8 *)(v9 + 24);
    if (v25 == 255)
    {
      sub_244598F8C();
      swift_allocError();
      *uint64_t v26 = 0;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
      swift_release();
      sub_244599358(v23, v18);
      swift_unknownObjectRelease();
      return v3;
    }
    uint64_t v3 = *(uint64_t **)(v9 + 16);
    if ((v25 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
      swift_release();
      sub_244599358(v23, v18);
      swift_unknownObjectRelease();
      return v3;
    }
    LOBYTE(v36) = *(void *)(v9 + 16);
    sub_244598F8C();
    swift_willThrowTypedImpl();
    swift_allocError();
    *uint64_t v27 = (_BYTE)v3;
    sub_244599358(v23, v18);
    swift_release();
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
  swift_unknownObjectRelease();
  swift_release();
  return v3;
}

uint64_t *sub_2445AC740(uint64_t **a1, void (*a2)(uint64_t, uint64_t, unint64_t, uint64_t (*)(uint64_t a1, unint64_t a2), uint64_t), uint64_t *a3)
{
  uint64_t v49 = a2;
  uint64_t v48 = a3;
  uint64_t v5 = *v3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB70);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  MEMORY[0x270FA5388](v9);
  id v11 = (char *)v39 - v10;
  uint64_t v54 = &type metadata for FeatureFlag;
  unint64_t v55 = sub_244598F38();
  char v12 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
  if ((v12 & 1) == 0)
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v28 = 0;
    swift_willThrow();
    return v3;
  }
  uint64_t v44 = a1;
  uint64_t v45 = v8;
  unint64_t v46 = (void *)((char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v47 = v11;
  uint64_t v43 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D0E8);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(unsigned char *)(v13 + 24) = -1;
  unint64_t v14 = (void *)v3[2];
  unint64_t v55 = (unint64_t)sub_2445AE600;
  uint64_t v56 = v13;
  aBlock = (uint64_t (*)(void *))MEMORY[0x263EF8330];
  uint64_t v52 = 1107296256;
  unint64_t v53 = sub_2445C07F4;
  uint64_t v54 = (ValueMetadata *)&block_descriptor_16;
  uint64_t v15 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  uint64_t v3 = (uint64_t *)objc_msgSend(v14, sel_synchronousRemoteObjectProxyWithErrorHandler_, v15);
  _Block_release(v15);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)v57, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v29 = 0;
    swift_willThrow();
    swift_release();
LABEL_7:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v57);
    return v3;
  }
  v39[1] = v13 + 16;
  uint64_t v40 = v58;
  uint64_t v41 = v13;
  sub_2445AE608(&qword_268E8D0F0, (void (*)(void))sub_244598FE0);
  sub_2445AE608(&qword_268E8CB68, (void (*)(void))sub_244599034);
  unint64_t v16 = v44;
  uint64_t v42 = **v44;
  unint64_t v17 = v47;
  void *v47 = v42;
  uint64_t v18 = sub_2445EEF88();
  uint64_t v19 = (void (*)(uint64_t))MEMORY[0x263F07508];
  sub_2445AE678(&qword_26B0CE710, MEMORY[0x263F07508]);
  sub_2445AE678(&qword_26B0CE708, v19);
  uint64_t v20 = (char *)v17 + *(int *)(v6 + 48);
  uint64_t v21 = *(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v18 - 8) + 16);
  v21(v20, v16[1], v18);
  uint64_t v22 = (uint64_t)v46;
  *unint64_t v46 = *v17;
  v21((char *)(v22 + *(int *)(v6 + 48)), (uint64_t *)v20, v18);
  unint64_t v23 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v24 = swift_allocObject();
  sub_2445AE7B8(v22, v24 + v23);
  sub_2445EEEA8();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v3 = (uint64_t *)sub_2445EEE98();
  aBlock = sub_2445AE820;
  uint64_t v52 = v24;
  sub_24459928C();
  uint64_t v25 = v50;
  uint64_t v26 = sub_2445EEE88();
  if (!v25)
  {
    uint64_t v31 = v26;
    unint64_t v32 = v27;
    swift_release();
    swift_release();
    sub_2445AE890((uint64_t)v17);
    uint64_t v33 = swift_allocObject();
    uint64_t v34 = v41;
    uint64_t v35 = v43;
    *(void *)(v33 + 16) = v41;
    *(void *)(v33 + 24) = v35;
    swift_retain();
    uint64_t v3 = v48;
    v49(v40, v31, v32, sub_2445AE8F0, v33);
    swift_release();
    swift_beginAccess();
    int v36 = *(unsigned __int8 *)(v34 + 24);
    if (v36 == 255)
    {
      sub_244598F8C();
      swift_allocError();
      *uint64_t v37 = 0;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v57);
      swift_release();
      sub_244599358(v31, v32);
      swift_unknownObjectRelease();
      return v3;
    }
    uint64_t v3 = *(uint64_t **)(v34 + 16);
    if ((v36 & 1) == 0)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v57);
      swift_release();
      sub_244599358(v31, v32);
      swift_unknownObjectRelease();
      return v3;
    }
    LOBYTE(v58) = *(void *)(v34 + 16);
    sub_244598F8C();
    swift_willThrowTypedImpl();
    swift_allocError();
    *uint64_t v38 = (_BYTE)v3;
    sub_244599358(v31, v32);
    swift_release();
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v57);
  swift_unknownObjectRelease();
  swift_release();
  sub_2445AE890((uint64_t)v17);
  return v3;
}

uint64_t sub_2445ACDDC(uint64_t *a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v41 = a3;
  uint64_t v6 = *v3;
  uint64_t updated = type metadata accessor for DDMAppOrUpdateManagedAppRequest();
  uint64_t v8 = *(void *)(updated - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x270FA5388](updated - 8);
  MEMORY[0x270FA5388](v10);
  char v12 = (char *)&v37 - v11;
  unint64_t v46 = &type metadata for FeatureFlag;
  unint64_t v47 = sub_244598F38();
  char v13 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
  if ((v13 & 1) == 0)
  {
    sub_244598F8C();
    swift_allocError();
    *unint64_t v27 = 0;
    swift_willThrow();
    return 0;
  }
  uint64_t v39 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = v12;
  uint64_t v37 = v6;
  uint64_t v38 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D0E0);
  uint64_t v14 = swift_allocObject();
  *(_WORD *)(v14 + 16) = -256;
  uint64_t v15 = (void *)v3[2];
  unint64_t v47 = (unint64_t)sub_2445AE0C8;
  uint64_t v48 = v14;
  aBlock = (uint64_t (*)(void *))MEMORY[0x263EF8330];
  uint64_t v44 = 1107296256;
  uint64_t v45 = sub_2445C07F4;
  unint64_t v46 = (ValueMetadata *)&block_descriptor_3;
  unint64_t v16 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v17 = objc_msgSend(v15, sel_synchronousRemoteObjectProxyWithErrorHandler_, v16);
  _Block_release(v16);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)v49, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v28 = 0;
    swift_willThrow();
    swift_release();
LABEL_7:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
    return 0;
  }
  uint64_t v18 = v50;
  sub_2445AE678(&qword_268E8CB28, (void (*)(uint64_t))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
  sub_2445AE678(&qword_268E8CB18, (void (*)(uint64_t))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
  uint64_t v19 = *a1;
  uint64_t v20 = (uint64_t)v40;
  sub_2445AE0D0(v19, (uint64_t)v40);
  uint64_t v21 = v39;
  sub_2445AE0D0(v20, v39);
  unint64_t v22 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v23 = swift_allocObject();
  sub_2445AE288(v21, v23 + v22);
  sub_2445EEEA8();
  swift_allocObject();
  sub_2445EEE98();
  aBlock = sub_2445AE2EC;
  uint64_t v44 = v23;
  sub_24459928C();
  uint64_t v24 = v42;
  uint64_t v25 = sub_2445EEE88();
  if (!v24)
  {
    unint64_t v30 = v26;
    uint64_t v42 = v25;
    swift_release();
    swift_release();
    sub_2445AE358(v20);
    uint64_t v31 = swift_allocObject();
    uint64_t v32 = v37;
    *(void *)(v31 + 16) = v14;
    *(void *)(v31 + 24) = v32;
    swift_retain();
    uint64_t v33 = v42;
    v38(v18);
    swift_release();
    swift_beginAccess();
    unsigned int v34 = *(unsigned __int16 *)(v14 + 16);
    if (v34 >> 8 > 0xFE)
    {
      sub_244598F8C();
      swift_allocError();
      *uint64_t v35 = 0;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
      swift_release();
      sub_244599358(v33, v30);
      swift_unknownObjectRelease();
      return 0;
    }
    if ((v34 & 0x100) == 0)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
      swift_release();
      sub_244599358(v33, v30);
      swift_unknownObjectRelease();
      return v34 & 1;
    }
    LOBYTE(v50) = *(_WORD *)(v14 + 16);
    sub_244598F8C();
    swift_willThrowTypedImpl();
    swift_allocError();
    *int v36 = v34;
    sub_244599358(v33, v30);
    swift_release();
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
  swift_unknownObjectRelease();
  swift_release();
  sub_2445AE358(v20);
  return 0;
}

uint64_t sub_2445AD374()
{
  return 0x746172616C636564;
}

uint64_t sub_2445AD398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x746172616C636564 && a2 == 0xEE0079654B6E6F69)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2445EF848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2445AD454(uint64_t a1)
{
  unint64_t v2 = sub_2445AD8C4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445AD490(uint64_t a1)
{
  unint64_t v2 = sub_2445AD8C4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DDMDeclarationStatusRequest.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D0B0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445AD8C4();
  sub_2445EFA18();
  sub_2445EF758();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t DDMDeclarationStatusRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D0C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445AD8C4();
  sub_2445EF9E8();
  if (!v2)
  {
    uint64_t v9 = sub_2445EF688();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2445AD774@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return DDMDeclarationStatusRequest.init(from:)(a1, a2);
}

uint64_t sub_2445AD78C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D0B0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445AD8C4();
  sub_2445EFA18();
  sub_2445EF758();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_2445AD8C4()
{
  unint64_t result = qword_268E8D0B8;
  if (!qword_268E8D0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D0B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for DDMDeclarationStatusRequest()
{
  return &type metadata for DDMDeclarationStatusRequest;
}

unsigned char *storeEnumTagSinglePayload for DDMDeclarationStatusRequest.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2445AD9C4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DDMDeclarationStatusRequest.CodingKeys()
{
  return &type metadata for DDMDeclarationStatusRequest.CodingKeys;
}

unint64_t sub_2445ADA00()
{
  unint64_t result = qword_268E8D0C8;
  if (!qword_268E8D0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D0C8);
  }
  return result;
}

unint64_t sub_2445ADA58()
{
  unint64_t result = qword_268E8D0D0;
  if (!qword_268E8D0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D0D0);
  }
  return result;
}

unint64_t sub_2445ADAB0()
{
  unint64_t result = qword_268E8D0D8;
  if (!qword_268E8D0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D0D8);
  }
  return result;
}

uint64_t sub_2445ADB04(void *a1, uint64_t a2)
{
  if (qword_26B0CE668 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_2445EF038();
  __swift_project_value_buffer(v4, (uint64_t)qword_26B0CE650);
  id v5 = a1;
  id v6 = a1;
  uint64_t v7 = sub_2445EF018();
  os_log_type_t v8 = sub_2445EF438();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138543362;
    id v11 = a1;
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    sub_2445EF478();
    *uint64_t v10 = v14;

    _os_log_impl(&dword_244580000, v7, v8, "Error fetching synchronous remote object proxy: %{public}@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE538);
    swift_arrayDestroy();
    MEMORY[0x245694340](v10, -1, -1);
    MEMORY[0x245694340](v9, -1, -1);
  }
  else
  {
  }
  uint64_t result = swift_beginAccess();
  if (*(unsigned __int8 *)(a2 + 24) == 255)
  {
    uint64_t v13 = *(void *)(a2 + 16);
    *(void *)(a2 + 16) = 0;
    *(unsigned char *)(a2 + 24) = 1;
    return sub_2445AE9AC(v13, 0xFFu);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2445ADCF8(void *a1, uint64_t a2)
{
  if (qword_26B0CE668 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_2445EF038();
  __swift_project_value_buffer(v4, (uint64_t)qword_26B0CE650);
  id v5 = a1;
  id v6 = a1;
  uint64_t v7 = sub_2445EF018();
  os_log_type_t v8 = sub_2445EF438();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138543362;
    id v11 = a1;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    sub_2445EF478();
    *uint64_t v10 = v13;

    _os_log_impl(&dword_244580000, v7, v8, "Error fetching synchronous remote object proxy: %{public}@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE538);
    swift_arrayDestroy();
    MEMORY[0x245694340](v10, -1, -1);
    MEMORY[0x245694340](v9, -1, -1);
  }
  else
  {
  }
  uint64_t result = swift_beginAccess();
  if (*(unsigned __int8 *)(a2 + 24) == 255)
  {
    *(void *)(a2 + 16) = 0;
    *(unsigned char *)(a2 + 24) = 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2445ADEE0(void *a1, uint64_t a2)
{
  if (qword_26B0CE668 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_2445EF038();
  __swift_project_value_buffer(v4, (uint64_t)qword_26B0CE650);
  id v5 = a1;
  id v6 = a1;
  uint64_t v7 = sub_2445EF018();
  os_log_type_t v8 = sub_2445EF438();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138543362;
    id v11 = a1;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    sub_2445EF478();
    *uint64_t v10 = v13;

    _os_log_impl(&dword_244580000, v7, v8, "Error fetching synchronous remote object proxy: %{public}@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE538);
    swift_arrayDestroy();
    MEMORY[0x245694340](v10, -1, -1);
    MEMORY[0x245694340](v9, -1, -1);
  }
  else
  {
  }
  uint64_t result = swift_beginAccess();
  if (*(unsigned __int8 *)(a2 + 17) == 255) {
    *(_WORD *)(a2 + 16) = 256;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_2445AE0C8(void *a1)
{
  return sub_2445ADEE0(a1, v1);
}

uint64_t sub_2445AE0D0(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for DDMAppOrUpdateManagedAppRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t sub_2445AE134()
{
  uint64_t v1 = *(void *)(type metadata accessor for DDMAppOrUpdateManagedAppRequest() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(v2 + 64);
  if (v3 >> 60 != 15) {
    sub_244599358(*(void *)(v2 + 56), v3);
  }
  uint64_t v4 = *(int *)(type metadata accessor for ManagedAppDeclaration(0) + 36);
  uint64_t v5 = v2 + v4 + *(int *)(type metadata accessor for ManagedAppDeclaration.InstallBehavior(0) + 24);
  type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_2445EEF28();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    sub_244585A1C(*(void *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16));
  }

  return swift_deallocObject();
}

uint64_t sub_2445AE288(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for DDMAppOrUpdateManagedAppRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 32))(a2, a1, updated);
  return a2;
}

uint64_t sub_2445AE2EC(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for DDMAppOrUpdateManagedAppRequest() - 8);
  return sub_244590270(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_2445AE358(uint64_t a1)
{
  uint64_t updated = type metadata accessor for DDMAppOrUpdateManagedAppRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(updated - 8) + 8))(a1, updated);
  return a1;
}

uint64_t sub_2445AE3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr), uint64_t (*a6)(uint64_t, uint64_t))
{
  a5(&v12);
  uint64_t v8 = v12;
  char v9 = v13;
  uint64_t result = swift_beginAccess();
  if (*(unsigned __int8 *)(a3 + 24) == 255)
  {
    uint64_t v11 = *(void *)(a3 + 16);
    *(void *)(a3 + 16) = v8;
    *(unsigned char *)(a3 + 24) = v9;
    return a6(v11, 255);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2445AE438(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_244598A44(a1, a2, (uint64_t)&v7);
  uint64_t v4 = v7;
  char v5 = v8;
  uint64_t result = swift_beginAccess();
  if (*(unsigned __int8 *)(a3 + 24) == 255)
  {
    *(void *)(a3 + 16) = v4;
    *(unsigned char *)(a3 + 24) = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2445AE4A4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_244598508(a1, a2, v8);
  __int16 v4 = v8[0];
  int v5 = v8[1];
  uint64_t result = swift_beginAccess();
  if (*(unsigned __int8 *)(a3 + 17) == 255)
  {
    if (v5) {
      __int16 v7 = 256;
    }
    else {
      __int16 v7 = 0;
    }
    *(_WORD *)(a3 + 16) = v7 | v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2445AE520(uint64_t a1, unint64_t a2)
{
  return sub_2445AE4A4(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_2445AE53C(void *a1)
{
  return sub_2445ADB04(a1, v1);
}

uint64_t sub_2445AE544(void *a1, uint64_t *a2)
{
  return sub_24458F358(a1, *a2, a2[1]);
}

uint64_t sub_2445AE564(void *a1, uint64_t *a2)
{
  return sub_24458F4B4(a1, *a2, a2[1]);
}

uint64_t sub_2445AE584()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2445AE5BC(uint64_t a1, uint64_t a2)
{
  return sub_2445AE3B4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), (void (*)(uint64_t *__return_ptr))sub_244598A2C, (uint64_t (*)(uint64_t, uint64_t))sub_2445AEA04);
}

uint64_t sub_2445AE600(void *a1)
{
  return sub_2445ADCF8(a1, v1);
}

uint64_t sub_2445AE608(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E8CB60);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2445AE678(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2445AE6C0()
{
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB70) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[14];
  uint64_t v4 = sub_2445EEF88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_2445AE7B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2445AE820(void *a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB70) - 8);
  return sub_24458FD7C(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_2445AE890(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2445AE8F0(uint64_t a1, unint64_t a2)
{
  return sub_2445AE438(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_2445AE8F8()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2445AE930(void *a1)
{
  return sub_24458F358(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_2445AE94C(void *a1)
{
  return sub_24458F4B4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_2445AE968(uint64_t a1, uint64_t a2)
{
  return sub_2445AE3B4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), (void (*)(uint64_t *__return_ptr))sub_244598798, (uint64_t (*)(uint64_t, uint64_t))sub_2445AE9AC);
}

uint64_t sub_2445AE9AC(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_24459A6F8(result, a2 & 1);
  }
  return result;
}

uint64_t sub_2445AEA08(uint64_t a1, uint64_t a2)
{
  return sub_2445AEA38(a1, a2, LogKey.Prefix.rawValue.getter);
}

uint64_t sub_2445AEA20(uint64_t a1, uint64_t a2)
{
  return sub_2445AEA38(a1, a2, (uint64_t (*)(void))ManagedAppStatus.Reason.rawValue.getter);
}

uint64_t sub_2445AEA38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3();
  uint64_t v6 = v5;
  if (v4 == a3() && v6 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_2445EF848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_2445AEADC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6C616E6F6974706FLL;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6C616E6F6974706FLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v6 = 1969583473;
      goto LABEL_12;
    case 2:
      unint64_t v5 = 0xD000000000000013;
      uint64_t v7 = "promptingForConsent";
      goto LABEL_10;
    case 3:
      unint64_t v3 = 0x80000002445F8570;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 4:
      unint64_t v5 = 0xD000000000000016;
      uint64_t v7 = "promptingForManagement";
      goto LABEL_10;
    case 5:
      unint64_t v5 = 0x64616F6C6E776F64;
      unint64_t v3 = 0xEB00000000676E69;
      break;
    case 6:
      unint64_t v5 = 0x696C6C6174736E69;
      unint64_t v3 = 0xEA0000000000676ELL;
      break;
    case 7:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x646567616E616DLL;
      break;
    case 8:
      unint64_t v5 = 0xD000000000000015;
      uint64_t v7 = "managedButUninstalled";
LABEL_10:
      unint64_t v3 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      break;
    case 9:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v6 = 1818845542;
LABEL_12:
      unint64_t v5 = v6 & 0xFFFF0000FFFFFFFFLL | 0x646500000000;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v8 = 0xE600000000000000;
      uint64_t v9 = 1969583473;
      goto LABEL_31;
    case 2:
      unint64_t v2 = 0xD000000000000013;
      uint64_t v10 = "promptingForConsent";
      goto LABEL_26;
    case 3:
      unint64_t v8 = 0x80000002445F8570;
      if (v5 != 0xD000000000000011) {
        goto LABEL_32;
      }
      goto LABEL_28;
    case 4:
      unint64_t v2 = 0xD000000000000016;
      uint64_t v10 = "promptingForManagement";
      goto LABEL_26;
    case 5:
      unint64_t v8 = 0xEB00000000676E69;
      if (v5 != 0x64616F6C6E776F64) {
        goto LABEL_32;
      }
      goto LABEL_28;
    case 6:
      unint64_t v8 = 0xEA0000000000676ELL;
      if (v5 != 0x696C6C6174736E69) {
        goto LABEL_32;
      }
      goto LABEL_28;
    case 7:
      unint64_t v8 = 0xE700000000000000;
      if (v5 != 0x646567616E616DLL) {
        goto LABEL_32;
      }
      goto LABEL_28;
    case 8:
      unint64_t v2 = 0xD000000000000015;
      uint64_t v10 = "managedButUninstalled";
LABEL_26:
      unint64_t v8 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      goto LABEL_27;
    case 9:
      unint64_t v8 = 0xE600000000000000;
      uint64_t v9 = 1818845542;
LABEL_31:
      if (v5 != (v9 & 0xFFFF0000FFFFFFFFLL | 0x646500000000)) {
        goto LABEL_32;
      }
      goto LABEL_28;
    default:
LABEL_27:
      if (v5 != v2) {
        goto LABEL_32;
      }
LABEL_28:
      if (v3 == v8) {
        char v11 = 1;
      }
      else {
LABEL_32:
      }
        char v11 = sub_2445EF848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v11 & 1;
  }
}

uint64_t sub_2445AEDE8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000065;
  uint64_t v3 = 0x6C62616C69617661;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6C62616C69617661;
  unint64_t v6 = 0xE900000000000065;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0x80000002445F86E0;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 2:
      unint64_t v5 = 0xD000000000000017;
      unint64_t v6 = 0x80000002445F8700;
      break;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x676E697461647075;
      break;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      unint64_t v5 = 0x64656C696166;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x80000002445F86E0;
      if (v5 == 0xD000000000000012) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0x80000002445F8700;
      if (v5 != 0xD000000000000017) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x676E697461647075;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x64656C696166) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_2445EF848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2445AEFD4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x80000002445F8770;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x6C6C6174736E69;
      break;
    case 2:
      unint64_t v5 = 0x6974616D6F747561;
      unint64_t v3 = 0xEF65746164705563;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x657461647075;
      break;
    case 4:
      unint64_t v5 = 0x6F69746F6D6F7270;
      unint64_t v3 = 0xE90000000000006ELL;
      break;
    case 5:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x65726F74736572;
      break;
    case 6:
      unint64_t v5 = 0x5056656369766564;
      unint64_t v3 = 0xE900000000000050;
      break;
    case 7:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x50505672657375;
      break;
    case 8:
      unint64_t v3 = 0xE300000000000000;
      unint64_t v5 = 7368821;
      break;
    case 9:
      unint64_t v5 = 0x5565726F74736572;
      unint64_t v3 = 0xED00006574616470;
      break;
    default:
      break;
  }
  unint64_t v6 = 0x80000002445F8770;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x6C6C6174736E69) {
        goto LABEL_28;
      }
      goto LABEL_31;
    case 2:
      unint64_t v6 = 0xEF65746164705563;
      if (v5 != 0x6974616D6F747561) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x657461647075) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 4:
      unint64_t v6 = 0xE90000000000006ELL;
      if (v5 != 0x6F69746F6D6F7270) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 5:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x65726F74736572) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 6:
      unint64_t v6 = 0xE900000000000050;
      if (v5 != 0x5056656369766564) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 7:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x50505672657375) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 8:
      unint64_t v6 = 0xE300000000000000;
      unint64_t v2 = 7368821;
      goto LABEL_27;
    case 9:
      unint64_t v6 = 0xED00006574616470;
      if (v5 != 0x5565726F74736572) {
        goto LABEL_31;
      }
      goto LABEL_28;
    default:
LABEL_27:
      if (v5 != v2) {
        goto LABEL_31;
      }
LABEL_28:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_31:
      }
        char v7 = sub_2445EF848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2445AF30C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x696D694C7265764FLL;
    }
    else {
      uint64_t v3 = 0x726576654ELL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE900000000000074;
    }
    else {
      unint64_t v4 = 0xE500000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x696D694C7265764FLL;
      }
      else {
        uint64_t v6 = 0x726576654ELL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE900000000000074;
      }
      else {
        unint64_t v7 = 0xE500000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x737961776C41;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x737961776C41)
  {
LABEL_21:
    char v8 = sub_2445EF848();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2445AF420()
{
  sub_2445EF198();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2445AF59C()
{
  sub_2445EF198();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2445AF690()
{
  sub_2445EF198();

  return swift_bridgeObjectRelease();
}

uint64_t AppInstallRequestType.isUserInitiated.getter()
{
  return (*v0 > 9uLL) | (0x1Au >> *v0) & 1;
}

BOOL AppInstallRequestType.isUpdate.getter()
{
  return (*v0 & 0xFE) == 2;
}

uint64_t AppInstallRequestType.isRestore.getter()
{
  return (*v0 < 0xAuLL) & (0x230u >> *v0);
}

uint64_t AppInstallRequestType.requiresInstallSheet.getter()
{
  return (*v0 > 9uLL) | (0x1C3u >> *v0) & 1;
}

uint64_t AppInstallRequestType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_2445EF658();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 10;
  if (v2 < 0xA) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

unint64_t AppInstallRequestType.rawValue.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6C6C6174736E69;
      break;
    case 2:
      unint64_t result = 0x6974616D6F747561;
      break;
    case 3:
      unint64_t result = 0x657461647075;
      break;
    case 4:
      unint64_t result = 0x6F69746F6D6F7270;
      break;
    case 5:
      unint64_t result = 0x65726F74736572;
      break;
    case 6:
      unint64_t result = 0x5056656369766564;
      break;
    case 7:
      unint64_t result = 0x50505672657375;
      break;
    case 8:
      unint64_t result = 7368821;
      break;
    case 9:
      unint64_t result = 0x5565726F74736572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2445AFA3C(unsigned __int8 *a1, char *a2)
{
  return sub_2445AEFD4(*a1, *a2);
}

unint64_t sub_2445AFA4C()
{
  unint64_t result = qword_268E8D100;
  if (!qword_268E8D100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D100);
  }
  return result;
}

uint64_t sub_2445AFAA0()
{
  return sub_2445EF988();
}

uint64_t sub_2445AFAE8()
{
  return sub_2445AF690();
}

uint64_t sub_2445AFAF0()
{
  return sub_2445EF988();
}

uint64_t sub_2445AFB34@<X0>(char *a1@<X8>)
{
  return AppInstallRequestType.init(rawValue:)(a1);
}

unint64_t sub_2445AFB40@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = AppInstallRequestType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2445AFB68()
{
  return sub_2445EF228();
}

uint64_t sub_2445AFBC8()
{
  return sub_2445EF208();
}

unsigned char *storeEnumTagSinglePayload for AppInstallRequestType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445AFCE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppInstallRequestType()
{
  return &type metadata for AppInstallRequestType;
}

unint64_t sub_2445AFD1C()
{
  unint64_t result = qword_268E8D108;
  if (!qword_268E8D108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D108);
  }
  return result;
}

uint64_t DDMRemoveManagedAppRequest.declarationIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DDMRemoveManagedAppRequest.declarationIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DDMRemoveManagedAppRequest.declarationIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t DDMRemoveManagedAppRequest.init(declarationIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t DDMRemoveManagedAppRequest.request()()
{
  uint64_t v2 = v0[1];
  *(void *)(v1 + 40) = *v0;
  *(void *)(v1 + 48) = v2;
  return MEMORY[0x270FA2498](sub_2445AFE24, 0, 0);
}

uint64_t sub_2445AFE24()
{
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[5];
  uint64_t v2 = swift_bridgeObjectRetain();
  v0[2] = v1;
  v0[4] = v0 + 2;
  v0[3] = v2;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))&aHP[*(int *)aHP];
  swift_bridgeObjectRetain();
  int v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *int v3 = v0;
  v3[1] = sub_2445A7308;
  return v5((uint64_t)(v0 + 4), (uint64_t)sub_2445AFF44, 0);
}

void sub_2445AFF44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DDMRemoveManagedAppRequest.request()()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  v3[0] = v2;
  v3[1] = v1;
  unsigned int v4 = v3;
  swift_bridgeObjectRetain_n();
  sub_2445ABE68(&v4, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t (*)(), uint64_t))sub_2445B0014);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_2445B0014(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_2445B0020(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = (void *)sub_2445EEF38();
  void v12[4] = a4;
  v12[5] = a5;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 1107296256;
  void v12[2] = sub_2445D5428;
  v12[3] = a6;
  char v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_removeManagedAppWithDeclarationIdentifier_reply_, v10, v11);
  _Block_release(v11);
}

ValueMetadata *type metadata accessor for DDMRemoveManagedAppRequest()
{
  return &type metadata for DDMRemoveManagedAppRequest;
}

uint64_t DDMPurchaseMethod.description.getter()
{
  if (*v0) {
    return 0x74736566696E614DLL;
  }
  else {
    return 0xD000000000000017;
  }
}

BOOL static DDMPurchaseMethod.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DDMPurchaseMethod.hash(into:)()
{
  return sub_2445EF958();
}

BOOL sub_2445B0194(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_2445B01AC()
{
  if (*v0) {
    return 0x74736566696E616DLL;
  }
  else {
    return 0xD000000000000015;
  }
}

uint64_t sub_2445B01EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445B10D0(a1, a2);
  *a3 = result;
  return result;
}

void sub_2445B0214(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_2445B0220(uint64_t a1)
{
  unint64_t v2 = sub_2445B062C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445B025C(uint64_t a1)
{
  unint64_t v2 = sub_2445B062C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445B0298(uint64_t a1)
{
  unint64_t v2 = sub_2445B0680();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445B02D4(uint64_t a1)
{
  unint64_t v2 = sub_2445B0680();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445B0310(uint64_t a1)
{
  unint64_t v2 = sub_2445B06D4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445B034C(uint64_t a1)
{
  unint64_t v2 = sub_2445B06D4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DDMPurchaseMethod.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D118);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D120);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D128);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445B062C();
  sub_2445EFA18();
  char v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_2445B0680();
    uint64_t v14 = v18;
    sub_2445EF748();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_2445B06D4();
    sub_2445EF748();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

unint64_t sub_2445B062C()
{
  unint64_t result = qword_268E8D130;
  if (!qword_268E8D130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D130);
  }
  return result;
}

unint64_t sub_2445B0680()
{
  unint64_t result = qword_268E8D138;
  if (!qword_268E8D138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D138);
  }
  return result;
}

unint64_t sub_2445B06D4()
{
  unint64_t result = qword_268E8D140;
  if (!qword_268E8D140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D140);
  }
  return result;
}

uint64_t DDMPurchaseMethod.hashValue.getter()
{
  return sub_2445EF988();
}

uint64_t DDMPurchaseMethod.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D148);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D150);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D158);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445B062C();
  char v11 = v32;
  sub_2445EF9E8();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_2445EF728();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_2445EF5A8();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CEB0);
    *char v22 = &type metadata for DDMPurchaseMethod;
    sub_2445EF678();
    sub_2445EF598();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_2445B0680();
    uint64_t v18 = v14;
    sub_2445EF668();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_2445B06D4();
    sub_2445EF668();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_0(v23);
}

unint64_t sub_2445B0BCC()
{
  unint64_t result = qword_268E8D160;
  if (!qword_268E8D160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D160);
  }
  return result;
}

uint64_t sub_2445B0C20@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DDMPurchaseMethod.init(from:)(a1, a2);
}

uint64_t sub_2445B0C38(void *a1)
{
  return DDMPurchaseMethod.encode(to:)(a1);
}

uint64_t sub_2445B0C50()
{
  if (*v0) {
    return 0x74736566696E614DLL;
  }
  else {
    return 0xD000000000000017;
  }
}

ValueMetadata *type metadata accessor for DDMPurchaseMethod()
{
  return &type metadata for DDMPurchaseMethod;
}

uint64_t getEnumTagSinglePayload for OAuthInvalidateRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s22ManagedAppDistribution17DDMPurchaseMethodOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445B0E04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_2445B0E2C(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DDMPurchaseMethod.CodingKeys()
{
  return &type metadata for DDMPurchaseMethod.CodingKeys;
}

ValueMetadata *type metadata accessor for DDMPurchaseMethod.VolumePurchaseProgramCodingKeys()
{
  return &type metadata for DDMPurchaseMethod.VolumePurchaseProgramCodingKeys;
}

ValueMetadata *type metadata accessor for DDMPurchaseMethod.ManifestCodingKeys()
{
  return &type metadata for DDMPurchaseMethod.ManifestCodingKeys;
}

unint64_t sub_2445B0E6C()
{
  unint64_t result = qword_268E8D168;
  if (!qword_268E8D168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D168);
  }
  return result;
}

unint64_t sub_2445B0EC4()
{
  unint64_t result = qword_268E8D170;
  if (!qword_268E8D170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D170);
  }
  return result;
}

unint64_t sub_2445B0F1C()
{
  unint64_t result = qword_268E8D178;
  if (!qword_268E8D178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D178);
  }
  return result;
}

unint64_t sub_2445B0F74()
{
  unint64_t result = qword_268E8D180;
  if (!qword_268E8D180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D180);
  }
  return result;
}

unint64_t sub_2445B0FCC()
{
  unint64_t result = qword_268E8D188;
  if (!qword_268E8D188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D188);
  }
  return result;
}

unint64_t sub_2445B1024()
{
  unint64_t result = qword_268E8D190;
  if (!qword_268E8D190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D190);
  }
  return result;
}

unint64_t sub_2445B107C()
{
  unint64_t result = qword_268E8D198;
  if (!qword_268E8D198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D198);
  }
  return result;
}

uint64_t sub_2445B10D0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000002445F90A0 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74736566696E616DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BOOL static RestoreRequestType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t RestoreRequestType.hash(into:)()
{
  return sub_2445EF958();
}

uint64_t sub_2445B1208(uint64_t a1)
{
  unint64_t v2 = sub_2445B1720();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445B1244(uint64_t a1)
{
  unint64_t v2 = sub_2445B1720();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445B1280()
{
  if (*v0) {
    return 0x7465736572;
  }
  else {
    return 0x61727473746F6F62;
  }
}

uint64_t sub_2445B12BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445B2ABC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445B12E4(uint64_t a1)
{
  unint64_t v2 = sub_2445B1678();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445B1320(uint64_t a1)
{
  unint64_t v2 = sub_2445B1678();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445B135C(uint64_t a1)
{
  unint64_t v2 = sub_2445B16CC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445B1398(uint64_t a1)
{
  unint64_t v2 = sub_2445B16CC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RestoreRequestType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D1A0);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D1A8);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  BOOL v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D1B0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445B1678();
  sub_2445EFA18();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_2445B16CC();
    uint64_t v14 = v18;
    sub_2445EF748();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_2445B1720();
    sub_2445EF748();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

unint64_t sub_2445B1678()
{
  unint64_t result = qword_268E8D1B8;
  if (!qword_268E8D1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D1B8);
  }
  return result;
}

unint64_t sub_2445B16CC()
{
  unint64_t result = qword_268E8D1C0;
  if (!qword_268E8D1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D1C0);
  }
  return result;
}

unint64_t sub_2445B1720()
{
  unint64_t result = qword_268E8D1C8;
  if (!qword_268E8D1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D1C8);
  }
  return result;
}

uint64_t RestoreRequestType.hashValue.getter()
{
  return sub_2445EF988();
}

uint64_t RestoreRequestType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D1D0);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D1D8);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  BOOL v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D1E0);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445B1678();
  char v11 = v32;
  sub_2445EF9E8();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_2445EF728();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_2445EF5A8();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CEB0);
    *char v22 = &type metadata for RestoreRequestType;
    sub_2445EF678();
    sub_2445EF598();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_2445B16CC();
    uint64_t v18 = v14;
    sub_2445EF668();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_2445B1720();
    sub_2445EF668();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_0(v23);
}

uint64_t sub_2445B1C14@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return RestoreRequestType.init(from:)(a1, a2);
}

uint64_t sub_2445B1C2C(void *a1)
{
  return RestoreRequestType.encode(to:)(a1);
}

void RestoreRequest.requestType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *RestoreRequest.init(_:)@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t RestoreRequest.request()()
{
  *(unsigned char *)(v1 + 41) = *v0;
  return MEMORY[0x270FA2498](sub_2445B1C80, 0, 0);
}

uint64_t sub_2445B1C80()
{
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  char v1 = *(unsigned char *)(v0 + 41);
  sub_24459A3C8();
  sub_24459A41C();
  *(unsigned char *)(v0 + 40) = v1;
  *(void *)(v0 + 16) = v0 + 40;
  uint64_t v4 = (char *)&dword_268E8CBF8 + dword_268E8CBF8;
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *unint64_t v2 = v0;
  v2[1] = sub_2445B1D94;
  return ((uint64_t (*)(uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v4)(v0 + 16, sub_2445B1ED8, 0);
}

uint64_t sub_2445B1D94()
{
  *(void *)(*(void *)v1 + 32) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_2445B1EC0;
  }
  else {
    unint64_t v2 = sub_2445B1EA8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2445B1EA8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2445B1EC0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2445B1ED8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)sub_2445EEF38();
  void v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_2445D5428;
  v10[3] = &block_descriptor_5;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_handleRestore_reply_, v8, v9);
  _Block_release(v9);
}

uint64_t sub_2445B1FB4()
{
  return 0x5474736575716572;
}

uint64_t sub_2445B1FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x5474736575716572 && a2 == 0xEB00000000657079)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2445EF848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2445B2084(uint64_t a1)
{
  unint64_t v2 = sub_2445B23DC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445B20C0(uint64_t a1)
{
  unint64_t v2 = sub_2445B23DC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RestoreRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D1F0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445B23DC();
  sub_2445EFA18();
  char v10 = v7;
  sub_2445B2430();
  sub_2445EF7D8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RestoreRequest.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D208);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445B23DC();
  sub_2445EF9E8();
  if (!v2)
  {
    sub_2445B2484();
    sub_2445EF708();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2445B23AC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return RestoreRequest.init(from:)(a1, a2);
}

uint64_t sub_2445B23C4(void *a1)
{
  return RestoreRequest.encode(to:)(a1);
}

unint64_t sub_2445B23DC()
{
  unint64_t result = qword_268E8D1F8;
  if (!qword_268E8D1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D1F8);
  }
  return result;
}

unint64_t sub_2445B2430()
{
  unint64_t result = qword_268E8D200;
  if (!qword_268E8D200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D200);
  }
  return result;
}

unint64_t sub_2445B2484()
{
  unint64_t result = qword_268E8D210;
  if (!qword_268E8D210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D210);
  }
  return result;
}

unint64_t sub_2445B24DC()
{
  unint64_t result = qword_268E8D218;
  if (!qword_268E8D218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D218);
  }
  return result;
}

ValueMetadata *type metadata accessor for RestoreRequestType()
{
  return &type metadata for RestoreRequestType;
}

ValueMetadata *type metadata accessor for RestoreRequest()
{
  return &type metadata for RestoreRequest;
}

unsigned char *storeEnumTagSinglePayload for RestoreRequest.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2445B25F0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RestoreRequest.CodingKeys()
{
  return &type metadata for RestoreRequest.CodingKeys;
}

unsigned char *_s22ManagedAppDistribution18RestoreRequestTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445B26F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RestoreRequestType.CodingKeys()
{
  return &type metadata for RestoreRequestType.CodingKeys;
}

ValueMetadata *type metadata accessor for RestoreRequestType.BootstrapCodingKeys()
{
  return &type metadata for RestoreRequestType.BootstrapCodingKeys;
}

ValueMetadata *type metadata accessor for RestoreRequestType.ResetCodingKeys()
{
  return &type metadata for RestoreRequestType.ResetCodingKeys;
}

unint64_t sub_2445B2750()
{
  unint64_t result = qword_268E8D220;
  if (!qword_268E8D220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D220);
  }
  return result;
}

unint64_t sub_2445B27A8()
{
  unint64_t result = qword_268E8D228;
  if (!qword_268E8D228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D228);
  }
  return result;
}

unint64_t sub_2445B2800()
{
  unint64_t result = qword_268E8D230;
  if (!qword_268E8D230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D230);
  }
  return result;
}

unint64_t sub_2445B2858()
{
  unint64_t result = qword_268E8D238;
  if (!qword_268E8D238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D238);
  }
  return result;
}

unint64_t sub_2445B28B0()
{
  unint64_t result = qword_268E8D240;
  if (!qword_268E8D240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D240);
  }
  return result;
}

unint64_t sub_2445B2908()
{
  unint64_t result = qword_268E8D248;
  if (!qword_268E8D248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D248);
  }
  return result;
}

unint64_t sub_2445B2960()
{
  unint64_t result = qword_268E8D250;
  if (!qword_268E8D250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D250);
  }
  return result;
}

unint64_t sub_2445B29B8()
{
  unint64_t result = qword_268E8D258;
  if (!qword_268E8D258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D258);
  }
  return result;
}

unint64_t sub_2445B2A10()
{
  unint64_t result = qword_268E8D260;
  if (!qword_268E8D260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D260);
  }
  return result;
}

unint64_t sub_2445B2A68()
{
  unint64_t result = qword_268E8D268;
  if (!qword_268E8D268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D268);
  }
  return result;
}

uint64_t sub_2445B2ABC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61727473746F6F62 && a2 == 0xE900000000000070;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7465736572 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t VPPInstallRequest.RequestType.init(rawValue:)@<X0>(unint64_t result@<X0>, unsigned char *a2@<X8>)
{
  unsigned int v2 = 0x2010003u >> (8 * result);
  if (result >= 4) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

uint64_t VPPInstallRequest.RequestType.rawValue.getter()
{
  return *v0 + 1;
}

uint64_t sub_2445B2BE4()
{
  return sub_2445EF988();
}

uint64_t sub_2445B2C2C()
{
  return sub_2445EF958();
}

uint64_t sub_2445B2C5C()
{
  return sub_2445EF988();
}

unint64_t sub_2445B2CA0@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return VPPInstallRequest.RequestType.init(rawValue:)(*a1, a2);
}

void sub_2445B2CA8(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

uint64_t sub_2445B2CB8()
{
  return sub_2445EF238();
}

uint64_t sub_2445B2D18()
{
  return sub_2445EF218();
}

uint64_t VPPInstallRequest.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2445EEF88();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t VPPInstallRequest.accountIdentifier.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for VPPInstallRequest() + 20));
}

uint64_t type metadata accessor for VPPInstallRequest()
{
  uint64_t result = qword_268E8D2B8;
  if (!qword_268E8D2B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t VPPInstallRequest.appIdentifier.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for VPPInstallRequest() + 24);
  uint64_t v2 = *(void *)v1;
  sub_24458565C(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
  return v2;
}

uint64_t VPPInstallRequest.requestType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for VPPInstallRequest();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t VPPInstallRequest.evid.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for VPPInstallRequest() + 32));
}

uint64_t VPPInstallRequest.init(appIdentifier:requestType:accountIdentifier:evid:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  char v17 = *a4;
  uint64_t v18 = (int *)type metadata accessor for VPPInstallRequest();
  uint64_t v19 = a9 + v18[5];
  *(void *)uint64_t v19 = a5;
  *(unsigned char *)(v19 + 8) = a6 & 1;
  uint64_t v20 = a9 + v18[6];
  *(void *)uint64_t v20 = a1;
  *(void *)(v20 + 8) = a2;
  *(unsigned char *)(v20 + 16) = a3 & 1;
  uint64_t result = sub_2445EEF78();
  *(unsigned char *)(a9 + v18[7]) = v17;
  uint64_t v22 = a9 + v18[8];
  *(void *)uint64_t v22 = a7;
  *(unsigned char *)(v22 + 8) = a8 & 1;
  return result;
}

uint64_t VPPInstallRequest.requestInstall()()
{
  v1[3] = v0;
  type metadata accessor for VPPInstallRequest();
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2445B3058, 0, 0);
}

uint64_t sub_2445B3058()
{
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  sub_2445B3D54(v0[3], v1);
  sub_2445B3F10(&qword_268E8CBE8, (void (*)(uint64_t))type metadata accessor for VPPInstallRequest);
  sub_2445B3F10(&qword_268E8CBF0, (void (*)(uint64_t))type metadata accessor for VPPInstallRequest);
  sub_2445B3D54(v1, v2);
  v0[2] = v2;
  uint64_t v5 = (char *)&dword_268E8CBE0 + dword_268E8CBE0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_2445B31D8;
  return ((uint64_t (*)(void *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v5)(v0 + 2, sub_2445B33EC, 0);
}

uint64_t sub_2445B31D8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_2445B336C;
  }
  else
  {
    sub_2445B3DB8(*(void *)(v2 + 32));
    uint64_t v3 = sub_2445B32F4;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2445B32F4()
{
  sub_2445B3DB8(*(void *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2445B336C()
{
  uint64_t v1 = v0[5];
  sub_2445B3DB8(v0[4]);
  sub_2445B3DB8(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

void sub_2445B33EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)sub_2445EEF38();
  void v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_2445D5428;
  v10[3] = &block_descriptor_6;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_handleVPPInstallRequest_reply_, v8, v9);
  _Block_release(v9);
}

unint64_t sub_2445B34C8()
{
  unint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x746E656449707061;
      break;
    case 3:
      unint64_t result = 0x5474736575716572;
      break;
    case 4:
      unint64_t result = 1684633189;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2445B3578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445B4AF0(a1, a2);
  *a3 = result;
  return result;
}

void sub_2445B35A0(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_2445B35AC(uint64_t a1)
{
  unint64_t v2 = sub_2445B3E14();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445B35E8(uint64_t a1)
{
  unint64_t v2 = sub_2445B3E14();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VPPInstallRequest.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D278);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445B3E14();
  sub_2445EFA18();
  LOBYTE(v15) = 0;
  sub_2445EEF88();
  sub_2445B3F10(&qword_26B0CE708, MEMORY[0x263F07508]);
  sub_2445EF7D8();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for VPPInstallRequest();
    LOBYTE(v15) = 1;
    sub_2445EF768();
    uint64_t v10 = (long long *)(v3 + *(int *)(v9 + 24));
    char v11 = *((unsigned char *)v10 + 16);
    long long v15 = *v10;
    char v16 = v11;
    char v14 = 2;
    sub_2445B3E68();
    sub_2445EF7D8();
    LOBYTE(v15) = *(unsigned char *)(v3 + *(int *)(v9 + 28));
    char v14 = 3;
    sub_2445B3EBC();
    sub_2445EF7D8();
    LOBYTE(v15) = 4;
    sub_2445EF788();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t VPPInstallRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v4 = sub_2445EEF88();
  uint64_t v29 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v30 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D298);
  uint64_t v28 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for VPPInstallRequest();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445B3E14();
  uint64_t v32 = v7;
  sub_2445EF9E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  unint64_t v26 = a1;
  uint64_t v11 = (uint64_t)v10;
  uint64_t v12 = v29;
  LOBYTE(v33) = 0;
  sub_2445B3F10(&qword_26B0CE710, MEMORY[0x263F07508]);
  uint64_t v13 = v30;
  uint64_t v14 = v31;
  sub_2445EF708();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v13, v4);
  LOBYTE(v33) = 1;
  uint64_t v15 = sub_2445EF698();
  uint64_t v16 = v11 + v8[5];
  *(void *)uint64_t v16 = v15;
  *(unsigned char *)(v16 + 8) = v17 & 1;
  char v35 = 2;
  sub_2445B3F58();
  sub_2445EF708();
  char v18 = v34;
  uint64_t v19 = v11 + v8[6];
  *(_OWORD *)uint64_t v19 = v33;
  *(unsigned char *)(v19 + 16) = v18;
  char v35 = 3;
  sub_2445B3FAC();
  sub_2445EF708();
  *(unsigned char *)(v11 + v8[7]) = v33;
  LOBYTE(v33) = 4;
  uint64_t v20 = sub_2445EF6B8();
  char v22 = v21;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v32, v14);
  uint64_t v23 = v11 + v8[8];
  *(void *)uint64_t v23 = v20;
  *(unsigned char *)(v23 + 8) = v22 & 1;
  sub_2445B3D54(v11, v27);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  return sub_2445B3DB8(v11);
}

uint64_t sub_2445B3D24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VPPInstallRequest.init(from:)(a1, a2);
}

uint64_t sub_2445B3D3C(void *a1)
{
  return VPPInstallRequest.encode(to:)(a1);
}

uint64_t sub_2445B3D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VPPInstallRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2445B3DB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VPPInstallRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2445B3E14()
{
  unint64_t result = qword_268E8D280;
  if (!qword_268E8D280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D280);
  }
  return result;
}

unint64_t sub_2445B3E68()
{
  unint64_t result = qword_268E8D288;
  if (!qword_268E8D288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D288);
  }
  return result;
}

unint64_t sub_2445B3EBC()
{
  unint64_t result = qword_268E8D290;
  if (!qword_268E8D290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D290);
  }
  return result;
}

uint64_t sub_2445B3F10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2445B3F58()
{
  unint64_t result = qword_268E8D2A0;
  if (!qword_268E8D2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D2A0);
  }
  return result;
}

unint64_t sub_2445B3FAC()
{
  unint64_t result = qword_268E8D2A8;
  if (!qword_268E8D2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D2A8);
  }
  return result;
}

unint64_t sub_2445B4004()
{
  unint64_t result = qword_268E8D2B0;
  if (!qword_268E8D2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D2B0);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for VPPInstallRequest(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2445EEF88();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = *(void *)((char *)a2 + v9);
    uint64_t v14 = *(void *)((char *)a2 + v9 + 8);
    char v15 = *((unsigned char *)a2 + v9 + 16);
    sub_24458565C(v13, v14, v15);
    *(void *)uint64_t v12 = v13;
    *((void *)v12 + 1) = v14;
    v12[16] = v15;
    uint64_t v16 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    char v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    *(void *)char v17 = *(void *)v18;
    v17[8] = v18[8];
  }
  return a1;
}

uint64_t destroy for VPPInstallRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2445EEF88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = *(void *)v5;
  uint64_t v7 = *(void *)(v5 + 8);
  char v8 = *(unsigned char *)(v5 + 16);

  return sub_244585A1C(v6, v7, v8);
}

uint64_t initializeWithCopy for VPPInstallRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2445EEF88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = *(void *)(a2 + v8);
  uint64_t v13 = *(void *)(a2 + v8 + 8);
  char v14 = *(unsigned char *)(a2 + v8 + 16);
  sub_24458565C(v12, v13, v14);
  *(void *)uint64_t v11 = v12;
  *(void *)(v11 + 8) = v13;
  *(unsigned char *)(v11 + 16) = v14;
  uint64_t v15 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  return a1;
}

uint64_t assignWithCopy for VPPInstallRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2445EEF88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  *(unsigned char *)(v8 + 8) = *((unsigned char *)v9 + 8);
  *(void *)uint64_t v8 = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)v13;
  uint64_t v15 = *(void *)(v13 + 8);
  char v16 = *(unsigned char *)(v13 + 16);
  sub_24458565C(*(void *)v13, v15, v16);
  uint64_t v17 = *(void *)v12;
  uint64_t v18 = *(void *)(v12 + 8);
  char v19 = *(unsigned char *)(v12 + 16);
  *(void *)uint64_t v12 = v14;
  *(void *)(v12 + 8) = v15;
  *(unsigned char *)(v12 + 16) = v16;
  sub_244585A1C(v17, v18, v19);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  char v22 = (uint64_t *)(a2 + v20);
  uint64_t v23 = *v22;
  *(unsigned char *)(v21 + 8) = *((unsigned char *)v22 + 8);
  *(void *)uint64_t v21 = v23;
  return a1;
}

uint64_t initializeWithTake for VPPInstallRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2445EEF88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(unsigned char *)(v11 + 16) = *(unsigned char *)(v12 + 16);
  uint64_t v13 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  return a1;
}

uint64_t assignWithTake for VPPInstallRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2445EEF88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  LOBYTE(v9) = *(unsigned char *)(v12 + 16);
  uint64_t v13 = *(void *)v11;
  uint64_t v14 = *(void *)(v11 + 8);
  char v15 = *(unsigned char *)(v11 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(unsigned char *)(v11 + 16) = v9;
  sub_244585A1C(v13, v14, v15);
  uint64_t v16 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for VPPInstallRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2445B45A0);
}

uint64_t sub_2445B45A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2445EEF88();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 16);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for VPPInstallRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2445B4674);
}

uint64_t sub_2445B4674(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2445EEF88();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24) + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2445B4734()
{
  uint64_t result = sub_2445EEF88();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for VPPInstallRequest.RequestType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445B48ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VPPInstallRequest.RequestType()
{
  return &type metadata for VPPInstallRequest.RequestType;
}

unsigned char *storeEnumTagSinglePayload for VPPInstallRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445B49B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VPPInstallRequest.CodingKeys()
{
  return &type metadata for VPPInstallRequest.CodingKeys;
}

unint64_t sub_2445B49EC()
{
  unint64_t result = qword_268E8D2C8;
  if (!qword_268E8D2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D2C8);
  }
  return result;
}

unint64_t sub_2445B4A44()
{
  unint64_t result = qword_268E8D2D0;
  if (!qword_268E8D2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D2D0);
  }
  return result;
}

unint64_t sub_2445B4A9C()
{
  unint64_t result = qword_268E8D2D8;
  if (!qword_268E8D2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D2D8);
  }
  return result;
}

uint64_t sub_2445B4AF0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002445F90C0 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E656449707061 && a2 == 0xED00007265696669 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5474736575716572 && a2 == 0xEB00000000657079 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1684633189 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_2445B4D1C()
{
  unint64_t result = qword_268E8D2E0;
  if (!qword_268E8D2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D2E0);
  }
  return result;
}

uint64_t static DDMResetManagedAppInstallHistoryRequest.request()()
{
  return MEMORY[0x270FA2498](sub_2445B4D8C, 0, 0);
}

uint64_t sub_2445B4D8C()
{
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  int v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_268E8CBD8 + dword_268E8CBD8);
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_2445B4E84;
  return v3(v0 + 16, (uint64_t)sub_2445B4F98, 0);
}

uint64_t sub_2445B4E84()
{
  *(void *)(*(void *)v1 + 24) = v0;
  swift_task_dealloc();
  if (v0) {
    BOOL v2 = sub_2445B4F80;
  }
  else {
    BOOL v2 = sub_2445B1EA8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2445B4F80()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2445B4F98(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v7[4] = a4;
  v7[5] = a5;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  v7[2] = sub_2445D5428;
  v7[3] = &block_descriptor_7;
  char v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_resetManagedAppInstallHistoryWithReply_, v6);
  _Block_release(v6);
}

ValueMetadata *type metadata accessor for DDMResetManagedAppInstallHistoryRequest()
{
  return &type metadata for DDMResetManagedAppInstallHistoryRequest;
}

uint64_t OAuthInvalidateRequest.accountID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OAuthInvalidateRequest.server.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OAuthInvalidateRequest.init(accountID:server:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t OAuthInvalidateRequest.request()()
{
  *(void *)(v1 + 56) = *(void *)v0;
  *(_OWORD *)(v1 + 64) = *(_OWORD *)(v0 + 8);
  *(void *)(v1 + 80) = *(void *)(v0 + 24);
  return MEMORY[0x270FA2498](sub_2445B5100, 0, 0);
}

uint64_t sub_2445B5100()
{
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_244599F48();
  sub_244599F9C();
  v0[2] = v4;
  v0[3] = v3;
  v0[4] = v2;
  v0[6] = v0 + 2;
  v0[5] = v1;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_268E8CBC0 + dword_268E8CBC0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[11] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_2445B5250;
  return v7((uint64_t)(v0 + 6), (uint64_t)sub_2445B5478, 0);
}

uint64_t sub_2445B5250()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2445B53E8;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_2445B5378;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2445B5378()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2445B53E8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_2445B5478(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)sub_2445EEF38();
  void v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_2445D5428;
  v10[3] = &block_descriptor_8;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_oauthInvalidate_reply_, v8, v9);
  _Block_release(v9);
}

uint64_t sub_2445B5554()
{
  if (*v0) {
    return 0x726576726573;
  }
  else {
    return 0x49746E756F636361;
  }
}

uint64_t sub_2445B5590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445B5D44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445B55B8(uint64_t a1)
{
  unint64_t v2 = sub_2445B59DC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445B55F4(uint64_t a1)
{
  unint64_t v2 = sub_2445B59DC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OAuthInvalidateRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D2F8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  v10[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445B59DC();
  sub_2445EFA18();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_2445EF798();
  if (!v8)
  {
    char v11 = 1;
    sub_2445EF798();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t OAuthInvalidateRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D308);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445B59DC();
  sub_2445EF9E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v9 = sub_2445EF6C8();
  uint64_t v11 = v10;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_2445EF6C8();
  uint64_t v14 = v13;
  char v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2445B59AC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return OAuthInvalidateRequest.init(from:)(a1, a2);
}

uint64_t sub_2445B59C4(void *a1)
{
  return OAuthInvalidateRequest.encode(to:)(a1);
}

unint64_t sub_2445B59DC()
{
  unint64_t result = qword_268E8D300;
  if (!qword_268E8D300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D300);
  }
  return result;
}

void *initializeWithCopy for OAuthInvalidateRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for OAuthInvalidateRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for OAuthInvalidateRequest(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for OAuthInvalidateRequest()
{
  return &type metadata for OAuthInvalidateRequest;
}

unsigned char *storeEnumTagSinglePayload for OAuthInvalidateRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445B5C04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OAuthInvalidateRequest.CodingKeys()
{
  return &type metadata for OAuthInvalidateRequest.CodingKeys;
}

unint64_t sub_2445B5C40()
{
  unint64_t result = qword_268E8D310;
  if (!qword_268E8D310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D310);
  }
  return result;
}

unint64_t sub_2445B5C98()
{
  unint64_t result = qword_268E8D318;
  if (!qword_268E8D318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D318);
  }
  return result;
}

unint64_t sub_2445B5CF0()
{
  unint64_t result = qword_268E8D320;
  if (!qword_268E8D320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D320);
  }
  return result;
}

uint64_t sub_2445B5D44(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x49746E756F636361 && a2 == 0xE900000000000044;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726576726573 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t XPCApp.appleItemID.getter()
{
  return *(void *)v0;
}

uint64_t XPCApp.bundleID.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t XPCApp.installedMetadata.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  uint64_t v6 = v1[7];
  uint64_t v7 = v1[8];
  uint64_t v8 = v1[9];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  return sub_2445B5E98(v2, v3, v4);
}

uint64_t sub_2445B5E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 XPCApp.installedMetadata.setter(long long *a1)
{
  long long v5 = a1[1];
  long long v6 = *a1;
  __n128 v4 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  sub_2445B5F54(*(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
  *(_OWORD *)(v1 + 24) = v6;
  *(_OWORD *)(v1 + 40) = v5;
  __n128 result = v4;
  *(__n128 *)(v1 + 56) = v4;
  *(void *)(v1 + 72) = v2;
  return result;
}

uint64_t sub_2445B5F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*XPCApp.installedMetadata.modify())()
{
  return nullsub_1;
}

uint64_t XPCApp.installingMetadata.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[10];
  uint64_t v3 = v1[11];
  uint64_t v4 = v1[12];
  uint64_t v5 = v1[13];
  uint64_t v6 = v1[14];
  uint64_t v7 = v1[15];
  uint64_t v8 = v1[16];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  return sub_2445B5E98(v2, v3, v4);
}

__n128 XPCApp.installingMetadata.setter(__n128 *a1)
{
  __n128 v5 = a1[1];
  __n128 v6 = *a1;
  __n128 v4 = a1[2];
  unint64_t v2 = a1[3].n128_u64[0];
  sub_2445B5F54(v1[5].n128_i64[0], v1[5].n128_i64[1], v1[6].n128_i64[0]);
  v1[5] = v6;
  v1[6] = v5;
  __n128 result = v4;
  v1[7] = v4;
  v1[8].n128_u64[0] = v2;
  return result;
}

uint64_t (*XPCApp.installingMetadata.modify())()
{
  return nullsub_1;
}

uint64_t XPCApp.installErrorData.getter()
{
  uint64_t v1 = *(void *)(v0 + 136);
  sub_24459D728(v1, *(void *)(v0 + 144));
  return v1;
}

uint64_t XPCApp.installErrorData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_24459D73C(*(void *)(v2 + 136), *(void *)(v2 + 144));
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return result;
}

uint64_t (*XPCApp.installErrorData.modify())()
{
  return nullsub_1;
}

uint64_t XPCApp.Metadata.appleVersionID.getter()
{
  return *(void *)v0;
}

uint64_t XPCApp.Metadata.appleVersionID.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*XPCApp.Metadata.appleVersionID.modify())()
{
  return nullsub_1;
}

uint64_t XPCApp.Metadata.version.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t XPCApp.Metadata.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*XPCApp.Metadata.version.modify())()
{
  return nullsub_1;
}

uint64_t XPCApp.Metadata.shortVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t XPCApp.Metadata.shortVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*XPCApp.Metadata.shortVersion.modify())()
{
  return nullsub_1;
}

uint64_t XPCApp.Metadata.account.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t XPCApp.Metadata.account.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*XPCApp.Metadata.account.modify())()
{
  return nullsub_1;
}

uint64_t XPCApp.Metadata.init(appleVersionID:version:shortVersion:account:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = result;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

uint64_t sub_2445B62D8()
{
  uint64_t result = 0x726556656C707061;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6F6973726576;
      break;
    case 2:
      uint64_t result = 0x72655674726F6873;
      break;
    case 3:
      uint64_t result = 0x746E756F636361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2445B637C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445B85E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445B63A4(uint64_t a1)
{
  unint64_t v2 = sub_2445B6604();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445B63E0(uint64_t a1)
{
  unint64_t v2 = sub_2445B6604();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t XPCApp.Metadata.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE510);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  void v12[4] = v1[2];
  v12[5] = v8;
  uint64_t v9 = v1[3];
  void v12[2] = v1[4];
  v12[3] = v9;
  uint64_t v10 = v1[5];
  v12[0] = v1[6];
  v12[1] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445B6604();
  sub_2445EFA18();
  char v16 = 0;
  sub_2445EF7E8();
  if (!v2)
  {
    char v15 = 1;
    sub_2445EF798();
    char v14 = 2;
    sub_2445EF798();
    char v13 = 3;
    sub_2445EF758();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_2445B6604()
{
  unint64_t result = qword_26B0CE608;
  if (!qword_26B0CE608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE608);
  }
  return result;
}

uint64_t XPCApp.Metadata.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26B0CE1E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445B6604();
  sub_2445EF9E8();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    char v30 = 0;
    uint64_t v9 = sub_2445EF718();
    char v29 = 1;
    uint64_t v10 = sub_2445EF6C8();
    uint64_t v13 = v12;
    uint64_t v26 = v10;
    char v28 = 2;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_2445EF6C8();
    uint64_t v25 = v14;
    char v27 = 3;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_2445EF688();
    uint64_t v17 = v16;
    uint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v23 = v15;
    v18(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v20 = v25;
    uint64_t v19 = v26;
    *a2 = v9;
    a2[1] = v19;
    uint64_t v21 = v24;
    a2[2] = v13;
    a2[3] = v21;
    uint64_t v22 = v23;
    a2[4] = v20;
    a2[5] = v22;
    a2[6] = v17;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2445B6920@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return XPCApp.Metadata.init(from:)(a1, a2);
}

uint64_t sub_2445B6938(void *a1)
{
  return XPCApp.Metadata.encode(to:)(a1);
}

__n128 XPCApp.init(appleItemID:bundleID:installedMetadata:installingMetadata:installErrorData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8 = *(void *)(a4 + 48);
  uint64_t v9 = *(void *)(a5 + 48);
  *(void *)a8 = a1;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  long long v10 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a8 + 24) = *(_OWORD *)a4;
  *(_OWORD *)(a8 + 40) = v10;
  *(_OWORD *)(a8 + 56) = *(_OWORD *)(a4 + 32);
  *(void *)(a8 + 72) = v8;
  long long v11 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a8 + 80) = *(_OWORD *)a5;
  *(_OWORD *)(a8 + 96) = v11;
  __n128 result = *(__n128 *)(a5 + 32);
  *(__n128 *)(a8 + 112) = result;
  *(void *)(a8 + 128) = v9;
  *(void *)(a8 + 136) = a6;
  *(void *)(a8 + 144) = a7;
  return result;
}

unint64_t sub_2445B6994(char a1)
{
  unint64_t result = 0x657449656C707061;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4449656C646E7562;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2445B6A58()
{
  return sub_2445B6994(*v0);
}

uint64_t sub_2445B6A60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445B87DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445B6A88(uint64_t a1)
{
  unint64_t v2 = sub_2445B6E04();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445B6AC4(uint64_t a1)
{
  unint64_t v2 = sub_2445B6E04();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t XPCApp.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE508);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[1];
  uint64_t v34 = v1[2];
  uint64_t v35 = v7;
  uint64_t v8 = v1[3];
  uint64_t v32 = v1[4];
  uint64_t v33 = v8;
  uint64_t v31 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v28 = v1[7];
  uint64_t v29 = v9;
  uint64_t v10 = v1[8];
  uint64_t v26 = v1[9];
  uint64_t v27 = v10;
  uint64_t v19 = v1[10];
  uint64_t v20 = v1[11];
  uint64_t v11 = v1[12];
  uint64_t v24 = v1[13];
  uint64_t v25 = v11;
  uint64_t v23 = v1[14];
  uint64_t v22 = v1[15];
  uint64_t v21 = v1[16];
  uint64_t v12 = v1[18];
  uint64_t v30 = v1[17];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445B6E04();
  sub_2445EFA18();
  LOBYTE(v37) = 0;
  uint64_t v13 = v36;
  sub_2445EF7E8();
  if (!v13)
  {
    uint64_t v15 = v31;
    uint64_t v14 = v32;
    uint64_t v16 = v33;
    uint64_t v36 = v12;
    uint64_t v17 = v30;
    LOBYTE(v37) = 1;
    sub_2445EF798();
    uint64_t v37 = v16;
    uint64_t v38 = v14;
    uint64_t v39 = v15;
    uint64_t v40 = v29;
    uint64_t v41 = v28;
    uint64_t v42 = v27;
    uint64_t v43 = v26;
    char v44 = 2;
    sub_2445B6E58();
    sub_2445EF778();
    uint64_t v37 = v19;
    uint64_t v38 = v20;
    uint64_t v39 = v25;
    uint64_t v40 = v24;
    uint64_t v41 = v23;
    uint64_t v42 = v22;
    uint64_t v43 = v21;
    char v44 = 3;
    sub_2445EF778();
    uint64_t v37 = v17;
    uint64_t v38 = v36;
    char v44 = 4;
    sub_2445B6EAC();
    sub_2445EF778();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2445B6E04()
{
  unint64_t result = qword_26B0CE5F0;
  if (!qword_26B0CE5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE5F0);
  }
  return result;
}

unint64_t sub_2445B6E58()
{
  unint64_t result = qword_26B0CE428;
  if (!qword_26B0CE428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE428);
  }
  return result;
}

unint64_t sub_2445B6EAC()
{
  unint64_t result = qword_26B0CE540;
  if (!qword_26B0CE540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE540);
  }
  return result;
}

void *XPCApp.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE1D8);
  uint64_t v5 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445B6E04();
  uint64_t v54 = (uint64_t)v7;
  sub_2445EF9E8();
  if (v2)
  {
    uint64_t v55 = v2;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    sub_2445B5F54(0, 0, 0);
    sub_2445B5F54(0, 0, 0);
    return (void *)sub_24459D73C(0, 0xF000000000000000);
  }
  else
  {
    uint64_t v52 = a1;
    uint64_t v8 = v5;
    uint64_t v55 = a2;
    LOBYTE(v66) = 0;
    uint64_t v9 = v53;
    uint64_t v10 = sub_2445EF718();
    LOBYTE(v66) = 1;
    uint64_t v51 = sub_2445EF6C8();
    uint64_t v12 = v11;
    LOBYTE(v56) = 2;
    sub_2445B7548();
    swift_bridgeObjectRetain();
    sub_2445EF6A8();
    uint64_t v42 = v12;
    uint64_t v13 = v70;
    uint64_t v14 = v71;
    LOBYTE(v56) = 3;
    uint64_t v48 = v66;
    uint64_t v49 = v68;
    uint64_t v46 = v67;
    uint64_t v47 = v72;
    uint64_t v50 = v69;
    sub_2445B5E98(v66, v67, v68);
    uint64_t v15 = v54;
    sub_2445EF6A8();
    uint64_t v44 = v14;
    uint64_t v16 = v66;
    uint64_t v17 = v72;
    char v87 = 4;
    uint64_t v38 = v67;
    uint64_t v39 = v13;
    uint64_t v37 = v68;
    uint64_t v40 = v69;
    uint64_t v41 = v70;
    uint64_t v45 = v71;
    sub_2445B5E98(v66, v67, v68);
    sub_2445B759C();
    sub_2445EF6A8();
    uint64_t v43 = v17;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v15, v9);
    uint64_t v18 = v85;
    unint64_t v19 = v86;
    sub_24459D728(v85, v86);
    sub_24459D73C(0, 0xF000000000000000);
    *(void *)&long long v56 = v10;
    *((void *)&v56 + 1) = v51;
    *(void *)&long long v57 = v42;
    *((void *)&v57 + 1) = v48;
    *(void *)&long long v58 = v46;
    *((void *)&v58 + 1) = v49;
    uint64_t v53 = v18;
    uint64_t v54 = v10;
    uint64_t v20 = v38;
    *(void *)&long long v59 = v50;
    *((void *)&v59 + 1) = v39;
    *(void *)&long long v60 = v44;
    *((void *)&v60 + 1) = v47;
    *(void *)&long long v61 = v16;
    *((void *)&v61 + 1) = v38;
    uint64_t v21 = v37;
    uint64_t v35 = v16;
    unint64_t v36 = v19;
    *(void *)&long long v62 = v37;
    *((void *)&v62 + 1) = v40;
    *(void *)&long long v63 = v41;
    *((void *)&v63 + 1) = v45;
    *(void *)&long long v64 = v17;
    *((void *)&v64 + 1) = v18;
    unint64_t v65 = v19;
    sub_2445B75F0(&v56);
    sub_24459D73C(v18, v19);
    uint64_t v22 = v16;
    uint64_t v23 = v21;
    sub_2445B5F54(v22, v20, v21);
    uint64_t v25 = v46;
    uint64_t v24 = v47;
    uint64_t v26 = v39;
    uint64_t v27 = v44;
    sub_2445B5F54(v48, v46, v49);
    uint64_t v28 = v42;
    swift_bridgeObjectRelease();
    long long v29 = v63;
    uint64_t v30 = v55;
    *(_OWORD *)(v55 + 96) = v62;
    *(_OWORD *)(v30 + 112) = v29;
    *(_OWORD *)(v30 + 128) = v64;
    *(void *)(v30 + 144) = v65;
    long long v31 = v59;
    *(_OWORD *)(v30 + 32) = v58;
    *(_OWORD *)(v30 + 48) = v31;
    long long v32 = v61;
    *(_OWORD *)(v30 + 64) = v60;
    *(_OWORD *)(v30 + 80) = v32;
    long long v33 = v57;
    *(_OWORD *)uint64_t v30 = v56;
    *(_OWORD *)(v30 + 16) = v33;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
    uint64_t v66 = v54;
    uint64_t v67 = v51;
    uint64_t v68 = v28;
    uint64_t v69 = v48;
    uint64_t v70 = v25;
    uint64_t v71 = v49;
    uint64_t v72 = v50;
    uint64_t v73 = v26;
    uint64_t v74 = v27;
    uint64_t v75 = v24;
    uint64_t v76 = v35;
    uint64_t v77 = v38;
    uint64_t v78 = v23;
    uint64_t v79 = v40;
    uint64_t v80 = v41;
    uint64_t v81 = v45;
    uint64_t v82 = v43;
    uint64_t v83 = v53;
    unint64_t v84 = v36;
    return sub_2445B76C0(&v66);
  }
}

unint64_t sub_2445B7548()
{
  unint64_t result = qword_26B0CE1C0;
  if (!qword_26B0CE1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE1C0);
  }
  return result;
}

unint64_t sub_2445B759C()
{
  unint64_t result = qword_26B0CE528;
  if (!qword_26B0CE528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE528);
  }
  return result;
}

void *sub_2445B75F0(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[10];
  uint64_t v6 = a1[11];
  uint64_t v8 = a1[12];
  unint64_t v9 = a1[18];
  uint64_t v10 = a1[17];
  swift_bridgeObjectRetain();
  sub_2445B5E98(v2, v3, v4);
  sub_2445B5E98(v5, v6, v8);
  sub_24459D728(v10, v9);
  return a1;
}

void *sub_2445B76C0(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[10];
  uint64_t v6 = a1[11];
  uint64_t v8 = a1[12];
  unint64_t v9 = a1[18];
  uint64_t v10 = a1[17];
  swift_bridgeObjectRelease();
  sub_2445B5F54(v2, v3, v4);
  sub_2445B5F54(v5, v6, v8);
  sub_24459D73C(v10, v9);
  return a1;
}

void *sub_2445B7790@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return XPCApp.init(from:)(a1, a2);
}

uint64_t sub_2445B77A8(void *a1)
{
  return XPCApp.encode(to:)(a1);
}

uint64_t destroy for XPCApp(void *a1)
{
  swift_bridgeObjectRelease();
  if (a1[5])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = a1[12];
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  unint64_t v3 = a1[18];
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = a1[17];
    return sub_244599358(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for XPCApp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v4)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    uint64_t v5 = *(void *)(a2 + 48);
    uint64_t v6 = *(void *)(a2 + 56);
    *(void *)(a1 + 40) = v4;
    *(void *)(a1 + 48) = v5;
    uint64_t v7 = *(void *)(a2 + 64);
    uint64_t v8 = *(void *)(a2 + 72);
    *(void *)(a1 + 56) = v6;
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = *(void *)(a2 + 96);
    if (v9)
    {
LABEL_3:
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      uint64_t v10 = *(void *)(a2 + 104);
      uint64_t v11 = *(void *)(a2 + 112);
      *(void *)(a1 + 96) = v9;
      *(void *)(a1 + 104) = v10;
      uint64_t v12 = *(void *)(a2 + 120);
      uint64_t v13 = *(void *)(a2 + 128);
      *(void *)(a1 + 112) = v11;
      *(void *)(a1 + 120) = v12;
      *(void *)(a1 + 128) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  else
  {
    long long v14 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v14;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    uint64_t v9 = *(void *)(a2 + 96);
    if (v9) {
      goto LABEL_3;
    }
  }
  long long v15 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v15;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
LABEL_6:
  uint64_t v16 = (uint64_t *)(a2 + 136);
  unint64_t v17 = *(void *)(a2 + 144);
  if (v17 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 136) = *(_OWORD *)v16;
  }
  else
  {
    uint64_t v18 = *v16;
    sub_2445993EC(*v16, v17);
    *(void *)(a1 + 136) = v18;
    *(void *)(a1 + 144) = v17;
  }
  return a1;
}

void *assignWithCopy for XPCApp(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 3;
  uint64_t v5 = (long long *)(a2 + 3);
  uint64_t v6 = a2[5];
  if (a1[5])
  {
    if (v6)
    {
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[8] = a2[8];
      a1[9] = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2445B7C90((uint64_t)(a1 + 3));
      long long v8 = *(_OWORD *)(a2 + 5);
      long long v7 = *(_OWORD *)(a2 + 7);
      long long v9 = *v5;
      a1[9] = a2[9];
      *(_OWORD *)(a1 + 5) = v8;
      *(_OWORD *)(a1 + 7) = v7;
      *uint64_t v4 = v9;
    }
  }
  else if (v6)
  {
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    a1[9] = a2[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *v5;
    long long v11 = *(_OWORD *)(a2 + 5);
    long long v12 = *(_OWORD *)(a2 + 7);
    a1[9] = a2[9];
    *(_OWORD *)(a1 + 5) = v11;
    *(_OWORD *)(a1 + 7) = v12;
    *uint64_t v4 = v10;
  }
  uint64_t v13 = a1 + 10;
  long long v14 = (long long *)(a2 + 10);
  uint64_t v15 = a2[12];
  if (a1[12])
  {
    if (v15)
    {
      a1[10] = a2[10];
      a1[11] = a2[11];
      a1[12] = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[13] = a2[13];
      a1[14] = a2[14];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[15] = a2[15];
      a1[16] = a2[16];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2445B7C90((uint64_t)(a1 + 10));
      long long v17 = *((_OWORD *)a2 + 6);
      long long v16 = *((_OWORD *)a2 + 7);
      long long v18 = *v14;
      a1[16] = a2[16];
      *((_OWORD *)a1 + 6) = v17;
      *((_OWORD *)a1 + 7) = v16;
      *uint64_t v13 = v18;
    }
  }
  else if (v15)
  {
    a1[10] = a2[10];
    a1[11] = a2[11];
    a1[12] = a2[12];
    a1[13] = a2[13];
    a1[14] = a2[14];
    a1[15] = a2[15];
    a1[16] = a2[16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v19 = *v14;
    long long v20 = *((_OWORD *)a2 + 6);
    long long v21 = *((_OWORD *)a2 + 7);
    a1[16] = a2[16];
    *((_OWORD *)a1 + 6) = v20;
    *((_OWORD *)a1 + 7) = v21;
    *uint64_t v13 = v19;
  }
  uint64_t v22 = a2 + 17;
  unint64_t v23 = a2[18];
  if (a1[18] >> 60 != 15)
  {
    if (v23 >> 60 != 15)
    {
      uint64_t v25 = *v22;
      sub_2445993EC(*v22, v23);
      uint64_t v26 = a1[17];
      unint64_t v27 = a1[18];
      a1[17] = v25;
      a1[18] = v23;
      sub_244599358(v26, v27);
      return a1;
    }
    sub_2445B7CC0((uint64_t)(a1 + 17));
    goto LABEL_20;
  }
  if (v23 >> 60 == 15)
  {
LABEL_20:
    *(_OWORD *)(a1 + 17) = *(_OWORD *)v22;
    return a1;
  }
  uint64_t v24 = *v22;
  sub_2445993EC(*v22, v23);
  a1[17] = v24;
  a1[18] = v23;
  return a1;
}

uint64_t sub_2445B7C90(uint64_t a1)
{
  return a1;
}

uint64_t sub_2445B7CC0(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for XPCApp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    uint64_t v4 = *(void *)(a2 + 40);
    if (v4)
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(void *)(a1 + 40) = v4;
      swift_bridgeObjectRelease();
      uint64_t v5 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v5;
      swift_bridgeObjectRelease();
      uint64_t v6 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v6;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_2445B7C90(a1 + 24);
  }
  long long v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
LABEL_6:
  if (*(void *)(a1 + 96))
  {
    uint64_t v8 = *(void *)(a2 + 96);
    if (v8)
    {
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(void *)(a1 + 96) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v10;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_2445B7C90(a1 + 80);
  }
  long long v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v11;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
LABEL_11:
  long long v12 = (void *)(a2 + 136);
  unint64_t v13 = *(void *)(a1 + 144);
  if (v13 >> 60 != 15)
  {
    unint64_t v14 = *(void *)(a2 + 144);
    if (v14 >> 60 != 15)
    {
      uint64_t v15 = *(void *)(a1 + 136);
      *(void *)(a1 + 136) = *v12;
      *(void *)(a1 + 144) = v14;
      sub_244599358(v15, v13);
      return a1;
    }
    sub_2445B7CC0(a1 + 136);
  }
  *(_OWORD *)(a1 + 136) = *(_OWORD *)v12;
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCApp(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCApp(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCApp()
{
  return &type metadata for XPCApp;
}

uint64_t destroy for XPCApp.Metadata()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for XPCApp.Metadata(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for XPCApp.Metadata(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for XPCApp.Metadata(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCApp.Metadata(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCApp.Metadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCApp.Metadata()
{
  return &type metadata for XPCApp.Metadata;
}

unsigned char *storeEnumTagSinglePayload for XPCApp.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445B8298);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCApp.CodingKeys()
{
  return &type metadata for XPCApp.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for XPCApp.Metadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445B839CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCApp.Metadata.CodingKeys()
{
  return &type metadata for XPCApp.Metadata.CodingKeys;
}

unint64_t sub_2445B83D8()
{
  unint64_t result = qword_268E8D328;
  if (!qword_268E8D328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D328);
  }
  return result;
}

unint64_t sub_2445B8430()
{
  unint64_t result = qword_268E8D330;
  if (!qword_268E8D330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D330);
  }
  return result;
}

unint64_t sub_2445B8488()
{
  unint64_t result = qword_26B0CE600;
  if (!qword_26B0CE600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE600);
  }
  return result;
}

unint64_t sub_2445B84E0()
{
  unint64_t result = qword_26B0CE5F8;
  if (!qword_26B0CE5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE5F8);
  }
  return result;
}

unint64_t sub_2445B8538()
{
  unint64_t result = qword_26B0CE618;
  if (!qword_26B0CE618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE618);
  }
  return result;
}

unint64_t sub_2445B8590()
{
  unint64_t result = qword_26B0CE610;
  if (!qword_26B0CE610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE610);
  }
  return result;
}

uint64_t sub_2445B85E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726556656C707061 && a2 == 0xEE0044496E6F6973;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72655674726F6873 && a2 == 0xEC0000006E6F6973 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E756F636361 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2445B87DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657449656C707061 && a2 == 0xEB0000000044496DLL;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002445F90E0 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002445F9100 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002445F9120)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t DDMPollForUpdatesRequest.shouldInitiateUpdates.getter()
{
  return *v0;
}

uint64_t DDMPollForUpdatesRequest.shouldInitiateUpdates.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*DDMPollForUpdatesRequest.shouldInitiateUpdates.modify())()
{
  return nullsub_1;
}

uint64_t DDMPollForUpdatesRequest.init(shouldInitiateUpdates:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t DDMPollForUpdatesRequest.request()()
{
  *(unsigned char *)(v1 + 41) = *v0;
  return MEMORY[0x270FA2498](sub_2445B8A58, 0, 0);
}

uint64_t sub_2445B8A58()
{
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  char v1 = *(unsigned char *)(v0 + 41);
  sub_244599E44();
  sub_244599E98();
  *(unsigned char *)(v0 + 40) = v1;
  *(void *)(v0 + 16) = v0 + 40;
  unsigned int v4 = (char *)&dword_268E8CBA8 + dword_268E8CBA8;
  BOOL v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *BOOL v2 = v0;
  v2[1] = sub_2445B1D94;
  return ((uint64_t (*)(uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v4)(v0 + 16, sub_2445B8B6C, 0);
}

void sub_2445B8B6C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)sub_2445EEF38();
  void v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_2445D5428;
  v10[3] = &block_descriptor_9;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_pollForMediaAPIUpdates_reply_, v8, v9);
  _Block_release(v9);
}

unint64_t sub_2445B8C48()
{
  return 0xD000000000000015;
}

uint64_t sub_2445B8C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445B94B0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2445B8C90(uint64_t a1)
{
  unint64_t v2 = sub_2445B90DC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445B8CCC(uint64_t a1)
{
  unint64_t v2 = sub_2445B90DC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DDMPollForUpdatesRequest.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D340);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445B90DC();
  sub_2445EFA18();
  sub_2445EF7A8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t DDMPollForUpdatesRequest.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D350);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445B90DC();
  sub_2445EF9E8();
  if (!v2)
  {
    char v9 = sub_2445EF6D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2445B8F90@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DDMPollForUpdatesRequest.init(from:)(a1, a2);
}

uint64_t sub_2445B8FA8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D340);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445B90DC();
  sub_2445EFA18();
  sub_2445EF7A8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_2445B90DC()
{
  unint64_t result = qword_268E8D348;
  if (!qword_268E8D348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D348);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DDMPollForUpdatesRequest(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DDMPollForUpdatesRequest(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445B929CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DDMPollForUpdatesRequest()
{
  return &type metadata for DDMPollForUpdatesRequest;
}

unsigned char *storeEnumTagSinglePayload for DDMPollForUpdatesRequest.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2445B9370);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DDMPollForUpdatesRequest.CodingKeys()
{
  return &type metadata for DDMPollForUpdatesRequest.CodingKeys;
}

unint64_t sub_2445B93AC()
{
  unint64_t result = qword_268E8D358;
  if (!qword_268E8D358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D358);
  }
  return result;
}

unint64_t sub_2445B9404()
{
  unint64_t result = qword_268E8D360;
  if (!qword_268E8D360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D360);
  }
  return result;
}

unint64_t sub_2445B945C()
{
  unint64_t result = qword_268E8D368;
  if (!qword_268E8D368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D368);
  }
  return result;
}

uint64_t sub_2445B94B0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000002445F9140)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_2445EF848();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_2445B9538()
{
  unint64_t result = 0x6574617267696DLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7465736572;
      break;
    case 2:
      unint64_t result = 0xD000000000000025;
      break;
    case 3:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2445B95D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445BB900(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445B95FC(uint64_t a1)
{
  unint64_t v2 = sub_2445B9D2C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445B9638(uint64_t a1)
{
  unint64_t v2 = sub_2445B9D2C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445B9674(uint64_t a1)
{
  unint64_t v2 = sub_2445B9D80();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445B96B0(uint64_t a1)
{
  unint64_t v2 = sub_2445B9D80();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445B96EC(uint64_t a1)
{
  unint64_t v2 = sub_2445B9DD4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445B9728(uint64_t a1)
{
  unint64_t v2 = sub_2445B9DD4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445B9764(uint64_t a1)
{
  unint64_t v2 = sub_2445B9E7C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445B97A0(uint64_t a1)
{
  unint64_t v2 = sub_2445B9E7C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445B97DC(uint64_t a1)
{
  unint64_t v2 = sub_2445B9E28();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445B9818(uint64_t a1)
{
  unint64_t v2 = sub_2445B9E28();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DiagnosticRequestType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D370);
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v36 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D378);
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  MEMORY[0x270FA5388](v5);
  long long v33 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D380);
  uint64_t v31 = *(void *)(v7 - 8);
  uint64_t v32 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v30 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D388);
  uint64_t v28 = *(void *)(v9 - 8);
  uint64_t v29 = v9;
  MEMORY[0x270FA5388](v9);
  unint64_t v27 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D390);
  uint64_t v39 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v1;
  uint64_t v15 = v1[1];
  int v16 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445B9D2C();
  sub_2445EFA18();
  if (v16)
  {
    long long v17 = v13;
    if (v16 == 1)
    {
      char v43 = 3;
      sub_2445B9D80();
      long long v18 = v36;
      sub_2445EF748();
      uint64_t v19 = v38;
      sub_2445EF798();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v19);
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v17, v11);
    }
    else
    {
      unint64_t v23 = (uint64_t (**)(char *, uint64_t))(v39 + 8);
      if (v14 | v15)
      {
        char v41 = 1;
        sub_2445B9E28();
        uint64_t v24 = v30;
        sub_2445EF748();
        uint64_t v26 = v31;
        uint64_t v25 = v32;
      }
      else
      {
        char v40 = 0;
        sub_2445B9E7C();
        uint64_t v24 = v27;
        sub_2445EF748();
        uint64_t v26 = v28;
        uint64_t v25 = v29;
      }
      (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v25);
      return (*v23)(v13, v11);
    }
  }
  else
  {
    char v42 = 2;
    sub_2445B9DD4();
    long long v21 = v33;
    sub_2445EF748();
    uint64_t v22 = v35;
    sub_2445EF798();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v13, v11);
  }
}

unint64_t sub_2445B9D2C()
{
  unint64_t result = qword_268E8D398;
  if (!qword_268E8D398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D398);
  }
  return result;
}

unint64_t sub_2445B9D80()
{
  unint64_t result = qword_268E8D3A0;
  if (!qword_268E8D3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D3A0);
  }
  return result;
}

unint64_t sub_2445B9DD4()
{
  unint64_t result = qword_268E8D3A8;
  if (!qword_268E8D3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D3A8);
  }
  return result;
}

unint64_t sub_2445B9E28()
{
  unint64_t result = qword_268E8D3B0;
  if (!qword_268E8D3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D3B0);
  }
  return result;
}

unint64_t sub_2445B9E7C()
{
  unint64_t result = qword_268E8D3B8;
  if (!qword_268E8D3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D3B8);
  }
  return result;
}

uint64_t DiagnosticRequestType.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D3C0);
  uint64_t v51 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v53 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D3C8);
  uint64_t v50 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v52 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D3D0);
  uint64_t v47 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D3D8);
  uint64_t v46 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D3E0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_2445B9D2C();
  uint64_t v15 = v56;
  sub_2445EF9E8();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
  }
  int v16 = v9;
  uint64_t v43 = v7;
  uint64_t v44 = 0;
  long long v17 = v6;
  long long v18 = v52;
  uint64_t v19 = v53;
  uint64_t v20 = v54;
  uint64_t v56 = v11;
  uint64_t v21 = sub_2445EF728();
  uint64_t v22 = (char *)v21;
  if (*(void *)(v21 + 16) != 1)
  {
    uint64_t v27 = sub_2445EF5A8();
    swift_allocError();
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CEB0);
    *uint64_t v29 = &type metadata for DiagnosticRequestType;
    sub_2445EF678();
    sub_2445EF598();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v13, v10);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
  }
  switch(*(unsigned char *)(v21 + 32))
  {
    case 1:
      char v58 = 1;
      sub_2445B9E28();
      uint64_t v30 = v44;
      sub_2445EF668();
      if (v30) {
        goto LABEL_12;
      }
      uint64_t v44 = 0;
      (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v13, v10);
      uint64_t v25 = 0;
      char v26 = 2;
      uint64_t v24 = 1;
      goto LABEL_16;
    case 2:
      char v59 = 2;
      sub_2445B9DD4();
      uint64_t v31 = v18;
      uint64_t v32 = v44;
      sub_2445EF668();
      if (v32) {
        goto LABEL_12;
      }
      uint64_t v53 = v22;
      uint64_t v33 = v45;
      uint64_t v34 = sub_2445EF6C8();
      uint64_t v35 = v56;
      uint64_t v44 = 0;
      uint64_t v24 = v34;
      uint64_t v25 = v41;
      (*(void (**)(char *, uint64_t))(v50 + 8))(v31, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v10);
      char v26 = 0;
      goto LABEL_16;
    case 3:
      char v60 = 3;
      sub_2445B9D80();
      uint64_t v36 = v44;
      sub_2445EF668();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v38 = v48;
      uint64_t v39 = sub_2445EF6C8();
      uint64_t v40 = v56;
      uint64_t v44 = 0;
      uint64_t v24 = v39;
      uint64_t v25 = v42;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v19, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v10);
      char v26 = 1;
      goto LABEL_16;
    default:
      char v57 = 0;
      sub_2445B9E7C();
      uint64_t v23 = v44;
      sub_2445EF668();
      uint64_t v24 = v23;
      if (v23)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v13, v10);
        return __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
      }
      uint64_t v44 = 0;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v13, v10);
      uint64_t v25 = 0;
      char v26 = 2;
LABEL_16:
      *(void *)uint64_t v20 = v24;
      *(void *)(v20 + 8) = v25;
      *(unsigned char *)(v20 + 16) = v26;
      uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
      break;
  }
  return result;
}

uint64_t sub_2445BA648@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DiagnosticRequestType.init(from:)(a1, a2);
}

uint64_t sub_2445BA660(void *a1)
{
  return DiagnosticRequestType.encode(to:)(a1);
}

uint64_t DiagnosticRequest.requestType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_244599DFC(v2, v3, v4);
}

__n128 DiagnosticRequest.init(_:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unsigned __int8 v2 = a1[1].n128_u8[0];
  __n128 result = *a1;
  *a2 = *a1;
  a2[1].n128_u8[0] = v2;
  return result;
}

uint64_t DiagnosticRequest.request()()
{
  *(_OWORD *)(v1 + 48) = *(_OWORD *)v0;
  *(unsigned char *)(v1 + 33) = *(unsigned char *)(v0 + 16);
  return MEMORY[0x270FA2498](sub_2445BA6CC, 0, 0);
}

uint64_t sub_2445BA6CC()
{
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 33);
  sub_244599DFC(v1, v2, v3);
  sub_244599CE0();
  sub_244599D34();
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v2;
  *(unsigned char *)(v0 + 32) = v3;
  *(void *)(v0 + 40) = v0 + 16;
  sub_244599DFC(v1, v2, v3);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_268E8CB90 + dword_268E8CB90);
  unsigned __int8 v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  *unsigned __int8 v4 = v0;
  v4[1] = sub_2445BA818;
  return v6(v0 + 40, (uint64_t)sub_2445BAA28, 0);
}

uint64_t sub_2445BA818()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unsigned __int8 v3 = sub_2445BA9A0;
  }
  else
  {
    sub_244599DC4(*(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32));
    unsigned __int8 v3 = sub_2445BA938;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2445BA938()
{
  sub_244599DC4(*(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 33));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2445BA9A0()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 33);
  sub_244599DC4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  sub_244599DC4(v1, v2, v3);
  unsigned __int8 v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_2445BAA28(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)sub_2445EEF38();
  void v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_2445D5428;
  v10[3] = &block_descriptor_10;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_handleDiagnostics_reply_, v8, v9);
  _Block_release(v9);
}

uint64_t sub_2445BAB04(uint64_t a1)
{
  unint64_t v2 = sub_2445BAE7C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445BAB40(uint64_t a1)
{
  unint64_t v2 = sub_2445BAE7C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DiagnosticRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D3F0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  HIDWORD(v10) = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445BAE7C();
  sub_2445EFA18();
  uint64_t v11 = v8;
  uint64_t v12 = v7;
  char v13 = BYTE4(v10);
  sub_2445BAED0();
  sub_2445EF7D8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DiagnosticRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D408);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445BAE7C();
  sub_2445EF9E8();
  if (!v2)
  {
    sub_2445BAF24();
    sub_2445EF708();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v9 = v12;
    *(_OWORD *)a2 = v11;
    *(unsigned char *)(a2 + 16) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2445BAE4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DiagnosticRequest.init(from:)(a1, a2);
}

uint64_t sub_2445BAE64(void *a1)
{
  return DiagnosticRequest.encode(to:)(a1);
}

unint64_t sub_2445BAE7C()
{
  unint64_t result = qword_268E8D3F8;
  if (!qword_268E8D3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D3F8);
  }
  return result;
}

unint64_t sub_2445BAED0()
{
  unint64_t result = qword_268E8D400;
  if (!qword_268E8D400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D400);
  }
  return result;
}

unint64_t sub_2445BAF24()
{
  unint64_t result = qword_268E8D410;
  if (!qword_268E8D410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D410);
  }
  return result;
}

uint64_t sub_2445BAF8C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_2445BAFA4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DiagnosticRequestType()
{
  return &type metadata for DiagnosticRequestType;
}

uint64_t destroy for DiagnosticRequest(uint64_t a1)
{
  return sub_244599DC4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s22ManagedAppDistribution21DiagnosticRequestTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_244599DFC(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s22ManagedAppDistribution21DiagnosticRequestTypeOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_244599DFC(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_244599DC4(v6, v7, v8);
  return a1;
}

uint64_t _s22ManagedAppDistribution21DiagnosticRequestTypeOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_244599DC4(v4, v5, v6);
  return a1;
}

uint64_t _s22ManagedAppDistribution21DiagnosticRequestTypeOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s22ManagedAppDistribution21DiagnosticRequestTypeOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiagnosticRequest()
{
  return &type metadata for DiagnosticRequest;
}

ValueMetadata *type metadata accessor for DiagnosticRequest.CodingKeys()
{
  return &type metadata for DiagnosticRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DiagnosticRequestType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445BB244);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiagnosticRequestType.CodingKeys()
{
  return &type metadata for DiagnosticRequestType.CodingKeys;
}

ValueMetadata *type metadata accessor for DiagnosticRequestType.MigrateCodingKeys()
{
  return &type metadata for DiagnosticRequestType.MigrateCodingKeys;
}

ValueMetadata *type metadata accessor for DiagnosticRequestType.ResetCodingKeys()
{
  return &type metadata for DiagnosticRequestType.ResetCodingKeys;
}

ValueMetadata *type metadata accessor for DiagnosticRequestType.DisplayRestoreMarketplaceForPromotionCodingKeys()
{
  return &type metadata for DiagnosticRequestType.DisplayRestoreMarketplaceForPromotionCodingKeys;
}

unsigned char *_s22ManagedAppDistribution17DiagnosticRequestV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2445BB348);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiagnosticRequestType.DisplayRestoreGenericMarketplaceCodingKeys()
{
  return &type metadata for DiagnosticRequestType.DisplayRestoreGenericMarketplaceCodingKeys;
}

unint64_t sub_2445BB384()
{
  unint64_t result = qword_268E8D418;
  if (!qword_268E8D418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D418);
  }
  return result;
}

unint64_t sub_2445BB3DC()
{
  unint64_t result = qword_268E8D420;
  if (!qword_268E8D420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D420);
  }
  return result;
}

unint64_t sub_2445BB434()
{
  unint64_t result = qword_268E8D428;
  if (!qword_268E8D428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D428);
  }
  return result;
}

unint64_t sub_2445BB48C()
{
  unint64_t result = qword_268E8D430;
  if (!qword_268E8D430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D430);
  }
  return result;
}

unint64_t sub_2445BB4E4()
{
  unint64_t result = qword_268E8D438;
  if (!qword_268E8D438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D438);
  }
  return result;
}

unint64_t sub_2445BB53C()
{
  unint64_t result = qword_268E8D440;
  if (!qword_268E8D440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D440);
  }
  return result;
}

unint64_t sub_2445BB594()
{
  unint64_t result = qword_268E8D448;
  if (!qword_268E8D448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D448);
  }
  return result;
}

unint64_t sub_2445BB5EC()
{
  unint64_t result = qword_268E8D450;
  if (!qword_268E8D450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D450);
  }
  return result;
}

unint64_t sub_2445BB644()
{
  unint64_t result = qword_268E8D458;
  if (!qword_268E8D458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D458);
  }
  return result;
}

unint64_t sub_2445BB69C()
{
  unint64_t result = qword_268E8D460;
  if (!qword_268E8D460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D460);
  }
  return result;
}

unint64_t sub_2445BB6F4()
{
  unint64_t result = qword_268E8D468;
  if (!qword_268E8D468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D468);
  }
  return result;
}

unint64_t sub_2445BB74C()
{
  unint64_t result = qword_268E8D470;
  if (!qword_268E8D470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D470);
  }
  return result;
}

unint64_t sub_2445BB7A4()
{
  unint64_t result = qword_268E8D478;
  if (!qword_268E8D478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D478);
  }
  return result;
}

unint64_t sub_2445BB7FC()
{
  unint64_t result = qword_268E8D480;
  if (!qword_268E8D480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D480);
  }
  return result;
}

unint64_t sub_2445BB854()
{
  unint64_t result = qword_268E8D488;
  if (!qword_268E8D488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D488);
  }
  return result;
}

unint64_t sub_2445BB8AC()
{
  unint64_t result = qword_268E8D490;
  if (!qword_268E8D490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D490);
  }
  return result;
}

uint64_t sub_2445BB900(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574617267696DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7465736572 && a2 == 0xE500000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000002445F9160 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000002445F9190)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t ManagedAppLibrary.ManagedApps.AsyncIterator.next()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_2445BBAD0, 0, 0);
}

uint64_t sub_2445BBAD0()
{
  unsigned int v4 = (uint64_t (*)(uint64_t, void, void))(**(void **)(v0 + 24) + ***(int ***)(v0 + 24));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2445BBBAC;
  uint64_t v2 = *(void *)(v0 + 16);
  return v4(v2, 0, 0);
}

uint64_t sub_2445BBBAC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t ManagedAppLibrary.ManagedApps.AsyncIterator.next(isolation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*v3 + *(int *)*v3);
  unsigned __int8 v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *unsigned __int8 v8 = v4;
  v8[1] = sub_2445BBD94;
  return v10(a1, a2, a3);
}

uint64_t sub_2445BBD94()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_2445BBE88(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_2445BBAD0, 0, 0);
}

uint64_t sub_2445BBEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*v3 + *(int *)*v3);
  unsigned __int8 v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *unsigned __int8 v8 = v4;
  v8[1] = sub_2445BBF98;
  return v10(a1, a2, a3);
}

uint64_t sub_2445BBF98()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t _s22ManagedAppDistribution0aB7LibraryC13availableAppsAC0aF0Vvg_0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D508);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v4 = objc_msgSend(self, sel_processInfo);
  unsigned __int8 v5 = objc_msgSend(v4, sel_isiOSAppOnMac);

  char v6 = (void (**)(void *, void, uint64_t))(v1 + 104);
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D4F8);
    (*v6)(v3, *MEMORY[0x263F8F580], v0);
  }
  else
  {
    *uint64_t v3 = 1;
    (*v6)(v3, *MEMORY[0x263F8F570], v0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D4F8);
  }
  return sub_2445EF3C8();
}

uint64_t sub_2445BC240()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D510);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = 3;
  char v6 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D518);
  sub_2445EF358();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_2445EF368();
}

uint64_t sub_2445BC344(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D518);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D520);
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v3 + 32))(v6 + *(void *)(*(void *)v6 + 88), v5, v2);
  if (qword_26B0CE768 != -1) {
    uint64_t v7 = swift_once();
  }
  MEMORY[0x270FA5388](v7);
  *(void *)&v13[-16] = v6;
  *(void *)&v13[-8] = v8;
  uint64_t v10 = (uint64_t)&v9[4];
  uint64_t v11 = v9 + 26;
  os_unfair_lock_lock(v9 + 26);
  sub_2445BCF70(v10);
  os_unfair_lock_unlock(v11);
  return sub_2445EF348();
}

void sub_2445BC524(uint64_t a1)
{
  if (qword_26B0CE768 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x270FA5388](a1);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 26;
  os_unfair_lock_lock(v1 + 26);
  sub_2445BCF94(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t ManagedAppLibrary.ManagedApps.makeAsyncIterator()@<X0>(void *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D4A8);
  uint64_t v2 = swift_allocBox();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D4B0);
  uint64_t result = sub_2445EF388();
  *a1 = &unk_268E8D4C0;
  a1[1] = v2;
  return result;
}

uint64_t sub_2445BC648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  v3[8] = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D4A8);
  v3[9] = swift_projectBox();
  if (a2)
  {
    swift_getObjectType();
    uint64_t v5 = sub_2445EF2C8();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  return MEMORY[0x270FA2498](sub_2445BC704, v5, v7);
}

uint64_t sub_2445BC704()
{
  swift_beginAccess();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[10] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2445BC7B8;
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[5];
  return MEMORY[0x270FA1F68](v5, v3, v4, v2);
}

uint64_t sub_2445BC7B8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_endAccess();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_2445BC8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_2445BCFB0;
  return sub_2445BC648(a1, a2, a3);
}

uint64_t sub_2445BC96C()
{
  return MEMORY[0x263F8E658];
}

unint64_t sub_2445BC97C()
{
  unint64_t result = qword_268E8D4D8;
  if (!qword_268E8D4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D4D8);
  }
  return result;
}

uint64_t sub_2445BC9D0@<X0>(void *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D4A8);
  uint64_t v3 = swift_allocBox();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D4B0);
  sub_2445EF388();
  *a1 = &unk_268E8D500;
  a1[1] = v3;

  return sub_2445BCF14(v1);
}

uint64_t _s11ManagedAppsVwCP(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D4B0);
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t _s11ManagedAppsVwxx(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D4B0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t _s11ManagedAppsVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D4B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s11ManagedAppsVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D4B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s11ManagedAppsVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D4B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s11ManagedAppsVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D4B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t _s11ManagedAppsVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2445BCCD8);
}

uint64_t sub_2445BCCD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D4B0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t _s11ManagedAppsVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2445BCD5C);
}

uint64_t sub_2445BCD5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D4B0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ManagedAppLibrary.ManagedApps()
{
  uint64_t result = qword_268E8D4E0;
  if (!qword_268E8D4E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2445BCE1C()
{
  sub_2445BCEA8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_2445BCEA8()
{
  if (!qword_268E8D4F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E8D4F8);
    unint64_t v0 = sub_2445EF3B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268E8D4F0);
    }
  }
}

ValueMetadata *type metadata accessor for ManagedAppLibrary.ManagedApps.AsyncIterator()
{
  return &type metadata for ManagedAppLibrary.ManagedApps.AsyncIterator;
}

uint64_t sub_2445BCF14(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ManagedAppLibrary.ManagedApps();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2445BCF70(uint64_t a1)
{
  return sub_2445D8978(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_2445BCF8C(uint64_t a1)
{
}

uint64_t sub_2445BCF94(uint64_t a1)
{
  return sub_2445D8D78(a1, *(void *)(v1 + 16));
}

uint64_t InstallEnterpriseManifestRequest.manifestURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2445EEF28();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t InstallEnterpriseManifestRequest.manifestURL.setter(uint64_t a1)
{
  uint64_t v3 = sub_2445EEF28();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*InstallEnterpriseManifestRequest.manifestURL.modify())()
{
  return nullsub_1;
}

uint64_t InstallEnterpriseManifestRequest.init(manifestURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_2445EEF28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t InstallEnterpriseManifestRequest.request()()
{
  v1[3] = v0;
  type metadata accessor for InstallEnterpriseManifestRequest();
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2445BD1B0, 0, 0);
}

uint64_t sub_2445BD1B0()
{
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  sub_2445BDD34(v0[3], v1);
  sub_2445BDE48(&qword_268E8CB80, (void (*)(uint64_t))type metadata accessor for InstallEnterpriseManifestRequest);
  sub_2445BDE48(&qword_268E8CB88, (void (*)(uint64_t))type metadata accessor for InstallEnterpriseManifestRequest);
  sub_2445BDD34(v1, v2);
  v0[2] = v2;
  uint64_t v5 = (char *)&dword_268E8CB78 + dword_268E8CB78;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_2445BD330;
  return ((uint64_t (*)(void *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v5)(v0 + 2, sub_2445BD590, 0);
}

uint64_t sub_2445BD330()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_2445BD4C4;
  }
  else
  {
    sub_2445BDD98(*(void *)(v2 + 32));
    uint64_t v3 = sub_2445BD44C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2445BD44C()
{
  sub_2445BDD98(*(void *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2445BD4C4()
{
  uint64_t v1 = v0[5];
  sub_2445BDD98(v0[4]);
  sub_2445BDD98(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t type metadata accessor for InstallEnterpriseManifestRequest()
{
  uint64_t result = qword_268E8D548;
  if (!qword_268E8D548) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2445BD590(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)sub_2445EEF38();
  void v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_2445D5428;
  v10[3] = &block_descriptor_11;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_installEnterpriseManifest_reply_, v8, v9);
  _Block_release(v9);
}

uint64_t sub_2445BD66C()
{
  return 0x74736566696E616DLL;
}

uint64_t sub_2445BD68C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x74736566696E616DLL && a2 == 0xEB000000004C5255)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2445EF848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2445BD73C(uint64_t a1)
{
  unint64_t v2 = sub_2445BDDF4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445BD778(uint64_t a1)
{
  unint64_t v2 = sub_2445BDDF4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InstallEnterpriseManifestRequest.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D530);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445BDDF4();
  sub_2445EFA18();
  sub_2445EEF28();
  sub_2445BDE48(&qword_268E8C9E0, MEMORY[0x263F06EA8]);
  sub_2445EF7D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t InstallEnterpriseManifestRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_2445EEF28();
  uint64_t v14 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  long long v17 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D540);
  uint64_t v16 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for InstallEnterpriseManifestRequest();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445BDDF4();
  sub_2445EF9E8();
  if (!v2)
  {
    sub_2445BDE48(&qword_268E8CA38, MEMORY[0x263F06EA8]);
    sub_2445EF708();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v17, v4);
    sub_2445BDE90((uint64_t)v11, v15);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2445BDBA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return InstallEnterpriseManifestRequest.init(from:)(a1, a2);
}

uint64_t sub_2445BDBC0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D530);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445BDDF4();
  sub_2445EFA18();
  sub_2445EEF28();
  sub_2445BDE48(&qword_268E8C9E0, MEMORY[0x263F06EA8]);
  sub_2445EF7D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_2445BDD34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InstallEnterpriseManifestRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2445BDD98(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InstallEnterpriseManifestRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2445BDDF4()
{
  unint64_t result = qword_268E8D538;
  if (!qword_268E8D538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D538);
  }
  return result;
}

uint64_t sub_2445BDE48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2445BDE90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InstallEnterpriseManifestRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for InstallEnterpriseManifestRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2445EEF28();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for InstallEnterpriseManifestRequest(uint64_t a1)
{
  uint64_t v2 = sub_2445EEF28();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for InstallEnterpriseManifestRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2445EEF28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for InstallEnterpriseManifestRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2445EEF28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for InstallEnterpriseManifestRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2445EEF28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for InstallEnterpriseManifestRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2445EEF28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for InstallEnterpriseManifestRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2445BE168);
}

uint64_t sub_2445BE168(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2445EEF28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for InstallEnterpriseManifestRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2445BE1E8);
}

uint64_t sub_2445BE1E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2445EEF28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_2445BE258()
{
  uint64_t result = sub_2445EEF28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InstallEnterpriseManifestRequest.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2445BE380);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for InstallEnterpriseManifestRequest.CodingKeys()
{
  return &type metadata for InstallEnterpriseManifestRequest.CodingKeys;
}

unint64_t sub_2445BE3BC()
{
  unint64_t result = qword_268E8D558;
  if (!qword_268E8D558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D558);
  }
  return result;
}

unint64_t sub_2445BE414()
{
  unint64_t result = qword_268E8D560;
  if (!qword_268E8D560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D560);
  }
  return result;
}

unint64_t sub_2445BE46C()
{
  unint64_t result = qword_268E8D568;
  if (!qword_268E8D568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D568);
  }
  return result;
}

uint64_t ServiceConnection.withAsyncService<each A>(arguments:body:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  uint64_t v9 = (void *)(a5 & 0xFFFFFFFFFFFFFFFELL);
  unsigned char v8[2] = a1;
  v8[3] = a2;
  if (a4 == 1)
  {
    uint64_t TupleTypeMetadata = *v9;
    unint64_t v11 = 16;
  }
  else
  {
    unint64_t v11 = (8 * a4 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v13 = swift_task_alloc();
    if (a4)
    {
      unint64_t v14 = 0;
      if (a4 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v13 - (void)v9) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v14 = a4 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v15 = (long long *)(v9 + 2);
      uint64_t v16 = (_OWORD *)(v13 + 16);
      unint64_t v17 = a4 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v18 = *v15;
        *(v16 - 1) = *(v15 - 1);
        *uint64_t v16 = v18;
        v15 += 2;
        v16 += 2;
        v17 -= 4;
      }
      while (v17);
      if (v14 != a4)
      {
LABEL_9:
        unint64_t v19 = a4 - v14;
        uint64_t v20 = v14;
        uint64_t v21 = (void *)(v13 + 8 * v14);
        uint64_t v22 = &v9[v20];
        do
        {
          uint64_t v23 = *v22++;
          *v21++ = v23;
          --v19;
        }
        while (v19);
      }
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    swift_task_dealloc();
  }
  v8[10] = v11;
  v8[11] = TupleTypeMetadata;
  v8[12] = *(void *)(TupleTypeMetadata - 8);
  v8[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2445BE650, 0, 0);
}

uint64_t sub_2445BE650()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = swift_task_alloc();
  v0[14] = v2;
  if (v1)
  {
    uint64_t v3 = 0;
    unint64_t v4 = v0[6] & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = 32;
    do
    {
      uint64_t v8 = v0[5];
      if (v8 == 1) {
        int v6 = 0;
      }
      else {
        int v6 = *(_DWORD *)(v0[11] + v5);
      }
      uint64_t v7 = v0[13] + v6;
      (*(void (**)(uint64_t, void))(*(void *)(*(void *)(v4 + 8 * v3) - 8) + 16))(v7, *(void *)(v0[2] + 8 * v3));
      *(void *)(v2 + 8 * v3++) = v7;
      v5 += 16;
    }
    while (v3 != v8);
  }
  uint64_t v9 = (void *)swift_task_alloc();
  v0[15] = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB30);
  sub_2445BF128(&qword_268E8D580);
  sub_2445BF128(&qword_268E8D588);
  *uint64_t v9 = v0;
  v9[1] = sub_2445BE828;
  uint64_t v11 = v0[6];
  uint64_t v12 = v0[7];
  uint64_t v13 = v0[4];
  unint64_t v14 = v0[5];
  uint64_t v15 = v0[3];
  return ServiceConnection.withAsyncService<each A, B>(arguments:body:)((uint64_t)(v0 + 17), v2, v15, v13, v14, v11, v10, v12);
}

uint64_t sub_2445BE828()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_2445BE9C0;
  }
  else
  {
    (*(void (**)(void, void))(v2[12] + 8))(v2[13], v2[11]);
    uint64_t v3 = sub_2445BE954;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2445BE954()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2445BE9C0()
{
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t ServiceConnection.withAsyncService<each A, B>(arguments:body:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 136) = v27;
  *(void *)(v9 + 144) = v8;
  *(_OWORD *)(v9 + 120) = v26;
  *(void *)(v9 + 104) = a7;
  *(void *)(v9 + 112) = a8;
  *(void *)(v9 + 88) = a5;
  *(void *)(v9 + 96) = a6;
  *(void *)(v9 + 72) = a3;
  *(void *)(v9 + 80) = a4;
  *(void *)(v9 + 56) = a1;
  *(void *)(v9 + 64) = a2;
  *(void *)(v9 + 152) = *v8;
  uint64_t v10 = (void *)(a6 & 0xFFFFFFFFFFFFFFFELL);
  if (a5 == 1)
  {
    uint64_t TupleTypeMetadata = *v10;
  }
  else
  {
    uint64_t v13 = swift_task_alloc();
    if (a5)
    {
      unint64_t v14 = 0;
      if (a5 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v13 - (void)v10) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v14 = a5 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v15 = (long long *)(v10 + 2);
      uint64_t v16 = (_OWORD *)(v13 + 16);
      unint64_t v17 = a5 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v18 = *v15;
        *(v16 - 1) = *(v15 - 1);
        *uint64_t v16 = v18;
        v15 += 2;
        v16 += 2;
        v17 -= 4;
      }
      while (v17);
      if (v14 != a5)
      {
LABEL_9:
        unint64_t v19 = a5 - v14;
        uint64_t v20 = v14;
        uint64_t v21 = (void *)(v13 + 8 * v14);
        uint64_t v22 = &v10[v20];
        do
        {
          uint64_t v23 = *v22++;
          *v21++ = v23;
          --v19;
        }
        while (v19);
      }
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    swift_task_dealloc();
  }
  *(void *)(v9 + 160) = TupleTypeMetadata;
  *(void *)(v9 + 168) = *(void *)(TupleTypeMetadata - 8);
  *(void *)(v9 + 176) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2445BEC0C, 0, 0);
}

uint64_t sub_2445BEC0C()
{
  *(void *)(v0 + 40) = &type metadata for FeatureFlag;
  *(void *)(v0 + 48) = sub_244598F38();
  char v1 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 88);
    uint64_t v3 = swift_task_alloc();
    *(void *)(v0 + 184) = v3;
    if (v2)
    {
      uint64_t v4 = 0;
      unint64_t v5 = *(void *)(v0 + 96) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v6 = 32;
      do
      {
        uint64_t v9 = *(void *)(v0 + 88);
        if (v9 == 1) {
          int v7 = 0;
        }
        else {
          int v7 = *(_DWORD *)(*(void *)(v0 + 160) + v6);
        }
        uint64_t v8 = *(void *)(v0 + 176) + v7;
        (*(void (**)(uint64_t, void))(*(void *)(*(void *)(v5 + 8 * v4) - 8) + 16))(v8, *(void *)(*(void *)(v0 + 64) + 8 * v4));
        *(void *)(v3 + 8 * v4++) = v8;
        v6 += 16;
      }
      while (v4 != v9);
      unint64_t v11 = *(void *)(v0 + 88);
    }
    else
    {
      unint64_t v11 = 0;
    }
    uint64_t v12 = encodeXPCValues<each A>(_:)(v3, v11, *(void *)(v0 + 96), *(void *)(v0 + 120));
    uint64_t v14 = v13;
    *(void *)(v0 + 192) = v12;
    *(void *)(v0 + 200) = v13;
    uint64_t v18 = *(void *)(v0 + 144);
    uint64_t v17 = *(void *)(v0 + 152);
    uint64_t v19 = *(void *)(v0 + 88);
    long long v26 = *(_OWORD *)(v0 + 112);
    long long v27 = *(_OWORD *)(v0 + 96);
    long long v25 = *(_OWORD *)(v0 + 128);
    long long v28 = *(_OWORD *)(v0 + 72);
    (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
    uint64_t v20 = *(void *)(v18 + 16);
    uint64_t v21 = swift_task_alloc();
    *(void *)(v0 + 208) = v21;
    *(void *)(v21 + 16) = v19;
    *(_OWORD *)(v21 + 24) = v27;
    *(_OWORD *)(v21 + 40) = v26;
    *(_OWORD *)(v21 + 56) = v25;
    *(void *)(v21 + 72) = v20;
    *(_OWORD *)(v21 + 80) = v28;
    *(void *)(v21 + 96) = v12;
    *(void *)(v21 + 104) = v14;
    *(void *)(v21 + 112) = v17;
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_2445BEF14;
    uint64_t v23 = *(void *)(v0 + 104);
    uint64_t v24 = *(void *)(v0 + 56);
    return MEMORY[0x270FA2360](v24, 0, 0, 0xD000000000000021, 0x80000002445F8BC0, sub_2445C059C, v21, v23);
  }
  else
  {
    sub_244598F8C();
    swift_allocError();
    *uint64_t v10 = 0;
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
}

uint64_t sub_2445BEF14()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2445BF0A8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2445BF030;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2445BF030()
{
  sub_244599358(v0[24], v0[25]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_2445BF0A8()
{
  sub_244599358(v0[24], v0[25]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_2445BF128(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E8CB30);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ServiceConnection.withSyncService<each A, B>(arguments:body:)@<X0>(uint64_t *a1@<X0>, void (*a2)(uint64_t, uint64_t, unint64_t, uint64_t (*)(uint64_t a1, unint64_t a2), void *)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v73 = a3;
  uint64_t v74 = a2;
  uint64_t v70 = a8;
  uint64_t v71 = *v10;
  uint64_t v79 = a5;
  uint64_t v15 = (uint64_t *)(a5 & 0xFFFFFFFFFFFFFFFELL);
  unint64_t v16 = sub_244598F8C();
  uint64_t v69 = sub_2445EF998();
  uint64_t v17 = MEMORY[0x270FA5388](v69);
  uint64_t v72 = (uint64_t)&v63 - v18;
  uint64_t v80 = a7;
  uint64_t v78 = a6;
  if (a4 == 1)
  {
    uint64_t TupleTypeMetadata = *v15;
  }
  else
  {
    MEMORY[0x270FA5388](v17);
    uint64_t v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a4)
    {
      unint64_t v22 = 0;
      if (a4 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v21 - (char *)v15) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v22 = a4 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v23 = (long long *)(v15 + 2);
      uint64_t v24 = v21 + 16;
      unint64_t v25 = a4 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v26 = *v23;
        *(v24 - 1) = *(v23 - 1);
        *uint64_t v24 = v26;
        v23 += 2;
        v24 += 2;
        v25 -= 4;
      }
      while (v25);
      if (v22 != a4)
      {
LABEL_9:
        unint64_t v27 = a4 - v22;
        uint64_t v28 = v22;
        uint64_t v29 = &v21[8 * v22];
        uint64_t v30 = &v15[v28];
        do
        {
          uint64_t v31 = *v30++;
          *(void *)uint64_t v29 = v31;
          v29 += 8;
          --v27;
        }
        while (v27);
      }
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  uint64_t v81 = &v63;
  uint64_t v77 = TupleTypeMetadata;
  uint64_t v75 = *(void *)(TupleTypeMetadata - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata);
  uint64_t v33 = (char *)&v63 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = &type metadata for FeatureFlag;
  unint64_t v84 = sub_244598F38();
  char v34 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  if (v34)
  {
    unint64_t v68 = v16;
    type metadata accessor for SyncXPCResult();
    uint64_t v35 = SyncXPCResult.__allocating_init()();
    uint64_t v36 = (void *)v10[2];
    uint64_t v37 = (void *)swift_allocObject();
    v37[2] = a4;
    _OWORD v37[3] = swift_allocateMetadataPack();
    v37[4] = swift_allocateWitnessTablePack();
    v37[5] = swift_allocateWitnessTablePack();
    v37[6] = a9;
    uint64_t v67 = a9;
    v37[7] = a10;
    v37[8] = v35;
    unint64_t v84 = (unint64_t)sub_2445C1300;
    uint64_t v85 = v37;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2445C07F4;
    uint64_t v83 = (ValueMetadata *)&block_descriptor_12;
    uint64_t v38 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    id v39 = objc_msgSend(v36, sel_synchronousRemoteObjectProxyWithErrorHandler_, v38);
    _Block_release(v38);
    sub_2445EF4A8();
    swift_unknownObjectRelease();
    sub_244584198((uint64_t)v86, (uint64_t)aBlock);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
    uint64_t v40 = swift_dynamicCast();
    if (v40)
    {
      uint64_t v63 = a10;
      uint64_t v66 = v35;
      unint64_t v65 = &v63;
      uint64_t v64 = v87;
      MEMORY[0x270FA5388](v40);
      uint64_t v42 = (char *)&v63 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (a4)
      {
        uint64_t v43 = (int *)(v77 + 32);
        uint64_t v44 = (char **)((char *)&v63 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
        unint64_t v45 = a4;
        do
        {
          if (a4 == 1) {
            int v46 = 0;
          }
          else {
            int v46 = *v43;
          }
          uint64_t v48 = *v15++;
          uint64_t v47 = v48;
          uint64_t v49 = &v33[v46];
          uint64_t v50 = *a1++;
          (*(void (**)(char *, uint64_t))(*(void *)(v47 - 8) + 16))(v49, v50);
          *v44++ = v49;
          v43 += 4;
          --v45;
        }
        while (v45);
      }
      uint64_t v54 = v76;
      uint64_t v55 = encodeXPCValues<each A>(_:)((uint64_t)v42, a4, v79, v80);
      if (v54)
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v86);
        swift_unknownObjectRelease();
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v33, v77);
      }
      else
      {
        uint64_t v57 = v55;
        unint64_t v58 = v56;
        (*(void (**)(char *, uint64_t))(v75 + 8))(v33, v77);
        char v59 = (void *)swift_allocObject();
        v59[2] = a4;
        v59[3] = swift_allocateMetadataPack();
        v59[4] = swift_allocateWitnessTablePack();
        uint64_t WitnessTablePack = swift_allocateWitnessTablePack();
        uint64_t v61 = v67;
        v59[5] = WitnessTablePack;
        v59[6] = v61;
        uint64_t v62 = v66;
        v59[7] = v63;
        v59[8] = v62;
        v59[9] = v71;
        swift_retain();
        v74(v64, v57, v58, sub_2445C147C, v59);
        swift_release();
        SyncXPCResult.result.getter(v72);
        sub_2445C14B0(v69, (uint64_t)aBlock, v70);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v86);
        swift_release();
        sub_244599358(v57, v58);
        return swift_unknownObjectRelease();
      }
    }
    else
    {
      swift_allocError();
      unsigned char *v53 = 0;
      swift_willThrow();
      swift_release();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v86);
    }
  }
  else
  {
    swift_allocError();
    *uint64_t v51 = 0;
    return swift_willThrow();
  }
}

uint64_t ServiceConnection.withSyncService<each A>(arguments:body:)(uint64_t *a1, void (*a2)(uint64_t, uint64_t, unint64_t, uint64_t (*)(uint64_t a1, unint64_t a2), void *), uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v44 = a6;
  uint64_t v45 = a7;
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  uint64_t v8 = a1;
  uint64_t v43 = a5;
  uint64_t v9 = (uint64_t *)(a5 & 0xFFFFFFFFFFFFFFFELL);
  uint64_t v10 = 8 * a4;
  if (a4 == 1)
  {
    uint64_t TupleTypeMetadata = *v9;
  }
  else
  {
    MEMORY[0x270FA5388](a1);
    uint64_t v12 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a4)
    {
      unint64_t v13 = 0;
      if (a4 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v12 - (char *)v9) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v13 = a4 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v14 = (long long *)(v9 + 2);
      uint64_t v15 = v12 + 16;
      unint64_t v16 = a4 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v17 = *v14;
        *(v15 - 1) = *(v14 - 1);
        *uint64_t v15 = v17;
        v14 += 2;
        v15 += 2;
        v16 -= 4;
      }
      while (v16);
      if (v13 != a4)
      {
LABEL_9:
        unint64_t v18 = a4 - v13;
        uint64_t v19 = v13;
        uint64_t v20 = &v12[8 * v13];
        uint64_t v21 = &v9[v19];
        do
        {
          uint64_t v22 = *v21++;
          *(void *)uint64_t v20 = v22;
          v20 += 8;
          --v18;
        }
        while (v18);
      }
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  uint64_t v40 = v38;
  uint64_t v46 = TupleTypeMetadata;
  uint64_t v39 = *(void *)(TupleTypeMetadata - 8);
  uint64_t v23 = MEMORY[0x270FA5388](TupleTypeMetadata);
  unint64_t v25 = (char *)v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[1] = v38;
  MEMORY[0x270FA5388](v23);
  long long v26 = (void *)((char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a4)
  {
    unint64_t v27 = (int *)(v46 + 32);
    uint64_t v28 = (char **)((char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v29 = a4;
    do
    {
      if (a4 == 1) {
        int v30 = 0;
      }
      else {
        int v30 = *v27;
      }
      uint64_t v32 = *v9++;
      uint64_t v31 = v32;
      uint64_t v33 = &v25[v30];
      uint64_t v34 = *v8++;
      (*(void (**)(char *, uint64_t))(*(void *)(v31 - 8) + 16))(v33, v34);
      *v28++ = v33;
      v27 += 4;
      --v29;
    }
    while (v29);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CB30);
  uint64_t v35 = sub_2445BF128(&qword_268E8D580);
  uint64_t v36 = sub_2445BF128(&qword_268E8D588);
  ServiceConnection.withSyncService<each A, B>(arguments:body:)(v26, v41, v42, a4, v43, v44, v45, (uint64_t)&v47, v35, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v25, v46);
}

uint64_t sub_2445BFBD4()
{
  type metadata accessor for ServiceConnection();
  swift_allocObject();
  uint64_t result = ServiceConnection.init()();
  if (result) {
    qword_26B0CE6F0 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t ServiceConnection.__allocating_init()()
{
  return ServiceConnection.init()();
}

uint64_t static ServiceConnection.shared.getter()
{
  if (qword_26B0CE740 != -1) {
    swift_once();
  }

  return swift_retain();
}

id ServiceConnection.connection.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t ServiceConnection.init()()
{
  uint64_t v22 = &type metadata for FeatureFlag;
  unint64_t v23 = sub_244598F38();
  char v1 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v19);
  if (v1)
  {
    id v2 = objc_allocWithZone(MEMORY[0x263F08D68]);
    uint64_t v3 = (void *)sub_2445EF118();
    id v4 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v3, 0);

    *(void *)(v0 + 16) = v4;
    unint64_t v5 = self;
    id v6 = v4;
    id v7 = objc_msgSend(v5, sel_interfaceWithProtocol_, &unk_26F93C220);
    objc_msgSend(v6, sel_setExportedInterface_, v7);

    uint64_t v8 = qword_26B0CE768;
    id v9 = *(id *)(v0 + 16);
    if (v8 != -1) {
      swift_once();
    }
    objc_msgSend(v9, sel_setExportedObject_, qword_26B0CE6F8);

    id v10 = *(id *)(v0 + 16);
    id v11 = objc_msgSend(v5, sel_interfaceWithProtocol_, &unk_26F93CB88);
    objc_msgSend(v10, sel_setRemoteObjectInterface_, v11);

    uint64_t v12 = *(void **)(v0 + 16);
    unint64_t v23 = (unint64_t)sub_2445BFFCC;
    uint64_t v24 = 0;
    uint64_t v19 = MEMORY[0x263EF8330];
    uint64_t v20 = 1107296256;
    uint64_t v21 = sub_2445BFFD8;
    uint64_t v22 = (ValueMetadata *)&block_descriptor_9;
    unint64_t v13 = _Block_copy(&v19);
    id v14 = v12;
    objc_msgSend(v14, sel_setInterruptionHandler_, v13);
    _Block_release(v13);

    uint64_t v15 = *(void **)(v0 + 16);
    unint64_t v23 = (unint64_t)sub_2445C001C;
    uint64_t v24 = 0;
    uint64_t v19 = MEMORY[0x263EF8330];
    uint64_t v20 = 1107296256;
    uint64_t v21 = sub_2445BFFD8;
    uint64_t v22 = (ValueMetadata *)&block_descriptor_12;
    unint64_t v16 = _Block_copy(&v19);
    id v17 = v15;
    objc_msgSend(v17, sel_setInvalidationHandler_, v16);
    _Block_release(v16);

    objc_msgSend(*(id *)(v0 + 16), sel_resume);
  }
  else
  {
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v0;
}

void sub_2445BFFCC()
{
}

uint64_t sub_2445BFFD8(uint64_t a1)
{
  char v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_2445C001C()
{
}

void sub_2445C0028(const char *a1)
{
  if (qword_26B0CE668 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2445EF038();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B0CE650);
  oslog = sub_2445EF018();
  os_log_type_t v3 = sub_2445EF438();
  if (os_log_type_enabled(oslog, v3))
  {
    id v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v4 = 0;
    _os_log_impl(&dword_244580000, oslog, v3, a1, v4, 2u);
    MEMORY[0x245694340](v4, -1, -1);
  }
}

uint64_t ServiceConnection.deinit()
{
  char v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_invalidate);

  return v0;
}

uint64_t ServiceConnection.__deallocating_deinit()
{
  char v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_invalidate);

  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t sub_2445C01A0(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, unint64_t a2), char *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v48 = a7;
  uint64_t v49 = a5;
  uint64_t v50 = a6;
  uint64_t v51 = a4;
  uint64_t v52 = a3;
  id v53 = a2;
  uint64_t v56 = a13;
  uint64_t v57 = a14;
  uint64_t v55 = a12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B0CE838);
  uint64_t v16 = sub_2445EF308();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v42 - v19;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v54 = a1;
  uint64_t v44 = v17 + 16;
  uint64_t v43 = v21;
  v21((char *)&v42 - v19, a1, v16);
  uint64_t v22 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v23 = (v22 + 72) & ~v22;
  uint64_t v24 = v23 + v18;
  uint64_t v42 = v22 | 7;
  unint64_t v25 = (char *)swift_allocObject();
  *((void *)v25 + 2) = a8;
  uint64_t v45 = a9;
  *((void *)v25 + 3) = swift_allocateMetadataPack();
  *((void *)v25 + 4) = a10;
  uint64_t v46 = a10;
  uint64_t v47 = a11;
  *((void *)v25 + 5) = swift_allocateWitnessTablePack();
  uint64_t WitnessTablePack = swift_allocateWitnessTablePack();
  uint64_t v27 = v56;
  *((void *)v25 + 6) = WitnessTablePack;
  *((void *)v25 + 7) = v27;
  *((void *)v25 + 8) = v57;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v28(&v25[v23], v20, v16);
  aBlock[4] = sub_2445C16D4;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2445C07F4;
  void aBlock[3] = &block_descriptor_19_0;
  unint64_t v29 = _Block_copy(aBlock);
  swift_release();
  id v30 = objc_msgSend(v53, sel_remoteObjectProxyWithErrorHandler_, v29);
  _Block_release(v29);
  sub_2445EF4A8();
  swift_unknownObjectRelease();
  sub_244584198((uint64_t)aBlock, (uint64_t)v59);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE728);
  if (swift_dynamicCast())
  {
    uint64_t v31 = v58;
    v43(v20, v54, v16);
    unint64_t v32 = (v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v33 = (char *)swift_allocObject();
    *((void *)v33 + 2) = a8;
    uint64_t MetadataPack = swift_allocateMetadataPack();
    uint64_t v35 = v46;
    *((void *)v33 + 3) = MetadataPack;
    *((void *)v33 + 4) = v35;
    *((void *)v33 + 5) = swift_allocateWitnessTablePack();
    uint64_t v36 = swift_allocateWitnessTablePack();
    uint64_t v37 = v56;
    *((void *)v33 + 6) = v36;
    *((void *)v33 + 7) = v37;
    *((void *)v33 + 8) = v57;
    v28(&v33[v23], v20, v16);
    uint64_t v38 = v49;
    *(void *)&v33[v32] = v48;
    v52(v31, v38, v50, sub_2445C1864, v33);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_244598F8C();
    uint64_t v39 = swift_allocError();
    *uint64_t v40 = 0;
    v59[0] = v39;
    sub_2445EF2E8();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
}

uint64_t sub_2445C059C(uint64_t a1)
{
  return sub_2445C01A0(a1, *(void **)(v1 + 72), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, unint64_t), char *))(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_2445C05E0(void *a1)
{
  if (qword_26B0CE668 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2445EF038();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B0CE650);
  id v3 = a1;
  id v4 = a1;
  unint64_t v5 = sub_2445EF018();
  os_log_type_t v6 = sub_2445EF438();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)id v7 = 138543362;
    id v9 = a1;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    sub_2445EF478();
    *uint64_t v8 = v12;

    _os_log_impl(&dword_244580000, v5, v6, "Error fetching remote object proxy: %{public}@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE538);
    swift_arrayDestroy();
    MEMORY[0x245694340](v8, -1, -1);
    MEMORY[0x245694340](v7, -1, -1);
  }
  else
  {
  }
  sub_244598F8C();
  swift_allocError();
  *id v10 = 0;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B0CE838);
  sub_2445EF308();
  return sub_2445EF2E8();
}

void sub_2445C07F4(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_2445C085C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v16[1] = a3;
  sub_244598F8C();
  uint64_t v10 = sub_2445EF998();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)v16 - v12;
  sub_2445C09B8(a1, a2, a7, (unsigned char *)v16 - v12);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B0CE838);
  uint64_t v14 = sub_2445EF308();
  sub_2445C0DCC((uint64_t)v13, v14, (uint64_t)&type metadata for ManagedAppDistributionError);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_2445C09B8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for ServiceResult();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v16[-v13];
  uint64_t v21 = a1;
  unint64_t v22 = a2;
  uint64_t v23 = &v21;
  uint64_t v24 = &v16[-v13];
  sub_2445993EC(a1, a2);
  uint64_t v19 = v8;
  uint64_t v20 = MEMORY[0x263F06F78];
  unint64_t v18 = sub_2445C15D0();
  uint64_t WitnessTable = swift_getWitnessTable();
  decodeXPCValues<each A, B>(from:)((uint64_t)&v23, 1, 1uLL, (uint64_t)&v20, (unint64_t)&v19, (uint64_t)&v18, (uint64_t)&WitnessTable, (uint64_t *)&v24);
  sub_244599358(v21, v22);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v14, v8);
  Result.init<>(_:)(v12, a3, a4);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
}

uint64_t sub_2445C0DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v22[1] = a2;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2445EF998();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v22 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)v22 - v15, a1, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v18 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v18(v13, v16, a3);
    uint64_t v19 = swift_allocError();
    v18(v20, v13, a3);
    v22[3] = v19;
    return sub_2445EF2E8();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v16, v5);
    return sub_2445EF2F8();
  }
}

uint64_t sub_2445C102C(void *a1, uint64_t a2)
{
  sub_244598F8C();
  uint64_t v4 = sub_2445EF998();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - v6;
  if (qword_26B0CE668 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_2445EF038();
  __swift_project_value_buffer(v8, (uint64_t)qword_26B0CE650);
  id v9 = a1;
  id v10 = a1;
  uint64_t v11 = sub_2445EF018();
  os_log_type_t v12 = sub_2445EF438();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v22 = a2;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v21 = v4;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 138543362;
    id v16 = a1;
    uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v23 = v17;
    sub_2445EF478();
    *uint64_t v15 = v17;

    _os_log_impl(&dword_244580000, v11, v12, "Error fetching synchronous remote object proxy: %{public}@", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE538);
    swift_arrayDestroy();
    MEMORY[0x245694340](v15, -1, -1);
    unint64_t v18 = v14;
    uint64_t v4 = v21;
    MEMORY[0x245694340](v18, -1, -1);
  }
  else
  {
  }
  *uint64_t v7 = 0;
  swift_storeEnumTagMultiPayload();
  SyncXPCResult.setResult(_:)((uint64_t)v7);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2445C12C8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2445C1300(void *a1)
{
  return sub_2445C102C(a1, *(void *)(v1 + 64));
}

uint64_t sub_2445C1314(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)a3 + 80);
  sub_244598F8C();
  uint64_t v6 = sub_2445EF998();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v11 - v8;
  sub_2445C09B8(a1, a2, v5, (unsigned char *)&v11 - v8);
  SyncXPCResult.setResult(_:)((uint64_t)v9);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2445C1444()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2445C147C(uint64_t a1, unint64_t a2)
{
  return sub_2445C1314(a1, a2, *(void *)(v2 + 64));
}

uint64_t sub_2445C14B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a3, v3);
  }
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a1 + 24) - 8) + 32))(a2, v3, *(void *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

uint64_t type metadata accessor for ServiceConnection()
{
  return self;
}

uint64_t method lookup function for ServiceConnection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ServiceConnection);
}

uint64_t dispatch thunk of ServiceConnection.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t sub_2445C15D0()
{
  unint64_t result = qword_26B0CE700;
  if (!qword_26B0CE700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE700);
  }
  return result;
}

uint64_t sub_2445C1624()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B0CE838);
  uint64_t v1 = sub_2445EF308();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_2445C16D4(void *a1)
{
  return sub_2445C05E0(a1);
}

uint64_t sub_2445C17A8()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B0CE838);
  uint64_t v1 = sub_2445EF308();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_2445C1864(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B0CE838);
  uint64_t v8 = *(void *)(sub_2445EF308() - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  return sub_2445C085C(a1, a2, (uint64_t)v2 + v9, *(void *)((char *)v2 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8)), v5, v6, v7);
}

uint64_t static ManagedAppLibrary.currentDistributor.getter()
{
  return MEMORY[0x270FA0480](v0, &unk_268E8C8E0);
}

uint64_t ManagedAppLibrary.validateHostApp()()
{
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(unsigned char *)(v0 + 48) = 1;
  *(void *)(v0 + 56) = 0;
  *(unsigned char *)(v0 + 64) = 1;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2445C1A3C;
  return ManagedAppInstallRequest.request()();
}

uint64_t sub_2445C1A3C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2445C1B70, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_2445C1B70()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ManagedAppLibrary.install(_:)(uint64_t a1)
{
  v1[10] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D5A0);
  v1[11] = v2;
  v1[12] = *(void *)(v2 - 8);
  v1[13] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D5A8);
  v1[14] = v3;
  v1[15] = *(void *)(v3 - 8);
  v1[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2445C1CAC, 0, 0);
}

uint64_t sub_2445C1CAC()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  ManagedApp.state.getter();
  sub_2445EF388();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[17] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_2445C1D9C;
  uint64_t v5 = v0[14];
  return MEMORY[0x270FA1F70](v0 + 9, v5);
}

uint64_t sub_2445C1D9C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2445C1E98, 0, 0);
}

uint64_t sub_2445C1E98()
{
  uint64_t v16 = v0;
  uint64_t v1 = *(void *)(v0 + 72);
  if ((~v1 & 0xF000000000000007) == 0)
  {
    uint64_t v1 = swift_allocObject();
    *(unsigned char *)(v1 + 16) = 0;
  }
  *(void *)(v0 + 144) = v1;
  if (qword_26B0CE768 != -1) {
    swift_once();
  }
  uint64_t v2 = *(uint64_t **)(v0 + 80);
  uint64_t v3 = v2[2];
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  char v6 = *((unsigned char *)v2 + 40);
  v14[0] = 0x8000000000000010;
  v14[1] = v3;
  _DWORD v14[2] = v4;
  v14[3] = v5;
  char v15 = v6;
  swift_bridgeObjectRetain_n();
  sub_2445D8ED4((uint64_t)v14);
  sub_2445A2390(0x8000000000000010);
  sub_2445C2824(v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = *v2;
  uint64_t v7 = v2[1];
  *(void *)(v0 + 152) = v7;
  unint64_t v9 = (uint64_t *)((char *)v2 + *(int *)(type metadata accessor for ManagedApp() + 116));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  *(void *)(v0 + 160) = v11;
  *(void *)(v0 + 16) = v8;
  *(void *)(v0 + 24) = v7;
  *(void *)(v0 + 32) = v10;
  *(void *)(v0 + 40) = v11;
  *(unsigned char *)(v0 + 48) = 1;
  *(void *)(v0 + 56) = 0;
  *(unsigned char *)(v0 + 64) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_log_type_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v12;
  *os_log_type_t v12 = v0;
  v12[1] = sub_2445C205C;
  return ManagedAppInstallRequest.request()();
}

uint64_t sub_2445C205C()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_2445C224C;
  }
  else {
    uint64_t v2 = sub_2445C21B0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2445C21B0()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  sub_2445A2390(v0[18]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_2445C224C()
{
  uint64_t v14 = v0;
  uint64_t v3 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v11 = v0[14];
  uint64_t v4 = v0[10];
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = *(void *)(v4 + 24);
  uint64_t v7 = *(void *)(v4 + 32);
  char v8 = *(unsigned char *)(v4 + 40);
  v12[0] = v0[18];
  unint64_t v1 = v12[0];
  v12[1] = v5;
  void v12[2] = v6;
  v12[3] = v7;
  char v13 = v8;
  swift_bridgeObjectRetain_n();
  sub_24458566C(v12[0]);
  sub_2445D8ED4((uint64_t)v12);
  sub_2445A2390(v1);
  sub_2445C2824(v5, v6, v7, v8);
  swift_bridgeObjectRelease();
  swift_willThrow();
  sub_2445A2390(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_2445C2378()
{
  return swift_deallocObject();
}

uint64_t ManagedAppLibrary.cancel(_:)(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return MEMORY[0x270FA2498](sub_2445C23A8, 0, 0);
}

uint64_t sub_2445C23A8()
{
  uint64_t v1 = (uint64_t *)v0[4];
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  v0[2] = v3;
  v0[3] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_2445A9668;
  return ManagedAppCancelRequest.request()();
}

uint64_t static ManagedAppLibrary.appProgress.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D5B8);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D5C0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  char v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v18[-v9];
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F580], v0);
  sub_2445EF338();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v8, v10, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D5C8);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 32))(v11 + *(void *)(*(void *)v11 + 88), v8, v4);
  swift_retain();
  uint64_t v12 = sub_2445EF348();
  if (qword_26B0CE768 != -1) {
    uint64_t v12 = swift_once();
  }
  MEMORY[0x270FA5388](v12);
  *(void *)&v18[-16] = v11;
  *(void *)&v18[-8] = v13;
  uint64_t v15 = (uint64_t)&v14[4];
  uint64_t v16 = v14 + 26;
  os_unfair_lock_lock(v14 + 26);
  sub_2445C283C(v15);
  os_unfair_lock_unlock(v16);
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v10, v4);
}

void sub_2445C2750(uint64_t a1)
{
  if (qword_26B0CE768 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x270FA5388](a1);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 26;
  os_unfair_lock_lock(v1 + 26);
  sub_2445C2894(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t ManagedAppLibrary.deinit()
{
  return v0;
}

uint64_t ManagedAppLibrary.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t sub_2445C2824(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 0x80) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2445C2834(uint64_t a1)
{
}

uint64_t sub_2445C283C(uint64_t a1)
{
  return sub_2445D72A8(a1);
}

uint64_t type metadata accessor for ManagedAppLibrary()
{
  return self;
}

uint64_t method lookup function for ManagedAppLibrary(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ManagedAppLibrary);
}

uint64_t sub_2445C2894(uint64_t a1)
{
  return sub_2445D7788(a1, *(void *)(v1 + 16));
}

uint64_t Result.init<>(_:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  type metadata accessor for ServiceResult();
  if (swift_getEnumCaseMultiPayload() == 1) {
    *a3 = *a1;
  }
  else {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
  }
  sub_244598F8C();
  sub_2445EF998();

  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata accessor for ServiceResult()
{
  return __swift_instantiateGenericMetadata();
}

BOOL sub_2445C29B4(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_2445C29C4()
{
  return sub_2445EF958();
}

uint64_t sub_2445C29EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2445C2AE0()
{
  return sub_2445EF988();
}

uint64_t sub_2445C2B28(char a1)
{
  if (a1) {
    return 0x6572756C696166;
  }
  else {
    return 0x73736563637573;
  }
}

uint64_t sub_2445C2B58(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2445EF848();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

BOOL sub_2445C2BC8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2445C29B4(*a1, *a2);
}

uint64_t sub_2445C2BE0()
{
  return sub_2445C2AE0();
}

uint64_t sub_2445C2BF4()
{
  return sub_2445C29C4();
}

uint64_t sub_2445C2C08()
{
  return sub_2445EF988();
}

uint64_t sub_2445C2C54()
{
  return sub_2445C2B28(*v0);
}

uint64_t sub_2445C2C68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445C29EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445C2C9C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2445C4E54();
  *a1 = result;
  return result;
}

uint64_t sub_2445C2CD0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_2445C2D24(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_2445C2D7C@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_2445C2E74(a1, (uint64_t (*)(void, void, void))sub_2445A23D8, a2);
}

uint64_t sub_2445C2D94(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_2445C2DE8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_2445C2E3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445C2B58(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2445C2E74@<X0>(void *a1@<X1>, uint64_t (*a2)(void, void, void)@<X3>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(a1[2], a1[3], a1[4]);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2445C2EB0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_2445C2F04(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t ServiceResult.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = type metadata accessor for ServiceResult.FailureCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v40 = v6;
  uint64_t v7 = sub_2445EF7F8();
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v41 = (char *)&v32 - v8;
  uint64_t v9 = type metadata accessor for ServiceResult.SuccessCodingKeys();
  uint64_t v10 = swift_getWitnessTable();
  uint64_t v35 = v9;
  uint64_t v32 = v10;
  uint64_t v11 = sub_2445EF7F8();
  uint64_t v37 = *(void *)(v11 - 8);
  uint64_t v38 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v34 = (char *)&v32 - v13;
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v33 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = v5;
  uint64_t v45 = v4;
  type metadata accessor for ServiceResult.CodingKeys();
  swift_getWitnessTable();
  uint64_t v19 = sub_2445EF7F8();
  uint64_t v47 = *(void *)(v19 - 8);
  uint64_t v48 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v32 - v20;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445EFA18();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v46, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    char v22 = *v18;
    char v51 = 1;
    uint64_t v23 = v41;
    uint64_t v24 = v48;
    sub_2445EF748();
    char v50 = v22;
    sub_2445C34A4();
    uint64_t v25 = v43;
    sub_2445EF7D8();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v23, v25);
  }
  else
  {
    uint64_t v26 = v36;
    uint64_t v27 = v33;
    uint64_t v28 = v45;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v18, v45);
    char v49 = 0;
    unint64_t v29 = v34;
    uint64_t v24 = v48;
    sub_2445EF748();
    uint64_t v30 = v38;
    sub_2445EF7D8();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v30);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v28);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v21, v24);
}

uint64_t type metadata accessor for ServiceResult.FailureCodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ServiceResult.SuccessCodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ServiceResult.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_2445C34A4()
{
  unint64_t result = qword_268E8D5D0;
  if (!qword_268E8D5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D5D0);
  }
  return result;
}

uint64_t ServiceResult.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v62 = a4;
  uint64_t v7 = type metadata accessor for ServiceResult.FailureCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v60 = v7;
  uint64_t v52 = sub_2445EF738();
  uint64_t v55 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v61 = (char *)&v47 - v8;
  uint64_t v9 = type metadata accessor for ServiceResult.SuccessCodingKeys();
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v57 = v9;
  uint64_t v51 = sub_2445EF738();
  uint64_t v54 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v58 = (char *)&v47 - v10;
  type metadata accessor for ServiceResult.CodingKeys();
  uint64_t v67 = swift_getWitnessTable();
  uint64_t v11 = sub_2445EF738();
  uint64_t v64 = *(void *)(v11 - 8);
  uint64_t v65 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v47 - v12;
  uint64_t v66 = a2;
  uint64_t v53 = a3;
  uint64_t v63 = type metadata accessor for ServiceResult();
  uint64_t v50 = *(void *)(v63 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v63);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v47 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v47 - v20;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  char v22 = v72;
  sub_2445EF9E8();
  if (v22) {
    goto LABEL_7;
  }
  uint64_t v67 = (uint64_t)v19;
  uint64_t v48 = v16;
  char v49 = v21;
  uint64_t v23 = v65;
  uint64_t v72 = a1;
  *(void *)&long long v68 = sub_2445EF728();
  sub_2445EF2B8();
  swift_getWitnessTable();
  *(void *)&long long v70 = sub_2445EF4C8();
  *((void *)&v70 + 1) = v24;
  *(void *)&long long v71 = v25;
  *((void *)&v71 + 1) = v26;
  sub_2445EF4B8();
  swift_getWitnessTable();
  sub_2445EF3E8();
  char v27 = v68;
  if (v68 == 2 || (long long v47 = v70, v68 = v70, v69 = v71, (sub_2445EF3F8() & 1) == 0))
  {
    uint64_t v32 = sub_2445EF5A8();
    swift_allocError();
    uint64_t v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CEB0);
    *uint64_t v34 = v63;
    sub_2445EF678();
    sub_2445EF598();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v32 - 8) + 104))(v34, *MEMORY[0x263F8DCB0], v32);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v13, v23);
    a1 = v72;
LABEL_7:
    uint64_t v35 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v35);
  }
  if (v27)
  {
    LOBYTE(v68) = 1;
    uint64_t v37 = v61;
    sub_2445EF668();
    uint64_t v45 = v62;
    sub_2445C3CE4();
    uint64_t v38 = v52;
    sub_2445EF708();
    uint64_t v39 = v37;
    uint64_t v40 = v64;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v39, v38);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v23);
    uint64_t v46 = v48;
    char *v48 = v68;
    uint64_t v41 = v63;
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
    uint64_t v44 = v49;
    v42(v49, v46, v41);
  }
  else
  {
    LOBYTE(v68) = 0;
    uint64_t v28 = v58;
    sub_2445EF668();
    uint64_t v29 = v67;
    uint64_t v30 = v51;
    sub_2445EF708();
    uint64_t v31 = v64;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v28, v30);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v23);
    uint64_t v41 = v63;
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
    uint64_t v43 = v29;
    uint64_t v44 = v49;
    v42(v49, (char *)v43, v41);
    uint64_t v45 = v62;
  }
  v42(v45, v44, v41);
  uint64_t v35 = (uint64_t)v72;
  return __swift_destroy_boxed_opaque_existential_0(v35);
}

unint64_t sub_2445C3CE4()
{
  unint64_t result = qword_268E8D5D8;
  if (!qword_268E8D5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D5D8);
  }
  return result;
}

uint64_t sub_2445C3D38@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  return ServiceResult.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_2445C3D5C(void *a1, uint64_t a2)
{
  return ServiceResult.encode(to:)(a1, a2);
}

uint64_t sub_2445C3D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_2445C3D7C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_2445C3E10(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 1uLL) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  uint64_t v6 = *(_DWORD *)(v4 + 80);
  if (v6 > 7 || (*(_DWORD *)(v4 + 80) & 0x100000) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v9 = *(void *)a2;
    *char v3 = *(void *)a2;
    char v3 = (void *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  else
  {
    unsigned int v10 = a2[v5];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v12 = v5;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a2;
          goto LABEL_22;
        case 2:
          int v13 = *(unsigned __int16 *)a2;
          goto LABEL_22;
        case 3:
          int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_22;
        case 4:
          int v13 = *(_DWORD *)a2;
LABEL_22:
          int v14 = (v13 | (v11 << (8 * v5))) + 2;
          unsigned int v10 = v13 + 2;
          if (v5 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      a1[v5] = 1;
    }
    else
    {
      (*(void (**)(unsigned char *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 0;
    }
  }
  return v3;
}

unsigned __int8 *sub_2445C3F80(unsigned __int8 *result, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 1) {
    unint64_t v2 = 1;
  }
  unsigned int v3 = result[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *result;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)result;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)result;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 != 1) {
    return (unsigned __int8 *)(*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  return result;
}

unsigned char *sub_2445C4078(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 1uLL) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v10 = 0;
  }
  a1[v4] = v10;
  return a1;
}

unsigned __int8 *sub_2445C41AC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 1uLL) {
      uint64_t v7 = 1;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 != 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_27;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_27;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_27;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_27:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *a1 = *a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

unsigned char *sub_2445C43B4(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 1uLL) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 0;
  }
  a1[v4] = v10;
  return a1;
}

unsigned __int8 *sub_2445C44E8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 1uLL) {
      uint64_t v7 = 1;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 != 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_27;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_27;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_27;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_27:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *a1 = *a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_2445C46F0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v3 + 64) <= 1uLL) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_23;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v9 < 2)
    {
LABEL_23:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_23;
  }
LABEL_15:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_2445C4820(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 1) {
    unint64_t v5 = 1;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x2445C49E4);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_2445C4A0C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  if (*(void *)(v2 + 64) <= 1uLL) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_13;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_13:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_2445C4AC0(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 1uLL) {
    size_t v4 = 1;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_2445C4B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

unsigned char *sub_2445C4B9C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445C4C68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_2445C4C94(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2445C4D30);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2445C4D58()
{
  return swift_getWitnessTable();
}

uint64_t sub_2445C4D74()
{
  return swift_getWitnessTable();
}

uint64_t sub_2445C4D90()
{
  return swift_getWitnessTable();
}

uint64_t sub_2445C4DAC()
{
  return swift_getWitnessTable();
}

uint64_t sub_2445C4DC8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2445C4DE4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2445C4E00()
{
  return swift_getWitnessTable();
}

uint64_t sub_2445C4E1C()
{
  return swift_getWitnessTable();
}

uint64_t sub_2445C4E38()
{
  return swift_getWitnessTable();
}

uint64_t sub_2445C4E54()
{
  return 2;
}

uint64_t ManagedAppDistributionError.localizedStringResource.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = sub_2445EEFC8();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v26 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v25 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_2445EEEF8();
  uint64_t v5 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  int v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_2445EEEC8();
  uint64_t v8 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  unsigned int v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2445EF108();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  char v18 = (char *)&v23 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v23 - v19;
  sub_2445EF0F8();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v18, v11);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v20, v11);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F06E30], v23);
  uint64_t v21 = sub_2445EEF28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v25, 1, 1, v21);
  sub_2445EEF18();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F06D20], v24);
  sub_2445EEFA8();
  sub_2445EEEE8();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v20, v11);
}

uint64_t ManagedAppDistributionError.description.getter()
{
  uint64_t v1 = sub_2445EEED8();
  MEMORY[0x270FA5388](v1 - 8);
  v4[15] = *v0;
  ManagedAppDistributionError.localizedStringResource.getter((uint64_t)&v4[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  return sub_2445EF178();
}

uint64_t ManagedAppDistributionError.errorDescription.getter()
{
  uint64_t v1 = sub_2445EEED8();
  MEMORY[0x270FA5388](v1 - 8);
  v4[15] = *v0;
  ManagedAppDistributionError.localizedStringResource.getter((uint64_t)&v4[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  return sub_2445EF178();
}

uint64_t ManagedAppDistributionError.failureReason.getter()
{
  return 0;
}

uint64_t ManagedAppDistributionError.recoverySuggestion.getter()
{
  return 0;
}

uint64_t ManagedAppDistributionError.helpAnchor.getter()
{
  return 0;
}

uint64_t ManagedAppDistributionError.recoveryOptions.getter()
{
  return MEMORY[0x263F8EE78];
}

Swift::Bool __swiftcall ManagedAppDistributionError.attemptRecovery(optionIndex:)(Swift::Int optionIndex)
{
  return 0;
}

uint64_t ManagedAppDistributionError.attemptRecovery(optionIndex:resultHandler:)(uint64_t a1, uint64_t (*a2)(void))
{
  return a2(0);
}

BOOL static ManagedAppDistributionError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ManagedAppDistributionError.hash(into:)()
{
  return sub_2445EF958();
}

unint64_t sub_2445C54B8(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x456B726F7774656ELL;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x4E65736E6563696CLL;
      break;
    case 5:
      unint64_t result = 0x614D746F4E707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2445C55B0(uint64_t a1)
{
  unint64_t v2 = sub_2445C5F60();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445C55EC(uint64_t a1)
{
  unint64_t v2 = sub_2445C5F60();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_2445C5628()
{
  return sub_2445C54B8(*v0);
}

uint64_t sub_2445C5630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445C72C4(a1, a2);
  *a3 = result;
  return result;
}

void sub_2445C5658(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_2445C5664(uint64_t a1)
{
  unint64_t v2 = sub_2445C5F0C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445C56A0(uint64_t a1)
{
  unint64_t v2 = sub_2445C5F0C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445C56DC(uint64_t a1)
{
  unint64_t v2 = sub_2445C605C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445C5718(uint64_t a1)
{
  unint64_t v2 = sub_2445C605C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445C5754(uint64_t a1)
{
  unint64_t v2 = sub_2445C5FB4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445C5790(uint64_t a1)
{
  unint64_t v2 = sub_2445C5FB4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445C57CC(uint64_t a1)
{
  unint64_t v2 = sub_2445C60B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445C5808(uint64_t a1)
{
  unint64_t v2 = sub_2445C60B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445C5844(uint64_t a1)
{
  unint64_t v2 = sub_2445C6104();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445C5880(uint64_t a1)
{
  unint64_t v2 = sub_2445C6104();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445C58BC(uint64_t a1)
{
  unint64_t v2 = sub_2445C6008();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445C58F8(uint64_t a1)
{
  unint64_t v2 = sub_2445C6008();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ManagedAppDistributionError.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D5E0);
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v39 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D5E8);
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v36 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D5F0);
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v33 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D5F8);
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v30 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D600);
  uint64_t v28 = *(void *)(v11 - 8);
  uint64_t v29 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D608);
  uint64_t v27 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D610);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v42 = v17;
  uint64_t v43 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445C5F0C();
  sub_2445EFA18();
  switch(v21)
  {
    case 1:
      char v45 = 1;
      sub_2445C60B0();
      uint64_t v22 = v42;
      sub_2445EF748();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v22);
    case 2:
      char v46 = 2;
      sub_2445C605C();
      uint64_t v23 = v30;
      uint64_t v22 = v42;
      sub_2445EF748();
      uint64_t v25 = v31;
      uint64_t v24 = v32;
      goto LABEL_8;
    case 3:
      char v47 = 3;
      sub_2445C6008();
      uint64_t v23 = v33;
      uint64_t v22 = v42;
      sub_2445EF748();
      uint64_t v25 = v34;
      uint64_t v24 = v35;
      goto LABEL_8;
    case 4:
      char v48 = 4;
      sub_2445C5FB4();
      uint64_t v23 = v36;
      uint64_t v22 = v42;
      sub_2445EF748();
      uint64_t v25 = v37;
      uint64_t v24 = v38;
      goto LABEL_8;
    case 5:
      char v49 = 5;
      sub_2445C5F60();
      uint64_t v23 = v39;
      uint64_t v22 = v42;
      sub_2445EF748();
      uint64_t v25 = v40;
      uint64_t v24 = v41;
LABEL_8:
      (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
      break;
    default:
      char v44 = 0;
      sub_2445C6104();
      uint64_t v22 = v42;
      sub_2445EF748();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v14);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v22);
}

unint64_t sub_2445C5F0C()
{
  unint64_t result = qword_268E8D618;
  if (!qword_268E8D618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D618);
  }
  return result;
}

unint64_t sub_2445C5F60()
{
  unint64_t result = qword_268E8D620;
  if (!qword_268E8D620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D620);
  }
  return result;
}

unint64_t sub_2445C5FB4()
{
  unint64_t result = qword_268E8D628;
  if (!qword_268E8D628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D628);
  }
  return result;
}

unint64_t sub_2445C6008()
{
  unint64_t result = qword_268E8D630;
  if (!qword_268E8D630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D630);
  }
  return result;
}

unint64_t sub_2445C605C()
{
  unint64_t result = qword_268E8D638;
  if (!qword_268E8D638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D638);
  }
  return result;
}

unint64_t sub_2445C60B0()
{
  unint64_t result = qword_268E8D640;
  if (!qword_268E8D640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D640);
  }
  return result;
}

unint64_t sub_2445C6104()
{
  unint64_t result = qword_268E8D648;
  if (!qword_268E8D648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D648);
  }
  return result;
}

uint64_t ManagedAppDistributionError.hashValue.getter()
{
  return sub_2445EF988();
}

uint64_t ManagedAppDistributionError.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D650);
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v66 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D658);
  uint64_t v56 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v65 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D660);
  uint64_t v59 = *(void *)(v6 - 8);
  uint64_t v60 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v64 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D668);
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v58 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v62 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D670);
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v55 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D678);
  uint64_t v53 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D680);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1[3];
  uint64_t v67 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_2445C5F0C();
  uint64_t v21 = v68;
  sub_2445EF9E8();
  if (v21) {
    goto LABEL_6;
  }
  uint64_t v49 = v13;
  uint64_t v50 = v15;
  uint64_t v22 = v12;
  uint64_t v24 = v64;
  uint64_t v23 = v65;
  uint64_t v25 = v66;
  uint64_t v68 = v16;
  uint64_t v26 = v19;
  uint64_t v27 = sub_2445EF728();
  if (*(void *)(v27 + 16) != 1)
  {
    uint64_t v34 = sub_2445EF5A8();
    swift_allocError();
    uint64_t v36 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CEB0);
    *uint64_t v36 = &type metadata for ManagedAppDistributionError;
    uint64_t v37 = v68;
    sub_2445EF678();
    sub_2445EF598();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v34 - 8) + 104))(v36, *MEMORY[0x263F8DCB0], v34);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v37);
LABEL_6:
    uint64_t v32 = (uint64_t)v67;
    return __swift_destroy_boxed_opaque_existential_0(v32);
  }
  char v28 = *(unsigned char *)(v27 + 32);
  switch(v28)
  {
    case 1:
      char v70 = 1;
      sub_2445C60B0();
      uint64_t v39 = v68;
      sub_2445EF668();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v22, v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v39);
      uint64_t v32 = (uint64_t)v67;
      uint64_t v33 = v63;
      break;
    case 2:
      char v40 = *(unsigned char *)(v27 + 32);
      char v71 = 2;
      sub_2445C605C();
      uint64_t v41 = v62;
      uint64_t v42 = v68;
      sub_2445EF668();
      uint64_t v44 = v57;
      uint64_t v43 = v58;
      goto LABEL_11;
    case 3:
      char v40 = *(unsigned char *)(v27 + 32);
      char v72 = 3;
      sub_2445C6008();
      uint64_t v41 = v24;
      uint64_t v42 = v68;
      sub_2445EF668();
      uint64_t v44 = v59;
      uint64_t v43 = v60;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v42);
      uint64_t v32 = (uint64_t)v67;
      uint64_t v33 = v63;
      char v28 = v40;
      break;
    case 4:
      char v45 = *(unsigned char *)(v27 + 32);
      char v73 = 4;
      sub_2445C5FB4();
      uint64_t v46 = v68;
      sub_2445EF668();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v23, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v46);
      uint64_t v32 = (uint64_t)v67;
      uint64_t v33 = v63;
      char v28 = v45;
      break;
    case 5:
      uint64_t v65 = (char *)*(unsigned __int8 *)(v27 + 32);
      char v74 = 5;
      sub_2445C5F60();
      uint64_t v47 = v68;
      sub_2445EF668();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v25, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v47);
      uint64_t v32 = (uint64_t)v67;
      uint64_t v33 = v63;
      char v28 = (char)v65;
      break;
    default:
      char v29 = *(unsigned char *)(v27 + 32);
      char v69 = 0;
      sub_2445C6104();
      uint64_t v30 = v50;
      uint64_t v31 = v68;
      sub_2445EF668();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v31);
      uint64_t v32 = (uint64_t)v67;
      uint64_t v33 = v63;
      char v28 = v29;
      break;
  }
  *uint64_t v33 = v28;
  return __swift_destroy_boxed_opaque_existential_0(v32);
}

unint64_t sub_2445C6A2C()
{
  unint64_t result = qword_268E8D688;
  if (!qword_268E8D688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D688);
  }
  return result;
}

uint64_t sub_2445C6A84()
{
  uint64_t v1 = sub_2445EEED8();
  MEMORY[0x270FA5388](v1 - 8);
  v4[15] = *v0;
  ManagedAppDistributionError.localizedStringResource.getter((uint64_t)&v4[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  return sub_2445EF178();
}

uint64_t sub_2445C6B08()
{
  return 0;
}

uint64_t sub_2445C6B14()
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_2445C6B20(uint64_t a1, uint64_t (*a2)(void))
{
  return a2(0);
}

uint64_t sub_2445C6B50@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ManagedAppDistributionError.init(from:)(a1, a2);
}

uint64_t sub_2445C6B68(void *a1)
{
  return ManagedAppDistributionError.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for ManagedAppDistributionError()
{
  return &type metadata for ManagedAppDistributionError;
}

uint64_t _s22ManagedAppDistribution27ManagedAppDistributionErrorOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s22ManagedAppDistribution27ManagedAppDistributionErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445C6D04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppDistributionError.CodingKeys()
{
  return &type metadata for ManagedAppDistributionError.CodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDistributionError.UnrecoverableErrorCodingKeys()
{
  return &type metadata for ManagedAppDistributionError.UnrecoverableErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDistributionError.NetworkErrorCodingKeys()
{
  return &type metadata for ManagedAppDistributionError.NetworkErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDistributionError.DeviceNotManagedCodingKeys()
{
  return &type metadata for ManagedAppDistributionError.DeviceNotManagedCodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDistributionError.UnsupportedPlatformCodingKeys()
{
  return &type metadata for ManagedAppDistributionError.UnsupportedPlatformCodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDistributionError.LicenseNotFoundCodingKeys()
{
  return &type metadata for ManagedAppDistributionError.LicenseNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDistributionError.AppNotManagedCodingKeys()
{
  return &type metadata for ManagedAppDistributionError.AppNotManagedCodingKeys;
}

unint64_t sub_2445C6DA0()
{
  unint64_t result = qword_268E8D690;
  if (!qword_268E8D690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D690);
  }
  return result;
}

unint64_t sub_2445C6DF8()
{
  unint64_t result = qword_268E8D698;
  if (!qword_268E8D698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D698);
  }
  return result;
}

unint64_t sub_2445C6E50()
{
  unint64_t result = qword_268E8D6A0;
  if (!qword_268E8D6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D6A0);
  }
  return result;
}

unint64_t sub_2445C6EA8()
{
  unint64_t result = qword_268E8D6A8;
  if (!qword_268E8D6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D6A8);
  }
  return result;
}

unint64_t sub_2445C6F00()
{
  unint64_t result = qword_268E8D6B0;
  if (!qword_268E8D6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D6B0);
  }
  return result;
}

unint64_t sub_2445C6F58()
{
  unint64_t result = qword_268E8D6B8;
  if (!qword_268E8D6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D6B8);
  }
  return result;
}

unint64_t sub_2445C6FB0()
{
  unint64_t result = qword_268E8D6C0;
  if (!qword_268E8D6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D6C0);
  }
  return result;
}

unint64_t sub_2445C7008()
{
  unint64_t result = qword_268E8D6C8;
  if (!qword_268E8D6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D6C8);
  }
  return result;
}

unint64_t sub_2445C7060()
{
  unint64_t result = qword_268E8D6D0;
  if (!qword_268E8D6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D6D0);
  }
  return result;
}

unint64_t sub_2445C70B8()
{
  unint64_t result = qword_268E8D6D8;
  if (!qword_268E8D6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D6D8);
  }
  return result;
}

unint64_t sub_2445C7110()
{
  unint64_t result = qword_268E8D6E0;
  if (!qword_268E8D6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D6E0);
  }
  return result;
}

unint64_t sub_2445C7168()
{
  unint64_t result = qword_268E8D6E8;
  if (!qword_268E8D6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D6E8);
  }
  return result;
}

unint64_t sub_2445C71C0()
{
  unint64_t result = qword_268E8D6F0;
  if (!qword_268E8D6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D6F0);
  }
  return result;
}

unint64_t sub_2445C7218()
{
  unint64_t result = qword_268E8D6F8;
  if (!qword_268E8D6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D6F8);
  }
  return result;
}

unint64_t sub_2445C7270()
{
  unint64_t result = qword_268E8D700;
  if (!qword_268E8D700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D700);
  }
  return result;
}

uint64_t sub_2445C72C4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000002445F9390 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x456B726F7774656ELL && a2 == 0xEC000000726F7272 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002445F93B0 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002445F93D0 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4E65736E6563696CLL && a2 == 0xEF646E756F46746FLL || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x614D746F4E707061 && a2 == 0xED0000646567616ELL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t ManagedAppDeclaration.declarationKey.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedAppDeclaration.declarationKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *int v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ManagedAppDeclaration.declarationKey.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppDeclaration.declarationIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedAppDeclaration.declarationIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ManagedAppDeclaration.declarationIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppDeclaration.managementScope.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t ManagedAppDeclaration.managementScope.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result & 1;
  return result;
}

uint64_t (*ManagedAppDeclaration.managementScope.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppDeclaration.personaIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedAppDeclaration.personaIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*ManagedAppDeclaration.personaIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppDeclaration.attributes.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  unint64_t v3 = *(void *)(v1 + 64);
  *a1 = v2;
  a1[1] = v3;
  return sub_24459D728(v2, v3);
}

uint64_t ManagedAppDeclaration.attributes.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_24459D73C(*(void *)(v1 + 56), *(void *)(v1 + 64));
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = v3;
  return result;
}

uint64_t (*ManagedAppDeclaration.attributes.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppDeclaration.installBehavior.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ManagedAppDeclaration(0);
  return sub_2445CE044(v1 + *(int *)(v3 + 36), a1, type metadata accessor for ManagedAppDeclaration.InstallBehavior);
}

uint64_t type metadata accessor for ManagedAppDeclaration(uint64_t a1)
{
  return sub_2445D1980(a1, (uint64_t *)&unk_26B0CE408);
}

uint64_t type metadata accessor for ManagedAppDeclaration.InstallBehavior(uint64_t a1)
{
  return sub_2445D1980(a1, (uint64_t *)&unk_26B0CE3F8);
}

uint64_t ManagedAppDeclaration.installBehavior.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ManagedAppDeclaration(0);
  return sub_2445CE0CC(a1, v1 + *(int *)(v3 + 36), type metadata accessor for ManagedAppDeclaration.InstallBehavior);
}

uint64_t (*ManagedAppDeclaration.installBehavior.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppDeclaration.backupBehavior.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ManagedAppDeclaration(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t ManagedAppDeclaration.backupBehavior.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for ManagedAppDeclaration(0);
  *(unsigned char *)(v1 + *(int *)(result + 40)) = v2;
  return result;
}

uint64_t (*ManagedAppDeclaration.backupBehavior.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppDeclaration.updateBehavior.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for ManagedAppDeclaration(0);
  unsigned int v4 = (uint64_t *)(v1 + *(int *)(result + 44));
  uint64_t v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 8);
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = (_BYTE)v4;
  return result;
}

uint64_t ManagedAppDeclaration.updateBehavior.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t result = type metadata accessor for ManagedAppDeclaration(0);
  uint64_t v5 = v1 + *(int *)(result + 44);
  *(void *)uint64_t v5 = v2;
  *(unsigned char *)(v5 + 8) = v3;
  return result;
}

uint64_t (*ManagedAppDeclaration.updateBehavior.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppDeclaration.platform.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = type metadata accessor for ManagedAppDeclaration(0);
  *a1 = *(void *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t ManagedAppDeclaration.platform.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = type metadata accessor for ManagedAppDeclaration(0);
  *(void *)(v1 + *(int *)(result + 48)) = v2;
  return result;
}

uint64_t (*ManagedAppDeclaration.platform.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppDeclaration.init(declarationKey:declarationIdentifier:managementScope:personaIdentifier:installBehavior:backupBehavior:updateBehavior:platform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t *a11, uint64_t *a12)
{
  char v16 = a5 & 1;
  char v17 = *a10;
  uint64_t v18 = *a11;
  char v19 = *((unsigned char *)a11 + 8);
  uint64_t v20 = *a12;
  *(_OWORD *)(a9 + 56) = xmmword_2445F4E40;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  uint64_t v21 = (int *)type metadata accessor for ManagedAppDeclaration(0);
  uint64_t result = sub_2445CE134(a8, a9 + v21[9], type metadata accessor for ManagedAppDeclaration.InstallBehavior);
  *(unsigned char *)(a9 + v21[10]) = v17;
  uint64_t v23 = a9 + v21[11];
  *(void *)uint64_t v23 = v18;
  *(unsigned char *)(v23 + 8) = v19;
  *(void *)(a9 + v21[12]) = v20;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 32) = v16;
  return result;
}

uint64_t ManagedAppDeclaration.init(declarationKey:declarationIdentifier:personaIdentifier:installBehavior:backupBehavior:updateBehavior:platform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, uint64_t *a11)
{
  char v15 = *a8;
  uint64_t v16 = *a10;
  char v17 = *((unsigned char *)a10 + 8);
  uint64_t v18 = *a11;
  *(_OWORD *)(a9 + 56) = xmmword_2445F4E40;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  char v19 = (int *)type metadata accessor for ManagedAppDeclaration(0);
  uint64_t result = sub_2445CE134(a7, a9 + v19[9], type metadata accessor for ManagedAppDeclaration.InstallBehavior);
  *(unsigned char *)(a9 + v19[10]) = v15;
  uint64_t v21 = a9 + v19[11];
  *(void *)uint64_t v21 = v16;
  *(unsigned char *)(v21 + 8) = v17;
  *(void *)(a9 + v19[12]) = v18;
  *(void *)(a9 + 40) = a5;
  *(void *)(a9 + 48) = a6;
  *(unsigned char *)(a9 + 32) = 1;
  return result;
}

uint64_t ManagedAppDeclaration.init(declarationKey:declarationIdentifier:personaIdentifier:installBehavior:backupBehavior:updateBehavior:removalBehavior:platform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, uint64_t a11, uint64_t *a12)
{
  char v16 = *a8;
  uint64_t v17 = *a10;
  char v18 = *((unsigned char *)a10 + 8);
  uint64_t v19 = *a12;
  *(_OWORD *)(a9 + 56) = xmmword_2445F4E40;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  uint64_t v20 = (int *)type metadata accessor for ManagedAppDeclaration(0);
  uint64_t result = sub_2445CE134(a7, a9 + v20[9], type metadata accessor for ManagedAppDeclaration.InstallBehavior);
  *(unsigned char *)(a9 + v20[10]) = v16;
  uint64_t v22 = a9 + v20[11];
  *(void *)uint64_t v22 = v17;
  *(unsigned char *)(v22 + 8) = v18;
  *(void *)(a9 + v20[12]) = v19;
  *(void *)(a9 + 40) = a5;
  *(void *)(a9 + 48) = a6;
  *(unsigned char *)(a9 + 32) = 1;
  return result;
}

uint64_t ManagedAppDeclaration.init(declarationKey:declarationIdentifier:installBehavior:backupBehavior:updateBehavior:removalBehavior:platform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X8>, uint64_t *a9)
{
  char v11 = *a6;
  uint64_t v12 = *a7;
  char v13 = *((unsigned char *)a7 + 8);
  uint64_t v14 = *a9;
  *(_OWORD *)(a8 + 56) = xmmword_2445F4E40;
  *(void *)a8 = a1;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  char v15 = (int *)type metadata accessor for ManagedAppDeclaration(0);
  uint64_t result = sub_2445CE134(a5, a8 + v15[9], type metadata accessor for ManagedAppDeclaration.InstallBehavior);
  *(unsigned char *)(a8 + v15[10]) = v11;
  uint64_t v17 = a8 + v15[11];
  *(void *)uint64_t v17 = v12;
  *(unsigned char *)(v17 + 8) = v13;
  *(void *)(a8 + v15[12]) = v14;
  *(void *)(a8 + 40) = 0;
  *(void *)(a8 + 48) = 0;
  *(unsigned char *)(a8 + 32) = 1;
  return result;
}

BOOL static ManagedAppDeclaration.ManagementScope.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t ManagedAppDeclaration.ManagementScope.hash(into:)()
{
  return sub_2445EF958();
}

uint64_t sub_2445C7E70()
{
  if (*v0) {
    return 1919251317;
  }
  else {
    return 0x6D6574737973;
  }
}

uint64_t sub_2445C7EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445CDAC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445C7EC8(uint64_t a1)
{
  unint64_t v2 = sub_2445C82E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445C7F04(uint64_t a1)
{
  unint64_t v2 = sub_2445C82E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445C7F40(uint64_t a1)
{
  unint64_t v2 = sub_2445C8388();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445C7F7C(uint64_t a1)
{
  unint64_t v2 = sub_2445C8388();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445C7FB8(uint64_t a1)
{
  unint64_t v2 = sub_2445C8334();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445C7FF4(uint64_t a1)
{
  unint64_t v2 = sub_2445C8334();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ManagedAppDeclaration.ManagementScope.encode(to:)(void *a1, int a2)
{
  int v18 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D708);
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D710);
  uint64_t v6 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  int v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D718);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445C82E0();
  sub_2445EFA18();
  char v13 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  if (v18)
  {
    char v20 = 1;
    sub_2445C8334();
    sub_2445EF748();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    char v19 = 0;
    sub_2445C8388();
    sub_2445EF748();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  }
  return (*v13)(v12, v9);
}

unint64_t sub_2445C82E0()
{
  unint64_t result = qword_268E8D720;
  if (!qword_268E8D720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D720);
  }
  return result;
}

unint64_t sub_2445C8334()
{
  unint64_t result = qword_268E8D728;
  if (!qword_268E8D728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D728);
  }
  return result;
}

unint64_t sub_2445C8388()
{
  unint64_t result = qword_268E8D730;
  if (!qword_268E8D730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D730);
  }
  return result;
}

uint64_t ManagedAppDeclaration.ManagementScope.hashValue.getter()
{
  return sub_2445EF988();
}

uint64_t ManagedAppDeclaration.ManagementScope.init(from:)(uint64_t a1)
{
  return sub_2445CDBA0(a1) & 1;
}

uint64_t sub_2445C8440@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_2445CDBA0(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_2445C8470(void *a1)
{
  return ManagedAppDeclaration.ManagementScope.encode(to:)(a1, *v1);
}

uint64_t ManagedAppDeclaration.Attributes.rawValue.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_2445993EC(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t ManagedAppDeclaration.Attributes.init(rawValue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void ManagedAppDeclaration.Attributes.init(_:)(uint64_t *a1@<X8>)
{
  v10[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = self;
  uint64_t v3 = (void *)sub_2445EF0A8();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v4 = objc_msgSend(v2, sel_dataWithJSONObject_options_error_, v3, 0, v10);

  id v5 = v10[0];
  if (v4)
  {
    uint64_t v6 = sub_2445EEF48();
    uint64_t v8 = v7;

    *a1 = v6;
    a1[1] = v8;
  }
  else
  {
    uint64_t v9 = v5;
    sub_2445EEEB8();

    swift_willThrow();
  }
}

id ManagedAppDeclaration.Attributes.dictionaryRepresentation()()
{
  v6[5] = *(id *)MEMORY[0x263EF8340];
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_2445EEF38();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_JSONObjectWithData_options_error_, v1, 0, v6);

  id v3 = v6[0];
  if (v2)
  {
    sub_2445EF4A8();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D738);
    swift_dynamicCast();
    return v6[0];
  }
  else
  {
    id v5 = v3;
    sub_2445EEEB8();

    return (id)swift_willThrow();
  }
}

uint64_t sub_2445C8708()
{
  return 0x65756C6156776172;
}

uint64_t sub_2445C8724(uint64_t a1)
{
  unint64_t v2 = sub_2445CDFF0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445C8760(uint64_t a1)
{
  unint64_t v2 = sub_2445CDFF0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ManagedAppDeclaration.Attributes.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D740);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445CDFF0();
  sub_2445EFA18();
  v10[0] = v8;
  v10[1] = v7;
  sub_2445B6EAC();
  sub_2445EF7D8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ManagedAppDeclaration.Attributes.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D750);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445CDFF0();
  sub_2445EF9E8();
  if (!v2)
  {
    sub_2445B759C();
    sub_2445EF708();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2445C8A54@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return ManagedAppDeclaration.Attributes.init(from:)(a1, a2);
}

uint64_t sub_2445C8A6C(void *a1)
{
  return ManagedAppDeclaration.Attributes.encode(to:)(a1);
}

void ManagedAppDeclaration.InstallBehavior.installTiming.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *ManagedAppDeclaration.InstallBehavior.installTiming.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*ManagedAppDeclaration.InstallBehavior.installTiming.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppDeclaration.InstallBehavior.isAccountPromptAllowed.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t ManagedAppDeclaration.InstallBehavior.isAccountPromptAllowed.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*ManagedAppDeclaration.InstallBehavior.isAccountPromptAllowed.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppDeclaration.InstallBehavior.purchaseMethod.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ManagedAppDeclaration.InstallBehavior(0);
  return sub_2445CE044(v1 + *(int *)(v3 + 24), a1, type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum);
}

uint64_t ManagedAppDeclaration.InstallBehavior.purchaseMethod.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ManagedAppDeclaration.InstallBehavior(0);
  return sub_2445CE0CC(a1, v1 + *(int *)(v3 + 24), type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum);
}

uint64_t (*ManagedAppDeclaration.InstallBehavior.purchaseMethod.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppDeclaration.InstallBehavior.init(installTiming:isAccountPromptAllowed:purchaseMethod:)@<X0>(unsigned char *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  *a4 = *a1;
  a4[1] = a2;
  uint64_t v6 = type metadata accessor for ManagedAppDeclaration.InstallBehavior(0);
  return sub_2445CE134(a3, (uint64_t)&a4[*(int *)(v6 + 24)], type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum);
}

void static ManagedAppDeclaration.InstallBehavior.InstallTiming.immediately.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static ManagedAppDeclaration.InstallBehavior.InstallTiming.onDemand.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

BOOL static ManagedAppDeclaration.InstallBehavior.InstallTimingEnum.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ManagedAppDeclaration.InstallBehavior.InstallTimingEnum.hash(into:)()
{
  return sub_2445EF958();
}

uint64_t sub_2445C8C80()
{
  if (*v0) {
    return 0x646E616D65446E6FLL;
  }
  else {
    return 0x74616964656D6D69;
  }
}

uint64_t sub_2445C8CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445CEC1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445C8CEC(uint64_t a1)
{
  unint64_t v2 = sub_2445CE19C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445C8D28(uint64_t a1)
{
  unint64_t v2 = sub_2445CE19C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445C8D64(uint64_t a1)
{
  unint64_t v2 = sub_2445CE244();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445C8DA0(uint64_t a1)
{
  unint64_t v2 = sub_2445CE244();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445C8DDC(uint64_t a1)
{
  unint64_t v2 = sub_2445CE1F0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445C8E18(uint64_t a1)
{
  unint64_t v2 = sub_2445CE1F0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ManagedAppDeclaration.InstallBehavior.InstallTimingEnum.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D758);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  int v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D760);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D768);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445CE19C();
  sub_2445EFA18();
  char v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_2445CE1F0();
    uint64_t v14 = v18;
    sub_2445EF748();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_2445CE244();
    sub_2445EF748();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t ManagedAppDeclaration.InstallBehavior.InstallTimingEnum.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D788);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D790);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D798);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445CE19C();
  uint64_t v11 = v32;
  sub_2445EF9E8();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_2445EF728();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_2445EF5A8();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CEB0);
    *char v22 = &type metadata for ManagedAppDeclaration.InstallBehavior.InstallTimingEnum;
    sub_2445EF678();
    sub_2445EF598();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_2445CE1F0();
    int v18 = v14;
    sub_2445EF668();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_2445CE244();
    sub_2445EF668();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_0(v23);
}

uint64_t sub_2445C9554@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ManagedAppDeclaration.InstallBehavior.InstallTimingEnum.init(from:)(a1, a2);
}

uint64_t sub_2445C956C(void *a1)
{
  return ManagedAppDeclaration.InstallBehavior.InstallTimingEnum.encode(to:)(a1);
}

uint64_t static ManagedAppDeclaration.InstallBehavior.PurchaseMethod.volumePurchaseProgram(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  char v6 = a3 & 1;
  *(unsigned char *)(a4 + 16) = a3 & 1;
  *(unsigned char *)(a4 + 17) = 0;
  type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  swift_storeEnumTagMultiPayload();

  return sub_24458565C(a1, a2, v6);
}

uint64_t static ManagedAppDeclaration.InstallBehavior.PurchaseMethod.volumePurchaseProgram(_:license:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v8 = *a4;
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  char v9 = a3 & 1;
  *(unsigned char *)(a5 + 16) = a3 & 1;
  *(unsigned char *)(a5 + 17) = v8;
  type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  swift_storeEnumTagMultiPayload();

  return sub_24458565C(a1, a2, v9);
}

uint64_t static ManagedAppDeclaration.InstallBehavior.PurchaseMethod.manifest(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_2445EEF28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2445C96F4(uint64_t a1)
{
  unint64_t v2 = sub_2445CE298();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445C9730(uint64_t a1)
{
  unint64_t v2 = sub_2445CE298();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445C976C(uint64_t a1)
{
  unint64_t v2 = sub_2445CE2EC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445C97A8(uint64_t a1)
{
  unint64_t v2 = sub_2445CE2EC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445C97E4()
{
  if (*v0) {
    return 0x65736E6563696CLL;
  }
  else {
    return 12383;
  }
}

uint64_t sub_2445C9814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445CED28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445C983C(uint64_t a1)
{
  unint64_t v2 = sub_2445CE340();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445C9878(uint64_t a1)
{
  unint64_t v2 = sub_2445CE340();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D7A0);
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2445EEF28();
  uint64_t v30 = *(void *)(v5 - 8);
  uint64_t v31 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D7A8);
  uint64_t v28 = *(void *)(v8 - 8);
  uint64_t v29 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D7B0);
  uint64_t v36 = *(void *)(v14 - 8);
  uint64_t v37 = v14;
  MEMORY[0x270FA5388](v14);
  char v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445CE298();
  sub_2445EFA18();
  sub_2445CE044(v34, (uint64_t)v13, type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = v30;
    uint64_t v17 = v31;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v7, v13, v31);
    LOBYTE(v38) = 1;
    sub_2445CE2EC();
    sub_2445EF748();
    sub_2445CE3E8(&qword_268E8C9E0, MEMORY[0x263F06EA8]);
    uint64_t v19 = v33;
    sub_2445EF7D8();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v19);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v17);
  }
  else
  {
    uint64_t v20 = *(void *)v13;
    uint64_t v21 = *((void *)v13 + 1);
    char v22 = v13[16];
    char v23 = v13[17];
    LOBYTE(v38) = 0;
    sub_2445CE340();
    sub_2445EF748();
    uint64_t v38 = v20;
    uint64_t v39 = v21;
    char v40 = v22;
    char v41 = 0;
    sub_2445B3E68();
    uint64_t v24 = v29;
    uint64_t v25 = v35;
    sub_2445EF7D8();
    if (v25)
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v24);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v37);
      return sub_244585A1C(v20, v21, v22);
    }
    sub_244585A1C(v20, v21, v22);
    LOBYTE(v38) = v23;
    char v41 = 1;
    sub_2445CE394();
    sub_2445EF7D8();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v24);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v16, v37);
}

uint64_t ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D7D8);
  uint64_t v52 = *(void *)(v3 - 8);
  uint64_t v53 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v57 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D7E0);
  uint64_t v54 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v55 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D7E8);
  uint64_t v58 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)v47 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v47 - v16;
  uint64_t v18 = a1[3];
  uint64_t v59 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_2445CE298();
  uint64_t v19 = v60;
  sub_2445EF9E8();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v49 = v17;
  uint64_t v50 = v12;
  uint64_t v48 = v15;
  uint64_t v21 = v56;
  uint64_t v20 = v57;
  char v22 = v55;
  uint64_t v60 = v9;
  uint64_t v23 = sub_2445EF728();
  if (*(void *)(v23 + 16) != 1)
  {
    uint64_t v25 = v8;
    uint64_t v26 = sub_2445EF5A8();
    swift_allocError();
    uint64_t v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CEB0);
    *uint64_t v28 = v60;
    sub_2445EF678();
    sub_2445EF598();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *MEMORY[0x263F8DCB0], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v25, v6);
LABEL_7:
    uint64_t v35 = (uint64_t)v59;
    return __swift_destroy_boxed_opaque_existential_0(v35);
  }
  v47[1] = v23;
  uint64_t v24 = v58;
  if (*(unsigned char *)(v23 + 32))
  {
    LOBYTE(v61) = 1;
    sub_2445CE2EC();
    sub_2445EF668();
    sub_2445EEF28();
    uint64_t v31 = v8;
    sub_2445CE3E8(&qword_268E8CA38, MEMORY[0x263F06EA8]);
    uint64_t v32 = (uint64_t)v50;
    uint64_t v33 = v6;
    uint64_t v34 = v53;
    sub_2445EF708();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v20, v34);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v31, v33);
    uint64_t v35 = (uint64_t)v59;
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = v32;
  }
  else
  {
    LOBYTE(v61) = 0;
    sub_2445CE340();
    uint64_t v29 = v6;
    uint64_t v30 = v22;
    sub_2445EF668();
    uint64_t v37 = v29;
    char v65 = 0;
    sub_2445B3F58();
    sub_2445EF708();
    uint64_t v39 = v21;
    uint64_t v57 = v8;
    char v40 = v30;
    uint64_t v41 = v61;
    uint64_t v42 = v62;
    char v43 = v63;
    char v64 = 1;
    sub_2445CE430();
    sub_2445EF708();
    uint64_t v35 = (uint64_t)v59;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v40, v39);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v37);
    char v44 = v65;
    char v45 = v48;
    void *v48 = v41;
    v45[1] = v42;
    *((unsigned char *)v45 + 16) = v43;
    *((unsigned char *)v45 + 17) = v44;
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = (uint64_t)v45;
  }
  uint64_t v46 = (uint64_t)v49;
  sub_2445CE134(v36, (uint64_t)v49, type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum);
  sub_2445CE134(v46, v51, type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum);
  return __swift_destroy_boxed_opaque_existential_0(v35);
}

uint64_t sub_2445CA4D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum.init(from:)(a1, a2);
}

uint64_t sub_2445CA4F0(void *a1)
{
  return ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum.encode(to:)(a1);
}

uint64_t sub_2445CA508()
{
  if (*v0) {
    return 0x656369766564;
  }
  else {
    return 1919251317;
  }
}

uint64_t sub_2445CA538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445CEE04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445CA560(uint64_t a1)
{
  unint64_t v2 = sub_2445CE484();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445CA59C(uint64_t a1)
{
  unint64_t v2 = sub_2445CE484();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445CA5D8(uint64_t a1)
{
  unint64_t v2 = sub_2445CE4D8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445CA614(uint64_t a1)
{
  unint64_t v2 = sub_2445CE4D8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445CA650(uint64_t a1)
{
  unint64_t v2 = sub_2445CE52C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445CA68C(uint64_t a1)
{
  unint64_t v2 = sub_2445CE52C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ManagedAppDeclaration.InstallBehavior.LicenseEnum.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D7F8);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D800);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D808);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445CE484();
  sub_2445EFA18();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_2445CE4D8();
    uint64_t v14 = v18;
    sub_2445EF748();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_2445CE52C();
    sub_2445EF748();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t ManagedAppDeclaration.InstallBehavior.LicenseEnum.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D828);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D830);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D838);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445CE484();
  uint64_t v11 = v32;
  sub_2445EF9E8();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_2445EF728();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_2445EF5A8();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CEB0);
    *char v22 = &type metadata for ManagedAppDeclaration.InstallBehavior.LicenseEnum;
    sub_2445EF678();
    sub_2445EF598();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_2445CE4D8();
    uint64_t v18 = v14;
    sub_2445EF668();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_2445CE52C();
    sub_2445EF668();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_0(v23);
}

uint64_t sub_2445CADC8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ManagedAppDeclaration.InstallBehavior.LicenseEnum.init(from:)(a1, a2);
}

uint64_t sub_2445CADE0(void *a1)
{
  return ManagedAppDeclaration.InstallBehavior.LicenseEnum.encode(to:)(a1);
}

uint64_t sub_2445CADF8()
{
  unint64_t v1 = 0xD000000000000016;
  if (*v0 != 1) {
    unint64_t v1 = 0x6573616863727570;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x546C6C6174736E69;
  }
}

uint64_t sub_2445CAE70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445CEEE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445CAE98(uint64_t a1)
{
  unint64_t v2 = sub_2445CE580();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445CAED4(uint64_t a1)
{
  unint64_t v2 = sub_2445CE580();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ManagedAppDeclaration.InstallBehavior.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D840);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445CE580();
  sub_2445EFA18();
  v10[15] = *v3;
  v10[14] = 0;
  sub_2445CE5D4();
  sub_2445EF7D8();
  if (!v2)
  {
    v10[13] = 1;
    sub_2445EF7A8();
    type metadata accessor for ManagedAppDeclaration.InstallBehavior(0);
    v10[12] = 2;
    type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
    sub_2445CE3E8(&qword_268E8D858, (void (*)(uint64_t))type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum);
    sub_2445EF7D8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ManagedAppDeclaration.InstallBehavior.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v22 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  MEMORY[0x270FA5388](v22);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D860);
  uint64_t v21 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ManagedAppDeclaration.InstallBehavior(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445CE580();
  sub_2445EF9E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v19 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = v21;
  char v26 = 0;
  sub_2445CE628();
  uint64_t v13 = v23;
  sub_2445EF708();
  *uint64_t v11 = v27;
  char v25 = 1;
  char v14 = sub_2445EF6D8();
  uint64_t v18 = v11;
  v11[1] = v14 & 1;
  char v24 = 2;
  sub_2445CE3E8(&qword_268E8D870, (void (*)(uint64_t))type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum);
  sub_2445EF708();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v13);
  uint64_t v15 = v20;
  uint64_t v16 = (uint64_t)v18;
  sub_2445CE134((uint64_t)v5, (uint64_t)&v18[*(int *)(v19 + 24)], type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum);
  sub_2445CE044(v16, v15, type metadata accessor for ManagedAppDeclaration.InstallBehavior);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_2445CEAC0(v16, type metadata accessor for ManagedAppDeclaration.InstallBehavior);
}

uint64_t sub_2445CB448@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ManagedAppDeclaration.InstallBehavior.init(from:)(a1, a2);
}

uint64_t sub_2445CB460(void *a1)
{
  return ManagedAppDeclaration.InstallBehavior.encode(to:)(a1);
}

uint64_t ManagedAppDeclaration.BackupBehavior.backupAppData.getter()
{
  return *v0;
}

uint64_t ManagedAppDeclaration.BackupBehavior.backupAppData.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*ManagedAppDeclaration.BackupBehavior.backupAppData.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppDeclaration.BackupBehavior.init(backupAppData:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_2445CB4B0()
{
  return 0x704170756B636162;
}

uint64_t sub_2445CB4D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x704170756B636162 && a2 == 0xED00006174614470)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2445EF848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2445CB590(uint64_t a1)
{
  unint64_t v2 = sub_2445CE67C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445CB5CC(uint64_t a1)
{
  unint64_t v2 = sub_2445CE67C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ManagedAppDeclaration.BackupBehavior.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D878);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445CE67C();
  sub_2445EFA18();
  sub_2445EF7A8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t ManagedAppDeclaration.BackupBehavior.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D888);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445CE67C();
  sub_2445EF9E8();
  if (!v2)
  {
    char v9 = sub_2445EF6D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2445CB890@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ManagedAppDeclaration.BackupBehavior.init(from:)(a1, a2);
}

uint64_t sub_2445CB8A8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D878);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445CE67C();
  sub_2445EFA18();
  sub_2445EF7A8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t static ManagedAppDeclaration.UpdateBehavior.automaticallyUpdate(evid:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = a2 & 1;
  return result;
}

uint64_t sub_2445CB9EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2445EF848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2445CBA84(uint64_t a1)
{
  unint64_t v2 = sub_2445CE6D0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445CBAC0(uint64_t a1)
{
  unint64_t v2 = sub_2445CE6D0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ManagedAppDeclaration.UpdateBehavior.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D890);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  char v8 = *((unsigned char *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445CE6D0();
  sub_2445EFA18();
  uint64_t v10 = v7;
  char v11 = v8;
  sub_2445CE724();
  sub_2445EF7D8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ManagedAppDeclaration.UpdateBehavior.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D8A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445CE6D0();
  sub_2445EF9E8();
  if (!v2)
  {
    sub_2445CE778();
    sub_2445EF708();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v9 = v12;
    *(void *)a2 = v11;
    *(unsigned char *)(a2 + 8) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2445CBDC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ManagedAppDeclaration.UpdateBehavior.init(from:)(a1, a2);
}

uint64_t sub_2445CBDDC(void *a1)
{
  return ManagedAppDeclaration.UpdateBehavior.encode(to:)(a1);
}

uint64_t sub_2445CBDF4()
{
  return 1684633189;
}

uint64_t sub_2445CBE04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1684633189 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2445EF848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2445CBE8C(uint64_t a1)
{
  unint64_t v2 = sub_2445CE820();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445CBEC8(uint64_t a1)
{
  unint64_t v2 = sub_2445CE820();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_2445CBF04()
{
  return 0xD000000000000013;
}

uint64_t sub_2445CBF20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445CF078(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2445CBF4C(uint64_t a1)
{
  unint64_t v2 = sub_2445CE7CC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445CBF88(uint64_t a1)
{
  unint64_t v2 = sub_2445CE7CC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ManagedAppDeclaration.UpdateBehaviorEnum.encode(to:)(void *a1)
{
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D8B8);
  uint64_t v3 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  char v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D8C0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v1;
  v12[3] = *((unsigned __int8 *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445CE7CC();
  sub_2445EFA18();
  sub_2445CE820();
  sub_2445EF748();
  uint64_t v10 = v14;
  sub_2445EF788();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t ManagedAppDeclaration.UpdateBehaviorEnum.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v26 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D8D8);
  uint64_t v27 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D8E0);
  uint64_t v28 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445CE7CC();
  sub_2445EF9E8();
  if (v2) {
    goto LABEL_7;
  }
  char v25 = a1;
  uint64_t v10 = v9;
  if (*(void *)(sub_2445EF728() + 16) != 1)
  {
    uint64_t v13 = sub_2445EF5A8();
    swift_allocError();
    uint64_t v14 = v7;
    uint64_t v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CEB0);
    *uint64_t v16 = &type metadata for ManagedAppDeclaration.UpdateBehaviorEnum;
    sub_2445EF678();
    sub_2445EF598();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v13 - 8) + 104))(v16, *MEMORY[0x263F8DCB0], v13);
    swift_willThrow();
    uint64_t v17 = v28;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v14);
    a1 = v25;
LABEL_7:
    uint64_t v22 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v22);
  }
  sub_2445CE820();
  uint64_t v11 = v6;
  sub_2445EF668();
  uint64_t v12 = v28;
  uint64_t v19 = sub_2445EF6B8();
  char v21 = v20;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v4);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v7);
  uint64_t v22 = (uint64_t)v25;
  uint64_t v23 = v26;
  *char v26 = v19;
  *((unsigned char *)v23 + 8) = v21 & 1;
  return __swift_destroy_boxed_opaque_existential_0(v22);
}

uint64_t sub_2445CC534@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ManagedAppDeclaration.UpdateBehaviorEnum.init(from:)(a1, a2);
}

uint64_t sub_2445CC54C(void *a1)
{
  return ManagedAppDeclaration.UpdateBehaviorEnum.encode(to:)(a1);
}

uint64_t ManagedAppDeclaration.RemovalBehavior.removable.getter()
{
  return *v0;
}

uint64_t (*ManagedAppDeclaration.RemovalBehavior.removable.modify())()
{
  return nullsub_1;
}

uint64_t ManagedAppDeclaration.RemovalBehavior.init(from:)@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
  *a2 = 1;
  return result;
}

uint64_t sub_2445CC5C4(char a1)
{
  uint64_t result = 0x746172616C636564;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000015;
      break;
    case 2:
      uint64_t result = 0x656D6567616E616DLL;
      break;
    case 3:
      uint64_t result = 0xD000000000000011;
      break;
    case 4:
      uint64_t result = 0x7475626972747461;
      break;
    case 5:
      uint64_t result = 0x426C6C6174736E69;
      break;
    case 6:
      uint64_t v3 = 0x70756B636162;
      goto LABEL_9;
    case 7:
      uint64_t v3 = 0x657461647075;
LABEL_9:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6542000000000000;
      break;
    case 8:
      uint64_t result = 0x6D726F6674616C70;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2445CC71C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
  *a2 = 1;
  return result;
}

uint64_t sub_2445CC750()
{
  return sub_2445CC5C4(*v0);
}

uint64_t sub_2445CC758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445CF100(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445CC780(uint64_t a1)
{
  unint64_t v2 = sub_2445CE874();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445CC7BC(uint64_t a1)
{
  unint64_t v2 = sub_2445CE874();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ManagedAppDeclaration.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D8E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445CE874();
  sub_2445EFA18();
  LOBYTE(v13) = 0;
  sub_2445EF798();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_2445EF798();
    LOBYTE(v13) = *(unsigned char *)(v3 + 32);
    char v14 = 2;
    sub_2445CE8C8();
    sub_2445EF7D8();
    LOBYTE(v13) = 3;
    sub_2445EF758();
    long long v13 = *(_OWORD *)(v3 + 56);
    char v14 = 4;
    sub_2445CE91C();
    sub_2445EF778();
    char v9 = (int *)type metadata accessor for ManagedAppDeclaration(0);
    LOBYTE(v13) = 5;
    type metadata accessor for ManagedAppDeclaration.InstallBehavior(0);
    sub_2445CE3E8(&qword_268E8D908, (void (*)(uint64_t))type metadata accessor for ManagedAppDeclaration.InstallBehavior);
    sub_2445EF7D8();
    LOBYTE(v13) = *(unsigned char *)(v3 + v9[10]);
    char v14 = 6;
    sub_2445CE970();
    sub_2445EF7D8();
    uint64_t v10 = (uint64_t *)(v3 + v9[11]);
    uint64_t v11 = *v10;
    LOBYTE(v10) = *((unsigned char *)v10 + 8);
    *(void *)&long long v13 = v11;
    BYTE8(v13) = (_BYTE)v10;
    char v14 = 7;
    sub_2445CE724();
    sub_2445EF7D8();
    *(void *)&long long v13 = *(void *)(v3 + v9[12]);
    char v14 = 8;
    sub_244589980();
    sub_2445EF7D8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ManagedAppDeclaration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = type metadata accessor for ManagedAppDeclaration.InstallBehavior(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D918);
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for ManagedAppDeclaration(0);
  MEMORY[0x270FA5388](v26);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v10 + 5) = 0;
  *((void *)v10 + 6) = 0;
  *((void *)v10 + 7) = 0;
  *((void *)v10 + 8) = 0xF000000000000000;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445CE874();
  uint64_t v11 = v27;
  sub_2445EF9E8();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    return sub_24459D73C(*((void *)v10 + 7), *((void *)v10 + 8));
  }
  else
  {
    uint64_t v12 = (uint64_t)v5;
    LOBYTE(v28) = 0;
    uint64_t v13 = v25;
    *(void *)uint64_t v10 = sub_2445EF6C8();
    *((void *)v10 + 1) = v15;
    LOBYTE(v28) = 1;
    *((void *)v10 + 2) = sub_2445EF6C8();
    *((void *)v10 + 3) = v16;
    char v29 = 2;
    sub_2445CE9C4();
    sub_2445EF708();
    v10[32] = v28;
    LOBYTE(v28) = 3;
    *((void *)v10 + 5) = sub_2445EF688();
    *((void *)v10 + 6) = v17;
    char v29 = 4;
    sub_2445CEA18();
    sub_2445EF6A8();
    *(_OWORD *)(v10 + 56) = v28;
    LOBYTE(v28) = 5;
    sub_2445CE3E8(&qword_268E8D930, (void (*)(uint64_t))type metadata accessor for ManagedAppDeclaration.InstallBehavior);
    sub_2445EF708();
    uint64_t v18 = (int *)v26;
    sub_2445CE134(v12, (uint64_t)&v10[*(int *)(v26 + 36)], type metadata accessor for ManagedAppDeclaration.InstallBehavior);
    char v29 = 6;
    sub_2445CEA6C();
    sub_2445EF708();
    v10[v18[10]] = v28;
    char v29 = 7;
    sub_2445CE778();
    sub_2445EF708();
    uint64_t v19 = v24;
    char v20 = BYTE8(v28);
    char v21 = &v10[v18[11]];
    *(void *)char v21 = v28;
    v21[8] = v20;
    char v29 = 8;
    sub_244589AF4();
    sub_2445EF708();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v13);
    *(void *)&v10[v18[12]] = v28;
    sub_2445CE044((uint64_t)v10, v23, type metadata accessor for ManagedAppDeclaration);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return sub_2445CEAC0((uint64_t)v10, type metadata accessor for ManagedAppDeclaration);
  }
}

uint64_t sub_2445CD110@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ManagedAppDeclaration.init(from:)(a1, a2);
}

uint64_t sub_2445CD128(void *a1)
{
  return ManagedAppDeclaration.encode(to:)(a1);
}

uint64_t StoreAppIdentifier.bundleID.getter(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return 0;
  }
  uint64_t v3 = a1;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t StoreAppIdentifier.itemID.getter(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return 0;
  }
  return result;
}

uint64_t StoreAppIdentifier.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    sub_2445EF958();
    return sub_2445EF198();
  }
  else
  {
    sub_2445EF958();
    return sub_2445EF978();
  }
}

uint64_t static StoreAppIdentifier.== infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a3 & 1) == 0) {
    return (a6 & 1) == 0 && a1 == a4;
  }
  if (a6)
  {
    if (a1 == a4 && a2 == a5) {
      return 1;
    }
    else {
      return sub_2445EF848();
    }
  }
  else
  {
    return 0;
  }
}

uint64_t sub_2445CD250(uint64_t a1)
{
  unint64_t v2 = sub_2445CEB74();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445CD28C(uint64_t a1)
{
  unint64_t v2 = sub_2445CEB74();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445CD2C8()
{
  if (*v0) {
    return 0x4449656C646E7562;
  }
  else {
    return 0x44496D657469;
  }
}

uint64_t sub_2445CD300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445CF550(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445CD328(uint64_t a1)
{
  unint64_t v2 = sub_2445CEB20();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445CD364(uint64_t a1)
{
  unint64_t v2 = sub_2445CEB20();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445CD3A0(uint64_t a1)
{
  unint64_t v2 = sub_2445CEBC8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445CD3DC(uint64_t a1)
{
  unint64_t v2 = sub_2445CEBC8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StoreAppIdentifier.encode(to:)(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v20 = a2;
  int v21 = a4;
  v17[1] = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D940);
  uint64_t v18 = *(void *)(v5 - 8);
  uint64_t v19 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D948);
  v17[0] = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D950);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  char v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445CEB20();
  sub_2445EFA18();
  if (v21)
  {
    char v23 = 1;
    sub_2445CEB74();
    sub_2445EF748();
    uint64_t v15 = v19;
    sub_2445EF798();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v15);
  }
  else
  {
    char v22 = 0;
    sub_2445CEBC8();
    sub_2445EF748();
    sub_2445EF7E8();
    (*(void (**)(char *, uint64_t))(v17[0] + 8))(v10, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t StoreAppIdentifier.hashValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    sub_2445EF198();
  }
  else {
    sub_2445EF978();
  }
  return sub_2445EF988();
}

uint64_t StoreAppIdentifier.init(from:)(void *a1)
{
  uint64_t result = sub_2445CF63C(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_2445CD7A4()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_2445EF948();
  sub_2445EF958();
  if (v1 == 1) {
    sub_2445EF198();
  }
  else {
    sub_2445EF978();
  }
  return sub_2445EF988();
}

uint64_t sub_2445CD82C()
{
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    sub_2445EF958();
    return sub_2445EF198();
  }
  else
  {
    sub_2445EF958();
    return sub_2445EF978();
  }
}

uint64_t sub_2445CD8B4()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_2445EF948();
  sub_2445EF958();
  if (v1 == 1) {
    sub_2445EF198();
  }
  else {
    sub_2445EF978();
  }
  return sub_2445EF988();
}

uint64_t sub_2445CD938@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_2445CF63C(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_2445CD96C(void *a1)
{
  return StoreAppIdentifier.encode(to:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_2445CD98C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  int v5 = *((unsigned __int8 *)a2 + 16);
  if (*((unsigned char *)a1 + 16) != 1) {
    return (v3 == v4) & ~v5;
  }
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = a1[1];
  if (v3 == v4 && v6 == a2[1]) {
    return 1;
  }
  else {
    return sub_2445EF848();
  }
}

uint64_t StoreAppIdentifier.description.getter(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_2445CFB28();
    return sub_2445EF498();
  }
  return a1;
}

uint64_t sub_2445CDA54()
{
  uint64_t v1 = *v0;
  if (*((unsigned char *)v0 + 16) == 1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_2445CFB28();
    return sub_2445EF498();
  }
  return v1;
}

uint64_t sub_2445CDAC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D6574737973 && a2 == 0xE600000000000000;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1919251317 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2445CDBA0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DBA0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  MEMORY[0x270FA5388](v2);
  int v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DBA8);
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_268E8DBB0);
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)a1, *(void *)(a1 + 24));
  sub_2445C82E0();
  uint64_t v12 = v26;
  sub_2445EF9E8();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v13 = v25;
  uint64_t v21 = v6;
  uint64_t v26 = a1;
  uint64_t v14 = sub_2445EF728();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = sub_2445EF5A8();
    swift_allocError();
    uint64_t v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CEB0);
    *uint64_t v18 = &type metadata for ManagedAppDeclaration.ManagementScope;
    sub_2445EF678();
    sub_2445EF598();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x263F8DCB0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
    a1 = v26;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_0(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v14 + 32);
  if (a1)
  {
    LODWORD(v25) = *(unsigned __int8 *)(v14 + 32);
    char v28 = 1;
    sub_2445C8334();
    sub_2445EF668();
    uint64_t v15 = v24;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v9);
    a1 = v25;
  }
  else
  {
    char v27 = 0;
    sub_2445C8388();
    sub_2445EF668();
    uint64_t v19 = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  }
  __swift_destroy_boxed_opaque_existential_0(v26);
  return a1;
}

unint64_t sub_2445CDFF0()
{
  unint64_t result = qword_268E8D748;
  if (!qword_268E8D748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D748);
  }
  return result;
}

uint64_t sub_2445CE044(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(uint64_t a1)
{
  return sub_2445D1980(a1, (uint64_t *)&unk_26B0CE3E8);
}

uint64_t sub_2445CE0CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_2445CE134(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_2445CE19C()
{
  unint64_t result = qword_268E8D770;
  if (!qword_268E8D770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D770);
  }
  return result;
}

unint64_t sub_2445CE1F0()
{
  unint64_t result = qword_268E8D778;
  if (!qword_268E8D778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D778);
  }
  return result;
}

unint64_t sub_2445CE244()
{
  unint64_t result = qword_268E8D780;
  if (!qword_268E8D780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D780);
  }
  return result;
}

unint64_t sub_2445CE298()
{
  unint64_t result = qword_268E8D7B8;
  if (!qword_268E8D7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D7B8);
  }
  return result;
}

unint64_t sub_2445CE2EC()
{
  unint64_t result = qword_268E8D7C0;
  if (!qword_268E8D7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D7C0);
  }
  return result;
}

unint64_t sub_2445CE340()
{
  unint64_t result = qword_268E8D7C8;
  if (!qword_268E8D7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D7C8);
  }
  return result;
}

unint64_t sub_2445CE394()
{
  unint64_t result = qword_268E8D7D0;
  if (!qword_268E8D7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D7D0);
  }
  return result;
}

uint64_t sub_2445CE3E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2445CE430()
{
  unint64_t result = qword_268E8D7F0;
  if (!qword_268E8D7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D7F0);
  }
  return result;
}

unint64_t sub_2445CE484()
{
  unint64_t result = qword_268E8D810;
  if (!qword_268E8D810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D810);
  }
  return result;
}

unint64_t sub_2445CE4D8()
{
  unint64_t result = qword_268E8D818;
  if (!qword_268E8D818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D818);
  }
  return result;
}

unint64_t sub_2445CE52C()
{
  unint64_t result = qword_268E8D820;
  if (!qword_268E8D820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D820);
  }
  return result;
}

unint64_t sub_2445CE580()
{
  unint64_t result = qword_268E8D848;
  if (!qword_268E8D848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D848);
  }
  return result;
}

unint64_t sub_2445CE5D4()
{
  unint64_t result = qword_268E8D850;
  if (!qword_268E8D850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D850);
  }
  return result;
}

unint64_t sub_2445CE628()
{
  unint64_t result = qword_268E8D868;
  if (!qword_268E8D868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D868);
  }
  return result;
}

unint64_t sub_2445CE67C()
{
  unint64_t result = qword_268E8D880;
  if (!qword_268E8D880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D880);
  }
  return result;
}

unint64_t sub_2445CE6D0()
{
  unint64_t result = qword_268E8D898;
  if (!qword_268E8D898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D898);
  }
  return result;
}

unint64_t sub_2445CE724()
{
  unint64_t result = qword_268E8D8A0;
  if (!qword_268E8D8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D8A0);
  }
  return result;
}

unint64_t sub_2445CE778()
{
  unint64_t result = qword_268E8D8B0;
  if (!qword_268E8D8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D8B0);
  }
  return result;
}

unint64_t sub_2445CE7CC()
{
  unint64_t result = qword_268E8D8C8;
  if (!qword_268E8D8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D8C8);
  }
  return result;
}

unint64_t sub_2445CE820()
{
  unint64_t result = qword_268E8D8D0;
  if (!qword_268E8D8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D8D0);
  }
  return result;
}

unint64_t sub_2445CE874()
{
  unint64_t result = qword_268E8D8F0;
  if (!qword_268E8D8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D8F0);
  }
  return result;
}

unint64_t sub_2445CE8C8()
{
  unint64_t result = qword_268E8D8F8;
  if (!qword_268E8D8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D8F8);
  }
  return result;
}

unint64_t sub_2445CE91C()
{
  unint64_t result = qword_268E8D900;
  if (!qword_268E8D900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D900);
  }
  return result;
}

unint64_t sub_2445CE970()
{
  unint64_t result = qword_268E8D910;
  if (!qword_268E8D910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D910);
  }
  return result;
}

unint64_t sub_2445CE9C4()
{
  unint64_t result = qword_268E8D920;
  if (!qword_268E8D920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D920);
  }
  return result;
}

unint64_t sub_2445CEA18()
{
  unint64_t result = qword_268E8D928;
  if (!qword_268E8D928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D928);
  }
  return result;
}

unint64_t sub_2445CEA6C()
{
  unint64_t result = qword_268E8D938;
  if (!qword_268E8D938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D938);
  }
  return result;
}

uint64_t sub_2445CEAC0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_2445CEB20()
{
  unint64_t result = qword_268E8D958;
  if (!qword_268E8D958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D958);
  }
  return result;
}

unint64_t sub_2445CEB74()
{
  unint64_t result = qword_268E8D960;
  if (!qword_268E8D960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D960);
  }
  return result;
}

unint64_t sub_2445CEBC8()
{
  unint64_t result = qword_268E8D968;
  if (!qword_268E8D968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D968);
  }
  return result;
}

uint64_t sub_2445CEC1C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74616964656D6D69 && a2 == 0xEB00000000796C65;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646E616D65446E6FLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2445CED28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65736E6563696CLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2445CEE04(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1919251317 && a2 == 0xE400000000000000;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656369766564 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2445CEEE0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x546C6C6174736E69 && a2 == 0xED0000676E696D69;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002445F93F0 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEE00646F6874654DLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2445CF078(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x80000002445F9410)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_2445EF848();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_2445CF100(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746172616C636564 && a2 == 0xEE0079654B6E6F69;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002445F89D0 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D6567616E616DLL && a2 == 0xEF65706F6353746ELL || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002445F9430 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x426C6C6174736E69 && a2 == 0xEF726F6976616865 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x654270756B636162 && a2 == 0xEE00726F69766168 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6542657461647075 && a2 == 0xEE00726F69766168 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6D726F6674616C70 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_2445CF550(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2445CF63C(void *a1)
{
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DB88);
  uint64_t v28 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  char v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DB90);
  uint64_t v27 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DB98);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  char v29 = a1;
  uint64_t v12 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, v11);
  sub_2445CEB20();
  uint64_t v13 = v30;
  sub_2445EF9E8();
  if (v13) {
    goto LABEL_7;
  }
  uint64_t v30 = v8;
  uint64_t v14 = v10;
  uint64_t v15 = sub_2445EF728();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v17 = sub_2445EF5A8();
    swift_allocError();
    uint64_t v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CEB0);
    *uint64_t v19 = &type metadata for StoreAppIdentifier;
    uint64_t v12 = (uint64_t)v10;
    sub_2445EF678();
    sub_2445EF598();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x263F8DCB0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v7);
LABEL_7:
    uint64_t v24 = (uint64_t)v29;
    goto LABEL_8;
  }
  int v16 = *(unsigned __int8 *)(v15 + 32);
  if (v16)
  {
    uint64_t v27 = v15;
    char v33 = 1;
    sub_2445CEB74();
    sub_2445EF668();
    int v31 = v16;
    uint64_t v25 = v7;
    uint64_t v21 = v26;
    uint64_t v22 = sub_2445EF6C8();
    uint64_t v23 = v30;
    uint64_t v12 = v22;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v3, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v25);
  }
  else
  {
    char v32 = 0;
    sub_2445CEBC8();
    sub_2445EF668();
    uint64_t v12 = sub_2445EF718();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v4);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v7);
  }
  uint64_t v24 = (uint64_t)v29;
LABEL_8:
  __swift_destroy_boxed_opaque_existential_0(v24);
  return v12;
}

unint64_t sub_2445CFB28()
{
  unint64_t result = qword_268E8D970;
  if (!qword_268E8D970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D970);
  }
  return result;
}

unint64_t sub_2445CFB80()
{
  unint64_t result = qword_268E8D978;
  if (!qword_268E8D978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D978);
  }
  return result;
}

unint64_t sub_2445CFBD8()
{
  unint64_t result = qword_268E8D980;
  if (!qword_268E8D980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D980);
  }
  return result;
}

unint64_t sub_2445CFC30()
{
  unint64_t result = qword_268E8D988;
  if (!qword_268E8D988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D988);
  }
  return result;
}

unint64_t sub_2445CFC88()
{
  unint64_t result = qword_268E8D990;
  if (!qword_268E8D990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D990);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ManagedAppDeclaration(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    uint64_t v10 = a2 + 7;
    unint64_t v11 = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 56) = *(_OWORD *)v10;
    }
    else
    {
      uint64_t v13 = *v10;
      sub_2445993EC(*v10, v11);
      *(void *)(a1 + 56) = v13;
      *(void *)(a1 + 64) = v11;
    }
    uint64_t v14 = a3[9];
    uint64_t v15 = (unsigned char *)(a1 + v14);
    uint64_t v16 = (uint64_t)a2 + v14;
    *uint64_t v15 = *((unsigned char *)a2 + v14);
    v15[1] = *((unsigned char *)a2 + v14 + 1);
    uint64_t v17 = *(int *)(type metadata accessor for ManagedAppDeclaration.InstallBehavior(0) + 24);
    uint64_t v18 = &v15[v17];
    uint64_t v19 = v16 + v17;
    type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_2445EEF28();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      uint64_t v21 = *(void *)v19;
      uint64_t v22 = *(void *)(v19 + 8);
      char v23 = *(unsigned char *)(v19 + 16);
      sub_24458565C(*(void *)v19, v22, v23);
      *(void *)uint64_t v18 = v21;
      *((void *)v18 + 1) = v22;
      unsigned char v18[16] = v23;
      v18[17] = *(unsigned char *)(v19 + 17);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = a3[11];
    *(unsigned char *)(a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    uint64_t v25 = a1 + v24;
    uint64_t v26 = (uint64_t)a2 + v24;
    *(void *)uint64_t v25 = *(void *)v26;
    *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
    *(void *)(a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
  }
  return a1;
}

uint64_t destroy for ManagedAppDeclaration(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void *)(a1 + 64);
  if (v4 >> 60 != 15) {
    sub_244599358(*(void *)(a1 + 56), v4);
  }
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  uint64_t v6 = v5 + *(int *)(type metadata accessor for ManagedAppDeclaration.InstallBehavior(0) + 24);
  type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_2445EEF28();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    uint64_t v10 = *(void *)v6;
    uint64_t v11 = *(void *)(v6 + 8);
    char v12 = *(unsigned char *)(v6 + 16);
    return sub_244585A1C(v10, v11, v12);
  }
}

uint64_t initializeWithCopy for ManagedAppDeclaration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  uint64_t v9 = (uint64_t *)(a2 + 56);
  unint64_t v10 = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v11 = *v9;
    sub_2445993EC(*v9, v10);
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v10;
  }
  uint64_t v12 = a3[9];
  uint64_t v13 = (unsigned char *)(a1 + v12);
  uint64_t v14 = a2 + v12;
  *uint64_t v13 = *(unsigned char *)(a2 + v12);
  v13[1] = *(unsigned char *)(a2 + v12 + 1);
  uint64_t v15 = *(int *)(type metadata accessor for ManagedAppDeclaration.InstallBehavior(0) + 24);
  uint64_t v16 = &v13[v15];
  uint64_t v17 = v14 + v15;
  type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_2445EEF28();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    uint64_t v19 = *(void *)v17;
    uint64_t v20 = *(void *)(v17 + 8);
    char v21 = *(unsigned char *)(v17 + 16);
    sub_24458565C(*(void *)v17, v20, v21);
    *(void *)uint64_t v16 = v19;
    *((void *)v16 + 1) = v20;
    v16[16] = v21;
    v16[17] = *(unsigned char *)(v17 + 17);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(void *)uint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t assignWithCopy for ManagedAppDeclaration(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (uint64_t *)(a2 + 56);
  unint64_t v7 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64) >> 60 == 15)
  {
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *v6;
      sub_2445993EC(*v6, *(void *)(a2 + 64));
      *(void *)(a1 + 56) = v8;
      *(void *)(a1 + 64) = v7;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
    sub_2445D03D8(a1 + 56);
LABEL_6:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  uint64_t v9 = *v6;
  sub_2445993EC(*v6, *(void *)(a2 + 64));
  uint64_t v10 = *(void *)(a1 + 56);
  unint64_t v11 = *(void *)(a1 + 64);
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v7;
  sub_244599358(v10, v11);
LABEL_8:
  uint64_t v12 = a3[9];
  uint64_t v13 = (unsigned char *)(a1 + v12);
  uint64_t v14 = a2 + v12;
  *uint64_t v13 = *(unsigned char *)(a2 + v12);
  v13[1] = *(unsigned char *)(a2 + v12 + 1);
  uint64_t v15 = type metadata accessor for ManagedAppDeclaration.InstallBehavior(0);
  if (a1 != a2)
  {
    uint64_t v16 = *(int *)(v15 + 24);
    uint64_t v17 = (uint64_t)&v13[v16];
    uint64_t v18 = v14 + v16;
    sub_2445CEAC0(v17, type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum);
    type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_2445EEF28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      uint64_t v20 = *(void *)v18;
      uint64_t v21 = *(void *)(v18 + 8);
      char v22 = *(unsigned char *)(v18 + 16);
      sub_24458565C(*(void *)v18, v21, v22);
      *(void *)uint64_t v17 = v20;
      *(void *)(v17 + 8) = v21;
      *(unsigned char *)(v17 + 16) = v22;
      *(unsigned char *)(v17 + 17) = *(unsigned char *)(v18 + 17);
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v23 = a3[11];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v26 = *v25;
  *(unsigned char *)(v24 + 8) = *((unsigned char *)v25 + 8);
  *(void *)uint64_t v24 = v26;
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_2445D03D8(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for ManagedAppDeclaration(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = a3[9];
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  *uint64_t v8 = *(unsigned char *)(a2 + v7);
  v8[1] = *(unsigned char *)(a2 + v7 + 1);
  uint64_t v10 = *(int *)(type metadata accessor for ManagedAppDeclaration.InstallBehavior(0) + 24);
  unint64_t v11 = &v8[v10];
  uint64_t v12 = (const void *)(v9 + v10);
  uint64_t v13 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_2445EEF28();
    (*(void (**)(unsigned char *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  uint64_t v15 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t assignWithTake for ManagedAppDeclaration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = (_OWORD *)(a2 + 56);
  unint64_t v10 = *(void *)(a1 + 64);
  if (v10 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v11 = *(void *)(a2 + 64);
  if (v11 >> 60 == 15)
  {
    sub_2445D03D8(a1 + 56);
LABEL_4:
    *(_OWORD *)(a1 + 56) = *v9;
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)v9;
  *(void *)(a1 + 64) = v11;
  sub_244599358(v12, v10);
LABEL_6:
  uint64_t v13 = a3[9];
  uint64_t v14 = (unsigned char *)(a1 + v13);
  uint64_t v15 = a2 + v13;
  *uint64_t v14 = *(unsigned char *)(a2 + v13);
  v14[1] = *(unsigned char *)(a2 + v13 + 1);
  uint64_t v16 = type metadata accessor for ManagedAppDeclaration.InstallBehavior(0);
  if (a1 != a2)
  {
    uint64_t v17 = *(int *)(v16 + 24);
    uint64_t v18 = &v14[v17];
    uint64_t v19 = (const void *)(v15 + v17);
    sub_2445CEAC0((uint64_t)v18, type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum);
    uint64_t v20 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_2445EEF28();
      (*(void (**)(unsigned char *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  uint64_t v22 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(void *)uint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedAppDeclaration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2445D073C);
}

uint64_t sub_2445D073C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ManagedAppDeclaration.InstallBehavior(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ManagedAppDeclaration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2445D0800);
}

uint64_t sub_2445D0800(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ManagedAppDeclaration.InstallBehavior(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2445D08A8()
{
  uint64_t result = type metadata accessor for ManagedAppDeclaration.InstallBehavior(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.ManagementScope()
{
  return &type metadata for ManagedAppDeclaration.ManagementScope;
}

uint64_t *initializeBufferWithCopyOfBuffer for ManagedAppDeclaration.Attributes(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_2445993EC(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for ManagedAppDeclaration.Attributes(uint64_t a1)
{
  return sub_244599358(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *assignWithCopy for ManagedAppDeclaration.Attributes(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_2445993EC(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_244599358(v5, v6);
  return a1;
}

uint64_t *assignWithTake for ManagedAppDeclaration.Attributes(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_244599358(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedAppDeclaration.Attributes(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ManagedAppDeclaration.Attributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)uint64_t result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.Attributes()
{
  return &type metadata for ManagedAppDeclaration.Attributes;
}

void *initializeBufferWithCopyOfBuffer for ManagedAppDeclaration.InstallBehavior(unsigned char *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *unsigned int v3 = *a2;
    unsigned int v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    a1[1] = *((unsigned char *)a2 + 1);
    uint64_t v5 = *(int *)(a3 + 24);
    unint64_t v6 = &a1[v5];
    uint64_t v7 = (uint64_t)a2 + v5;
    type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_2445EEF28();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      uint64_t v10 = *(void *)v7;
      uint64_t v11 = *(void *)(v7 + 8);
      char v12 = *(unsigned char *)(v7 + 16);
      sub_24458565C(*(void *)v7, v11, v12);
      *(void *)unint64_t v6 = v10;
      *((void *)v6 + 1) = v11;
      v6[16] = v12;
      v6[17] = *(unsigned char *)(v7 + 17);
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t destroy for ManagedAppDeclaration.InstallBehavior(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_2445EEF28();
    int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(v2, v3);
  }
  else
  {
    uint64_t v6 = *(void *)v2;
    uint64_t v7 = *(void *)(v2 + 8);
    char v8 = *(unsigned char *)(v2 + 16);
    return sub_244585A1C(v6, v7, v8);
  }
}

unsigned char *initializeWithCopy for ManagedAppDeclaration.InstallBehavior(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_2445EEF28();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    uint64_t v8 = *(void *)v6;
    uint64_t v9 = *((void *)v6 + 1);
    char v10 = v6[16];
    sub_24458565C(*(void *)v6, v9, v10);
    *(void *)uint64_t v5 = v8;
    *((void *)v5 + 1) = v9;
    v5[16] = v10;
    v5[17] = v6[17];
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *assignWithCopy for ManagedAppDeclaration.InstallBehavior(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 24);
    uint64_t v5 = &a1[v4];
    uint64_t v6 = &a2[v4];
    sub_2445CEAC0((uint64_t)&a1[v4], type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum);
    type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_2445EEF28();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
    }
    else
    {
      uint64_t v8 = *(void *)v6;
      uint64_t v9 = *((void *)v6 + 1);
      char v10 = v6[16];
      sub_24458565C(*(void *)v6, v9, v10);
      *(void *)uint64_t v5 = v8;
      *((void *)v5 + 1) = v9;
      v5[16] = v10;
      v5[17] = v6[17];
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *initializeWithTake for ManagedAppDeclaration.InstallBehavior(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_2445EEF28();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

unsigned char *assignWithTake for ManagedAppDeclaration.InstallBehavior(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 24);
    uint64_t v5 = &a1[v4];
    uint64_t v6 = &a2[v4];
    sub_2445CEAC0((uint64_t)&a1[v4], type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum);
    uint64_t v7 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_2445EEF28();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedAppDeclaration.InstallBehavior(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2445D10F4);
}

uint64_t sub_2445D10F4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    if (v4 >= 2) {
      return v4 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 24)];
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ManagedAppDeclaration.InstallBehavior(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2445D11B0);
}

unsigned char *sub_2445D11B0(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 24)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2445D1254()
{
  uint64_t result = type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.InstallBehavior.InstallTiming()
{
  return &type metadata for ManagedAppDeclaration.InstallBehavior.InstallTiming;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.InstallBehavior.InstallTimingEnum()
{
  return &type metadata for ManagedAppDeclaration.InstallBehavior.InstallTimingEnum;
}

unint64_t initializeBufferWithCopyOfBuffer for ManagedAppDeclaration.InstallBehavior.PurchaseMethod(unint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0)
                             - 8)
                 + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v6 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_2445EEF28();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      uint64_t v7 = *(void *)a2;
      uint64_t v8 = *(void *)(a2 + 8);
      char v9 = *(unsigned char *)(a2 + 16);
      sub_24458565C(*(void *)a2, v8, v9);
      *(void *)a1 = v7;
      *(void *)(a1 + 8) = v8;
      *(unsigned char *)(a1 + 16) = v9;
      *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ManagedAppDeclaration.InstallBehavior.PurchaseMethod(uint64_t a1)
{
  type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_2445EEF28();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    uint64_t v5 = *(void *)a1;
    uint64_t v6 = *(void *)(a1 + 8);
    char v7 = *(unsigned char *)(a1 + 16);
    return sub_244585A1C(v5, v6, v7);
  }
}

uint64_t initializeWithCopy for ManagedAppDeclaration.InstallBehavior.PurchaseMethod(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_2445EEF28();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    uint64_t v5 = *(void *)a2;
    uint64_t v6 = *(void *)(a2 + 8);
    char v7 = *(unsigned char *)(a2 + 16);
    sub_24458565C(*(void *)a2, v6, v7);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for ManagedAppDeclaration.InstallBehavior.PurchaseMethod(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2445CEAC0(a1, type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum);
    type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_2445EEF28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      uint64_t v5 = *(void *)a2;
      uint64_t v6 = *(void *)(a2 + 8);
      char v7 = *(unsigned char *)(a2 + 16);
      sub_24458565C(*(void *)a2, v6, v7);
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = v6;
      *(unsigned char *)(a1 + 16) = v7;
      *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for ManagedAppDeclaration.InstallBehavior.PurchaseMethod(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_2445EEF28();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for ManagedAppDeclaration.InstallBehavior.PurchaseMethod(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_2445CEAC0((uint64_t)a1, type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum);
    uint64_t v4 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_2445EEF28();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedAppDeclaration.InstallBehavior.PurchaseMethod(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2445D1870);
}

uint64_t sub_2445D1870(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ManagedAppDeclaration.InstallBehavior.PurchaseMethod(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2445D18F0);
}

uint64_t sub_2445D18F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethod(uint64_t a1)
{
  return sub_2445D1980(a1, (uint64_t *)&unk_268E8D998);
}

uint64_t sub_2445D1980(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2445D19B8()
{
  uint64_t result = type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v7 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_2445EEF28();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v8 = *(void *)a2;
      uint64_t v9 = *(void *)(a2 + 8);
      char v10 = *(unsigned char *)(a2 + 16);
      sub_24458565C(*(void *)a2, v9, v10);
      *(void *)a1 = v8;
      *(void *)(a1 + 8) = v9;
      *(unsigned char *)(a1 + 16) = v10;
      *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_2445EEF28();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    uint64_t v5 = *(void *)a1;
    uint64_t v6 = *(void *)(a1 + 8);
    char v7 = *(unsigned char *)(a1 + 16);
    return sub_244585A1C(v5, v6, v7);
  }
}

uint64_t initializeWithCopy for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_2445EEF28();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    uint64_t v5 = *(void *)a2;
    uint64_t v6 = *(void *)(a2 + 8);
    char v7 = *(unsigned char *)(a2 + 16);
    sub_24458565C(*(void *)a2, v6, v7);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2445CEAC0(a1, type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_2445EEF28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      uint64_t v5 = *(void *)a2;
      uint64_t v6 = *(void *)(a2 + 8);
      char v7 = *(unsigned char *)(a2 + 16);
      sub_24458565C(*(void *)a2, v6, v7);
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = v6;
      *(unsigned char *)(a1 + 16) = v7;
      *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_2445EEF28();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2445CEAC0((uint64_t)a1, type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_2445EEF28();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_2445D1FB0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2445D1FC0()
{
  uint64_t result = sub_2445EEF28();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.InstallBehavior.License()
{
  return &type metadata for ManagedAppDeclaration.InstallBehavior.License;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum()
{
  return &type metadata for ManagedAppDeclaration.InstallBehavior.LicenseEnum;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.BackupBehavior()
{
  return &type metadata for ManagedAppDeclaration.BackupBehavior;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ManagedAppDeclaration.UpdateBehavior(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ManagedAppDeclaration.UpdateBehavior(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.UpdateBehavior()
{
  return &type metadata for ManagedAppDeclaration.UpdateBehavior;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.UpdateBehaviorEnum()
{
  return &type metadata for ManagedAppDeclaration.UpdateBehaviorEnum;
}

unsigned char *_s22ManagedAppDistribution21ManagedAppDeclarationV14BackupBehaviorVwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445D21D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.RemovalBehavior()
{
  return &type metadata for ManagedAppDeclaration.RemovalBehavior;
}

uint64_t destroy for StoreAppIdentifier(uint64_t a1)
{
  return sub_244585A1C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s22ManagedAppDistribution18StoreAppIdentifierOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24458565C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for StoreAppIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24458565C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_244585A1C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for StoreAppIdentifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_244585A1C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreAppIdentifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreAppIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2445D239C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_2445D23A4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for StoreAppIdentifier()
{
  return &type metadata for StoreAppIdentifier;
}

ValueMetadata *type metadata accessor for StoreAppIdentifier.CodingKeys()
{
  return &type metadata for StoreAppIdentifier.CodingKeys;
}

ValueMetadata *type metadata accessor for StoreAppIdentifier.ItemIDCodingKeys()
{
  return &type metadata for StoreAppIdentifier.ItemIDCodingKeys;
}

ValueMetadata *type metadata accessor for StoreAppIdentifier.BundleIDCodingKeys()
{
  return &type metadata for StoreAppIdentifier.BundleIDCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ManagedAppDeclaration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445D24C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.CodingKeys()
{
  return &type metadata for ManagedAppDeclaration.CodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.UpdateBehaviorEnum.CodingKeys()
{
  return &type metadata for ManagedAppDeclaration.UpdateBehaviorEnum.CodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.UpdateBehaviorEnum.AutomaticallyUpdateCodingKeys()
{
  return &type metadata for ManagedAppDeclaration.UpdateBehaviorEnum.AutomaticallyUpdateCodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.UpdateBehavior.CodingKeys()
{
  return &type metadata for ManagedAppDeclaration.UpdateBehavior.CodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.BackupBehavior.CodingKeys()
{
  return &type metadata for ManagedAppDeclaration.BackupBehavior.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ManagedAppDeclaration.InstallBehavior.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445D2604);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.InstallBehavior.CodingKeys()
{
  return &type metadata for ManagedAppDeclaration.InstallBehavior.CodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum.CodingKeys()
{
  return &type metadata for ManagedAppDeclaration.InstallBehavior.LicenseEnum.CodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum.UserCodingKeys()
{
  return &type metadata for ManagedAppDeclaration.InstallBehavior.LicenseEnum.UserCodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.InstallBehavior.LicenseEnum.DeviceCodingKeys()
{
  return &type metadata for ManagedAppDeclaration.InstallBehavior.LicenseEnum.DeviceCodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum.CodingKeys()
{
  return &type metadata for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum.CodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum.VolumePurchaseProgramCodingKeys()
{
  return &type metadata for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum.VolumePurchaseProgramCodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum.ManifestCodingKeys()
{
  return &type metadata for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum.ManifestCodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.InstallBehavior.InstallTimingEnum.CodingKeys()
{
  return &type metadata for ManagedAppDeclaration.InstallBehavior.InstallTimingEnum.CodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.InstallBehavior.InstallTimingEnum.ImmediatelyCodingKeys()
{
  return &type metadata for ManagedAppDeclaration.InstallBehavior.InstallTimingEnum.ImmediatelyCodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.InstallBehavior.InstallTimingEnum.OnDemandCodingKeys()
{
  return &type metadata for ManagedAppDeclaration.InstallBehavior.InstallTimingEnum.OnDemandCodingKeys;
}

unsigned char *_s22ManagedAppDistribution18StoreAppIdentifierO16ItemIDCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2445D2768);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.Attributes.CodingKeys()
{
  return &type metadata for ManagedAppDeclaration.Attributes.CodingKeys;
}

unsigned char *_s22ManagedAppDistribution21ManagedAppDeclarationV15ManagementScopeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445D286CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.ManagementScope.CodingKeys()
{
  return &type metadata for ManagedAppDeclaration.ManagementScope.CodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.ManagementScope.SystemCodingKeys()
{
  return &type metadata for ManagedAppDeclaration.ManagementScope.SystemCodingKeys;
}

ValueMetadata *type metadata accessor for ManagedAppDeclaration.ManagementScope.UserCodingKeys()
{
  return &type metadata for ManagedAppDeclaration.ManagementScope.UserCodingKeys;
}

unint64_t sub_2445D28C8()
{
  unint64_t result = qword_268E8D9A8;
  if (!qword_268E8D9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D9A8);
  }
  return result;
}

unint64_t sub_2445D2920()
{
  unint64_t result = qword_268E8D9B0;
  if (!qword_268E8D9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D9B0);
  }
  return result;
}

unint64_t sub_2445D2978()
{
  unint64_t result = qword_268E8D9B8;
  if (!qword_268E8D9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D9B8);
  }
  return result;
}

unint64_t sub_2445D29D0()
{
  unint64_t result = qword_268E8D9C0;
  if (!qword_268E8D9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D9C0);
  }
  return result;
}

unint64_t sub_2445D2A28()
{
  unint64_t result = qword_268E8D9C8;
  if (!qword_268E8D9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D9C8);
  }
  return result;
}

unint64_t sub_2445D2A80()
{
  unint64_t result = qword_268E8D9D0;
  if (!qword_268E8D9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D9D0);
  }
  return result;
}

unint64_t sub_2445D2AD8()
{
  unint64_t result = qword_268E8D9D8;
  if (!qword_268E8D9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D9D8);
  }
  return result;
}

unint64_t sub_2445D2B30()
{
  unint64_t result = qword_268E8D9E0;
  if (!qword_268E8D9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D9E0);
  }
  return result;
}

unint64_t sub_2445D2B88()
{
  unint64_t result = qword_268E8D9E8;
  if (!qword_268E8D9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D9E8);
  }
  return result;
}

unint64_t sub_2445D2BE0()
{
  unint64_t result = qword_268E8D9F0;
  if (!qword_268E8D9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D9F0);
  }
  return result;
}

unint64_t sub_2445D2C38()
{
  unint64_t result = qword_268E8D9F8;
  if (!qword_268E8D9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8D9F8);
  }
  return result;
}

unint64_t sub_2445D2C90()
{
  unint64_t result = qword_268E8DA00;
  if (!qword_268E8DA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DA00);
  }
  return result;
}

unint64_t sub_2445D2CE8()
{
  unint64_t result = qword_268E8DA08;
  if (!qword_268E8DA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DA08);
  }
  return result;
}

unint64_t sub_2445D2D40()
{
  unint64_t result = qword_268E8DA10;
  if (!qword_268E8DA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DA10);
  }
  return result;
}

unint64_t sub_2445D2D98()
{
  unint64_t result = qword_268E8DA18;
  if (!qword_268E8DA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DA18);
  }
  return result;
}

unint64_t sub_2445D2DF0()
{
  unint64_t result = qword_268E8DA20;
  if (!qword_268E8DA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DA20);
  }
  return result;
}

unint64_t sub_2445D2E48()
{
  unint64_t result = qword_268E8DA28;
  if (!qword_268E8DA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DA28);
  }
  return result;
}

unint64_t sub_2445D2EA0()
{
  unint64_t result = qword_268E8DA30;
  if (!qword_268E8DA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DA30);
  }
  return result;
}

unint64_t sub_2445D2EF8()
{
  unint64_t result = qword_268E8DA38;
  if (!qword_268E8DA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DA38);
  }
  return result;
}

unint64_t sub_2445D2F50()
{
  unint64_t result = qword_268E8DA40;
  if (!qword_268E8DA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DA40);
  }
  return result;
}

unint64_t sub_2445D2FA8()
{
  unint64_t result = qword_268E8DA48;
  if (!qword_268E8DA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DA48);
  }
  return result;
}

unint64_t sub_2445D3000()
{
  unint64_t result = qword_268E8DA50;
  if (!qword_268E8DA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DA50);
  }
  return result;
}

unint64_t sub_2445D3058()
{
  unint64_t result = qword_268E8DA58;
  if (!qword_268E8DA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DA58);
  }
  return result;
}

unint64_t sub_2445D30B0()
{
  unint64_t result = qword_268E8DA60;
  if (!qword_268E8DA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DA60);
  }
  return result;
}

unint64_t sub_2445D3108()
{
  unint64_t result = qword_268E8DA68;
  if (!qword_268E8DA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DA68);
  }
  return result;
}

unint64_t sub_2445D3160()
{
  unint64_t result = qword_268E8DA70;
  if (!qword_268E8DA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DA70);
  }
  return result;
}

unint64_t sub_2445D31B8()
{
  unint64_t result = qword_268E8DA78;
  if (!qword_268E8DA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DA78);
  }
  return result;
}

unint64_t sub_2445D3210()
{
  unint64_t result = qword_268E8DA80;
  if (!qword_268E8DA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DA80);
  }
  return result;
}

unint64_t sub_2445D3268()
{
  unint64_t result = qword_268E8DA88;
  if (!qword_268E8DA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DA88);
  }
  return result;
}

unint64_t sub_2445D32C0()
{
  unint64_t result = qword_268E8DA90;
  if (!qword_268E8DA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DA90);
  }
  return result;
}

unint64_t sub_2445D3318()
{
  unint64_t result = qword_268E8DA98;
  if (!qword_268E8DA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DA98);
  }
  return result;
}

unint64_t sub_2445D3370()
{
  unint64_t result = qword_268E8DAA0;
  if (!qword_268E8DAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DAA0);
  }
  return result;
}

unint64_t sub_2445D33C8()
{
  unint64_t result = qword_268E8DAA8;
  if (!qword_268E8DAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DAA8);
  }
  return result;
}

unint64_t sub_2445D3420()
{
  unint64_t result = qword_268E8DAB0;
  if (!qword_268E8DAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DAB0);
  }
  return result;
}

unint64_t sub_2445D3478()
{
  unint64_t result = qword_268E8DAB8;
  if (!qword_268E8DAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DAB8);
  }
  return result;
}

unint64_t sub_2445D34D0()
{
  unint64_t result = qword_268E8DAC0;
  if (!qword_268E8DAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DAC0);
  }
  return result;
}

unint64_t sub_2445D3528()
{
  unint64_t result = qword_268E8DAC8;
  if (!qword_268E8DAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DAC8);
  }
  return result;
}

unint64_t sub_2445D3580()
{
  unint64_t result = qword_268E8DAD0;
  if (!qword_268E8DAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DAD0);
  }
  return result;
}

unint64_t sub_2445D35D8()
{
  unint64_t result = qword_268E8DAD8;
  if (!qword_268E8DAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DAD8);
  }
  return result;
}

unint64_t sub_2445D3630()
{
  unint64_t result = qword_268E8DAE0;
  if (!qword_268E8DAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DAE0);
  }
  return result;
}

unint64_t sub_2445D3688()
{
  unint64_t result = qword_268E8DAE8;
  if (!qword_268E8DAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DAE8);
  }
  return result;
}

unint64_t sub_2445D36E0()
{
  unint64_t result = qword_268E8DAF0;
  if (!qword_268E8DAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DAF0);
  }
  return result;
}

unint64_t sub_2445D3738()
{
  unint64_t result = qword_268E8DAF8;
  if (!qword_268E8DAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DAF8);
  }
  return result;
}

unint64_t sub_2445D3790()
{
  unint64_t result = qword_268E8DB00;
  if (!qword_268E8DB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DB00);
  }
  return result;
}

unint64_t sub_2445D37E8()
{
  unint64_t result = qword_268E8DB08;
  if (!qword_268E8DB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DB08);
  }
  return result;
}

unint64_t sub_2445D3840()
{
  unint64_t result = qword_268E8DB10;
  if (!qword_268E8DB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DB10);
  }
  return result;
}

unint64_t sub_2445D3898()
{
  unint64_t result = qword_268E8DB18;
  if (!qword_268E8DB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DB18);
  }
  return result;
}

unint64_t sub_2445D38F0()
{
  unint64_t result = qword_268E8DB20;
  if (!qword_268E8DB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DB20);
  }
  return result;
}

unint64_t sub_2445D3948()
{
  unint64_t result = qword_268E8DB28;
  if (!qword_268E8DB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DB28);
  }
  return result;
}

unint64_t sub_2445D39A0()
{
  unint64_t result = qword_268E8DB30;
  if (!qword_268E8DB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DB30);
  }
  return result;
}

unint64_t sub_2445D39F8()
{
  unint64_t result = qword_268E8DB38;
  if (!qword_268E8DB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DB38);
  }
  return result;
}

unint64_t sub_2445D3A50()
{
  unint64_t result = qword_268E8DB40;
  if (!qword_268E8DB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DB40);
  }
  return result;
}

unint64_t sub_2445D3AA8()
{
  unint64_t result = qword_268E8DB48;
  if (!qword_268E8DB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DB48);
  }
  return result;
}

unint64_t sub_2445D3B00()
{
  unint64_t result = qword_268E8DB50;
  if (!qword_268E8DB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DB50);
  }
  return result;
}

unint64_t sub_2445D3B58()
{
  unint64_t result = qword_268E8DB58;
  if (!qword_268E8DB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DB58);
  }
  return result;
}

unint64_t sub_2445D3BB0()
{
  unint64_t result = qword_268E8DB60;
  if (!qword_268E8DB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DB60);
  }
  return result;
}

unint64_t sub_2445D3C08()
{
  unint64_t result = qword_268E8DB68;
  if (!qword_268E8DB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DB68);
  }
  return result;
}

unint64_t sub_2445D3C60()
{
  unint64_t result = qword_268E8DB70;
  if (!qword_268E8DB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DB70);
  }
  return result;
}

unint64_t sub_2445D3CB8()
{
  unint64_t result = qword_268E8DB78;
  if (!qword_268E8DB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DB78);
  }
  return result;
}

unint64_t sub_2445D3D10()
{
  unint64_t result = qword_268E8DB80;
  if (!qword_268E8DB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DB80);
  }
  return result;
}

uint64_t AsyncStreamListener.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + *(void *)(*(void *)v2 + 88);
  uint64_t v4 = sub_2445EF378();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t AsyncStreamListener.init(_:)(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 88);
  uint64_t v4 = sub_2445EF378();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

BOOL static AsyncStreamListener.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t AsyncStreamListener.hash(into:)()
{
  return sub_2445EF958();
}

uint64_t AsyncStreamListener.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 88);
  uint64_t v2 = sub_2445EF378();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AsyncStreamListener.__deallocating_deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 88);
  uint64_t v2 = sub_2445EF378();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t AsyncStreamListener.hashValue.getter()
{
  return sub_2445EF988();
}

uint64_t sub_2445D409C()
{
  return AsyncStreamListener.hashValue.getter();
}

uint64_t sub_2445D40C0()
{
  return AsyncStreamListener.hash(into:)();
}

uint64_t sub_2445D40E4()
{
  return sub_2445EF988();
}

uint64_t sub_2445D4124()
{
  return swift_getWitnessTable();
}

BOOL sub_2445D4140(uint64_t *a1, uint64_t *a2)
{
  return static AsyncStreamListener.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_2445D4164()
{
  uint64_t result = sub_2445EF378();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AsyncStreamListener()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for AsyncStreamListener(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AsyncStreamListener);
}

uint64_t dispatch thunk of AsyncStreamListener.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t static LocalizedStringResource.BundleDescription.madFramework.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE530);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2445EEEF8();
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F06E30]);
  uint64_t v8 = sub_2445EEF28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  sub_2445EEF18();
  uint64_t v9 = *MEMORY[0x263F06D20];
  uint64_t v10 = sub_2445EEEC8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(a1, v9, v10);
}

void NSBundle.preferredLocalization.getter()
{
  id v1 = objc_msgSend(v0, sel_localizations);
  if (!v1)
  {
    sub_2445EF268();
    id v1 = (id)sub_2445EF258();
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = self;
  sub_2445EEF98();
  uint64_t v3 = (void *)sub_2445EF258();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_preferredLocalizationsFromArray_forPreferences_, v1, v3);

  uint64_t v5 = sub_2445EF268();
  if (*(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t DDMDeclarationKeysRequest.request()()
{
  return MEMORY[0x270FA2498](sub_2445D4528, 0, 0);
}

uint64_t sub_2445D4528()
{
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_268E8CB58 + dword_268E8CB58);
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *id v1 = v0;
  v1[1] = sub_2445D4620;
  return v3(v0 + 16, (uint64_t)sub_2445D4744, 0);
}

uint64_t sub_2445D4620(uint64_t a1)
{
  uint64_t v4 = *v2 + 16;
  uint64_t v5 = *v2;
  *(void *)(v4 + 8) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_2445B4F80, 0, 0);
  }
  else
  {
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v6(a1);
  }
}

void sub_2445D4744(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t *DDMDeclarationKeysRequest.request()()
{
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  return sub_2445AC2F8((uint64_t)v1, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_2445D47D4, 0);
}

void sub_2445D47D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_2445D47E0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v8[4] = a4;
  v8[5] = a5;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  unsigned char v8[2] = sub_2445D5428;
  v8[3] = a6;
  uint64_t v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_currentDeclarationKeysWithReply_, v7);
  _Block_release(v7);
}

uint64_t sub_2445D4890(uint64_t a1)
{
  unint64_t v2 = sub_2445D4A18();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445D48CC(uint64_t a1)
{
  unint64_t v2 = sub_2445D4A18();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DDMDeclarationKeysRequest.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DC40);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445D4A18();
  sub_2445EFA18();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_2445D4A18()
{
  unint64_t result = qword_268E8DC48;
  if (!qword_268E8DC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DC48);
  }
  return result;
}

uint64_t DDMDeclarationKeysRequest.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0(a1);
}

uint64_t sub_2445D4A94(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0(a1);
}

uint64_t sub_2445D4ABC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DC40);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445D4A18();
  sub_2445EFA18();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

ValueMetadata *type metadata accessor for DDMDeclarationKeysRequest()
{
  return &type metadata for DDMDeclarationKeysRequest;
}

ValueMetadata *type metadata accessor for DDMDeclarationKeysRequest.CodingKeys()
{
  return &type metadata for DDMDeclarationKeysRequest.CodingKeys;
}

unint64_t sub_2445D4BF0()
{
  unint64_t result = qword_268E8DC50;
  if (!qword_268E8DC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DC50);
  }
  return result;
}

unint64_t sub_2445D4C48()
{
  unint64_t result = qword_268E8DC58;
  if (!qword_268E8DC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DC58);
  }
  return result;
}

Swift::Bool __swiftcall isManagedAppDistributionEnabled()()
{
  uint64_t v3 = &type metadata for FeatureFlag;
  unint64_t v4 = sub_244598F38();
  char v0 = sub_2445EEFE8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
  return v0 & 1;
}

unsigned char *storeEnumTagSinglePayload for FeatureFlag(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2445D4D90);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlag()
{
  return &type metadata for FeatureFlag;
}

unint64_t sub_2445D4DCC()
{
  unint64_t result = qword_268E8DC60;
  if (!qword_268E8DC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DC60);
  }
  return result;
}

const char *sub_2445D4E20()
{
  return "ManagedAppDistribution";
}

const char *sub_2445D4E34()
{
  return "Service";
}

unint64_t static Logger.madSubsystem.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_2445D4E64(uint64_t a1)
{
  return sub_2445D52F4(a1, qword_268E8DC68);
}

uint64_t static Logger.appActions.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2445D5390(&qword_268E8C888, (uint64_t)qword_268E8DC68, a1);
}

uint64_t sub_2445D4EB0(uint64_t a1)
{
  return sub_2445D52F4(a1, qword_26B0CE110);
}

uint64_t static Logger.daemon.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2445D5390(&qword_26B0CE198, (uint64_t)qword_26B0CE110, a1);
}

uint64_t sub_2445D4EF0(uint64_t a1)
{
  return sub_2445D52F4(a1, qword_268E8DC80);
}

uint64_t static Logger.ddm.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2445D5390(&qword_268E8C890, (uint64_t)qword_268E8DC80, a1);
}

uint64_t sub_2445D4F2C(uint64_t a1)
{
  return sub_2445D52F4(a1, qword_268E8DC98);
}

uint64_t static Logger.download.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2445D5390(&qword_268E8C898, (uint64_t)qword_268E8DC98, a1);
}

uint64_t sub_2445D4F70(uint64_t a1)
{
  return sub_2445D52F4(a1, qword_268E8DCB0);
}

uint64_t static Logger.eligibility.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2445D5390(&qword_268E8C8A0, (uint64_t)qword_268E8DCB0, a1);
}

uint64_t sub_2445D4FBC(uint64_t a1)
{
  return sub_2445D52F4(a1, qword_26B0CE3D0);
}

uint64_t static Logger.general.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2445D5390(&qword_26B0CE438, (uint64_t)qword_26B0CE3D0, a1);
}

uint64_t sub_2445D5000(uint64_t a1)
{
  return sub_2445D52F4(a1, qword_26B0CE128);
}

uint64_t static Logger.install.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2445D5390(&qword_26B0CE1A0, (uint64_t)qword_26B0CE128, a1);
}

uint64_t sub_2445D5044(uint64_t a1)
{
  return sub_2445D52F4(a1, qword_26B0CE140);
}

uint64_t static Logger.library.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2445D5390(&qword_26B0CE178, (uint64_t)qword_26B0CE140, a1);
}

uint64_t sub_2445D5088(uint64_t a1)
{
  return sub_2445D52F4(a1, qword_26B0CE440);
}

uint64_t static Logger.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2445D5390(&qword_26B0CE458, (uint64_t)qword_26B0CE440, a1);
}

uint64_t sub_2445D50CC(uint64_t a1)
{
  return sub_2445D52F4(a1, qword_268E8DCC8);
}

uint64_t static Logger.oauth.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2445D5390(&qword_268E8C8A8, (uint64_t)qword_268E8DCC8, a1);
}

uint64_t sub_2445D510C(uint64_t a1)
{
  return sub_2445D52F4(a1, qword_268E8DCE0);
}

uint64_t static Logger.progress.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2445D5390(&qword_268E8C8B0, (uint64_t)qword_268E8DCE0, a1);
}

uint64_t sub_2445D5150(uint64_t a1)
{
  return sub_2445D52F4(a1, qword_26B0CE548);
}

uint64_t static Logger.restore.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2445D5390(&qword_26B0CE560, (uint64_t)qword_26B0CE548, a1);
}

uint64_t sub_2445D5194(uint64_t a1)
{
  return sub_2445D52F4(a1, qword_268E8DCF8);
}

uint64_t static Logger.scheduler.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2445D5390(&qword_268E8C8B8, (uint64_t)qword_268E8DCF8, a1);
}

uint64_t sub_2445D51DC(uint64_t a1)
{
  return sub_2445D52F4(a1, qword_26B0CE158);
}

uint64_t static Logger.sql.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2445D5390(&qword_26B0CE170, (uint64_t)qword_26B0CE158, a1);
}

uint64_t sub_2445D5218(uint64_t a1)
{
  return sub_2445D52F4(a1, qword_26B0CE460);
}

uint64_t static Logger.storage.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2445D5390(&qword_26B0CE180, (uint64_t)qword_26B0CE460, a1);
}

uint64_t sub_2445D525C(uint64_t a1)
{
  return sub_2445D52F4(a1, qword_26B0CE478);
}

uint64_t static Logger.updates.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2445D5390(&qword_26B0CE490, (uint64_t)qword_26B0CE478, a1);
}

uint64_t sub_2445D52A0(uint64_t a1)
{
  return sub_2445D52F4(a1, qword_268E8DD10);
}

uint64_t static Logger.vpp.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2445D5390(&qword_268E8C8C0, (uint64_t)qword_268E8DD10, a1);
}

uint64_t sub_2445D52DC(uint64_t a1)
{
  return sub_2445D52F4(a1, qword_26B0CE650);
}

uint64_t sub_2445D52F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_2445EF038();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_2445EF028();
}

uint64_t static Logger.xpc.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2445D5390(&qword_26B0CE668, (uint64_t)qword_26B0CE650, a1);
}

uint64_t sub_2445D5390@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_2445EF038();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_2445D5428(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(uint64_t, unint64_t))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = sub_2445EEF48();
  unint64_t v7 = v6;

  v3(v5, v7);
  sub_244599358(v5, v7);

  return swift_release();
}

void XPCClient.unregisterAppInstallStateListener(_:for:)()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC22ManagedAppDistribution9XPCClient_lockedStorage);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 26;
  os_unfair_lock_lock(v1 + 26);
  sub_2445D88D4(v2);
  os_unfair_lock_unlock(v3);
}

void XPCClient.registerAppInstallStateListener(_:for:)()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC22ManagedAppDistribution9XPCClient_lockedStorage);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 26;
  os_unfair_lock_lock(v1 + 26);
  sub_2445D8900(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_2445D5590@<X0>(unsigned char **a1@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CEBB0);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = swift_allocObject();
  *(_WORD *)(v5 + 16) = -256;
  sub_2445EEE78();
  swift_allocObject();
  sub_2445EEE68();
  sub_2445EF5C8();
  uint64_t v6 = sub_2445EF5D8();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_2445E1FEC;
    *(void *)(v8 + 24) = v5;
    v19[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0CEBC0);
    v19[0] = sub_2445E37D4;
    v19[1] = v8;
    swift_retain();
    uint64_t v9 = (void (*)(unsigned char *, void))sub_2445EEE58();
    sub_2445A9CB0((uint64_t)v19, (uint64_t)v4);
    v9(v18, 0);
    unint64_t v10 = sub_2445C15D0();
    MEMORY[0x270FA5388](v10);
    (*(void (**)(unsigned char *))(v12 + 16))(&v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)]);
    uint64_t v13 = sub_2445EEF58();
    unint64_t v15 = v14;
    sub_2445AB158();
    sub_2445EEE48();
    if (v1)
    {
      swift_release();
      sub_244599358(v13, v15);
      return swift_release();
    }
    sub_244599358(v13, v15);
    uint64_t result = swift_beginAccess();
    unsigned int v16 = *(unsigned __int16 *)(v5 + 16);
    if (v16 >> 8 <= 0xFE)
    {
      uint64_t v17 = *v20;
      *uint64_t v17 = v16;
      v17[1] = BYTE1(v16) & 1;
      swift_release();
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2445D58CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CEBB0);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(unsigned char *)(v5 + 24) = -1;
  sub_2445EEE78();
  swift_allocObject();
  sub_2445EEE68();
  sub_2445EF5C8();
  uint64_t v6 = sub_2445EF5D8();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_2445E3204;
    *(void *)(v8 + 24) = v5;
    v20[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0CEBC0);
    v20[0] = sub_2445E37D4;
    v20[1] = v8;
    swift_retain();
    uint64_t v9 = (void (*)(unsigned char *, void))sub_2445EEE58();
    sub_2445A9CB0((uint64_t)v20, (uint64_t)v4);
    v9(v19, 0);
    unint64_t v10 = sub_2445C15D0();
    MEMORY[0x270FA5388](v10);
    (*(void (**)(unsigned char *))(v12 + 16))(&v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)]);
    uint64_t v13 = sub_2445EEF58();
    unint64_t v15 = v14;
    sub_2445AB158();
    sub_2445EEE48();
    if (v1)
    {
      swift_release();
      sub_244599358(v13, v15);
      return swift_release();
    }
    sub_244599358(v13, v15);
    uint64_t result = swift_beginAccess();
    int v16 = *(unsigned __int8 *)(v5 + 24);
    if (v16 != 255)
    {
      uint64_t v17 = *(void *)(v5 + 16);
      uint64_t v18 = *v21;
      *(void *)uint64_t v18 = v17;
      *(unsigned char *)(v18 + 8) = v16 & 1;
      sub_2445E3244(v17, v16 & 1);
      swift_release();
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2445D5C10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CEBB0);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(unsigned char *)(v5 + 24) = -1;
  sub_2445EEE78();
  swift_allocObject();
  sub_2445EEE68();
  sub_2445EF5C8();
  uint64_t v6 = sub_2445EF5D8();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_2445E3128;
    *(void *)(v8 + 24) = v5;
    v20[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0CEBC0);
    v20[0] = sub_2445E37D4;
    v20[1] = v8;
    swift_retain();
    uint64_t v9 = (void (*)(unsigned char *, void))sub_2445EEE58();
    sub_2445A9CB0((uint64_t)v20, (uint64_t)v4);
    v9(v19, 0);
    unint64_t v10 = sub_2445C15D0();
    MEMORY[0x270FA5388](v10);
    (*(void (**)(unsigned char *))(v12 + 16))(&v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)]);
    uint64_t v13 = sub_2445EEF58();
    unint64_t v15 = v14;
    sub_2445AB158();
    sub_2445EEE48();
    if (v1)
    {
      swift_release();
      sub_244599358(v13, v15);
      return swift_release();
    }
    sub_244599358(v13, v15);
    uint64_t result = swift_beginAccess();
    int v16 = *(unsigned __int8 *)(v5 + 24);
    if (v16 != 255)
    {
      uint64_t v17 = *(void *)(v5 + 16);
      uint64_t v18 = *v21;
      *(void *)uint64_t v18 = v17;
      *(unsigned char *)(v18 + 8) = v16 & 1;
      sub_2445E3244(v17, v16 & 1);
      swift_release();
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2445D5F54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CEBB0);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(unsigned char *)(v5 + 24) = -1;
  sub_2445EEE78();
  swift_allocObject();
  sub_2445EEE68();
  sub_2445EF5C8();
  uint64_t v6 = sub_2445EF5D8();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_2445E1F58;
    *(void *)(v8 + 24) = v5;
    v19[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0CEBC0);
    v19[0] = sub_2445E1FAC;
    v19[1] = v8;
    swift_retain();
    uint64_t v9 = (void (*)(unsigned char *, void))sub_2445EEE58();
    sub_2445A9CB0((uint64_t)v19, (uint64_t)v4);
    v9(v18, 0);
    unint64_t v10 = sub_2445C15D0();
    MEMORY[0x270FA5388](v10);
    (*(void (**)(unsigned char *))(v12 + 16))(&v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)]);
    uint64_t v13 = sub_2445EEF58();
    unint64_t v15 = v14;
    sub_2445AB158();
    sub_2445EEE48();
    if (v1)
    {
      swift_release();
      sub_244599358(v13, v15);
      return swift_release();
    }
    sub_244599358(v13, v15);
    uint64_t result = swift_beginAccess();
    int v16 = *(unsigned __int8 *)(v5 + 24);
    if (v16 != 255)
    {
      uint64_t v17 = *v20;
      *(void *)uint64_t v17 = *(void *)(v5 + 16);
      *(unsigned char *)(v17 + 8) = v16 & 1;
      swift_release();
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2445D6294@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CEBB0);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  uint64_t v6 = (uint64_t *)(v5 + 16);
  sub_2445EEE78();
  swift_allocObject();
  sub_2445EEE68();
  sub_2445EF5C8();
  uint64_t v7 = sub_2445EF5D8();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v4, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = sub_2445E301C;
    *(void *)(v9 + 24) = v5;
    v18[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0CEBC0);
    v18[0] = sub_2445E37D4;
    v18[1] = v9;
    swift_retain();
    unint64_t v10 = (void (*)(unsigned char *, void))sub_2445EEE58();
    sub_2445A9CB0((uint64_t)v18, (uint64_t)v4);
    v10(v17, 0);
    unint64_t v11 = sub_2445C15D0();
    MEMORY[0x270FA5388](v11);
    (*(void (**)(unsigned char *))(v13 + 16))(&v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)]);
    uint64_t v14 = sub_2445EEF58();
    unint64_t v16 = v15;
    sub_2445AB158();
    sub_2445EEE48();
    if (v1)
    {
      swift_release();
      sub_244599358(v14, v16);
      return swift_release();
    }
    sub_244599358(v14, v16);
    swift_beginAccess();
    uint64_t result = *v6;
    if (*v6)
    {
      **uint64_t v19 = result;
      swift_bridgeObjectRetain();
      swift_release();
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2445D65C0(void *a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_2445EF9B8();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DD68);
    sub_244589B48(&qword_268E8DD70, &qword_268E8DD68);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
    sub_2445EF828();
    swift_beginAccess();
    *(_WORD *)(a2 + 16) = v5;
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  }
  return result;
}

uint64_t sub_2445D66D0(void *a1, uint64_t a2, uint64_t *a3, unint64_t *a4, void (*a5)(uint64_t, uint64_t))
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_2445EF9B8();
  if (!v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    sub_244589B48(a4, a3);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
    sub_2445EF828();
    swift_beginAccess();
    uint64_t v11 = *(void *)(a2 + 16);
    *(void *)(a2 + 16) = v13;
    uint64_t v12 = *(unsigned __int8 *)(a2 + 24);
    *(unsigned char *)(a2 + 24) = v14;
    a5(v11, v12);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  }
  return result;
}

uint64_t sub_2445D67FC(void *a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_2445EF9B8();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE720);
    sub_244589B48(&qword_26B0CE718, &qword_26B0CE720);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v8);
    sub_2445EF828();
    swift_beginAccess();
    *(void *)(a2 + 16) = v5;
    *(unsigned char *)(a2 + 24) = v6;
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  }
  return result;
}

uint64_t sub_2445D6910(void *a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_2445EF9B8();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CEBA0);
    sub_2445E3038();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
    sub_2445EF828();
    swift_beginAccess();
    *(void *)(a2 + 16) = v5;
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  }
  return result;
}

id static XPCClient.interface()()
{
  id v0 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_26F93C220);

  return v0;
}

id sub_2445D6A58()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCClient()), sel_init);
  qword_26B0CE6F8 = (uint64_t)result;
  return result;
}

id static XPCClient.shared.getter()
{
  if (qword_26B0CE768 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_26B0CE6F8;

  return v0;
}

unint64_t static XPCClient.daemonLaunchNotificationName.getter()
{
  return 0xD000000000000028;
}

id sub_2445D6B04()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = v0;
  sub_2445EEF78();
  uint64_t v3 = OBJC_IVAR____TtC22ManagedAppDistribution9XPCClient_lockedStorage;
  uint64_t v4 = MEMORY[0x263F8EE78];
  unint64_t v5 = sub_2445839B4(MEMORY[0x263F8EE78]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE7C0);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 104) = 0;
  *(void *)(v6 + 16) = 0;
  *(unsigned char *)(v6 + 24) = 1;
  *(void *)(v6 + 32) = MEMORY[0x263F8EE88];
  *(void *)(v6 + 40) = v4;
  *(void *)(v6 + 48) = v4;
  *(void *)(v6 + 56) = 0;
  *(unsigned char *)(v6 + 64) = -1;
  *(void *)(v6 + 72) = MEMORY[0x263F8EE80];
  *(void *)(v6 + 80) = v5;
  *(void *)(v6 + 88) = 0;
  *(void *)(v6 + 96) = 0;
  *(void *)&v2[v3] = v6;

  v9.receiver = v2;
  v9.super_class = ObjectType;
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  sub_2445D717C(0xD000000000000028, 0x80000002445F9490, v7);

  return v7;
}

void sub_2445D6C20(const char *a1, void *a2)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2445EF048();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int out_token = -1;
  sub_2445E1A44();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F090], v4);
  uint64_t v8 = sub_2445EF458();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  aBlock[4] = sub_2445E1ABC;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2445D7128;
  void aBlock[3] = &block_descriptor_14;
  unint64_t v10 = _Block_copy(aBlock);
  id v11 = a2;
  swift_release();
  uint32_t v12 = notify_register_dispatch(a1, &out_token, v8, v10);
  _Block_release(v10);

  if (v12)
  {
    if (qword_26B0CE668 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_2445EF038();
    __swift_project_value_buffer(v13, (uint64_t)qword_26B0CE650);
    char v14 = sub_2445EF018();
    os_log_type_t v15 = sub_2445EF438();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 67109120;
      LODWORD(aBlock[0]) = v12;
      sub_2445EF478();
      _os_log_impl(&dword_244580000, v14, v15, "Failed to register for daemon launch notifications with status code %u", v16, 8u);
      MEMORY[0x245694340](v16, -1, -1);
    }
  }
}

void sub_2445D6F00()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B0CE670);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(os_unfair_lock_s **)&v0[OBJC_IVAR____TtC22ManagedAppDistribution9XPCClient_lockedStorage];
  uint64_t v6 = (uint64_t)&v5[4];
  id v7 = v5 + 26;
  os_unfair_lock_lock(v5 + 26);
  sub_2445DC374(v6, &v17);
  os_unfair_lock_unlock(v7);
  if (v17)
  {
    uint64_t v8 = sub_2445EF328();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    _OWORD v9[2] = 0;
    v9[3] = 0;
    void v9[4] = v1;
    id v10 = v1;
    sub_2445DBDA8((uint64_t)v4, (uint64_t)&unk_268E8DD38, (uint64_t)v9);
    swift_release();
  }
  else
  {
    if (qword_26B0CE668 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_2445EF038();
    __swift_project_value_buffer(v11, (uint64_t)qword_26B0CE650);
    os_log_t v16 = (os_log_t)sub_2445EF018();
    os_log_type_t v12 = sub_2445EF418();
    if (os_log_type_enabled(v16, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_244580000, v16, v12, "Not keeping track of daemon instance identifier yet; no need to update it.",
        v13,
        2u);
      MEMORY[0x245694340](v13, -1, -1);
    }
    os_log_t v14 = v16;
  }
}

uint64_t sub_2445D7128(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_2445D717C(uint64_t a1, uint64_t a2, void *a3)
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_2445EF548();
LABEL_7:

    return;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0) {
      uint64_t v4 = (const char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v4 = (const char *)sub_2445EF5B8();
    }
    sub_2445E1A28(v4);
    goto LABEL_7;
  }
  v5[0] = a1;
  v5[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  sub_2445D6C20((const char *)v5, a3);
}

uint64_t sub_2445D72A8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = (void *)(result + 24);
  unint64_t v3 = *(void *)(result + 24);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_2445EF608();
    id result = swift_bridgeObjectRelease();
    if (v6) {
      return result;
    }
  }
  else if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  uint64_t v4 = swift_retain();
  MEMORY[0x245693520](v4);
  if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_2445EF298();
  }
  sub_2445EF2A8();
  sub_2445EF288();
  uint64_t v5 = sub_2445E21C4((uint64_t)&unk_26F934558);
  swift_arrayDestroy();
  sub_2445D73D0(v5, 0, v1, 0, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2445D73D0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_26B0CE670);
  MEMORY[0x270FA5388](v12 - 8);
  os_log_t v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    uint64_t v15 = *(void *)(a3 + 16);
    if (*(void *)(v15 + 16) <= *(void *)(a1 + 16) >> 3)
    {
      uint64_t v38 = a1;
      swift_bridgeObjectRetain();
      sub_2445DEB04(v15);
      a1 = v38;
      if (*(void *)(v38 + 16)) {
        goto LABEL_6;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      a1 = sub_2445DECE4(v15, a1);
      if (*(void *)(a1 + 16)) {
        goto LABEL_6;
      }
    }
LABEL_13:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_13;
  }
LABEL_6:
  if (qword_26B0CE668 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_2445EF038();
  __swift_project_value_buffer(v16, (uint64_t)qword_26B0CE650);
  swift_bridgeObjectRetain_n();
  BOOL v17 = sub_2445EF018();
  os_log_type_t v18 = sub_2445EF418();
  if (os_log_type_enabled(v17, v18))
  {
    char v34 = v14;
    uint64_t v35 = a4;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v36 = a5;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v38 = v21;
    v33[2] = a3;
    *(_DWORD *)uint64_t v20 = 136446210;
    v33[1] = v20 + 4;
    sub_2445E1DC8();
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_2445EF3D8();
    char v23 = a2;
    uint64_t v24 = v6;
    unint64_t v26 = v25;
    swift_bridgeObjectRelease();
    uint64_t v37 = sub_2445DCAEC(v22, v26, &v38);
    a4 = v35;
    sub_2445EF478();
    swift_bridgeObjectRelease_n();
    uint64_t v6 = v24;
    a2 = v23;
    os_log_t v14 = v34;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_244580000, v17, v18, "Registering for messages: %{public}s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245694340](v21, -1, -1);
    uint64_t v27 = v20;
    a5 = v36;
    MEMORY[0x245694340](v27, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v28 = swift_bridgeObjectRetain();
  sub_2445DACB8(v28);
  uint64_t v29 = sub_2445EF328();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = 0;
  *(void *)(v30 + 24) = 0;
  *(void *)(v30 + 32) = a1;
  *(void *)(v30 + 40) = v6;
  *(unsigned char *)(v30 + 48) = a2 & 1;
  *(void *)(v30 + 56) = a4;
  *(void *)(v30 + 64) = a5;
  id v31 = v6;
  sub_2445E1DB8(a4);
  sub_2445DBDA8((uint64_t)v14, (uint64_t)&unk_268E8DD58, v30);
  return swift_release();
}

uint64_t sub_2445D7788(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unint64_t *)(a1 + 24);
  swift_retain();
  uint64_t v5 = sub_2445E25D4(v4, a2);
  swift_release();
  unint64_t v6 = *(void *)(a1 + 24);
  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7 >= v5) {
      goto LABEL_3;
    }
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_2445EF608();
  swift_bridgeObjectRelease();
  if (v7 < v5) {
    goto LABEL_8;
  }
LABEL_3:
  uint64_t result = sub_2445E29E0(v5, v7, &qword_268E8D5C8);
  unint64_t v9 = *v4;
  if (!(v9 >> 62))
  {
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      return result;
    }
    goto LABEL_5;
  }
LABEL_9:
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_2445EF608();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_5:
    sub_2445D78CC((uint64_t)&unk_26F934590, a1);
    return swift_arrayDestroy();
  }
  return result;
}

void sub_2445D78CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_2445EEF88();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (uint64_t *)((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v27 = (uint64_t *)((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v28 = v7;
    uint64_t v29 = v6;
    uint64_t v30 = a2;
    uint64_t v31 = v2;
    uint64_t v11 = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    uint64_t v26 = a1;
    uint64_t v12 = (unsigned __int8 *)(a1 + 48);
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    do
    {
      uint64_t v14 = *((void *)v12 - 2);
      uint64_t v15 = *((void *)v12 - 1);
      unsigned __int8 v16 = *v12;
      sub_2445E1E1C(v14, v15, *v12);
      if (sub_2445DBF54(v14, v15, v16, v11))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = sub_24458D47C(0, v13[2] + 1, 1, v13);
        }
        unint64_t v18 = v13[2];
        unint64_t v17 = v13[3];
        if (v18 >= v17 >> 1) {
          uint64_t v13 = sub_24458D47C((void *)(v17 > 1), v18 + 1, 1, v13);
        }
        id v13[2] = v18 + 1;
        uint64_t v19 = &v13[3 * v18];
        void v19[4] = v14;
        v19[5] = v15;
        *((unsigned char *)v19 + 48) = v16;
      }
      else
      {
        sub_2445E1E34(v14, v15, v16);
      }
      v12 += 24;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    a2 = v30;
    uint64_t v3 = v31;
    uint64_t v7 = v28;
    uint64_t v6 = v29;
    unint64_t v9 = v27;
    if (v13[2]) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    if (*(void *)(MEMORY[0x263F8EE78] + 16))
    {
LABEL_12:
      if (qword_26B0CE740 != -1) {
        swift_once();
      }
      char v34 = v13;
      v35[0] = (uint64_t *)&v34;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v9, v3 + OBJC_IVAR____TtC22ManagedAppDistribution9XPCClient_id, v6);
      v35[1] = v9;
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_2445AC740(v35, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t (*)(uint64_t, unint64_t), uint64_t))sub_2445DC288, 0);
      (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
      swift_bridgeObjectRelease();
      if (*(void *)(*(void *)(a2 + 16) + 16))
      {
        uint64_t v21 = v13[2];
        if (v21)
        {
          swift_bridgeObjectRetain();
          uint64_t v22 = (unsigned __int8 *)(v13 + 6);
          do
          {
            uint64_t v23 = *((void *)v22 - 2);
            uint64_t v24 = *((void *)v22 - 1);
            unsigned __int8 v25 = *v22;
            v22 += 24;
            sub_2445E1E1C(v23, v24, v25);
            sub_2445E03C0(v23, v24, v25, (uint64_t)v32);
            sub_2445E1FC8(v32[0], v32[1], v33);
            sub_2445E1E34(v23, v24, v25);
            --v21;
          }
          while (v21);
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      sub_2445DBB44((uint64_t)v20, a2);
      return;
    }
  }

  swift_bridgeObjectRelease();
}

void XPCClient.registerAppCatalogHandler(_:)()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC22ManagedAppDistribution9XPCClient_lockedStorage);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 26;
  os_unfair_lock_lock(v1 + 26);
  sub_2445D8958(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_2445D7F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a1 + 72);
  swift_retain();
  sub_2445E3100(v6);
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = a3;
  uint64_t v7 = sub_2445E21C4((uint64_t)&unk_26F9345C8);
  swift_arrayDestroy();
  sub_2445D73D0(v7, 0, a1, 0, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2445D7FFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v49 = a6;
  int v9 = a4 & 1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE788);
  uint64_t v47 = *(void *)(v10 - 8);
  uint64_t v48 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v46 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24458565C(a2, a3, v9);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v51 = *(void *)(a1 + 56);
  uint64_t v13 = v51;
  *(void *)(a1 + 56) = 0x8000000000000000;
  unint64_t v15 = sub_2445842E0(a2, a3, v9);
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
LABEL_24:
    sub_2445EF298();
    goto LABEL_10;
  }
  char v19 = v14;
  if (*(void *)(v13 + 24) >= v18)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_2445DE390();
      uint64_t v13 = v51;
    }
  }
  else
  {
    sub_2445DD858(v18, isUniquelyReferenced_nonNull_native);
    uint64_t v13 = v51;
    unint64_t v20 = sub_2445842E0(a2, a3, v9);
    if ((v19 & 1) != (v21 & 1))
    {
      uint64_t result = sub_2445EF8E8();
      __break(1u);
      return result;
    }
    unint64_t v15 = v20;
  }
  *(void *)(a1 + 56) = v13;
  uint64_t v22 = swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(a1 + 56);
  if ((v19 & 1) == 0)
  {
    sub_2445859C8(v15, a2, a3, v9, MEMORY[0x263F8EE78], *(void **)(a1 + 56));
    uint64_t v22 = sub_24458565C(a2, a3, v9);
  }
  uint64_t v24 = (void *)(*(void *)(v23 + 56) + 8 * v15);
  MEMORY[0x245693520](v22);
  if (*(void *)((*v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_24;
  }
LABEL_10:
  sub_2445EF2A8();
  sub_2445EF288();
  uint64_t v25 = *(void *)(a1 + 64);
  if (*(void *)(v25 + 16) && (unint64_t v26 = sub_2445842E0(a2, a3, v9), (v27 & 1) != 0))
  {
    unint64_t v28 = *(void *)(*(void *)(v25 + 56) + 8 * v26);
    sub_24458566C(v28);
    sub_244585A1C(a2, a3, v9);
    if (qword_26B0CE668 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_2445EF038();
    __swift_project_value_buffer(v29, (uint64_t)qword_26B0CE650);
    sub_24458565C(a2, a3, v9);
    sub_24458565C(a2, a3, v9);
    uint64_t v30 = sub_2445EF018();
    os_log_type_t v31 = sub_2445EF418();
    if (os_log_type_enabled(v30, v31))
    {
      os_log_t v44 = v30;
      char v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v51 = v43;
      *(_DWORD *)char v32 = 136446210;
      unint64_t v45 = v28;
      if (v9)
      {
        swift_bridgeObjectRetain();
        uint64_t v33 = a2;
        unint64_t v34 = a3;
      }
      else
      {
        uint64_t v50 = a2;
        sub_2445CFB28();
        uint64_t v33 = sub_2445EF498();
        unint64_t v34 = v35;
      }
      uint64_t v50 = sub_2445DCAEC(v33, v34, &v51);
      sub_2445EF478();
      swift_bridgeObjectRelease();
      sub_244585A1C(a2, a3, v9);
      sub_244585A1C(a2, a3, v9);
      os_log_type_t v36 = v31;
      os_log_t v37 = v44;
      _os_log_impl(&dword_244580000, v44, v36, "Sending cached app state results to listener for %{public}s", v32, 0xCu);
      uint64_t v38 = v43;
      swift_arrayDestroy();
      MEMORY[0x245694340](v38, -1, -1);
      MEMORY[0x245694340](v32, -1, -1);

      unint64_t v28 = v45;
    }
    else
    {
      sub_244585A1C(a2, a3, v9);
      sub_244585A1C(a2, a3, v9);
    }
    uint64_t v51 = v28;
    sub_24458566C(v28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D098);
    uint64_t v39 = v46;
    sub_2445EF358();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v39, v48);
    sub_2445A2390(v28);
  }
  else
  {
    sub_244585A1C(a2, a3, v9);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE828);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2445F0B90;
  *(void *)(inited + 32) = a2;
  *(void *)(inited + 40) = a3;
  *(unsigned char *)(inited + 48) = v9;
  sub_24458565C(a2, a3, v9);
  uint64_t v41 = sub_2445E21C4(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_2445D73D0(v41, 0, a1, 0, 0);
  return swift_bridgeObjectRelease();
}

unint64_t sub_2445D8558(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  char v10 = a4 & 1;
  swift_retain();
  sub_24458565C(a2, a3, v10);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v32 = *(void *)(a1 + 56);
  unint64_t v12 = v32;
  *(void *)(a1 + 56) = 0x8000000000000000;
  unint64_t v14 = sub_2445842E0(a2, a3, v10);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_21;
  }
  char v18 = v13;
  if (*(void *)(v12 + 24) >= v17)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_2445DE390();
      unint64_t v12 = v32;
    }
  }
  else
  {
    sub_2445DD858(v17, isUniquelyReferenced_nonNull_native);
    unint64_t v12 = v32;
    unint64_t v19 = sub_2445842E0(a2, a3, v10);
    if ((v18 & 1) != (v20 & 1))
    {
      swift_release();
      unint64_t result = sub_2445EF8E8();
      __break(1u);
      return result;
    }
    unint64_t v14 = v19;
  }
  *(void *)(a1 + 56) = v12;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a1 + 56);
  if ((v18 & 1) == 0)
  {
    sub_2445859C8(v14, a2, a3, v10, MEMORY[0x263F8EE78], *(void **)(a1 + 56));
    sub_24458565C(a2, a3, v10);
  }
  uint64_t v22 = (unint64_t *)(*(void *)(v21 + 56) + 8 * v14);
  swift_retain();
  uint64_t v5 = sub_2445E25D4(v22, a5);
  swift_release();
  if (*v22 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_2445EF608();
    swift_bridgeObjectRelease();
    if (v23 >= v5) {
      goto LABEL_11;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v23 = *(void *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v23 < v5) {
    goto LABEL_22;
  }
LABEL_11:
  sub_2445E29E0(v5, v23, &qword_268E8D0A0);
  sub_244585A1C(a2, a3, v10);
  swift_release();
  uint64_t v24 = *(void *)(a1 + 56);
  uint64_t v25 = *(void *)(v24 + 16);
  sub_24458565C(a2, a3, v10);
  if (v25 && (unint64_t v26 = sub_2445842E0(a2, a3, v10), (v27 & 1) != 0))
  {
    unint64_t v28 = *(void *)(*(void *)(v24 + 56) + 8 * v26);
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v28 = MEMORY[0x263F8EE78];
  }
  sub_244585A1C(a2, a3, v10);
  if (!(v28 >> 62))
  {
    uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_17;
  }
LABEL_23:
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_2445EF608();
  swift_bridgeObjectRelease();
LABEL_17:
  unint64_t result = swift_bridgeObjectRelease();
  if (!v29)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE828);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2445F0B90;
    *(void *)(inited + 32) = a2;
    *(void *)(inited + 40) = a3;
    *(unsigned char *)(inited + 48) = v10;
    sub_24458565C(a2, a3, v10);
    sub_2445D78CC(inited, a1);
    swift_setDeallocating();
    swift_arrayDestroy();
    sub_24458565C(a2, a3, v10);
    sub_2445849F4(a2, a3, v10, &v32);
    sub_244585A1C(a2, a3, v10);
    return sub_2445E3250(v32);
  }
  return result;
}

uint64_t sub_2445D88D4(uint64_t a1)
{
  return sub_2445D892C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_2445D8558);
}

uint64_t sub_2445D8900(uint64_t a1)
{
  return sub_2445D892C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_2445D7FFC);
}

uint64_t sub_2445D892C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_2445D8958(uint64_t a1)
{
  return sub_2445D7F54(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_2445D8978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D510);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_retain();
  MEMORY[0x245693520](v10);
  if (*(void *)((*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_2445EF298();
  sub_2445EF2A8();
  sub_2445EF288();
  int v11 = *(unsigned __int8 *)(a1 + 48);
  if (v11 != 255)
  {
    v22[1] = v3;
    uint64_t v12 = *(void *)(a1 + 40);
    sub_2445E3244(v12, v11 & 1);
    if (qword_26B0CE668 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_2445EF038();
    __swift_project_value_buffer(v13, (uint64_t)qword_26B0CE650);
    unint64_t v14 = sub_2445EF018();
    os_log_type_t v15 = sub_2445EF418();
    if (os_log_type_enabled(v14, v15))
    {
      BOOL v16 = (uint8_t *)swift_slowAlloc();
      v22[0] = v7;
      uint64_t v17 = v6;
      char v18 = v16;
      *(_WORD *)BOOL v16 = 0;
      _os_log_impl(&dword_244580000, v14, v15, "Sending cached app catalog results to listener", v16, 2u);
      unint64_t v19 = v18;
      uint64_t v6 = v17;
      uint64_t v7 = v22[0];
      MEMORY[0x245694340](v19, -1, -1);
    }

    v22[2] = v12;
    char v23 = v11 & 1;
    sub_2445E3244(v12, v11 & 1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D518);
    sub_2445EF358();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_2445AE9AC(v12, v11);
  }
  uint64_t v20 = sub_2445E21C4((uint64_t)&unk_26F934600);
  swift_arrayDestroy();
  swift_retain();
  sub_2445D73D0(v20, 0, a1, (uint64_t)sub_2445E3194, a2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2445D8C58(unsigned __int8 *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D510);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  char v8 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D518);
  sub_2445EF358();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_2445EF368();
}

uint64_t sub_2445D8D78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unint64_t *)(a1 + 32);
  swift_retain();
  uint64_t v5 = sub_2445E25D4(v4, a2);
  swift_release();
  unint64_t v6 = *(void *)(a1 + 32);
  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7 >= v5) {
      goto LABEL_3;
    }
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_2445EF608();
  swift_bridgeObjectRelease();
  if (v7 < v5) {
    goto LABEL_8;
  }
LABEL_3:
  uint64_t result = sub_2445E29E0(v5, v7, &qword_268E8D520);
  unint64_t v9 = *v4;
  if (!(v9 >> 62))
  {
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      return result;
    }
    goto LABEL_5;
  }
LABEL_9:
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_2445EF608();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_5:
    sub_2445D78CC((uint64_t)&unk_26F934638, a1);
    swift_arrayDestroy();
    uint64_t result = sub_2445AE9AC(*(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
    *(void *)(a1 + 40) = 0;
    *(unsigned char *)(a1 + 48) = -1;
  }
  return result;
}

uint64_t sub_2445D8ED4(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE788);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v7 = *(_OWORD *)(a1 + 16);
  v18[0] = *(_OWORD *)a1;
  v18[1] = v7;
  char v19 = *(unsigned char *)(a1 + 32);
  char v8 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC22ManagedAppDistribution9XPCClient_lockedStorage);
  BOOL v16 = v18;
  uint64_t v9 = (uint64_t)&v8[4];
  uint64_t v10 = v8 + 26;
  os_unfair_lock_lock(v8 + 26);
  sub_2445E3810(v9, &v20);
  os_unfair_lock_unlock(v10);
  unint64_t v11 = v20;
  if (!(v20 >> 62))
  {
    uint64_t v12 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v12) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_2445EF608();
  swift_bridgeObjectRelease();
  if (!v12) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  uint64_t result = sub_2445E2064((uint64_t)v18, (uint64_t)&v20);
  if (v12 >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      if ((v11 & 0xC000000000000001) != 0) {
        MEMORY[0x245693850](v14, v11);
      }
      else {
        swift_retain();
      }
      ++v14;
      sub_2445E2064((uint64_t)&v20, (uint64_t)v17);
      sub_2445E20C0(&v20);
      sub_2445E20C0(&v20);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D098);
      sub_2445EF358();
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
      sub_2445E3168(&v20);
      swift_release();
    }
    while (v12 != v14);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void XPCClient.handleMessages(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE788);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE620);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = &v92;
  uint64_t v89 = a1;
  unint64_t v90 = a2;
  char v91 = &v89;
  sub_2445993EC(a1, a2);
  uint64_t v13 = 0;
  sub_2445D6294(&v93);
  sub_244599358(v89, v90);
  uint64_t v73 = *(void *)(v92 + 16);
  if (v73)
  {
    uint64_t v72 = OBJC_IVAR____TtC22ManagedAppDistribution9XPCClient_lockedStorage;
    uint64_t v76 = v92 + 32;
    uint64_t v81 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v77 = (void (**)(char *, uint64_t))(v6 + 8);
    long long v68 = xmmword_2445F0B90;
    uint64_t v75 = v2;
    uint64_t v80 = v5;
    uint64_t v79 = v8;
    uint64_t v78 = v9;
    uint64_t v82 = v12;
    unint64_t v26 = 0;
    uint64_t v71 = v92;
    uint64_t v27 = v73;
    uint64_t v28 = v92;
    while (2)
    {
      if (v26 < *(void *)(v28 + 16))
      {
        uint64_t v33 = v76 + 40 * v26;
        unint64_t v34 = *(void *)v33;
        uint64_t v35 = *(void *)(v33 + 8);
        uint64_t v36 = *(void *)(v33 + 16);
        uint64_t v37 = *(void *)(v33 + 24);
        unsigned int v38 = *(unsigned __int8 *)(v33 + 32);
        ++v26;
        switch((v38 >> 4) & 7)
        {
          case 1u:
            sub_2445E1760(*(void *)v33, *(void *)(v33 + 8), *(void *)(v33 + 16), *(void *)(v33 + 24), *(unsigned __int8 *)(v33 + 32));
            sub_2445E1760(v34, v35, v36, v37, v38);
            if (os_variant_has_internal_content())
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DD28);
              uint64_t v46 = swift_allocObject();
              uint64_t v85 = v13;
              *(_OWORD *)(v46 + 16) = v68;
              *(void *)(v46 + 56) = MEMORY[0x263F8D310];
              *(void *)(v46 + 32) = v34;
              *(void *)(v46 + 40) = v35;
              swift_bridgeObjectRetain();
              sub_2445EF938();
              uint64_t v13 = v85;
              swift_bridgeObjectRelease();
            }
            sub_2445E1838(v34, v35, v36, v37, v38);
            goto LABEL_28;
          case 2u:
            LOBYTE(v87[0]) = *(void *)(v33 + 8);
            sub_2445E1760(v34, v35, v36, v37, v38);
            uint64_t v86 = v37;
            sub_2445D9CA4(v34, (unsigned __int8 *)v87);
            unint64_t v29 = v34;
            uint64_t v30 = v35;
            uint64_t v31 = v36;
            uint64_t v32 = v86;
            goto LABEL_7;
          case 3u:
            uint64_t v47 = *(os_unfair_lock_s **)(v75 + v72);
            uint64_t v48 = (uint64_t)&v47[4];
            uint64_t v49 = v36;
            uint64_t v50 = v47 + 26;
            sub_2445E1760(v34, v35, v49, v37, v38);
            sub_2445E1760(v34, v35, v49, v37, v38);
            os_unfair_lock_lock(v50);
            sub_2445DAC3C(v48, v87);
            os_unfair_lock_unlock(v50);
            uint64_t v51 = *(void (**)(_OWORD *))&v87[0];
            if (*(void *)&v87[0])
            {
              *(void *)&v87[0] = v34;
              v51(v87);
              sub_2445E3100((uint64_t)v51);
            }
            sub_2445E1838(v34, v35, v49, v37, v38);
            sub_2445E1838(v34, v35, v49, v37, v38);
            uint64_t v28 = v71;
            goto LABEL_27;
          case 4u:
            uint64_t has_internal_content = os_variant_has_internal_content();
            if (has_internal_content)
            {
              unint64_t v74 = v26;
              unint64_t v84 = &v68;
              MEMORY[0x270FA5388](has_internal_content);
              *((void *)&v68 - 2) = v53;
              uint64_t v85 = (os_unfair_lock_s *)v36;
              uint64_t v55 = (uint64_t)&v54[4];
              unsigned int v56 = v38;
              uint64_t v57 = v54 + 26;
              os_unfair_lock_lock(v54 + 26);
              sub_2445E1900(v55);
              os_unfair_lock_unlock(v57);
              sub_2445E1838(v34, v35, (uint64_t)v85, v37, v56);
              unint64_t v26 = v74;
LABEL_27:
              uint64_t v27 = v73;
            }
            else
            {
LABEL_28:
              unint64_t v29 = v34;
              uint64_t v30 = v35;
              uint64_t v31 = v36;
              uint64_t v32 = v37;
LABEL_7:
              sub_2445E1838(v29, v30, v31, v32, v38);
            }
            goto LABEL_8;
          default:
            *(void *)&long long v94 = *(void *)v33;
            *((void *)&v94 + 1) = v35;
            *(void *)&long long v95 = v36;
            *((void *)&v95 + 1) = v37;
            char v96 = v38;
            uint64_t v39 = *(os_unfair_lock_s **)(v75 + v72);
            uint64_t v40 = (uint64_t)&v39[4];
            uint64_t v41 = v39 + 26;
            sub_2445E1760(v34, v35, v36, v37, v38);
            uint64_t v85 = (os_unfair_lock_s *)v36;
            LODWORD(v84) = v38;
            sub_2445E1760(v34, v35, v36, v37, v38);
            os_unfair_lock_lock(v41);
            uint64_t v70 = v40;
            sub_2445DA684(v40, v87);
            char v69 = v13;
            uint64_t v13 = v41;
            os_unfair_lock_unlock(v41);
            uint64_t v42 = *(void *)&v87[0];
            unint64_t v74 = v26;
            uint64_t v86 = v37;
            uint64_t v83 = v35;
            if (*(void *)&v87[0] >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v43 = sub_2445EF608();
              swift_bridgeObjectRelease();
              if (!v43) {
                goto LABEL_30;
              }
            }
            else
            {
              uint64_t v43 = *(void *)((*(void *)&v87[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (!v43) {
                goto LABEL_30;
              }
            }
            if (v43 < 1) {
              goto LABEL_44;
            }
            uint64_t v44 = 0;
            do
            {
              if ((v42 & 0xC000000000000001) != 0) {
                MEMORY[0x245693850](v44, v42);
              }
              else {
                swift_retain();
              }
              ++v44;
              v87[0] = v94;
              v87[1] = v95;
              char v88 = v96;
              sub_24458566C(v34);
              sub_2445E1828(v83, (uint64_t)v85, v86, (char)v84);
              __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D5C0);
              unint64_t v45 = v82;
              sub_2445EF358();
              (*v81)(v45, v9);
              swift_release();
            }
            while (v43 != v44);
LABEL_30:
            uint64_t v58 = swift_bridgeObjectRelease();
            MEMORY[0x270FA5388](v58);
            *((void *)&v68 - 2) = &v94;
            uint64_t v59 = v13;
            os_unfair_lock_lock(v13);
            uint64_t v13 = v69;
            sub_2445E191C(v70, v87);
            os_unfair_lock_unlock(v59);
            uint64_t v60 = *(void *)&v87[0];
            if (*(void *)&v87[0] >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v61 = sub_2445EF608();
              swift_bridgeObjectRelease();
              if (!v61) {
                goto LABEL_39;
              }
            }
            else
            {
              uint64_t v61 = *(void *)((*(void *)&v87[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (!v61) {
                goto LABEL_39;
              }
            }
            if (v61 < 1) {
              goto LABEL_45;
            }
            uint64_t v62 = 0;
            do
            {
              if ((v60 & 0xC000000000000001) != 0) {
                MEMORY[0x245693850](v62, v60);
              }
              else {
                swift_retain();
              }
              ++v62;
              *(void *)&v87[0] = v34;
              sub_24458566C(v34);
              sub_24458566C(v34);
              __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D098);
              char v63 = v79;
              sub_2445EF358();
              (*v77)(v63, v80);
              sub_2445A2390(v34);
              swift_release();
              uint64_t v9 = v78;
            }
            while (v61 != v62);
LABEL_39:
            swift_bridgeObjectRelease();
            uint64_t v64 = v83;
            uint64_t v65 = (uint64_t)v85;
            uint64_t v66 = v86;
            unsigned int v67 = v84;
            sub_2445E1838(v34, v83, (uint64_t)v85, v86, v84);
            sub_2445E1838(v34, v64, v65, v66, v67);
            uint64_t v28 = v71;
            uint64_t v27 = v73;
            unint64_t v26 = v74;
LABEL_8:
            if (v26 != v27) {
              continue;
            }
            goto LABEL_41;
        }
      }
      break;
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    swift_once();
    uint64_t v14 = sub_2445EF038();
    __swift_project_value_buffer(v14, (uint64_t)qword_26B0CE650);
    os_log_type_t v15 = v13;
    BOOL v16 = v13;
    uint64_t v17 = sub_2445EF018();
    os_log_type_t v18 = sub_2445EF438();
    if (os_log_type_enabled(v17, v18))
    {
      char v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(void *)&long long v94 = v20;
      *(_DWORD *)char v19 = 136446210;
      uint64_t ErrorValue = swift_getErrorValue();
      MEMORY[0x270FA5388](ErrorValue);
      (*(void (**)(char *))(v23 + 16))((char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
      uint64_t v24 = sub_2445EF188();
      *(void *)&v87[0] = sub_2445DCAEC(v24, v25, (uint64_t *)&v94);
      sub_2445EF478();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_244580000, v17, v18, "Error decoding XPC client message: %{public}s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245694340](v20, -1, -1);
      MEMORY[0x245694340](v19, -1, -1);
    }
    else
    {
    }
  }
  else
  {
LABEL_41:
    swift_bridgeObjectRelease();
  }
}

void sub_2445D9CA4(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D510);
  uint64_t v5 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v54 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for ManagedApp();
  uint64_t v7 = *(void *)(v52 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v52);
  uint64_t v53 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v46 - v11;
  uint64_t v13 = *a2;
  if (v13 == 6)
  {
    if (a1)
    {
      uint64_t v14 = self;
      swift_bridgeObjectRetain();
      id v15 = objc_msgSend(v14, sel_mainBundle);
      id v16 = objc_msgSend(v15, sel_bundleIdentifier);

      if (v16)
      {
        v46[1] = v2;
        uint64_t v47 = v5;
        uint64_t v17 = sub_2445EF128();
        uint64_t v19 = v18;

        uint64_t v13 = sub_2445E2CF0(a1, v17, v19);
        v46[0] = 0;
        swift_bridgeObjectRelease();
        uint64_t v10 = swift_bridgeObjectRelease();
        uint64_t v20 = *(void *)(v13 + 16);
        if (v20)
        {
          uint64_t v21 = v13 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
          uint64_t v22 = *(void *)(v7 + 72);
          swift_bridgeObjectRetain();
          uint64_t v23 = &unk_26B0CE000;
          *(void *)&long long v24 = 136446210;
          long long v49 = v24;
          uint64_t v48 = MEMORY[0x263F8EE58] + 8;
          uint64_t v25 = (uint64_t)v53;
          uint64_t v50 = v12;
          uint64_t v51 = v22;
          do
          {
            sub_244586144(v21, (uint64_t)v12);
            if (v23[205] != -1) {
              swift_once();
            }
            uint64_t v26 = sub_2445EF038();
            __swift_project_value_buffer(v26, (uint64_t)qword_26B0CE650);
            sub_244586144((uint64_t)v12, v25);
            uint64_t v27 = sub_2445EF018();
            os_log_type_t v28 = sub_2445EF428();
            if (os_log_type_enabled(v27, v28))
            {
              uint64_t v29 = swift_slowAlloc();
              uint64_t v30 = swift_slowAlloc();
              unint64_t v56 = v30;
              *(_DWORD *)uint64_t v29 = v49;
              uint64_t v31 = (uint64_t *)(v25 + *(int *)(v52 + 44));
              uint64_t v32 = v23;
              uint64_t v34 = *v31;
              unint64_t v33 = v31[1];
              swift_bridgeObjectRetain();
              uint64_t v35 = v34;
              uint64_t v23 = v32;
              *(void *)(v29 + 4) = sub_2445DCAEC(v35, v33, (uint64_t *)&v56);
              uint64_t v25 = (uint64_t)v53;
              swift_bridgeObjectRelease();
              sub_2445861A8(v25);
              _os_log_impl(&dword_244580000, v27, v28, "Received App: %{public}s", (uint8_t *)v29, 0xCu);
              swift_arrayDestroy();
              uint64_t v36 = v30;
              uint64_t v12 = v50;
              uint64_t v22 = v51;
              MEMORY[0x245694340](v36, -1, -1);
              MEMORY[0x245694340](v29, -1, -1);
            }
            else
            {

              sub_2445861A8(v25);
            }
            sub_2445861A8((uint64_t)v12);
            v21 += v22;
            --v20;
          }
          while (v20);
          uint64_t v10 = swift_bridgeObjectRelease();
        }
        char v37 = 0;
        uint64_t v5 = v47;
      }
      else
      {
        char v37 = 0;
        uint64_t v13 = a1;
      }
    }
    else
    {
      uint64_t v13 = 0;
      char v37 = 1;
    }
  }
  else
  {
    char v37 = 1;
  }
  MEMORY[0x270FA5388](v10);
  v46[-2] = v13;
  LOBYTE(v46[-1]) = v37;
  uint64_t v39 = (uint64_t)&v38[4];
  uint64_t v40 = v38 + 26;
  os_unfair_lock_lock(v38 + 26);
  sub_2445E25B4(v39, &v56);
  os_unfair_lock_unlock(v40);
  unint64_t v41 = v56;
  if (!(v56 >> 62))
  {
    uint64_t v42 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v42) {
      goto LABEL_19;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    sub_24459A6F8(v13, v37);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_2445EF608();
  swift_bridgeObjectRelease();
  if (!v42) {
    goto LABEL_26;
  }
LABEL_19:
  if (v42 >= 1)
  {
    uint64_t v43 = 0;
    uint64_t v44 = (void (**)(char *, uint64_t))(v5 + 8);
    unint64_t v45 = v54;
    do
    {
      if ((v41 & 0xC000000000000001) != 0) {
        MEMORY[0x245693850](v43, v41);
      }
      else {
        swift_retain();
      }
      ++v43;
      unint64_t v56 = v13;
      char v57 = v37;
      sub_2445E3244(v13, v37);
      sub_2445E3244(v13, v37);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D518);
      sub_2445EF358();
      (*v44)(v45, v55);
      sub_24459A6F8(v13, v37);
      swift_release();
    }
    while (v42 != v43);
    goto LABEL_26;
  }
  __break(1u);
}

uint64_t sub_2445DA2C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_2445E2008(a2 + 8, (uint64_t)v42);
  sub_2445E2008((uint64_t)v42, (uint64_t)v41);
  uint64_t updated = AppStateUpdateIdentifier.appStateIdentifiers.getter();
  uint64_t v5 = updated[2];
  if (!v5)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    sub_2445E2008((uint64_t)v42, (uint64_t)v41);
    uint64_t v25 = AppStateUpdateIdentifier.appStateIdentifiers.getter();
    v41[0] = MEMORY[0x263F8EE78];
    uint64_t v26 = v25[2];
    if (v26)
    {
      uint64_t v27 = *(void *)(a1 + 56);
      os_log_type_t v28 = (char *)(swift_bridgeObjectRetain() + 48);
      unint64_t v29 = MEMORY[0x263F8EE78];
      do
      {
        if (*(void *)(v27 + 16))
        {
          uint64_t v30 = *((void *)v28 - 2);
          uint64_t v31 = *((void *)v28 - 1);
          char v32 = *v28;
          sub_24458565C(v30, v31, *v28);
          sub_24458565C(v30, v31, v32);
          unint64_t v33 = sub_2445842E0(v30, v31, v32);
          unint64_t v34 = v29;
          if (v35)
          {
            unint64_t v34 = *(void *)(*(void *)(v27 + 56) + 8 * v33);
            swift_bridgeObjectRetain();
          }
          sub_244585A1C(v30, v31, v32);
          sub_244585A1C(v30, v31, v32);
        }
        else
        {
          unint64_t v34 = v29;
        }
        v28 += 24;
        sub_2445E1234(v34);
        --v26;
      }
      while (v26);
      uint64_t result = swift_bridgeObjectRelease_n();
      uint64_t v37 = v41[0];
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v37 = MEMORY[0x263F8EE78];
    }
    *a3 = v37;
    return result;
  }
  sub_2445E2064(a2, (uint64_t)&v43);
  uint64_t v6 = (char *)(updated + 6);
  uint64_t v40 = a1;
  while (1)
  {
    uint64_t v7 = *((void *)v6 - 2);
    uint64_t v8 = *((void *)v6 - 1);
    char v9 = *v6;
    sub_24458565C(v7, v8, *v6);
    sub_2445E20C0(&v43);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v41[0] = *(void *)(a1 + 64);
    uint64_t v11 = v41[0];
    *(void *)(a1 + 64) = 0x8000000000000000;
    unint64_t v13 = sub_2445842E0(v7, v8, v9);
    uint64_t v14 = *(void *)(v11 + 16);
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15)) {
      break;
    }
    char v17 = v12;
    if (*(void *)(v11 + 24) >= v16)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v20 = (void *)v41[0];
        if (v12) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_2445DE554();
        uint64_t v20 = (void *)v41[0];
        if (v17) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_2445DDBAC(v16, isUniquelyReferenced_nonNull_native);
      unint64_t v18 = sub_2445842E0(v7, v8, v9);
      if ((v17 & 1) != (v19 & 1)) {
        goto LABEL_29;
      }
      unint64_t v13 = v18;
      uint64_t v20 = (void *)v41[0];
      if (v17)
      {
LABEL_3:
        sub_2445E20EC((uint64_t)&v43, v20[7] + 8 * v13);
        goto LABEL_4;
      }
    }
    v20[(v13 >> 6) + 8] |= 1 << v13;
    uint64_t v21 = v20[6] + 24 * v13;
    *(void *)uint64_t v21 = v7;
    *(void *)(v21 + 8) = v8;
    *(unsigned char *)(v21 + 16) = v9;
    sub_2445E2064((uint64_t)&v43, v20[7] + 8 * v13);
    uint64_t v22 = v20[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_28;
    }
    v20[2] = v24;
    sub_24458565C(v7, v8, v9);
LABEL_4:
    v6 += 24;
    a1 = v40;
    *(void *)(v40 + 64) = v20;
    swift_bridgeObjectRelease();
    sub_244585A1C(v7, v8, v9);
    if (!--v5) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  uint64_t result = sub_2445EF8E8();
  __break(1u);
  return result;
}

uint64_t sub_2445DA600(uint64_t a1)
{
  uint64_t v2 = sub_2445E21C4((uint64_t)&unk_26F934670);
  swift_arrayDestroy();
  sub_2445D73D0(v2, 0, a1, 0, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2445DA684@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2445DA6A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  int v8 = a3 & 1;
  uint64_t v9 = type metadata accessor for ManagedApp();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  char v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v13 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v55 = a1;
  uint64_t v56 = a2;
  if (v13 == 255)
  {
    if (v8)
    {
      char v24 = v8;
      uint64_t v18 = 0;
      uint64_t v25 = a2;
      unsigned __int8 v26 = 1;
      unsigned __int8 v27 = -1;
LABEL_40:
      sub_2445AE9AC(v18, v27);
      sub_2445AE9AC(v25, v26);
      goto LABEL_41;
    }
    uint64_t v52 = v10;
    uint64_t v53 = a4;
    uint64_t v54 = v4;
    uint64_t v18 = 0;
    int v28 = 255;
    goto LABEL_19;
  }
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v53 = a4;
  uint64_t v54 = v4;
  uint64_t v52 = v10;
  if (v13)
  {
    uint64_t v18 = v14;
    if (v8)
    {
      uint64_t v25 = a2;
      unsigned __int8 v27 = 1;
      goto LABEL_33;
    }
    int v28 = 1;
LABEL_19:
    LODWORD(v57) = v28;
    goto LABEL_24;
  }
  int64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    int v50 = v8;
    int v51 = v13;
    sub_2445E3244(v14, 0);
    uint64_t v60 = MEMORY[0x263F8EE78];
    uint64_t v57 = v14;
    sub_2445DE718(0, v15, 0);
    uint64_t v16 = v57;
    uint64_t v17 = v57 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v62 = *(void *)(v10 + 72);
    uint64_t v18 = v60;
    do
    {
      sub_244586144(v17, (uint64_t)v12);
      uint64_t v19 = *((void *)v12 + 2);
      uint64_t v20 = *((void *)v12 + 3);
      swift_bridgeObjectRetain();
      sub_2445861A8((uint64_t)v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2445DE718(0, *(void *)(v18 + 16) + 1, 1);
        uint64_t v16 = v57;
        uint64_t v18 = v60;
      }
      unint64_t v22 = *(void *)(v18 + 16);
      unint64_t v21 = *(void *)(v18 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_2445DE718(v21 > 1, v22 + 1, 1);
        uint64_t v16 = v57;
        uint64_t v18 = v60;
      }
      *(void *)(v18 + 16) = v22 + 1;
      uint64_t v23 = v18 + 16 * v22;
      *(void *)(v23 + 32) = v19;
      *(void *)(v23 + 40) = v20;
      v17 += v62;
      --v15;
    }
    while (v15);
    sub_2445AE9AC(v16, v51);
    int v8 = v50;
    if (v50)
    {
      unsigned __int8 v27 = 0;
      uint64_t v25 = v56;
      goto LABEL_33;
    }
    LODWORD(v57) = 0;
    a2 = v56;
    int v13 = v51;
  }
  else
  {
    if (v8)
    {
      unsigned __int8 v27 = 0;
      uint64_t v25 = a2;
      uint64_t v18 = MEMORY[0x263F8EE78];
      goto LABEL_33;
    }
    LODWORD(v57) = 0;
    uint64_t v18 = MEMORY[0x263F8EE78];
  }
LABEL_24:
  int64_t v29 = *(void *)(a2 + 16);
  uint64_t v25 = MEMORY[0x263F8EE78];
  if (v29)
  {
    int v50 = 0;
    int v51 = v13;
    uint64_t v60 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_2445DE718(0, v29, 0);
    uint64_t v30 = a2 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
    uint64_t v62 = *(void *)(v52 + 72);
    uint64_t v25 = v60;
    do
    {
      sub_244586144(v30, (uint64_t)v12);
      uint64_t v31 = *((void *)v12 + 2);
      uint64_t v32 = *((void *)v12 + 3);
      swift_bridgeObjectRetain();
      sub_2445861A8((uint64_t)v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2445DE718(0, *(void *)(v25 + 16) + 1, 1);
        uint64_t v25 = v60;
      }
      unint64_t v34 = *(void *)(v25 + 16);
      unint64_t v33 = *(void *)(v25 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_2445DE718(v33 > 1, v34 + 1, 1);
        uint64_t v25 = v60;
      }
      *(void *)(v25 + 16) = v34 + 1;
      uint64_t v35 = v25 + 16 * v34;
      *(void *)(v35 + 32) = v31;
      *(void *)(v35 + 40) = v32;
      v30 += v62;
      --v29;
    }
    while (v29);
    sub_24459A6F8(v56, 0);
    int v8 = v50;
    int v13 = v51;
  }
  unsigned __int8 v27 = v57;
  if (v13 == 255)
  {
    char v24 = v8;
    unsigned __int8 v26 = 0;
    a4 = v53;
    a1 = v55;
    goto LABEL_40;
  }
LABEL_33:
  uint64_t v60 = v18;
  char v61 = v27;
  uint64_t v58 = v25;
  BOOL v59 = v8 != 0;
  sub_2445E3244(v18, v27 & 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE1C8);
  char v36 = v8;
  sub_2445E2F4C();
  sub_2445C6A2C();
  sub_244598F8C();
  char v37 = sub_2445EF9A8();
  char v24 = v36;
  sub_24459A6F8(v25, v36);
  sub_24459A6F8(v60, v61);
  sub_2445AE9AC(v18, v27);
  a4 = v53;
  a1 = v55;
  if ((v37 & 1) == 0)
  {
LABEL_41:
    uint64_t v46 = *(void *)(a1 + 40);
    unsigned __int8 v47 = *(unsigned char *)(a1 + 48);
    uint64_t v48 = v56;
    sub_2445E3244(v56, v24);
    sub_2445AE9AC(v46, v47);
    *(void *)(a1 + 40) = v48;
    *(unsigned char *)(a1 + 48) = v24;
    *a4 = *(void *)(a1 + 32);
    return swift_bridgeObjectRetain();
  }
  if (qword_26B0CE668 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_2445EF038();
  __swift_project_value_buffer(v38, (uint64_t)qword_26B0CE650);
  uint64_t v39 = sub_2445EF018();
  os_log_type_t v40 = sub_2445EF448();
  if (os_log_type_enabled(v39, v40))
  {
    unint64_t v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v41 = 0;
    _os_log_impl(&dword_244580000, v39, v40, "Deduplicating app catalog results", v41, 2u);
    MEMORY[0x245694340](v41, -1, -1);
  }

  uint64_t v42 = *(void *)(a1 + 40);
  unsigned __int8 v43 = *(unsigned char *)(a1 + 48);
  uint64_t v44 = v56;
  sub_2445E3244(v56, v24);
  uint64_t result = sub_2445AE9AC(v42, v43);
  *(void *)(a1 + 40) = v44;
  *(unsigned char *)(a1 + 48) = v24;
  *a4 = MEMORY[0x263F8EE78];
  return result;
}

uint64_t sub_2445DAC3C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 80);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_2445E2FB8;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_2445E1DB8(v3);
}

uint64_t sub_2445DACB8(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v2;
    if (!v15)
    {
      int64_t v2 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v2);
      if (!v15)
      {
        int64_t v2 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v2);
        if (!v15)
        {
          int64_t v2 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v2);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v9 = __clz(__rbit64(v15)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = *(void *)(v1 + 48) + 24 * v9;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *(void *)(v10 + 8);
    unsigned __int8 v13 = *(unsigned char *)(v10 + 16);
    sub_2445E1E1C(*(void *)v10, v12, v13);
    sub_2445DF360((uint64_t)v17, v11, v12, v13);
    uint64_t result = sub_2445E1E34(v17[0], v17[1], v18);
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v2 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v2);
        ++v16;
        if (v15) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v16;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

uint64_t sub_2445DAE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 128) = a7;
  *(void *)(v8 + 136) = a8;
  *(unsigned char *)(v8 + 225) = a6;
  *(void *)(v8 + 112) = a4;
  *(void *)(v8 + 120) = a5;
  uint64_t v9 = sub_2445EEDF8();
  *(void *)(v8 + 144) = v9;
  *(void *)(v8 + 152) = *(void *)(v9 - 8);
  *(void *)(v8 + 160) = swift_task_alloc();
  sub_2445EEED8();
  *(void *)(v8 + 168) = swift_task_alloc();
  uint64_t v10 = sub_2445EEF88();
  *(void *)(v8 + 176) = v10;
  *(void *)(v8 + 184) = *(void *)(v10 - 8);
  *(void *)(v8 + 192) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2445DAFA8, 0, 0);
}

uint64_t sub_2445DAFA8()
{
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[15];
  v0[8] = v0[14];
  v0[5] = v0 + 8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v4 + OBJC_IVAR____TtC22ManagedAppDistribution9XPCClient_id, v3);
  v0[6] = v2;
  int64_t v7 = (char *)&dword_268E8CB08 + dword_268E8CB08;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[25] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_2445DB0F4;
  return ((uint64_t (*)(void *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v7)(v0 + 5, sub_2445DBB30, 0);
}

uint64_t sub_2445DB0F4(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 208) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_2445DB324;
  }
  else
  {
    uint64_t v7 = v4[23];
    uint64_t v6 = v4[24];
    uint64_t v8 = v4[22];
    v4[27] = a1;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_2445DB238;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

void sub_2445DB238()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v3 = v0[15];
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC22ManagedAppDistribution9XPCClient_lockedStorage);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v1;
  os_unfair_lock_lock(v4 + 26);
  sub_2445E1F14((uint64_t)&v4[4]);
  os_unfair_lock_unlock(v4 + 26);
  if (!v2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (void (*)(void))v0[1];
    v6();
  }
}

uint64_t sub_2445DB324()
{
  uint64_t v58 = v0;
  uint64_t v1 = *(void **)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 144);
  char v5 = *(unsigned char *)(v0 + 225);
  (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 192), *(void *)(v0 + 176));
  swift_bridgeObjectRelease();
  id v6 = v1;
  sub_2445EEDE8();
  sub_2445E1E4C();
  char v7 = sub_2445EEE38();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v8 = *(void **)(v0 + 208);
  if (v7 & 1) == 0 || (v5)
  {
    uint64_t v19 = (id *)(v0 + 56);
    *(void *)(v0 + 56) = v8;
    id v20 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE838);
    if (!swift_dynamicCast())
    {

      if (qword_26B0CE668 != -1) {
        swift_once();
      }
      uint64_t v31 = *(void **)(v0 + 208);
      uint64_t v32 = sub_2445EF038();
      __swift_project_value_buffer(v32, (uint64_t)qword_26B0CE650);
      swift_bridgeObjectRetain();
      id v33 = v31;
      swift_bridgeObjectRetain();
      id v34 = v31;
      uint64_t v35 = sub_2445EF018();
      os_log_type_t v36 = sub_2445EF438();
      BOOL v37 = os_log_type_enabled(v35, v36);
      uint64_t v38 = *(void **)(v0 + 208);
      if (v37)
      {
        uint64_t v39 = swift_slowAlloc();
        uint64_t v54 = swift_slowAlloc();
        uint64_t v56 = v54;
        *(_DWORD *)uint64_t v39 = 136446466;
        sub_2445E1DC8();
        uint64_t v40 = sub_2445EF3D8();
        *(void *)(v0 + 72) = sub_2445DCAEC(v40, v41, &v56);
        sub_2445EF478();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v39 + 12) = 2082;
        swift_getErrorValue();
        uint64_t v42 = *(void *)(*(void *)(v0 + 24) - 8);
        swift_task_alloc();
        (*(void (**)(void))(v42 + 16))();
        uint64_t v43 = sub_2445EF188();
        unint64_t v45 = v44;
        swift_task_dealloc();
        *(void *)(v0 + 96) = sub_2445DCAEC(v43, v45, &v56);
        sub_2445EF478();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_244580000, v35, v36, "Error registering for message: %{public}s: %{public}s", (uint8_t *)v39, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x245694340](v54, -1, -1);
        MEMORY[0x245694340](v39, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
      uint64_t v48 = *(void *)(v0 + 112);
      uint64_t v49 = *(os_unfair_lock_s **)(*(void *)(v0 + 120)
                                 + OBJC_IVAR____TtC22ManagedAppDistribution9XPCClient_lockedStorage);
      *(void *)(swift_task_alloc() + 16) = v48;
      os_unfair_lock_lock(v49 + 26);
      sub_2445E37F4();
      os_unfair_lock_unlock(v49 + 26);

      goto LABEL_23;
    }

    char v55 = *(unsigned char *)(v0 + 224);
    if (qword_26B0CE668 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_2445EF038();
    __swift_project_value_buffer(v21, (uint64_t)qword_26B0CE650);
    swift_bridgeObjectRetain_n();
    unint64_t v22 = sub_2445EF018();
    os_log_type_t v23 = sub_2445EF438();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v52 = *(void *)(v0 + 168);
      uint64_t v24 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      uint64_t v56 = v53;
      *(_DWORD *)uint64_t v24 = 136446466;
      sub_2445E1DC8();
      uint64_t v25 = sub_2445EF3D8();
      *(void *)(v0 + 104) = sub_2445DCAEC(v25, v26, &v56);
      sub_2445EF478();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v24 + 12) = 2082;
      char v27 = v55;
      char v57 = v55;
      ManagedAppDistributionError.localizedStringResource.getter(v52);
      uint64_t v28 = sub_2445EF178();
      *(void *)(v0 + 88) = sub_2445DCAEC(v28, v29, &v56);
      sub_2445EF478();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_244580000, v22, v23, "Client-deliverable error registering for message: %{public}s: %{public}s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245694340](v53, -1, -1);
      MEMORY[0x245694340](v24, -1, -1);

      uint64_t v30 = *(void (**)(uint64_t *))(v0 + 128);
      if (!v30) {
        goto LABEL_20;
      }
    }
    else
    {
      swift_bridgeObjectRelease_n();

      char v27 = v55;
      uint64_t v30 = *(void (**)(uint64_t *))(v0 + 128);
      if (!v30)
      {
LABEL_20:
        uint64_t v46 = *(void *)(v0 + 112);
        unsigned __int8 v47 = *(os_unfair_lock_s **)(*(void *)(v0 + 120)
                                   + OBJC_IVAR____TtC22ManagedAppDistribution9XPCClient_lockedStorage);
        *(void *)(swift_task_alloc() + 16) = v46;
        os_unfair_lock_lock(v47 + 26);
        sub_2445E1EA4();
        os_unfair_lock_unlock(v47 + 26);
        swift_task_dealloc();

        goto LABEL_24;
      }
    }
    LOBYTE(v56) = v27;
    v30(&v56);
    goto LABEL_20;
  }

  if (qword_26B0CE668 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_2445EF038();
  __swift_project_value_buffer(v9, (uint64_t)qword_26B0CE650);
  uint64_t v10 = sub_2445EF018();
  os_log_type_t v11 = sub_2445EF448();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_244580000, v10, v11, "Re-registering for messages; interrupted the first time", v12, 2u);
    MEMORY[0x245694340](v12, -1, -1);
  }
  uint64_t v14 = *(void *)(v0 + 128);
  uint64_t v13 = *(void *)(v0 + 136);
  uint64_t v16 = *(void *)(v0 + 112);
  uint64_t v15 = *(void *)(v0 + 120);

  uint64_t v17 = *(os_unfair_lock_s **)(v15 + OBJC_IVAR____TtC22ManagedAppDistribution9XPCClient_lockedStorage);
  unsigned __int8 v18 = (void *)swift_task_alloc();
  _OWORD v18[2] = v15;
  v18[3] = v16;
  void v18[4] = v14;
  v18[5] = v13;
  os_unfair_lock_lock(v17 + 26);
  sub_2445E1ED8((uint64_t)&v17[4]);
  os_unfair_lock_unlock(v17 + 26);
LABEL_23:
  swift_task_dealloc();
LABEL_24:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v50 = *(uint64_t (**)(void))(v0 + 8);
  return v50();
}

void sub_2445DBB30(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_2445DBB44(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)(a2 + 16) + 16))
  {
    uint64_t v3 = *(void *)a2;
    char v4 = *(unsigned char *)(a2 + 8);
    *(void *)a2 = a1;
    *(unsigned char *)(a2 + 8) = 0;
    if ((v4 & 1) != 0 || v3 != a1)
    {
      if (qword_26B0CE668 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_2445EF038();
      __swift_project_value_buffer(v5, (uint64_t)qword_26B0CE650);
      id v6 = sub_2445EF018();
      os_log_type_t v7 = sub_2445EF448();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 134218240;
        sub_2445EF478();
        *(_WORD *)(v8 + 12) = 2048;
        sub_2445EF478();
        _os_log_impl(&dword_244580000, v6, v7, "Re-registering for messages as last known daemon identifier changed: %llu -> %llu", (uint8_t *)v8, 0x16u);
        MEMORY[0x245694340](v8, -1, -1);
      }

      uint64_t v9 = swift_bridgeObjectRetain();
      sub_2445D73D0(v9, 1, a2, 0, 0);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_26B0CE668 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_2445EF038();
    __swift_project_value_buffer(v10, (uint64_t)qword_26B0CE650);
    os_log_type_t v11 = sub_2445EF018();
    os_log_type_t v12 = sub_2445EF448();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_244580000, v11, v12, "Not registered for any messages; resetting last known daemon instance identifier",
        v13,
        2u);
      MEMORY[0x245694340](v13, -1, -1);
    }

    *(void *)a2 = 0;
    *(unsigned char *)(a2 + 8) = 1;
  }
}

uint64_t sub_2445DBDA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2445EF328();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2445EF318();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_244589A98(a1, qword_26B0CE670);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2445EF2C8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_2445DBF54(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  if (!*(void *)(a4 + 16)) {
    return 0;
  }
  sub_2445EF948();
  if (a3 == 253 || a3 == 254 || a3 == 255)
  {
    sub_2445EF958();
  }
  else
  {
    sub_2445EF958();
    sub_2445EF958();
    if (a3) {
      sub_2445EF198();
    }
    else {
      sub_2445EF978();
    }
  }
  uint64_t v8 = sub_2445EF988();
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
    return 0;
  }
  uint64_t v11 = ~v9;
  while (1)
  {
    uint64_t v12 = *(void *)(a4 + 48) + 24 * v10;
    uint64_t v13 = *(void *)v12;
    uint64_t v14 = *(void *)(v12 + 8);
    int v15 = *(unsigned __int8 *)(v12 + 16);
    switch(v15)
    {
      case 253:
        if (a3 == 253)
        {
          a3 = -3;
          uint64_t v18 = *(void *)v12;
          uint64_t v19 = *(void *)(v12 + 8);
          unsigned __int8 v20 = -3;
          goto LABEL_36;
        }
        goto LABEL_23;
      case 254:
        if (a3 == 254)
        {
          a3 = -2;
          uint64_t v18 = *(void *)v12;
          uint64_t v19 = *(void *)(v12 + 8);
          unsigned __int8 v20 = -2;
          goto LABEL_36;
        }
        goto LABEL_23;
      case 255:
        if (a3 == 0xFF)
        {
          a3 = -1;
          uint64_t v18 = *(void *)v12;
          uint64_t v19 = *(void *)(v12 + 8);
          unsigned __int8 v20 = -1;
          goto LABEL_36;
        }
LABEL_23:
        sub_2445E1E1C(v13, v14, v15);
        sub_2445E1E1C(a1, a2, a3);
        sub_2445E1E34(v13, v14, v15);
        sub_2445E1E34(a1, a2, a3);
        goto LABEL_24;
    }
    if (a3 > 0xFCu) {
      goto LABEL_23;
    }
    if (v15) {
      break;
    }
    sub_2445E1E1C(v13, v14, v15);
    sub_2445E1E1C(a1, a2, a3);
    sub_2445E1E34(v13, v14, v15);
    sub_2445E1E34(a1, a2, a3);
    if ((a3 & 1) == 0 && v13 == a1) {
      return 1;
    }
LABEL_24:
    unint64_t v10 = (v10 + 1) & v11;
    if (((*(void *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      return 0;
    }
  }
  if ((a3 & 1) == 0) {
    goto LABEL_23;
  }
  if (v13 != a1 || v14 != a2)
  {
    char v21 = sub_2445EF848();
    sub_2445E1E1C(v13, v14, v15);
    sub_2445E1E1C(a1, a2, a3);
    sub_2445E1E34(v13, v14, v15);
    sub_2445E1E34(a1, a2, a3);
    if (v21) {
      return 1;
    }
    goto LABEL_24;
  }
  sub_2445E1E1C(a1, a2, v15);
  sub_2445E1E1C(a1, a2, a3);
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  unsigned __int8 v20 = v15;
LABEL_36:
  sub_2445E1E34(v18, v19, v20);
  sub_2445E1E34(a1, a2, a3);
  return 1;
}

void sub_2445DC288(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_2445DC29C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, SEL *a7)
{
  uint64_t v12 = (void *)sub_2445EEF38();
  void v14[4] = a4;
  v14[5] = a5;
  v14[0] = MEMORY[0x263EF8330];
  v14[1] = 1107296256;
  _DWORD v14[2] = sub_2445D5428;
  v14[3] = a6;
  uint64_t v13 = _Block_copy(v14);
  swift_retain();
  swift_release();
  objc_msgSend(a1, *a7, v12, v13);
  _Block_release(v13);
}

uint64_t sub_2445DC374@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(unsigned char *)(result + 8) & 1) == 0;
  return result;
}

uint64_t sub_2445DC388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x270FA2498](sub_2445DC3A8, 0, 0);
}

uint64_t sub_2445DC3A8()
{
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  uint64_t v3 = &aPpp[*(int *)aPpp];
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2445DC4A4;
  return ((uint64_t (*)(uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v3)(v0 + 16, sub_2445DC8A0, 0);
}

uint64_t sub_2445DC4A4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 40) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_2445DC69C;
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    uint64_t v5 = sub_2445DC5CC;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

void sub_2445DC5CC()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[3];
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC22ManagedAppDistribution9XPCClient_lockedStorage);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v1;
  os_unfair_lock_lock(v4 + 26);
  sub_2445E379C((uint64_t)&v4[4]);
  os_unfair_lock_unlock(v4 + 26);
  if (!v2)
  {
    swift_task_dealloc();
    uint64_t v6 = (void (*)(void))v0[1];
    v6();
  }
}

uint64_t sub_2445DC69C()
{
  if (qword_26B0CE668 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = sub_2445EF038();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B0CE650);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_2445EF018();
  os_log_type_t v6 = sub_2445EF438();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[5];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    unint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138543362;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v12;
    sub_2445EF478();
    *unint64_t v10 = v12;

    _os_log_impl(&dword_244580000, v5, v6, "Failed to retrieve daemon instance identifier: %{public}@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE538);
    swift_arrayDestroy();
    MEMORY[0x245694340](v10, -1, -1);
    MEMORY[0x245694340](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

void sub_2445DC8A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v7[4] = a4;
  v7[5] = a5;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  v7[2] = sub_2445D5428;
  v7[3] = &block_descriptor_26;
  os_log_type_t v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_daemonInstanceIdentifierWithReply_, v6);
  _Block_release(v6);
}

id XPCClient.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2445DCA10(uint64_t a1, int *a2)
{
  os_log_type_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[1] = sub_2445BBF98;
  return v6(a1);
}

uint64_t sub_2445DCAEC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_2445DCBC0(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_244584198((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_244584198((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_2445DCBC0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2445EF488();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_2445DCD7C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_2445EF5B8();
  if (!v8)
  {
    sub_2445EF5E8();
    __break(1u);
LABEL_17:
    uint64_t result = sub_2445EF648();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_2445DCD7C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_2445DCE14(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2445DCFF4(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_2445DCFF4(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2445DCE14(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_2445DCF8C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_2445EF568();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_2445EF5E8();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_2445EF1B8();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_2445EF648();
    __break(1u);
LABEL_14:
    uint64_t result = sub_2445EF5E8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_2445DCF8C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE830);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  _OWORD v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_2445DCFF4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE830);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2445EF648();
  __break(1u);
  return result;
}

uint64_t sub_2445DD144(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C910);
  uint64_t v6 = sub_2445EF628();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_2445841F4((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_244585A2C(v25, (uint64_t)&v38);
      sub_244584198(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = sub_2445EF4E8();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_2445841F4(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_2445DD45C(uint64_t a1, int a2)
{
  unint64_t v3 = v2;
  uint64_t v44 = sub_2445EF5D8();
  uint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CEBB8);
  int v45 = a2;
  uint64_t v9 = sub_2445EF628();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    long long v38 = v2;
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    uint64_t v40 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    int64_t v39 = (unint64_t)(v11 + 63) >> 6;
    unint64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v15 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    uint64_t v42 = v8;
    uint64_t v43 = v7;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v39) {
          goto LABEL_34;
        }
        unint64_t v22 = v40[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v22 = v40[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v39)
            {
LABEL_34:
              swift_release();
              unint64_t v3 = v38;
              if (v45)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
                if (v36 >= 64) {
                  bzero(v40, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v40 = -1 << v36;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v40[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v22 = v40[v17];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_21:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = v5;
      uint64_t v25 = *(void *)(v5 + 72);
      unint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
      long long v27 = v43;
      uint64_t v28 = v44;
      if (v45)
      {
        (*v46)(v43, v26, v44);
        sub_2445841F4((_OWORD *)(*(void *)(v8 + 56) + 32 * v20), v47);
      }
      else
      {
        (*v41)(v43, v26, v44);
        sub_244584198(*(void *)(v8 + 56) + 32 * v20, (uint64_t)v47);
      }
      uint64_t result = sub_2445EF0C8();
      uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v15 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v18 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      (*v46)((char *)(*(void *)(v10 + 48) + v25 * v18), (unint64_t)v27, v28);
      uint64_t result = (uint64_t)sub_2445841F4(v47, (_OWORD *)(*(void *)(v10 + 56) + 32 * v18));
      ++*(void *)(v10 + 16);
      uint64_t v5 = v24;
      uint64_t v8 = v42;
    }
  }
  uint64_t result = swift_release();
  *unint64_t v3 = v10;
  return result;
}

uint64_t sub_2445DD858(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DDB0);
  char v38 = a2;
  uint64_t v6 = sub_2445EF628();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v18 >= v36) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v37 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v36) {
        goto LABEL_36;
      }
      unint64_t v20 = *(void *)(v37 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v36)
        {
LABEL_36:
          swift_release();
          unint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }
        unint64_t v20 = *(void *)(v37 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_45;
            }
            if (v13 >= v36) {
              goto LABEL_36;
            }
            unint64_t v20 = *(void *)(v37 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    uint64_t v22 = *(void *)(v5 + 48) + 24 * v17;
    uint64_t v24 = *(void *)v22;
    uint64_t v23 = *(void *)(v22 + 8);
    int v25 = *(unsigned __int8 *)(v22 + 16);
    uint64_t v26 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    if ((v38 & 1) == 0)
    {
      sub_24458565C(*(void *)v22, *(void *)(v22 + 8), *(unsigned char *)(v22 + 16));
      swift_bridgeObjectRetain();
    }
    sub_2445EF948();
    sub_2445EF958();
    if (v25) {
      sub_2445EF198();
    }
    else {
      sub_2445EF978();
    }
    uint64_t result = sub_2445EF988();
    uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        BOOL v32 = v29 == v31;
        if (v29 == v31) {
          unint64_t v29 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v29);
      }
      while (v33 == -1);
      unint64_t v14 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = *(void *)(v7 + 48) + 24 * v14;
    *(void *)uint64_t v15 = v24;
    *(void *)(v15 + 8) = v23;
    *(unsigned char *)(v15 + 16) = v25;
    *(void *)(*(void *)(v7 + 56) + 8 * v14) = v26;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v3 = v35;
  unint64_t v19 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_43;
  }
LABEL_39:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v19, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_43:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_2445DDBAC(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C908);
  char v38 = a2;
  uint64_t v6 = sub_2445EF628();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v18 >= v36) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v37 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v36) {
        goto LABEL_36;
      }
      unint64_t v20 = *(void *)(v37 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v36)
        {
LABEL_36:
          swift_release();
          unint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }
        unint64_t v20 = *(void *)(v37 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_45;
            }
            if (v13 >= v36) {
              goto LABEL_36;
            }
            unint64_t v20 = *(void *)(v37 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    uint64_t v22 = *(void *)(v5 + 48) + 24 * v17;
    uint64_t v24 = *(void *)v22;
    uint64_t v23 = *(void *)(v22 + 8);
    int v25 = *(unsigned __int8 *)(v22 + 16);
    unint64_t v26 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    if ((v38 & 1) == 0)
    {
      sub_24458565C(*(void *)v22, *(void *)(v22 + 8), *(unsigned char *)(v22 + 16));
      sub_24458566C(v26);
    }
    sub_2445EF948();
    sub_2445EF958();
    if (v25) {
      sub_2445EF198();
    }
    else {
      sub_2445EF978();
    }
    uint64_t result = sub_2445EF988();
    uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        BOOL v32 = v29 == v31;
        if (v29 == v31) {
          unint64_t v29 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v29);
      }
      while (v33 == -1);
      unint64_t v14 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = *(void *)(v7 + 48) + 24 * v14;
    *(void *)uint64_t v15 = v24;
    *(void *)(v15 + 8) = v23;
    *(unsigned char *)(v15 + 16) = v25;
    *(void *)(*(void *)(v7 + 56) + 8 * v14) = v26;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v3 = v35;
  unint64_t v19 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_43;
  }
LABEL_39:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v19, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_43:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

void *sub_2445DDF00()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C910);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2445EF618();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_244585A2C(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_244584198(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    uint64_t result = sub_2445841F4(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2445DE0E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2445EF5D8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CEBB8);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_2445EF618();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  unint64_t v22 = v1;
  uint64_t result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v23 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v25 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v24) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v24) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v23 + 8 * v11);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 32 * v16;
    sub_244584198(*(void *)(v6 + 56) + v18, (uint64_t)v26);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
    uint64_t result = sub_2445841F4(v26, (_OWORD *)(*(void *)(v8 + 56) + v18));
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v24)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v23 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2445DE390()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DDB0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2445EF618();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v15;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    uint64_t v21 = 8 * v15;
    uint64_t v22 = *(void *)(*(void *)(v2 + 56) + v21);
    uint64_t v23 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v23 = *(void *)v17;
    *(void *)(v23 + 8) = v19;
    *(unsigned char *)(v23 + 16) = v20;
    *(void *)(*(void *)(v4 + 56) + v21) = v22;
    sub_24458565C(v18, v19, v20);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2445DE554()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8C908);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2445EF618();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v15;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    uint64_t v21 = 8 * v15;
    unint64_t v22 = *(void *)(*(void *)(v2 + 56) + v21);
    uint64_t v23 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v23 = *(void *)v17;
    *(void *)(v23 + 8) = v19;
    *(unsigned char *)(v23 + 16) = v20;
    *(void *)(*(void *)(v4 + 56) + v21) = v22;
    sub_24458565C(v18, v19, v20);
    uint64_t result = (void *)sub_24458566C(v22);
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2445DE718(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2445DE758(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2445DE738(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2445DE8C4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2445DE758(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DD98);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2445EF648();
  __break(1u);
  return result;
}

uint64_t sub_2445DE8C4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DD88);
  uint64_t v10 = *(void *)(type metadata accessor for ManagedApp() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  id v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for ManagedApp() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_2445EF648();
  __break(1u);
  return result;
}

uint64_t sub_2445DEB04(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v15 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v15 >= v7) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v3 + 8 * v15);
    ++v8;
    if (!v16)
    {
      int64_t v8 = v15 + 1;
      if (v15 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v16 = *(void *)(v3 + 8 * v8);
      if (!v16)
      {
        int64_t v8 = v15 + 2;
        if (v15 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v3 + 8 * v8);
        if (!v16)
        {
          int64_t v8 = v15 + 3;
          if (v15 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v16 = *(void *)(v3 + 8 * v8);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v16 - 1) & v16;
    unint64_t v10 = __clz(__rbit64(v16)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = *(void *)(v2 + 48) + 24 * v10;
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = *(void *)(v11 + 8);
    unsigned __int8 v14 = *(unsigned char *)(v11 + 16);
    sub_2445E1E1C(*(void *)v11, v13, v14);
    sub_2445E03C0(v12, v13, v14, (uint64_t)v18);
    sub_2445E1FC8(v18[0], v18[1], v19);
    uint64_t result = sub_2445E1E34(v12, v13, v14);
  }
  int64_t v17 = v15 + 4;
  if (v17 < v7)
  {
    unint64_t v16 = *(void *)(v3 + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        int64_t v8 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v3 + 8 * v8);
        ++v17;
        if (v16) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v17;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

uint64_t sub_2445DECE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  v48[5] = *MEMORY[0x263EF8340];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v44 = a1 + 56;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v41 = ~v4;
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & v3;
  int64_t v43 = (unint64_t)(63 - v4) >> 6;
  uint64_t v7 = a2 + 56;
  uint64_t v8 = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v45 = v8;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      uint64_t v11 = (v6 - 1) & v6;
      unint64_t v12 = v10 | (v9 << 6);
    }
    else
    {
      int64_t v13 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_68;
      }
      if (v13 >= v43) {
        goto LABEL_64;
      }
      unint64_t v14 = *(void *)(v44 + 8 * v13);
      int64_t v15 = v9 + 1;
      if (!v14)
      {
        int64_t v15 = v9 + 2;
        if (v9 + 2 >= v43) {
          goto LABEL_64;
        }
        unint64_t v14 = *(void *)(v44 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v9 + 3;
          if (v9 + 3 >= v43) {
            goto LABEL_64;
          }
          unint64_t v14 = *(void *)(v44 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v9 + 4;
            if (v9 + 4 >= v43) {
              goto LABEL_64;
            }
            unint64_t v14 = *(void *)(v44 + 8 * v15);
            if (!v14)
            {
              int64_t v16 = v9 + 5;
              if (v9 + 5 >= v43)
              {
LABEL_64:
                sub_244585A88();
                return v2;
              }
              unint64_t v14 = *(void *)(v44 + 8 * v16);
              if (!v14)
              {
                while (1)
                {
                  int64_t v15 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    break;
                  }
                  if (v15 >= v43) {
                    goto LABEL_64;
                  }
                  unint64_t v14 = *(void *)(v44 + 8 * v15);
                  ++v16;
                  if (v14) {
                    goto LABEL_24;
                  }
                }
LABEL_68:
                __break(1u);
              }
              int64_t v15 = v9 + 5;
            }
          }
        }
      }
LABEL_24:
      uint64_t v11 = (v14 - 1) & v14;
      unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
      int64_t v9 = v15;
    }
    uint64_t v17 = *(void *)(v8 + 48) + 24 * v12;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    unsigned int v20 = *(unsigned __int8 *)(v17 + 16);
    sub_2445EF948();
    unint64_t v46 = v11;
    int64_t v47 = v9;
    if (v20 == 253 || v20 == 254 || v20 == 255)
    {
      sub_2445EF958();
    }
    else
    {
      sub_2445EF958();
      sub_2445EF958();
      if (v20)
      {
        sub_24458565C(v18, v19, 1);
        sub_2445EF198();
      }
      else
      {
        sub_2445EF978();
      }
    }
    uint64_t v21 = sub_2445EF988();
    uint64_t v22 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v23 = v21 & ~v22;
    if ((*(void *)(v7 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23)) {
      break;
    }
LABEL_6:
    sub_2445E1E34(v18, v19, v20);
    uint64_t v8 = v45;
    unint64_t v6 = v46;
    int64_t v9 = v47;
  }
  uint64_t v24 = ~v22;
  while (1)
  {
    uint64_t v25 = *(void *)(v2 + 48) + 24 * v23;
    uint64_t v26 = *(void *)v25;
    uint64_t v27 = *(void *)(v25 + 8);
    int v28 = *(unsigned __int8 *)(v25 + 16);
    switch(v28)
    {
      case 253:
        if (v20 == 253)
        {
          uint64_t v30 = *(void *)v25;
          uint64_t v31 = *(void *)(v25 + 8);
          unsigned __int8 v32 = -3;
          goto LABEL_59;
        }
        goto LABEL_41;
      case 254:
        if (v20 == 254)
        {
          uint64_t v30 = *(void *)v25;
          uint64_t v31 = *(void *)(v25 + 8);
          unsigned __int8 v32 = -2;
          goto LABEL_59;
        }
        goto LABEL_41;
      case 255:
        if (v20 == 255)
        {
          uint64_t v30 = *(void *)v25;
          uint64_t v31 = *(void *)(v25 + 8);
          unsigned __int8 v32 = -1;
          goto LABEL_59;
        }
LABEL_41:
        sub_2445E1E1C(v18, v19, v20);
        sub_2445E1E1C(v26, v27, v28);
        sub_2445E1E34(v26, v27, v28);
        sub_2445E1E34(v18, v19, v20);
        goto LABEL_42;
    }
    if (v20 > 0xFC) {
      goto LABEL_41;
    }
    if (v28) {
      break;
    }
    sub_2445E1E1C(v18, v19, v20);
    sub_2445E1E1C(v26, v27, v28);
    sub_2445E1E34(v26, v27, v28);
    sub_2445E1E34(v18, v19, v20);
    if ((v20 & 1) == 0 && v26 == v18) {
      goto LABEL_60;
    }
LABEL_42:
    unint64_t v23 = (v23 + 1) & v24;
    if (((*(void *)(v7 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
      goto LABEL_6;
    }
  }
  if ((v20 & 1) == 0) {
    goto LABEL_41;
  }
  if (v26 != v18 || v27 != v19)
  {
    int v42 = sub_2445EF848();
    sub_2445E1E1C(v18, v19, v20);
    sub_2445E1E1C(v26, v27, v28);
    sub_2445E1E34(v26, v27, v28);
    sub_2445E1E34(v18, v19, v20);
    if (v42) {
      goto LABEL_60;
    }
    goto LABEL_42;
  }
  sub_2445E1E1C(v18, v19, v20);
  sub_2445E1E1C(v18, v19, v28);
  sub_2445E1E34(v18, v19, v28);
  uint64_t v30 = v18;
  uint64_t v31 = v19;
  unsigned __int8 v32 = v20;
LABEL_59:
  sub_2445E1E34(v30, v31, v32);
LABEL_60:
  uint64_t isStackAllocationSafe = sub_2445E1E34(v18, v19, v20);
  v48[0] = v45;
  v48[1] = v44;
  v48[2] = v41;
  v48[3] = v47;
  v48[4] = v46;
  char v34 = *(unsigned char *)(v2 + 32);
  unint64_t v35 = (unint64_t)((1 << v34) + 63) >> 6;
  size_t v36 = 8 * v35;
  if ((v34 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    memcpy((char *)&v41 - ((v36 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v36);
    uint64_t v37 = sub_2445E07A4((uint64_t)&v41 - ((v36 + 15) & 0x3FFFFFFFFFFFFFF0), v35, v2, v23, v48);
    swift_release();
    sub_244585A88();
    return v37;
  }
  else
  {
    char v38 = (void *)swift_slowAlloc();
    memcpy(v38, (const void *)(v2 + 56), v36);
    uint64_t v39 = sub_2445E07A4((uint64_t)v38, v35, v2, v23, v48);
    swift_release();
    sub_244585A88();
    MEMORY[0x245694340](v38, -1, -1);
    return v39;
  }
}

uint64_t sub_2445DF360(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  sub_2445EF948();
  uint64_t v32 = a1;
  if (a4 == 253 || a4 == 254 || a4 == 255)
  {
    sub_2445EF958();
  }
  else
  {
    sub_2445EF958();
    if (a4)
    {
      sub_2445EF958();
      swift_bridgeObjectRetain();
      sub_2445EF198();
      goto LABEL_6;
    }
    sub_2445EF958();
    sub_2445EF978();
  }
  swift_bridgeObjectRetain();
LABEL_6:
  uint64_t v11 = sub_2445EF988();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v14 = v10 + 56;
  uint64_t v33 = a3;
  if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v34 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    sub_2445E1E1C(a2, v33, a4);
    sub_2445DFB18(a2, v33, a4, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v5 = v34;
    swift_bridgeObjectRelease();
    *(void *)uint64_t v32 = a2;
    *(void *)(v32 + 8) = v33;
    uint64_t result = 1;
    *(unsigned char *)(v32 + 16) = a4;
    return result;
  }
  uint64_t v15 = ~v12;
  while (1)
  {
    uint64_t v16 = v10;
    uint64_t v17 = *(void *)(v10 + 48) + 24 * v13;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    int v20 = *(unsigned __int8 *)(v17 + 16);
    switch(v20)
    {
      case 253:
        if (a4 == 253)
        {
          sub_2445E1E34(v18, v19, 0xFDu);
          uint64_t v24 = a2;
          uint64_t v25 = v33;
          unsigned __int8 v26 = -3;
          goto LABEL_36;
        }
        goto LABEL_23;
      case 254:
        if (a4 == 254)
        {
          sub_2445E1E34(v18, v19, 0xFEu);
          uint64_t v24 = a2;
          uint64_t v25 = v33;
          unsigned __int8 v26 = -2;
          goto LABEL_36;
        }
LABEL_23:
        sub_2445E1E1C(a2, v33, a4);
        sub_2445E1E1C(v18, v19, v20);
        sub_2445E1E34(v18, v19, v20);
        sub_2445E1E34(a2, v33, a4);
        goto LABEL_24;
      case 255:
        if (a4 == 0xFF)
        {
          sub_2445E1E34(v18, v19, 0xFFu);
          uint64_t v24 = a2;
          uint64_t v25 = v33;
          unsigned __int8 v26 = -1;
LABEL_36:
          sub_2445E1E34(v24, v25, v26);
          swift_bridgeObjectRelease();
          goto LABEL_37;
        }
        goto LABEL_23;
    }
    if (a4 > 0xFCu) {
      goto LABEL_23;
    }
    if (v20) {
      break;
    }
    sub_2445E1E1C(a2, v33, a4);
    sub_2445E1E1C(v18, v19, v20);
    sub_2445E1E34(v18, v19, v20);
    sub_2445E1E34(a2, v33, a4);
    if ((a4 & 1) == 0 && v18 == a2) {
      goto LABEL_39;
    }
LABEL_24:
    unint64_t v13 = (v13 + 1) & v15;
    uint64_t v10 = v16;
    if (((*(void *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
      goto LABEL_32;
    }
  }
  if ((a4 & 1) == 0) {
    goto LABEL_23;
  }
  if (v18 != a2 || v19 != v33)
  {
    char v31 = sub_2445EF848();
    sub_2445E1E1C(a2, v33, a4);
    sub_2445E1E1C(v18, v19, v20);
    sub_2445E1E34(v18, v19, v20);
    sub_2445E1E34(a2, v33, a4);
    if (v31) {
      goto LABEL_39;
    }
    goto LABEL_24;
  }
  sub_2445E1E1C(a2, v33, a4);
  sub_2445E1E1C(a2, v33, v20);
  sub_2445E1E34(a2, v33, v20);
  sub_2445E1E34(a2, v33, a4);
LABEL_39:
  swift_bridgeObjectRelease();
  sub_2445E1E34(a2, v33, a4);
LABEL_37:
  uint64_t v27 = *(void *)(*v5 + 48) + 24 * v13;
  uint64_t v28 = *(void *)v27;
  uint64_t v29 = *(void *)(v27 + 8);
  *(void *)uint64_t v32 = *(void *)v27;
  *(void *)(v32 + 8) = v29;
  unsigned __int8 v30 = *(unsigned char *)(v27 + 16);
  *(unsigned char *)(v32 + 16) = v30;
  sub_2445E1E1C(v28, v29, v30);
  return 0;
}

uint64_t sub_2445DF7A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE7B8);
  uint64_t v3 = sub_2445EF528();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v31 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v30 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return result;
        }
        if (v15 >= v30) {
          goto LABEL_40;
        }
        unint64_t v16 = v31[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v30) {
            goto LABEL_40;
          }
          unint64_t v16 = v31[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v30) {
              goto LABEL_40;
            }
            unint64_t v16 = v31[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v30)
              {
LABEL_40:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v31 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v31[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_46;
                  }
                  if (v10 >= v30) {
                    goto LABEL_40;
                  }
                  unint64_t v16 = v31[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 24 * v14;
      uint64_t v19 = *(void *)v18;
      uint64_t v20 = *(void *)(v18 + 8);
      int v21 = *(unsigned __int8 *)(v18 + 16);
      sub_2445EF948();
      if (v21 == 253 || v21 == 254 || v21 == 255)
      {
        sub_2445EF958();
      }
      else
      {
        sub_2445EF958();
        sub_2445EF958();
        if (v21) {
          sub_2445EF198();
        }
        else {
          sub_2445EF978();
        }
      }
      uint64_t result = sub_2445EF988();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_45;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v8 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v11 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 24 * v11;
      *(void *)uint64_t v12 = v19;
      *(void *)(v12 + 8) = v20;
      *(unsigned char *)(v12 + 16) = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2445DFB18(uint64_t result, uint64_t a2, unsigned __int8 a3, unint64_t a4, char a5)
{
  uint64_t v11 = result;
  unint64_t v12 = *(void *)(*(void *)v5 + 16);
  unint64_t v13 = *(void *)(*(void *)v5 + 24);
  if (v13 <= v12 || (a5 & 1) == 0)
  {
    if (a5)
    {
      sub_2445DF7A8();
    }
    else
    {
      if (v13 > v12)
      {
        uint64_t result = (uint64_t)sub_2445DFEB8();
        goto LABEL_38;
      }
      sub_2445E0078();
    }
    uint64_t v14 = *(void *)v5;
    sub_2445EF948();
    if (a3 == 253 || a3 == 254 || a3 == 255)
    {
      sub_2445EF958();
    }
    else
    {
      sub_2445EF958();
      sub_2445EF958();
      if (a3) {
        sub_2445EF198();
      }
      else {
        sub_2445EF978();
      }
    }
    uint64_t v5 = &v26;
    uint64_t result = sub_2445EF988();
    uint64_t v15 = -1 << *(unsigned char *)(v14 + 32);
    a4 = result & ~v15;
    if ((*(void *)(v14 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
    {
      uint64_t v16 = ~v15;
      do
      {
        uint64_t v17 = *(void *)(v14 + 48) + 24 * a4;
        uint64_t v6 = *(void *)v17;
        uint64_t v7 = *(void *)(v17 + 8);
        LODWORD(v5) = *(unsigned __int8 *)(v17 + 16);
        switch(v5)
        {
          case 0xFD:
            if (a3 == 253) {
              goto LABEL_44;
            }
            break;
          case 0xFE:
            if (a3 == 254) {
              goto LABEL_44;
            }
            break;
          case 0xFF:
            if (a3 == 0xFF) {
              goto LABEL_44;
            }
            break;
          default:
            if (a3 <= 0xFCu)
            {
              if ((v5 & 1) == 0)
              {
                sub_2445E1E1C(v6, v7, v5);
                sub_2445E1E1C(v11, a2, a3);
                sub_2445E1E34(v6, v7, v5);
                uint64_t result = sub_2445E1E34(v11, a2, a3);
                if ((a3 & 1) == 0 && v6 == v11) {
                  goto LABEL_46;
                }
                goto LABEL_25;
              }
              if (a3)
              {
                if (v6 == v11 && v7 == a2) {
                  goto LABEL_47;
                }
                char v24 = sub_2445EF848();
                sub_2445E1E1C(v6, v7, v5);
                sub_2445E1E1C(v11, a2, a3);
                sub_2445E1E34(v6, v7, v5);
                uint64_t result = sub_2445E1E34(v11, a2, a3);
                if (v24) {
                  goto LABEL_46;
                }
                goto LABEL_25;
              }
            }
            break;
        }
        sub_2445E1E1C(v6, v7, v5);
        sub_2445E1E1C(v11, a2, a3);
        sub_2445E1E34(v6, v7, v5);
        uint64_t result = sub_2445E1E34(v11, a2, a3);
LABEL_25:
        a4 = (a4 + 1) & v16;
      }
      while (((*(void *)(v14 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
    }
  }
LABEL_38:
  uint64_t v19 = *v25;
  *(void *)(*v25 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v20 = *(void *)(v19 + 48) + 24 * a4;
  *(void *)uint64_t v20 = v11;
  *(void *)(v20 + 8) = a2;
  *(unsigned char *)(v20 + 16) = a3;
  uint64_t v21 = *(void *)(v19 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
    __break(1u);
LABEL_44:
    a3 = v5;
    while (1)
    {
      sub_2445E1E34(v6, v7, v5);
      sub_2445E1E34(v11, a2, a3);
LABEL_46:
      sub_2445EF8D8();
      __break(1u);
LABEL_47:
      sub_2445E1E1C(v11, a2, v5);
      sub_2445E1E1C(v11, a2, a3);
      uint64_t v7 = a2;
      uint64_t v6 = v11;
    }
  }
  *(void *)(v19 + 16) = v23;
  return result;
}

void *sub_2445DFEB8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE7B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2445EF518();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    unsigned __int8 v21 = *(unsigned char *)(v17 + 16);
    *(void *)uint64_t v20 = *(void *)v17;
    *(void *)(v20 + 8) = v19;
    *(unsigned char *)(v20 + 16) = v21;
    uint64_t result = (void *)sub_2445E1E1C(v18, v19, v21);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v13) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2445E0078()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE7B8);
  uint64_t v3 = sub_2445EF528();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_42:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v29 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v30 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (v7)
  {
    unint64_t v13 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v14 = v13 | (v10 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 24 * v14;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    int v21 = *(unsigned __int8 *)(v18 + 16);
    sub_2445EF948();
    if (v21 == 253 || v21 == 254 || v21 == 255)
    {
      sub_2445EF958();
    }
    else
    {
      sub_2445EF958();
      sub_2445EF958();
      if (v21)
      {
        sub_24458565C(v19, v20, 1);
        sub_2445EF198();
      }
      else
      {
        sub_2445EF978();
      }
    }
    uint64_t result = sub_2445EF988();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v8 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v11 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 24 * v11;
    *(void *)uint64_t v12 = v19;
    *(void *)(v12 + 8) = v20;
    *(unsigned char *)(v12 + 16) = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v15 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v15 >= v30) {
    goto LABEL_40;
  }
  unint64_t v16 = *(void *)(v29 + 8 * v15);
  ++v10;
  if (v16) {
    goto LABEL_23;
  }
  int64_t v10 = v15 + 1;
  if (v15 + 1 >= v30) {
    goto LABEL_40;
  }
  unint64_t v16 = *(void *)(v29 + 8 * v10);
  if (v16) {
    goto LABEL_23;
  }
  int64_t v10 = v15 + 2;
  if (v15 + 2 >= v30) {
    goto LABEL_40;
  }
  unint64_t v16 = *(void *)(v29 + 8 * v10);
  if (v16)
  {
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
    goto LABEL_24;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v30)
  {
LABEL_40:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_42;
  }
  unint64_t v16 = *(void *)(v29 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v29 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_2445E03C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *v4;
  sub_2445EF948();
  uint64_t v29 = v4;
  uint64_t v30 = a4;
  if (a3 == 253 || a3 == 254 || a3 == 255)
  {
    sub_2445EF958();
  }
  else
  {
    sub_2445EF958();
    if (a3)
    {
      sub_2445EF958();
      swift_bridgeObjectRetain();
      sub_2445EF198();
      goto LABEL_6;
    }
    sub_2445EF958();
    sub_2445EF978();
  }
  swift_bridgeObjectRetain();
LABEL_6:
  uint64_t v10 = sub_2445EF988();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9 + 56;
  if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_32:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v30 = 0;
    *(void *)(v30 + 8) = 0;
    *(unsigned char *)(v30 + 16) = -4;
    return result;
  }
  uint64_t v31 = ~v11;
  while (1)
  {
    uint64_t v14 = v9;
    uint64_t v15 = *(void *)(v9 + 48) + 24 * v12;
    uint64_t v16 = *(void *)v15;
    uint64_t v17 = *(void *)(v15 + 8);
    int v18 = *(unsigned __int8 *)(v15 + 16);
    switch(v18)
    {
      case 253:
        if (a3 == 253)
        {
          a3 = -3;
          uint64_t v21 = *(void *)v15;
          uint64_t v22 = *(void *)(v15 + 8);
          unsigned __int8 v23 = -3;
          goto LABEL_36;
        }
        goto LABEL_18;
      case 254:
        if (a3 == 254)
        {
          a3 = -2;
          uint64_t v21 = *(void *)v15;
          uint64_t v22 = *(void *)(v15 + 8);
          unsigned __int8 v23 = -2;
          goto LABEL_36;
        }
        goto LABEL_18;
      case 255:
        if (a3 == 0xFF)
        {
          a3 = -1;
          uint64_t v21 = *(void *)v15;
          uint64_t v22 = *(void *)(v15 + 8);
          unsigned __int8 v23 = -1;
          goto LABEL_36;
        }
LABEL_18:
        sub_2445E1E1C(v16, v17, v18);
        sub_2445E1E1C(a1, a2, a3);
        sub_2445E1E34(v16, v17, v18);
        sub_2445E1E34(a1, a2, a3);
        uint64_t v9 = v14;
        goto LABEL_19;
    }
    if (a3 > 0xFCu) {
      goto LABEL_18;
    }
    if (v18) {
      break;
    }
    sub_2445E1E1C(v16, v17, v18);
    sub_2445E1E1C(a1, a2, a3);
    sub_2445E1E34(v16, v17, v18);
    sub_2445E1E34(a1, a2, a3);
    uint64_t v9 = v14;
    if ((a3 & 1) == 0 && v16 == a1) {
      goto LABEL_37;
    }
LABEL_19:
    unint64_t v12 = (v12 + 1) & v31;
    if (((*(void *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      goto LABEL_32;
    }
  }
  if ((a3 & 1) == 0) {
    goto LABEL_18;
  }
  if (v16 != a1 || v17 != a2)
  {
    char v28 = sub_2445EF848();
    sub_2445E1E1C(v16, v17, v18);
    sub_2445E1E1C(a1, a2, a3);
    sub_2445E1E34(v16, v17, v18);
    sub_2445E1E34(a1, a2, a3);
    uint64_t v9 = v14;
    if (v28) {
      goto LABEL_37;
    }
    goto LABEL_19;
  }
  sub_2445E1E1C(a1, a2, v18);
  sub_2445E1E1C(a1, a2, a3);
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  unsigned __int8 v23 = v18;
LABEL_36:
  sub_2445E1E34(v21, v22, v23);
  sub_2445E1E34(a1, a2, a3);
LABEL_37:
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = *v29;
  uint64_t v32 = *v29;
  *uint64_t v29 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_2445DFEB8();
    uint64_t v25 = v32;
  }
  uint64_t v26 = *(void *)(v25 + 48) + 24 * v12;
  char v27 = *(unsigned char *)(v26 + 16);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v26;
  *(unsigned char *)(v30 + 16) = v27;
  sub_2445E0FA0(v12);
  *uint64_t v29 = v32;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2445E07A4(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(a3 + 16);
  char v38 = (unint64_t *)result;
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v7 = v6 - 1;
  uint64_t v41 = a3 + 56;
  uint64_t v40 = a5;
LABEL_2:
  uint64_t v37 = v7;
LABEL_4:
  while (2)
  {
    int64_t v9 = a5[3];
    unint64_t v8 = a5[4];
    if (v8)
    {
      uint64_t v10 = (v8 - 1) & v8;
      unint64_t v11 = __clz(__rbit64(v8)) | (v9 << 6);
      goto LABEL_16;
    }
    int64_t v12 = v9 + 1;
    if (!__OFADD__(v9, 1))
    {
      int64_t v13 = (unint64_t)(a5[2] + 64) >> 6;
      if (v12 >= v13)
      {
        int64_t v12 = a5[3];
LABEL_65:
        a5[3] = v12;
        a5[4] = 0;
        swift_retain();
        return sub_2445E0C98(v38, a2, v37, a3);
      }
      uint64_t v14 = a5[1];
      unint64_t v15 = *(void *)(v14 + 8 * v12);
      if (v15) {
        goto LABEL_15;
      }
      int64_t v16 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_65;
      }
      unint64_t v15 = *(void *)(v14 + 8 * v16);
      if (!v15)
      {
        if (v9 + 3 >= v13) {
          goto LABEL_66;
        }
        unint64_t v15 = *(void *)(v14 + 8 * (v9 + 3));
        if (v15)
        {
          int64_t v12 = v9 + 3;
          goto LABEL_15;
        }
        int64_t v16 = v9 + 4;
        if (v9 + 4 >= v13)
        {
          int64_t v12 = v9 + 3;
          goto LABEL_65;
        }
        unint64_t v15 = *(void *)(v14 + 8 * v16);
        if (!v15)
        {
          int64_t v12 = v9 + 5;
          if (v9 + 5 >= v13)
          {
LABEL_66:
            int64_t v12 = v16;
            goto LABEL_65;
          }
          unint64_t v15 = *(void *)(v14 + 8 * v12);
          if (!v15)
          {
            int64_t v12 = v13 - 1;
            int64_t v35 = v9 + 6;
            while (v13 != v35)
            {
              unint64_t v15 = *(void *)(v14 + 8 * v35++);
              if (v15)
              {
                int64_t v12 = v35 - 1;
                goto LABEL_15;
              }
            }
            goto LABEL_65;
          }
          goto LABEL_15;
        }
      }
      int64_t v12 = v16;
LABEL_15:
      uint64_t v10 = (v15 - 1) & v15;
      unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
      int64_t v9 = v12;
LABEL_16:
      uint64_t v17 = *(void *)(*a5 + 48) + 24 * v11;
      uint64_t v18 = *(void *)v17;
      uint64_t v19 = *(void *)(v17 + 8);
      unsigned int v20 = *(unsigned __int8 *)(v17 + 16);
      a5[3] = v9;
      a5[4] = v10;
      sub_2445EF948();
      if (v20 == 253 || v20 == 254 || v20 == 255)
      {
        sub_2445EF958();
      }
      else
      {
        sub_2445EF958();
        sub_2445EF958();
        if (v20)
        {
          sub_24458565C(v18, v19, 1);
          sub_2445EF198();
        }
        else
        {
          sub_2445EF978();
        }
      }
      uint64_t v21 = sub_2445EF988();
      uint64_t v22 = -1 << *(unsigned char *)(a3 + 32);
      unint64_t v23 = v21 & ~v22;
      if (((*(void *)(v41 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
      {
LABEL_3:
        uint64_t result = sub_2445E1E34(v18, v19, v20);
        a5 = v40;
        continue;
      }
      uint64_t v24 = ~v22;
      while (1)
      {
        uint64_t v25 = *(void *)(a3 + 48) + 24 * v23;
        uint64_t v26 = *(void *)v25;
        uint64_t v27 = *(void *)(v25 + 8);
        int v28 = *(unsigned __int8 *)(v25 + 16);
        if (v28 == 253) {
          break;
        }
        if (v28 == 254)
        {
          if (v20 == 254)
          {
            uint64_t v30 = *(void *)v25;
            uint64_t v31 = *(void *)(v25 + 8);
            unsigned __int8 v32 = -2;
            goto LABEL_49;
          }
          goto LABEL_37;
        }
        if (v28 == 255)
        {
          if (v20 == 255)
          {
            uint64_t v30 = *(void *)v25;
            uint64_t v31 = *(void *)(v25 + 8);
            unsigned __int8 v32 = -1;
            goto LABEL_49;
          }
LABEL_37:
          sub_2445E1E1C(v18, v19, v20);
          sub_2445E1E1C(v26, v27, v28);
          sub_2445E1E34(v26, v27, v28);
          sub_2445E1E34(v18, v19, v20);
          goto LABEL_38;
        }
        if (v20 > 0xFC) {
          goto LABEL_37;
        }
        if (v28)
        {
          if ((v20 & 1) == 0) {
            goto LABEL_37;
          }
          if (v26 == v18 && v27 == v19)
          {
            sub_2445E1E1C(v18, v19, v20);
            sub_2445E1E1C(v18, v19, v28);
            sub_2445E1E34(v18, v19, v28);
            uint64_t v30 = v18;
            uint64_t v31 = v19;
            unsigned __int8 v32 = v20;
LABEL_49:
            sub_2445E1E34(v30, v31, v32);
LABEL_50:
            uint64_t result = sub_2445E1E34(v18, v19, v20);
            uint64_t v33 = (v23 >> 3) & 0x1FFFFFFFFFFFFFF8;
            uint64_t v34 = *(unint64_t *)((char *)v38 + v33);
            *(unint64_t *)((char *)v38 + v33) = v34 & ~(1 << v23);
            a5 = v40;
            if ((v34 & (1 << v23)) != 0)
            {
              uint64_t v7 = v37 - 1;
              if (__OFSUB__(v37, 1)) {
                goto LABEL_69;
              }
              if (v37 == 1) {
                return MEMORY[0x263F8EE88];
              }
              goto LABEL_2;
            }
            goto LABEL_4;
          }
          char v39 = sub_2445EF848();
          sub_2445E1E1C(v18, v19, v20);
          sub_2445E1E1C(v26, v27, v28);
          sub_2445E1E34(v26, v27, v28);
          sub_2445E1E34(v18, v19, v20);
          if (v39) {
            goto LABEL_50;
          }
        }
        else
        {
          sub_2445E1E1C(v18, v19, v20);
          sub_2445E1E1C(v26, v27, v28);
          sub_2445E1E34(v26, v27, v28);
          sub_2445E1E34(v18, v19, v20);
          if ((v20 & 1) == 0 && v26 == v18) {
            goto LABEL_50;
          }
        }
LABEL_38:
        unint64_t v23 = (v23 + 1) & v24;
        if (((*(void *)(v41 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
          goto LABEL_3;
        }
      }
      if (v20 == 253)
      {
        uint64_t v30 = *(void *)v25;
        uint64_t v31 = *(void *)(v25 + 8);
        unsigned __int8 v32 = -3;
        goto LABEL_49;
      }
      goto LABEL_37;
    }
    break;
  }
  __break(1u);
LABEL_69:
  __break(1u);
  return result;
}

uint64_t sub_2445E0C98(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x263F8EE88];
LABEL_6:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE7B8);
  uint64_t result = sub_2445EF538();
  uint64_t v9 = result;
  unsigned __int8 v32 = a1;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (v10)
  {
    unint64_t v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v14 = v13 | (v11 << 6);
LABEL_26:
    uint64_t v18 = *(void *)(v4 + 48) + 24 * v14;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    int v21 = *(unsigned __int8 *)(v18 + 16);
    sub_2445EF948();
    if (v21 == 253 || v21 == 254 || v21 == 255)
    {
      sub_2445EF958();
    }
    else
    {
      sub_2445EF958();
      sub_2445EF958();
      if (v21)
      {
        sub_24458565C(v19, v20, 1);
        sub_2445EF198();
      }
      else
      {
        sub_2445EF978();
      }
    }
    uint64_t result = sub_2445EF988();
    uint64_t v22 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(void *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    uint64_t v30 = *(void *)(v9 + 48) + 24 * v25;
    *(void *)uint64_t v30 = v19;
    *(void *)(v30 + 8) = v20;
    *(unsigned char *)(v30 + 16) = v21;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    if (!v5) {
      goto LABEL_6;
    }
  }
  uint64_t v15 = v11 + 1;
  if (__OFADD__(v11, 1)) {
    goto LABEL_47;
  }
  if (v15 >= v33) {
    goto LABEL_6;
  }
  unint64_t v16 = v32[v15];
  ++v11;
  if (v16) {
    goto LABEL_25;
  }
  uint64_t v11 = v15 + 1;
  if (v15 + 1 >= v33) {
    goto LABEL_6;
  }
  unint64_t v16 = v32[v11];
  if (v16) {
    goto LABEL_25;
  }
  uint64_t v11 = v15 + 2;
  if (v15 + 2 >= v33) {
    goto LABEL_6;
  }
  unint64_t v16 = v32[v11];
  if (v16)
  {
LABEL_25:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    goto LABEL_26;
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= v33) {
    goto LABEL_6;
  }
  unint64_t v16 = v32[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_25;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v33) {
      goto LABEL_6;
    }
    unint64_t v16 = v32[v11];
    ++v17;
    if (v16) {
      goto LABEL_25;
    }
  }
LABEL_48:
  __break(1u);
  return result;
}

unint64_t sub_2445E0FA0(unint64_t result)
{
  unint64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_2445EF4D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      uint64_t v28 = v4;
      do
      {
        int64_t v11 = v2;
        uint64_t v12 = v7;
        uint64_t v13 = 24 * v6;
        uint64_t v14 = v3;
        uint64_t v15 = *(void *)(v3 + 48) + 24 * v6;
        uint64_t v17 = *(void *)v15;
        uint64_t v16 = *(void *)(v15 + 8);
        int v18 = *(unsigned __int8 *)(v15 + 16);
        sub_2445EF948();
        if (v18 == 253 || v18 == 254 || v18 == 255)
        {
          sub_2445EF958();
        }
        else
        {
          sub_2445EF958();
          sub_2445EF958();
          if (v18)
          {
            sub_24458565C(v17, v16, 1);
            sub_2445EF198();
          }
          else
          {
            sub_2445EF978();
          }
        }
        uint64_t v19 = sub_2445EF988();
        sub_2445E1E34(v17, v16, v18);
        uint64_t v7 = v12;
        unint64_t v20 = v19 & v12;
        unint64_t v2 = v11;
        if (v11 >= (uint64_t)v9)
        {
          uint64_t v4 = v28;
          uint64_t v3 = v14;
          if (v20 < v9) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v4 = v28;
          uint64_t v3 = v14;
          if (v20 >= v9) {
            goto LABEL_15;
          }
        }
        if ((uint64_t)v2 >= (uint64_t)v20)
        {
LABEL_15:
          uint64_t v21 = *(void *)(v3 + 48);
          unint64_t v22 = v21 + 24 * v2;
          unint64_t v23 = (long long *)(v21 + v13);
          if ((uint64_t)(24 * v2) < v13 || v22 >= (unint64_t)v23 + 24 || (v24 = v2 == v6, unint64_t v2 = v6, !v24))
          {
            long long v10 = *v23;
            *(void *)(v22 + 16) = *((void *)v23 + 2);
            *(_OWORD *)unint64_t v22 = v10;
            unint64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v25 = *(void *)(v3 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v27;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_2445E1234(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_2445EF608();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_2445EF608();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x245693860](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_2445E1400(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_2445EF608();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_2445EF288();
}

uint64_t sub_2445E1400(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_2445EF608();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2445EF608();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_244589B48(&qword_268E8DD80, &qword_268E8DD78);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DD78);
          uint64_t v12 = sub_2445E1628(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8D0A0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_2445EF648();
  __break(1u);
  return result;
}

void (*sub_2445E1628(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_2445E16D8(v6, a2, a3);
  return sub_2445E1690;
}

void sub_2445E1690(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_2445E16D8(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x245693850](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_2445E1758;
  }
  __break(1u);
  return result;
}

uint64_t sub_2445E1758()
{
  return swift_release();
}

unint64_t sub_2445E1760(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  switch((a5 >> 4) & 7)
  {
    case 0u:
      char v6 = a5;
      sub_24458566C(result);
      uint64_t result = sub_2445E1828(a2, a3, a4, v6);
      break;
    case 1u:
    case 2u:
    case 3u:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2445E1828(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 0x80) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_2445E1838(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  switch((a5 >> 4) & 7)
  {
    case 0u:
      char v6 = a5;
      sub_2445A2390(result);
      uint64_t result = sub_2445C2824(a2, a3, a4, v6);
      break;
    case 1u:
    case 2u:
    case 3u:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2445E1900(uint64_t a1)
{
  return sub_2445DA600(a1);
}

uint64_t sub_2445E191C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_2445DA2C8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2445E1938()
{
  return type metadata accessor for XPCClient();
}

uint64_t type metadata accessor for XPCClient()
{
  uint64_t result = qword_26B0CE848;
  if (!qword_26B0CE848) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2445E198C()
{
  uint64_t result = sub_2445EEF88();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_2445E1A28(const char *a1)
{
  sub_2445D6C20(a1, *(void **)(v1 + 16));
}

unint64_t sub_2445E1A44()
{
  unint64_t result = qword_26B0CE7B0;
  if (!qword_26B0CE7B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B0CE7B0);
  }
  return result;
}

uint64_t sub_2445E1A84()
{
  return swift_deallocObject();
}

void sub_2445E1ABC()
{
}

uint64_t sub_2445E1AE0()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2445E1B20()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2445BCFB0;
  v3[3] = v2;
  return MEMORY[0x270FA2498](sub_2445DC3A8, 0, 0);
}

uint64_t sub_2445E1BCC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2445BBD94;
  char v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_268E8DD40 + dword_268E8DD40);
  return v6(a1, v4);
}

uint64_t sub_2445E1C84()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_2445E1CDC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v10 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_2445BBD94;
  return sub_2445DAE58(a1, v4, v5, v6, v7, v8, v10, v9);
}

uint64_t sub_2445E1DB8(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

unint64_t sub_2445E1DC8()
{
  unint64_t result = qword_26B0CE750;
  if (!qword_26B0CE750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE750);
  }
  return result;
}

uint64_t sub_2445E1E1C(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xFCu) {
    return sub_24458565C(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_2445E1E34(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xFCu) {
    return sub_244585A1C(result, a2, a3 & 1);
  }
  return result;
}

unint64_t sub_2445E1E4C()
{
  unint64_t result = qword_268E8DD60;
  if (!qword_268E8DD60)
  {
    sub_2445EEDF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DD60);
  }
  return result;
}

uint64_t sub_2445E1EA4()
{
  return sub_2445DEB04(*(void *)(v0 + 16));
}

uint64_t sub_2445E1ED8(uint64_t a1)
{
  return sub_2445D73D0(v1[3], 1, a1, v1[4], v1[5]);
}

void sub_2445E1F14(uint64_t a1)
{
  sub_2445DBB44(*(void *)(v1 + 24), a1);
}

uint64_t sub_2445E1F48()
{
  return swift_deallocObject();
}

uint64_t sub_2445E1F58(void *a1)
{
  return sub_2445D67FC(a1, v1);
}

uint64_t sub_2445E1F74()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2445E1FAC(uint64_t a1)
{
  return sub_2445AB0D0(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_2445E1FC8(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 252) {
    return sub_2445E1E34(result, a2, a3);
  }
  return result;
}

uint64_t sub_2445E1FDC()
{
  return swift_deallocObject();
}

uint64_t sub_2445E1FEC(void *a1)
{
  return sub_2445D65C0(a1, v1);
}

uint64_t sub_2445E2008(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2445E2064(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t *sub_2445E20C0(unint64_t *a1)
{
  return a1;
}

uint64_t sub_2445E20EC(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_2445E2148(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2445EF608();
    swift_bridgeObjectRelease();
  }

  JUMPOUT(0x245693860);
}

uint64_t sub_2445E21C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE7B8);
    uint64_t v3 = sub_2445EF538();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v29 = v1;
    uint64_t v30 = a1 + 32;
    while (1)
    {
      uint64_t v6 = v30 + 24 * v4;
      uint64_t v8 = *(void *)v6;
      uint64_t v7 = *(void *)(v6 + 8);
      unsigned int v9 = *(unsigned __int8 *)(v6 + 16);
      sub_2445EF948();
      uint64_t v31 = v4;
      if (v9 == 253 || v9 == 254 || v9 == 255)
      {
        sub_2445EF958();
      }
      else
      {
        sub_2445EF958();
        sub_2445EF958();
        if (v9)
        {
          sub_24458565C(v8, v7, 1);
          sub_2445EF198();
        }
        else
        {
          sub_2445EF978();
        }
      }
      uint64_t result = sub_2445EF988();
      uint64_t v11 = ~(-1 << *(unsigned char *)(v3 + 32));
      unint64_t v12 = result & v11;
      unint64_t v13 = (result & (unint64_t)v11) >> 6;
      uint64_t v14 = *(void *)(v5 + 8 * v13);
      uint64_t v15 = 1 << (result & v11);
      if ((v15 & v14) != 0)
      {
        while (1)
        {
          uint64_t v16 = *(void *)(v3 + 48) + 24 * v12;
          uint64_t v17 = *(void *)v16;
          uint64_t v18 = *(void *)(v16 + 8);
          int v19 = *(unsigned __int8 *)(v16 + 16);
          switch(v19)
          {
            case 253:
              if (v9 == 253)
              {
                sub_2445E1E34(*(void *)v16, *(void *)(v16 + 8), 0xFDu);
                uint64_t v25 = v8;
                uint64_t v26 = v7;
                unsigned __int8 v27 = -3;
                goto LABEL_3;
              }
              break;
            case 254:
              if (v9 == 254)
              {
                sub_2445E1E34(*(void *)v16, *(void *)(v16 + 8), 0xFEu);
                uint64_t v25 = v8;
                uint64_t v26 = v7;
                unsigned __int8 v27 = -2;
                goto LABEL_3;
              }
              break;
            case 255:
              if (v9 == 255)
              {
                sub_2445E1E34(*(void *)v16, *(void *)(v16 + 8), 0xFFu);
                uint64_t v25 = v8;
                uint64_t v26 = v7;
                unsigned __int8 v27 = -1;
                goto LABEL_3;
              }
              break;
            default:
              if (v9 <= 0xFC)
              {
                if ((v19 & 1) == 0)
                {
                  sub_2445E1E1C(v8, v7, v9);
                  sub_2445E1E1C(v17, v18, v19);
                  sub_2445E1E34(v17, v18, v19);
                  uint64_t result = sub_2445E1E34(v8, v7, v9);
                  if ((v9 & 1) == 0 && v17 == v8) {
                    goto LABEL_40;
                  }
                  goto LABEL_26;
                }
                if (v9)
                {
                  if (v17 == v8 && v18 == v7)
                  {
                    sub_2445E1E1C(v8, v7, v9);
                    sub_2445E1E1C(v8, v7, v19);
                    sub_2445E1E34(v8, v7, v19);
                    sub_2445E1E34(v8, v7, v9);
LABEL_40:
                    uint64_t v25 = v8;
                    uint64_t v26 = v7;
                    unsigned __int8 v27 = v9;
LABEL_3:
                    sub_2445E1E34(v25, v26, v27);
                    uint64_t v1 = v29;
                    goto LABEL_4;
                  }
                  char v28 = sub_2445EF848();
                  sub_2445E1E1C(v8, v7, v9);
                  sub_2445E1E1C(v17, v18, v19);
                  sub_2445E1E34(v17, v18, v19);
                  uint64_t result = sub_2445E1E34(v8, v7, v9);
                  if (v28) {
                    goto LABEL_40;
                  }
                  goto LABEL_26;
                }
              }
              break;
          }
          sub_2445E1E1C(v8, v7, v9);
          sub_2445E1E1C(v17, v18, v19);
          sub_2445E1E34(v17, v18, v19);
          uint64_t result = sub_2445E1E34(v8, v7, v9);
LABEL_26:
          unint64_t v12 = (v12 + 1) & v11;
          unint64_t v13 = v12 >> 6;
          uint64_t v14 = *(void *)(v5 + 8 * (v12 >> 6));
          uint64_t v15 = 1 << v12;
          if ((v14 & (1 << v12)) == 0)
          {
            uint64_t v1 = v29;
            break;
          }
        }
      }
      *(void *)(v5 + 8 * v13) = v15 | v14;
      uint64_t v21 = *(void *)(v3 + 48) + 24 * v12;
      *(void *)uint64_t v21 = v8;
      *(void *)(v21 + 8) = v7;
      *(unsigned char *)(v21 + 16) = v9;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23) {
        break;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      uint64_t v4 = v31 + 1;
      if (v31 + 1 == v1) {
        return v3;
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE88];
  }
  return result;
}

uint64_t sub_2445E25B4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_2445DA6A4(a1, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), a2);
}

uint64_t sub_2445E25D4(unint64_t *a1, uint64_t a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = sub_2445E28F0(v5, a2);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (v2) {
    return v6;
  }
  if ((v8 & 1) == 0)
  {
    unint64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_54;
    }
    if (*a1 >> 62)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_2445EF608();
      swift_bridgeObjectRelease();
      if (v9 != v24) {
        goto LABEL_6;
      }
    }
    else if (v9 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (unint64_t i = v6 + 5; ; ++i)
      {
        unint64_t v11 = i - 4;
        unint64_t v12 = *a1;
        if ((*a1 & 0xC000000000000001) != 0) {
          break;
        }
        if ((v11 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
        if (v11 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_45;
        }
        if (*(void *)(v12 + 8 * i) != a2) {
          goto LABEL_11;
        }
LABEL_31:
        unint64_t v9 = i - 3;
        if (__OFADD__(v11, 1)) {
          goto LABEL_46;
        }
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v20 = sub_2445EF608();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v20 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v9 == v20) {
          return v6;
        }
      }
      uint64_t v21 = MEMORY[0x245693850](i - 4);
      swift_unknownObjectRelease();
      if (v21 == a2) {
        goto LABEL_31;
      }
LABEL_11:
      if (v11 == v6)
      {
LABEL_30:
        if (__OFADD__(v6++, 1)) {
          goto LABEL_47;
        }
        goto LABEL_31;
      }
      unint64_t v9 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        uint64_t v13 = MEMORY[0x245693850](v6, *a1);
        unint64_t v9 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_16:
          if ((v11 & 0x8000000000000000) != 0) {
            goto LABEL_50;
          }
          if (v11 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          uint64_t v14 = *(void *)(v9 + 8 * i);
          swift_retain();
          goto LABEL_19;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0) {
          goto LABEL_48;
        }
        if (v6 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_49;
        }
        uint64_t v13 = *(void *)(v9 + 8 * v6 + 32);
        swift_retain();
        if ((v9 & 0xC000000000000001) == 0) {
          goto LABEL_16;
        }
      }
      uint64_t v14 = MEMORY[0x245693850](i - 4, v9);
      unint64_t v9 = *a1;
LABEL_19:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v9;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v9 & 0x8000000000000000) != 0
        || (v9 & 0x4000000000000000) != 0)
      {
        sub_2445E2148(v9);
        unint64_t v9 = v16;
        *a1 = v16;
      }
      *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v14;
      swift_release();
      sub_2445EF288();
      unint64_t v9 = *a1;
      int v17 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v9;
      if (!v17 || (v9 & 0x8000000000000000) != 0 || (v9 & 0x4000000000000000) != 0)
      {
        sub_2445E2148(v9);
        unint64_t v9 = v18;
        *a1 = v18;
      }
      if ((v11 & 0x8000000000000000) != 0) {
        goto LABEL_52;
      }
      if (v11 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_53;
      }
      *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v13;
      swift_release();
      sub_2445EF288();
      goto LABEL_30;
    }
    return v6;
  }
  unint64_t v22 = *a1;
  if (!(v22 >> 62)) {
    return *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_2445EF608();
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_2445E28F0(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    uint64_t v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x245693850](v5, a1);
        swift_unknownObjectRelease();
        if (v6 == a2) {
          return v5;
        }
      }
      else if (*(void *)(a1 + 8 * v5 + 32) == a2)
      {
        return v5;
      }
      if (__OFADD__(v5, 1)) {
        break;
      }
      if (++v5 == v4) {
        return 0;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_2445EF608();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_2445E29E0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v3 = a2;
    uint64_t v5 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_2445EF608();
  swift_bridgeObjectRelease();
  if (v23 < v3) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v8 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v7 = v5 - v3;
  if (__OFSUB__(0, v8))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_2445EF608();
    swift_bridgeObjectRelease();
    uint64_t v10 = v9 + v7;
    if (!__OFADD__(v9, v7)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_2445EF608();
    swift_bridgeObjectRelease();
    unint64_t v11 = *v4;
    goto LABEL_15;
  }
  if (*v4 >> 62) {
    goto LABEL_36;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 - v8;
  if (__OFADD__(v9, v7)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v11;
  uint64_t v9 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v11 & 0x8000000000000000) == 0
    && (v11 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
    if (v10 <= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v9 = 1;
  }
  if (v11 >> 62) {
    goto LABEL_39;
  }
  uint64_t v14 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v10) {
    uint64_t v14 = v10;
  }
  swift_bridgeObjectRetain();
  *uint64_t v4 = MEMORY[0x245693860](v9, v14, 1, v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = *v4 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v15 = v13 + 32;
  unint64_t v16 = (char *)(v13 + 32 + 8 * v5);
  __swift_instantiateConcreteTypeFromMangledName(v6);
  swift_arrayDestroy();
  if (v7)
  {
    if (*v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_2445EF608();
      swift_bridgeObjectRelease();
      uint64_t v18 = v24 - v3;
      if (!__OFSUB__(v24, v3))
      {
LABEL_21:
        if (v18 < 0)
        {
LABEL_46:
          uint64_t result = sub_2445EF648();
          __break(1u);
          return result;
        }
        int v19 = (char *)(v15 + 8 * v3);
        if (v5 != v3 || v16 >= &v19[8 * v18]) {
          memmove(v16, v19, 8 * v18);
        }
        if (!(*v4 >> 62))
        {
          uint64_t v20 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v21 = v20 + v7;
          if (!__OFADD__(v20, v7))
          {
LABEL_27:
            *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v21;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_2445EF608();
        swift_bridgeObjectRelease();
        uint64_t v21 = v25 + v7;
        if (!__OFADD__(v25, v7)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v18 = v17 - v3;
      if (!__OFSUB__(v17, v3)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:

  return sub_2445EF288();
}

uint64_t sub_2445E2CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for ManagedApp() - 8;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v23 - v12;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v26 = MEMORY[0x263F8EE78];
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    v23[1] = v3;
    uint64_t v16 = *(void *)(v11 + 72);
    unint64_t v24 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v17 = a1 + v24;
    uint64_t v18 = MEMORY[0x263F8EE78];
    uint64_t v25 = v10;
    do
    {
      sub_244586144(v17, (uint64_t)v13);
      BOOL v19 = *((void *)v13 + 2) == a2 && *((void *)v13 + 3) == a3;
      if (v19 || (sub_2445EF848() & 1) != 0)
      {
        sub_2445861A8((uint64_t)v13);
      }
      else
      {
        sub_2445E2EE8((uint64_t)v13, (uint64_t)v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_2445DE738(0, *(void *)(v18 + 16) + 1, 1);
        }
        uint64_t v18 = v26;
        unint64_t v21 = *(void *)(v26 + 16);
        unint64_t v20 = *(void *)(v26 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_2445DE738(v20 > 1, v21 + 1, 1);
          uint64_t v18 = v26;
        }
        *(void *)(v18 + 16) = v21 + 1;
        uint64_t v22 = v18 + v24 + v21 * v16;
        uint64_t v10 = v25;
        sub_2445E2EE8((uint64_t)v25, v22);
      }
      v17 += v16;
      --v15;
    }
    while (v15);
    return v26;
  }
  return result;
}

uint64_t sub_2445E2EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ManagedApp();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2445E2F4C()
{
  unint64_t result = qword_268E8DD90;
  if (!qword_268E8DD90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B0CE1C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DD90);
  }
  return result;
}

uint64_t sub_2445E2FB8(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_2445E2FE4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2445E301C(void *a1)
{
  return sub_2445D6910(a1, v1);
}

unint64_t sub_2445E3038()
{
  unint64_t result = qword_26B0CE770;
  if (!qword_26B0CE770)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B0CEBA0);
    sub_2445E30AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE770);
  }
  return result;
}

unint64_t sub_2445E30AC()
{
  unint64_t result = qword_26B0CE738;
  if (!qword_26B0CE738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE738);
  }
  return result;
}

uint64_t sub_2445E3100(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_2445E3110()
{
  return objectdestroy_40Tm((void (*)(void, void))sub_2445E380C);
}

uint64_t sub_2445E3128(void *a1)
{
  return sub_2445D66D0(a1, v1, &qword_26B0CE1B0, &qword_26B0CE1A8, (void (*)(uint64_t, uint64_t))sub_2445AEA04);
}

unint64_t *sub_2445E3168(unint64_t *a1)
{
  return a1;
}

uint64_t sub_2445E3194(unsigned __int8 *a1)
{
  return sub_2445D8C58(a1);
}

uint64_t sub_2445E319C()
{
  return objectdestroy_40Tm((void (*)(void, void))sub_24459A6F8);
}

uint64_t objectdestroy_40Tm(void (*a1)(void, void))
{
  int v2 = *(unsigned __int8 *)(v1 + 24);
  if (v2 != 255) {
    a1(*(void *)(v1 + 16), v2 & 1);
  }

  return swift_deallocObject();
}

uint64_t sub_2445E3204(void *a1)
{
  return sub_2445D66D0(a1, v1, &qword_268E8DDA0, &qword_268E8DDA8, (void (*)(uint64_t, uint64_t))sub_2445AE9AC);
}

uint64_t sub_2445E3244(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_2445E3250(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_2445A2390(result);
  }
  return result;
}

uint64_t destroy for XPCClient.Storage(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v2 = *(unsigned __int8 *)(a1 + 48);
  if (v2 != 255) {
    sub_24459A6F8(*(void *)(a1 + 40), v2 & 1);
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 72))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for XPCClient.Storage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = (uint64_t *)(a2 + 40);
  int v6 = *(unsigned __int8 *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 == 255)
  {
    *(void *)(a1 + 40) = *v5;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)v5 + 8);
  }
  else
  {
    uint64_t v7 = *v5;
    sub_2445E3244(*v5, v6 & 1);
    *(void *)(a1 + 40) = v7;
    *(unsigned char *)(a1 + 48) = v6 & 1;
  }
  uint64_t v8 = *(void *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    uint64_t v10 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v8;
    *(void *)(a1 + 80) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  }
  return a1;
}

uint64_t assignWithCopy for XPCClient.Storage(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t *)(a1 + 40);
  int v6 = a2 + 5;
  int v7 = *((unsigned __int8 *)a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) == 255)
  {
    if (v7 == 255)
    {
      uint64_t v9 = *v6;
      *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
      *uint64_t v5 = v9;
    }
    else
    {
      char v14 = v7 & 1;
      uint64_t v15 = *v6;
      sub_2445E3244(v15, v7 & 1);
      *(void *)(a1 + 40) = v15;
      *(unsigned char *)(a1 + 48) = v14;
    }
  }
  else if (v7 == 255)
  {
    sub_244589A98(a1 + 40, &qword_268E8D4F8);
    char v8 = *((unsigned char *)a2 + 48);
    *uint64_t v5 = *v6;
    *(unsigned char *)(a1 + 48) = v8;
  }
  else
  {
    char v10 = v7 & 1;
    uint64_t v11 = *v6;
    sub_2445E3244(v11, v7 & 1);
    uint64_t v12 = *(void *)(a1 + 40);
    char v13 = *(unsigned char *)(a1 + 48);
    *(void *)(a1 + 40) = v11;
    *(unsigned char *)(a1 + 48) = v10;
    sub_24459A6F8(v12, v13);
  }
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a2[9];
  if (!*(void *)(a1 + 72))
  {
    if (v16)
    {
      uint64_t v18 = a2[10];
      *(void *)(a1 + 72) = v16;
      *(void *)(a1 + 80) = v18;
      swift_retain();
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    return a1;
  }
  if (!v16)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v17 = a2[10];
  *(void *)(a1 + 72) = v16;
  *(void *)(a1 + 80) = v17;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for XPCClient.Storage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  long long v4 = (void *)(a2 + 40);
  int v5 = *(unsigned __int8 *)(a1 + 48);
  if (v5 == 255) {
    goto LABEL_4;
  }
  int v6 = *(unsigned __int8 *)(a2 + 48);
  if (v6 == 255)
  {
    sub_244589A98(a1 + 40, &qword_268E8D4F8);
LABEL_4:
    *(void *)(a1 + 40) = *v4;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    goto LABEL_6;
  }
  uint64_t v7 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *v4;
  *(unsigned char *)(a1 + 48) = v6 & 1;
  sub_24459A6F8(v7, v5 & 1);
LABEL_6:
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  if (!*(void *)(a1 + 72))
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = v8;
      *(void *)(a1 + 80) = v10;
      return a1;
    }
LABEL_12:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    return a1;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_12;
  }
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v9;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCClient.Storage(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCClient.Storage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCClient.Storage()
{
  return &type metadata for XPCClient.Storage;
}

void sub_2445E379C(uint64_t a1)
{
}

uint64_t sub_2445E37D4(uint64_t a1)
{
  return sub_2445E1FAC(a1);
}

uint64_t sub_2445E37F4()
{
  return sub_2445E1EA4();
}

uint64_t sub_2445E3810@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_2445E191C(a1, a2);
}

__n128 AppProgress.init(state:identifier:)@<Q0>(void *a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v3 = a2[1].n128_u64[0];
  unsigned __int8 v4 = a2[1].n128_u8[8];
  *(void *)a3 = *a1;
  __n128 result = *a2;
  *(__n128 *)(a3 + 8) = *a2;
  *(void *)(a3 + 24) = v3;
  *(unsigned char *)(a3 + 32) = v4;
  return result;
}

uint64_t MessageRegistration.description.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  if (v1 == 253) {
    return 0x676E6967676F4CLL;
  }
  unint64_t v2 = 0xD000000000000013;
  if (v1 != 254 && v1 != 255)
  {
    sub_2445EF558();
    swift_bridgeObjectRelease();
    if (v1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_2445CFB28();
      sub_2445EF498();
    }
    sub_2445EF1A8();
    swift_bridgeObjectRelease();
    return 0xD000000000000013;
  }
  return v2;
}

uint64_t MessageRegistration.hash(into:)()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  if (v1 == 253 || v1 == 254 || v1 == 255) {
    return sub_2445EF958();
  }
  sub_2445EF958();
  if (v1)
  {
    sub_2445EF958();
    return sub_2445EF198();
  }
  else
  {
    sub_2445EF958();
    return sub_2445EF978();
  }
}

uint64_t sub_2445E3A20(uint64_t a1)
{
  unint64_t v2 = sub_2445E74FC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445E3A5C(uint64_t a1)
{
  unint64_t v2 = sub_2445E74FC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445E3A98(uint64_t a1)
{
  unint64_t v2 = sub_2445E74A8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445E3AD4(uint64_t a1)
{
  unint64_t v2 = sub_2445E74A8();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_2445E3B10()
{
  unint64_t result = 0x6C61746143707061;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6574617453707061;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x676E6967676F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2445E3BB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445E947C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445E3BDC(uint64_t a1)
{
  unint64_t v2 = sub_2445E73AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445E3C18(uint64_t a1)
{
  unint64_t v2 = sub_2445E73AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445E3C54(uint64_t a1)
{
  unint64_t v2 = sub_2445E7454();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445E3C90(uint64_t a1)
{
  unint64_t v2 = sub_2445E7454();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445E3CCC(uint64_t a1)
{
  unint64_t v2 = sub_2445E7400();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445E3D08(uint64_t a1)
{
  unint64_t v2 = sub_2445E7400();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MessageRegistration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE820);
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  MEMORY[0x270FA5388](v3);
  unsigned __int8 v32 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE800);
  uint64_t v29 = *(void *)(v5 - 8);
  uint64_t v30 = v5;
  MEMORY[0x270FA5388](v5);
  char v28 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE810);
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE808);
  uint64_t v27 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE818);
  uint64_t v36 = *(void *)(v12 - 8);
  uint64_t v37 = v12;
  MEMORY[0x270FA5388](v12);
  char v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v1;
  uint64_t v25 = v1[1];
  uint64_t v26 = v15;
  int v16 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445E73AC();
  sub_2445EFA18();
  switch(v16)
  {
    case 253:
      LOBYTE(v38) = 3;
      sub_2445E7400();
      BOOL v19 = v32;
      uint64_t v20 = v37;
      sub_2445EF748();
      uint64_t v22 = v34;
      uint64_t v21 = v35;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v14, v20);
    case 254:
      LOBYTE(v38) = 2;
      sub_2445E7454();
      BOOL v19 = v28;
      uint64_t v20 = v37;
      sub_2445EF748();
      uint64_t v22 = v29;
      uint64_t v21 = v30;
      goto LABEL_7;
    case 255:
      LOBYTE(v38) = 0;
      sub_2445E74FC();
      uint64_t v17 = v37;
      sub_2445EF748();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v9);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v14, v17);
    default:
      LOBYTE(v38) = 1;
      sub_2445E74A8();
      uint64_t v23 = v37;
      sub_2445EF748();
      uint64_t v38 = v26;
      uint64_t v39 = v25;
      char v40 = v16 & 1;
      sub_2445B3E68();
      uint64_t v24 = v33;
      sub_2445EF7D8();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v24);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v14, v23);
  }
}

uint64_t MessageRegistration.hashValue.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_2445EF948();
  if (v1 == 253 || v1 == 254 || v1 == 255)
  {
    sub_2445EF958();
  }
  else
  {
    sub_2445EF958();
    sub_2445EF958();
    if (v1) {
      sub_2445EF198();
    }
    else {
      sub_2445EF978();
    }
  }
  return sub_2445EF988();
}

uint64_t MessageRegistration.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  unint64_t v46 = a2;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE4C8);
  uint64_t v49 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v48 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE4A8);
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v43 = v4;
  MEMORY[0x270FA5388](v4);
  int64_t v47 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE4B8);
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE4B0);
  uint64_t v40 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE4C0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  int v50 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_2445E73AC();
  uint64_t v17 = v53;
  sub_2445EF9E8();
  if (v17) {
    goto LABEL_14;
  }
  uint64_t v38 = v9;
  uint64_t v39 = 0;
  uint64_t v18 = v8;
  BOOL v19 = v47;
  uint64_t v20 = v48;
  uint64_t v21 = v49;
  uint64_t v53 = v13;
  uint64_t v22 = sub_2445EF728();
  if (*(void *)(v22 + 16) != 1)
  {
    uint64_t v26 = sub_2445EF5A8();
    swift_allocError();
    char v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CEB0);
    *char v28 = &type metadata for MessageRegistration;
    sub_2445EF678();
    sub_2445EF598();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *MEMORY[0x263F8DCB0], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v15, v12);
LABEL_14:
    uint64_t v34 = (uint64_t)v50;
    return __swift_destroy_boxed_opaque_existential_0(v34);
  }
  switch(*(unsigned char *)(v22 + 32))
  {
    case 1:
      LOBYTE(v51) = 1;
      sub_2445E74A8();
      uint64_t v29 = v18;
      uint64_t v30 = v39;
      sub_2445EF668();
      if (v30) {
        goto LABEL_13;
      }
      sub_2445B3F58();
      uint64_t v31 = v45;
      sub_2445EF708();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v31);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v15, v12);
      long long v24 = v51;
      char v25 = v52;
      goto LABEL_17;
    case 2:
      LOBYTE(v51) = 2;
      sub_2445E7454();
      uint64_t v32 = v39;
      sub_2445EF668();
      if (v32) {
        goto LABEL_13;
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v19, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v15, v12);
      long long v24 = 0uLL;
      char v25 = -2;
      goto LABEL_17;
    case 3:
      LOBYTE(v51) = 3;
      sub_2445E7400();
      uint64_t v33 = v39;
      sub_2445EF668();
      if (v33) {
        goto LABEL_13;
      }
      (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v15, v12);
      long long v24 = 0uLL;
      char v25 = -3;
      goto LABEL_17;
    default:
      LOBYTE(v51) = 0;
      sub_2445E74FC();
      uint64_t v23 = v39;
      sub_2445EF668();
      if (v23)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v53 + 8))(v15, v12);
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v15, v12);
      long long v24 = 0uLL;
      char v25 = -1;
LABEL_17:
      uint64_t v34 = (uint64_t)v50;
      uint64_t v36 = v46;
      *unint64_t v46 = v24;
      *((unsigned char *)v36 + 16) = v25;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_0(v34);
}

uint64_t sub_2445E49B0@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return MessageRegistration.init(from:)(a1, a2);
}

uint64_t sub_2445E49C8(void *a1)
{
  return MessageRegistration.encode(to:)(a1);
}

uint64_t sub_2445E49E4()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  if (v1 == 253 || v1 == 254 || v1 == 255) {
    return sub_2445EF958();
  }
  sub_2445EF958();
  if (v1)
  {
    sub_2445EF958();
    return sub_2445EF198();
  }
  else
  {
    sub_2445EF958();
    return sub_2445EF978();
  }
}

uint64_t sub_2445E4A9C()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_2445EF948();
  if (v1 == 253 || v1 == 254 || v1 == 255)
  {
    sub_2445EF958();
  }
  else
  {
    sub_2445EF958();
    sub_2445EF958();
    if (v1) {
      sub_2445EF198();
    }
    else {
      sub_2445EF978();
    }
  }
  return sub_2445EF988();
}

unint64_t AppProgress.state.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *v1;
  *a1 = *v1;
  return sub_24458566C(v2);
}

uint64_t AppProgress.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  char v5 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(a1 + 24) = v5;
  return sub_2445E1828(v2, v3, v4, v5);
}

uint64_t sub_2445E4B88()
{
  if (*v0) {
    return 0x696669746E656469;
  }
  else {
    return 0x6574617473;
  }
}

uint64_t sub_2445E4BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445E9660(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445E4BEC(uint64_t a1)
{
  unint64_t v2 = sub_2445E7550();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445E4C28(uint64_t a1)
{
  unint64_t v2 = sub_2445E7550();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppProgress.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DDD0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v13 = v1[2];
  uint64_t v14 = v8;
  uint64_t v12 = v1[3];
  int v19 = *((unsigned __int8 *)v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445E7550();
  sub_2445EFA18();
  uint64_t v15 = v9;
  char v20 = 0;
  sub_2445A35FC();
  sub_2445EF7D8();
  if (!v2)
  {
    uint64_t v15 = v14;
    uint64_t v16 = v13;
    uint64_t v17 = v12;
    char v18 = v19;
    char v20 = 1;
    sub_2445E75A4();
    sub_2445EF7D8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AppProgress.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DDE8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445E7550();
  sub_2445EF9E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v17 = 0;
  sub_2445A43D8();
  sub_2445EF708();
  unint64_t v9 = v15[0];
  char v17 = 1;
  sub_24458566C(v15[0]);
  sub_2445E75F8();
  sub_2445EF708();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v10 = v15[0];
  uint64_t v11 = v15[1];
  uint64_t v12 = v15[2];
  char v13 = v16;
  sub_24458566C(v9);
  sub_2445E1828(v10, v11, v12, v13);
  sub_2445A2390(v9);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v12;
  *(unsigned char *)(a2 + 32) = v13;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  sub_2445A2390(v9);
  return sub_2445C2824(v10, v11, v12, v13);
}

unint64_t sub_2445E5070(char a1)
{
  unint64_t result = 0x72676F7250707061;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 6778732;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x6C61746143707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2445E5130@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AppProgress.init(from:)(a1, a2);
}

uint64_t sub_2445E5148(void *a1)
{
  return AppProgress.encode(to:)(a1);
}

uint64_t sub_2445E5160(uint64_t a1)
{
  unint64_t v2 = sub_2445E76A0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445E519C(uint64_t a1)
{
  unint64_t v2 = sub_2445E76A0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445E51D8()
{
  return 0x73736572676F7270;
}

uint64_t sub_2445E51F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73736572676F7270 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2445EF848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2445E5288(uint64_t a1)
{
  unint64_t v2 = sub_2445E78C4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445E52C4(uint64_t a1)
{
  unint64_t v2 = sub_2445E78C4();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_2445E5300()
{
  return sub_2445E5070(*v0);
}

uint64_t sub_2445E5308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445E9758(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445E5330(uint64_t a1)
{
  unint64_t v2 = sub_2445E764C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445E536C(uint64_t a1)
{
  unint64_t v2 = sub_2445E764C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445E53A8(uint64_t a1)
{
  unint64_t v2 = sub_2445E7870();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445E53E4(uint64_t a1)
{
  unint64_t v2 = sub_2445E7870();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445E5420()
{
  return 6778732;
}

uint64_t sub_2445E5430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 6778732 && a2 == 0xE300000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2445EF848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2445E54B8(uint64_t a1)
{
  unint64_t v2 = sub_2445E781C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445E54F4(uint64_t a1)
{
  unint64_t v2 = sub_2445E781C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445E5530()
{
  if (*v0) {
    return 12639;
  }
  else {
    return 12383;
  }
}

uint64_t sub_2445E554C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445E997C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445E5574(uint64_t a1)
{
  unint64_t v2 = sub_2445E7748();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445E55B0(uint64_t a1)
{
  unint64_t v2 = sub_2445E7748();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t XPCClientMessage.MessageType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE4D0);
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v40 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE4E0);
  uint64_t v44 = *(void *)(v5 - 8);
  uint64_t v45 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE4F0);
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v33 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE4F8);
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE4D8);
  uint64_t v37 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  char v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE4E8);
  uint64_t v48 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  unint64_t v15 = *(void *)v1;
  uint64_t v16 = *(void *)(v1 + 16);
  uint64_t v46 = *(void *)(v1 + 8);
  unint64_t v47 = v15;
  uint64_t v17 = *(void *)(v1 + 24);
  unsigned int v18 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v19 = a1[3];
  char v20 = a1;
  uint64_t v21 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v20, v19);
  sub_2445E764C();
  sub_2445EFA18();
  switch((v18 >> 4) & 7)
  {
    case 1u:
      LOBYTE(v51) = 2;
      sub_2445E781C();
      uint64_t v27 = v33;
      uint64_t v28 = v50;
      sub_2445EF748();
      uint64_t v29 = v39;
      sub_2445EF798();
      uint64_t v30 = v38;
      goto LABEL_8;
    case 2u:
      LOBYTE(v51) = 3;
      sub_2445E7748();
      uint64_t v27 = v41;
      uint64_t v28 = v50;
      sub_2445EF748();
      unint64_t v51 = v47;
      char v56 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DE00);
      sub_2445E779C(&qword_268E8DE08, &qword_268E8DE10);
      uint64_t v29 = v45;
      uint64_t v31 = v49;
      sub_2445EF778();
      if (!v31)
      {
        LOBYTE(v51) = v46;
        char v56 = 1;
        sub_2445C34A4();
        sub_2445EF778();
      }
      uint64_t v30 = v44;
      goto LABEL_8;
    case 3u:
      LOBYTE(v51) = 4;
      sub_2445E76A0();
      uint64_t v27 = v40;
      uint64_t v28 = v50;
      sub_2445EF748();
      unint64_t v51 = v47;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CEBA8);
      sub_2445E796C(&qword_26B0CE4A0, (void (*)(void))sub_2445E76F4);
      uint64_t v29 = v43;
      sub_2445EF7D8();
      uint64_t v30 = v42;
LABEL_8:
      (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v29);
      unint64_t result = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v21, v28);
      break;
    case 4u:
      LOBYTE(v51) = 1;
      sub_2445E7870();
      uint64_t v32 = v50;
      sub_2445EF748();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v36);
      unint64_t result = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v21, v32);
      break;
    default:
      LOBYTE(v51) = 0;
      unint64_t v22 = v47;
      sub_24458566C(v47);
      uint64_t v23 = v46;
      uint64_t v24 = v16;
      sub_2445E1828(v46, v16, v17, v18);
      sub_2445E78C4();
      sub_2445EF748();
      unint64_t v51 = v22;
      uint64_t v52 = v23;
      uint64_t v53 = v16;
      uint64_t v54 = v17;
      char v55 = v18;
      sub_2445E7918();
      uint64_t v25 = v34;
      sub_2445EF7D8();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v25);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v21, v50);
      unint64_t result = sub_2445E1838(v47, v23, v24, v17, v18);
      break;
  }
  return result;
}

uint64_t XPCClientMessage.MessageType.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v57 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE7C8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  uint64_t v56 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v58 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE7D8);
  uint64_t v61 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v60 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE7E8);
  uint64_t v54 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v59 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE7F0);
  uint64_t v51 = *(void *)(v8 - 8);
  uint64_t v52 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE7D0);
  uint64_t v50 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  char v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE7E0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v62 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_2445E764C();
  uint64_t v19 = v63;
  sub_2445EF9E8();
  if (v19) {
    goto LABEL_10;
  }
  char v63 = v13;
  uint64_t v48 = v11;
  uint64_t v21 = v59;
  char v20 = v60;
  uint64_t v22 = v61;
  uint64_t v23 = sub_2445EF728();
  if (*(void *)(v23 + 16) != 1)
  {
    uint64_t v30 = v14;
    uint64_t v31 = sub_2445EF5A8();
    swift_allocError();
    uint64_t v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CEB0);
    *uint64_t v33 = &type metadata for XPCClientMessage.MessageType;
    sub_2445EF678();
    sub_2445EF598();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, *MEMORY[0x263F8DCB0], v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v30);
LABEL_10:
    uint64_t v38 = (uint64_t)v62;
    return __swift_destroy_boxed_opaque_existential_0(v38);
  }
  switch(*(unsigned char *)(v23 + 32))
  {
    case 1:
      LOBYTE(v64) = 1;
      sub_2445E7870();
      sub_2445EF668();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      uint64_t v26 = 0;
      uint64_t v28 = 0;
      long long v27 = 0uLL;
      char v29 = 64;
      break;
    case 2:
      char v63 = (char *)v23;
      LOBYTE(v64) = 2;
      sub_2445E781C();
      uint64_t v34 = v17;
      sub_2445EF668();
      uint64_t v35 = v49;
      uint64_t v26 = sub_2445EF6C8();
      unint64_t v45 = v44;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v21, v35);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v34, v14);
      uint64_t v28 = 0;
      long long v27 = v45;
      char v29 = 16;
      break;
    case 3:
      char v63 = (char *)v23;
      LOBYTE(v64) = 3;
      sub_2445E7748();
      sub_2445EF668();
      uint64_t v40 = v20;
      uint64_t v41 = v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DE00);
      unsigned __int8 v69 = 0;
      sub_2445E779C(&qword_268E8DE30, &qword_268E8DE38);
      uint64_t v42 = v53;
      sub_2445EF6A8();
      uint64_t v46 = v42;
      uint64_t v26 = v64;
      char v68 = 1;
      sub_2445C3CE4();
      sub_2445EF6A8();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v40, v46);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v41);
      uint64_t v28 = 0;
      long long v27 = v69;
      char v29 = 32;
      break;
    case 4:
      LOBYTE(v64) = 4;
      sub_2445E76A0();
      uint64_t v36 = v58;
      uint64_t v37 = v17;
      sub_2445EF668();
      char v63 = (char *)v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CEBA8);
      sub_2445E796C(&qword_26B0CE778, (void (*)(void))sub_2445E79DC);
      uint64_t v43 = v55;
      sub_2445EF708();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v36, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v15 + 8))(v37, v63);
      uint64_t v28 = 0;
      uint64_t v26 = v64;
      long long v27 = 0uLL;
      char v29 = 48;
      break;
    default:
      LOBYTE(v64) = 0;
      sub_2445E78C4();
      uint64_t v24 = v63;
      sub_2445EF668();
      sub_2445E7A74();
      uint64_t v25 = v48;
      sub_2445EF708();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v24, v25);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      uint64_t v26 = v64;
      long long v27 = v65;
      uint64_t v28 = v66;
      char v29 = v67;
      break;
  }
  uint64_t v38 = (uint64_t)v62;
  unint64_t v47 = v57;
  *char v57 = v26;
  *(_OWORD *)(v47 + 1) = v27;
  v47[3] = v28;
  *((unsigned char *)v47 + 32) = v29;
  return __swift_destroy_boxed_opaque_existential_0(v38);
}

uint64_t sub_2445E676C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return XPCClientMessage.MessageType.init(from:)(a1, a2);
}

unint64_t sub_2445E6784(void *a1)
{
  return XPCClientMessage.MessageType.encode(to:)(a1);
}

unint64_t XPCClientMessage.type.getter@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  unsigned int v6 = *(unsigned __int8 *)(v1 + 32);
  *(unsigned char *)(a1 + 32) = v6;
  return sub_2445E1760(v2, v3, v4, v5, v6);
}

double static XPCClientMessage.connectionEstablished.getter@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 32) = 64;
  return result;
}

uint64_t static XPCClientMessage.appCatalog(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 48;
  return swift_bridgeObjectRetain();
}

uint64_t static XPCClientMessage.appProgress(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  char v6 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a2 + 32) = v6;
  sub_24458566C(v2);

  return sub_2445E1828(v3, v4, v5, v6);
}

uint64_t static XPCClientMessage.managedAppCatalog(apps:error:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *a2;
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = v3;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(unsigned char *)(a3 + 32) = 32;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2445E685C()
{
  return 1701869940;
}

uint64_t sub_2445E686C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2445EF848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2445E68F4(uint64_t a1)
{
  unint64_t v2 = sub_2445E7AC8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445E6930(uint64_t a1)
{
  unint64_t v2 = sub_2445E7AC8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t XPCClientMessage.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE500);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = *v1;
  uint64_t v8 = *((void *)v1 + 2);
  uint64_t v7 = *((void *)v1 + 3);
  int v11 = *((unsigned __int8 *)v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445E7AC8();
  sub_2445EFA18();
  long long v13 = v12;
  uint64_t v14 = v8;
  uint64_t v15 = v7;
  char v16 = v11;
  sub_2445E7B1C();
  sub_2445EF7D8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t XPCClientMessage.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE7F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445E7AC8();
  sub_2445EF9E8();
  if (!v2)
  {
    sub_2445E7B70();
    sub_2445EF708();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v9 = v13;
    long long v10 = v12[1];
    *(_OWORD *)a2 = v12[0];
    *(_OWORD *)(a2 + 16) = v10;
    *(unsigned char *)(a2 + 32) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2445E6C4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return XPCClientMessage.init(from:)(a1, a2);
}

uint64_t sub_2445E6C64(void *a1)
{
  return XPCClientMessage.encode(to:)(a1);
}

uint64_t XPCClientProtocol.handleMessage(_:)(uint64_t a1)
{
  unint64_t v1 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unsigned int v5 = *(unsigned __int8 *)(a1 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE518);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2445F0B90;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v2;
  *(void *)(v6 + 48) = v3;
  *(void *)(v6 + 56) = v4;
  *(unsigned char *)(v6 + 64) = v5;
  sub_2445E1760(v1, v2, v3, v4, v5);
  XPCClientProtocol.handleMessages(_:)((Swift::OpaquePointer)v6);

  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall XPCClientProtocol.handleMessages(_:)(Swift::OpaquePointer a1)
{
  *(Swift::OpaquePointer *)(swift_allocObject() + 16) = a1;
  sub_2445EEEA8();
  swift_allocObject();
  swift_bridgeObjectRetain_n();
  sub_2445EEE98();
  sub_24459928C();
  uint64_t v2 = sub_2445EEE88();
  unint64_t v4 = v3;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  unsigned int v5 = (void *)sub_2445EEF38();
  objc_msgSend(v1, sel_handleMessages_, v5);

  sub_244599358(v2, v4);
}

Swift::Void __swiftcall XPCClientProtocol.logMessage(_:)(Swift::String a1)
{
  Swift::String v1 = a1;
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  char v4 = 16;
  swift_bridgeObjectRetain();
  XPCClientProtocol.handleMessage(_:)((uint64_t)&v1);

  swift_bridgeObjectRelease();
}

uint64_t _s22ManagedAppDistribution19MessageRegistrationO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  unsigned int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v4)
  {
    case 253:
      if (v7 == 253)
      {
        sub_2445E1E34(*(void *)a1, v3, 0xFDu);
        uint64_t v8 = v5;
        uint64_t v9 = v6;
        unsigned __int8 v10 = -3;
        goto LABEL_10;
      }
      goto LABEL_12;
    case 254:
      if (v7 == 254)
      {
        sub_2445E1E34(*(void *)a1, v3, 0xFEu);
        uint64_t v8 = v5;
        uint64_t v9 = v6;
        unsigned __int8 v10 = -2;
        goto LABEL_10;
      }
      goto LABEL_12;
    case 255:
      if (v7 == 255)
      {
        sub_2445E1E34(*(void *)a1, v3, 0xFFu);
        uint64_t v8 = v5;
        uint64_t v9 = v6;
        unsigned __int8 v10 = -1;
LABEL_10:
        sub_2445E1E34(v8, v9, v10);
        return 1;
      }
      goto LABEL_12;
  }
  if (v7 > 0xFC)
  {
LABEL_12:
    sub_2445E1E1C(*(void *)a2, *(void *)(a2 + 8), v7);
    sub_2445E1E1C(v2, v3, v4);
    sub_2445E1E34(v2, v3, v4);
    sub_2445E1E34(v5, v6, v7);
    return 0;
  }
  if (v4)
  {
    if ((v7 & 1) == 0) {
      goto LABEL_12;
    }
    if (v2 == v5 && v3 == v6)
    {
      sub_2445E1E1C(*(void *)a1, v3, v7);
      sub_2445E1E1C(v2, v3, v4);
      sub_2445E1E34(v2, v3, v4);
      uint64_t v8 = v2;
      uint64_t v9 = v3;
      unsigned __int8 v10 = v7;
      goto LABEL_10;
    }
    char v12 = sub_2445EF848();
    sub_2445E1E1C(v5, v6, v7);
    sub_2445E1E1C(v2, v3, v4);
    sub_2445E1E34(v2, v3, v4);
    sub_2445E1E34(v5, v6, v7);
    if ((v12 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    sub_2445E1E1C(*(void *)a2, *(void *)(a2 + 8), v7);
    sub_2445E1E1C(v2, v3, v4);
    sub_2445E1E34(v2, v3, v4);
    sub_2445E1E34(v5, v6, v7);
    if ((v7 & 1) != 0 || v2 != v5) {
      return 0;
    }
  }
  return 1;
}

unint64_t sub_2445E73AC()
{
  unint64_t result = qword_26B0CEB58;
  if (!qword_26B0CEB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEB58);
  }
  return result;
}

unint64_t sub_2445E7400()
{
  unint64_t result = qword_26B0CEB70;
  if (!qword_26B0CEB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEB70);
  }
  return result;
}

unint64_t sub_2445E7454()
{
  unint64_t result = qword_268E8DDB8;
  if (!qword_268E8DDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DDB8);
  }
  return result;
}

unint64_t sub_2445E74A8()
{
  unint64_t result = qword_268E8DDC0;
  if (!qword_268E8DDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DDC0);
  }
  return result;
}

unint64_t sub_2445E74FC()
{
  unint64_t result = qword_268E8DDC8;
  if (!qword_268E8DDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DDC8);
  }
  return result;
}

unint64_t sub_2445E7550()
{
  unint64_t result = qword_268E8DDD8;
  if (!qword_268E8DDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DDD8);
  }
  return result;
}

unint64_t sub_2445E75A4()
{
  unint64_t result = qword_268E8DDE0;
  if (!qword_268E8DDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DDE0);
  }
  return result;
}

unint64_t sub_2445E75F8()
{
  unint64_t result = qword_268E8DDF0;
  if (!qword_268E8DDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DDF0);
  }
  return result;
}

unint64_t sub_2445E764C()
{
  unint64_t result = qword_26B0CEAD0;
  if (!qword_26B0CEAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEAD0);
  }
  return result;
}

unint64_t sub_2445E76A0()
{
  unint64_t result = qword_26B0CEA98;
  if (!qword_26B0CEA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEA98);
  }
  return result;
}

unint64_t sub_2445E76F4()
{
  unint64_t result = qword_26B0CE430;
  if (!qword_26B0CE430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE430);
  }
  return result;
}

unint64_t sub_2445E7748()
{
  unint64_t result = qword_268E8DDF8;
  if (!qword_268E8DDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DDF8);
  }
  return result;
}

uint64_t sub_2445E779C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E8DE00);
    sub_2445E7A30(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2445E781C()
{
  unint64_t result = qword_268E8DE18;
  if (!qword_268E8DE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DE18);
  }
  return result;
}

unint64_t sub_2445E7870()
{
  unint64_t result = qword_26B0CEAF8;
  if (!qword_26B0CEAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEAF8);
  }
  return result;
}

unint64_t sub_2445E78C4()
{
  unint64_t result = qword_268E8DE20;
  if (!qword_268E8DE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DE20);
  }
  return result;
}

unint64_t sub_2445E7918()
{
  unint64_t result = qword_268E8DE28;
  if (!qword_268E8DE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DE28);
  }
  return result;
}

uint64_t sub_2445E796C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B0CEBA8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2445E79DC()
{
  unint64_t result = qword_26B0CE760;
  if (!qword_26B0CE760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE760);
  }
  return result;
}

uint64_t sub_2445E7A30(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ManagedApp();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2445E7A74()
{
  unint64_t result = qword_268E8DE40;
  if (!qword_268E8DE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DE40);
  }
  return result;
}

unint64_t sub_2445E7AC8()
{
  unint64_t result = qword_26B0CEB10;
  if (!qword_26B0CEB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEB10);
  }
  return result;
}

unint64_t sub_2445E7B1C()
{
  unint64_t result = qword_26B0CE418;
  if (!qword_26B0CE418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE418);
  }
  return result;
}

unint64_t sub_2445E7B70()
{
  unint64_t result = qword_26B0CE730;
  if (!qword_26B0CE730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CE730);
  }
  return result;
}

uint64_t sub_2445E7BC4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2445E7BFC(void *a1)
{
  return sub_2445900C0(a1, *(void *)(v1 + 16));
}

unint64_t sub_2445E7C1C()
{
  unint64_t result = qword_26B0CEB88;
  if (!qword_26B0CEB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEB88);
  }
  return result;
}

uint64_t destroy for MessageRegistration(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 16);
  if (v1 <= 1) {
    return sub_244585A1C(*(void *)result, *(void *)(result + 8), v1 != 0);
  }
  return result;
}

uint64_t _s22ManagedAppDistribution19MessageRegistrationOwCP_0(uint64_t a1, uint64_t *a2)
{
  unsigned int v3 = *((unsigned __int8 *)a2 + 16);
  if (v3 > 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  }
  else
  {
    BOOL v4 = v3 != 0;
    uint64_t v5 = *a2;
    uint64_t v6 = a2[1];
    sub_24458565C(*a2, v6, v3 != 0);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = v4;
  }
  return a1;
}

uint64_t assignWithCopy for MessageRegistration(uint64_t a1, long long *a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
  unsigned int v5 = *((unsigned __int8 *)a2 + 16);
  if (v4 > 1)
  {
    if (v5 <= 1)
    {
      BOOL v12 = v5 != 0;
      uint64_t v14 = *(void *)a2;
      uint64_t v13 = *((void *)a2 + 1);
      sub_24458565C(*(void *)a2, v13, v5 != 0);
      *(void *)a1 = v14;
      *(void *)(a1 + 8) = v13;
      *(unsigned char *)(a1 + 16) = v12;
      return a1;
    }
LABEL_7:
    long long v15 = *a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_OWORD *)a1 = v15;
    return a1;
  }
  if (v5 > 1)
  {
    sub_244585A1C(*(void *)a1, *(void *)(a1 + 8), v4 & 1);
    goto LABEL_7;
  }
  BOOL v6 = v5 != 0;
  uint64_t v8 = *(void *)a2;
  uint64_t v7 = *((void *)a2 + 1);
  sub_24458565C(*(void *)a2, v7, v5 != 0);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  char v11 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v6;
  sub_244585A1C(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for MessageRegistration(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
  if (v4 > 1) {
    goto LABEL_5;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 16);
  char v6 = v4 & 1;
  if (v5 > 1)
  {
    sub_244585A1C(*(void *)a1, *(void *)(a1 + 8), v6);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    return a1;
  }
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v5 != 0;
  sub_244585A1C(v7, v8, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageRegistration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 > 1) {
    unsigned int v4 = (v3 ^ 0xFF) + 1;
  }
  else {
    unsigned int v4 = 0;
  }
  if (v4 >= 4) {
    return v4 - 3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MessageRegistration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -3 - a2;
    }
  }
  return result;
}

uint64_t sub_2445E7EE0(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 > 1) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_2445E7EF4(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(unsigned char *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageRegistration()
{
  return &type metadata for MessageRegistration;
}

uint64_t destroy for AppProgress(uint64_t a1)
{
  sub_2445A2390(*(void *)a1);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 32);

  return sub_2445C2824(v2, v3, v4, v5);
}

uint64_t initializeWithCopy for AppProgress(uint64_t a1, unint64_t *a2)
{
  uint64_t v2 = a2;
  unint64_t v4 = *a2;
  sub_24458566C(*a2);
  *(void *)a1 = v4;
  uint64_t v5 = v2[1];
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  LOBYTE(v2) = *((unsigned char *)v2 + 32);
  sub_2445E1828(v5, v6, v7, (char)v2);
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = (_BYTE)v2;
  return a1;
}

uint64_t assignWithCopy for AppProgress(uint64_t a1, unint64_t *a2)
{
  uint64_t v2 = a2;
  unint64_t v4 = *a2;
  sub_24458566C(*a2);
  unint64_t v5 = *(void *)a1;
  *(void *)a1 = v4;
  sub_2445A2390(v5);
  uint64_t v6 = v2[1];
  uint64_t v7 = v2[2];
  uint64_t v8 = v2[3];
  LOBYTE(v2) = *((unsigned char *)v2 + 32);
  sub_2445E1828(v6, v7, v8, (char)v2);
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = (_BYTE)v2;
  sub_2445C2824(v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for AppProgress(uint64_t a1, uint64_t a2)
{
  sub_2445A2390(*(void *)a1);
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v4;
  sub_2445C2824(v5, v6, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppProgress(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AppProgress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = 0;
      *(unsigned char *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppProgress()
{
  return &type metadata for AppProgress;
}

ValueMetadata *type metadata accessor for XPCClientMessage()
{
  return &type metadata for XPCClientMessage;
}

unint64_t _s22ManagedAppDistribution16XPCClientMessageVwxx_0(uint64_t a1)
{
  return sub_2445E1838(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
}

uint64_t _s22ManagedAppDistribution16XPCClientMessageVwcp_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned int v7 = *(unsigned __int8 *)(a2 + 32);
  sub_2445E1760(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t _s22ManagedAppDistribution16XPCClientMessageVwca_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned int v7 = *(unsigned __int8 *)(a2 + 32);
  sub_2445E1760(*(void *)a2, v4, v5, v6, v7);
  unint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned int v12 = *(unsigned __int8 *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_2445E1838(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t _s22ManagedAppDistribution16XPCClientMessageVwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  unint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned int v9 = *(unsigned __int8 *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_2445E1838(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t _s22ManagedAppDistribution16XPCClientMessageVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3C && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 60);
  }
  unsigned int v3 = ((4 * *(unsigned __int8 *)(a1 + 32)) & 0x38 | (*(unsigned __int8 *)(a1 + 32) >> 4) & 7) ^ 0x3F;
  if (v3 >= 0x3B) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s22ManagedAppDistribution16XPCClientMessageVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3B)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 60;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3C) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3C) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(_OWORD *)unint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = 2 * ((((-a2 >> 3) & 7) - 8 * a2) & 0x3F);
    }
  }
  return result;
}

uint64_t sub_2445E838C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 32);
  if (((v1 >> 4) & 4) != 0) {
    return (*(_DWORD *)a1 + 4);
  }
  else {
    return (v1 >> 4) & 7;
  }
}

uint64_t sub_2445E83AC(uint64_t result)
{
  *(unsigned char *)(result + 32) &= 0x8Fu;
  return result;
}

uint64_t sub_2445E83BC(uint64_t result, unsigned int a2)
{
  if (a2 < 4)
  {
    *(unsigned char *)(result + 32) = *(unsigned char *)(result + 32) & 0x81 | (16 * a2);
  }
  else
  {
    *(void *)unint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 64;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCClientMessage.MessageType()
{
  return &type metadata for XPCClientMessage.MessageType;
}

ValueMetadata *type metadata accessor for XPCClientMessage.CodingKeys()
{
  return &type metadata for XPCClientMessage.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for XPCClientMessage.MessageType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445E84DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCClientMessage.MessageType.CodingKeys()
{
  return &type metadata for XPCClientMessage.MessageType.CodingKeys;
}

ValueMetadata *type metadata accessor for XPCClientMessage.MessageType.AppProgressCodingKeys()
{
  return &type metadata for XPCClientMessage.MessageType.AppProgressCodingKeys;
}

ValueMetadata *type metadata accessor for XPCClientMessage.MessageType.ConnectionEstablishedCodingKeys()
{
  return &type metadata for XPCClientMessage.MessageType.ConnectionEstablishedCodingKeys;
}

ValueMetadata *type metadata accessor for XPCClientMessage.MessageType.LogCodingKeys()
{
  return &type metadata for XPCClientMessage.MessageType.LogCodingKeys;
}

ValueMetadata *type metadata accessor for XPCClientMessage.MessageType.ManagedAppCatalogCodingKeys()
{
  return &type metadata for XPCClientMessage.MessageType.ManagedAppCatalogCodingKeys;
}

ValueMetadata *type metadata accessor for XPCClientMessage.MessageType.AppCatalogCodingKeys()
{
  return &type metadata for XPCClientMessage.MessageType.AppCatalogCodingKeys;
}

unsigned char *_s22ManagedAppDistribution16XPCClientMessageV11MessageTypeO27ManagedAppCatalogCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445E8634);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppProgress.CodingKeys()
{
  return &type metadata for AppProgress.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for MessageRegistration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445E8738);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageRegistration.CodingKeys()
{
  return &type metadata for MessageRegistration.CodingKeys;
}

ValueMetadata *type metadata accessor for MessageRegistration.AppCatalogCodingKeys()
{
  return &type metadata for MessageRegistration.AppCatalogCodingKeys;
}

unsigned char *_s22ManagedAppDistribution16XPCClientMessageV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2445E881CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageRegistration.AppStateChangeCodingKeys()
{
  return &type metadata for MessageRegistration.AppStateChangeCodingKeys;
}

ValueMetadata *type metadata accessor for MessageRegistration.GlobalAppProgressCodingKeys()
{
  return &type metadata for MessageRegistration.GlobalAppProgressCodingKeys;
}

ValueMetadata *type metadata accessor for MessageRegistration.LoggingCodingKeys()
{
  return &type metadata for MessageRegistration.LoggingCodingKeys;
}

unint64_t sub_2445E8878()
{
  unint64_t result = qword_268E8DE48;
  if (!qword_268E8DE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DE48);
  }
  return result;
}

unint64_t sub_2445E88D0()
{
  unint64_t result = qword_268E8DE50;
  if (!qword_268E8DE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DE50);
  }
  return result;
}

unint64_t sub_2445E8928()
{
  unint64_t result = qword_268E8DE58;
  if (!qword_268E8DE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DE58);
  }
  return result;
}

unint64_t sub_2445E8980()
{
  unint64_t result = qword_268E8DE60;
  if (!qword_268E8DE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DE60);
  }
  return result;
}

unint64_t sub_2445E89D8()
{
  unint64_t result = qword_268E8DE68;
  if (!qword_268E8DE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DE68);
  }
  return result;
}

unint64_t sub_2445E8A30()
{
  unint64_t result = qword_268E8DE70;
  if (!qword_268E8DE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DE70);
  }
  return result;
}

unint64_t sub_2445E8A88()
{
  unint64_t result = qword_268E8DE78;
  if (!qword_268E8DE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DE78);
  }
  return result;
}

unint64_t sub_2445E8AE0()
{
  unint64_t result = qword_268E8DE80;
  if (!qword_268E8DE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DE80);
  }
  return result;
}

unint64_t sub_2445E8B38()
{
  unint64_t result = qword_268E8DE88;
  if (!qword_268E8DE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DE88);
  }
  return result;
}

unint64_t sub_2445E8B90()
{
  unint64_t result = qword_26B0CEB20;
  if (!qword_26B0CEB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEB20);
  }
  return result;
}

unint64_t sub_2445E8BE8()
{
  unint64_t result = qword_26B0CEB18;
  if (!qword_26B0CEB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEB18);
  }
  return result;
}

unint64_t sub_2445E8C40()
{
  unint64_t result = qword_26B0CEAB8;
  if (!qword_26B0CEAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEAB8);
  }
  return result;
}

unint64_t sub_2445E8C98()
{
  unint64_t result = qword_26B0CEAB0;
  if (!qword_26B0CEAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEAB0);
  }
  return result;
}

unint64_t sub_2445E8CF0()
{
  unint64_t result = qword_26B0CEB08;
  if (!qword_26B0CEB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEB08);
  }
  return result;
}

unint64_t sub_2445E8D48()
{
  unint64_t result = qword_26B0CEB00;
  if (!qword_26B0CEB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEB00);
  }
  return result;
}

unint64_t sub_2445E8DA0()
{
  unint64_t result = qword_26B0CEAF0;
  if (!qword_26B0CEAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEAF0);
  }
  return result;
}

unint64_t sub_2445E8DF8()
{
  unint64_t result = qword_26B0CEAE8;
  if (!qword_26B0CEAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEAE8);
  }
  return result;
}

unint64_t sub_2445E8E50()
{
  unint64_t result = qword_26B0CEAC8;
  if (!qword_26B0CEAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEAC8);
  }
  return result;
}

unint64_t sub_2445E8EA8()
{
  unint64_t result = qword_26B0CEAC0;
  if (!qword_26B0CEAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEAC0);
  }
  return result;
}

unint64_t sub_2445E8F00()
{
  unint64_t result = qword_26B0CEAA8;
  if (!qword_26B0CEAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEAA8);
  }
  return result;
}

unint64_t sub_2445E8F58()
{
  unint64_t result = qword_26B0CEAA0;
  if (!qword_26B0CEAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEAA0);
  }
  return result;
}

unint64_t sub_2445E8FB0()
{
  unint64_t result = qword_26B0CEAE0;
  if (!qword_26B0CEAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEAE0);
  }
  return result;
}

unint64_t sub_2445E9008()
{
  unint64_t result = qword_26B0CEAD8;
  if (!qword_26B0CEAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEAD8);
  }
  return result;
}

unint64_t sub_2445E9060()
{
  unint64_t result = qword_268E8DE90;
  if (!qword_268E8DE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DE90);
  }
  return result;
}

unint64_t sub_2445E90B8()
{
  unint64_t result = qword_268E8DE98;
  if (!qword_268E8DE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DE98);
  }
  return result;
}

unint64_t sub_2445E9110()
{
  unint64_t result = qword_26B0CEB40;
  if (!qword_26B0CEB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEB40);
  }
  return result;
}

unint64_t sub_2445E9168()
{
  unint64_t result = qword_26B0CEB38;
  if (!qword_26B0CEB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEB38);
  }
  return result;
}

unint64_t sub_2445E91C0()
{
  unint64_t result = qword_26B0CEB50;
  if (!qword_26B0CEB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEB50);
  }
  return result;
}

unint64_t sub_2445E9218()
{
  unint64_t result = qword_26B0CEB48;
  if (!qword_26B0CEB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEB48);
  }
  return result;
}

unint64_t sub_2445E9270()
{
  unint64_t result = qword_26B0CEB30;
  if (!qword_26B0CEB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEB30);
  }
  return result;
}

unint64_t sub_2445E92C8()
{
  unint64_t result = qword_26B0CEB28;
  if (!qword_26B0CEB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEB28);
  }
  return result;
}

unint64_t sub_2445E9320()
{
  unint64_t result = qword_26B0CEB80;
  if (!qword_26B0CEB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEB80);
  }
  return result;
}

unint64_t sub_2445E9378()
{
  unint64_t result = qword_26B0CEB78;
  if (!qword_26B0CEB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEB78);
  }
  return result;
}

unint64_t sub_2445E93D0()
{
  unint64_t result = qword_26B0CEB68;
  if (!qword_26B0CEB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEB68);
  }
  return result;
}

unint64_t sub_2445E9428()
{
  unint64_t result = qword_26B0CEB60;
  if (!qword_26B0CEB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0CEB60);
  }
  return result;
}

uint64_t sub_2445E947C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C61746143707061 && a2 == 0xEA0000000000676FLL;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617453707061 && a2 == 0xEE0065676E616843 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002445F9790 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676E6967676F6CLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2445E9660(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574617473 && a2 == 0xE500000000000000;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2445E9758(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72676F7250707061 && a2 == 0xEB00000000737365;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002445F97B0 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6778732 && a2 == 0xE300000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002445F97D0 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C61746143707061 && a2 == 0xEA0000000000676FLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_2445E997C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t OAuthAuthorizeRequest.endpointURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2445EEF28();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t OAuthAuthorizeRequest.isUpdate.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for OAuthAuthorizeRequest() + 20));
}

uint64_t type metadata accessor for OAuthAuthorizeRequest()
{
  uint64_t result = qword_268E8DEC0;
  if (!qword_268E8DEC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t OAuthAuthorizeRequest.isMarketplace.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for OAuthAuthorizeRequest() + 24));
}

uint64_t OAuthAuthorizeRequest.init(endpointURL:isUpdate:isMarketplace:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_2445EEF28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for OAuthAuthorizeRequest();
  *(unsigned char *)(a4 + *(int *)(result + 20)) = a2;
  *(unsigned char *)(a4 + *(int *)(result + 24)) = a3;
  return result;
}

uint64_t OAuthAuthorizeRequest.request()()
{
  v1[3] = v0;
  type metadata accessor for OAuthAuthorizeRequest();
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2445E9C64, 0, 0);
}

uint64_t sub_2445E9C64()
{
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  sub_2445E9FF8(v0[3], v1);
  sub_2445EA858(&qword_268E8CB48, (void (*)(uint64_t))type metadata accessor for OAuthAuthorizeRequest);
  sub_2445EA858(&qword_268E8CB50, (void (*)(uint64_t))type metadata accessor for OAuthAuthorizeRequest);
  sub_2445E9FF8(v1, v2);
  v0[2] = v2;
  uint64_t v5 = (char *)&dword_268E8CB40 + dword_268E8CB40;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_2445E9DE4;
  return ((uint64_t (*)(void *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v5)(v0 + 2, sub_2445EA05C, 0);
}

uint64_t sub_2445E9DE4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_2445E9F78;
  }
  else
  {
    sub_2445EA138(*(void *)(v2 + 32));
    uint64_t v3 = sub_2445E9F00;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2445E9F00()
{
  sub_2445EA138(*(void *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2445E9F78()
{
  uint64_t v1 = v0[5];
  sub_2445EA138(v0[4]);
  sub_2445EA138(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2445E9FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OAuthAuthorizeRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2445EA05C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)sub_2445EEF38();
  void v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_2445D5428;
  v10[3] = &block_descriptor_15;
  unsigned int v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_oauthAuthorize_reply_, v8, v9);
  _Block_release(v9);
}

uint64_t sub_2445EA138(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OAuthAuthorizeRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2445EA194()
{
  uint64_t v1 = 0x6574616470557369;
  if (*v0 != 1) {
    uint64_t v1 = 0x74656B72614D7369;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746E696F70646E65;
  }
}

uint64_t sub_2445EA204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445EB010(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445EA22C(uint64_t a1)
{
  unint64_t v2 = sub_2445EA488();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445EA268(uint64_t a1)
{
  unint64_t v2 = sub_2445EA488();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OAuthAuthorizeRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DEA8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445EA488();
  sub_2445EFA18();
  v8[15] = 0;
  sub_2445EEF28();
  sub_2445EA858(&qword_268E8C9E0, MEMORY[0x263F06EA8]);
  sub_2445EF7D8();
  if (!v1)
  {
    type metadata accessor for OAuthAuthorizeRequest();
    v8[14] = 1;
    sub_2445EF7A8();
    v8[13] = 2;
    sub_2445EF7A8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2445EA488()
{
  unint64_t result = qword_268E8DEB0;
  if (!qword_268E8DEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DEB0);
  }
  return result;
}

uint64_t OAuthAuthorizeRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v4 = sub_2445EEF28();
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v23 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DEB8);
  uint64_t v20 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OAuthAuthorizeRequest();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445EA488();
  sub_2445EF9E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v11 = (uint64_t)v10;
  uint64_t v12 = v21;
  char v26 = 0;
  sub_2445EA858(&qword_268E8CA38, MEMORY[0x263F06EA8]);
  uint64_t v13 = v22;
  sub_2445EF708();
  uint64_t v14 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  long long v15 = v23;
  uint64_t v23 = (char *)v4;
  v14(v11, v15, v4);
  char v25 = 1;
  *(unsigned char *)(v11 + *(int *)(v8 + 20)) = sub_2445EF6D8() & 1;
  char v24 = 2;
  char v16 = sub_2445EF6D8();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v13);
  *(unsigned char *)(v11 + *(int *)(v8 + 24)) = v16 & 1;
  sub_2445E9FF8(v11, v19);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_2445EA138(v11);
}

uint64_t sub_2445EA858(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2445EA8A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return OAuthAuthorizeRequest.init(from:)(a1, a2);
}

uint64_t sub_2445EA8B8(void *a1)
{
  return OAuthAuthorizeRequest.encode(to:)(a1);
}

void *initializeBufferWithCopyOfBuffer for OAuthAuthorizeRequest(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2445EEF28();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  }
  return a1;
}

uint64_t initializeWithCopy for OAuthAuthorizeRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2445EEF28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t assignWithCopy for OAuthAuthorizeRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2445EEF28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for OAuthAuthorizeRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2445EEF28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for OAuthAuthorizeRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2445EEF28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for OAuthAuthorizeRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2445EABCC);
}

uint64_t sub_2445EABCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2445EEF28();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for OAuthAuthorizeRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2445EACB0);
}

uint64_t sub_2445EACB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2445EEF28();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_2445EAD6C()
{
  uint64_t result = sub_2445EEF28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OAuthAuthorizeRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445EAED0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OAuthAuthorizeRequest.CodingKeys()
{
  return &type metadata for OAuthAuthorizeRequest.CodingKeys;
}

unint64_t sub_2445EAF0C()
{
  unint64_t result = qword_268E8DED0;
  if (!qword_268E8DED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DED0);
  }
  return result;
}

unint64_t sub_2445EAF64()
{
  unint64_t result = qword_268E8DED8;
  if (!qword_268E8DED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DED8);
  }
  return result;
}

unint64_t sub_2445EAFBC()
{
  unint64_t result = qword_268E8DEE0;
  if (!qword_268E8DEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DEE0);
  }
  return result;
}

uint64_t sub_2445EB010(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E696F70646E65 && a2 == 0xEB000000004C5255;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574616470557369 && a2 == 0xE800000000000000 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74656B72614D7369 && a2 == 0xED00006563616C70)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t DDMAppOrUpdateManagedAppRequest.app.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2445EB780(v1, a1, type metadata accessor for ManagedAppDeclaration);
}

uint64_t DDMAppOrUpdateManagedAppRequest.app.setter(uint64_t a1)
{
  return sub_2445EB1E0(a1, v1);
}

uint64_t sub_2445EB1E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ManagedAppDeclaration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*DDMAppOrUpdateManagedAppRequest.app.modify())()
{
  return nullsub_1;
}

void __swiftcall DDMAppOrUpdateManagedAppRequest.init(app:)()
{
  sub_2445EC024(v0, v1, type metadata accessor for ManagedAppDeclaration);
}

uint64_t DDMAppOrUpdateManagedAppRequest.request()()
{
  v1[3] = v0;
  type metadata accessor for DDMAppOrUpdateManagedAppRequest();
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2445EB334, 0, 0);
}

uint64_t sub_2445EB334()
{
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  sub_2445EB780(v0[3], v1, (uint64_t (*)(void))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
  sub_2445EBFDC(&qword_268E8CB28, (void (*)(uint64_t))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
  sub_2445EBFDC(&qword_268E8CB18, (void (*)(uint64_t))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
  sub_2445EB780(v1, v2, (uint64_t (*)(void))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
  v0[2] = v2;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_268E8CB20 + dword_268E8CB20);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_2445EB4D4;
  return v5((uint64_t)(v0 + 2), (uint64_t)sub_2445EB7E8, 0);
}

uint64_t sub_2445EB4D4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_2445EB690;
  }
  else
  {
    sub_2445EC938(*(void *)(v2 + 32), (uint64_t (*)(void))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
    uint64_t v3 = sub_2445EB604;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2445EB604()
{
  sub_2445EC938(*(void *)(v0 + 40), (uint64_t (*)(void))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2445EB690()
{
  uint64_t v1 = v0[5];
  sub_2445EC938(v0[4], (uint64_t (*)(void))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
  sub_2445EC938(v1, (uint64_t (*)(void))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t type metadata accessor for DDMAppOrUpdateManagedAppRequest()
{
  uint64_t result = qword_268E8DF18;
  if (!qword_268E8DF18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2445EB780(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_2445EB7E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DDMAppOrUpdateManagedAppRequest.request()()
{
  uint64_t updated = type metadata accessor for DDMAppOrUpdateManagedAppRequest();
  uint64_t v2 = MEMORY[0x270FA5388](updated - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v7 - v5;
  if (qword_26B0CE740 != -1) {
    swift_once();
  }
  sub_2445EB780(v0, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
  sub_2445EBFDC(&qword_268E8CB28, (void (*)(uint64_t))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
  sub_2445EBFDC(&qword_268E8CB18, (void (*)(uint64_t))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
  sub_2445EB780((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
  uint64_t v8 = v4;
  sub_2445ACDDC((uint64_t *)&v8, (void (*)(uint64_t))sub_2445EB9B8, 0);
  sub_2445EC938((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
  sub_2445EC938((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
}

void sub_2445EB9B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_2445EB9C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v10 = (void *)sub_2445EEF38();
  _DWORD v12[4] = a4;
  v12[5] = a5;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 1107296256;
  _OWORD v12[2] = sub_2445D5428;
  uint64_t v12[3] = a6;
  uint64_t v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_addOrUpdateManagedApp_reply_, v10, v11);
  _Block_release(v11);
}

uint64_t sub_2445EBA9C()
{
  return 7368801;
}

uint64_t sub_2445EBAAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 7368801 && a2 == 0xE300000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2445EF848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2445EBB34(uint64_t a1)
{
  unint64_t v2 = sub_2445EBD20();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445EBB70(uint64_t a1)
{
  unint64_t v2 = sub_2445EBD20();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DDMAppOrUpdateManagedAppRequest.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DEF0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445EBD20();
  sub_2445EFA18();
  type metadata accessor for ManagedAppDeclaration(0);
  sub_2445EBFDC(&qword_268E8DF00, (void (*)(uint64_t))type metadata accessor for ManagedAppDeclaration);
  sub_2445EF7D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_2445EBD20()
{
  unint64_t result = qword_268E8DEF8;
  if (!qword_268E8DEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DEF8);
  }
  return result;
}

uint64_t DDMAppOrUpdateManagedAppRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v13 = a2;
  uint64_t v4 = type metadata accessor for ManagedAppDeclaration(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DF08);
  uint64_t v14 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for DDMAppOrUpdateManagedAppRequest();
  MEMORY[0x270FA5388](updated - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445EBD20();
  sub_2445EF9E8();
  if (!v2)
  {
    sub_2445EBFDC(&qword_268E8DF10, (void (*)(uint64_t))type metadata accessor for ManagedAppDeclaration);
    sub_2445EF708();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_2445EC024(v15, (uint64_t)v11, type metadata accessor for ManagedAppDeclaration);
    sub_2445EC024((uint64_t)v11, v13, (uint64_t (*)(void))type metadata accessor for DDMAppOrUpdateManagedAppRequest);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2445EBFDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2445EC024(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2445EC08C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DDMAppOrUpdateManagedAppRequest.init(from:)(a1, a2);
}

uint64_t sub_2445EC0A4(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DEF0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445EBD20();
  sub_2445EFA18();
  type metadata accessor for ManagedAppDeclaration(0);
  sub_2445EBFDC(&qword_268E8DF00, (void (*)(uint64_t))type metadata accessor for ManagedAppDeclaration);
  sub_2445EF7D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t initializeBufferWithCopyOfBuffer for DDMAppOrUpdateManagedAppRequest(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for ManagedAppDeclaration(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    uint64_t v10 = a2 + 7;
    unint64_t v11 = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 56) = *(_OWORD *)v10;
    }
    else
    {
      uint64_t v13 = *v10;
      sub_2445993EC(*v10, v11);
      *(void *)(a1 + 56) = v13;
      *(void *)(a1 + 64) = v11;
    }
    uint64_t v14 = v6[9];
    uint64_t v15 = (unsigned char *)(a1 + v14);
    uint64_t v16 = (uint64_t)a2 + v14;
    *uint64_t v15 = *((unsigned char *)a2 + v14);
    v15[1] = *((unsigned char *)a2 + v14 + 1);
    uint64_t v17 = *(int *)(type metadata accessor for ManagedAppDeclaration.InstallBehavior(0) + 24);
    uint64_t v18 = &v15[v17];
    uint64_t v19 = v16 + v17;
    type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_2445EEF28();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      uint64_t v21 = *(void *)v19;
      uint64_t v22 = *(void *)(v19 + 8);
      char v23 = *(unsigned char *)(v19 + 16);
      sub_24458565C(*(void *)v19, v22, v23);
      *(void *)uint64_t v18 = v21;
      *((void *)v18 + 1) = v22;
      unsigned char v18[16] = v23;
      v18[17] = *(unsigned char *)(v19 + 17);
    }
    swift_storeEnumTagMultiPayload();
    *(unsigned char *)(a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
    uint64_t v24 = v6[11];
    uint64_t v25 = a1 + v24;
    uint64_t v26 = (uint64_t)a2 + v24;
    *(void *)uint64_t v25 = *(void *)v26;
    *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
    *(void *)(a1 + v6[12]) = *(uint64_t *)((char *)a2 + v6[12]);
  }
  return a1;
}

uint64_t destroy for DDMAppOrUpdateManagedAppRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >> 60 != 15) {
    sub_244599358(*(void *)(a1 + 56), v2);
  }
  uint64_t v3 = a1 + *(int *)(type metadata accessor for ManagedAppDeclaration(0) + 36);
  uint64_t v4 = v3 + *(int *)(type metadata accessor for ManagedAppDeclaration.InstallBehavior(0) + 24);
  type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_2445EEF28();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    uint64_t v8 = *(void *)v4;
    uint64_t v9 = *(void *)(v4 + 8);
    char v10 = *(unsigned char *)(v4 + 16);
    return sub_244585A1C(v8, v9, v10);
  }
}

uint64_t initializeWithCopy for DDMAppOrUpdateManagedAppRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = (uint64_t *)(a2 + 56);
  unint64_t v8 = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v7;
  }
  else
  {
    uint64_t v9 = *v7;
    sub_2445993EC(*v7, v8);
    *(void *)(a1 + 56) = v9;
    *(void *)(a1 + 64) = v8;
  }
  char v10 = (int *)type metadata accessor for ManagedAppDeclaration(0);
  uint64_t v11 = v10[9];
  uint64_t v12 = (unsigned char *)(a1 + v11);
  uint64_t v13 = a2 + v11;
  *uint64_t v12 = *(unsigned char *)(a2 + v11);
  v12[1] = *(unsigned char *)(a2 + v11 + 1);
  uint64_t v14 = *(int *)(type metadata accessor for ManagedAppDeclaration.InstallBehavior(0) + 24);
  uint64_t v15 = &v12[v14];
  uint64_t v16 = v13 + v14;
  type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_2445EEF28();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    uint64_t v18 = *(void *)v16;
    uint64_t v19 = *(void *)(v16 + 8);
    char v20 = *(unsigned char *)(v16 + 16);
    sub_24458565C(*(void *)v16, v19, v20);
    *(void *)uint64_t v15 = v18;
    *((void *)v15 + 1) = v19;
    unsigned char v15[16] = v20;
    v15[17] = *(unsigned char *)(v16 + 17);
  }
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(a1 + v10[10]) = *(unsigned char *)(a2 + v10[10]);
  uint64_t v21 = v10[11];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  *(void *)(a1 + v10[12]) = *(void *)(a2 + v10[12]);
  return a1;
}

uint64_t assignWithCopy for DDMAppOrUpdateManagedAppRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t *)(a2 + 56);
  unint64_t v5 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64) >> 60 == 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *v4;
      sub_2445993EC(*v4, *(void *)(a2 + 64));
      *(void *)(a1 + 56) = v6;
      *(void *)(a1 + 64) = v5;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
    sub_2445D03D8(a1 + 56);
LABEL_6:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v7 = *v4;
  sub_2445993EC(*v4, *(void *)(a2 + 64));
  uint64_t v8 = *(void *)(a1 + 56);
  unint64_t v9 = *(void *)(a1 + 64);
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v5;
  sub_244599358(v8, v9);
LABEL_8:
  char v10 = (int *)type metadata accessor for ManagedAppDeclaration(0);
  uint64_t v11 = v10[9];
  uint64_t v12 = (unsigned char *)(a1 + v11);
  uint64_t v13 = a2 + v11;
  *uint64_t v12 = *(unsigned char *)(a2 + v11);
  v12[1] = *(unsigned char *)(a2 + v11 + 1);
  uint64_t v14 = type metadata accessor for ManagedAppDeclaration.InstallBehavior(0);
  if (a1 != a2)
  {
    uint64_t v15 = *(int *)(v14 + 24);
    uint64_t v16 = (uint64_t)&v12[v15];
    uint64_t v17 = v13 + v15;
    sub_2445EC938(v16, type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum);
    type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_2445EEF28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      uint64_t v19 = *(void *)v17;
      uint64_t v20 = *(void *)(v17 + 8);
      char v21 = *(unsigned char *)(v17 + 16);
      sub_24458565C(*(void *)v17, v20, v21);
      *(void *)uint64_t v16 = v19;
      *(void *)(v16 + 8) = v20;
      *(unsigned char *)(v16 + 16) = v21;
      *(unsigned char *)(v16 + 17) = *(unsigned char *)(v17 + 17);
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(a1 + v10[10]) = *(unsigned char *)(a2 + v10[10]);
  uint64_t v22 = v10[11];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *v24;
  *(unsigned char *)(v23 + 8) = *((unsigned char *)v24 + 8);
  *(void *)uint64_t v23 = v25;
  *(void *)(a1 + v10[12]) = *(void *)(a2 + v10[12]);
  return a1;
}

uint64_t sub_2445EC938(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for DDMAppOrUpdateManagedAppRequest(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  unint64_t v5 = (int *)type metadata accessor for ManagedAppDeclaration(0);
  uint64_t v6 = v5[9];
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  *uint64_t v7 = *(unsigned char *)(a2 + v6);
  v7[1] = *(unsigned char *)(a2 + v6 + 1);
  uint64_t v9 = *(int *)(type metadata accessor for ManagedAppDeclaration.InstallBehavior(0) + 24);
  char v10 = &v7[v9];
  uint64_t v11 = (const void *)(v8 + v9);
  uint64_t v12 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_2445EEF28();
    (*(void (**)(unsigned char *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  *(unsigned char *)(a1 + v5[10]) = *(unsigned char *)(a2 + v5[10]);
  uint64_t v14 = v5[11];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(void *)(a1 + v5[12]) = *(void *)(a2 + v5[12]);
  return a1;
}

uint64_t assignWithTake for DDMAppOrUpdateManagedAppRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (_OWORD *)(a2 + 56);
  unint64_t v8 = *(void *)(a1 + 64);
  if (v8 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v9 = *(void *)(a2 + 64);
  if (v9 >> 60 == 15)
  {
    sub_2445D03D8(a1 + 56);
LABEL_4:
    *(_OWORD *)(a1 + 56) = *v7;
    goto LABEL_6;
  }
  uint64_t v10 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)v7;
  *(void *)(a1 + 64) = v9;
  sub_244599358(v10, v8);
LABEL_6:
  uint64_t v11 = (int *)type metadata accessor for ManagedAppDeclaration(0);
  uint64_t v12 = v11[9];
  uint64_t v13 = (unsigned char *)(a1 + v12);
  uint64_t v14 = a2 + v12;
  *uint64_t v13 = *(unsigned char *)(a2 + v12);
  v13[1] = *(unsigned char *)(a2 + v12 + 1);
  uint64_t v15 = type metadata accessor for ManagedAppDeclaration.InstallBehavior(0);
  if (a1 != a2)
  {
    uint64_t v16 = *(int *)(v15 + 24);
    uint64_t v17 = &v13[v16];
    uint64_t v18 = (const void *)(v14 + v16);
    sub_2445EC938((uint64_t)v17, type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum);
    uint64_t v19 = type metadata accessor for ManagedAppDeclaration.InstallBehavior.PurchaseMethodEnum(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_2445EEF28();
      (*(void (**)(unsigned char *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
  }
  *(unsigned char *)(a1 + v11[10]) = *(unsigned char *)(a2 + v11[10]);
  uint64_t v21 = v11[11];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  *(void *)(a1 + v11[12]) = *(void *)(a2 + v11[12]);
  return a1;
}

uint64_t getEnumTagSinglePayload for DDMAppOrUpdateManagedAppRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2445ECCE4);
}

uint64_t sub_2445ECCE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ManagedAppDeclaration(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DDMAppOrUpdateManagedAppRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2445ECD64);
}

uint64_t sub_2445ECD64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ManagedAppDeclaration(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_2445ECDD4()
{
  uint64_t result = type metadata accessor for ManagedAppDeclaration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DDMAppOrUpdateManagedAppRequest.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2445ECEFCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DDMAppOrUpdateManagedAppRequest.CodingKeys()
{
  return &type metadata for DDMAppOrUpdateManagedAppRequest.CodingKeys;
}

unint64_t sub_2445ECF38()
{
  unint64_t result = qword_268E8DF28;
  if (!qword_268E8DF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DF28);
  }
  return result;
}

unint64_t sub_2445ECF90()
{
  unint64_t result = qword_268E8DF30;
  if (!qword_268E8DF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DF30);
  }
  return result;
}

unint64_t sub_2445ECFE8()
{
  unint64_t result = qword_268E8DF38;
  if (!qword_268E8DF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DF38);
  }
  return result;
}

void *AppStateUpdateIdentifier.appStateIdentifiers.getter()
{
  uint64_t v2 = *(void *)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  int v4 = *(char *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0CE190);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2445F80A0;
  if (v4 < 0)
  {
    uint64_t v7 = 0;
    uint64_t v1 = 0;
    char v6 = -1;
  }
  else
  {
    sub_2445E1828(v2, v1, v3, v4);
    swift_bridgeObjectRetain();
    char v6 = 1;
    uint64_t v7 = v2;
  }
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v1;
  *(unsigned char *)(inited + 48) = v6;
  swift_bridgeObjectRelease();
  if (v4) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = v3;
  }
  if (v4 < 0) {
    uint64_t v9 = v2;
  }
  else {
    uint64_t v9 = v8;
  }
  unsigned int v10 = v4 & 0xFFFFFF81;
  if ((v4 & 0xFFFFFF81) == 1) {
    char v11 = -1;
  }
  else {
    char v11 = 0;
  }
  *(void *)(inited + 56) = v9;
  *(void *)(inited + 64) = 0;
  *(unsigned char *)(inited + 72) = v11;
  if (v4 < 0)
  {
    uint64_t v12 = (void *)MEMORY[0x263F8EE78];
    if (v10 == 1) {
      goto LABEL_24;
    }
    goto LABEL_19;
  }
  sub_24458565C(v7, v1, 1);
  uint64_t v12 = sub_24458D490(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v14 = v12[2];
  unint64_t v13 = v12[3];
  if (v14 >= v13 >> 1) {
    uint64_t v12 = sub_24458D490((void *)(v13 > 1), v14 + 1, 1, v12);
  }
  _OWORD v12[2] = v14 + 1;
  uint64_t v15 = &v12[3 * v14];
  v15[4] = v7;
  v15[5] = v1;
  *((unsigned char *)v15 + 48) = 1;
  if (v10 != 1)
  {
LABEL_19:
    sub_24458565C(v9, 0, 0);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_24458D490(0, v12[2] + 1, 1, v12);
    }
    unint64_t v17 = v12[2];
    unint64_t v16 = v12[3];
    if (v17 >= v16 >> 1) {
      uint64_t v12 = sub_24458D490((void *)(v16 > 1), v17 + 1, 1, v12);
    }
    _OWORD v12[2] = v17 + 1;
    uint64_t v18 = &v12[3 * v17];
    void v18[4] = v9;
    v18[5] = 0;
    *((unsigned char *)v18 + 48) = 0;
  }
LABEL_24:
  swift_release();
  return v12;
}

uint64_t AppStateUpdateIdentifier.description.getter()
{
  uint64_t v1 = *(void *)v0;
  int v2 = *(char *)(v0 + 24);
  if (v2 < 0) {
    return sub_2445EF818();
  }
  if (v2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v4 = *(void *)v0;
    sub_2445E1828(v1, *(void *)(v0 + 8), *(void *)(v0 + 16), v2);
    sub_2445EF1A8();
    sub_2445EF818();
    sub_2445EF1A8();
    swift_bridgeObjectRelease();
    return v4;
  }
  return v1;
}

uint64_t AppStateUpdateIdentifier.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  if (a3) {
    uint64_t v4 = a2;
  }
  else {
    uint64_t v4 = 0;
  }
  *(void *)a4 = result;
  *(void *)(a4 + 8) = v4;
  if (a3) {
    char v5 = 1;
  }
  else {
    char v5 = 0x80;
  }
  *(void *)(a4 + 16) = 0;
  *(unsigned char *)(a4 + 24) = v5;
  return result;
}

uint64_t AppStateUpdateIdentifier.hash(into:)()
{
  if (*(char *)(v0 + 24) < 0)
  {
    sub_2445EF958();
    return sub_2445EF978();
  }
  char v1 = *(unsigned char *)(v0 + 24);
  sub_2445EF958();
  sub_2445EF198();
  if ((v1 & 1) == 0)
  {
    sub_2445EF968();
    return sub_2445EF978();
  }
  return sub_2445EF968();
}

uint64_t sub_2445ED3D0()
{
  if (*v0) {
    return 0x6C7074656B72616DLL;
  }
  else {
    return 0xD000000000000016;
  }
}

uint64_t sub_2445ED41C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445EEBE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445ED444(uint64_t a1)
{
  unint64_t v2 = sub_2445EE35C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445ED480(uint64_t a1)
{
  unint64_t v2 = sub_2445EE35C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445ED4BC()
{
  if (*v0) {
    return 0x44496D657469;
  }
  else {
    return 0x4449656C646E7562;
  }
}

uint64_t sub_2445ED4F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2445EECFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445ED51C(uint64_t a1)
{
  unint64_t v2 = sub_2445EE404();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445ED558(uint64_t a1)
{
  unint64_t v2 = sub_2445EE404();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2445ED594()
{
  return 0x657449656C707061;
}

uint64_t sub_2445ED5B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x657449656C707061 && a2 == 0xEB0000000044496DLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2445EF848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2445ED664(uint64_t a1)
{
  unint64_t v2 = sub_2445EE3B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2445ED6A0(uint64_t a1)
{
  unint64_t v2 = sub_2445EE3B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppStateUpdateIdentifier.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DF40);
  uint64_t v20 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  MEMORY[0x270FA5388](v3);
  char v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DF48);
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DF50);
  uint64_t v9 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  char v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *v1;
  uint64_t v22 = v1[1];
  v19[1] = v1[2];
  int v12 = *((char *)v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445EE35C();
  sub_2445EFA18();
  if (v12 < 0)
  {
    char v31 = 1;
    sub_2445EE3B0();
    uint64_t v17 = v27;
    sub_2445EF748();
    uint64_t v18 = v21;
    sub_2445EF7E8();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v17);
  }
  else
  {
    char v30 = 0;
    sub_2445EE404();
    uint64_t v13 = v27;
    sub_2445EF748();
    char v29 = 0;
    uint64_t v14 = v24;
    uint64_t v15 = v26;
    sub_2445EF798();
    if (!v15)
    {
      char v28 = 1;
      sub_2445EF788();
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v14);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v13);
  }
}

uint64_t AppStateUpdateIdentifier.hashValue.getter()
{
  int v1 = *(char *)(v0 + 24);
  sub_2445EF948();
  if (v1 < 0)
  {
    sub_2445EF958();
  }
  else
  {
    sub_2445EF958();
    sub_2445EF198();
    if (v1)
    {
      sub_2445EF968();
      return sub_2445EF988();
    }
    sub_2445EF968();
  }
  sub_2445EF978();
  return sub_2445EF988();
}

uint64_t AppStateUpdateIdentifier.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DF70);
  uint64_t v35 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  MEMORY[0x270FA5388](v3);
  char v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DF78);
  uint64_t v34 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E8DF80);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_2445EE35C();
  uint64_t v14 = v38;
  sub_2445EF9E8();
  if (v14) {
    goto LABEL_10;
  }
  uint64_t v15 = v36;
  uint64_t v38 = v10;
  uint64_t v16 = sub_2445EF728();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v22 = sub_2445EF5A8();
    swift_allocError();
    uint64_t v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E8CEB0);
    *uint64_t v24 = &type metadata for AppStateUpdateIdentifier;
    sub_2445EF678();
    sub_2445EF598();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *MEMORY[0x263F8DCB0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v9);
LABEL_10:
    uint64_t v18 = (uint64_t)v37;
    return __swift_destroy_boxed_opaque_existential_0(v18);
  }
  if (*(unsigned char *)(v16 + 32))
  {
    char v42 = 1;
    sub_2445EE3B0();
    sub_2445EF668();
    uint64_t v17 = sub_2445EF718();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v9);
    uint64_t v18 = (uint64_t)v37;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    char v21 = 0x80;
  }
  else
  {
    char v41 = 0;
    sub_2445EE404();
    sub_2445EF668();
    char v40 = 0;
    uint64_t v26 = sub_2445EF6C8();
    uint64_t v19 = v27;
    uint64_t v36 = v26;
    char v39 = 1;
    uint64_t v28 = sub_2445EF6B8();
    uint64_t v29 = v38;
    LODWORD(v35) = v30 & 1;
    uint64_t v31 = v28;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v9);
    char v21 = v35;
    uint64_t v20 = v31;
    uint64_t v17 = v36;
    uint64_t v18 = (uint64_t)v37;
  }
  uint64_t v32 = v33;
  *uint64_t v33 = v17;
  v32[1] = v19;
  uint64_t v32[2] = v20;
  *((unsigned char *)v32 + 24) = v21;
  return __swift_destroy_boxed_opaque_existential_0(v18);
}

uint64_t sub_2445EE01C()
{
  if (*(char *)(v0 + 24) < 0)
  {
    sub_2445EF958();
    return sub_2445EF978();
  }
  char v1 = *(unsigned char *)(v0 + 24);
  sub_2445EF958();
  sub_2445EF198();
  if ((v1 & 1) == 0)
  {
    sub_2445EF968();
    return sub_2445EF978();
  }
  return sub_2445EF968();
}

uint64_t sub_2445EE0AC()
{
  int v1 = *(char *)(v0 + 24);
  sub_2445EF948();
  if (v1 < 0)
  {
    sub_2445EF958();
  }
  else
  {
    sub_2445EF958();
    sub_2445EF198();
    if (v1)
    {
      sub_2445EF968();
      return sub_2445EF988();
    }
    sub_2445EF968();
  }
  sub_2445EF978();
  return sub_2445EF988();
}

uint64_t sub_2445EE160@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AppStateUpdateIdentifier.init(from:)(a1, a2);
}

uint64_t sub_2445EE178(void *a1)
{
  return AppStateUpdateIdentifier.encode(to:)(a1);
}

BOOL _s22ManagedAppDistribution0B21StateUpdateIdentifierO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  int v5 = *(char *)(a1 + 24);
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  int v9 = *(char *)(a2 + 24);
  if (v5 < 0)
  {
    if (v9 < 0)
    {
      sub_2445C2824(*(void *)a1, v3, v4, v5);
      sub_2445C2824(v6, v7, v8, v9);
      return v2 == v6;
    }
    goto LABEL_15;
  }
  if (v9 < 0)
  {
    swift_bridgeObjectRetain();
LABEL_15:
    sub_2445E1828(v6, v7, v8, v9);
    sub_2445C2824(v2, v3, v4, v5);
    sub_2445C2824(v6, v7, v8, v9);
    return 0;
  }
  uint64_t v10 = *(void *)a1;
  if (v2 == v6 && v3 == v7)
  {
    sub_2445E1828(v10, v3, v8, v9);
    sub_2445E1828(v2, v3, v4, v5);
    sub_2445C2824(v2, v3, v4, v5);
    sub_2445C2824(v2, v3, v8, v9);
    if ((v5 & 1) == 0) {
      return (v9 & 1) == 0 && v4 == v8;
    }
  }
  else
  {
    char v12 = sub_2445EF848();
    sub_2445E1828(v6, v7, v8, v9);
    sub_2445E1828(v2, v3, v4, v5);
    sub_2445C2824(v2, v3, v4, v5);
    sub_2445C2824(v6, v7, v8, v9);
    BOOL result = 0;
    if ((v12 & 1) == 0) {
      return result;
    }
    if ((v5 & 1) == 0) {
      return (v9 & 1) == 0 && v4 == v8;
    }
  }
  return (v9 & 1) != 0;
}

unint64_t sub_2445EE35C()
{
  unint64_t result = qword_268E8DF58;
  if (!qword_268E8DF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DF58);
  }
  return result;
}

unint64_t sub_2445EE3B0()
{
  unint64_t result = qword_268E8DF60;
  if (!qword_268E8DF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DF60);
  }
  return result;
}

unint64_t sub_2445EE404()
{
  unint64_t result = qword_268E8DF68;
  if (!qword_268E8DF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DF68);
  }
  return result;
}

unint64_t sub_2445EE45C()
{
  unint64_t result = qword_268E8DF88;
  if (!qword_268E8DF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DF88);
  }
  return result;
}

uint64_t destroy for AppStateUpdateIdentifier(uint64_t a1)
{
  return sub_2445C2824(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for AppStateUpdateIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_2445E1828(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for AppStateUpdateIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_2445E1828(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_2445C2824(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AppStateUpdateIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_2445C2824(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppStateUpdateIdentifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 24) & 0x7E | (*(unsigned __int8 *)(a1 + 24) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AppStateUpdateIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_2445EE6A4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24) >> 7;
}

uint64_t sub_2445EE6B0(uint64_t result)
{
  *(unsigned char *)(result + 24) &= ~0x80u;
  return result;
}

uint64_t sub_2445EE6C0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = *(unsigned char *)(result + 24) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for AppStateUpdateIdentifier()
{
  return &type metadata for AppStateUpdateIdentifier;
}

ValueMetadata *type metadata accessor for AppStateUpdateIdentifier.CodingKeys()
{
  return &type metadata for AppStateUpdateIdentifier.CodingKeys;
}

unsigned char *_s22ManagedAppDistribution24AppStateUpdateIdentifierO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2445EE7C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStateUpdateIdentifier.ManagedAppDistributionCodingKeys()
{
  return &type metadata for AppStateUpdateIdentifier.ManagedAppDistributionCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AppStateUpdateIdentifier.MarketplaceKitCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2445EE898);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStateUpdateIdentifier.MarketplaceKitCodingKeys()
{
  return &type metadata for AppStateUpdateIdentifier.MarketplaceKitCodingKeys;
}

unint64_t sub_2445EE8D4()
{
  unint64_t result = qword_268E8DF90;
  if (!qword_268E8DF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DF90);
  }
  return result;
}

unint64_t sub_2445EE92C()
{
  unint64_t result = qword_268E8DF98;
  if (!qword_268E8DF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DF98);
  }
  return result;
}

unint64_t sub_2445EE984()
{
  unint64_t result = qword_268E8DFA0;
  if (!qword_268E8DFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DFA0);
  }
  return result;
}

unint64_t sub_2445EE9DC()
{
  unint64_t result = qword_268E8DFA8;
  if (!qword_268E8DFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DFA8);
  }
  return result;
}

unint64_t sub_2445EEA34()
{
  unint64_t result = qword_268E8DFB0;
  if (!qword_268E8DFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DFB0);
  }
  return result;
}

unint64_t sub_2445EEA8C()
{
  unint64_t result = qword_268E8DFB8;
  if (!qword_268E8DFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DFB8);
  }
  return result;
}

unint64_t sub_2445EEAE4()
{
  unint64_t result = qword_268E8DFC0;
  if (!qword_268E8DFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DFC0);
  }
  return result;
}

unint64_t sub_2445EEB3C()
{
  unint64_t result = qword_268E8DFC8;
  if (!qword_268E8DFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DFC8);
  }
  return result;
}

unint64_t sub_2445EEB94()
{
  unint64_t result = qword_268E8DFD0;
  if (!qword_268E8DFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E8DFD0);
  }
  return result;
}

uint64_t sub_2445EEBE8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x80000002445F97F0 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C7074656B72616DLL && a2 == 0xEE0074694B656361)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2445EECFC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_2445EF848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44496D657469 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2445EF848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2445EEDE8()
{
  return MEMORY[0x270EED9F0]();
}

uint64_t sub_2445EEDF8()
{
  return MEMORY[0x270EEDA90]();
}

uint64_t sub_2445EEE08()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_2445EEE18()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_2445EEE28()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_2445EEE38()
{
  return MEMORY[0x270EEF128]();
}

uint64_t sub_2445EEE48()
{
  return MEMORY[0x270EEF238]();
}

uint64_t sub_2445EEE58()
{
  return MEMORY[0x270EEF240]();
}

uint64_t sub_2445EEE68()
{
  return MEMORY[0x270EEF250]();
}

uint64_t sub_2445EEE78()
{
  return MEMORY[0x270EEF268]();
}

uint64_t sub_2445EEE88()
{
  return MEMORY[0x270EEF288]();
}

uint64_t sub_2445EEE98()
{
  return MEMORY[0x270EEF2A8]();
}

uint64_t sub_2445EEEA8()
{
  return MEMORY[0x270EEF2B8]();
}

uint64_t sub_2445EEEB8()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_2445EEEC8()
{
  return MEMORY[0x270EEF870]();
}

uint64_t sub_2445EEED8()
{
  return MEMORY[0x270EEF8C0]();
}

uint64_t sub_2445EEEE8()
{
  return MEMORY[0x270EEF8D8]();
}

uint64_t sub_2445EEEF8()
{
  return MEMORY[0x270EEFC10]();
}

uint64_t sub_2445EEF08()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_2445EEF18()
{
  return MEMORY[0x270EEFF18]();
}

uint64_t sub_2445EEF28()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_2445EEF38()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_2445EEF48()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_2445EEF58()
{
  return MEMORY[0x270EF0290]();
}

uint64_t sub_2445EEF68()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_2445EEF78()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_2445EEF88()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_2445EEF98()
{
  return MEMORY[0x270EF0ED0]();
}

uint64_t sub_2445EEFA8()
{
  return MEMORY[0x270EF0FA0]();
}

uint64_t sub_2445EEFB8()
{
  return MEMORY[0x270EF1060]();
}

uint64_t sub_2445EEFC8()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_2445EEFD8()
{
  return MEMORY[0x270EF17D0]();
}

uint64_t sub_2445EEFE8()
{
  return MEMORY[0x270F28690]();
}

uint64_t sub_2445EEFF8()
{
  return MEMORY[0x270FA2A68]();
}

uint64_t sub_2445EF008()
{
  return MEMORY[0x270FA2AB8]();
}

uint64_t sub_2445EF018()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_2445EF028()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_2445EF038()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_2445EF048()
{
  return MEMORY[0x270FA09D0]();
}

uint64_t sub_2445EF058()
{
  return MEMORY[0x270EEAA78]();
}

uint64_t sub_2445EF068()
{
  return MEMORY[0x270EEAA80]();
}

uint64_t sub_2445EF078()
{
  return MEMORY[0x270EEAA98]();
}

uint64_t sub_2445EF088()
{
  return MEMORY[0x270EEB0D8]();
}

uint64_t sub_2445EF098()
{
  return MEMORY[0x270EEB0F0]();
}

uint64_t sub_2445EF0A8()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_2445EF0B8()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_2445EF0C8()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_2445EF0D8()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_2445EF0E8()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_2445EF0F8()
{
  return MEMORY[0x270EF18D0]();
}

uint64_t sub_2445EF108()
{
  return MEMORY[0x270EF1958]();
}

uint64_t sub_2445EF118()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_2445EF128()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_2445EF138()
{
  return MEMORY[0x270EF19F8]();
}

uint64_t sub_2445EF148()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_2445EF158()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_2445EF168()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_2445EF178()
{
  return MEMORY[0x270EF1B10]();
}

uint64_t sub_2445EF188()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_2445EF198()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_2445EF1A8()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_2445EF1B8()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_2445EF1C8()
{
  return MEMORY[0x270F9D888]();
}

uint64_t sub_2445EF1D8()
{
  return MEMORY[0x270F9D8A8]();
}

uint64_t sub_2445EF1E8()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_2445EF1F8()
{
  return MEMORY[0x270F9D908]();
}

uint64_t sub_2445EF208()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_2445EF218()
{
  return MEMORY[0x270F9DA98]();
}

uint64_t sub_2445EF228()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_2445EF238()
{
  return MEMORY[0x270F9DB18]();
}

uint64_t sub_2445EF248()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_2445EF258()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_2445EF268()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_2445EF278()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_2445EF288()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_2445EF298()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_2445EF2A8()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_2445EF2B8()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_2445EF2C8()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_2445EF2D8()
{
  return MEMORY[0x270FA1E10]();
}

uint64_t sub_2445EF2E8()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_2445EF2F8()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_2445EF308()
{
  return MEMORY[0x270FA1E28]();
}

uint64_t sub_2445EF318()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_2445EF328()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_2445EF338()
{
  return MEMORY[0x270FA1F18]();
}

uint64_t sub_2445EF348()
{
  return MEMORY[0x270FA1F30]();
}

uint64_t sub_2445EF358()
{
  return MEMORY[0x270FA1F48]();
}

uint64_t sub_2445EF368()
{
  return MEMORY[0x270FA1F50]();
}

uint64_t sub_2445EF378()
{
  return MEMORY[0x270FA1F58]();
}

uint64_t sub_2445EF388()
{
  return MEMORY[0x270FA1F60]();
}

uint64_t sub_2445EF3B8()
{
  return MEMORY[0x270FA1F88]();
}

uint64_t sub_2445EF3C8()
{
  return MEMORY[0x270FA1F90]();
}

uint64_t sub_2445EF3D8()
{
  return MEMORY[0x270F9DEB0]();
}

uint64_t sub_2445EF3E8()
{
  return MEMORY[0x270F9E0E8]();
}

uint64_t sub_2445EF3F8()
{
  return MEMORY[0x270F9E178]();
}

uint64_t sub_2445EF408()
{
  return MEMORY[0x270FA2BE0]();
}

uint64_t sub_2445EF418()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_2445EF428()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_2445EF438()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_2445EF448()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_2445EF458()
{
  return MEMORY[0x270FA0DD0]();
}

uint64_t sub_2445EF468()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_2445EF478()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_2445EF488()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_2445EF498()
{
  return MEMORY[0x270F9E658]();
}

uint64_t sub_2445EF4A8()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_2445EF4B8()
{
  return MEMORY[0x270F9E708]();
}

uint64_t sub_2445EF4C8()
{
  return MEMORY[0x270F9E718]();
}

uint64_t sub_2445EF4D8()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_2445EF4E8()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_2445EF4F8()
{
  return MEMORY[0x270F9E8C8]();
}

uint64_t sub_2445EF508()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_2445EF518()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_2445EF528()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_2445EF538()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_2445EF548()
{
  return MEMORY[0x270F9E988]();
}

uint64_t sub_2445EF558()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_2445EF568()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_2445EF578()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_2445EF588()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_2445EF598()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_2445EF5A8()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_2445EF5B8()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_2445EF5C8()
{
  return MEMORY[0x270F9EDE8]();
}

uint64_t sub_2445EF5D8()
{
  return MEMORY[0x270F9EDF8]();
}

uint64_t sub_2445EF5E8()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_2445EF5F8()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_2445EF608()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_2445EF618()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_2445EF628()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_2445EF638()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_2445EF648()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_2445EF658()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_2445EF668()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_2445EF678()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_2445EF688()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_2445EF698()
{
  return MEMORY[0x270F9F290]();
}

uint64_t sub_2445EF6A8()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_2445EF6B8()
{
  return MEMORY[0x270F9F2E0]();
}

uint64_t sub_2445EF6C8()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_2445EF6D8()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_2445EF6E8()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_2445EF6F8()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_2445EF708()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_2445EF718()
{
  return MEMORY[0x270F9F358]();
}

uint64_t sub_2445EF728()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_2445EF738()
{
  return MEMORY[0x270F9F378]();
}

uint64_t sub_2445EF748()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_2445EF758()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_2445EF768()
{
  return MEMORY[0x270F9F3D0]();
}

uint64_t sub_2445EF778()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_2445EF788()
{
  return MEMORY[0x270F9F418]();
}

uint64_t sub_2445EF798()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_2445EF7A8()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_2445EF7B8()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_2445EF7C8()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_2445EF7D8()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_2445EF7E8()
{
  return MEMORY[0x270F9F498]();
}

uint64_t sub_2445EF7F8()
{
  return MEMORY[0x270F9F4A8]();
}

uint64_t sub_2445EF808()
{
  return MEMORY[0x270F9F4D0]();
}

uint64_t sub_2445EF818()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_2445EF828()
{
  return MEMORY[0x270F9F578]();
}

uint64_t sub_2445EF838()
{
  return MEMORY[0x270F9F658]();
}

uint64_t sub_2445EF848()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_2445EF858()
{
  return MEMORY[0x270F9F7E8]();
}

uint64_t sub_2445EF868()
{
  return MEMORY[0x270F9F808]();
}

uint64_t sub_2445EF878()
{
  return MEMORY[0x270F9F818]();
}

uint64_t sub_2445EF888()
{
  return MEMORY[0x270F9F878]();
}

uint64_t sub_2445EF898()
{
  return MEMORY[0x270F9F898]();
}

uint64_t sub_2445EF8A8()
{
  return MEMORY[0x270F9F8A8]();
}

uint64_t sub_2445EF8B8()
{
  return MEMORY[0x270F9FA40]();
}

uint64_t sub_2445EF8D8()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_2445EF8E8()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_2445EF8F8()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_2445EF908()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_2445EF918()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_2445EF928()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_2445EF938()
{
  return MEMORY[0x270F9FC28]();
}

uint64_t sub_2445EF948()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_2445EF958()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_2445EF968()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_2445EF978()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_2445EF988()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_2445EF998()
{
  return MEMORY[0x270F9FCF8]();
}

uint64_t sub_2445EF9A8()
{
  return MEMORY[0x270F9FD08]();
}

uint64_t sub_2445EF9B8()
{
  return MEMORY[0x270F9FD58]();
}

uint64_t sub_2445EF9C8()
{
  return MEMORY[0x270F9FD60]();
}

uint64_t sub_2445EF9D8()
{
  return MEMORY[0x270F9FD68]();
}

uint64_t sub_2445EF9E8()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_2445EF9F8()
{
  return MEMORY[0x270F9FD80]();
}

uint64_t sub_2445EFA08()
{
  return MEMORY[0x270F9FD88]();
}

uint64_t sub_2445EFA18()
{
  return MEMORY[0x270F9FD98]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x270EDA770](name, out_token, queue, handler);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x270EDAB30]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_allocateMetadataPack()
{
  return MEMORY[0x270FA01B0]();
}

uint64_t swift_allocateWitnessTablePack()
{
  return MEMORY[0x270FA01B8]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x270FA0238]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_deallocUninitializedObject()
{
  return MEMORY[0x270FA0248]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x270FA0420]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x270FA04F8]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x270FA0570]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x270FA0588]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}